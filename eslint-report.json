[{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\.detoxrc.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\.expo\\types\\router.d.ts","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token module","line":6,"column":9}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/* eslint-disable */\nimport * as Router from 'expo-router';\n\nexport * from 'expo-router';\n\ndeclare module 'expo-router' {\n  export namespace ExpoRouter {\n    export interface __routes<T extends string | object = string> {\n      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/conversationsExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/dashboard`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/errorCorrectionExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/exerciseSelection`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/grammarExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/levelAssessment`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/levelSelection`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/phrasesExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/readingExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/settings`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/spellingExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/vocabularyExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/vocabularyRevision`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/wordGamesExercise`; params?: Router.UnknownInputParams; } | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } };\n      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/conversationsExercise`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/dashboard`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/errorCorrectionExercise`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/exerciseSelection`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/grammarExercise`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/levelAssessment`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/levelSelection`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/phrasesExercise`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/readingExercise`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/settings`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/spellingExercise`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/vocabularyExercise`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/vocabularyRevision`; params?: Router.UnknownOutputParams; } | { pathname: `/tabs/wordGamesExercise`; params?: Router.UnknownOutputParams; } | { pathname: `/+not-found`, params: Router.UnknownOutputParams & {  } };\n      href: Router.RelativePathString | Router.ExternalPathString | `/${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `/tabs/conversationsExercise${`?${string}` | `#${string}` | ''}` | `/tabs/dashboard${`?${string}` | `#${string}` | ''}` | `/tabs/errorCorrectionExercise${`?${string}` | `#${string}` | ''}` | `/tabs/exerciseSelection${`?${string}` | `#${string}` | ''}` | `/tabs/grammarExercise${`?${string}` | `#${string}` | ''}` | `/tabs/levelAssessment${`?${string}` | `#${string}` | ''}` | `/tabs/levelSelection${`?${string}` | `#${string}` | ''}` | `/tabs/phrasesExercise${`?${string}` | `#${string}` | ''}` | `/tabs/readingExercise${`?${string}` | `#${string}` | ''}` | `/tabs/settings${`?${string}` | `#${string}` | ''}` | `/tabs/spellingExercise${`?${string}` | `#${string}` | ''}` | `/tabs/vocabularyExercise${`?${string}` | `#${string}` | ''}` | `/tabs/vocabularyRevision${`?${string}` | `#${string}` | ''}` | `/tabs/wordGamesExercise${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/conversationsExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/dashboard`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/errorCorrectionExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/exerciseSelection`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/grammarExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/levelAssessment`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/levelSelection`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/phrasesExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/readingExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/settings`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/spellingExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/vocabularyExercise`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/vocabularyRevision`; params?: Router.UnknownInputParams; } | { pathname: `/tabs/wordGamesExercise`; params?: Router.UnknownInputParams; } | `/+not-found${`?${string}` | `#${string}` | ''}` | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } };\n    }\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\contexts\\AppProvider.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'AppProvider' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"AppProvider"},"fix":{"range":[90,107],"text":""},"desc":"Remove unused variable 'AppProvider'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-unused-vars","severity":1,"message":"'TestComponent' is assigned a value but never used.","line":7,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"TestComponent"},"fix":{"range":[233,267],"text":""},"desc":"Remove unused variable 'TestComponent'."}]},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":14,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport AppProvider from '../../src/contexts/AppProvider';\n\ndescribe('AppProvider', () => {\n  it('fournit un contexte global sans erreur', () => {\n    const TestComponent = () => <></>;\n    render(\n      <AppProvider>\n        <TestComponent />\n      </AppProvider>\n    );\n    // Si aucun crash, le test passe\n    expect(true).toBe(true);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\contexts\\ProgressContext.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressProvider' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressProvider"},"fix":{"range":[92,109],"text":""},"desc":"Remove unused variable 'ProgressProvider'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-unused-vars","severity":1,"message":"'TestComponent' is assigned a value but never used.","line":8,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"TestComponent"},"fix":{"range":[277,368],"text":""},"desc":"Remove unused variable 'TestComponent'."}]},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":11}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { ProgressProvider, useProgress } from '../../src/contexts/ProgressContext';\n\ndescribe('ProgressContext', () => {\n  it('fournit des valeurs par défaut', () => {\n    let contextValue;\n    const TestComponent = () => {\n      contextValue = useProgress();\n      return null;\n    };\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n    expect(contextValue).toBeDefined();\n    expect(contextValue.progress).toBeDefined();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\contexts\\SettingContext.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'SettingsProvider' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"SettingsProvider"},"fix":{"range":[92,109],"text":""},"desc":"Remove unused variable 'SettingsProvider'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-unused-vars","severity":1,"message":"'TestComponent' is assigned a value but never used.","line":8,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"TestComponent"},"fix":{"range":[282,393],"text":""},"desc":"Remove unused variable 'TestComponent'."}]},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { SettingsProvider, SettingsContext } from '../../src/contexts/SettingContext';\n\ndescribe('SettingContext', () => {\n  it('fournit des paramètres par défaut', () => {\n    let contextValue;\n    const TestComponent = () => {\n      contextValue = React.useContext(SettingsContext);\n      return null;\n    };\n    render(\n      <SettingsProvider>\n        <TestComponent />\n      </SettingsProvider>\n    );\n    expect(contextValue).toBeDefined();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\contexts\\ThemeContext.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'ThemeProvider' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"ThemeProvider"},"fix":{"range":[92,106],"text":""},"desc":"Remove unused variable 'ThemeProvider'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-unused-vars","severity":1,"message":"'TestComponent' is assigned a value but never used.","line":8,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"TestComponent"},"fix":{"range":[266,374],"text":""},"desc":"Remove unused variable 'TestComponent'."}]},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":11}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { ThemeProvider, ThemeContext } from '../../src/contexts/ThemeContext';\n\ndescribe('ThemeContext', () => {\n  it('fournit un thème par défaut', () => {\n    let contextValue;\n    const TestComponent = () => {\n      contextValue = React.useContext(ThemeContext);\n      return null;\n    };\n    render(\n      <ThemeProvider>\n        <TestComponent />\n      </ThemeProvider>\n    );\n    expect(contextValue).toBeDefined();\n    expect(contextValue.colors).toBeDefined();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\conversationA1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import conversationA1 from '../../src/data/conversation/A1';\r\n\r\ndescribe('conversationA1 data', () => {\r\n  it('should be an array', () => {\r\n    expect(Array.isArray(conversationA1)).toBe(true);\r\n    expect(conversationA1.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\conversationA2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import conversationA2 from '../../src/data/conversation/A2';\r\n\r\ndescribe('conversationA2 data', () => {\r\n  it('should be an array', () => {\r\n    expect(Array.isArray(conversationA2)).toBe(true);\r\n    expect(conversationA2.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\conversationB1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import conversationB1 from '../../src/data/conversation/B1';\r\n\r\ndescribe('conversationB1 data', () => {\r\n  it('should be an array', () => {\r\n    expect(Array.isArray(conversationB1)).toBe(true);\r\n    expect(conversationB1.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\conversationB2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import conversationB2 from '../../src/data/conversation/B2';\r\n\r\ndescribe('conversationB2 data', () => {\r\n  it('should be an array', () => {\r\n    expect(Array.isArray(conversationB2)).toBe(true);\r\n    expect(conversationB2.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\conversationC1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import conversationC1 from '../../src/data/conversation/C1';\r\n\r\ndescribe('conversationC1 data', () => {\r\n  it('should be an array', () => {\r\n    expect(Array.isArray(conversationC1)).toBe(true);\r\n    expect(conversationC1.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\conversationC2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import conversationC2 from '../../src/data/conversation/C2';\r\n\r\ndescribe('conversationC2 data', () => {\r\n  it('should be an array', () => {\r\n    expect(Array.isArray(conversationC2)).toBe(true);\r\n    expect(conversationC2.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\dataGlobal.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":7,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":8,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":19,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":21,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":22,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":23,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":13}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as data from '../../src/data';\r\n\r\ndescribe('data (global)', () => {\r\n  it('doit exposer des modules principaux attendus', () => {\r\n    expect(data).toBeDefined();\r\n    expect(typeof data).toBe('object');\r\n    expect(Object.keys(data)).toEqual(\r\n      expect.arrayContaining([\r\n        'vocabulary',\r\n        'vocabularyA2',\r\n        'vocabularyB1',\r\n        'vocabularyB2',\r\n        'vocabularyC1',\r\n        'vocabularyC2',\r\n        'vocabularyBonus',\r\n      ])\r\n    );\r\n  });\r\n  it('chaque module exporté doit être importable et non vide', () => {\r\n    Object.values(data).forEach(mod => {\r\n      expect(mod).toBeDefined();\r\n      expect(typeof mod).toBe('object');\r\n      expect(Object.keys(mod).length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\dataIndex.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":7,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":8,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":19,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":21,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":13}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as data from '../../src/data';\r\n\r\ndescribe('data index', () => {\r\n  it('doit exporter les modules principaux attendus', () => {\r\n    expect(data).toBeDefined();\r\n    expect(typeof data).toBe('object');\r\n    expect(Object.keys(data)).toEqual(\r\n      expect.arrayContaining([\r\n        'vocabulary',\r\n        'vocabularyA2',\r\n        'vocabularyB1',\r\n        'vocabularyB2',\r\n        'vocabularyC1',\r\n        'vocabularyC2',\r\n        'vocabularyBonus',\r\n      ])\r\n    );\r\n  });\r\n  it('chaque module doit être importable', () => {\r\n    Object.values(data).forEach(mod => {\r\n      expect(mod).toBeDefined();\r\n    });\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\phrasesA1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import phrasesA1 from '../../src/data/phrases/1';\r\n\r\ndescribe('phrasesA1 data', () => {\r\n  it('should have categories', () => {\r\n    expect(Array.isArray(phrasesA1.categories)).toBe(true);\r\n    expect(phrasesA1.categories.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have phrases', () => {\r\n    expect(Array.isArray(phrasesA1.phrases)).toBe(true);\r\n    expect(phrasesA1.phrases.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\phrasesA2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import phrasesA2 from '../../src/data/phrases/2';\r\n\r\ndescribe('phrasesA2 data', () => {\r\n  it('should have categories', () => {\r\n    expect(Array.isArray(phrasesA2.categories)).toBe(true);\r\n    expect(phrasesA2.categories.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have phrases', () => {\r\n    expect(Array.isArray(phrasesA2.phrases)).toBe(true);\r\n    expect(phrasesA2.phrases.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\phrasesB1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import phrasesB1 from '../../src/data/phrases/3';\r\n\r\ndescribe('phrasesB1 data', () => {\r\n  it('should have categories', () => {\r\n    expect(Array.isArray(phrasesB1.categories)).toBe(true);\r\n    expect(phrasesB1.categories.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have phrases', () => {\r\n    expect(Array.isArray(phrasesB1.phrases)).toBe(true);\r\n    expect(phrasesB1.phrases.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\phrasesB2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import phrasesB2 from '../../src/data/phrases/4';\r\n\r\ndescribe('phrasesB2 data', () => {\r\n  it('should have categories', () => {\r\n    expect(Array.isArray(phrasesB2.categories)).toBe(true);\r\n    expect(phrasesB2.categories.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have phrases', () => {\r\n    expect(Array.isArray(phrasesB2.phrases)).toBe(true);\r\n    expect(phrasesB2.phrases.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\phrasesBonus.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import phrasesBonus from '../../src/data/phrases/bonus';\r\n\r\ndescribe('phrasesBonus data', () => {\r\n  it('should have categories', () => {\r\n    expect(Array.isArray(phrasesBonus.categories)).toBe(true);\r\n    expect(phrasesBonus.categories.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have phrases', () => {\r\n    expect(Array.isArray(phrasesBonus.phrases)).toBe(true);\r\n    expect(phrasesBonus.phrases.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\phrasesC1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import phrasesC1 from '../../src/data/phrases/5';\r\n\r\ndescribe('phrasesC1 data', () => {\r\n  it('should have categories', () => {\r\n    expect(Array.isArray(phrasesC1.categories)).toBe(true);\r\n    expect(phrasesC1.categories.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have phrases', () => {\r\n    expect(Array.isArray(phrasesC1.phrases)).toBe(true);\r\n    expect(phrasesC1.phrases.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\phrasesC2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import phrasesC2 from '../../src/data/phrases/6';\r\n\r\ndescribe('phrasesC2 data', () => {\r\n  it('should have categories', () => {\r\n    expect(Array.isArray(phrasesC2.categories)).toBe(true);\r\n    expect(phrasesC2.categories.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have phrases', () => {\r\n    expect(Array.isArray(phrasesC2.phrases)).toBe(true);\r\n    expect(phrasesC2.phrases.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\readingA1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import readingA1 from '../../src/data/reading/1';\r\n\r\ndescribe('readingA1 data', () => {\r\n  it('should have texts', () => {\r\n    expect(Array.isArray(readingA1.texts)).toBe(true);\r\n    expect(readingA1.texts.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have questions', () => {\r\n    expect(Array.isArray(readingA1.questions)).toBe(true);\r\n    expect(readingA1.questions.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\readingA2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import readingA2 from '../../src/data/reading/2';\r\n\r\ndescribe('readingA2 data', () => {\r\n  it('should have texts', () => {\r\n    expect(Array.isArray(readingA2.texts)).toBe(true);\r\n    expect(readingA2.texts.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have questions', () => {\r\n    expect(Array.isArray(readingA2.questions)).toBe(true);\r\n    expect(readingA2.questions.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\readingB1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import readingB1 from '../../src/data/reading/3';\r\n\r\ndescribe('readingB1 data', () => {\r\n  it('should have texts', () => {\r\n    expect(Array.isArray(readingB1.texts)).toBe(true);\r\n    expect(readingB1.texts.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have questions', () => {\r\n    expect(Array.isArray(readingB1.questions)).toBe(true);\r\n    expect(readingB1.questions.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\readingB2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import readingB2 from '../../src/data/reading/4';\r\n\r\ndescribe('readingB2 data', () => {\r\n  it('should have texts', () => {\r\n    expect(Array.isArray(readingB2.texts)).toBe(true);\r\n    expect(readingB2.texts.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have questions', () => {\r\n    expect(Array.isArray(readingB2.questions)).toBe(true);\r\n    expect(readingB2.questions.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\readingBonus.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import readingBonus from '../../src/data/reading/bonus';\r\n\r\ndescribe('readingBonus data', () => {\r\n  it('should have texts', () => {\r\n    expect(Array.isArray(readingBonus.texts)).toBe(true);\r\n    expect(readingBonus.texts.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have questions', () => {\r\n    expect(Array.isArray(readingBonus.questions)).toBe(true);\r\n    expect(readingBonus.questions.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\readingC1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import readingC1 from '../../src/data/reading/5';\r\n\r\ndescribe('readingC1 data', () => {\r\n  it('should have texts', () => {\r\n    expect(Array.isArray(readingC1.texts)).toBe(true);\r\n    expect(readingC1.texts.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have questions', () => {\r\n    expect(Array.isArray(readingC1.questions)).toBe(true);\r\n    expect(readingC1.questions.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\readingC2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import readingC2 from '../../src/data/reading/6';\r\n\r\ndescribe('readingC2 data', () => {\r\n  it('should have texts', () => {\r\n    expect(Array.isArray(readingC2.texts)).toBe(true);\r\n    expect(readingC2.texts.length).toBeGreaterThan(0);\r\n  });\r\n  it('should have questions', () => {\r\n    expect(Array.isArray(readingC2.questions)).toBe(true);\r\n    expect(readingC2.questions.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\vocabularyA1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":19,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":15}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import vocabularyA1 from '../../src/data/vocabulary/1';\r\n\r\ndescribe('vocabularyA1 data', () => {\r\n  it('doit avoir une propriété exercises qui est un tableau non vide', () => {\r\n    expect(Array.isArray(vocabularyA1.exercises)).toBe(true);\r\n    expect(vocabularyA1.exercises.length).toBeGreaterThan(0);\r\n  });\r\n  it('chaque catégorie doit avoir un tableau words non vide', () => {\r\n    vocabularyA1.exercises.forEach(cat => {\r\n      expect(Array.isArray(cat.words)).toBe(true);\r\n      expect(cat.words.length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n  it('chaque mot doit avoir les clés word, translation, example', () => {\r\n    vocabularyA1.exercises.forEach(cat => {\r\n      cat.words.forEach(entry => {\r\n        expect(entry).toHaveProperty('word');\r\n        expect(entry).toHaveProperty('translation');\r\n        expect(entry).toHaveProperty('example');\r\n      });\r\n    });\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\vocabularyA1_identite.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":12,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":13}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { vocab as identiteVocab } from '../../src/data/vocabulary/1/categories/01_identite';\r\n\r\ndescribe('vocabulaire identité (A1)', () => {\r\n  it('doit avoir un tableau de mots non vide', () => {\r\n    expect(Array.isArray(identiteVocab.words)).toBe(true);\r\n    expect(identiteVocab.words.length).toBeGreaterThan(0);\r\n  });\r\n  it('chaque mot doit avoir les clés word, translation, example', () => {\r\n    identiteVocab.words.forEach(entry => {\r\n      expect(entry).toHaveProperty('word');\r\n      expect(entry).toHaveProperty('translation');\r\n      expect(entry).toHaveProperty('example');\r\n    });\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\vocabularyA2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":19,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":15}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import vocabularyA2 from '../../src/data/vocabulary/2';\r\n\r\ndescribe('vocabularyA2 data', () => {\r\n  it('doit avoir une propriété exercises qui est un tableau non vide', () => {\r\n    expect(Array.isArray(vocabularyA2.exercises)).toBe(true);\r\n    expect(vocabularyA2.exercises.length).toBeGreaterThan(0);\r\n  });\r\n  it('chaque catégorie doit avoir un tableau words non vide', () => {\r\n    vocabularyA2.exercises.forEach(cat => {\r\n      expect(Array.isArray(cat.words)).toBe(true);\r\n      expect(cat.words.length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n  it('chaque mot doit avoir les clés word, translation, example', () => {\r\n    vocabularyA2.exercises.forEach(cat => {\r\n      cat.words.forEach(entry => {\r\n        expect(entry).toHaveProperty('word');\r\n        expect(entry).toHaveProperty('translation');\r\n        expect(entry).toHaveProperty('example');\r\n      });\r\n    });\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\vocabularyB1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":19,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":15}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import vocabularyB1 from '../../src/data/vocabulary/3';\r\n\r\ndescribe('vocabularyB1 data', () => {\r\n  it('doit avoir une propriété exercises qui est un tableau non vide', () => {\r\n    expect(Array.isArray(vocabularyB1.exercises)).toBe(true);\r\n    expect(vocabularyB1.exercises.length).toBeGreaterThan(0);\r\n  });\r\n  it('chaque catégorie doit avoir un tableau words non vide', () => {\r\n    vocabularyB1.exercises.forEach(cat => {\r\n      expect(Array.isArray(cat.words)).toBe(true);\r\n      expect(cat.words.length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n  it('chaque mot doit avoir les clés word, translation, example', () => {\r\n    vocabularyB1.exercises.forEach(cat => {\r\n      cat.words.forEach(entry => {\r\n        expect(entry).toHaveProperty('word');\r\n        expect(entry).toHaveProperty('translation');\r\n        expect(entry).toHaveProperty('example');\r\n      });\r\n    });\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\vocabularyB2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":19,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":15}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import vocabularyB2 from '../../src/data/vocabulary/4';\r\n\r\ndescribe('vocabularyB2 data', () => {\r\n  it('doit avoir une propriété exercises qui est un tableau non vide', () => {\r\n    expect(Array.isArray(vocabularyB2.exercises)).toBe(true);\r\n    expect(vocabularyB2.exercises.length).toBeGreaterThan(0);\r\n  });\r\n  it('chaque catégorie doit avoir un tableau words non vide', () => {\r\n    vocabularyB2.exercises.forEach(cat => {\r\n      expect(Array.isArray(cat.words)).toBe(true);\r\n      expect(cat.words.length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n  it('chaque mot doit avoir les clés word, translation, example', () => {\r\n    vocabularyB2.exercises.forEach(cat => {\r\n      cat.words.forEach(entry => {\r\n        expect(entry).toHaveProperty('word');\r\n        expect(entry).toHaveProperty('translation');\r\n        expect(entry).toHaveProperty('example');\r\n      });\r\n    });\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\vocabularyBonus.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":20,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":21,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":17},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":22,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":23,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":26,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":15}],"suppressedMessages":[],"errorCount":15,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import vocabularyBonus from '../../src/data/vocabulary/bonus';\r\n\r\ndescribe('vocabularyBonus data', () => {\r\n  it('doit avoir une propriété exercises qui est un tableau non vide', () => {\r\n    expect(Array.isArray(vocabularyBonus.exercises)).toBe(true);\r\n    expect(vocabularyBonus.exercises.length).toBeGreaterThan(0);\r\n  });\r\n  it('chaque catégorie doit avoir un tableau words non vide', () => {\r\n    vocabularyBonus.exercises.forEach(cat => {\r\n      expect(Array.isArray(cat.words)).toBe(true);\r\n      expect(cat.words.length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n  it('chaque mot doit avoir les clés word et example, et au moins translation ou trending', () => {\r\n    vocabularyBonus.exercises.forEach(cat => {\r\n      cat.words.forEach(entry => {\r\n        expect(entry).toHaveProperty('word');\r\n        expect(entry).toHaveProperty('example');\r\n        // Certains mots peuvent avoir trending au lieu de translation\r\n        expect(entry).toEqual(\r\n          expect.objectContaining({\r\n            word: expect.any(String),\r\n            example: expect.any(String),\r\n          })\r\n        );\r\n        expect(entry.translation || entry.trending).toBeTruthy();\r\n      });\r\n    });\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\vocabularyC1.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":19,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":15}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import vocabularyC1 from '../../src/data/vocabulary/5';\r\n\r\ndescribe('vocabularyC1 data', () => {\r\n  it('doit avoir une propriété exercises qui est un tableau non vide', () => {\r\n    expect(Array.isArray(vocabularyC1.exercises)).toBe(true);\r\n    expect(vocabularyC1.exercises.length).toBeGreaterThan(0);\r\n  });\r\n  it('chaque catégorie doit avoir un tableau words non vide', () => {\r\n    vocabularyC1.exercises.forEach(cat => {\r\n      expect(Array.isArray(cat.words)).toBe(true);\r\n      expect(cat.words.length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n  it('chaque mot doit avoir les clés word, translation, example', () => {\r\n    vocabularyC1.exercises.forEach(cat => {\r\n      cat.words.forEach(entry => {\r\n        expect(entry).toHaveProperty('word');\r\n        expect(entry).toHaveProperty('translation');\r\n        expect(entry).toHaveProperty('example');\r\n      });\r\n    });\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\data\\vocabularyC2.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":5,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":19,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":15}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import vocabularyC2 from '../../src/data/vocabulary/6';\r\n\r\ndescribe('vocabularyC2 data', () => {\r\n  it('doit avoir une propriété exercises qui est un tableau non vide', () => {\r\n    expect(Array.isArray(vocabularyC2.exercises)).toBe(true);\r\n    expect(vocabularyC2.exercises.length).toBeGreaterThan(0);\r\n  });\r\n  it('chaque catégorie doit avoir un tableau words non vide', () => {\r\n    vocabularyC2.exercises.forEach(cat => {\r\n      expect(Array.isArray(cat.words)).toBe(true);\r\n      expect(cat.words.length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n  it('chaque mot doit avoir les clés word, translation, example', () => {\r\n    vocabularyC2.exercises.forEach(cat => {\r\n      cat.words.forEach(entry => {\r\n        expect(entry).toHaveProperty('word');\r\n        expect(entry).toHaveProperty('translation');\r\n        expect(entry).toHaveProperty('example');\r\n      });\r\n    });\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\exercise-common\\CategorySelector\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'CategorySelector' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"CategorySelector"},"fix":{"range":[101,123],"text":""},"desc":"Remove unused variable 'CategorySelector'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":20,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":29,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":30,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":30,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":33,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":33,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":34,"column":30,"nodeType":"Identifier","messageId":"undef","endLine":34,"endColumn":34},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":44,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":44,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":47,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":47,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":57,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":57,"endColumn":11}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport CategorySelector from '../../../src/components/exercise-common/CategorySelector';\n\n// Mock LinearGradient (expo)\njest.mock('expo-linear-gradient', () => {\n  const { View } = require('react-native');\n  return {\n    LinearGradient: View,\n  };\n});\n\ndescribe('CategorySelector', () => {\n  const categories = [\n    { id: 'cat1', name: 'Catégorie 1' },\n    { id: 'cat2', name: 'Catégorie 2' },\n  ];\n  const primaryColor = '#123456';\n\n  it('affiche toutes les catégories', () => {\n    const { getByText } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory={'cat1'}\n        onSelectCategory={() => {}}\n        primaryColor={primaryColor}\n      />\n    );\n    expect(getByText('Catégorie 1')).toBeTruthy();\n    expect(getByText('Catégorie 2')).toBeTruthy();\n  });\n\n  it('appelle onSelectCategory lors du clic sur une catégorie', () => {\n    const onSelectCategory = jest.fn();\n    const { getByText } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory={'cat1'}\n        onSelectCategory={onSelectCategory}\n        primaryColor={primaryColor}\n      />\n    );\n    fireEvent.press(getByText('Catégorie 2'));\n    expect(onSelectCategory).toHaveBeenCalledWith('cat2');\n  });\n\n  it('affiche le sparkle ✨ sur la catégorie sélectionnée', () => {\n    const { getByText } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory={'cat2'}\n        onSelectCategory={() => {}}\n        primaryColor={primaryColor}\n      />\n    );\n    // L’emoji ✨ n’est affiché que sur la catégorie sélectionnée\n    expect(getByText('✨')).toBeTruthy();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\exercise-common\\ExerciseCard\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseCard' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseCard"},"fix":{"range":[101,119],"text":""},"desc":"Remove unused variable 'ExerciseCard'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":17,"column":14,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":18},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":21,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":23,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":24,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":27,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":27,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":29,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":32,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":32,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":33,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":33,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":36,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":36,"endColumn":11}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport ExerciseCard from '../../../src/components/exercise-common/ExerciseCard';\n\n// Mock Ionicons (expo)\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: () => null,\n}));\n\ndescribe('ExerciseCard', () => {\n  const props = {\n    title: 'Titre exercice',\n    description: 'Description exercice',\n    icon: '🔥',\n    progress: 50,\n    color: '#123456',\n    onPress: jest.fn(),\n    isNew: false,\n  };\n\n  it('affiche le titre et la description', () => {\n    const { getByText } = render(<ExerciseCard {...props} />);\n    expect(getByText('Titre exercice')).toBeTruthy();\n    expect(getByText('Description exercice')).toBeTruthy();\n  });\n\n  it('affiche le bouton Commencer', () => {\n    const { getByText } = render(<ExerciseCard {...props} />);\n    expect(getByText('Commencer')).toBeTruthy();\n  });\n\n  it('appelle onPress lors du clic sur le bouton Commencer', () => {\n    const onPress = jest.fn();\n    const { getByText } = render(<ExerciseCard {...props} onPress={onPress} />);\n    fireEvent.press(getByText('Commencer'));\n    expect(onPress).toHaveBeenCalled();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\exercise-common\\ExerciseFeedback\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseFeedback' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseFeedback"},"fix":{"range":[101,123],"text":""},"desc":"Remove unused variable 'ExerciseFeedback'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":11,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":19,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":20,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":23,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":24,"column":23,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":27},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":35,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":11}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport ExerciseFeedback from '../../../src/components/exercise-common/ExerciseFeedback';\n\n// Mock Ionicons (expo)\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: () => null,\n}));\n\ndescribe('ExerciseFeedback', () => {\n  it('affiche le message et l’explication', () => {\n    const { getByText } = render(\n      <ExerciseFeedback\n        message=\"Bonne réponse !\"\n        explanation=\"Explication détaillée.\"\n        showDismissButton={true}\n      />\n    );\n    expect(getByText('Bonne réponse !')).toBeTruthy();\n    expect(getByText('Explication détaillée.')).toBeTruthy();\n  });\n\n  it('appelle onDismiss lors du clic sur le bouton de fermeture', () => {\n    const onDismiss = jest.fn();\n    const { getAllByRole } = render(\n      <ExerciseFeedback\n        message=\"Test\"\n        onDismiss={onDismiss}\n        showDismissButton={true}\n      />\n    );\n    // Il peut y avoir plusieurs TouchableOpacity, on prend le dernier (bouton close)\n    const buttons = getAllByRole('button');\n    fireEvent.press(buttons[buttons.length - 1]);\n    expect(onDismiss).toHaveBeenCalled();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\exercise-common\\ExerciseFooter\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseFooter' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseFooter"},"fix":{"range":[101,121],"text":""},"desc":"Remove unused variable 'ExerciseFooter'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":11,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":15,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":16,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":19,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":20,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":32},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":25,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":25,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":28,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":28,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":29,"column":30,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":34},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":34,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":34,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":37,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":37,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":38,"column":20,"nodeType":"Identifier","messageId":"undef","endLine":38,"endColumn":24},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":43,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":43,"endColumn":11}],"suppressedMessages":[],"errorCount":14,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport ExerciseFooter from '../../../src/components/exercise-common/ExerciseFooter';\n\n// Mock Ionicons (expo)\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: () => null,\n}));\n\ndescribe('ExerciseFooter', () => {\n  it('affiche les labels des boutons', () => {\n    const { getByText } = render(\n      <ExerciseFooter primaryLabel=\"Suivant\" secondaryLabel=\"Retour\" />\n    );\n    expect(getByText('Suivant')).toBeTruthy();\n    expect(getByText('Retour')).toBeTruthy();\n  });\n\n  it('appelle onPrimaryPress lors du clic sur le bouton principal', () => {\n    const onPrimaryPress = jest.fn();\n    const { getByText } = render(\n      <ExerciseFooter onPrimaryPress={onPrimaryPress} />\n    );\n    fireEvent.press(getByText('Continuer'));\n    expect(onPrimaryPress).toHaveBeenCalled();\n  });\n\n  it('appelle onSecondaryPress lors du clic sur le bouton secondaire', () => {\n    const onSecondaryPress = jest.fn();\n    const { getByText } = render(\n      <ExerciseFooter onSecondaryPress={onSecondaryPress} />\n    );\n    fireEvent.press(getByText('Précédent'));\n    expect(onSecondaryPress).toHaveBeenCalled();\n  });\n\n  it('appelle onSkip lors du clic sur le bouton Passer', () => {\n    const onSkip = jest.fn();\n    const { getByText } = render(\n      <ExerciseFooter onSkip={onSkip} />\n    );\n    fireEvent.press(getByText('Passer'));\n    expect(onSkip).toHaveBeenCalled();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\exercise-common\\ExerciseHeader\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseHeader' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseHeader"},"fix":{"range":[101,121],"text":""},"desc":"Remove unused variable 'ExerciseHeader'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":11,"column":35,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":39},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":25,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":25,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":26,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":30,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":30,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":31,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":31,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":34,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":34,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":35,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":42,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":42,"endColumn":11}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport ExerciseHeader from '../../../src/components/exercise-common/ExerciseHeader';\n\n// Mock Ionicons (expo)\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: () => null,\n}));\n// Mock useNavigation\njest.mock('@react-navigation/native', () => ({\n  useNavigation: () => ({ goBack: jest.fn() }),\n}));\n// Mock constants\njest.mock('../../../src/utils/constants', () => ({\n  EXERCISE_TYPES: {\n    vocabulary: { color: '#000', icon: '📚' },\n    grammar: { color: '#111', icon: '📝' },\n  },\n  LANGUAGE_LEVELS: {\n    '1': { color: '#222' },\n    bonus: { color: '#333' },\n  },\n}));\n\ndescribe('ExerciseHeader', () => {\n  it('affiche le titre et le badge de niveau', () => {\n    const { getByText } = render(\n      <ExerciseHeader title=\"Titre test\" level=\"1\" />\n    );\n    expect(getByText('Titre test')).toBeTruthy();\n    expect(getByText('1')).toBeTruthy();\n  });\n\n  it('appelle onClose lors du clic sur le bouton retour', () => {\n    const onClose = jest.fn();\n    const { getAllByRole } = render(\n      <ExerciseHeader title=\"Test\" level=\"1\" onClose={onClose} />\n    );\n    // Le bouton retour est le premier TouchableOpacity\n    const buttons = getAllByRole('button');\n    fireEvent.press(buttons[0]);\n    expect(onClose).toHaveBeenCalled();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\exercise-common\\InstructionBox\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'InstructionBox' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"InstructionBox"},"fix":{"range":[101,121],"text":""},"desc":"Remove unused variable 'InstructionBox'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":11,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":15,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":16,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":19,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":27,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":27,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":28,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":28,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":29,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":32,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":32,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":41,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":41,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":45,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":45,"endColumn":11}],"suppressedMessages":[],"errorCount":12,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport InstructionBox from '../../../src/components/exercise-common/InstructionBox';\n\n// Mock Ionicons (expo)\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: () => null,\n}));\n\ndescribe('InstructionBox', () => {\n  it('affiche le titre et les instructions', () => {\n    const { getByText } = render(\n      <InstructionBox title=\"Consignes\" instructions=\"Lisez attentivement.\" />\n    );\n    expect(getByText('Consignes')).toBeTruthy();\n    expect(getByText('Lisez attentivement.')).toBeTruthy();\n  });\n\n  it('affiche les exemples et astuces', () => {\n    const { getByText } = render(\n      <InstructionBox\n        instructions=\"Test\"\n        examples={[\"Exemple 1\", \"Exemple 2\"]}\n        tips={[\"Astuce 1\"]}\n      />\n    );\n    expect(getByText('Exemples:')).toBeTruthy();\n    expect(getByText('Exemple 1')).toBeTruthy();\n    expect(getByText('Astuce 1')).toBeTruthy();\n  });\n\n  it('toggle l’expansion au clic sur l’en-tête', () => {\n    const { getByText, queryByText } = render(\n      <InstructionBox\n        title=\"Titre\"\n        instructions=\"Instruction à cacher\"\n        initiallyExpanded={true}\n      />\n    );\n    // L’instruction est visible au départ\n    expect(getByText('Instruction à cacher')).toBeTruthy();\n    // Clique sur l’en-tête pour replier\n    fireEvent.press(getByText('Titre'));\n    // L’instruction ne doit plus être visible\n    expect(queryByText('Instruction à cacher')).toBeNull();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\exercise-common\\NavigationButtons\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[101,124],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":17,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":18,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":22,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":23,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":26,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":27,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":27,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":34,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":34,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":38,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":38,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":39,"column":20,"nodeType":"Identifier","messageId":"undef","endLine":39,"endColumn":24},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":45,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":45,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":49,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":49,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":53,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":53,"endColumn":11}],"suppressedMessages":[],"errorCount":14,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport NavigationButtons from '../../../src/components/exercise-common/NavigationButtons';\n\n// Mock Ionicons (expo)\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: () => null,\n}));\n// Mock LinearGradient (expo)\njest.mock('expo-linear-gradient', () => {\n  const { View } = require('react-native');\n  return {\n    LinearGradient: View,\n  };\n});\n\ndescribe('NavigationButtons', () => {\n  it('affiche les labels des boutons', () => {\n    const { getByText } = render(\n      <NavigationButtons buttonLabels={{ previous: 'Retour', next: 'Avancer', finish: 'Finir' }} />\n    );\n    expect(getByText('Retour')).toBeTruthy();\n    expect(getByText('Avancer')).toBeTruthy();\n  });\n\n  it('appelle onPrevious lors du clic sur le bouton précédent', () => {\n    const onPrevious = jest.fn();\n    const { getByText } = render(\n      <NavigationButtons onPrevious={onPrevious} />\n    );\n    fireEvent.press(getByText('Précédent'));\n    // L’animation utilise setTimeout, on laisse passer le délai\n    setTimeout(() => {\n      expect(onPrevious).toHaveBeenCalled();\n    }, 70);\n  });\n\n  it('appelle onNext lors du clic sur le bouton suivant', () => {\n    const onNext = jest.fn();\n    const { getByText } = render(\n      <NavigationButtons onNext={onNext} />\n    );\n    fireEvent.press(getByText('Suivant'));\n    setTimeout(() => {\n      expect(onNext).toHaveBeenCalled();\n    }, 70);\n  });\n\n  it('affiche le label Terminer si isLast est true', () => {\n    const { getByText } = render(\n      <NavigationButtons isLast={true} buttonLabels={{ finish: 'Terminer' }} />\n    );\n    expect(getByText('Terminer')).toBeTruthy();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\exercise-common\\OptionsList\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'OptionsList' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"OptionsList"},"fix":{"range":[101,118],"text":""},"desc":"Remove unused variable 'OptionsList'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":16,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":20,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":21,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":24,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":25,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":25,"endColumn":32},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":30,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":30,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":33,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":33,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":37,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":37,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":40,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":40,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":49,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":49,"endColumn":11}],"suppressedMessages":[],"errorCount":12,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport OptionsList from '../../../src/components/exercise-common/OptionsList';\n\n// Mock Ionicons (expo)\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: () => null,\n}));\n\ndescribe('OptionsList', () => {\n  const options = [\n    { id: '1', text: 'Option 1' },\n    { id: '2', text: 'Option 2' },\n  ];\n\n  it('affiche toutes les options', () => {\n    const { getByText } = render(\n      <OptionsList options={options} />\n    );\n    expect(getByText('Option 1')).toBeTruthy();\n    expect(getByText('Option 2')).toBeTruthy();\n  });\n\n  it('appelle onSelectOption lors du clic sur une option', () => {\n    const onSelectOption = jest.fn();\n    const { getByText } = render(\n      <OptionsList options={options} onSelectOption={onSelectOption} />\n    );\n    fireEvent.press(getByText('Option 2'));\n    expect(onSelectOption).toHaveBeenCalledWith('2');\n  });\n\n  it('affiche l’option sélectionnée', () => {\n    const { getByText } = render(\n      <OptionsList options={options} selectedOptionId={'1'} />\n    );\n    expect(getByText('Option 1')).toBeTruthy();\n  });\n\n  it('affiche l’icône de bonne réponse si showCorrectAnswer est true', () => {\n    const { getByText } = render(\n      <OptionsList\n        options={options}\n        selectedOptionId={'2'}\n        correctOptionId={'2'}\n        showCorrectAnswer={true}\n      />\n    );\n    expect(getByText('Option 2')).toBeTruthy();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\exercise-common\\ResultsScreen\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ResultsScreen' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"ResultsScreen"},"fix":{"range":[101,120],"text":""},"desc":"Remove unused variable 'ResultsScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":11,"column":35,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":39},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":14,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":15,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":19,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":20,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":23,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":27,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":27,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":28,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":28,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":29,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":30,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":30,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":31,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":31,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":32,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":32,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":33,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":33,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":34,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":34,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":37,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":37,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":38,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":38,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":39,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":39,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":45,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":45,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":46,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":46,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":49,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":49,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":53,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":53,"endColumn":11}],"suppressedMessages":[],"errorCount":23,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport ResultsScreen from '../../../src/components/exercise-common/ResultsScreen';\n\n// Mock Ionicons (expo)\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: () => null,\n}));\n// Mock useNavigation\njest.mock('@react-navigation/native', () => ({\n  useNavigation: () => ({ goBack: jest.fn() }),\n}));\n\ndescribe('ResultsScreen', () => {\n  it('affiche le score et le pourcentage', () => {\n    const { getByText } = render(\n      <ResultsScreen correctAnswers={8} totalQuestions={10} />\n    );\n    expect(getByText('80%')).toBeTruthy();\n    expect(getByText('8/10')).toBeTruthy();\n  });\n\n  it('affiche les stats (Correctes, Incorrectes, Passées, Temps)', () => {\n    const { getByText } = render(\n      <ResultsScreen correctAnswers={5} incorrectAnswers={3} skippedAnswers={2} timeTaken=\"01:23\" />\n    );\n    expect(getByText('Correctes')).toBeTruthy();\n    expect(getByText('Incorrectes')).toBeTruthy();\n    expect(getByText('Passées')).toBeTruthy();\n    expect(getByText('Temps')).toBeTruthy();\n    expect(getByText('5')).toBeTruthy();\n    expect(getByText('3')).toBeTruthy();\n    expect(getByText('2')).toBeTruthy();\n    expect(getByText('01:23')).toBeTruthy();\n  });\n\n  it('appelle onRetry et onContinue lors du clic sur les boutons', () => {\n    const onRetry = jest.fn();\n    const onContinue = jest.fn();\n    const { getByText } = render(\n      <ResultsScreen onRetry={onRetry} onContinue={onContinue} />\n    );\n    fireEvent.press(getByText('Réessayer'));\n    fireEvent.press(getByText('Continuer'));\n    expect(onRetry).toHaveBeenCalled();\n    expect(onContinue).toHaveBeenCalled();\n  });\n\n  it('affiche le feedback si fourni', () => {\n    const { getByText } = render(\n      <ResultsScreen feedback=\"Bravo !\" />\n    );\n    expect(getByText('Bravo !')).toBeTruthy();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\hooks\\useActivityMetrics.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":4,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":5,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":7,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { renderHook } from '@testing-library/react';\nimport useActivityMetrics from '../../src/hooks/useActivityMetrics';\n\ndescribe('useActivityMetrics', () => {\n  it('retourne des métriques d’activité', () => {\n    const { result } = renderHook(() => useActivityMetrics());\n    expect(result.current).toBeDefined();\n    // Ajouter des assertions selon la logique réelle\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\hooks\\useDailyWords.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":8,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":11,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":16,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":11}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\nimport { renderHook, act } from '@testing-library/react';\nimport useDailyWords from '../../src/hooks/useDailyWords';\n\ndescribe('useDailyWords', () => {\n  it('retourne le nombre de mots appris aujourd\\'hui', () => {\n    const { result } = renderHook(() => useDailyWords());\n    expect(typeof result.current.wordsToday).toBe('number');\n  });\n\n  it('permet de rafraîchir le nombre de mots du jour', async () => {\n    const { result } = renderHook(() => useDailyWords());\n    await act(async () => {\n      await result.current.refresh();\n    });\n    expect(typeof result.current.wordsToday).toBe('number');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\hooks\\useLastActivity.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":13,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":19,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":11}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { renderHook, act } from '@testing-library/react';\nimport useLastActivity from '../../src/hooks/useLastActivity';\n\n// Mock éventuel des dépendances (API, contextes, etc.)\n\ndescribe('useLastActivity', () => {\n  it('retourne une activité par défaut ou nulle au départ', () => {\n    const { result } = renderHook(() => useLastActivity());\n    expect(result.current.lastActivity).toBeDefined(); // ou null selon l’implémentation\n    expect(typeof result.current.isLoading).toBe('boolean');\n  });\n\n  it('permet de recharger l’activité', async () => {\n    const { result } = renderHook(() => useLastActivity());\n    await act(async () => {\n      await result.current.reload();\n    });\n    // Vérifier que l’activité a été mise à jour (adapter selon la logique réelle)\n    expect(result.current.lastActivity).toBeDefined();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\hooks\\useRealTimeProgress.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'act' is defined but never used.","line":2,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"act"},"fix":{"range":[20,25],"text":""},"desc":"Remove unused variable 'act'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":8,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\nimport { renderHook, act } from '@testing-library/react';\nimport useRealTimeProgress from '../../src/hooks/useRealTimeProgress';\n\ndescribe('useRealTimeProgress', () => {\n  it('retourne des fonctions de progression', () => {\n    const { result } = renderHook(() => useRealTimeProgress());\n    expect(typeof result.current.getLevelProgress).toBe('function');\n    expect(typeof result.current.getExerciseProgress).toBe('function');\n    expect(typeof result.current.refresh).toBe('function');\n  });\n\n  // Ajouter des tests de logique métier selon l’implémentation réelle\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\hooks\\useRevisionData.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":4,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":5,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":7,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { renderHook } from '@testing-library/react';\nimport useRevisionData from '../../src/hooks/useRevisionData';\n\ndescribe('useRevisionData', () => {\n  it('retourne les données de révision', () => {\n    const { result } = renderHook(() => useRevisionData());\n    expect(result.current).toBeDefined();\n    // Ajouter des assertions selon la logique réelle\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\hooks\\useRevisionManager.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":4,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":5,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":7,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { renderHook } from '@testing-library/react';\nimport useRevisionManager from '../../src/hooks/useRevisionManager';\n\ndescribe('useRevisionManager', () => {\n  it('retourne le manager de révision', () => {\n    const { result } = renderHook(() => useRevisionManager());\n    expect(result.current).toBeDefined();\n    // Ajouter des assertions selon la logique réelle\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\hooks\\useRevisionSettings.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":4,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":5,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":7,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { renderHook } from '@testing-library/react';\nimport { useRevisionSettings } from '../../src/hooks/useRevisionSettings';\n\ndescribe('useRevisionSettings', () => {\n  it('retourne les paramètres de révision', () => {\n    const { result } = renderHook(() => useRevisionSettings());\n    expect(result.current).toBeDefined();\n    // Ajouter des assertions selon la logique réelle\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\hooks\\useRouteActivityTracker.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":2,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":3,"column":16,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":20},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":4,"column":16,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":20},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":8,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":11,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":12,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":21},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":19,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":20,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":5},{"ruleId":"no-unused-vars","severity":1,"message":"'result' is assigned a value but never used.","line":21,"column":13,"nodeType":"Identifier","messageId":"unusedVar","endLine":21,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"result"},"fix":{"range":[680,687],"text":""},"desc":"Remove unused variable 'result'."}]},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":22,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":11}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Mock des hooks expo-router pour éviter l'erreur d'accès à isReady\njest.mock('expo-router', () => ({\n  useSegments: jest.fn(() => []),\n  usePathname: jest.fn(() => '/'),\n}));\n\n// Mock du hook useActivityMetrics pour éviter undefined\njest.mock('../../src/hooks/useActivityMetrics', () => ({\n  __esModule: true,\n  default: () => ({\n    startSession: jest.fn(),\n    endSession: jest.fn(),\n    updateStreak: jest.fn(),\n  }),\n}));\nimport { renderHook } from '@testing-library/react';\nimport useRouteActivityTracker from '../../src/hooks/useRouteActivityTracker';\n\ndescribe('useRouteActivityTracker', () => {\n  it('ne plante pas même sans contexte de navigation', () => {\n    const { result, error } = renderHook(() => useRouteActivityTracker());\n    expect(error).toBeUndefined();\n    // On accepte que result.current soit undefined si le contexte n'est pas mocké\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\layout\\Container\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[83,119],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[127,142],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":11,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":12,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":18,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":21,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":28,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":28,"endColumn":11}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { Text } from 'react-native';\nimport Container from '../../../src/components/layout/Container';\n\n// Mock SafeAreaView\njest.mock('react-native-safe-area-context', () => ({\n  SafeAreaView: ({ children }) => <>{children}</>,\n}));\n\ndescribe('Container', () => {\n  it('rend les enfants', () => {\n    const { getByText } = render(\n      <Container>\n        <Text>Contenu test</Text>\n      </Container>\n    );\n    expect(getByText('Contenu test')).toBeTruthy();\n  });\n\n  it('utilise ScrollView si withScrollView est true', () => {\n    const { UNSAFE_getByType } = render(\n      <Container withScrollView={true}>\n        <Text>Scrollé</Text>\n      </Container>\n    );\n    // Vérifie la présence du composant ScrollView\n    expect(UNSAFE_getByType(require('react-native').ScrollView)).toBeTruthy();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\layout\\Header\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Header"},"fix":{"range":[101,113],"text":""},"desc":"Remove unused variable 'Header'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":11,"column":58,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":62},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":14,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":15,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":17,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":20,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":21,"column":25,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":29},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":26,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":29,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":33,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":33,"endColumn":11}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport Header from '../../../src/components/layout/Header';\n\n// Mock Ionicons (expo)\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: () => null,\n}));\n// Mock useNavigation\njest.mock('@react-navigation/native', () => ({\n  useNavigation: () => ({ canGoBack: () => true, goBack: jest.fn() }),\n}));\n\ndescribe('Header', () => {\n  it('affiche le titre', () => {\n    const { getByText } = render(<Header title=\"Titre test\" />);\n    expect(getByText('Titre test')).toBeTruthy();\n  });\n\n  it('appelle onBackPress lors du clic sur le bouton retour', () => {\n    const onBackPress = jest.fn();\n    const { getAllByRole } = render(<Header title=\"Test\" onBackPress={onBackPress} />);\n    // Le bouton retour est le premier TouchableOpacity\n    const buttons = getAllByRole('button');\n    fireEvent.press(buttons[0]);\n    expect(onBackPress).toHaveBeenCalled();\n  });\n\n  it('affiche le sous-titre en mode largeTitleMode', () => {\n    const { getByText } = render(\n      <Header title=\"Titre\" subtitle=\"Sous-titre\" largeTitleMode={true} />\n    );\n    expect(getByText('Sous-titre')).toBeTruthy();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\conversationsExercise.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[9,20],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[87,150],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationsExerciseScreen' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":35,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationsExerciseScreen"},"fix":{"range":[159,192],"text":""},"desc":"Remove unused variable 'ConversationsExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":22,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport ConversationsExerciseScreen from '../../app/tabs/conversationsExercise';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('ConversationsExercise Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <ConversationsExerciseScreen />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\dashboard.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[85,148],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'DashboardScreen' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"DashboardScreen"},"fix":{"range":[157,178],"text":""},"desc":"Remove unused variable 'DashboardScreen'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressProvider' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressProvider"},"fix":{"range":[207,277],"text":""},"desc":"Remove unused variable 'ProgressProvider'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":8,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":15,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":16,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":23,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":24,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport DashboardScreen from '../../app/tabs/dashboard';\r\nimport { ProgressProvider } from '../../src/contexts/ProgressContext'; // <-- adapte ce chemin selon ton projet\r\n\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\n\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('Dashboard Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <ProgressProvider>\r\n        <NavigationContainer>\r\n          <DashboardScreen />\r\n        </NavigationContainer>\r\n      </ProgressProvider>\r\n    );\r\n  });\r\n\r\n  // Ajoute ici d'autres tests selon les composants affichés sur le dashboard\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\errorCorrectionExercise.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[9,20],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[87,150],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorCorrectionExerciseScreen' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":37,"suggestions":[{"messageId":"removeVar","data":{"varName":"ErrorCorrectionExerciseScreen"},"fix":{"range":[159,194],"text":""},"desc":"Remove unused variable 'ErrorCorrectionExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":22,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport ErrorCorrectionExerciseScreen from '../../app/tabs/errorCorrectionExercise';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('ErrorCorrectionExercise Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <ErrorCorrectionExerciseScreen />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\exerciseSelection.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[9,20],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[87,150],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseSelectionScreen' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":31,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseSelectionScreen"},"fix":{"range":[159,188],"text":""},"desc":"Remove unused variable 'ExerciseSelectionScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":22,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport ExerciseSelectionScreen from '../../app/tabs/exerciseSelection';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('ExerciseSelection Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <ExerciseSelectionScreen />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\exerciseSelectionScreen.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[57,120],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseSelectionScreen' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":31,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseSelectionScreen"},"fix":{"range":[129,158],"text":""},"desc":"Remove unused variable 'ExerciseSelectionScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport ExerciseSelectionScreen from '../../src/screens/ExerciseSelection';\r\n\r\ndescribe('ExerciseSelectionScreen', () => {\r\n  it('renders without crashing', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <ExerciseSelectionScreen route={{ params: {} }} />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n}); ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\exercises\\conversationsScreen.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[57,120],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationsExerciseScreen' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":35,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationsExerciseScreen"},"fix":{"range":[129,162],"text":""},"desc":"Remove unused variable 'ConversationsExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport ConversationsExerciseScreen from '../../../src/screens/exercises/conversations';\r\n\r\ndescribe('ConversationsExerciseScreen', () => {\r\n  it('renders without crashing', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <ConversationsExerciseScreen route={{ params: { level: 'A1' } }} />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n}); ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\exercises\\grammarScreen.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[57,120],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GrammarExerciseScreen' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"GrammarExerciseScreen"},"fix":{"range":[129,156],"text":""},"desc":"Remove unused variable 'GrammarExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport GrammarExerciseScreen from '../../../src/screens/exercises/grammar';\r\n\r\ndescribe('GrammarExerciseScreen', () => {\r\n  it('renders without crashing', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <GrammarExerciseScreen route={{ params: { level: 'A1' } }} />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n}); ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\exercises\\phrasesScreen.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[57,120],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'PhrasesExerciseScreen' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"PhrasesExerciseScreen"},"fix":{"range":[129,156],"text":""},"desc":"Remove unused variable 'PhrasesExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport PhrasesExerciseScreen from '../../../src/screens/exercises/phrases';\r\n\r\ndescribe('PhrasesExerciseScreen', () => {\r\n  it('renders without crashing', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <PhrasesExerciseScreen route={{ params: { level: 'A1' } }} />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n}); ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\exercises\\readingScreen.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[57,120],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ReadingExerciseScreen' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"ReadingExerciseScreen"},"fix":{"range":[129,156],"text":""},"desc":"Remove unused variable 'ReadingExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport ReadingExerciseScreen from '../../../src/screens/exercises/reading';\r\n\r\ndescribe('ReadingExerciseScreen', () => {\r\n  it('renders without crashing', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <ReadingExerciseScreen route={{ params: { level: 'A1' } }} />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n}); ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\exercises\\spellingScreen.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[57,120],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SpellingExerciseScreen' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":30,"suggestions":[{"messageId":"removeVar","data":{"varName":"SpellingExerciseScreen"},"fix":{"range":[129,157],"text":""},"desc":"Remove unused variable 'SpellingExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport SpellingExerciseScreen from '../../../src/screens/exercises/spelling';\r\n\r\ndescribe('SpellingExerciseScreen', () => {\r\n  it('renders without crashing', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <SpellingExerciseScreen route={{ params: { level: 'A1' } }} />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n}); ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\exercises\\vocabularyScreen.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[57,120],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyExerciseScreen' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyExerciseScreen"},"fix":{"range":[129,159],"text":""},"desc":"Remove unused variable 'VocabularyExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport VocabularyExerciseScreen from '../../../src/screens/exercises/vocabulary';\r\n\r\ndescribe('VocabularyExerciseScreen', () => {\r\n  it('renders without crashing', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <VocabularyExerciseScreen route={{ params: { level: 'A1' } }} />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n}); ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\grammarExercise.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[9,20],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[87,150],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GrammarExerciseScreen' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"GrammarExerciseScreen"},"fix":{"range":[159,186],"text":""},"desc":"Remove unused variable 'GrammarExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":22,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport GrammarExerciseScreen from '../../app/tabs/grammarExercise';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('GrammarExercise Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <GrammarExerciseScreen />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\levelAssessment.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[9,20],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[87,150],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LevelAssessmentScreen' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"LevelAssessmentScreen"},"fix":{"range":[159,186],"text":""},"desc":"Remove unused variable 'LevelAssessmentScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":22,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport LevelAssessmentScreen from '../../app/tabs/levelAssessment';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('LevelAssessment Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <LevelAssessmentScreen />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\levelSelection.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[9,20],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[87,150],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LevelSelectionScreen' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":28,"suggestions":[{"messageId":"removeVar","data":{"varName":"LevelSelectionScreen"},"fix":{"range":[159,185],"text":""},"desc":"Remove unused variable 'LevelSelectionScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":22,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport LevelSelectionScreen from '../../app/tabs/levelSelection';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('LevelSelection Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <LevelSelectionScreen />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\levelSelectionScreen.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[57,120],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LevelSelectionScreen' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":28,"suggestions":[{"messageId":"removeVar","data":{"varName":"LevelSelectionScreen"},"fix":{"range":[129,155],"text":""},"desc":"Remove unused variable 'LevelSelectionScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport LevelSelectionScreen from '../../src/screens/LevelSelection';\r\n\r\ndescribe('LevelSelectionScreen', () => {\r\n  it('renders without crashing', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <LevelSelectionScreen route={{ params: {} }} />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n}); ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\phrasesExercise.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[9,20],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[87,150],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'PhrasesExerciseScreen' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"PhrasesExerciseScreen"},"fix":{"range":[159,186],"text":""},"desc":"Remove unused variable 'PhrasesExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":22,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport PhrasesExerciseScreen from '../../app/tabs/phrasesExercise';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('PhrasesExercise Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <PhrasesExerciseScreen />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\readingExercise.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[11,22],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[89,152],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ReadingExerciseScreen' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"ReadingExerciseScreen"},"fix":{"range":[161,188],"text":""},"desc":"Remove unused variable 'ReadingExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":8,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":15,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":22,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":23,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\n\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport ReadingExerciseScreen from '../../app/tabs/readingExercise';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('ReadingExercise Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <ReadingExerciseScreen />\r\n      </NavigationContainer>\r\n    );\r\n    // On vérifie simplement que le composant ne crash pas au rendu\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\settings.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[85,148],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SettingsScreen' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"SettingsScreen"},"fix":{"range":[157,177],"text":""},"desc":"Remove unused variable 'SettingsScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":15,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":22,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":23,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":30,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":30,"endColumn":11}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport SettingsScreen from '../../app/tabs/settings';\r\n\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\n\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('Settings Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    const { getByText } = render(\r\n      <NavigationContainer>\r\n        <SettingsScreen />\r\n      </NavigationContainer>\r\n    );\r\n    // On vérifie que le titre \"Paramètres\" est présent, preuve que le composant a rendu\r\n    expect(getByText('Paramètres')).toBeTruthy();\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\settingsScreen.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'SettingsScreen' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"SettingsScreen"},"fix":{"range":[64,84],"text":""},"desc":"Remove unused variable 'SettingsScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":4,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":5,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":5}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react-native';\r\nimport SettingsScreen from '../../src/screens/Settings';\r\n\r\ndescribe('SettingsScreen', () => {\r\n  it('renders without crashing', () => {\r\n    render(<SettingsScreen />);\r\n  });\r\n}); ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\spellingExercise.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[9,20],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[87,150],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SpellingExerciseScreen' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":30,"suggestions":[{"messageId":"removeVar","data":{"varName":"SpellingExerciseScreen"},"fix":{"range":[159,187],"text":""},"desc":"Remove unused variable 'SpellingExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":22,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport SpellingExerciseScreen from '../../app/tabs/spellingExercise';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('SpellingExercise Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <SpellingExerciseScreen />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\vocabularyExercise.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[85,148],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyExerciseScreen' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyExerciseScreen"},"fix":{"range":[157,187],"text":""},"desc":"Remove unused variable 'VocabularyExerciseScreen'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressProvider' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressProvider"},"fix":{"range":[225,295],"text":""},"desc":"Remove unused variable 'ProgressProvider'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":8,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":15,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":16,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":23,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":24,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport VocabularyExerciseScreen from '../../app/tabs/vocabularyExercise';\r\nimport { ProgressProvider } from '../../src/contexts/ProgressContext'; // <-- adapte ce chemin si nécessaire\r\n\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\n\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('VocabularyExercise Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <ProgressProvider>\r\n        <NavigationContainer>\r\n          <VocabularyExerciseScreen />\r\n        </NavigationContainer>\r\n      </ProgressProvider>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\vocabularyRevision.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[9,20],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[87,150],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyRevisionScreen' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyRevisionScreen"},"fix":{"range":[159,189],"text":""},"desc":"Remove unused variable 'VocabularyRevisionScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":22,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport VocabularyRevisionScreen from '../../app/tabs/vocabularyRevision';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('VocabularyRevision Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <VocabularyRevisionScreen />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\vocabularyRevisionScreen.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[57,120],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyRevisionScreen' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyRevisionScreen"},"fix":{"range":[129,159],"text":""},"desc":"Remove unused variable 'VocabularyRevisionScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport VocabularyRevisionScreen from '../../src/screens/VocabularyRevision';\r\n\r\ndescribe('VocabularyRevisionScreen', () => {\r\n  it('renders without crashing', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <VocabularyRevisionScreen route={{ params: {} }} />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n}); ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\screens\\wordGamesExercise.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[9,20],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationContainer' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationContainer"},"fix":{"range":[87,150],"text":""},"desc":"Remove unused variable 'NavigationContainer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'WordGamesExerciseScreen' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":31,"suggestions":[{"messageId":"removeVar","data":{"varName":"WordGamesExerciseScreen"},"fix":{"range":[159,188],"text":""},"desc":"Remove unused variable 'WordGamesExerciseScreen'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":14,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":22,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport WordGamesExerciseScreen from '../../app/tabs/wordGamesExercise';\r\njest.mock('@expo/vector-icons', () => ({\r\n  ...jest.requireActual('@expo/vector-icons'),\r\n  createIconSet: () => 'Icon',\r\n  Ionicons: 'Icon',\r\n  MaterialIcons: 'Icon',\r\n  FontAwesome: 'Icon',\r\n}));\r\njest.mock('@react-navigation/native', () => {\r\n  const actualNav = jest.requireActual('@react-navigation/native');\r\n  return {\r\n    ...actualNav,\r\n    useRoute: () => ({ params: {} }),\r\n  };\r\n});\r\n\r\ndescribe('WordGamesExercise Screen', () => {\r\n  it('renders sans crash (mock route)', () => {\r\n    render(\r\n      <NavigationContainer>\r\n        <WordGamesExerciseScreen />\r\n      </NavigationContainer>\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\ui\\Button\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Button"},"fix":{"range":[101,113],"text":""},"desc":"Remove unused variable 'Button'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":11,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":13,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":16,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":17,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":20,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":23,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":25,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":25,"endColumn":11}],"suppressedMessages":[],"errorCount":9,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport Button from '../../../src/components/ui/Button';\n\n// Mock Ionicons (expo)\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: () => null,\n}));\n\ndescribe('Button', () => {\n  it('affiche le titre', () => {\n    const { getByText } = render(<Button title=\"Valider\" />);\n    expect(getByText('Valider')).toBeTruthy();\n  });\n\n  it('appelle onPress lors du clic', () => {\n    const onPress = jest.fn();\n    const { getByText } = render(<Button title=\"Cliquer\" onPress={onPress} />);\n    fireEvent.press(getByText('Cliquer'));\n    expect(onPress).toHaveBeenCalled();\n  });\n\n  it('affiche le loader si loading est true', () => {\n    const { UNSAFE_getByType } = render(<Button loading={true} />);\n    expect(UNSAFE_getByType(require('react-native').ActivityIndicator)).toBeTruthy();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\ui\\Card\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Card' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":12,"suggestions":[{"messageId":"removeVar","data":{"varName":"Card"},"fix":{"range":[92,102],"text":""},"desc":"Remove unused variable 'Card'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[138,174],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":13,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":16,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":22,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":23,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":24,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":15}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport Card from '../../../src/components/ui/Card';\r\nimport { Text } from 'react-native';\r\n\r\ndescribe('Card', () => {\r\n  it('rend les enfants', () => {\r\n    const { getByText } = render(\r\n      <Card>\r\n        <Text>Contenu de la carte</Text>\r\n      </Card>\r\n    );\r\n    expect(getByText('Contenu de la carte')).toBeTruthy();\r\n  });\r\n\r\n  it('applique le style personnalisé', () => {\r\n    const { getByTestId } = render(\r\n      <Card testID=\"card\" style={{ backgroundColor: 'red' }}>\r\n        <Text>Test</Text>\r\n      </Card>\r\n    );\r\n    expect(getByTestId('card').props.style).toEqual(\r\n      expect.arrayContaining([\r\n        expect.objectContaining({ backgroundColor: 'red' })\r\n      ])\r\n    );\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\ui\\ContentSection\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[92,112],"text":""},"desc":"Remove unused variable 'ContentSection'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[158,194],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":13,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":14,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":11}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport ContentSection from '../../../src/components/ui/ContentSection';\r\nimport { Text } from 'react-native';\r\n\r\ndescribe('ContentSection', () => {\r\n  it('rend le titre et les enfants', () => {\r\n    const { getByText } = render(\r\n      <ContentSection title=\"Titre test\">\r\n        <Text>Contenu section</Text>\r\n      </ContentSection>\r\n    );\r\n    expect(getByText('Titre test')).toBeTruthy();\r\n    expect(getByText('Contenu section')).toBeTruthy();\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\ui\\HeroCard\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[92,106],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[146,182],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":13,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport HeroCard from '../../../src/components/ui/HeroCard';\r\nimport { Text } from 'react-native';\r\n\r\ndescribe('HeroCard', () => {\r\n  it('rend les enfants', () => {\r\n    const { getByText } = render(\r\n      <HeroCard>\r\n        <Text>Héros</Text>\r\n      </HeroCard>\r\n    );\r\n    expect(getByText('Héros')).toBeTruthy();\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\ui\\Modal\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Modal' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"Modal"},"fix":{"range":[92,103],"text":""},"desc":"Remove unused variable 'Modal'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[140,176],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":13,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":20,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":11}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport Modal from '../../../src/components/ui/Modal';\r\nimport { Text } from 'react-native';\r\n\r\njest.mock('@expo/vector-icons', () => ({\r\n  Ionicons: () => null,\r\n  MaterialIcons: () => null,\r\n  FontAwesome: () => null,\r\n  // Ajoute d'autres icônes si besoin\r\n}));\r\n\r\ndescribe('Modal', () => {\r\n  it('rend les enfants quand visible', () => {\r\n    const { getByText } = render(\r\n      <Modal visible={true}>\r\n        <Text>Contenu modal</Text>\r\n      </Modal>\r\n    );\r\n    expect(getByText('Contenu modal')).toBeTruthy();\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\ui\\ProgressBar\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressBar' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressBar"},"fix":{"range":[92,109],"text":""},"desc":"Remove unused variable 'ProgressBar'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":5,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport ProgressBar from '../../../src/components/ui/ProgressBar';\r\n\r\ndescribe('ProgressBar', () => {\r\n  it('affiche la progression', () => {\r\n    const { getByTestId } = render(\r\n      <ProgressBar progress={0.5} testID=\"progress-bar\" />\r\n    );\r\n    expect(getByTestId('progress-bar')).toBeTruthy();\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\ui\\ProgressCard\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressCard' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressCard"},"fix":{"range":[92,110],"text":""},"desc":"Remove unused variable 'ProgressCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[154,190],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport ProgressCard from '../../../src/components/ui/ProgressCard';\r\nimport { Text } from 'react-native';\r\n\r\ndescribe('ProgressCard', () => {\r\n  it('affiche le titre par défaut', () => {\r\n    const { getByText } = render(<ProgressCard />);\r\n    expect(getByText('Progress')).toBeTruthy();\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\ui\\RevealButton\\index.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'RevealButton' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"RevealButton"},"fix":{"range":[103,121],"text":""},"desc":"Remove unused variable 'RevealButton'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[165,201],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":7,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":8,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":15,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":13}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport RevealButton from '../../../src/components/ui/RevealButton';\r\nimport { Text } from 'react-native';\r\n\r\ndescribe('RevealButton', () => {\r\n  it('affiche le bouton et appelle onPress', () => {\r\n    const onPress = jest.fn();\r\n    const { getByRole } = render(\r\n      <RevealButton onToggle={onPress} isRevealed={false} revealText=\"Révéler\" />\r\n    );\r\n    const button = getByRole('button');\r\n    fireEvent.press(button);\r\n    setTimeout(() => {\r\n      expect(onPress).toHaveBeenCalled();\r\n    }, 100);\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\utils\\assessmentStats.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":11}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as stats from '../../src/utils/assessment/assessmentStats';\n\ndescribe('assessmentStats', () => {\n  it('calcule correctement le score moyen', () => {\n    const data = [\n      { score: 80 },\n      { score: 100 },\n      { score: 60 }\n    ];\n    const result = stats.calculateAverageScore(data);\n    expect(result).toBeCloseTo(80);\n  });\n\n  // Ajouter d’autres tests selon les fonctions exportées\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\_tests\\utils\\vocabularyDataHelper.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":3,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":4,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":12,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":11}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as helper from '../../src/utils/vocabulary/vocabularyDataHelper';\n\ndescribe('vocabularyDataHelper', () => {\n  it('retourne une liste de mots formatée', () => {\n    const data = [\n      { word: 'apple', translation: 'pomme' },\n      { word: 'banana', translation: 'banane' }\n    ];\n    const result = helper.formatVocabularyList(data);\n    expect(Array.isArray(result)).toBe(true);\n    expect(result[0]).toHaveProperty('word');\n    expect(result[0]).toHaveProperty('translation');\n  });\n\n  // Ajouter d’autres tests selon les fonctions exportées\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\+not-found.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Link' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Link"},"fix":{"range":[9,14],"text":""},"desc":"Remove unused variable 'Link'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Stack' is defined but never used.","line":1,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"Stack"},"fix":{"range":[13,20],"text":""},"desc":"Remove unused variable 'Stack'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":2,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[62,68],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":2,"column":28,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[68,74],"text":""},"desc":"Remove unused variable 'View'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Link, Stack } from \"expo-router\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nexport default function NotFoundScreen() {\n  return (\n    <>\n      <Stack.Screen options={{ title: \"Oops!\" }} />\n      <View style={styles.container} testID=\"not-found-root\">\n        <Text style={styles.title}>Cette page n'existe pas.</Text>\n        <Link href=\"/(tabs)/dashboard\" style={styles.link}>\n          <Text style={styles.linkText}>Retour au Dashboard</Text>\n        </Link>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    color: \"blue\",\n  },\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\_layout.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'StatusBar' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"StatusBar"},"fix":{"range":[90,134],"text":""},"desc":"Remove unused variable 'StatusBar'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Stack' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":15,"suggestions":[{"messageId":"removeVar","data":{"varName":"Stack"},"fix":{"range":[170,206],"text":""},"desc":"Remove unused variable 'Stack'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SafeAreaProvider' is defined but never used.","line":8,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"SafeAreaProvider"},"fix":{"range":[242,308],"text":""},"desc":"Remove unused variable 'SafeAreaProvider'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'AppProvider' is defined but never used.","line":9,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"AppProvider"},"fix":{"range":[316,333],"text":""},"desc":"Remove unused variable 'AppProvider'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useEffect } from \"react\";\nimport { Stack } from \"expo-router\";\nimport \"react-native-reanimated\";\n\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport AppProvider from \"../src/contexts/AppProvider\"; // ← CHANGÉ: AppProvider au lieu de ProgressProvider\nimport useRouteActivityTracker from \"../src/hooks/useRouteActivityTracker\";\n\nexport default function RootLayout() {\n  const [loaded] = useFonts({\n    SpaceMono: require(\"../assets/fonts/SpaceMono-Regular.ttf\"),\n  });\n\n  useRouteActivityTracker();\n\n  useEffect(() => {\n    if (loaded) {\n      SplashScreen.hideAsync();\n    }\n  }, [loaded]);\n\n  if (!loaded) {\n    return null;\n  }\n\n  return (\n    <SafeAreaProvider>\n      <AppProvider>\n        {/* ← CHANGÉ: AppProvider qui inclut ThemeProvider + SettingsProvider + ProgressProvider */}\n        <Stack screenOptions={{ headerShown: false }} />\n        <StatusBar style=\"auto\" />\n      </AppProvider>\n    </SafeAreaProvider>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\index.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Redirect' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Redirect"},"fix":{"range":[0,39],"text":""},"desc":"Remove unused variable 'Redirect'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Redirect } from \"expo-router\";\n\nexport default function Index() {\n  return <Redirect href=\"/dashboard\" />;\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\_layout.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Tabs' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Tabs"},"fix":{"range":[0,35],"text":""},"desc":"Remove unused variable 'Tabs'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[43,54],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[63,109],"text":""},"desc":"Remove unused variable 'Ionicons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Tabs } from \"expo-router\";\nimport React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport default function TabLayout() {\n  return (\n    <Tabs\n      screenOptions={{\n        headerShown: false,\n        tabBarShowLabel: true, // Garde les labels visibles\n        tabBarActiveTintColor: \"#007AFF\",\n        tabBarInactiveTintColor: \"#8E8E93\",\n        tabBarStyle: {\n          backgroundColor: \"#fff\",\n          borderTopWidth: 1,\n          borderTopColor: \"#E5E5EA\",\n          paddingBottom: 6,\n          paddingTop: 6,\n          height: 60,\n          shadowColor: \"#000\",\n          shadowOffset: { width: 0, height: -2 },\n          shadowOpacity: 0.1,\n          shadowRadius: 3,\n          elevation: 5,\n          overflow: \"hidden\", // évite les flèches ou débordements\n        },\n        tabBarLabelStyle: {\n          fontSize: 12,\n          fontWeight: \"500\",\n          marginTop: 0, // Important pour éviter les flèches\n        },\n        tabBarIconStyle: {\n          marginBottom: 0, // Alignement propre\n        },\n      }}\n    >\n      {/* Onglets visibles */}\n      <Tabs.Screen\n        name=\"dashboard\"\n        options={{\n          title: \"Accueil\",\n          tabBarIcon: ({ color, size, focused }) => (\n            <Ionicons name={focused ? \"home\" : \"home-outline\"} color={color} size={size} />\n          ),\n        }}\n      />\n\n      <Tabs.Screen\n        name=\"levelSelection\"\n        options={{\n          title: \"Exercices\",\n          tabBarIcon: ({ color, size, focused }) => (\n            <Ionicons name={focused ? \"book\" : \"book-outline\"} color={color} size={size} />\n          ),\n        }}\n      />\n\n      <Tabs.Screen\n        name=\"conversationsExercise\"\n        options={{\n          title: \"Conversation\",\n          tabBarIcon: ({ color, size, focused }) => (\n            <Ionicons name={focused ? \"chatbubble\" : \"chatbubble-outline\"} color={color} size={size} />\n          ),\n        }}\n      />\n\n      <Tabs.Screen\n        name=\"settings\"\n        options={{\n          title: \"Settings\",\n          tabBarIcon: ({ color, size, focused }) => (\n            <Ionicons name={focused ? \"settings\" : \"settings-outline\"} color={color} size={size} />\n          ),\n        }}\n      />\n\n      {/* Écrans masqués */}\n      <Tabs.Screen name=\"vocabularyRevision\" options={{ href: null }} />\n      <Tabs.Screen name=\"exerciseSelection\" options={{ href: null }} />\n      <Tabs.Screen name=\"levelAssessment\" options={{ href: null }} />\n      <Tabs.Screen name=\"vocabularyExercise\" options={{ href: null }} />\n      <Tabs.Screen name=\"grammarExercise\" options={{ href: null }} />\n      <Tabs.Screen name=\"readingExercise\" options={{ href: null }} />\n      <Tabs.Screen name=\"phrasesExercise\" options={{ href: null }} />\n      <Tabs.Screen name=\"spellingExercise\" options={{ href: null }} />\n      <Tabs.Screen name=\"errorCorrectionExercise\" options={{ href: null }} />\n      <Tabs.Screen name=\"wordGamesExercise\" options={{ href: null }} />\n    </Tabs>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\conversationsExercise.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationsExercise' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationsExercise"},"fix":{"range":[100,127],"text":""},"desc":"Remove unused variable 'ConversationsExercise'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// app/(tabs)/conversationsExercise.tsx\nimport { useRoute } from \"@react-navigation/native\";\nimport ConversationsExercise from \"../../src/screens/exercises/conversations\";\n\nexport default function ConversationsExerciseScreen() {\n  const route = useRoute();\n  return <ConversationsExercise route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\dashboard.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Dashboard' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Dashboard"},"fix":{"range":[60,75],"text":""},"desc":"Remove unused variable 'Dashboard'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRoute } from \"@react-navigation/native\";\nimport Dashboard from \"../../src/screens/Dashboard\";\n\nexport default function DashboardScreen() {\n  const route = useRoute();\n  return <Dashboard route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\errorCorrectionExercise.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorCorrection' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"ErrorCorrection"},"fix":{"range":[60,81],"text":""},"desc":"Remove unused variable 'ErrorCorrection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRoute } from \"@react-navigation/native\";\nimport ErrorCorrection from \"../../src/screens/exercises/errorCorrection\";\n\nexport default function ErrorCorrectionExerciseScreen() {\n  const route = useRoute();\n  return <ErrorCorrection route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\exerciseSelection.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseSelection' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseSelection"},"fix":{"range":[96,119],"text":""},"desc":"Remove unused variable 'ExerciseSelection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// app/(tabs)/exerciseSelection.tsx\nimport { useRoute } from \"@react-navigation/native\";\nimport ExerciseSelection from \"../../src/screens/ExerciseSelection\";\n\nexport default function ExerciseSelectionScreen() {\n  const route = useRoute();\n  // ❌ SUPPRIMÉ : console.log(\"Route in ExerciseSelectionScreen:\", route);\n\n  return <ExerciseSelection route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\grammarExercise.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'GrammarExercise' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"GrammarExercise"},"fix":{"range":[60,81],"text":""},"desc":"Remove unused variable 'GrammarExercise'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRoute } from \"@react-navigation/native\";\nimport GrammarExercise from \"../../src/screens/exercises/grammar\";\n\nexport default function GrammarExerciseScreen() {\n  const route = useRoute();\n  return <GrammarExercise route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\levelAssessment.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'LevelAssessment' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"LevelAssessment"},"fix":{"range":[60,81],"text":""},"desc":"Remove unused variable 'LevelAssessment'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRoute } from \"@react-navigation/native\";\nimport LevelAssessment from \"../../src/screens/exercises/level-assessment\";\n\nexport default function LevelAssessmentScreen() {\n  const route = useRoute();\n  return <LevelAssessment route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\levelSelection.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'useRoute' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"useRoute"},"fix":{"range":[33,85],"text":""},"desc":"Remove unused variable 'useRoute'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LevelSelection' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"LevelSelection"},"fix":{"range":[93,113],"text":""},"desc":"Remove unused variable 'LevelSelection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// app/(tabs)/levelSelection.tsx\nimport { useRoute } from \"@react-navigation/native\";\nimport LevelSelection from \"../../src/screens/LevelSelection\";\n\nexport default function LevelSelectionScreen() {\n  // Comme LevelSelection n'attend pas de prop route,\n  // nous n'avons pas besoin de passer de paramètres\n  return <LevelSelection />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\phrasesExercise.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'PhrasesExercise' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"PhrasesExercise"},"fix":{"range":[60,81],"text":""},"desc":"Remove unused variable 'PhrasesExercise'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRoute } from \"@react-navigation/native\";\nimport PhrasesExercise from \"../../src/screens/exercises/phrases\";\n\nexport default function PhrasesExerciseScreen() {\n  const route = useRoute();\n  return <PhrasesExercise route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\readingExercise.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Reading' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":15,"suggestions":[{"messageId":"removeVar","data":{"varName":"Reading"},"fix":{"range":[60,73],"text":""},"desc":"Remove unused variable 'Reading'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRoute } from \"@react-navigation/native\";\nimport Reading from \"../../src/screens/exercises/reading\";\n\nexport default function ReadingExerciseScreen() {\n  const route = useRoute();\n  return <Reading route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\settings.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'SettingsScreen' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"SettingsScreen"},"fix":{"range":[7,27],"text":""},"desc":"Remove unused variable 'SettingsScreen'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import SettingsScreen from '../../src/screens/Settings';\n\nexport default function SettingsTab() {\n  return <SettingsScreen />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\spellingExercise.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Spelling' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"Spelling"},"fix":{"range":[60,74],"text":""},"desc":"Remove unused variable 'Spelling'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRoute } from \"@react-navigation/native\";\nimport Spelling from \"../../src/screens/exercises/spelling\";\n\nexport default function SpellingExerciseScreen() {\n  const route = useRoute();\n  return <Spelling route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\vocabularyExercise.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyExercise' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyExercise"},"fix":{"range":[60,84],"text":""},"desc":"Remove unused variable 'VocabularyExercise'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRoute } from \"@react-navigation/native\";\nimport VocabularyExercise from \"../../src/screens/exercises/vocabulary\";\n\nexport default function VocabularyExerciseScreen() {\n  const route = useRoute();\n  return <VocabularyExercise route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\vocabularyRevision.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyRevision' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyRevision"},"fix":{"range":[60,84],"text":""},"desc":"Remove unused variable 'VocabularyRevision'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRoute } from \"@react-navigation/native\";\nimport VocabularyRevision from \"../../src/screens/VocabularyRevision\";\n\nexport default function VocabularyRevisionScreen() {\n  const route = useRoute();\n  return <VocabularyRevision route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\app\\tabs\\wordGamesExercise.tsx","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'WordGames' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"WordGames"},"fix":{"range":[60,75],"text":""},"desc":"Remove unused variable 'WordGames'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRoute } from \"@react-navigation/native\";\nimport WordGames from \"../../src/screens/exercises/word-games\";\n\nexport default function WordGamesExerciseScreen() {\n  const route = useRoute();\n  return <WordGames route={route} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_01_identite.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_02_famille.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_04_temps.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_05_maison.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_06_nourriture.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_07_vetements.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_08_activites.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_09_lieux.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_10_transports.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_11_meteo.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_12_achats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_14_loisirs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_15_emotions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A1_16_animals.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_01_identite_elargie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_02_famille_relations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_03_logement_environnement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_04_urbain_rural.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_05_travail_professionnel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_06_alimentation_elargie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_07_sante_corps.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_08_achats_services.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_09_transports_voyages.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_10_education_apprentissage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_11_loisirs_culture.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_12_temps_meteo.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_13_communications.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_14_nature_environnement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\A2_15_actualites_evenements.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_01_expression.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_02_relations_interpersonnelles.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_03_monde_du_travail.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_04_habitation_style_de_vie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_05_voyages_decouvertes_culturelles.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_06_alimentation_gastronomie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_07_sante_bien_etre.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_08_consommation_tendances.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_09_education_formation_continue.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_10_medias_information.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_11_technologie_innovations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_12_environnement_enjeux_ecologiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_13_culture_arts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_14_sports_activites_physiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B1_15_societe_questions_sociales.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_01_identite_complexe_et_psychologie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_02_relations_et_dynamiques_sociales.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_03_economie_et_monde_des_affaires.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_04_urbanisme_et_amenagement_du_territoire.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_05_sante_publique_et_systemes_de_sante.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_06_technologies_de_l_information_et_communication.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_07_questions_environnementales_avancees.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_08_politique_et_gouvernance.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_09_justice_et_droit.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_10_education_superieure_et_recherche.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_11_arts_et_critique_culturelle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_12_medias_avances_et_communication_de_masse.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_13_debats_societaux_contemporains.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_14_economie_globale_et_finances.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_15_sciences_et_applications_technologiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_16_enjeux_mondiaux_et_cooperation_internationale.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\B2_17_entrepreneuriat_et_economie_pratique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_01_analyse_psychosociale_et_comportementale.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_02_communication_strategique_et_rhetorique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_03_economie_politique_et_systemes_mondiaux.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_04_gouvernance_et_politiques_publiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_05_recherche_scientifique_et_methodologie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_06_systemes_juridiques_compares.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_07_analyse_litteraire_et_critique_textuelle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_08_technologies_emergentes_et_prospective.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_09_enjeux_environnementaux_systemiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_10_expression_idiomatique_et_culturelle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_11_dynamiques_socioculturelles.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_12_medias_internationaux_et_communication_globale.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_13_arts_contemporains_et_pratiques_creatives.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_14_relations_internationales.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_15_sante_globale_et_enjeux_biomedical.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_16_gestion_des_risques_globaux.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C1_17_innovation_et_transformation_numerique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_01_finance_corporative.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_02_marches_financiers.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_03_management_strategie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_04_technologies_emergentes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_05_sciences_medicales.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_06_environnement_developpement_durable.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_07_droit_commercial_international.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_08_diplomatie_negociations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_09_organisations_institutions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_10_litterature_critique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_11_arts_visuels.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_12_ia_ethique_technologies.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_13_medias_numeriques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_14_rhetorique_art_oratoire.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_15_communication_interculturelle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_16_expressions_idiomatiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_17_nuances_linguistiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_18_geopolitique_contemporaine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_19_enjeux_sociaux.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_20_methodologie_recherche.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_21_redaction_academique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_22_cybersecurite.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_23_intelligence_artificielle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_24_sante_publique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-47-26.975Z\\C2_25_psychologie_sante_mentale.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-50-31.600Z\\C1_11_dynamiques_socioculturelles.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token residents","line":46,"column":7}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const vocab = {\n  title: \"Dynamiques Socioculturelles\",\n  words: [\n    // Transformation culturelle\n    \n    \n    { word: \"cultural diffusion\", translation: \"diffusion culturelle\", example: \"Global travel and communication have accelerated cultural diffusion worldwide.\" },\n    { word: \"cultural syncretism\", translation: \"syncrétisme culturel\", example: \"Caribbean music demonstrates cultural syncretism blending African, European and indigenous influences.\" },\n    { word: \"acculturation\", translation: \"acculturation\", example: \"Immigrants often experience acculturation as they adapt to their new country's norms.\" },\n    { word: \"cultural assimilation\", translation: \"assimilation culturelle\", example: \"Many educational systems historically promoted cultural assimilation rather than diversity.\" },\n    { word: \"cultural hybridization\", translation: \"hybridation culturelle\", example: \"Fusion cuisine represents cultural hybridization combining culinary traditions from different regions.\" },\n    \n    \n    { word: \"cultural resilience\", translation: \"résilience culturelle\", example: \"Indigenous communities demonstrate cultural resilience by preserving traditions despite external pressures.\" },\n    \n    { word: \"cultural transmission\", translation: \"transmission culturelle\", example: \"Schools play a critical role in cultural transmission between generations.\" },\n    \n    { word: \"cultural zeitgeist\", translation: \"esprit culturel du temps\", example: \"The television series perfectly captured the cultural zeitgeist of post-war America.\" },\n    { word: \"cultural renaissance\", translation: \"renaissance culturelle\", example: \"The neighborhood experienced a cultural renaissance as artists moved into the area.\" },\n    { word: \"cultural trajectory\", translation: \"trajectoire culturelle\", example: \"Demographic changes are altering the cultural trajectory of urban centers.\" },\n    { word: \"cultural transition\", translation: \"transition culturelle\", example: \"The society is undergoing a cultural transition toward greater environmental awareness.\" },\n    \n    { word: \"cultural revitalization\", translation: \"revitalisation culturelle\", example: \"Language immersion programs contribute to cultural revitalization in indigenous communities.\" },\n    { word: \"cultural transformation\", translation: \"transformation culturelle\", example: \"Digital technology has driven cultural transformation in media consumption patterns.\" },\n    { word: \"cultural reclamation\", translation: \"récupération culturelle\", example: \"The museum collaborated with tribal representatives on cultural reclamation initiatives.\" },\n    { word: \"cultural paradigm\", translation: \"paradigme culturel\", example: \"The scientific revolution introduced a new cultural paradigm based on empirical investigation.\" },\n    { word: \"cultural friction\", translation: \"friction culturelle\", example: \"Corporate mergers often create cultural friction between organizations with different values.\" },\n    { word: \"cultural fluidity\", translation: \"fluidité culturelle\", example: \"Modern identities exhibit greater cultural fluidity than in previous generations.\" },\n    { word: \"cultural orthodoxy\", translation: \"orthodoxie culturelle\", example: \"The artist's work challenged cultural orthodoxy regarding gender representation.\" },\n    { word: \"cultural displacement\", translation: \"déplacement culturel\", example: \"Rapid urbanization has led to cultural displacement in traditional communities.\" },\n    { word: \"cultural disruption\", translation: \"perturbation culturelle\", example: \"The pandemic caused cultural disruption in social interaction patterns.\" },\n    { word: \"cultural backlash\", translation: \"contrecoup culturel\", example: \"Progressive social changes sometimes trigger cultural backlash from traditional segments of society.\" },\n    \n    { word: \"cultural divergence\", translation: \"divergence culturelle\", example: \"Despite increased connectivity, research shows cultural divergence persisting in many values and practices.\" },\n    \n    // Mobilité sociale\n    \n    \n    { word: \"upward mobility\", translation: \"mobilité ascendante\", example: \"The scholarship program aims to enhance opportunities for upward mobility among disadvantaged students.\" },\n    { word: \"downward mobility\", translation: \"mobilité descendante\", example: \"Economic restructuring led to downward mobility for many manufacturing workers.\" },\n    \n    \n    { word: \"class barrier\", translation: \"barrière de classe\", example: \"Elite universities have implemented programs designed to overcome class barriers to enrollment.\" },\n    { word: \"status attainment\", translation: \"acquisition de statut\", example: \"The sociological model examines factors influencing status attainment in different societies.\" },\n    \n    o residents.\" },\n    { word: \"occupational mobility\", translation: \"mobilité professionnelle\", example: \"Digital skills training promotes occupational mobility in changing job markets.\" },\n    \n    { word: \"social advancement\", translation: \"avancement social\", example: \"The memoir describes her journey of social advancement from poverty to professional success.\" },\n    { word: \"achievement gap\", translation: \"écart de réussite\", example: \"Policy interventions aim to address the persistent achievement gap between demographic groups.\" },\n    { word: \"status inconsistency\", translation: \"incohérence de statut\", example: \"Status inconsistency occurs when individuals rank differently across various socioeconomic dimensions.\" },\n    { word: \"mobility pathway\", translation: \"voie de mobilité\", example: \"Community colleges provide an important mobility pathway for non-traditional students.\" },\n    { word: \"social elevator\", translation: \"ascenseur social\", example: \"Higher education historically functioned as a social elevator for working-class students.\" },\n    { word: \"mobility barrier\", translation: \"barrière à la mobilité\", example: \"Discriminatory hiring practices create mobility barriers for minority professionals.\" },\n    { word: \"status hierarchy\", translation: \"hiérarchie de statut\", example: \"The organization's status hierarchy became visible during resource allocation discussions.\" },\n    { word: \"meritocratic system\", translation: \"système méritocratique\", example: \"Critics question whether the current economic structure truly represents a meritocratic system.\" },\n    { word: \"social fluidity\", translation: \"fluidité sociale\", example: \"Nordic countries demonstrate greater social fluidity than many other developed economies.\" },\n    { word: \"positional competition\", translation: \"compétition positionnelle\", example: \"College admissions represent intense positional competition for limited opportunities.\" },\n    { word: \"credential inflation\", translation: \"inflation des diplômes\", example: \"Credential inflation has made master's degrees necessary for jobs that once required only bachelor's.\" },\n    { word: \"inherited advantage\", translation: \"avantage hérité\", example: \"Wealth transfers create inherited advantage that persists across generations.\" },\n    { word: \"socioeconomic integration\", translation: \"intégration socioéconomique\", example: \"The housing development was designed to promote socioeconomic integration in the neighborhood.\" },\n    { word: \"economic opportunity\", translation: \"opportunité économique\", example: \"Urban renewal projects should increase economic opportunity for existing residents.\" },\n    { word: \"status maintenance\", translation: \"maintien du statut\", example: \"Middle-class families employ various strategies for status maintenance in uncertain economies.\" },\n    { word: \"structural mobility\", translation: \"mobilité structurelle\", example: \"Technological change drives structural mobility as it transforms labor markets.\" },\n    { word: \"class consciousness\", translation: \"conscience de classe\", example: \"The labor movement sought to develop class consciousness among industrial workers.\" },\n    \n    // Construction identitaire\n    \n    { word: \"identity construction\", translation: \"construction identitaire\", example: \"Social media platforms influence identity construction among young users.\" },\n    { word: \"social identity\", translation: \"identité sociale\", example: \"Professional affiliations often become a central component of social identity.\" },\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    { word: \"identity work\", translation: \"travail identitaire\", example: \"Career transitions necessitate significant identity work as individuals reimagine themselves.\" },\n    \n    { word: \"situational identity\", translation: \"identité situationnelle\", example: \"Certain aspects of identity become more prominent in specific situational contexts.\" },\n    { word: \"hybridized identity\", translation: \"identité hybride\", example: \"Transnational communities often develop hybridized identities incorporating multiple cultural elements.\" },\n    \n    { word: \"identity cohesion\", translation: \"cohésion identitaire\", example: \"Traumatic experiences can disrupt identity cohesion and self-narrative continuity.\" },\n    { word: \"identity exploration\", translation: \"exploration identitaire\", example: \"College provides a context for identity exploration through exposure to diverse perspectives.\" },\n    \n    \n    { word: \"imposed identity\", translation: \"identité imposée\", example: \"Marginalized groups often struggle against stereotypes and imposed identity assumptions.\" },\n    { word: \"identity narrative\", translation: \"récit identitaire\", example: \"Personal identity narratives help individuals make meaning of their life experiences.\" },\n    { word: \"identity disruption\", translation: \"perturbation identitaire\", example: \"Serious illness can cause identity disruption as patients redefine themselves.\" },\n    { word: \"identity resilience\", translation: \"résilience identitaire\", example: \"Identity resilience allows adaptation to changing circumstances while maintaining core self-concepts.\" },\n    \n    { word: \"identity commitment\", translation: \"engagement identitaire\", example: \"Identity commitment develops as individuals solidify their values and life direction.\" },\n    { word: \"ascribed identity\", translation: \"identité attribuée\", example: \"Ascribed identity characteristics include attributes assigned at birth like ethnicity or gender.\" },\n    \n    // Idéologies contemporaines\n    \n    { word: \"neoliberalism\", translation: \"néolibéralisme\", example: \"Neoliberalism emphasizes free markets and minimal government intervention in the economy.\" },\n    { word: \"progressivism\", translation: \"progressisme\", example: \"Progressivism advocates social reform and addressing structural inequality.\" },\n    \n    \n    \n    \n    { word: \"libertarianism\", translation: \"libertarianisme\", example: \"Libertarianism prioritizes individual liberty and limited government authority.\" },\n    \n    { word: \"social democracy\", translation: \"social-démocratie\", example: \"Social democracy seeks to combine market economies with robust social welfare systems.\" },\n    { word: \"democratic socialism\", translation: \"socialisme démocratique\", example: \"Democratic socialism advocates democratic control of economic institutions.\" },\n    \n    \n    \n    { word: \"post-colonialism\", translation: \"post-colonialisme\", example: \"Post-colonialism examines cultural and political legacies of colonialism and imperialism.\" },\n    \n    { word: \"secular humanism\", translation: \"humanisme séculier\", example: \"Secular humanism emphasizes human agency and rationality over religious authority.\" },\n    { word: \"religious fundamentalism\", translation: \"fondamentalisme religieux\", example: \"Religious fundamentalism advocates strict adherence to doctrinal orthodoxy.\" },\n    { word: \"techno-utopianism\", translation: \"techno-utopisme\", example: \"Techno-utopianism envisions technological progress solving humanity's greatest challenges.\" },\n    { word: \"anti-globalism\", translation: \"anti-mondialisme\", example: \"Anti-globalism opposes international economic integration and supranational governance.\" },\n    \n    { word: \"communitarianism\", translation: \"communautarisme\", example: \"Communitarianism emphasizes the importance of community bonds and shared values.\" },\n    \n    { word: \"nativism\", translation: \"nativisme\", example: \"Nativism favors the interests of native-born citizens over immigrants.\" },\n    { word: \"identitarianism\", translation: \"identitarisme\", example: \"Identitarianism emphasizes collective identity based on ethnic or cultural heritage.\" },\n    \n    \n    \n    { word: \"accelerationism\", translation: \"accélérationnisme\", example: \"Accelerationism proposes intensifying capitalism's contradictions to hasten systemic change.\" },\n    { word: \"technocracy\", translation: \"technocratie\", example: \"Technocracy advocates governance by technical experts rather than elected representatives.\" },\n    \n    // Analyse intersectionnelle\n    \n    { word: \"overlapping oppression\", translation: \"oppression superposée\", example: \"The study documented overlapping oppression affecting women of color in professional settings.\" },\n    { word: \"identity intersection\", translation: \"intersection identitaire\", example: \"Policy effectiveness depends on recognizing identity intersections among target populations.\" },\n    \n    { word: \"interlocking systems\", translation: \"systèmes imbriqués\", example: \"Feminist theory examines interlocking systems of oppression including sexism and racism.\" },\n    { word: \"compound disadvantage\", translation: \"désavantage composé\", example: \"Rural minority communities often experience compound disadvantage in accessing services.\" },\n    { word: \"matrix of domination\", translation: \"matrice de domination\", example: \"Collins described a matrix of domination affecting individuals differently based on social location.\" },\n    { word: \"multiple marginalization\", translation: \"marginalisation multiple\", example: \"The research documented multiple marginalization experienced by LGBTQ+ people with disabilities.\" },\n    { word: \"intersectional analysis\", translation: \"analyse intersectionnelle\", example: \"Intersectional analysis reveals how policy outcomes vary across demographic groups.\" },\n    { word: \"layered identity\", translation: \"identité stratifiée\", example: \"Autobiography allows exploration of layered identity influenced by race, class, and nationality.\" },\n    { word: \"intersectional feminism\", translation: \"féminisme intersectionnel\", example: \"Intersectional feminism addresses diverse women's experiences across cultural contexts.\" },\n    { word: \"social location\", translation: \"position sociale\", example: \"Social location influences individual perspectives and access to resources.\" },\n    { word: \"cumulative disadvantage\", translation: \"désavantage cumulatif\", example: \"Longitudinal studies reveal cumulative disadvantage affecting career trajectories.\" },\n    { word: \"privilege intersection\", translation: \"intersection de privilèges\", example: \"Privilege intersection creates unearned advantages for certain demographic combinations.\" },\n    { word: \"multidimensional inequality\", translation: \"inégalité multidimensionnelle\", example: \"Effective policy must address multidimensional inequality beyond single-factor approaches.\" },\n    { word: \"complex marginality\", translation: \"marginalité complexe\", example: \"Research on complex marginality examines how multiple factors limit social participation.\" },\n    { word: \"contextual analysis\", translation: \"analyse contextuelle\", example: \"Contextual analysis explores how systemic factors shape individual experiences.\" },\n    { word: \"identity-based discrimination\", translation: \"discrimination fondée sur l'identité\", example: \"Corporate training addresses identity-based discrimination in hiring and promotion.\" },\n    { word: \"integrated approach\", translation: \"approche intégrée\", example: \"The organization adopted an integrated approach to diversity that considered multiple dimensions.\" },\n    { word: \"standpoint epistemology\", translation: \"épistémologie du positionnement\", example: \"Standpoint epistemology recognizes how social position influences knowledge production.\" },\n    { word: \"intersectional lens\", translation: \"perspective intersectionnelle\", example: \"Applying an intersectional lens reveals different experiences of apparently neutral policies.\" },\n    { word: \"overlapping identity\", translation: \"identité superposée\", example: \"Overlapping identity characteristics create distinct experiences of social institutions.\" },\n    { word: \"interconnected oppression\", translation: \"oppression interconnectée\", example: \"The framework analyzes interconnected oppression across economic and social domains.\" },\n    { word: \"intersectional invisibility\", translation: \"invisibilité intersectionnelle\", example: \"Research documents intersectional invisibility of women of color in historical narratives.\" },\n    { word: \"multiplicative effect\", translation: \"effet multiplicateur\", example: \"Discrimination often exhibits a multiplicative effect rather than simply additive impact.\" },\n    { word: \"intersectional methodology\", translation: \"méthodologie intersectionnelle\", example: \"Researchers developed intersectional methodology to capture complex demographic interactions.\" },\n    { word: \"identity confluence\", translation: \"confluence identitaire\", example: \"Identity confluence creates unique experiences not reducible to individual categories.\" },\n    { word: \"differential vulnerability\", translation: \"vulnérabilité différentielle\", example: \"Climate change creates differential vulnerability based on geographic and socioeconomic factors.\" },\n    { word: \"intersectional intervention\", translation: \"intervention intersectionnelle\", example: \"Effective programs develop intersectional intervention strategies rather than universal approaches.\" },\n    { word: \"intersectional justice\", translation: \"justice intersectionnelle\", example: \"Advocates promote intersectional justice addressing multiple dimensions of inequality simultaneously.\" },\n    \n    // Études de genre\n    { word: \"gender studies\", translation: \"études de genre\", example: \"Gender studies programs examine how gender shapes social and cultural experiences.\" },\n    { word: \"gender socialization\", translation: \"socialisation de genre\", example: \"Gender socialization begins in early childhood through family interactions and media exposure.\" },\n    { word: \"gender norm\", translation: \"norme de genre\", example: \"Gender norms vary significantly across cultural and historical contexts.\" },\n    \n    { word: \"gender expression\", translation: \"expression de genre\", example: \"Gender expression involves how individuals communicate their gender through appearance and behavior.\" },\n    { word: \"gender binary\", translation: \"binarité de genre\", example: \"Many societies traditionally enforce a gender binary categorizing people as exclusively male or female.\" },\n    { word: \"gender fluidity\", translation: \"fluidité de genre\", example: \"Gender fluidity describes gender identity that varies over time or context.\" },\n    { word: \"gender variance\", translation: \"variance de genre\", example: \"Gender variance has been documented across many cultural traditions throughout history.\" },\n    { word: \"gender conformity\", translation: \"conformité de genre\", example: \"Social pressure often encourages gender conformity beginning in early childhood.\" },\n    { word: \"gender role\", translation: \"rôle de genre\", example: \"Traditional gender roles assign different responsibilities based on gender identity.\" },\n    { word: \"gender stereotype\", translation: \"stéréotype de genre\", example: \"Gender stereotypes can limit individual opportunity and expression.\" },\n    { word: \"gender bias\", translation: \"biais de genre\", example: \"Research has documented gender bias in hiring practices across multiple industries.\" },\n    { word: \"gender gap\", translation: \"écart entre les genres\", example: \"The gender gap in STEM fields remains significant despite equity initiatives.\" },\n    { word: \"gender mainstreaming\", translation: \"intégration de la dimension de genre\", example: \"The organization implemented gender mainstreaming in all policy development.\" },\n    \n    { word: \"gender equity\", translation: \"équité entre les genres\", example: \"Gender equity focuses on fairness in outcomes rather than identical treatment.\" },\n    { word: \"gender discrimination\", translation: \"discrimination de genre\", example: \"Legislation prohibits gender discrimination in employment and education.\" },\n    { word: \"gender-based violence\", translation: \"violence basée sur le genre\", example: \"Organizations work to address gender-based violence in conflict regions.\" },\n    { word: \"gender analysis\", translation: \"analyse de genre\", example: \"Gender analysis examines how policies affect people differently based on gender.\" },\n    { word: \"patriarchal system\", translation: \"système patriarcal\", example: \"Feminist theory critiques patriarchal systems that privilege male authority.\" },\n    { word: \"feminist theory\", translation: \"théorie féministe\", example: \"Feminist theory encompasses diverse perspectives on gender inequity and empowerment.\" },\n    { word: \"gender performativity\", translation: \"performativité de genre\", example: \"Butler's concept of gender performativity suggests gender is continually created through repeated acts.\" },\n    { word: \"gender schema\", translation: \"schéma de genre\", example: \"Children develop gender schemas that influence information processing and behavior.\" },\n    { word: \"gender politics\", translation: \"politique de genre\", example: \"Gender politics addresses power dynamics between genders in social institutions.\" },\n    { word: \"genderqueer\", translation: \"genderqueer\", example: \"Some individuals identify as genderqueer, rejecting binary gender categorization.\" },\n    { word: \"cisgender\", translation: \"cisgenre\", example: \"Cisgender individuals identify with the gender assigned to them at birth.\" },\n    { word: \"transgender\", translation: \"transgenre\", example: \"Transgender individuals identify with a gender different from that assigned at birth.\" },\n    { word: \"hegemonic masculinity\", translation: \"masculinité hégémonique\", example: \"Connell's concept of hegemonic masculinity examines dominant male ideals in society.\" },\n    { word: \"gender nonconforming\", translation: \"non-conforme au genre\", example: \"Gender nonconforming individuals express gender in ways that don't follow conventional expectations.\" },\n    { word: \"gender stratification\", translation: \"stratification de genre\", example: \"Gender stratification creates systematic inequalities based on gender identity.\" },\n    \n    // Phénomènes socioculturels\n    { word: \"cultural phenomenon\", translation: \"phénomène culturel\", example: \"Social media has emerged as a cultural phenomenon reshaping communication patterns.\" },\n    \n    { word: \"cultural trend\", translation: \"tendance culturelle\", example: \"Minimalism represents a cultural trend responding to consumer excess and environmental concerns.\" },\n    { word: \"moral panic\", translation: \"panique morale\", example: \"Media coverage sometimes generates moral panic about youth behaviors and technology use.\" },\n    { word: \"counterculture\", translation: \"contre-culture\", example: \"The 1960s counterculture challenged dominant social norms and political institutions.\" },\n    { word: \"subculture\", translation: \"sous-culture\", example: \"Urban skateboarding represents a subculture with distinct practices and aesthetic values.\" },\n    \n    { word: \"cultural polarization\", translation: \"polarisation culturelle\", example: \"Political discourse increasingly reflects cultural polarization on social issues.\" },\n    { word: \"culture war\", translation: \"guerre culturelle\", example: \"Education policies often become battlegrounds in ongoing culture wars.\" },\n    \n    \n    { word: \"sociocultural evolution\", translation: \"évolution socioculturelle\", example: \"Digital communication has accelerated sociocultural evolution in recent decades.\" },\n    { word: \"lifestyle movement\", translation: \"mouvement de style de vie\", example: \"Veganism represents a lifestyle movement connecting personal choices with ethical positions.\" },\n    { word: \"cultural revival\", translation: \"renouveau culturel\", example: \"Indigenous language programs contribute to cultural revival in many communities.\" },\n    { word: \"symbolic interaction\", translation: \"interaction symbolique\", example: \"Fashion choices represent symbolic interaction communicating identity and affiliation.\" },\n    { word: \"urban tribe\", translation: \"tribu urbaine\", example: \"Coworking spaces have created urban tribes based on shared work patterns and values.\" },\n    { word: \"networked individualism\", translation: \"individualisme en réseau\", example: \"Digital connectivity supports networked individualism rather than traditional community structures.\" },\n    \n    { word: \"cultural lag\", translation: \"décalage culturel\", example: \"Ethics frameworks often experience cultural lag behind rapid technological development.\" },\n    { word: \"mass hysteria\", translation: \"hystérie collective\", example: \"The incident was later attributed to mass hysteria rather than environmental toxins.\" },\n    \n    { word: \"cultural trauma\", translation: \"traumatisme culturel\", example: \"The genocide created cultural trauma affecting multiple generations.\" },\n    \n    \n    { word: \"cultural conflict\", translation: \"conflit culturel\", example: \"Immigration policies often generate cultural conflict between different value systems.\" },\n    { word: \"social ritual\", translation: \"rituel social\", example: \"Graduation ceremonies function as social rituals marking life transitions.\" },\n    { word: \"cultural resistance\", translation: \"résistance culturelle\", example: \"Music often serves as cultural resistance for marginalized communities.\" },\n    \n    { word: \"consumer culture\", translation: \"culture de consommation\", example: \"Advertising promotes consumer culture by associating products with identity and status.\" },\n    { word: \"cultural capital\", translation: \"capital culturel\", example: \"Educational systems often reward students who possess specific forms of cultural capital.\" }\n  ]\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-50-31.600Z\\C2_05_sciences_medicales.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token but","line":40,"column":16}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const vocab = {\n  title: \"Sciences Médicales Avancées\",\n  words: [\n    // Recherche médicale (25 mots)\n    \n    \n    { word: \"biomedical research\", translation: \"recherche biomédicale\", example: \"Biomedical research explores the mechanisms of disease at the molecular level.\" },\n    { word: \"evidence-based medicine\", translation: \"médecine fondée sur les preuves\", example: \"Evidence-based medicine integrates clinical expertise with systematic research.\" },\n    \n    \n    \n    \n    { word: \"research protocol\", translation: \"protocole de recherche\", example: \"The research protocol outlined methodology, objectives, and ethical considerations.\" },\n    \n    \n    { word: \"systematic review\", translation: \"revue systématique\", example: \"The systematic review identified consistent findings across multiple studies.\" },\n    \n    \n    { word: \"clinical endpoint\", translation: \"critère d'évaluation clinique\", example: \"Survival rate was the primary clinical endpoint in the cancer study.\" },\n    \n    \n    \n    \n    { word: \"investigational drug\", translation: \"médicament expérimental\", example: \"The investigational drug showed promise in preliminary animal studies.\" },\n    { word: \"research grant\", translation: \"subvention de recherche\", example: \"The research grant funded their investigation into autoimmune disorders.\" },\n    { word: \"bench research\", translation: \"recherche fondamentale\", example: \"Bench research identified the cellular pathway responsible for the condition.\" },\n    { word: \"clinical correlation\", translation: \"corrélation clinique\", example: \"The researchers established clinical correlation between the biomarker and disease progression.\" },\n    { word: \"research pipeline\", translation: \"pipeline de recherche\", example: \"Their research pipeline includes several compounds in various development stages.\" },\n    \n    \n    // Génétique médicale (25 mots)\n    \n    \n    { word: \"genetic screening\", translation: \"dépistage génétique\", example: \"Genetic screening identifies individuals at risk for heritable conditions.\" },\n    \n    { word: \"genetic biomarker\", translation: \"biomarqueur génétique\", example: \"The genetic biomarker predicted treatment response in cancer patients.\" },\n    { word: \"whole genome sequencing\", translation: \"séquençage du génome entier\", example: \"Whole genome sequencing analyzed the patient's complete genetic code.\" },\n    { word: \"germline mutation\", translation: \"mutation germinale\", example: \"Germline mutations can be passed to offspring, unlike somatic mutations.\" },\n    \n    eptibility but doesn't guarantee development.\" },\n    { word: \"gene expression\", translation: \"expression génique\", example: \"Gene expression profiling revealed activity patterns in tumor cells.\" },\n    \n    { word: \"genetic variant\", translation: \"variant génétique\", example: \"The genetic variant was associated with increased heart disease risk.\" },\n    { word: \"DNA methylation\", translation: \"méthylation de l'ADN\", example: \"DNA methylation patterns serve as epigenetic markers affecting gene activity.\" },\n    { word: \"exome sequencing\", translation: \"séquençage de l'exome\", example: \"Exome sequencing analyzes protein-coding regions of the genome.\" },\n    { word: \"genetic risk factor\", translation: \"facteur de risque génétique\", example: \"The genetic risk factor increased susceptibility to the autoimmune condition.\" },\n    { word: \"single nucleotide polymorphism\", translation: \"polymorphisme mononucléotidique\", example: \"Single nucleotide polymorphisms are the most common type of genetic variation.\" },\n    { word: \"genetic linkage\", translation: \"liaison génétique\", example: \"Genetic linkage analysis traced the inheritance pattern across generations.\" },\n    { word: \"genomic profiling\", translation: \"profilage génomique\", example: \"Genomic profiling guided personalized treatment selection for the patient.\" },\n    { word: \"allele frequency\", translation: \"fréquence allélique\", example: \"Allele frequency varies significantly between different populations.\" },\n    { word: \"genetic heterogeneity\", translation: \"hétérogénéité génétique\", example: \"Genetic heterogeneity complicates diagnosis of complex disorders.\" },\n    { word: \"genetic penetrance\", translation: \"pénétrance génétique\", example: \"Genetic penetrance describes the proportion of individuals with a mutation who exhibit symptoms.\" },\n    { word: \"functional genomics\", translation: \"génomique fonctionnelle\", example: \"Functional genomics investigates gene functions and interactions.\" },\n    { word: \"RNA sequencing\", translation: \"séquençage d'ARN\", example: \"RNA sequencing revealed gene activity patterns in different tissues.\" },\n    { word: \"genetic cascade\", translation: \"cascade génétique\", example: \"The genetic cascade involved multiple interacting pathways.\" },\n    \n    // Neurologie avancée (25 mots)\n    \n    { word: \"neurodegenerative disease\", translation: \"maladie neurodégénérative\", example: \"Alzheimer's disease is a common neurodegenerative disease affecting cognition.\" },\n    { word: \"functional MRI\", translation: \"IRM fonctionnelle\", example: \"Functional MRI measures brain activity by detecting blood flow changes.\" },\n    \n    \n    { word: \"brain-computer interface\", translation: \"interface cerveau-ordinateur\", example: \"Brain-computer interfaces translate neural activity into digital commands.\" },\n    { word: \"neuromodulation\", translation: \"neuromodulation\", example: \"Neuromodulation therapies alter nerve activity to treat conditions.\" },\n    { word: \"connectome\", translation: \"connectome\", example: \"The human connectome maps neural connections within the brain.\" },\n    { word: \"neurocognitive\", translation: \"neurocognitif\", example: \"Neurocognitive testing assessed memory, attention, and executive function.\" },\n    { word: \"neural circuit\", translation: \"circuit neuronal\", example: \"The research identified neural circuits involved in anxiety responses.\" },\n    { word: \"neuroinflammation\", translation: \"neuroinflammation\", example: \"Neuroinflammation contributes to many neurological disorders.\" },\n    { word: \"synaptic plasticity\", translation: \"plasticité synaptique\", example: \"Synaptic plasticity underlies learning and memory formation.\" },\n    { word: \"axonal transport\", translation: \"transport axonal\", example: \"Disrupted axonal transport contributes to neurodegenerative diseases.\" },\n    { word: \"neurostimulation\", translation: \"neurostimulation\", example: \"Neurostimulation therapies deliver electrical pulses to targeted brain regions.\" },\n    { word: \"tractography\", translation: \"tractographie\", example: \"Tractography visualizes neural pathways using diffusion imaging.\" },\n    \n    { word: \"neural oscillation\", translation: \"oscillation neuronale\", example: \"Neural oscillations represent synchronized activity across brain regions.\" },\n    { word: \"optogenetics\", translation: \"optogénétique\", example: \"Optogenetics controls neurons using light-sensitive proteins.\" },\n    { word: \"neuroproteomics\", translation: \"neuroprotéomique\", example: \"Neuroproteomics studies protein expression in neural tissues.\" },\n    { word: \"blood-brain barrier\", translation: \"barrière hémato-encéphalique\", example: \"The blood-brain barrier selectively restricts substance passage to the brain.\" },\n    { word: \"neurofeedback\", translation: \"neurofeedback\", example: \"Neurofeedback training helps patients regulate their brain activity.\" },\n    { word: \"cerebral organoid\", translation: \"organoïde cérébral\", example: \"Cerebral organoids model early brain development in laboratory settings.\" },\n    \n    { word: \"neural stem cell\", translation: \"cellule souche neurale\", example: \"Neural stem cells can differentiate into various cell types in the nervous system.\" },\n    { word: \"electrophysiology\", translation: \"électrophysiologie\", example: \"Electrophysiology measures electrical activity in neural tissues.\" },\n    \n    // Immunologie et maladies infectieuses (25 mots)\n    { word: \"immune response\", translation: \"réponse immunitaire\", example: \"The vaccine triggers a protective immune response against the pathogen.\" },\n    \n    { word: \"monoclonal antibody\", translation: \"anticorps monoclonal\", example: \"Monoclonal antibodies target specific antigens with high precision.\" },\n    { word: \"adaptive immunity\", translation: \"immunité adaptative\", example: \"Adaptive immunity develops specific responses to pathogens encountered.\" },\n    { word: \"innate immunity\", translation: \"immunité innée\", example: \"Innate immunity provides rapid, non-specific defense against pathogens.\" },\n    { word: \"cytokine storm\", translation: \"tempête de cytokines\", example: \"A cytokine storm involves excessive immune system activation causing tissue damage.\" },\n    { word: \"autoimmune disease\", translation: \"maladie auto-immune\", example: \"In autoimmune diseases, the immune system attacks healthy body tissues.\" },\n    { word: \"antigen presentation\", translation: \"présentation d'antigène\", example: \"Antigen presentation displays foreign molecules to immune cells.\" },\n    { word: \"T-cell receptor\", translation: \"récepteur des lymphocytes T\", example: \"T-cell receptors recognize antigens presented by other cells.\" },\n    { word: \"vaccine adjuvant\", translation: \"adjuvant vaccinal\", example: \"Vaccine adjuvants enhance immune responses to vaccine components.\" },\n    \n    { word: \"viral vector\", translation: \"vecteur viral\", example: \"Viral vectors deliver therapeutic genes in some vaccines and treatments.\" },\n    \n    { word: \"immunological memory\", translation: \"mémoire immunologique\", example: \"Immunological memory enables rapid responses to previously encountered pathogens.\" },\n    { word: \"antigenic drift\", translation: \"dérive antigénique\", example: \"Antigenic drift creates gradual mutations in viral surface proteins.\" },\n    { word: \"immunosuppression\", translation: \"immunosuppression\", example: \"Immunosuppression prevents rejection of transplanted organs.\" },\n    { word: \"serological testing\", translation: \"test sérologique\", example: \"Serological testing detects antibodies indicating prior infection.\" },\n    { word: \"antimicrobial resistance\", translation: \"résistance aux antimicrobiens\", example: \"Antimicrobial resistance develops when pathogens evolve to survive treatments.\" },\n    { word: \"epitope\", translation: \"épitope\", example: \"An epitope is the specific part of an antigen recognized by antibodies.\" },\n    { word: \"immunoglobulin\", translation: \"immunoglobuline\", example: \"Immunoglobulins are proteins that function as antibodies.\" },\n    \n    { word: \"passive immunity\", translation: \"immunité passive\", example: \"Passive immunity involves transferring antibodies from one individual to another.\" },\n    { word: \"disease vector\", translation: \"vecteur de maladie\", example: \"Mosquitoes serve as disease vectors for malaria and other infections.\" },\n    { word: \"virulence factor\", translation: \"facteur de virulence\", example: \"Virulence factors enhance a pathogen's ability to cause disease.\" },\n    { word: \"immune checkpoint\", translation: \"point de contrôle immunitaire\", example: \"Immune checkpoint inhibitors enhance T-cell responses against cancer.\" },\n    \n    // Chirurgie et techniques médicales (25 mots)\n    { word: \"minimally invasive surgery\", translation: \"chirurgie mini-invasive\", example: \"Minimally invasive surgery reduces recovery time and complications.\" },\n    \n    { word: \"laparoscopic procedure\", translation: \"procédure laparoscopique\", example: \"The laparoscopic procedure required only small incisions.\" },\n    { word: \"interventional radiology\", translation: \"radiologie interventionnelle\", example: \"Interventional radiology uses imaging guidance for minimally invasive procedures.\" },\n    { word: \"endovascular surgery\", translation: \"chirurgie endovasculaire\", example: \"Endovascular surgery treats blood vessel problems without open operations.\" },\n    { word: \"intraoperative imaging\", translation: \"imagerie peropératoire\", example: \"Intraoperative imaging guides surgeons during the procedure.\" },\n    { word: \"microsurgery\", translation: \"microchirurgie\", example: \"Microsurgery involves operating on tiny structures using magnification.\" },\n    \n    { word: \"surgical navigation\", translation: \"navigation chirurgicale\", example: \"Surgical navigation systems provide real-time guidance during procedures.\" },\n    { word: \"hybrid operating room\", translation: \"salle d'opération hybride\", example: \"The hybrid operating room combined surgical and imaging capabilities.\" },\n    { word: \"endoscopic procedure\", translation: \"procédure endoscopique\", example: \"Endoscopic procedures use flexible tubes with cameras to view internal organs.\" },\n    { word: \"stereotactic surgery\", translation: \"chirurgie stéréotaxique\", example: \"Stereotactic surgery pinpoints locations using three-dimensional coordinates.\" },\n    { word: \"ablation therapy\", translation: \"thérapie par ablation\", example: \"Ablation therapy destroys abnormal tissue using heat, cold, or chemicals.\" },\n    { word: \"surgical anastomosis\", translation: \"anastomose chirurgicale\", example: \"Surgical anastomosis connects two structures, typically blood vessels or bowel segments.\" },\n    { word: \"transplantation\", translation: \"transplantation\", example: \"Organ transplantation replaces failed organs with healthy donor tissues.\" },\n    { word: \"prosthetic implant\", translation: \"implant prothétique\", example: \"The prosthetic implant restored function after limb amputation.\" },\n    { word: \"surgical debridement\", translation: \"débridement chirurgical\", example: \"Surgical debridement removes dead tissue to promote healing.\" },\n    { word: \"catheter-based intervention\", translation: \"intervention par cathéter\", example: \"Catheter-based interventions treat cardiovascular conditions through blood vessels.\" },\n    { word: \"image-guided surgery\", translation: \"chirurgie guidée par l'image\", example: \"Image-guided surgery improves precision and reduces complications.\" },\n    { word: \"surgical stapling\", translation: \"agrafage chirurgical\", example: \"Surgical stapling provides rapid tissue closure during operations.\" },\n    { word: \"reconstructive surgery\", translation: \"chirurgie reconstructrice\", example: \"Reconstructive surgery restores appearance and function after injury or disease.\" },\n    { word: \"laser surgery\", translation: \"chirurgie au laser\", example: \"Laser surgery uses focused light for precise tissue manipulation.\" },\n    { word: \"endoprosthesis\", translation: \"endoprothèse\", example: \"The endoprosthesis replaced the damaged joint surfaces.\" },\n    { word: \"surgical adhesive\", translation: \"adhésif chirurgical\", example: \"Surgical adhesives bond tissues without traditional sutures.\" },\n    { word: \"intraoperative monitoring\", translation: \"surveillance peropératoire\", example: \"Intraoperative monitoring tracks vital functions during surgery.\" },\n    \n    // Oncologie avancée (25 mots)\n    \n    { word: \"tumor microenvironment\", translation: \"microenvironnement tumoral\", example: \"The tumor microenvironment includes surrounding blood vessels and immune cells.\" },\n    { word: \"cancer immunotherapy\", translation: \"immunothérapie contre le cancer\", example: \"Cancer immunotherapy enhances the immune system's ability to fight tumors.\" },\n    { word: \"precision oncology\", translation: \"oncologie de précision\", example: \"Precision oncology tailors treatment based on molecular characteristics of tumors.\" },\n    { word: \"metastasis\", translation: \"métastase\", example: \"Metastasis occurs when cancer spreads from its original site to distant organs.\" },\n    { word: \"oncogenic mutation\", translation: \"mutation oncogénique\", example: \"Oncogenic mutations transform normal cells into cancerous ones.\" },\n    { word: \"tumor suppressor gene\", translation: \"gène suppresseur de tumeur\", example: \"Tumor suppressor genes regulate cell division and prevent uncontrolled growth.\" },\n    \n    { word: \"cancer biomarker\", translation: \"biomarqueur du cancer\", example: \"Cancer biomarkers help diagnose, predict outcomes, and guide treatment decisions.\" },\n    { word: \"checkpoint inhibitor\", translation: \"inhibiteur de point de contrôle\", example: \"Checkpoint inhibitors block proteins that restrain immune responses to cancer.\" },\n    { word: \"tumor heterogeneity\", translation: \"hétérogénéité tumorale\", example: \"Tumor heterogeneity describes genetic diversity within a single tumor.\" },\n    { word: \"circulating tumor DNA\", translation: \"ADN tumoral circulant\", example: \"Circulating tumor DNA provides non-invasive monitoring of cancer mutations.\" },\n    { word: \"cancer staging\", translation: \"stadification du cancer\", example: \"Cancer staging determines the extent of disease to guide treatment planning.\" },\n    { word: \"neoadjuvant therapy\", translation: \"thérapie néoadjuvante\", example: \"Neoadjuvant therapy treats cancer before the main intervention, typically surgery.\" },\n    { word: \"adjuvant therapy\", translation: \"thérapie adjuvante\", example: \"Adjuvant therapy follows primary treatment to reduce recurrence risk.\" },\n    { word: \"radiation oncology\", translation: \"radio-oncologie\", example: \"Radiation oncology uses ionizing radiation to control malignant cells.\" },\n    { word: \"cancer remission\", translation: \"rémission du cancer\", example: \"Cancer remission indicates decrease or disappearance of disease signs.\" },\n    { word: \"radiotherapy\", translation: \"radiothérapie\", example: \"Radiotherapy damages cancer cell DNA to prevent replication.\" },\n    { word: \"chemoresistance\", translation: \"chimiorésistance\", example: \"Chemoresistance develops when cancer cells no longer respond to chemotherapy.\" },\n    { word: \"tumor angiogenesis\", translation: \"angiogenèse tumorale\", example: \"Tumor angiogenesis forms new blood vessels to support cancer growth.\" },\n    \n    { word: \"oncogene\", translation: \"oncogène\", example: \"Oncogenes can transform normal cells into tumor cells when activated.\" },\n    { word: \"apoptosis\", translation: \"apoptose\", example: \"Many cancer treatments induce apoptosis, or programmed cell death.\" },\n    { word: \"cancer metabolism\", translation: \"métabolisme du cancer\", example: \"Cancer metabolism studies how tumor cells process nutrients differently.\" },\n    { word: \"therapeutic resistance\", translation: \"résistance thérapeutique\", example: \"Therapeutic resistance occurs when cancers adapt to evade treatments.\" },\n    \n    // Imagerie médicale avancée (25 mots)\n    { word: \"advanced imaging\", translation: \"imagerie avancée\", example: \"Advanced imaging techniques provide detailed anatomical and functional information.\" },\n    { word: \"positron emission tomography\", translation: \"tomographie par émission de positons\", example: \"Positron emission tomography visualizes metabolic processes within the body.\" },\n    \n    { word: \"diffusion tensor imaging\", translation: \"imagerie du tenseur de diffusion\", example: \"Diffusion tensor imaging maps water molecule movement in tissues.\" },\n    { word: \"spectral CT\", translation: \"tomodensitométrie spectrale\", example: \"Spectral CT distinguishes tissues based on material composition.\" },\n    { word: \"molecular imaging\", translation: \"imagerie moléculaire\", example: \"Molecular imaging visualizes biological processes at the cellular level.\" },\n    { word: \"contrast enhancement\", translation: \"rehaussement de contraste\", example: \"Contrast enhancement improves visualization of specific structures.\" },\n    { word: \"image reconstruction\", translation: \"reconstruction d'image\", example: \"Image reconstruction creates visual representations from sensor data.\" },\n    { word: \"interventional imaging\", translation: \"imagerie interventionnelle\", example: \"Interventional imaging guides minimally invasive procedures in real-time.\" },\n    { word: \"elastography\", translation: \"élastographie\", example: \"Elastography measures tissue stiffness to detect pathological changes.\" },\n    { word: \"magnetic resonance spectroscopy\", translation: \"spectroscopie par résonance magnétique\", example: \"Magnetic resonance spectroscopy analyzes chemical composition of tissues.\" },\n    { word: \"perfusion imaging\", translation: \"imagerie de perfusion\", example: \"Perfusion imaging evaluates blood flow through tissues and organs.\" },\n    { word: \"quantitative imaging\", translation: \"imagerie quantitative\", example: \"Quantitative imaging extracts measurable features from medical images.\" },\n    { word: \"hybrid imaging\", translation: \"imagerie hybride\", example: \"Hybrid imaging combines multiple techniques for comprehensive assessment.\" },\n    { word: \"image registration\", translation: \"recalage d'image\", example: \"Image registration aligns images from different times or modalities.\" },\n    { word: \"volumetric imaging\", translation: \"imagerie volumétrique\", example: \"Volumetric imaging creates three-dimensional representations of anatomical structures.\" },\n    { word: \"image segmentation\", translation: \"segmentation d'image\", example: \"Image segmentation identifies and isolates specific structures for analysis.\" },\n    { word: \"optical coherence tomography\", translation: \"tomographie par cohérence optique\", example: \"Optical coherence tomography provides cross-sectional tissue imaging.\" },\n    { word: \"radiomics\", translation: \"radiomique\", example: \"Radiomics extracts quantitative features from medical images for analysis.\" },\n    { word: \"parametric mapping\", translation: \"cartographie paramétrique\", example: \"Parametric mapping quantifies physiological parameters from imaging data.\" },\n    { word: \"image biomarker\", translation: \"biomarqueur d'imagerie\", example: \"Image biomarkers predict disease progression or treatment response.\" },\n    { word: \"photoacoustic imaging\", translation: \"imagerie photoacoustique\", example: \"Photoacoustic imaging combines light and sound for high-contrast visualization.\" },\n    { word: \"susceptibility-weighted imaging\", translation: \"imagerie pondérée en susceptibilité\", example: \"Susceptibility-weighted imaging detects small amounts of blood or minerals.\" },\n    { word: \"image-guided therapy\", translation: \"thérapie guidée par l'image\", example: \"Image-guided therapy uses real-time visualization to direct treatment.\" },\n    { word: \"artificial intelligence imaging\", translation: \"imagerie par intelligence artificielle\", example: \"Artificial intelligence enhances image interpretation and analysis.\" },\n    \n    // Santé numérique (25 mots)\n    \n    \n    { word: \"electronic health record\", translation: \"dossier médical électronique\", example: \"Electronic health records store patient information in digital format.\" },\n    { word: \"health informatics\", translation: \"informatique de la santé\", example: \"Health informatics applies information technology to healthcare delivery.\" },\n    { word: \"remote patient monitoring\", translation: \"surveillance à distance des patients\", example: \"Remote patient monitoring tracks health status outside clinical settings.\" },\n    { word: \"clinical decision support\", translation: \"aide à la décision clinique\", example: \"Clinical decision support systems assist healthcare providers with evidence-based recommendations.\" },\n    { word: \"health data analytics\", translation: \"analyse de données de santé\", example: \"Health data analytics identifies patterns to improve clinical outcomes.\" },\n    { word: \"mHealth\", translation: \"santé mobile\", example: \"mHealth applications deliver healthcare services through mobile devices.\" },\n    \n    { word: \"patient portal\", translation: \"portail patient\", example: \"Patient portals provide secure online access to personal health information.\" },\n    \n    \n    { word: \"healthcare artificial intelligence\", translation: \"intelligence artificielle pour la santé\", example: \"Healthcare artificial intelligence analyzes complex medical data to support decisions.\" },\n    \n    \n    \n    { word: \"virtual reality therapy\", translation: \"thérapie par réalité virtuelle\", example: \"Virtual reality therapy treats psychological conditions through immersive environments.\" },\n    { word: \"digital biomarker\", translation: \"biomarqueur numérique\", example: \"Digital biomarkers measure health status through personal digital devices.\" },\n    \n    { word: \"patient-generated health data\", translation: \"données de santé générées par le patient\", example: \"Patient-generated health data comes from personal devices and applications.\" },\n    { word: \"connected health device\", translation: \"dispositif de santé connecté\", example: \"Connected health devices transmit information to monitoring systems.\" },\n    { word: \"digital health platform\", translation: \"plateforme de santé numérique\", example: \"Digital health platforms integrate various applications and services.\" },\n    { word: \"remote consultation\", translation: \"consultation à distance\", example: \"Remote consultation provides medical advice without in-person visits.\" },\n    { word: \"e-prescription\", translation: \"e-prescription\", example: \"E-prescription systems transmit medication orders electronically.\" },\n    \n    \n    // Médecine personnalisée (25 mots)\n    \n    { word: \"pharmacogenomics\", translation: \"pharmacogénomique\", example: \"Pharmacogenomics studies how genes affect medication response.\" },\n    { word: \"precision treatment\", translation: \"traitement de précision\", example: \"Precision treatment approaches target specific disease mechanisms.\" },\n    \n    { word: \"genetic risk assessment\", translation: \"évaluation du risque génétique\", example: \"Genetic risk assessment predicts disease susceptibility based on DNA analysis.\" },\n    \n    \n    { word: \"individualized treatment plan\", translation: \"plan de traitement individualisé\", example: \"The individualized treatment plan addressed the patient's unique characteristics.\" },\n    { word: \"biomarker panel\", translation: \"panel de biomarqueurs\", example: \"The biomarker panel predicted treatment response with high accuracy.\" },\n    { word: \"therapeutic drug monitoring\", translation: \"suivi thérapeutique des médicaments\", example: \"Therapeutic drug monitoring adjusts dosage based on measured drug levels.\" },\n    \n    { word: \"personalized dosing\", translation: \"dosage personnalisé\", example: \"Personalized dosing optimizes medication effectiveness while minimizing side effects.\" },\n    \n    \n    { word: \"genome-guided therapy\", translation: \"thérapie guidée par le génome\", example: \"Genome-guided therapy selects treatments based on genetic information.\" },\n    \n    { word: \"prognostic test\", translation: \"test pronostique\", example: \"The prognostic test predicted disease progression risk accurately.\" },\n    \n    { word: \"digital phenotyping\", translation: \"phénotypage numérique\", example: \"Digital phenotyping collects health data through smartphones and wearables.\" },\n    \n    { word: \"pathway analysis\", translation: \"analyse des voies\", example: \"Pathway analysis identifies biological processes involved in disease manifestation.\" },\n    { word: \"recurrence risk prediction\", translation: \"prédiction du risque de récidive\", example: \"The test provided accurate recurrence risk prediction after cancer treatment.\" },\n    { word: \"adaptive therapy\", translation: \"thérapie adaptative\", example: \"Adaptive therapy adjusts treatment based on evolving disease characteristics.\" },\n    { word: \"drug sensitivity testing\", translation: \"test de sensibilité aux médicaments\", example: \"Drug sensitivity testing identifies effective medications for individual patients.\" },\n    { word: \"phenotypic precision medicine\", translation: \"médecine de précision phénotypique\", example: \"Phenotypic precision medicine incorporates comprehensive patient characteristics beyond genetics.\" },\n    \n    // Médecine régénérative (25 mots)\n    \n    \n    \n    \n    { word: \"induced pluripotent stem cell\", translation: \"cellule souche pluripotente induite\", example: \"Induced pluripotent stem cells are created from adult cells through genetic reprogramming.\" },\n    { word: \"extracellular matrix\", translation: \"matrice extracellulaire\", example: \"The extracellular matrix provides structural support and biochemical cues for cells.\" },\n    \n    { word: \"cell differentiation\", translation: \"différenciation cellulaire\", example: \"Cell differentiation transforms stem cells into specialized cell types.\" },\n    { word: \"organoid\", translation: \"organoïde\", example: \"Organoids are three-dimensional tissue cultures that mimic organs.\" },\n    { word: \"regenerative capacity\", translation: \"capacité régénérative\", example: \"The therapy enhanced the tissue's natural regenerative capacity.\" },\n    \n    { word: \"mesenchymal stem cell\", translation: \"cellule souche mésenchymateuse\", example: \"Mesenchymal stem cells have regenerative and immunomodulatory properties.\" },\n    { word: \"bioreactor\", translation: \"bioréacteur\", example: \"Bioreactors provide controlled environments for tissue cultivation.\" },\n    { word: \"biocompatible material\", translation: \"matériau biocompatible\", example: \"Biocompatible materials integrate with biological systems without causing harm.\" },\n    { word: \"cell expansion\", translation: \"expansion cellulaire\", example: \"Cell expansion increases the number of therapeutic cells through cultivation.\" },\n    { word: \"tissue regeneration\", translation: \"régénération tissulaire\", example: \"Tissue regeneration restores structure and function to damaged areas.\" },\n    { word: \"biodegradable scaffold\", translation: \"échafaudage biodégradable\", example: \"Biodegradable scaffolds support tissue growth and then dissolve over time.\" },\n    { word: \"hematopoietic stem cell\", translation: \"cellule souche hématopoïétique\", example: \"Hematopoietic stem cells generate all blood cell types.\" },\n    { word: \"gene-modified cell therapy\", translation: \"thérapie cellulaire génétiquement modifiée\", example: \"Gene-modified cell therapy enhances therapeutic effects through genetic engineering.\" },\n    { word: \"cell delivery system\", translation: \"système d'administration cellulaire\", example: \"Cell delivery systems target therapeutic cells to specific tissues.\" },\n    { word: \"self-renewal\", translation: \"auto-renouvellement\", example: \"Self-renewal allows stem cells to produce more stem cells indefinitely.\" },\n    { word: \"regenerative factor\", translation: \"facteur régénératif\", example: \"Regenerative factors stimulate the body's natural healing processes.\" },\n    { word: \"immune rejection\", translation: \"rejet immunitaire\", example: \"Immune rejection occurs when the body attacks transplanted cells or tissues.\" },\n    { word: \"engraftment\", translation: \"prise de greffe\", example: \"Successful engraftment occurs when transplanted cells integrate with host tissue.\" },\n    { word: \"cell therapy manufacturing\", translation: \"fabrication de thérapies cellulaires\", example: \"Cell therapy manufacturing produces standardized cellular products for treatment.\" }\n  ]\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-50-31.600Z\\C2_08_diplomatie_negociations.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unterminated string constant","line":12,"column":16}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const vocab = {\n  title: \"Diplomatie et Négociations Internationales\",\n  words: [\n    // Relations diplomatiques (25 mots)\n    \n    \n    \n    \n    \n    \n    \n     government's legitimacy.\" },\n    \n    \n    \n    \n    { word: \"receiving state\", translation: \"État accréditaire\", example: \"The receiving state hosts foreign diplomatic missions.\" },\n    { word: \"sending state\", translation: \"État accréditant\", example: \"The sending state dispatches diplomats to represent its interests.\" },\n    \n    \n    { word: \"foreign service\", translation: \"service extérieur\", example: \"The foreign service manages international relations and diplomacy.\" },\n    { word: \"diplomatic rank\", translation: \"rang diplomatique\", example: \"Diplomatic ranks include ambassadors, ministers, and attachés.\" },\n    { word: \"chargé d'affaires\", translation: \"chargé d'affaires\", example: \"The chargé d'affaires headed the mission in the ambassador's absence.\" },\n    \n    \n    { word: \"diplomatic note\", translation: \"note diplomatique\", example: \"The diplomatic note formally communicated the government's position.\" },\n    { word: \"diplomatic bag\", translation: \"sac diplomatique\", example: \"The diplomatic bag carried classified documents between missions.\" },\n    \n    \n    // Organisations internationales (25 mots)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    { word: \"treaty organization\", translation: \"organisation conventionnelle\", example: \"Treaty organizations implement specific international agreements.\" },\n    \n    \n    { word: \"governing board\", translation: \"conseil d'administration\", example: \"The governing board oversees the organization's strategic direction.\" },\n    \n    \n    \n    { word: \"headquarters agreement\", translation: \"accord de siège\", example: \"The headquarters agreement established the organization's legal status.\" },\n    { word: \"diplomatic conference\", translation: \"conférence diplomatique\", example: \"The diplomatic conference negotiated the organization's founding treaty.\" },\n    { word: \"international civil servant\", translation: \"fonctionnaire international\", example: \"International civil servants work for global organizations, not individual countries.\" },\n    \n    \n    { word: \"privileges and immunities\", translation: \"privilèges et immunités\", example: \"Privileges and immunities protect the organization's independent functioning.\" },\n    { word: \"voting procedure\", translation: \"procédure de vote\", example: \"The voting procedure required a two-thirds majority for important questions.\" },\n    \n    \n    \n    // Négociations multilatérales (25 mots)\n    { word: \"multilateral negotiation\", translation: \"négociation multilatérale\", example: \"Multilateral negotiations involve multiple parties addressing common issues.\" },\n    \n    { word: \"working group\", translation: \"groupe de travail\", example: \"The working group developed technical proposals on specific topics.\" },\n    \n    \n    { word: \"negotiating bloc\", translation: \"bloc de négociation\", example: \"The negotiating bloc coordinated positions among like-minded countries.\" },\n    { word: \"draft resolution\", translation: \"projet de résolution\", example: \"The draft resolution was circulated for comments before formal submission.\" },\n    { word: \"amendment proposal\", translation: \"proposition d'amendement\", example: \"The amendment proposal modified language in the original text.\" },\n    { word: \"negotiating mandate\", translation: \"mandat de négociation\", example: \"The negotiating mandate defined objectives and acceptable outcomes.\" },\n    { word: \"bracketed text\", translation: \"texte entre crochets\", example: \"Bracketed text indicates language still under negotiation.\" },\n    { word: \"conference diplomacy\", translation: \"diplomatie de conférence\", example: \"Conference diplomacy characterizes interactions at major international meetings.\" },\n    { word: \"intergovernmental conference\", translation: \"conférence intergouvernementale\", example: \"The intergovernmental conference developed new treaty provisions.\" },\n    { word: \"diplomatic procedure\", translation: \"procédure diplomatique\", example: \"Diplomatic procedure structured the formal negotiation process.\" },\n    \n    { word: \"single undertaking\", translation: \"engagement unique\", example: \"The single undertaking principle required agreement on all elements as a package.\" },\n    { word: \"parallel negotiations\", translation: \"négociations parallèles\", example: \"Parallel negotiations addressed different aspects simultaneously.\" },\n    { word: \"national position\", translation: \"position nationale\", example: \"National positions outlined each country's priorities and interests.\" },\n    { word: \"ministerial meeting\", translation: \"réunion ministérielle\", example: \"The ministerial meeting resolved outstanding high-level political issues.\" },\n    { word: \"contact group\", translation: \"groupe de contact\", example: \"The contact group facilitated informal discussions between key parties.\" },\n    { word: \"text proposal\", translation: \"proposition de texte\", example: \"The text proposal offered compromise language on disputed issues.\" },\n    { word: \"diplomatic friction\", translation: \"friction diplomatique\", example: \"Diplomatic friction emerged over controversial provisions.\" },\n    { word: \"common position\", translation: \"position commune\", example: \"The regional group developed a common position for the negotiations.\" },\n    { word: \"negotiation platform\", translation: \"plateforme de négociation\", example: \"The negotiation platform outlined starting positions and objectives.\" },\n    { word: \"joint statement\", translation: \"déclaration conjointe\", example: \"The joint statement expressed shared commitments among participating states.\" },\n    { word: \"multilateral process\", translation: \"processus multilatéral\", example: \"The multilateral process incorporated diverse perspectives and interests.\" },\n    \n    // Résolution des conflits (25 mots)\n    \n    { word: \"peace negotiation\", translation: \"négociation de paix\", example: \"Peace negotiations aimed to end the decade-long civil conflict.\" },\n    \n    { word: \"peacekeeping\", translation: \"maintien de la paix\", example: \"Peacekeeping operations deployed to monitor the ceasefire agreement.\" },\n    { word: \"peacebuilding\", translation: \"consolidation de la paix\", example: \"Peacebuilding activities strengthened institutions after the conflict.\" },\n    \n    { word: \"peace agreement\", translation: \"accord de paix\", example: \"The peace agreement addressed political, economic, and security arrangements.\" },\n    \n    { word: \"third-party facilitation\", translation: \"facilitation par une tierce partie\", example: \"Third-party facilitation helped overcome negotiation obstacles.\" },\n    \n    \n    \n    { word: \"confidence-building measure\", translation: \"mesure de confiance\", example: \"Confidence-building measures reduced tensions along the disputed border.\" },\n    \n    \n    { word: \"demobilization\", translation: \"démobilisation\", example: \"Demobilization transitioned fighters from military to civilian status.\" },\n    { word: \"reintegration\", translation: \"réintégration\", example: \"Reintegration programs helped former combatants return to civilian life.\" },\n    \n    \n    \n    \n    \n    { word: \"international observer\", translation: \"observateur international\", example: \"International observers monitored compliance with peace terms.\" },\n    \n    { word: \"peace settlement\", translation: \"règlement pacifique\", example: \"The peace settlement established new political arrangements.\" },\n    \n    // Stratégie de négociation (25 mots)\n    \n    { word: \"negotiating position\", translation: \"position de négociation\", example: \"Their negotiating position outlined core interests and acceptable outcomes.\" },\n    { word: \"negotiating power\", translation: \"pouvoir de négociation\", example: \"Economic resources increased their negotiating power substantially.\" },\n    { word: \"bargaining chip\", translation: \"monnaie d'échange\", example: \"Market access served as an important bargaining chip in the talks.\" },\n    \n    { word: \"zone of possible agreement\", translation: \"zone d'accord possible\", example: \"The zone of possible agreement narrowed as positions hardened.\" },\n    { word: \"best alternative to negotiated agreement\", translation: \"meilleure solution de rechange à un accord négocié\", example: \"A strong best alternative to negotiated agreement improved their leverage.\" },\n    { word: \"concession\", translation: \"concession\", example: \"The concession on timeframes secured movement on substantive issues.\" },\n    { word: \"interest-based negotiation\", translation: \"négociation fondée sur les intérêts\", example: \"Interest-based negotiation focuses on underlying needs rather than stated positions.\" },\n    \n    { word: \"deadline pressure\", translation: \"pression de l'échéance\", example: \"Deadline pressure accelerated progress in the final negotiation phase.\" },\n    { word: \"walk-away point\", translation: \"point de rupture\", example: \"The delegation identified its walk-away point before entering talks.\" },\n    { word: \"diplomatic leverage\", translation: \"levier diplomatique\", example: \"Coalition formation increased their diplomatic leverage considerably.\" },\n    \n    { word: \"fall-back position\", translation: \"position de repli\", example: \"The fall-back position provided flexibility if primary objectives proved unattainable.\" },\n    \n    { word: \"strategic patience\", translation: \"patience stratégique\", example: \"Strategic patience allowed tensions to subside before resuming talks.\" },\n    { word: \"linkage strategy\", translation: \"stratégie de liaison\", example: \"Their linkage strategy connected progress in separate negotiation tracks.\" },\n    { word: \"red line\", translation: \"ligne rouge\", example: \"The delegation established red lines that couldn't be crossed during negotiations.\" },\n    { word: \"constructive ambiguity\", translation: \"ambiguïté constructive\", example: \"Constructive ambiguity in the text allowed different interpretations by the parties.\" },\n    { word: \"negotiation dynamic\", translation: \"dynamique de négociation\", example: \"The negotiation dynamic shifted after the ministerial intervention.\" },\n    { word: \"escalation management\", translation: \"gestion de l'escalade\", example: \"Escalation management prevented minor disputes from derailing the process.\" },\n    \n    { word: \"integrative approach\", translation: \"approche intégrative\", example: \"The integrative approach expanded available options through creative problem-solving.\" },\n    { word: \"distributive bargaining\", translation: \"négociation distributive\", example: \"Distributive bargaining focused on allocating fixed resources between parties.\" },\n    \n    // Relations internationales (25 mots)\n    \n    \n    \n    { word: \"bilateral relationship\", translation: \"relation bilatérale\", example: \"The bilateral relationship improved through regular high-level dialogue.\" },\n    \n    \n    { word: \"strategic partnership\", translation: \"partenariat stratégique\", example: \"The strategic partnership deepened cooperation in defense and technology.\" },\n    \n    \n    { word: \"regional integration\", translation: \"intégration régionale\", example: \"Regional integration strengthened economic ties between neighboring states.\" },\n    { word: \"international system\", translation: \"système international\", example: \"The international system has evolved from bipolarity to multipolarity.\" },\n    { word: \"diplomatic influence\", translation: \"influence diplomatique\", example: \"Their diplomatic influence expanded through coalition-building efforts.\" },\n    { word: \"foreign relations\", translation: \"relations extérieures\", example: \"The ministry of foreign relations coordinates international engagement.\" },\n    { word: \"state sovereignty\", translation: \"souveraineté étatique\", example: \"State sovereignty remains a fundamental principle in international law.\" },\n    { word: \"international actor\", translation: \"acteur international\", example: \"Non-state entities have emerged as influential international actors.\" },\n    { word: \"international order\", translation: \"ordre international\", example: \"The international order comprises norms, institutions, and power relationships.\" },\n    { word: \"alliance system\", translation: \"système d'alliance\", example: \"The alliance system created mutual defense commitments among partners.\" },\n    { word: \"non-interference\", translation: \"non-ingérence\", example: \"The principle of non-interference respects domestic jurisdiction.\" },\n    { word: \"great power politics\", translation: \"politique des grandes puissances\", example: \"Great power politics shapes global security arrangements.\" },\n    \n    { word: \"foreign minister\", translation: \"ministre des affaires étrangères\", example: \"The foreign minister represented the country at international meetings.\" },\n    \n    { word: \"international engagement\", translation: \"engagement international\", example: \"International engagement expanded beyond traditional partners.\" },\n    { word: \"foreign service officer\", translation: \"agent diplomatique\", example: \"Foreign service officers represent their country's interests abroad.\" },\n    { word: \"international influence\", translation: \"influence internationale\", example: \"Economic growth increased their international influence considerably.\" },\n    \n    // Politique étrangère (25 mots)\n    \n    { word: \"diplomatic approach\", translation: \"approche diplomatique\", example: \"Their diplomatic approach emphasized multilateral engagement.\" },\n    \n    \n    \n    \n    \n    { word: \"national security strategy\", translation: \"stratégie de sécurité nationale\", example: \"The national security strategy identified priority threats and responses.\" },\n    \n    \n    \n    \n    \n    { word: \"overseas mission\", translation: \"mission à l'étranger\", example: \"Overseas missions implement foreign policy objectives locally.\" },\n    \n    \n    { word: \"international posture\", translation: \"posture internationale\", example: \"The international posture projected strength while seeking dialogue.\" },\n    \n    { word: \"foreign affairs ministry\", translation: \"ministère des affaires étrangères\", example: \"The foreign affairs ministry coordinates all diplomatic activities.\" },\n    \n    { word: \"international policy\", translation: \"politique internationale\", example: \"International policy addressed both bilateral and multilateral relationships.\" },\n    \n    { word: \"strategic dialogue\", translation: \"dialogue stratégique\", example: \"The strategic dialogue addressed security and economic concerns.\" },\n    \n    { word: \"policy guidance\", translation: \"orientation politique\", example: \"Policy guidance established parameters for negotiating positions.\" },\n    \n    // Défense et sécurité internationale (25 mots)\n    \n    { word: \"defense alliance\", translation: \"alliance de défense\", example: \"The defense alliance established mutual protection commitments.\" },\n    \n    { word: \"defense cooperation\", translation: \"coopération en matière de défense\", example: \"Defense cooperation included joint military exercises.\" },\n    { word: \"security policy\", translation: \"politique de sécurité\", example: \"Security policy addressed both traditional and emerging threats.\" },\n    \n    \n    \n    { word: \"defense capability\", translation: \"capacité de défense\", example: \"Defense capabilities included both conventional and cyber systems.\" },\n    { word: \"security threat\", translation: \"menace sécuritaire\", example: \"Transnational terrorism presents a significant security threat.\" },\n    { word: \"military alliance\", translation: \"alliance militaire\", example: \"The military alliance coordinated defense planning and operations.\" },\n    \n    { word: \"strategic deterrence\", translation: \"dissuasion stratégique\", example: \"Strategic deterrence prevents attacks through credible retaliation threats.\" },\n    \n    { word: \"security arrangement\", translation: \"arrangement de sécurité\", example: \"Regional security arrangements provided stability frameworks.\" },\n    { word: \"military capability\", translation: \"capacité militaire\", example: \"Military capability assessments inform defense planning.\" },\n    { word: \"defense minister\", translation: \"ministre de la défense\", example: \"The defense minister oversees military policy and operations.\" },\n    \n    { word: \"defense strategy\", translation: \"stratégie de défense\", example: \"The defense strategy identified priorities and resource allocation.\" },\n    { word: \"threat assessment\", translation: \"évaluation des menaces\", example: \"Threat assessments analyze potential risks to national security.\" },\n    { word: \"defense diplomacy\", translation: \"diplomatie de défense\", example: \"Defense diplomacy builds relationships through military engagement.\" },\n    { word: \"security challenge\", translation: \"défi sécuritaire\", example: \"Cybersecurity represents a growing security challenge.\" },\n    \n    { word: \"combat readiness\", translation: \"préparation au combat\", example: \"The alliance assessed combat readiness through regular exercises.\" },\n    { word: \"security doctrine\", translation: \"doctrine de sécurité\", example: \"Their security doctrine emphasized preventive diplomacy.\" },\n    \n    // Communication diplomatique (25 mots)\n    { word: \"diplomatic communication\", translation: \"communication diplomatique\", example: \"Diplomatic communication requires precision and cultural sensitivity.\" },\n    { word: \"official statement\", translation: \"déclaration officielle\", example: \"The official statement expressed concern over border incidents.\" },\n    \n    { word: \"joint communiqué\", translation: \"communiqué conjoint\", example: \"The joint communiqué announced cooperation on climate initiatives.\" },\n    { word: \"diplomatic language\", translation: \"langage diplomatique\", example: \"Diplomatic language employs carefully chosen terminology.\" },\n    { word: \"press briefing\", translation: \"point de presse\", example: \"The press briefing clarified the delegation's objectives.\" },\n    { word: \"diplomatic correspondence\", translation: \"correspondance diplomatique\", example: \"Diplomatic correspondence maintains formal communication channels.\" },\n    { word: \"official spokesperson\", translation: \"porte-parole officiel\", example: \"The official spokesperson delivered the ministry's response.\" },\n    { word: \"diplomatic signal\", translation: \"signal diplomatique\", example: \"Canceling the visit sent a strong diplomatic signal.\" },\n    { word: \"policy statement\", translation: \"déclaration de politique\", example: \"The policy statement outlined the government's position.\" },\n    { word: \"diplomatic clarity\", translation: \"clarté diplomatique\", example: \"Diplomatic clarity prevented misunderstanding of intentions.\" },\n    \n    \n    \n    { word: \"official announcement\", translation: \"annonce officielle\", example: \"The official announcement confirmed the diplomatic appointment.\" },\n    \n    \n    \n    { word: \"official communication\", translation: \"communication officielle\", example: \"The official communication requested bilateral consultations.\" },\n    \n    { word: \"talking points\", translation: \"éléments de langage\", example: \"Talking points ensured consistent messaging across representatives.\" },\n    { word: \"diplomatic exchange\", translation: \"échange diplomatique\", example: \"The diplomatic exchange clarified positions on disputed issues.\" },\n    { word: \"public statement\", translation: \"déclaration publique\", example: \"The public statement reaffirmed commitment to the agreement.\" },\n    { word: \"media strategy\", translation: \"stratégie médiatique\", example: \"The media strategy highlighted diplomatic achievements.\" },\n    { word: \"diplomatic rhetoric\", translation: \"rhétorique diplomatique\", example: \"Diplomatic rhetoric softened following productive talks.\" },\n    \n    // Protocole et cérémonie (25 mots)\n    { word: \"diplomatic protocol\", translation: \"protocole diplomatique\", example: \"Diplomatic protocol governs official interactions and ceremonies.\" },\n    { word: \"ceremonial function\", translation: \"fonction cérémonielle\", example: \"The ceremonial function marked the treaty signing.\" },\n    { word: \"order of precedence\", translation: \"ordre de préséance\", example: \"Order of precedence determines seating and speaking arrangements.\" },\n    { word: \"credentials ceremony\", translation: \"cérémonie de présentation des lettres de créance\", example: \"The credentials ceremony formally recognized the new ambassador.\" },\n    { word: \"diplomatic etiquette\", translation: \"étiquette diplomatique\", example: \"Diplomatic etiquette guides behavior in official settings.\" },\n    { word: \"official reception\", translation: \"réception officielle\", example: \"The official reception welcomed the visiting delegation.\" },\n    { word: \"state dinner\", translation: \"dîner d'État\", example: \"The state dinner honored the visiting head of state.\" },\n    { word: \"presentation of credentials\", translation: \"présentation des lettres de créance\", example: \"Presentation of credentials initiates an ambassador's mission.\" },\n    \n    { word: \"protocol officer\", translation: \"officier du protocole\", example: \"Protocol officers ensure proper ceremonial arrangements.\" },\n    { word: \"formal ceremony\", translation: \"cérémonie formelle\", example: \"The formal ceremony marked the diplomatic anniversary.\" },\n    { word: \"diplomatic formality\", translation: \"formalité diplomatique\", example: \"Diplomatic formalities structure official interactions.\" },\n    { word: \"ceremonial protocol\", translation: \"protocole cérémoniel\", example: \"Ceremonial protocol dictates procedures for state events.\" },\n    \n    { word: \"flag protocol\", translation: \"protocole des drapeaux\", example: \"Flag protocol specifies display arrangements for national symbols.\" },\n    { word: \"welcoming ceremony\", translation: \"cérémonie d'accueil\", example: \"The welcoming ceremony included military honors.\" },\n    { word: \"diplomatic honor\", translation: \"honneur diplomatique\", example: \"Diplomatic honors recognized outstanding service.\" },\n    { word: \"ceremonial occasion\", translation: \"occasion cérémonielle\", example: \"The ceremonial occasion celebrated diplomatic achievements.\" },\n    { word: \"diplomatic custom\", translation: \"coutume diplomatique\", example: \"Diplomatic customs vary between countries and contexts.\" },\n    { word: \"protocol breach\", translation: \"manquement au protocole\", example: \"The protocol breach created an awkward diplomatic situation.\" },\n    { word: \"official visit\", translation: \"visite officielle\", example: \"The official visit strengthened bilateral relations.\" },\n    { word: \"state protocol\", translation: \"protocole d'État\", example: \"State protocol governs high-level diplomatic interactions.\" },\n    { word: \"protocol department\", translation: \"département du protocole\", example: \"The protocol department arranged the diplomatic conference.\" },\n    { word: \"diplomatic tradition\", translation: \"tradition diplomatique\", example: \"Diplomatic traditions evolve while maintaining core principles.\" },\n    { word: \"ceremonial procedure\", translation: \"procédure cérémonielle\", example: \"Ceremonial procedures formalize diplomatic transitions.\" }\n  ]\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-50-31.600Z\\C2_10_litterature_critique.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unterminated string constant","line":17,"column":12}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const vocab = {\n  title: \"Littérature et Critique Littéraire\",\n  words: [\n    // Genres littéraires (25 mots)\n    { word: \"literary genre\", translation: \"genre littéraire\", example: \"The literary genre evolved significantly during the 19th century.\" },\n    { word: \"novel\", translation: \"roman\", example: \"The novel explores themes of identity and belonging in post-colonial societies.\" },\n    { word: \"poetry\", translation: \"poésie\", example: \"Her poetry combines traditional forms with experimental language.\" },\n    { word: \"short story\", translation: \"nouvelle\", example: \"The short story reveals character through subtle, meaningful details.\" },\n    { word: \"drama\", translation: \"théâtre\", example: \"Contemporary drama often blurs boundaries between performer and audience.\" },\n    { word: \"memoir\", translation: \"mémoires\", example: \"The memoir recounts her experiences during the political upheaval.\" },\n    \n    { word: \"autobiography\", translation: \"autobiographie\", example: \"The autobiography provides insight into the author's creative process.\" },\n    { word: \"biography\", translation: \"biographie\", example: \"The critically acclaimed biography drew from previously unpublished letters.\" },\n    { word: \"historical fiction\", translation: \"fiction historique\", example: \"Historical fiction blends factual events with imagined characters and narratives.\" },\n    { word: \"science fiction\", translation: \"science-fiction\", example: \"Science fiction often explores the societal implications of technological advances.\" },\n    { word: \"fantasy\", translation: \"fantaisie\", example: \"Her fantasy novels create intricate alternative worlds with unique magical systems.\" },\n    opment.\" },\n    \n    \n    { word: \"tragedy\", translation: \"tragédie\", example: \"Classical tragedy depicts the downfall of a noble protagonist through fatal flaws.\" },\n    { word: \"comedy\", translation: \"comédie\", example: \"Shakespearean comedy typically concludes with reconciliation and marriage.\" },\n    { word: \"tragicomedy\", translation: \"tragicomédie\", example: \"Tragicomedy blends elements of both tragic and comic forms.\" },\n    { word: \"thriller\", translation: \"thriller\", example: \"The psychological thriller creates suspense through unreliable narration.\" },\n    { word: \"mystery\", translation: \"roman policier\", example: \"The mystery gradually reveals clues leading to the unexpected resolution.\" },\n    { word: \"gothic fiction\", translation: \"fiction gothique\", example: \"Gothic fiction employs supernatural elements and gloomy, decaying settings.\" },\n    { word: \"romance novel\", translation: \"roman sentimental\", example: \"The contemporary romance novel explores complex relationships beyond stereotypical formulas.\" },\n    \n    \n    // Éléments narratifs (25 mots)\n    \n    \n    { word: \"character development\", translation: \"développement des personnages\", example: \"The character development reveals gradual psychological transformation.\" },\n    \n    \n    \n    \n    \n    \n    { word: \"exposition\", translation: \"exposition\", example: \"The opening exposition establishes the historical context efficiently.\" },\n    { word: \"falling action\", translation: \"action descendante\", example: \"The falling action reveals the consequences of the protagonist's choices.\" },\n    { word: \"rising action\", translation: \"action montante\", example: \"The rising action increases tension through escalating complications.\" },\n       { word: \"protagonist\", translation: \"protagoniste\", example: \"The morally complex protagonist challenges readers' expectations and sympathies.\" },\n    { word: \"antagonist\", translation: \"antagoniste\", example: \"The antagonist's motivations become increasingly understandable as the story unfolds.\" },\n    { word: \"narrator\", translation: \"narrateur\", example: \"The unreliable narrator forces readers to question everything previously established.\" },\n    \n    { word: \"scene\", translation: \"scène\", example: \"The pivotal scene transforms the relationship between the main characters.\" },\n    \n    \n    \n    \n    { word: \"characterization\", translation: \"caractérisation\", example: \"Indirect characterization reveals personality through actions rather than description.\" },\n    { word: \"denouement\", translation: \"dénouement\", example: \"The denouement resolves remaining questions after the climactic confrontation.\" },\n    \n    // Figures de style (25 mots)\n    \n    \n    { word: \"simile\", translation: \"comparaison\", example: \"Her similes draw surprising connections between disparate elements.\" },\n    { word: \"personification\", translation: \"personnification\", example: \"Personification gives the ancient forest sentience and motivation.\" },\n    { word: \"alliteration\", translation: \"allitération\", example: \"Alliteration creates rhythmic emphasis in the dramatic monologue.\" },\n    \n    \n    \n    \n    \n    { word: \"paradox\", translation: \"paradoxe\", example: \"The central paradox of the novel explores how loss can lead to discovery.\" },\n    { word: \"allegory\", translation: \"allégorie\", example: \"The allegorical narrative represents abstract concepts through concrete characters.\" },\n    \n    { word: \"assonance\", translation: \"assonance\", example: \"Assonance creates musical quality through repeated vowel sounds.\" },\n    { word: \"consonance\", translation: \"consonance\", example: \"Consonance provides sonic texture through repeated consonant sounds.\" },\n    { word: \"onomatopoeia\", translation: \"onomatopée\", example: \"Onomatopoeia mimics the sounds described in the violent scene.\" },\n    \n    \n    { word: \"apostrophe\", translation: \"apostrophe\", example: \"The apostrophe directly addresses absent concepts or characters.\" },\n    { word: \"synecdoche\", translation: \"synecdoque\", example: \"Synecdoche uses 'the crown' to represent the entire monarchy.\" },\n    { word: \"metonymy\", translation: \"métonymie\", example: \"Metonymy substitutes 'the White House' for the executive branch.\" },\n    { word: \"anaphora\", translation: \"anaphore\", example: \"Anaphora creates rhythmic emphasis through repeated opening phrases.\" },\n    \n    { word: \"motif\", translation: \"motif\", example: \"Water motifs recur throughout, symbolizing both destruction and renewal.\" },\n    { word: \"foreshadowing\", translation: \"préfiguration\", example: \"Subtle foreshadowing hints at the eventual betrayal by the trusted advisor.\" },\n    \n    // Analyse littéraire (25 mots)\n    { word: \"literary analysis\", translation: \"analyse littéraire\", example: \"Literary analysis examines how formal elements create meaning.\" },\n    { word: \"close reading\", translation: \"lecture attentive\", example: \"Close reading reveals subtle patterns within the text.\" },\n    \n    { word: \"critical approach\", translation: \"approche critique\", example: \"A feminist critical approach illuminates power dynamics in the text.\" },\n    { word: \"textual evidence\", translation: \"preuve textuelle\", example: \"Textual evidence supports the analysis of the protagonist's motivation.\" },\n    { word: \"literary criticism\", translation: \"critique littéraire\", example: \"Literary criticism explores connections between text and cultural context.\" },\n    \n    \n    { word: \"deconstructive reading\", translation: \"lecture déconstructive\", example: \"A deconstructive reading identifies internal contradictions in the text.\" },\n    { word: \"canonical\", translation: \"canonique\", example: \"The once-overlooked novel has become a canonical text in American literature.\" },\n    { word: \"explication\", translation: \"explication\", example: \"The explication examines the poem's formal elements and thematic concerns.\" },\n    \n    \n    { word: \"contextualization\", translation: \"contextualisation\", example: \"Contextualization situates the work within its cultural and historical moment.\" },\n    \n    { word: \"critical lens\", translation: \"perspective critique\", example: \"Applying a postcolonial critical lens reveals unexamined assumptions.\" },\n    { word: \"exegesis\", translation: \"exégèse\", example: \"The scholarly exegesis interprets obscure references in the ancient text.\" },\n    { word: \"literary heritage\", translation: \"héritage littéraire\", example: \"The novel engages with its literary heritage while innovating formally.\" },\n    { word: \"reader-response\", translation: \"réaction du lecteur\", example: \"Reader-response criticism explores how different audiences interpret the text.\" },\n    { word: \"structuralist analysis\", translation: \"analyse structuraliste\", example: \"Structuralist analysis identifies narrative and thematic patterns.\" },\n    { word: \"poststructuralism\", translation: \"poststructuralisme\", example: \"Poststructuralism questions stable meanings and binary oppositions.\" },\n    \n    \n    { word: \"cultural criticism\", translation: \"critique culturelle\", example: \"Cultural criticism examines literature's relationship to broader social forces.\" },\n    { word: \"formalist criticism\", translation: \"critique formaliste\", example: \"Formalist criticism focuses on the work's internal features rather than context.\" },\n    \n    // Poésie et versification (25 mots)\n    \n    { word: \"verse\", translation: \"vers\", example: \"Free verse abandons regular meter while maintaining poetic intensity.\" },\n    { word: \"stanza\", translation: \"strophe\", example: \"Each stanza develops a distinct aspect of the poem's central image.\" },\n    { word: \"rhyme scheme\", translation: \"schéma de rimes\", example: \"The sonnet follows an intricate rhyme scheme that reinforces its argument.\" },\n    { word: \"meter\", translation: \"mètre\", example: \"Iambic pentameter dominates English poetic tradition from Shakespeare onward.\" },\n    \n    { word: \"free verse\", translation: \"vers libre\", example: \"Free verse liberates poetry from formal metrical requirements.\" },\n    { word: \"scansion\", translation: \"scansion\", example: \"Scansion reveals the poem's subtle metrical variations.\" },\n    { word: \"caesura\", translation: \"césure\", example: \"The caesura creates a dramatic pause midline, emphasizing the turn in thought.\" },\n    { word: \"enjambment\", translation: \"enjambement\", example: \"Enjambment carries meaning across line breaks, creating tension and flow.\" },\n    { word: \"blank verse\", translation: \"vers blanc\", example: \"Blank verse employs unrhymed iambic pentameter lines.\" },\n    { word: \"prosody\", translation: \"prosodie\", example: \"Prosody studies patterns of rhythm and sound in poetry.\" },\n    { word: \"sonnet\", translation: \"sonnet\", example: \"The sonnet compresses complex emotions into fourteen tightly structured lines.\" },\n    { word: \"quatrain\", translation: \"quatrain\", example: \"Each quatrain develops a distinct stage of the argument.\" },\n    { word: \"couplet\", translation: \"distique\", example: \"The closing couplet provides epigrammatic resolution to the sonnet.\" },\n    { word: \"foot\", translation: \"pied\", example: \"The iambic foot consists of an unstressed syllable followed by a stressed one.\" },\n    { word: \"iambic pentameter\", translation: \"pentamètre iambique\", example: \"Shakespeare's plays primarily employ iambic pentameter for dialogue.\" },\n    { word: \"syllabic verse\", translation: \"vers syllabique\", example: \"Syllabic verse counts syllables without regard to stress patterns.\" },\n    { word: \"terza rima\", translation: \"terza rima\", example: \"Dante's Divine Comedy employs terza rima's interlocking three-line pattern.\" },\n    { word: \"villanelle\", translation: \"villanelle\", example: \"The villanelle's repeating lines create haunting emphasis.\" },\n    { word: \"haiku\", translation: \"haïku\", example: \"Traditional haiku presents seasonal images in seventeen syllables.\" },\n    { word: \"lyric poetry\", translation: \"poésie lyrique\", example: \"Lyric poetry expresses personal emotion through musical language.\" },\n    { word: \"epic poetry\", translation: \"poésie épique\", example: \"Epic poetry narrates heroic achievements and cultural foundations.\" },\n    { word: \"stanzaic form\", translation: \"forme strophique\", example: \"The poem employs a consistent stanzaic form throughout its sections.\" },\n    { word: \"cadence\", translation: \"cadence\", example: \"The poet's distinctive cadence makes her work immediately recognizable.\" },\n    \n    // Théorie littéraire (25 mots)\n    { word: \"literary theory\", translation: \"théorie littéraire\", example: \"Literary theory provides frameworks for understanding textual meaning.\" },\n    \n    \n    \n    \n    \n    \n    { word: \"psychoanalytic theory\", translation: \"théorie psychanalytique\", example: \"Psychoanalytic theory explores unconscious dimensions of literary texts.\" },\n    { word: \"reader-response theory\", translation: \"théorie de la réception\", example: \"Reader-response theory examines how audiences create meaning.\" },\n    \n    \n    \n    \n    \n    \n    \n    { word: \"hermeneutic circle\", translation: \"cercle herméneutique\", example: \"The hermeneutic circle describes the interpretive process between parts and whole.\" },\n    \n    \n    \n    \n    { word: \"disability studies\", translation: \"études sur le handicap\", example: \"Disability studies analyzes representations of disability in literature.\" },\n    \n    \n    { word: \"cognitive literary studies\", translation: \"études littéraires cognitives\", example: \"Cognitive literary studies applies insights from cognitive science to literature.\" },\n    \n    // Courants littéraires (25 mots)\n    { word: \"literary movement\", translation: \"mouvement littéraire\", example: \"The literary movement emerged in response to social upheaval.\" },\n    \n    \n    { word: \"naturalism\", translation: \"naturalisme\", example: \"Naturalism portrays characters determined by heredity and environment.\" },\n    \n    \n    \n    \n    { word: \"existentialism\", translation: \"existentialisme\", example: \"Existentialism examines individual freedom and the search for meaning.\" },\n    { word: \"absurdism\", translation: \"absurdisme\", example: \"Absurdism portrays humanity's search for meaning in an irrational universe.\" },\n    { word: \"magical realism\", translation: \"réalisme magique\", example: \"Magical realism incorporates fantastical elements into otherwise realistic settings.\" },\n    { word: \"transcendentalism\", translation: \"transcendantalisme\", example: \"Transcendentalism emphasized spiritual experience and self-reliance.\" },\n    \n    { word: \"neoclassicism\", translation: \"néoclassicisme\", example: \"Neoclassicism draws inspiration from classical forms and restraint.\" },\n    { word: \"beat generation\", translation: \"génération beat\", example: \"The Beat Generation rejected conventional values through experimental prose.\" },\n    { word: \"Gothic literature\", translation: \"littérature gothique\", example: \"Gothic literature explores darkness, decay, and psychological horror.\" },\n    \n    { word: \"enlightenment\", translation: \"siècle des lumières\", example: \"Enlightenment literature celebrated reason, science, and human progress.\" },\n    { word: \"Victorian literature\", translation: \"littérature victorienne\", example: \"Victorian literature often addressed social problems and moral questions.\" },\n    { word: \"harlem renaissance\", translation: \"renaissance de Harlem\", example: \"The Harlem Renaissance celebrated Black art, culture, and experience.\" },\n    { word: \"aestheticism\", translation: \"esthétisme\", example: \"Aestheticism advocated 'art for art's sake' rather than moral purpose.\" },\n    { word: \"imagism\", translation: \"imagisme\", example: \"Imagism created precise, clear images without superfluous language.\" },\n    { word: \"futurism\", translation: \"futurisme\", example: \"Futurism celebrated technology, speed, and industrial modernity.\" },\n    \n    \n    \n    // Critique textuelle (25 mots)\n    { word: \"textual criticism\", translation: \"critique textuelle\", example: \"Textual criticism establishes authoritative versions of literary works.\" },\n    { word: \"manuscript\", translation: \"manuscrit\", example: \"The newly discovered manuscript revealed the author's original intentions.\" },\n    { word: \"variant\", translation: \"variante\", example: \"Textual variants between editions significantly alter interpretation.\" },\n    { word: \"editorial emendation\", translation: \"correction éditoriale\", example: \"Editorial emendations attempt to correct apparent errors in the text.\" },\n    { word: \"critical edition\", translation: \"édition critique\", example: \"The critical edition compares multiple versions with scholarly annotations.\" },\n    { word: \"textual transmission\", translation: \"transmission textuelle\", example: \"Textual transmission traces how works were copied and altered over time.\" },\n    { word: \"scholarly edition\", translation: \"édition savante\", example: \"The scholarly edition provides historical context and textual notes.\" },\n    { word: \"collation\", translation: \"collation\", example: \"Collation identifies differences between multiple textual versions.\" },\n    { word: \"authorial intention\", translation: \"intention auctoriale\", example: \"Debates about authorial intention influence editorial decisions.\" },\n    { word: \"final authorial version\", translation: \"version auctoriale définitive\", example: \"Scholars disagree about which represents the final authorial version.\" },\n    { word: \"recension\", translation: \"recension\", example: \"The critical recension establishes the most authentic text possible.\" },\n    { word: \"copy-text\", translation: \"texte de base\", example: \"Editors select a copy-text as the foundation for their edition.\" },\n    { word: \"textual apparatus\", translation: \"apparat critique\", example: \"The textual apparatus documents variants and editorial decisions.\" },\n    { word: \"textual corruption\", translation: \"corruption textuelle\", example: \"Textual corruption occurs through errors in copying and transmission.\" },\n    { word: \"conjectural emendation\", translation: \"correction conjecturale\", example: \"Conjectural emendation proposes corrections where no authoritative reading exists.\" },\n    { word: \"pagination\", translation: \"pagination\", example: \"Scholarly citations reference the original pagination despite reformatting.\" },\n    { word: \"annotation\", translation: \"annotation\", example: \"Marginal annotations reveal how historical readers interpreted the text.\" },\n    { word: \"bibliographical description\", translation: \"description bibliographique\", example: \"Bibliographical description documents physical aspects of historical editions.\" },\n    { word: \"transcription\", translation: \"transcription\", example: \"Accurate transcription requires specialized knowledge of historical scripts.\" },\n    { word: \"witness\", translation: \"témoin\", example: \"Each manuscript witness contributes to reconstructing the original text.\" },\n    { word: \"archival research\", translation: \"recherche archivistique\", example: \"Archival research uncovered previously unknown drafts of the novel.\" },\n    { word: \"genetic criticism\", translation: \"critique génétique\", example: \"Genetic criticism studies the evolution of texts through successive drafts.\" },\n    { word: \"holograph manuscript\", translation: \"manuscrit holographe\", example: \"The holograph manuscript contains the author's handwritten revisions.\" },\n    \n    { word: \"scholarly apparatus\", translation: \"appareil critique\", example: \"The scholarly apparatus provides contextual and interpretive information.\" },\n    \n    // Théâtre et dramaturgie (25 mots)\n    { word: \"dramatic literature\", translation: \"littérature dramatique\", example: \"Dramatic literature exists both as text and potential performance.\" },\n    { word: \"playwright\", translation: \"dramaturge\", example: \"The playwright revolutionized theatrical conventions in the 20th century.\" },\n    { word: \"theatrical performance\", translation: \"représentation théâtrale\", example: \"Each theatrical performance creates unique interpretations of the text.\" },\n    { word: \"dramaturgy\", translation: \"dramaturgie\", example: \"Dramaturgy involves both textual structure and staging considerations.\" },\n    { word: \"dramatic structure\", translation: \"structure dramatique\", example: \"Classical dramatic structure follows exposition, conflict, and resolution.\" },\n    { word: \"stage direction\", translation: \"indication scénique\", example: \"Detailed stage directions reveal the author's visual conception.\" },\n    \n    { word: \"monologue\", translation: \"monologue\", example: \"The revealing monologue exposes the character's hidden motivations.\" },\n    { word: \"soliloquy\", translation: \"soliloque\", example: \"Hamlet's famous soliloquy explores existential questions directly with the audience.\" },\n    { word: \"aside\", translation: \"aparté\", example: \"The aside reveals thoughts hidden from other characters on stage.\" },\n    { word: \"dramatic irony\", translation: \"ironie dramatique\", example: \"Dramatic irony occurs when audiences understand what characters don't yet realize.\" },\n    { word: \"act\", translation: \"acte\", example: \"The play's five-act structure follows classical dramatic principles.\" },\n    \n    { word: \"theatrical convention\", translation: \"convention théâtrale\", example: \"Experimental productions challenge traditional theatrical conventions.\" },\n    { word: \"dramatic tension\", translation: \"tension dramatique\", example: \"Dramatic tension builds through escalating conflicts between characters.\" },\n    \n    \n    { word: \"theatrical space\", translation: \"espace théâtral\", example: \"The play reimagines theatrical space beyond traditional proscenium staging.\" },\n    { word: \"dramatic action\", translation: \"action dramatique\", example: \"Physical dramatic action reinforces thematic elements throughout.\" },\n    { word: \"theatrical production\", translation: \"production théâtrale\", example: \"Each theatrical production reinterprets the script in unique ways.\" },\n    { word: \"character motivation\", translation: \"motivation du personnage\", example: \"Complex character motivation drives the central conflict forward.\" },\n    { word: \"dramatic conflict\", translation: \"conflit dramatique\", example: \"Multiple levels of dramatic conflict operate simultaneously in the play.\" },\n    \n    { word: \"dramatic persona\", translation: \"persona dramatique\", example: \"Each character represents a distinctive dramatic persona within the ensemble.\" },\n    { word: \"stage presence\", translation: \"présence scénique\", example: \"The role demands exceptional stage presence from the performer.\" },\n    \n    // Production littéraire (25 mots)\n    { word: \"literary production\", translation: \"production littéraire\", example: \"Literary production occurs within specific historical and economic contexts.\" },\n    { word: \"publishing industry\", translation: \"industrie de l'édition\", example: \"The publishing industry has undergone radical transformation in the digital era.\" },\n    { word: \"literary agent\", translation: \"agent littéraire\", example: \"Literary agents represent authors' interests in negotiations with publishers.\" },\n    \n    \n    { word: \"literary marketplace\", translation: \"marché littéraire\", example: \"The literary marketplace influences which voices reach audiences.\" },\n    { word: \"book contract\", translation: \"contrat d'édition\", example: \"The book contract specified royalty rates and subsidiary rights.\" },\n    { word: \"advance\", translation: \"avance\", example: \"The substantial advance indicated the publisher's confidence in the book.\" },\n    { word: \"royalty\", translation: \"redevance\", example: \"Authors earn royalties based on sales of their published works.\" },\n    { word: \"subsidiary rights\", translation: \"droits annexes\", example: \"Subsidiary rights include film adaptations and foreign translations.\" },\n    { word: \"editing process\", translation: \"processus d'édition\", example: \"The editing process transformed the original manuscript substantially.\" },\n    { word: \"galley proof\", translation: \"épreuve en placard\", example: \"Authors review galley proofs before final publication.\" },\n    { word: \"print run\", translation: \"tirage\", example: \"The large initial print run indicated high sales expectations.\" },\n    { word: \"book distribution\", translation: \"distribution de livres\", example: \"Digital platforms have revolutionized book distribution channels.\" },\n    { word: \"literary reception\", translation: \"réception littéraire\", example: \"Literary reception varies significantly across different cultural contexts.\" },\n    { word: \"book review\", translation: \"critique littéraire\", example: \"Influential book reviews can significantly impact sales and reputation.\" },\n    { word: \"bestseller\", translation: \"best-seller\", example: \"The surprise bestseller brought attention to previously overlooked issues.\" },\n    { word: \"literary award\", translation: \"prix littéraire\", example: \"Prestigious literary awards influence both sales and canonical status.\" },\n    { word: \"literary journal\", translation: \"revue littéraire\", example: \"Literary journals publish experimental work that might not find commercial outlets.\" },\n    { word: \"small press\", translation: \"petite maison d'édition\", example: \"Small presses often publish innovative work outside mainstream markets.\" },\n    { word: \"self-publishing\", translation: \"auto-édition\", example: \"Digital platforms have legitimized self-publishing as a viable option.\" },\n    { word: \"literary estate\", translation: \"succession littéraire\", example: \"The literary estate controls rights to the author's works posthumously.\" },\n    { word: \"imprint\", translation: \"marque éditoriale\", example: \"The specialized imprint focuses on experimental fiction and poetry.\" },\n    { word: \"book promotion\", translation: \"promotion du livre\", example: \"Book promotion increasingly relies on author social media presence.\" },\n    { word: \"literary market\", translation: \"marché littéraire\", example: \"The literary market encompasses complex networks of production and consumption.\" }\n  ]\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-50-31.600Z\\C2_12_ia_ethique_technologies.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token of","line":224,"column":9}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const vocab = {\n  title: \"Intelligence Artificielle et Éthique Technologique\",\n  words: [\n    // Fondements de l'intelligence artificielle (25 mots)\n    \n    \n    \n    \n    { word: \"symbolic AI\", translation: \"IA symbolique\", example: \"Symbolic AI manipulates abstract symbols to represent real-world entities and relationships.\" },\n    { word: \"computational complexity\", translation: \"complexité computationnelle\", example: \"Computational complexity measures the resources required to run an algorithm.\" },\n    \n    { word: \"inference engine\", translation: \"moteur d'inférence\", example: \"The inference engine applies logical rules to derive conclusions from available data.\" },\n    { word: \"knowledge representation\", translation: \"représentation des connaissances\", example: \"Knowledge representation structures information for computational reasoning.\" },\n    { word: \"artificial general intelligence\", translation: \"intelligence artificielle générale\", example: \"Artificial general intelligence would match human versatility across tasks.\" },\n    \n    { word: \"intelligent agent\", translation: \"agent intelligent\", example: \"Intelligent agents perceive environments and take actions toward goals.\" },\n    { word: \"computational intelligence\", translation: \"intelligence computationnelle\", example: \"Computational intelligence encompasses problem-solving methods inspired by natural processes.\" },\n    \n    \n    { word: \"Turing test\", translation: \"test de Turing\", example: \"The Turing test evaluates a machine's ability to exhibit human-like intelligence.\" },\n    { word: \"superintelligence\", translation: \"superintelligence\", example: \"Superintelligence would surpass human cognitive capabilities across all domains.\" },\n    { word: \"intelligence amplification\", translation: \"amplification de l'intelligence\", example: \"Intelligence amplification enhances human capabilities through technological augmentation.\" },\n    { word: \"pattern recognition\", translation: \"reconnaissance de formes\", example: \"Pattern recognition identifies regularities within complex datasets.\" },\n    { word: \"automated reasoning\", translation: \"raisonnement automatisé\", example: \"Automated reasoning systems draw logical conclusions from available information.\" },\n    \n    \n    { word: \"artificial neural network\", translation: \"réseau neuronal artificiel\", example: \"Artificial neural networks learn through exposure to training examples.\" },\n    \n    \n    \n    // Apprentissage automatique (25 mots)\n    \n    \n    \n    \n    \n    \n    { word: \"feature extraction\", translation: \"extraction de caractéristiques\", example: \"Feature extraction identifies relevant attributes from raw data.\" },\n    { word: \"overfitting\", translation: \"surapprentissage\", example: \"Overfitting occurs when models perform well on training data but poorly on new examples.\" },\n    { word: \"underfitting\", translation: \"sous-apprentissage\", example: \"Underfitting happens when models fail to capture underlying data patterns.\" },\n    { word: \"cross-validation\", translation: \"validation croisée\", example: \"Cross-validation evaluates model performance across multiple data subsets.\" },\n    { word: \"hyperparameter\", translation: \"hyperparamètre\", example: \"Hyperparameters control aspects of model training and architecture.\" },\n    { word: \"gradient descent\", translation: \"descente de gradient\", example: \"Gradient descent optimizes model parameters by iteratively reducing error.\" },\n    { word: \"backpropagation\", translation: \"rétropropagation\", example: \"Backpropagation adjusts neural network weights based on prediction errors.\" },\n    { word: \"regularization\", translation: \"régularisation\", example: \"Regularization techniques prevent overfitting by constraining model complexity.\" },\n    { word: \"model generalization\", translation: \"généralisation du modèle\", example: \"Good model generalization ensures performance on previously unseen data.\" },\n    { word: \"classification algorithm\", translation: \"algorithme de classification\", example: \"Classification algorithms assign data points to predefined categories.\" },\n    { word: \"clustering algorithm\", translation: \"algorithme de regroupement\", example: \"Clustering algorithms identify natural groupings within unlabeled data.\" },\n    \n    { word: \"ensemble method\", translation: \"méthode d'ensemble\", example: \"Ensemble methods combine multiple models to improve prediction accuracy.\" },\n    { word: \"feature engineering\", translation: \"ingénierie des caractéristiques\", example: \"Feature engineering transforms raw data into more effective model inputs.\" },\n    { word: \"decision tree\", translation: \"arbre de décision\", example: \"Decision trees classify data through a series of conditional splits.\" },\n    { word: \"bias-variance tradeoff\", translation: \"compromis biais-variance\", example: \"The bias-variance tradeoff balances model complexity against performance.\" },\n    \n    { word: \"semi-supervised learning\", translation: \"apprentissage semi-supervisé\", example: \"Semi-supervised learning combines labeled and unlabeled training data.\" },\n    { word: \"neural network layer\", translation: \"couche de réseau neuronal\", example: \"Each neural network layer transforms representations of input data.\" },\n    \n    // Intelligence artificielle avancée (25 mots)\n    { word: \"generative model\", translation: \"modèle génératif\", example: \"Generative models create new content resembling their training data.\" },\n    { word: \"transformer architecture\", translation: \"architecture transformer\", example: \"Transformer architectures revolutionized natural language processing capabilities.\" },\n    { word: \"attention mechanism\", translation: \"mécanisme d'attention\", example: \"Attention mechanisms focus computational resources on relevant inputs.\" },\n    { word: \"diffusion model\", translation: \"modèle de diffusion\", example: \"Diffusion models generate images by reversing noise addition processes.\" },\n    { word: \"multimodal AI\", translation: \"IA multimodale\", example: \"Multimodal AI systems integrate and process multiple types of information.\" },\n    \n    { word: \"foundation model\", translation: \"modèle fondationnel\", example: \"Foundation models serve as adaptable bases for various downstream applications.\" },\n    \n    \n    { word: \"reinforcement learning from human feedback\", translation: \"apprentissage par renforcement à partir de retours humains\", example: \"Reinforcement learning from human feedback uses human evaluations to guide model training.\" },\n    \n    { word: \"self-supervised learning\", translation: \"apprentissage auto-supervisé\", example: \"Self-supervised learning extracts supervision signals from unlabeled data.\" },\n    { word: \"neural architecture search\", translation: \"recherche d'architecture neuronale\", example: \"Neural architecture search automates the design of optimal network structures.\" },\n    { word: \"adversarial training\", translation: \"entraînement antagoniste\", example: \"Adversarial training improves model robustness against manipulated inputs.\" },\n    { word: \"zero-shot learning\", translation: \"apprentissage zéro-shot\", example: \"Zero-shot learning performs tasks without specific training examples.\" },\n    { word: \"few-shot learning\", translation: \"apprentissage à partir de peu d'exemples\", example: \"Few-shot learning generalizes effectively from minimal training data.\" },\n    { word: \"computational neuroscience\", translation: \"neuroscience computationnelle\", example: \"Computational neuroscience models brain functions to inspire AI approaches.\" },\n    { word: \"human-level AI\", translation: \"IA de niveau humain\", example: \"Human-level AI matches people's performance across multiple cognitive domains.\" },\n    { word: \"emergent behavior\", translation: \"comportement émergent\", example: \"Emergent behavior arises from simple rules leading to complex system properties.\" },\n    { word: \"prompt engineering\", translation: \"ingénierie de prompts\", example: \"Prompt engineering optimizes instructions to guide AI system outputs.\" },\n    { word: \"contrastive learning\", translation: \"apprentissage contrastif\", example: \"Contrastive learning differentiates between similar and dissimilar data points.\" },\n    { word: \"neuromorphic computing\", translation: \"informatique neuromorphique\", example: \"Neuromorphic computing implements brain-inspired hardware architectures.\" },\n    { word: \"synthetic data generation\", translation: \"génération de données synthétiques\", example: \"Synthetic data generation creates artificial examples for model training.\" },\n    { word: \"model distillation\", translation: \"distillation de modèle\", example: \"Model distillation transfers knowledge from complex models to simpler ones.\" },\n    \n    \n    // Éthique de l'IA (25 mots)\n    \n    \n    { word: \"technological fairness\", translation: \"équité technologique\", example: \"Technological fairness ensures equal treatment across demographic groups.\" },\n    { word: \"value alignment\", translation: \"alignement des valeurs\", example: \"Value alignment ensures AI systems operate according to human values.\" },\n    \n    \n    \n    { word: \"fairness metric\", translation: \"métrique d'équité\", example: \"Fairness metrics quantify disparate impacts across population groups.\" },\n    \n    \n    \n    { word: \"trustworthy AI\", translation: \"IA digne de confiance\", example: \"Trustworthy AI combines technical robustness with ethical principles.\" },\n    { word: \"moral agency\", translation: \"agentivité morale\", example: \"Questions of moral agency arise when AI systems make impactful decisions.\" },\n    { word: \"ethical risk assessment\", translation: \"évaluation des risques éthiques\", example: \"Ethical risk assessment identifies potential harms before deployment.\" },\n    { word: \"human oversight\", translation: \"supervision humaine\", example: \"Human oversight ensures appropriate intervention in automated processes.\" },\n    \n    { word: \"ethics by design\", translation: \"éthique dès la conception\", example: \"Ethics by design incorporates moral considerations throughout development.\" },\n    \n    { word: \"human autonomy\", translation: \"autonomie humaine\", example: \"Human autonomy must be preserved despite increasing automation.\" },\n    { word: \"existential risk\", translation: \"risque existentiel\", example: \"Advanced AI may pose existential risks requiring proactive governance.\" },\n    \n    { word: \"machine ethics\", translation: \"éthique machine\", example: \"Machine ethics explores moral decision-making by artificial systems.\" },\n    { word: \"value judgment\", translation: \"jugement de valeur\", example: \"AI systems implicitly make value judgments in their operations.\" },\n    { word: \"benefit distribution\", translation: \"distribution des bénéfices\", example: \"Benefit distribution concerns how AI advantages are shared across society.\" },\n    { word: \"ethical standard\", translation: \"norme éthique\", example: \"Ethical standards establish minimum requirements for responsible AI.\" },\n    \n    // Gouvernance des technologies (25 mots)\n    \n    \n    { word: \"technology policy\", translation: \"politique technologique\", example: \"Technology policy addresses societal impacts of innovation.\" },\n    \n    { word: \"compliance requirement\", translation: \"exigence de conformité\", example: \"Compliance requirements establish standards for legal technology use.\" },\n    \n    { word: \"multi-stakeholder approach\", translation: \"approche multipartite\", example: \"Multi-stakeholder approaches involve diverse perspectives in technology governance.\" },\n    \n    { word: \"hard law\", translation: \"droit contraignant\", example: \"Hard law imposes legally binding technology regulations.\" },\n    { word: \"soft law\", translation: \"droit souple\", example: \"Soft law includes non-binding guidelines and recommendations.\" },\n    \n    \n    \n    { word: \"risk-based regulation\", translation: \"réglementation basée sur les risques\", example: \"Risk-based regulation applies stricter oversight to higher-risk technologies.\" },\n    { word: \"certification standard\", translation: \"norme de certification\", example: \"Certification standards verify compliance with technical and ethical requirements.\" },\n    \n    { word: \"technology ethics board\", translation: \"comité d'éthique technologique\", example: \"Technology ethics boards review proposed innovations before implementation.\" },\n    \n    \n    { word: \"governance gap\", translation: \"lacune de gouvernance\", example: \"Governance gaps leave emerging technologies inadequately regulated.\" },\n    \n    { word: \"innovation principle\", translation: \"principe d'innovation\", example: \"The innovation principle balances risk management with technological progress.\" },\n    \n    { word: \"international standards\", translation: \"normes internationales\", example: \"International standards harmonize technology governance across borders.\" },\n    { word: \"adaptive regulation\", translation: \"réglementation adaptative\", example: \"Adaptive regulation evolves alongside technological development.\" },\n    \n    // Impact sociétal des technologies (25 mots)\n    { word: \"societal impact\", translation: \"impact sociétal\", example: \"AI technologies create profound societal impacts across multiple domains.\" },\n    \n    \n    \n    \n    \n    \n    { word: \"information ecosystem\", translation: \"écosystème informationnel\", example: \"Healthy information ecosystems support informed democratic participation.\" },\n    { word: \"digital citizenship\", translation: \"citoyenneté numérique\", example: \"Digital citizenship encompasses rights and responsibilities in online spaces.\" },\n    { word: \"technological literacy\", translation: \"littératie technologique\", example: \"Technological literacy enables effective navigation of digital environments.\" },\n    \n    { word: \"sociotechnical system\", translation: \"système sociotechnique\", example: \"Sociotechnical systems involve interdependent social and technological elements.\" },\n    \n    { word: \"human-centered technology\", translation: \"technologie centrée sur l'humain\", example: \"Human-centered technology prioritizes human needs and values.\" },\n    \n    \n    { word: \"technological solutionism\", translation: \"solutionnisme technologique\", example: \"Technological solutionism assumes complex social problems have technological fixes.\" },\n    { word: \"digital labor\", translation: \"travail numérique\", example: \"Digital labor includes both visible and invisible work in technological systems.\" },\n    \n    { word: \"technosocial disruption\", translation: \"perturbation technosociale\", example: \"Technosocial disruption transforms established institutional patterns.\" },\n    \n    { word: \"participatory design\", translation: \"conception participative\", example: \"Participatory design involves users throughout technology development.\" },\n    { word: \"social infrastructure\", translation: \"infrastructure sociale\", example: \"Social infrastructure supports human relationships and community resilience.\" },\n    { word: \"environmental impact\", translation: \"impact environnemental\", example: \"The environmental impact of computing includes energy use and material requirements.\" },\n    { word: \"technocultural change\", translation: \"changement technoculturel\", example: \"Technocultural change transforms social norms and cultural practices.\" },\n    \n    // Confidentialité et sécurité des données (25 mots)\n    \n    \n    \n    { word: \"data encryption\", translation: \"chiffrement des données\", example: \"Data encryption converts information into code to prevent unauthorized access.\" },\n    \n    \n    { word: \"data protection\", translation: \"protection des données\", example: \"Data protection frameworks establish legal requirements for information handling.\" },\n    \n    { word: \"privacy regulation\", translation: \"réglementation de la vie privée\", example: \"Privacy regulations establish legal frameworks for data protection.\" },\n    { word: \"data minimization\", translation: \"minimisation des données\", example: \"Data minimization restricts collection to necessary information.\" },\n    { word: \"threat model\", translation: \"modèle de menace\", example: \"Threat models identify potential vulnerabilities and attack vectors.\" },\n    { word: \"zero-trust security\", translation: \"sécurité zéro confiance\", example: \"Zero-trust security verifies every access request regardless of source.\" },\n    \n    \n    { word: \"privacy impact assessment\", translation: \"évaluation d'impact sur la vie privée\", example: \"Privacy impact assessments identify and mitigate potential privacy risks.\" },\n    { word: \"information asymmetry\", translation: \"asymétrie d'information\", example: \"Information asymmetry exists when one party has more knowledge than another.\" },\n    { word: \"differential privacy\", translation: \"confidentialité différentielle\", example: \"Differential privacy protects individual data while allowing useful analysis.\" },\n    { word: \"digital surveillance\", translation: \"surveillance numérique\", example: \"Digital surveillance monitors online activities and communications.\" },\n    { word: \"privacy-enhancing technology\", translation: \"technologie renforçant la confidentialité\", example: \"Privacy-enhancing technologies protect personal information during processing.\" },\n    { word: \"security breach\", translation: \"atteinte à la sécurité\", example: \"Security breaches compromise system integrity or data confidentiality.\" },\n    { word: \"identity management\", translation: \"gestion de l'identité\", example: \"Identity management systems authenticate and authorize system users.\" },\n    \n    { word: \"data anonymization\", translation: \"anonymisation des données\", example: \"Data anonymization removes identifying information from datasets.\" },\n    { word: \"consent management\", translation: \"gestion du consentement\", example: \"Consent management systems track user permissions for data processing.\" },\n    { word: \"cryptographic protocol\", translation: \"protocole cryptographique\", example: \"Cryptographic protocols secure communications between parties.\" },\n    \n    // IA et prise de décision (25 mots)\n    { word: \"automated decision-making\", translation: \"prise de décision automatisée\", example: \"Automated decision-making applies algorithms to choices traditionally made by humans.\" },\n    \n    \n    { word: \"algorithmic decision-making\", translation: \"prise de décision algorithmique\", example: \"Algorithmic decision-making applies computational procedures to choice processes.\" },\n    \n    \n    \n    \n    { word: \"decision threshold\", translation: \"seuil de décision\", example: \"Decision thresholds determine when systems take specific actions.\" },\n    \n    { word: \"computational decision science\", translation: \"science computationnelle de la décision\", example: \"Computational decision science applies algorithms to choice processes.\" },\n    \n    \n    \n    { word: \"decision automation\", translation: \"automatisation des décisions\", example: \"Decision automation implements choices without human intervention.\" },\n    \n    \n    { word: \"outcome prediction\", translation: \"prédiction des résultats\", example: \"Outcome prediction forecasts consequences of potential choices.\" },\n    { word: \"decision boundary\", translation: \"frontière de décision\", example: \"Decision boundaries separate different classification outcomes.\" },\n    { word: \"multi-criteria decision analysis\", translation: \"analyse décisionnelle multicritère\", example: \"Multi-criteria decision analysis balances competing objectives.\" },\n    \n    { word: \"decision optimization\", translation: \"optimisation des décisions\", example: \"Decision optimization identifies best choices given constraints.\" },\n    { word: \"algorithmic recourse\", translation: \"recours algorithmique\", example: \"Algorithmic recourse provides paths to favorable decisions after rejection.\" },\n    { word: \"decision confidence\", translation: \"confiance décisionnelle\", example: \"Decision confidence metrics quantify certainty in automated judgments.\" },\n    { word: \"context-aware decision\", translation: \"décision contextuelle\", example: \"Context-aware decisions adapt to specific environmental conditions.\" },\n    \n    // IA et automatisation (25 mots)\n    \n    \n    \n    ces of tasks across systems.\" },\n    \n    { word: \"labor displacement\", translation: \"déplacement de main-d'œuvre\", example: \"Labor displacement occurs when automation eliminates specific job categories.\" },\n    { word: \"cognitive automation\", translation: \"automatisation cognitive\", example: \"Cognitive automation applies AI to knowledge work processes.\" },\n    { word: \"automated manufacturing\", translation: \"fabrication automatisée\", example: \"Automated manufacturing uses robots and intelligent systems for production.\" },\n    \n    { word: \"business process automation\", translation: \"automatisation des processus d'entreprise\", example: \"Business process automation streamlines organizational workflows.\" },\n    { word: \"job polarization\", translation: \"polarisation de l'emploi\", example: \"Job polarization concentrates work in high and low-skill categories.\" },\n    { word: \"task automation\", translation: \"automatisation des tâches\", example: \"Task automation replaces specific activities rather than entire jobs.\" },\n    { word: \"digital worker\", translation: \"travailleur numérique\", example: \"Digital workers perform automated tasks within organizational systems.\" },\n    { word: \"automation bias\", translation: \"biais d'automatisation\", example: \"Automation bias causes humans to favor machine-generated suggestions.\" },\n    { word: \"augmented workforce\", translation: \"main-d'œuvre augmentée\", example: \"The augmented workforce combines human and automated capabilities.\" },\n    { word: \"self-driving technology\", translation: \"technologie de conduite autonome\", example: \"Self-driving technology navigates vehicles through sensor data and AI.\" },\n    { word: \"automated decision system\", translation: \"système de décision automatisé\", example: \"Automated decision systems apply rules to make choices without human input.\" },\n    { word: \"machine operator\", translation: \"opérateur de machine\", example: \"Machine operators supervise and control automated equipment.\" },\n    { word: \"skills gap\", translation: \"écart de compétences\", example: \"Automation creates skills gaps between available and required workforce capabilities.\" },\n    { word: \"human-centered automation\", translation: \"automatisation centrée sur l'humain\", example: \"Human-centered automation designs systems around user needs and abilities.\" },\n    { word: \"automation strategy\", translation: \"stratégie d'automatisation\", example: \"Automation strategy identifies processes suitable for technological replacement.\" },\n    \n    \n    \n    // Futur des technologies intelligentes (25 mots)\n    \n    \n    \n    \n    { word: \"autonomous system\", translation: \"système autonome\", example: \"Autonomous systems operate independently without human supervision.\" },\n    { word: \"artificial superintelligence\", translation: \"superintelligence artificielle\", example: \"Artificial superintelligence would surpass human capabilities across all domains.\" },\n    \n    { word: \"longtermism\", translation: \"longterminisme\", example: \"Longtermism prioritizes safeguarding humanity's long-term future.\" },\n    \n    { word: \"AI alignment\", translation: \"alignement de l'IA\", example: \"AI alignment ensures artificial systems act according to human values.\" },\n    \n    { word: \"digital consciousness\", translation: \"conscience numérique\", example: \"Digital consciousness raises philosophical questions about machine sentience.\" },\n    \n    \n    { word: \"AI safety\", translation: \"sécurité de l'IA\", example: \"AI safety research develops methods to ensure beneficial advanced systems.\" },\n    \n    \n    { word: \"beneficial AI\", translation: \"IA bénéfique\", example: \"Beneficial AI development prioritizes positive human outcomes.\" },\n    { word: \"transformative AI\", translation: \"IA transformatrice\", example: \"Transformative AI would fundamentally change civilization's trajectory.\" },\n    { word: \"future of work\", translation: \"avenir du travail\", example: \"Intelligent technologies will reshape employment patterns and occupations.\" },\n    { word: \"machine consciousness\", translation: \"conscience machinique\", example: \"Machine consciousness research explores potential for aware artificial systems.\" },\n    { word: \"ethical futurism\", translation: \"futurisme éthique\", example: \"Ethical futurism considers moral implications of emerging technologies.\" },\n    { word: \"digital afterlife\", translation: \"vie après la mort numérique\", example: \"Digital afterlife technologies might preserve aspects of personal identity.\" },\n    { word: \"intelligence explosion\", translation: \"explosion d'intelligence\", example: \"An intelligence explosion would involve rapidly self-improving AI systems.\" }]\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-50-31.600Z\\C2_23_intelligence_artificielle.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token of","line":99,"column":14}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const vocab = {\n  title: \"Intelligence Artificielle et Analyse de Données\",\n  words: [\n    // Concepts fondamentaux de l'IA et du ML (50 mots)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    { word: \"validation data\", translation: \"données de validation\", example: \"Hyperparameters were optimized using performance on the validation data, separate from the training set.\" },\n    { word: \"test data\", translation: \"données de test\", example: \"The final evaluation used previously unseen test data to assess real-world performance.\" },\n    \n    \n    { word: \"hyperparameter optimization\", translation: \"optimisation des hyperparamètres\", example: \"Bayesian hyperparameter optimization efficiently explores the parameter space by leveraging information from previous evaluations.\" },\n    \n    \n    \n    \n    { word: \"loss function\", translation: \"fonction de perte\", example: \"The loss function quantifies the difference between predicted outputs and ground truth values.\" },\n    \n    \n    \n    { word: \"discriminative model\", translation: \"modèle discriminatif\", example: \"Discriminative models focus on decision boundaries between classes rather than modeling the full data distribution.\" },\n    { word: \"classification\", translation: \"classification\", example: \"The classification algorithm assigns input examples to discrete categories based on their features.\" },\n    \n    { word: \"clustering\", translation: \"regroupement\", example: \"Clustering algorithms identify natural groupings in data based on similarity measures.\" },\n    { word: \"dimensionality reduction\", translation: \"réduction de dimensionnalité\", example: \"Dimensionality reduction techniques compress high-dimensional data while preserving important structures.\" },\n    \n    \n    \n    { word: \"random forest\", translation: \"forêt aléatoire\", example: \"Random forests combine multiple decision trees to reduce overfitting and improve generalization.\" },\n    { word: \"gradient boosting\", translation: \"amplification de gradient\", example: \"Gradient boosting sequentially builds models that correct errors made by previous iterations.\" },\n    { word: \"support vector machine\", translation: \"machine à vecteurs de support\", example: \"Support vector machines find optimal hyperplanes that maximize the margin between different classes.\" },\n    { word: \"k-nearest neighbors\", translation: \"k plus proches voisins\", example: \"The k-nearest neighbors algorithm classifies points based on majority votes from their closest neighbors.\" },\n    { word: \"convolutional neural network\", translation: \"réseau neuronal convolutif\", example: \"Convolutional neural networks excel at visual recognition tasks through specialized layer architectures.\" },\n    { word: \"recurrent neural network\", translation: \"réseau neuronal récurrent\", example: \"Recurrent neural networks process sequential data by maintaining internal state information.\" },\n    { word: \"transformer\", translation: \"transformeur\", example: \"Transformer architectures revolutionized language processing through attention mechanisms and parallel computation.\" },\n    { word: \"generative adversarial network\", translation: \"réseau antagoniste génératif\", example: \"Generative adversarial networks consist of competing networks that simultaneously improve generation quality.\" },\n    { word: \"reinforcement learning agent\", translation: \"agent d'apprentissage par renforcement\", example: \"The reinforcement learning agent learned optimal strategies through repeated interactions with its environment.\" },\n    \n    \n    { word: \"speech recognition\", translation: \"reconnaissance vocale\", example: \"The speech recognition system converts spoken language into text with contextual understanding.\" },\n    \n    \n    \n    // Techniques avancées et modèles (50 mots)\n    { word: \"deep neural network\", translation: \"réseau neuronal profond\", example: \"Deep neural networks with multiple layers can learn increasingly abstract representations of input data.\" },\n    \n    { word: \"multilayer perceptron\", translation: \"perceptron multicouche\", example: \"The multilayer perceptron contains input, hidden, and output layers fully connected between adjacent levels.\" },\n    { word: \"activation function\", translation: \"fonction d'activation\", example: \"Non-linear activation functions enable neural networks to model complex relationships in data.\" },\n    { word: \"rectified linear unit\", translation: \"unité linéaire rectifiée\", example: \"ReLU activation functions accelerate training by addressing vanishing gradient problems in deep networks.\" },\n    { word: \"softmax function\", translation: \"fonction softmax\", example: \"The softmax function converts raw model outputs into probability distributions across classes.\" },\n    { word: \"batch normalization\", translation: \"normalisation par lots\", example: \"Batch normalization stabilizes and accelerates neural network training by normalizing layer inputs.\" },\n    { word: \"dropout\", translation: \"abandon\", example: \"Dropout prevents co-adaptation of neurons by randomly deactivating units during training.\" },\n    { word: \"early stopping\", translation: \"arrêt précoce\", example: \"Early stopping prevents overfitting by terminating training when validation performance begins to deteriorate.\" },\n    { word: \"parameter tuning\", translation: \"ajustement des paramètres\", example: \"Systematic parameter tuning identified optimal configuration for the production model.\" },\n    { word: \"batch size\", translation: \"taille du lot\", example: \"Larger batch sizes enable more stable gradient estimates but require more memory during training.\" },\n    { word: \"learning rate\", translation: \"taux d'apprentissage\", example: \"Adaptive learning rate schedules adjust optimization step sizes throughout training for better convergence.\" },\n    { word: \"weight initialization\", translation: \"initialisation des poids\", example: \"Proper weight initialization prevents signal vanishing or explosion in deep networks.\" },\n    \n    { word: \"self-attention\", translation: \"auto-attention\", example: \"Self-attention allows models to consider relationships between all positions in a sequence simultaneously.\" },\n    { word: \"multi-head attention\", translation: \"attention multi-têtes\", example: \"Multi-head attention projects inputs into multiple subspaces to capture different relationship types.\" },\n    { word: \"encoder-decoder architecture\", translation: \"architecture encodeur-décodeur\", example: \"Encoder-decoder architectures transform input sequences into intermediate representations before generating outputs.\" },\n    { word: \"long short-term memory\", translation: \"mémoire à long et à court terme\", example: \"LSTM units maintain information over extended sequences through specialized gating mechanisms.\" },\n    { word: \"gated recurrent unit\", translation: \"unité récurrente à portes\", example: \"GRUs simplify LSTM architecture while maintaining ability to capture long-range dependencies.\" },\n    { word: \"sequence-to-sequence model\", translation: \"modèle séquence-à-séquence\", example: \"Sequence-to-sequence models transform input sequences into output sequences of potentially different lengths.\" },\n    { word: \"autoencoder\", translation: \"auto-encodeur\", example: \"Autoencoders learn efficient data representations by reconstructing inputs through compressed encodings.\" },\n    { word: \"variational autoencoder\", translation: \"auto-encodeur variationnel\", example: \"Variational autoencoders learn probabilistic latent representations enabling controlled generation.\" },\n    \n    \n    \n    { word: \"fine-tuning\", translation: \"ajustement fin\", example: \"Fine-tuning adapts pre-trained models to specific domains or tasks with smaller, specialized datasets.\" },\n    \n    \n    \n    { word: \"meta-learning\", translation: \"méta-apprentissage\", example: \"Meta-learning algorithms learn how to learn, developing strategies that generalize across different tasks.\" },\n    { word: \"multitask learning\", translation: \"apprentissage multitâche\", example: \"Multitask learning simultaneously trains models on related tasks to improve performance through shared representations.\" },\n    \n    { word: \"domain adaptation\", translation: \"adaptation de domaine\", example: \"Domain adaptation techniques bridge distribution gaps between training and deployment environments.\" },\n    \n    \n    \n    { word: \"curriculum learning\", translation: \"apprentissage par curriculum\", example: \"Curriculum learning presents training examples in increasing complexity to facilitate more efficient learning.\" },\n    \n    { word: \"multimodal learning\", translation: \"apprentissage multimodal\", example: \"Multimodal learning integrates information from different data types like text, images, and audio.\" },\n    { word: \"graph neural network\", translation: \"réseau neuronal de graphe\", example: \"Graph neural networks process data with irregular structure by operating on node and edge representations.\" },\n    { word: \"knowledge distillation\", translation: \"distillation de connaissances\", example: \"Knowledge distillation transfers capabilities from larger models to smaller, more efficient ones.\" },\n    \n    recision of parameters.\" },\n    { word: \"pruning\", translation: \"élagage\", example: \"Network pruning removes redundant parameters to create smaller, more efficient models without significant performance loss.\" },\n    { word: \"model deployment\", translation: \"déploiement de modèle\", example: \"Model deployment integrates AI systems into production environments with monitoring and maintenance capabilities.\" },\n    { word: \"model serving\", translation: \"service de modèle\", example: \"Efficient model serving infrastructure handles prediction requests at scale with low latency requirements.\" },\n    { word: \"model versioning\", translation: \"versionnage de modèle\", example: \"Model versioning systems track changes throughout the development lifecycle for reproducibility and rollback capabilities.\" },\n    { word: \"model monitoring\", translation: \"surveillance de modèle\", example: \"Continuous model monitoring detects performance degradation and data drift in production environments.\" },\n    \n    // Analyse de données et techniques statistiques (50 mots)\n    \n    { word: \"exploratory data analysis\", translation: \"analyse exploratoire des données\", example: \"Exploratory data analysis examines distributions and relationships before formal modeling begins.\" },\n    \n    \n    \n    { word: \"p-value\", translation: \"valeur p\", example: \"The p-value quantifies evidence against the null hypothesis in hypothesis testing.\" },\n    \n    \n    \n    { word: \"correlation\", translation: \"corrélation\", example: \"Correlation measures strength and direction of relationships between variables without implying causation.\" },\n    \n    { word: \"linear regression\", translation: \"régression linéaire\", example: \"Linear regression models relationships between variables using straight-line functions.\" },\n    { word: \"logistic regression\", translation: \"régression logistique\", example: \"Logistic regression predicts categorical outcomes through probability estimation.\" },\n    \n    \n    { word: \"principal component analysis\", translation: \"analyse en composantes principales\", example: \"Principal component analysis reduces dimensionality while preserving maximum variance.\" },\n    \n    \n    { word: \"seasonality\", translation: \"saisonnalité\", example: \"The analysis revealed strong seasonality with consistent patterns repeating annually.\" },\n    \n    \n    \n    { word: \"association rule learning\", translation: \"apprentissage des règles d'association\", example: \"Association rule learning identifies co-occurring elements within transactional datasets.\" },\n    \n    \n    \n    { word: \"pivot table\", translation: \"tableau croisé dynamique\", example: \"Pivot tables aggregate and summarize data across multiple dimensions for comparative analysis.\" },\n    { word: \"heatmap\", translation: \"carte thermique\", example: \"The correlation heatmap visually represents relationship strengths between multiple variables.\" },\n    { word: \"scatter plot\", translation: \"nuage de points\", example: \"Scatter plots reveal relationships between two continuous variables including potential non-linearities.\" },\n    { word: \"histogram\", translation: \"histogramme\", example: \"Histograms display frequency distributions of continuous variables across defined intervals.\" },\n    { word: \"box plot\", translation: \"boîte à moustaches\", example: \"Box plots summarize distributions through quartiles while highlighting potential outliers.\" },\n    \n    { word: \"data preprocessing\", translation: \"prétraitement des données\", example: \"Data preprocessing transforms raw information into formats suitable for modeling and analysis.\" },\n    \n    { word: \"feature selection\", translation: \"sélection des caractéristiques\", example: \"Feature selection identifies the most informative variables while removing redundant or irrelevant ones.\" },\n    \n    \n    \n    \n    \n    \n    { word: \"ETL process\", translation: \"processus ETL\", example: \"ETL processes extract data from sources, transform it to appropriate formats, and load it into analytical systems.\" },\n    \n    \n    \n    { word: \"distributed computing\", translation: \"informatique distribuée\", example: \"Distributed computing frameworks parallelize data processing across multiple machines.\" },\n    \n    { word: \"streaming analytics\", translation: \"analyse en continu\", example: \"Streaming analytics processes data in real-time as it arrives rather than in batches.\" },\n    \n    \n    \n    // Applications et considérations éthiques (50 mots)\n    \n    { word: \"personalization algorithm\", translation: \"algorithme de personnalisation\", example: \"Personalization algorithms tailor experiences to individual users based on their characteristics and history.\" },\n    \n    \n    { word: \"virtual assistant\", translation: \"assistant virtuel\", example: \"The virtual assistant integrates with multiple systems to perform tasks through natural language commands.\" },\n    \n    { word: \"fraud detection\", translation: \"détection de fraude\", example: \"Advanced fraud detection systems identify suspicious patterns that indicate potentially illicit activities.\" },\n    { word: \"image recognition\", translation: \"reconnaissance d'image\", example: \"Image recognition technologies automatically identify objects, people, and activities in visual data.\" },\n    \n    \n    { word: \"natural language understanding\", translation: \"compréhension du langage naturel\", example: \"Natural language understanding extracts meaning and intent from human communication.\" },\n    { word: \"natural language generation\", translation: \"génération de langage naturel\", example: \"Natural language generation produces human-like text based on provided information and context.\" },\n    { word: \"text summarization\", translation: \"résumé de texte\", example: \"Automatic text summarization condenses documents while preserving key information and meaning.\" },\n    { word: \"machine translation\", translation: \"traduction automatique\", example: \"Neural machine translation systems convert text between languages while maintaining semantic meaning.\" },\n    { word: \"demand forecasting\", translation: \"prévision de la demande\", example: \"Demand forecasting models predict future customer requirements based on historical patterns and contextual factors.\" },\n    { word: \"dynamic pricing\", translation: \"tarification dynamique\", example: \"Dynamic pricing algorithms adjust rates in real-time based on demand, competition, and other market factors.\" },\n    \n    { word: \"customer lifetime value prediction\", translation: \"prédiction de la valeur vie client\", example: \"Advanced models forecast customer lifetime value to optimize acquisition and retention strategies.\" },\n    { word: \"churn prediction\", translation: \"prédiction d'attrition\", example: \"Churn prediction identifies customers likely to discontinue services, enabling proactive retention efforts.\" },\n    { word: \"algorithmic trading\", translation: \"trading algorithmique\", example: \"Algorithmic trading systems execute financial transactions based on predefined rules and market conditions.\" },\n    { word: \"risk modeling\", translation: \"modélisation du risque\", example: \"Sophisticated risk modeling evaluates potential threats across multiple variables and scenarios.\" },\n    { word: \"credit scoring\", translation: \"évaluation du crédit\", example: \"Machine learning credit scoring assesses default risk using diverse data beyond traditional financial factors.\" },\n    { word: \"supply chain optimization\", translation: \"optimisation de la chaîne d'approvisionnement\", example: \"AI-driven supply chain optimization balances inventory, transportation, and production constraints for maximum efficiency.\" },\n    \n    \n    \n    \n    { word: \"model transparency\", translation: \"transparence du modèle\", example: \"Model transparency enables understanding of how AI systems arrive at specific decisions or predictions.\" },\n    { word: \"black box problem\", translation: \"problème de la boîte noire\", example: \"The black box problem refers to AI systems producing outputs without explainable reasoning processes.\" },\n    { word: \"explainable AI\", translation: \"IA explicable\", example: \"Explainable AI techniques provide interpretable insights into model decision processes.\" },\n    { word: \"feature importance\", translation: \"importance des caractéristiques\", example: \"Feature importance analysis reveals which variables most significantly influence model predictions.\" },\n    { word: \"model interpretability\", translation: \"interprétabilité du modèle\", example: \"Model interpretability techniques help humans understand how AI systems reach specific conclusions.\" },\n    \n    { word: \"demographic parity\", translation: \"parité démographique\", example: \"Demographic parity requires equal prediction rates across protected groups regardless of base rates.\" },\n    \n    { word: \"bias mitigation\", translation: \"atténuation des biais\", example: \"Bias mitigation techniques address unfairness in training data and model behavior.\" },\n    \n    \n    { word: \"privacy-preserving machine learning\", translation: \"apprentissage automatique respectueux de la vie privée\", example: \"Privacy-preserving machine learning enables analysis without exposing individual sensitive data.\" },\n    \n    \n    { word: \"model governance\", translation: \"gouvernance des modèles\", example: \"Model governance establishes policies and procedures for responsible AI development and deployment.\" },\n    \n    { word: \"human-AI collaboration\", translation: \"collaboration homme-IA\", example: \"Human-AI collaboration leverages complementary strengths of people and machines for enhanced outcomes.\" },\n    \n    \n    { word: \"AI regulation\", translation: \"réglementation de l'IA\", example: \"AI regulation frameworks establish boundaries and requirements for artificial intelligence development and use.\" },\n    \n    { word: \"algorithmic impact assessment\", translation: \"évaluation de l'impact algorithmique\", example: \"Algorithmic impact assessments evaluate potential consequences before deploying automated systems.\" }]\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T14-50-31.600Z\\C2_25_psychologie_sante_mentale.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T15-08-57.411Z\\A1_10_transports.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T15-08-57.411Z\\A1_11_meteo.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T15-08-57.411Z\\A1_15_emotions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T15-08-57.411Z\\A1_16_animals.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T15-08-57.411Z\\A2_01_identite_elargie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T15-08-57.411Z\\A2_05_travail_professionnel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T15-08-57.411Z\\A2_06_alimentation_elargie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T15-08-57.411Z\\A2_10_education_apprentissage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-17T15-08-57.411Z\\A2_12_temps_meteo.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T18-23-45.186Z\\B2_16_enjeux_mondiaux_et_cooperation_internationale.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token {","line":126,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const vocab = {\n  title: \"Enjeux Mondiaux et Coopération Internationale\",\n  words: [\n    // Organisations et structures internationales (38 mots)\n    \n    { word: \"United Nations\", translation: \"Nations Unies\", example: \"The United Nations General Assembly meets annually to discuss global challenges.\" },\n    \n    \n    \n    { word: \"bilateral agreement\", translation: \"accord bilatéral\", example: \"The bilateral agreement facilitated trade between the neighboring countries.\" },\n    { word: \"multilateral cooperation\", translation: \"coopération multilatérale\", example: \"Multilateral cooperation is essential to address transboundary environmental issues.\" },\n    \n    { word: \"diplomatic relations\", translation: \"relations diplomatiques\", example: \"The countries have maintained diplomatic relations for over fifty years.\" },\n    { word: \"peacekeeping mission\", translation: \"mission de maintien de la paix\", example: \"The peacekeeping mission helps stabilize the region following the conflict.\" },\n    \n    { word: \"human rights council\", translation: \"conseil des droits de l'homme\", example: \"The Human Rights Council investigated reports of abuses in the conflict zone.\" },\n    { word: \"diplomatic corps\", translation: \"corps diplomatique\", example: \"Members of the diplomatic corps attended the national day celebration.\" },\n    \n    \n    { word: \"sanctions\", translation: \"sanctions\", example: \"Economic sanctions were imposed following violations of the peace agreement.\" },\n    { word: \"ambassador\", translation: \"ambassadeur\", example: \"The newly appointed ambassador presented her credentials to the host government.\" },\n    { word: \"embassy\", translation: \"ambassade\", example: \"Citizens sought assistance at their embassy following the natural disaster.\" },\n    { word: \"consulate\", translation: \"consulat\", example: \"The consulate processed visa applications for travelers to the region.\" },\n    \n    { word: \"international community\", translation: \"communauté internationale\", example: \"The international community expressed concern about the deteriorating situation.\" },\n    \n    \n    \n    \n    \n    \n    { word: \"international aid\", translation: \"aide internationale\", example: \"International aid was mobilized following the devastating earthquake.\" },\n    \n    \n    { word: \"secretary-general\", translation: \"secrétaire général\", example: \"The Secretary-General urged member states to increase their climate commitments.\" },\n    { word: \"diplomatic channel\", translation: \"voie diplomatique\", example: \"The countries communicated through diplomatic channels to avoid public confrontation.\" },\n    { word: \"international waters\", translation: \"eaux internationales\", example: \"The incident occurred in international waters, complicating jurisdiction questions.\" },\n    { word: \"international alliance\", translation: \"alliance internationale\", example: \"The international alliance coordinated military operations against terrorist groups.\" },\n    \n    { word: \"diplomatic crisis\", translation: \"crise diplomatique\", example: \"The diplomatic crisis escalated after the expulsion of several ambassadors.\" },\n    \n    { word: \"sovereign state\", translation: \"État souverain\", example: \"As a sovereign state, the country determines its own domestic policies.\" },\n    \n    // Enjeux mondiaux (37 mots)\n    \n    \n    { word: \"greenhouse gas emissions\", translation: \"émissions de gaz à effet de serre\", example: \"The agreement commits countries to reducing greenhouse gas emissions significantly.\" },\n    \n    \n    { word: \"biodiversity loss\", translation: \"perte de biodiversité\", example: \"Habitat destruction accelerates biodiversity loss worldwide.\" },\n    \n    \n    { word: \"water scarcity\", translation: \"pénurie d'eau\", example: \"Water scarcity affects over two billion people globally.\" },\n    { word: \"refugee crisis\", translation: \"crise des réfugiés\", example: \"The refugee crisis requires coordinated international responses.\" },\n    { word: \"human rights violation\", translation: \"violation des droits de l'homme\", example: \"The report documented numerous human rights violations in the region.\" },\n    \n    \n    { word: \"humanitarian crisis\", translation: \"crise humanitaire\", example: \"The conflict has triggered a humanitarian crisis affecting millions.\" },\n    \n    { word: \"infectious disease\", translation: \"maladie infectieuse\", example: \"Global travel facilitates the spread of infectious diseases across borders.\" },\n    \n    { word: \"nuclear proliferation\", translation: \"prolifération nucléaire\", example: \"The treaty aims to prevent nuclear proliferation through verification measures.\" },\n    { word: \"terrorism\", translation: \"terrorisme\", example: \"Countering terrorism requires international intelligence sharing and cooperation.\" },\n    \n    { word: \"cross-border crime\", translation: \"criminalité transfrontalière\", example: \"Cross-border crime includes human trafficking, drug smuggling, and money laundering.\" },\n    { word: \"economic inequality\", translation: \"inégalité économique\", example: \"Economic inequality has increased within many countries despite overall growth.\" },\n    \n    { word: \"disarmament\", translation: \"désarmement\", example: \"The disarmament negotiations aim to reduce conventional weapons stockpiles.\" },\n    { word: \"peace process\", translation: \"processus de paix\", example: \"The peace process involves multiple rounds of negotiations between conflict parties.\" },\n    \n    \n    \n    \n    { word: \"arms control\", translation: \"contrôle des armements\", example: \"Arms control agreements limit specific weapons technologies and quantities.\" },\n    \n    { word: \"population growth\", translation: \"croissance démographique\", example: \"Rapid population growth creates challenges for urban infrastructure and services.\" },\n    { word: \"border dispute\", translation: \"litige frontalier\", example: \"The longstanding border dispute occasionally flares into minor confrontations.\" },\n    \n    \n    \n    \n    \n    // Développement international et aide (38 mots)\n    { word: \"humanitarian aid\", translation: \"aide humanitaire\", example: \"Humanitarian aid was dispatched to the earthquake-affected regions.\" },\n    { word: \"development assistance\", translation: \"aide au développement\", example: \"Development assistance focuses on building long-term capacity rather than short-term relief.\" },\n    \n    { word: \"disaster relief\", translation: \"secours en cas de catastrophe\", example: \"International disaster relief arrived within days of the hurricane.\" },\n    { word: \"poverty alleviation\", translation: \"réduction de la pauvreté\", example: \"Microcredit programs contribute to poverty alleviation in rural communities.\" },\n    { word: \"capacity building\", translation: \"renforcement des capacités\", example: \"The program focuses on capacity building for local government officials.\" },\n    { word: \"developing country\", translation: \"pays en développement\", example: \"The initiative provides technological support to developing countries.\" },\n    { word: \"developed nation\", translation: \"pays développé\", example: \"Developed nations pledged climate finance for vulnerable countries.\" },\n    { word: \"emerging economy\", translation: \"économie émergente\", example: \"The emerging economy has seen rapid growth in the technology sector.\" },\n    { word: \"least developed country\", translation: \"pays les moins avancés\", example: \"Special trade provisions apply to least developed countries under the agreement.\" },\n    { word: \"technical assistance\", translation: \"assistance technique\", example: \"The organization provides technical assistance in water management practices.\" },\n    { word: \"developmental goal\", translation: \"objectif de développement\", example: \"Universal education remains a key developmental goal worldwide.\" },\n    \n    { word: \"sustainable growth\", translation: \"croissance durable\", example: \"The policy promotes sustainable growth through green technology incentives.\" },\n    { word: \"donor country\", translation: \"pays donateur\", example: \"The donor country attached conditions to its financial assistance package.\" },\n    { word: \"recipient nation\", translation: \"pays bénéficiaire\", example: \"The recipient nation implemented transparency measures for aid management.\" },\n    { word: \"aid effectiveness\", translation: \"efficacité de l'aide\", example: \"Research examines factors influencing aid effectiveness across contexts.\" },\n    \n    \n    { word: \"debt relief\", translation: \"allègement de la dette\", example: \"Debt relief enabled the country to increase education spending.\" },\n    { word: \"financial assistance\", translation: \"assistance financière\", example: \"Financial assistance was conditional on governance reforms.\" },\n    \n    { word: \"rural development\", translation: \"développement rural\", example: \"The program supports rural development through agricultural modernization.\" },\n    \n    { word: \"infrastructure development\", translation: \"développement des infrastructures\", example: \"Infrastructure development focuses on renewable energy and digital connectivity.\" },\n    \n    { word: \"education access\", translation: \"accès à l'éducation\", example: \"Improving education access for girls remains a priority initiative.\" },\n    { word: \"literacy program\", translation: \"programme d'alphabétisation\", example: \"The literacy program targets adult learners in underserved communities.\" },\n    { word: \"vaccination campaign\", translation: \"campagne de vaccination\", example: \"The global vaccination campaign aims to eradicate the disease.\" },\n    { word: \"maternal health\", translation: \"santé maternelle\", example: \"Improving maternal health reduces preventable mortality in developing regions.\" },\n    { word: \"child mortality\", translation: \"mortalité infantile\", example: \"Child mortality rates have declined significantly following the intervention.\" },\n    \n    { word: \"grassroots organization\", translation: \"organisation locale\", example: \"The grassroots organization mobilizes residents for neighborhood improvement initiatives.\" },\n    { word: \"microfinance\", translation: \"microfinance\", example: \"Microfinance provides small business loans to entrepreneurs without access to traditional banking.\" },\n    { word: \"social enterprise\", translation: \"entreprise sociale\", example: \"The social enterprise creates employment while addressing environmental challenges.\" },\n    { word: \"sustainable livelihood\", translation: \"moyens de subsistance durables\", example: \"Training programs promote sustainable livelihoods through diversified income sources.\" },\n    \n    { word: \"knowledge sharing\", translation: \"partage des connaissances\", example: \"The platform facilitates knowledge sharing between practitioners worldwide.\" }\n// 30 mots à ajouter dans 16_enjeux_mondiaux_et_cooperation_internationale.js\n// Pour passer de 64 à 94 mots\n\n// Commerce international et économie mondiale (10 mots)\n{ word: \"global trade\", translation: \"commerce mondial\", example: \"Global trade policies affect economic development in emerging markets.\" },\n{ word: \"free trade agreement\", translation: \"accord de libre-échange\", example: \"The free trade agreement eliminated tariffs between member countries.\" },\n{ word: \"trade barrier\", translation: \"barrière commerciale\", example: \"Trade barriers can protect domestic industries but may increase consumer prices.\" },\n{ word: \"economic partnership\", translation: \"partenariat économique\", example: \"The economic partnership promotes investment and technology transfer.\" },\n{ word: \"global supply chain\", translation: \"chaîne d'approvisionnement mondiale\", example: \"The pandemic disrupted global supply chains across multiple industries.\" },\n{ word: \"economic integration\", translation: \"intégration économique\", example: \"Economic integration requires harmonization of regulations and standards.\" },\n{ word: \"foreign investment\", translation: \"investissement étranger\", example: \"Foreign investment can stimulate economic growth but may create dependencies.\" },\n{ word: \"currency exchange\", translation: \"change de devises\", example: \"Currency exchange rates affect international trade competitiveness.\" },\n{ word: \"financial markets\", translation: \"marchés financiers\", example: \"Global financial markets are increasingly interconnected and volatile.\" },\n{ word: \"economic sanctions\", translation: \"sanctions économiques\", example: \"Economic sanctions aim to change behavior through financial pressure.\" },\n\n// Migration et mouvement de populations (10 mots)\n{ word: \"migration flow\", translation: \"flux migratoire\", example: \"Climate change is expected to increase migration flows from vulnerable regions.\" },\n{ word: \"asylum seeker\", translation: \"demandeur d'asile\", example: \"Asylum seekers require legal protection while their cases are processed.\" },\n{ word: \"internally displaced person\", translation: \"personne déplacée à l'intérieur du pays\", example: \"Internally displaced persons often face similar challenges to refugees.\" },\n{ word: \"brain drain\", translation: \"fuite des cerveaux\", example: \"Brain drain affects developing countries when skilled workers emigrate.\" },\n{ word: \"remittances\", translation: \"envois de fonds\", example: \"Remittances from migrant workers support families and local economies.\" },\n{ word: \"integration policy\", translation: \"politique d'intégration\", example: \"Effective integration policies help migrants contribute to host societies.\" },\n{ word: \"stateless person\", translation: \"apatride\", example: \"Stateless persons lack citizenship protection and face legal difficulties.\" },\n{ word: \"human trafficking\", translation: \"traite des êtres humains\", example: \"International cooperation is essential to combat human trafficking.\" },\n{ word: \"border control\", translation: \"contrôle frontalier\", example: \"Border control must balance security concerns with humanitarian obligations.\" },\n{ word: \"resettlement program\", translation: \"programme de réinstallation\", example: \"The resettlement program helps refugees rebuild their lives in host countries.\" },\n\n// Défis technologiques et gouvernance globale (10 mots)\n{ word: \"digital divide\", translation: \"fracture numérique\", example: \"The digital divide limits access to online education and services.\" },\n{ word: \"cyber warfare\", translation: \"cyberguerre\", example: \"Cyber warfare poses new challenges to international security frameworks.\" },\n{ word: \"data governance\", translation: \"gouvernance des données\", example: \"International data governance requires balancing privacy with innovation.\" },\n{ word: \"technology transfer\", translation: \"transfert de technologie\", example: \"Technology transfer programs help developing countries access modern innovations.\" },\n{ word: \"global governance\", translation: \"gouvernance mondiale\", example: \"Global governance institutions struggle to adapt to rapid technological change.\" },\n{ word: \"international law\", translation: \"droit international\", example: \"International law provides frameworks for resolving cross-border disputes.\" },\n{ word: \"treaty negotiation\", translation: \"négociation de traité\", example: \"Treaty negotiations often require years of diplomatic discussions.\" },\n{ word: \"compliance monitoring\", translation: \"suivi de la conformité\", example: \"Compliance monitoring ensures countries meet their international obligations.\" },\n{ word: \"multilateral institution\", translation: \"institution multilatérale\", example: \"Multilateral institutions coordinate responses to global challenges.\" },\n{ word: \"global citizenship\", translation: \"citoyenneté mondiale\", example: \"Education promotes global citizenship and cross-cultural understanding.\" }\n  ]\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T18-23-45.186Z\\B2_17_entrepreneuriat_et_economie_pratique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T18-23-45.186Z\\C1_03_economie_politique_et_systemes_mondiaux.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T18-23-45.186Z\\C1_08_technologies_emergentes_et_prospective.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T18-23-45.186Z\\C1_14_relations_internationales.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T18-23-45.186Z\\C2_01_finance_corporative.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T18-23-45.186Z\\C2_03_management_strategie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T18-23-45.186Z\\C2_07_droit_commercial_international.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T18-23-45.186Z\\C2_15_communication_interculturelle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T20-22-54.263Z\\A1_17_couleurs_et_formes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T20-22-54.263Z\\A2_01_identite_elargie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T20-22-54.263Z\\B1_02_relations_interpersonnelles.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T20-22-54.263Z\\B2_12_medias_avances_et_communication_de_masse.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T20-22-54.263Z\\B2_15_sciences_et_applications_technologiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T20-22-54.263Z\\B2_16_enjeux_mondiaux_et_cooperation_internationale.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token {","line":126,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const vocab = {\n  title: \"Enjeux Mondiaux et Coopération Internationale\",\n  words: [\n    // Organisations et structures internationales (38 mots)\n    \n    { word: \"United Nations\", translation: \"Nations Unies\", example: \"The United Nations General Assembly meets annually to discuss global challenges.\" },\n    \n    \n    \n    { word: \"bilateral agreement\", translation: \"accord bilatéral\", example: \"The bilateral agreement facilitated trade between the neighboring countries.\" },\n    { word: \"multilateral cooperation\", translation: \"coopération multilatérale\", example: \"Multilateral cooperation is essential to address transboundary environmental issues.\" },\n    \n    { word: \"diplomatic relations\", translation: \"relations diplomatiques\", example: \"The countries have maintained diplomatic relations for over fifty years.\" },\n    { word: \"peacekeeping mission\", translation: \"mission de maintien de la paix\", example: \"The peacekeeping mission helps stabilize the region following the conflict.\" },\n    \n    { word: \"human rights council\", translation: \"conseil des droits de l'homme\", example: \"The Human Rights Council investigated reports of abuses in the conflict zone.\" },\n    { word: \"diplomatic corps\", translation: \"corps diplomatique\", example: \"Members of the diplomatic corps attended the national day celebration.\" },\n    \n    \n    { word: \"sanctions\", translation: \"sanctions\", example: \"Economic sanctions were imposed following violations of the peace agreement.\" },\n    { word: \"ambassador\", translation: \"ambassadeur\", example: \"The newly appointed ambassador presented her credentials to the host government.\" },\n    { word: \"embassy\", translation: \"ambassade\", example: \"Citizens sought assistance at their embassy following the natural disaster.\" },\n    { word: \"consulate\", translation: \"consulat\", example: \"The consulate processed visa applications for travelers to the region.\" },\n    \n    { word: \"international community\", translation: \"communauté internationale\", example: \"The international community expressed concern about the deteriorating situation.\" },\n    \n    \n    \n    \n    \n    \n    { word: \"international aid\", translation: \"aide internationale\", example: \"International aid was mobilized following the devastating earthquake.\" },\n    \n    \n    { word: \"secretary-general\", translation: \"secrétaire général\", example: \"The Secretary-General urged member states to increase their climate commitments.\" },\n    { word: \"diplomatic channel\", translation: \"voie diplomatique\", example: \"The countries communicated through diplomatic channels to avoid public confrontation.\" },\n    { word: \"international waters\", translation: \"eaux internationales\", example: \"The incident occurred in international waters, complicating jurisdiction questions.\" },\n    { word: \"international alliance\", translation: \"alliance internationale\", example: \"The international alliance coordinated military operations against terrorist groups.\" },\n    \n    { word: \"diplomatic crisis\", translation: \"crise diplomatique\", example: \"The diplomatic crisis escalated after the expulsion of several ambassadors.\" },\n    \n    { word: \"sovereign state\", translation: \"État souverain\", example: \"As a sovereign state, the country determines its own domestic policies.\" },\n    \n    // Enjeux mondiaux (37 mots)\n    \n    \n    { word: \"greenhouse gas emissions\", translation: \"émissions de gaz à effet de serre\", example: \"The agreement commits countries to reducing greenhouse gas emissions significantly.\" },\n    \n    \n    { word: \"biodiversity loss\", translation: \"perte de biodiversité\", example: \"Habitat destruction accelerates biodiversity loss worldwide.\" },\n    \n    \n    { word: \"water scarcity\", translation: \"pénurie d'eau\", example: \"Water scarcity affects over two billion people globally.\" },\n    { word: \"refugee crisis\", translation: \"crise des réfugiés\", example: \"The refugee crisis requires coordinated international responses.\" },\n    { word: \"human rights violation\", translation: \"violation des droits de l'homme\", example: \"The report documented numerous human rights violations in the region.\" },\n    \n    \n    { word: \"humanitarian crisis\", translation: \"crise humanitaire\", example: \"The conflict has triggered a humanitarian crisis affecting millions.\" },\n    \n    { word: \"infectious disease\", translation: \"maladie infectieuse\", example: \"Global travel facilitates the spread of infectious diseases across borders.\" },\n    \n    { word: \"nuclear proliferation\", translation: \"prolifération nucléaire\", example: \"The treaty aims to prevent nuclear proliferation through verification measures.\" },\n    { word: \"terrorism\", translation: \"terrorisme\", example: \"Countering terrorism requires international intelligence sharing and cooperation.\" },\n    \n    { word: \"cross-border crime\", translation: \"criminalité transfrontalière\", example: \"Cross-border crime includes human trafficking, drug smuggling, and money laundering.\" },\n    { word: \"economic inequality\", translation: \"inégalité économique\", example: \"Economic inequality has increased within many countries despite overall growth.\" },\n    \n    { word: \"disarmament\", translation: \"désarmement\", example: \"The disarmament negotiations aim to reduce conventional weapons stockpiles.\" },\n    { word: \"peace process\", translation: \"processus de paix\", example: \"The peace process involves multiple rounds of negotiations between conflict parties.\" },\n    \n    \n    \n    \n    { word: \"arms control\", translation: \"contrôle des armements\", example: \"Arms control agreements limit specific weapons technologies and quantities.\" },\n    \n    { word: \"population growth\", translation: \"croissance démographique\", example: \"Rapid population growth creates challenges for urban infrastructure and services.\" },\n    { word: \"border dispute\", translation: \"litige frontalier\", example: \"The longstanding border dispute occasionally flares into minor confrontations.\" },\n    \n    \n    \n    \n    \n    // Développement international et aide (38 mots)\n    { word: \"humanitarian aid\", translation: \"aide humanitaire\", example: \"Humanitarian aid was dispatched to the earthquake-affected regions.\" },\n    { word: \"development assistance\", translation: \"aide au développement\", example: \"Development assistance focuses on building long-term capacity rather than short-term relief.\" },\n    \n    { word: \"disaster relief\", translation: \"secours en cas de catastrophe\", example: \"International disaster relief arrived within days of the hurricane.\" },\n    { word: \"poverty alleviation\", translation: \"réduction de la pauvreté\", example: \"Microcredit programs contribute to poverty alleviation in rural communities.\" },\n    { word: \"capacity building\", translation: \"renforcement des capacités\", example: \"The program focuses on capacity building for local government officials.\" },\n    { word: \"developing country\", translation: \"pays en développement\", example: \"The initiative provides technological support to developing countries.\" },\n    { word: \"developed nation\", translation: \"pays développé\", example: \"Developed nations pledged climate finance for vulnerable countries.\" },\n    { word: \"emerging economy\", translation: \"économie émergente\", example: \"The emerging economy has seen rapid growth in the technology sector.\" },\n    { word: \"least developed country\", translation: \"pays les moins avancés\", example: \"Special trade provisions apply to least developed countries under the agreement.\" },\n    { word: \"technical assistance\", translation: \"assistance technique\", example: \"The organization provides technical assistance in water management practices.\" },\n    { word: \"developmental goal\", translation: \"objectif de développement\", example: \"Universal education remains a key developmental goal worldwide.\" },\n    \n    { word: \"sustainable growth\", translation: \"croissance durable\", example: \"The policy promotes sustainable growth through green technology incentives.\" },\n    { word: \"donor country\", translation: \"pays donateur\", example: \"The donor country attached conditions to its financial assistance package.\" },\n    { word: \"recipient nation\", translation: \"pays bénéficiaire\", example: \"The recipient nation implemented transparency measures for aid management.\" },\n    { word: \"aid effectiveness\", translation: \"efficacité de l'aide\", example: \"Research examines factors influencing aid effectiveness across contexts.\" },\n    \n    \n    { word: \"debt relief\", translation: \"allègement de la dette\", example: \"Debt relief enabled the country to increase education spending.\" },\n    { word: \"financial assistance\", translation: \"assistance financière\", example: \"Financial assistance was conditional on governance reforms.\" },\n    \n    { word: \"rural development\", translation: \"développement rural\", example: \"The program supports rural development through agricultural modernization.\" },\n    \n    { word: \"infrastructure development\", translation: \"développement des infrastructures\", example: \"Infrastructure development focuses on renewable energy and digital connectivity.\" },\n    \n    { word: \"education access\", translation: \"accès à l'éducation\", example: \"Improving education access for girls remains a priority initiative.\" },\n    { word: \"literacy program\", translation: \"programme d'alphabétisation\", example: \"The literacy program targets adult learners in underserved communities.\" },\n    { word: \"vaccination campaign\", translation: \"campagne de vaccination\", example: \"The global vaccination campaign aims to eradicate the disease.\" },\n    { word: \"maternal health\", translation: \"santé maternelle\", example: \"Improving maternal health reduces preventable mortality in developing regions.\" },\n    { word: \"child mortality\", translation: \"mortalité infantile\", example: \"Child mortality rates have declined significantly following the intervention.\" },\n    \n    { word: \"grassroots organization\", translation: \"organisation locale\", example: \"The grassroots organization mobilizes residents for neighborhood improvement initiatives.\" },\n    { word: \"microfinance\", translation: \"microfinance\", example: \"Microfinance provides small business loans to entrepreneurs without access to traditional banking.\" },\n    { word: \"social enterprise\", translation: \"entreprise sociale\", example: \"The social enterprise creates employment while addressing environmental challenges.\" },\n    { word: \"sustainable livelihood\", translation: \"moyens de subsistance durables\", example: \"Training programs promote sustainable livelihoods through diversified income sources.\" },\n    \n    { word: \"knowledge sharing\", translation: \"partage des connaissances\", example: \"The platform facilitates knowledge sharing between practitioners worldwide.\" }\n// 30 mots à ajouter dans 16_enjeux_mondiaux_et_cooperation_internationale.js\n// Pour passer de 64 à 94 mots\n\n// Commerce international et économie mondiale (10 mots)\n{ word: \"global trade\", translation: \"commerce mondial\", example: \"Global trade policies affect economic development in emerging markets.\" },\n{ word: \"free trade agreement\", translation: \"accord de libre-échange\", example: \"The free trade agreement eliminated tariffs between member countries.\" },\n\n{ word: \"economic partnership\", translation: \"partenariat économique\", example: \"The economic partnership promotes investment and technology transfer.\" },\n{ word: \"global supply chain\", translation: \"chaîne d'approvisionnement mondiale\", example: \"The pandemic disrupted global supply chains across multiple industries.\" },\n\n{ word: \"foreign investment\", translation: \"investissement étranger\", example: \"Foreign investment can stimulate economic growth but may create dependencies.\" },\n\n{ word: \"financial markets\", translation: \"marchés financiers\", example: \"Global financial markets are increasingly interconnected and volatile.\" },\n{ word: \"economic sanctions\", translation: \"sanctions économiques\", example: \"Economic sanctions aim to change behavior through financial pressure.\" },\n\n// Migration et mouvement de populations (10 mots)\n\n{ word: \"asylum seeker\", translation: \"demandeur d'asile\", example: \"Asylum seekers require legal protection while their cases are processed.\" },\n{ word: \"internally displaced person\", translation: \"personne déplacée à l'intérieur du pays\", example: \"Internally displaced persons often face similar challenges to refugees.\" },\n\n{ word: \"remittances\", translation: \"envois de fonds\", example: \"Remittances from migrant workers support families and local economies.\" },\n{ word: \"integration policy\", translation: \"politique d'intégration\", example: \"Effective integration policies help migrants contribute to host societies.\" },\n{ word: \"stateless person\", translation: \"apatride\", example: \"Stateless persons lack citizenship protection and face legal difficulties.\" },\n\n{ word: \"border control\", translation: \"contrôle frontalier\", example: \"Border control must balance security concerns with humanitarian obligations.\" },\n{ word: \"resettlement program\", translation: \"programme de réinstallation\", example: \"The resettlement program helps refugees rebuild their lives in host countries.\" },\n\n// Défis technologiques et gouvernance globale (10 mots)\n\n{ word: \"cyber warfare\", translation: \"cyberguerre\", example: \"Cyber warfare poses new challenges to international security frameworks.\" },\n\n{ word: \"technology transfer\", translation: \"transfert de technologie\", example: \"Technology transfer programs help developing countries access modern innovations.\" },\n\n\n{ word: \"treaty negotiation\", translation: \"négociation de traité\", example: \"Treaty negotiations often require years of diplomatic discussions.\" },\n{ word: \"compliance monitoring\", translation: \"suivi de la conformité\", example: \"Compliance monitoring ensures countries meet their international obligations.\" },\n{ word: \"multilateral institution\", translation: \"institution multilatérale\", example: \"Multilateral institutions coordinate responses to global challenges.\" },\n{ word: \"global citizenship\", translation: \"citoyenneté mondiale\", example: \"Education promotes global citizenship and cross-cultural understanding.\" }\n  ]\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T20-22-54.263Z\\C1_05_recherche_scientifique_et_methodologie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T20-22-54.263Z\\C1_12_medias_internationaux_et_communication_globale.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\backup\\backup_2025-05-28T20-22-54.263Z\\C2_11_arts_visuels.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\batch-word-checker.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'fs' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":9,"suggestions":[{"messageId":"removeVar","data":{"varName":"fs"},"fix":{"range":[0,25],"text":""},"desc":"Remove unused variable 'fs'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'path' is assigned a value but never used.","line":2,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":11,"suggestions":[{"messageId":"removeVar","data":{"varName":"path"},"fix":{"range":[26,55],"text":""},"desc":"Remove unused variable 'path'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs');\nconst path = require('path');\nconst { checkWordExists } = require('./vocabulary_manager'); // Importe la fonction de vérification\n\n// Mots à vérifier\n// Script de test pour entrepreneuriat (+30 mots)\nconst wordsToCheck = [\n  // Financement et investissement (10 mots)\n  { word: \"seed funding\", translation: \"financement d'amorçage\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"The startup raised seed funding to develop their prototype.\" },\n  { word: \"venture capital\", translation: \"capital-risque\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Venture capital firms invest in high-growth potential startups.\" },\n  { word: \"equity stake\", translation: \"participation au capital\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Investors received a 20% equity stake in exchange for funding.\" },\n  { word: \"bootstrapping\", translation: \"autofinancement\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"She grew her business through bootstrapping without external investment.\" },\n  { word: \"crowdfunding\", translation: \"financement participatif\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"The crowdfunding campaign exceeded its target by 200%.\" },\n  { word: \"due diligence\", translation: \"vérification préalable\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Investors conduct due diligence before making investment decisions.\" },\n  { word: \"valuation\", translation: \"évaluation\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"The company's valuation doubled after the successful product launch.\" },\n  { word: \"burn rate\", translation: \"taux de combustion\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Managing burn rate is crucial for startup survival.\" },\n  { word: \"runway\", translation: \"trésorerie disponible\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"With current burn rate, they have 18 months of runway remaining.\" },\n  { word: \"exit strategy\", translation: \"stratégie de sortie\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"The founders developed an exit strategy for potential acquisition.\" },\n\n  // Opérations et développement (10 mots)\n  { word: \"minimum viable product\", translation: \"produit minimum viable\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"They launched with a minimum viable product to test market response.\" },\n  { word: \"scalability\", translation: \"évolutivité\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"The platform's scalability allows for rapid user growth.\" },\n  { word: \"pivot\", translation: \"pivot\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"The startup decided to pivot after initial market feedback.\" },\n  { word: \"market validation\", translation: \"validation du marché\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Market validation confirmed demand for their solution.\" },\n  { word: \"competitive advantage\", translation: \"avantage concurrentiel\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Their patented technology provides a strong competitive advantage.\" },\n  { word: \"intellectual property\", translation: \"propriété intellectuelle\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Protecting intellectual property is crucial for tech startups.\" },\n  { word: \"disruptive innovation\", translation: \"innovation de rupture\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Their disruptive innovation transformed the entire industry.\" },\n  { word: \"agile methodology\", translation: \"méthodologie agile\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"The team uses agile methodology for rapid product development.\" },\n  { word: \"business incubator\", translation: \"incubateur d'entreprises\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Business incubators provide resources and mentorship to startups.\" },\n  { word: \"accelerator program\", translation: \"programme d'accélération\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"The accelerator program helped them scale rapidly.\" },\n\n  // Économie numérique (10 mots)\n  { word: \"digital transformation\", translation: \"transformation numérique\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Digital transformation is essential for modern business success.\" },\n  { word: \"e-commerce platform\", translation: \"plateforme de commerce électronique\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Their e-commerce platform processes thousands of orders daily.\" },\n  { word: \"subscription model\", translation: \"modèle d'abonnement\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"The subscription model provides predictable recurring revenue.\" },\n  { word: \"customer acquisition cost\", translation: \"coût d'acquisition client\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Reducing customer acquisition cost improved overall profitability.\" },\n  { word: \"lifetime value\", translation: \"valeur vie client\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"High customer lifetime value justifies premium acquisition spending.\" },\n  { word: \"churn rate\", translation: \"taux d'attrition\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Low churn rate indicates strong customer satisfaction.\" },\n  { word: \"growth hacking\", translation: \"piratage de croissance\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Growth hacking techniques drove viral user adoption.\" },\n  { word: \"conversion rate\", translation: \"taux de conversion\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Optimizing the checkout process improved conversion rates.\" },\n  { word: \"api integration\", translation: \"intégration d'API\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"API integration enables seamless third-party service connections.\" },\n  { word: \"data analytics\", translation: \"analyse de données\", category: \"17_entrepreneuriat_et_economie_pratique\", example: \"Data analytics reveals insights about customer behavior patterns.\" }\n];\n\n// Fonction principale pour vérifier tous les mots\nasync function batchCheckWords() {\n  console.log('='.repeat(80));\n  console.log('VÉRIFICATION EN LOT DE MOTS');\n  console.log('='.repeat(80));\n  \n  const safeToAdd = [];\n  const alreadyExists = [];\n  \n  // Vérifier chaque mot\n  for (const wordInfo of wordsToCheck) {\n    try {\n      // Utilise la fonction check du vocabulary_manager\n      console.log(`\\nVérification de \"${wordInfo.word}\"...`);\n      const result = await checkWordExists(wordInfo.word);\n      \n      if (result.exists) {\n        // Le mot existe déjà\n        alreadyExists.push({\n          ...wordInfo,\n          locations: result.occurrences.map(occ => `${occ.level}/${occ.category}`)\n        });\n      } else {\n        // Le mot n'existe pas encore et peut être ajouté\n        safeToAdd.push(wordInfo);\n      }\n    } catch (error) {\n      console.error(`Erreur lors de la vérification de \"${wordInfo.word}\":`, error);\n    }\n  }\n  \n  // Afficher le récapitulatif\n  console.log('\\n='.repeat(80));\n  console.log('RÉCAPITULATIF');\n  console.log('='.repeat(80));\n  \n  console.log(`\\nMots qui peuvent être ajoutés en toute sécurité (${safeToAdd.length}):`);\n  console.log('-'.repeat(80));\n  \n  if (safeToAdd.length > 0) {\n    safeToAdd.forEach(word => {\n      console.log(`- \"${word.word}\" (${word.translation}) → ${word.category}`);\n    });\n    \n    console.log('\\nCommandes pour ajouter ces mots:');\n    console.log('-'.repeat(80));\n    \n    safeToAdd.forEach(word => {\n      console.log(`node vocabulary_manager.js add \"${word.word}\" \"${word.translation}\" A1 ${word.category} \"${word.example}\"`);\n    });\n  } else {\n    console.log(\"Aucun mot ne peut être ajouté en toute sécurité.\");\n  }\n  \n  if (alreadyExists.length > 0) {\n    console.log(`\\nMots qui existent déjà (${alreadyExists.length}):`);\n    console.log('-'.repeat(80));\n    \n    alreadyExists.forEach(word => {\n      console.log(`- \"${word.word}\" existe déjà dans: ${word.locations.join(', ')}`);\n    });\n  } else {\n    console.log(\"\\nAucun mot n'existe déjà.\");\n  }\n  \n  return {\n    safeToAdd,\n    alreadyExists\n  };\n}\n\n// Exécuter le script si appelé directement\nif (require.main === module) {\n  batchCheckWords().catch(error => {\n    console.error('Erreur:', error);\n  });\n}\n\nmodule.exports = {\n  batchCheckWords\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\e2e\\jest.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\e2e\\starter.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":1,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'beforeAll' is not defined.","line":2,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'device' is not defined.","line":3,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":17},{"ruleId":"no-undef","severity":2,"message":"'beforeEach' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'device' is not defined.","line":7,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":17},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":10,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":17},{"ruleId":"no-undef","severity":2,"message":"'element' is not defined.","line":11,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'by' is not defined.","line":11,"column":26,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'element' is not defined.","line":15,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":18},{"ruleId":"no-undef","severity":2,"message":"'by' is not defined.","line":15,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":21},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":16,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":17},{"ruleId":"no-undef","severity":2,"message":"'element' is not defined.","line":16,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'by' is not defined.","line":16,"column":26,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":19,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'element' is not defined.","line":20,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":18},{"ruleId":"no-undef","severity":2,"message":"'by' is not defined.","line":20,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":21},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":21,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":17},{"ruleId":"no-undef","severity":2,"message":"'element' is not defined.","line":21,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'by' is not defined.","line":21,"column":26,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":28}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"describe('Example', () => {\n  beforeAll(async () => {\n    await device.launchApp();\n  });\n\n  beforeEach(async () => {\n    await device.reloadReactNative();\n  });\n\n  it('should have welcome screen', async () => {\n    await expect(element(by.id('welcome'))).toBeVisible();\n  });\n\n  it('should show hello screen after tap', async () => {\n    await element(by.id('hello_button')).tap();\n    await expect(element(by.text('Hello!!!'))).toBeVisible();\n  });\n\n  it('should show world screen after tap', async () => {\n    await element(by.id('world_button')).tap();\n    await expect(element(by.text('World!!!'))).toBeVisible();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\expo-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\jestSetup.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":2,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is assigned a value but never used.","line":7,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[374,416],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'target' is defined but never used.","line":9,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"target"},"fix":{"range":[452,459],"text":""},"desc":"Remove unused variable 'target'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'prop' is defined but never used.","line":9,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"prop"},"fix":{"range":[458,464],"text":""},"desc":"Remove unused variable 'prop'."}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Mock AsyncStorage pour Jest (corrige l'erreur NativeModule: AsyncStorage is null)\njest.mock('@react-native-async-storage/async-storage', () =>\n  require('@react-native-async-storage/async-storage/jest/async-storage-mock')\n);\n// Mock global pour @expo/vector-icons afin d'éviter les erreurs liées à expo-font dans les tests Jest.\njest.mock('@expo/vector-icons', () => {\n  const View = require('react-native').View;\n  return new Proxy({}, {\n    get: (target, prop) => () => <View />\n  });\n});\n// Polyfill pour setImmediate (problème courant avec Jest + React Native)\nif (typeof setImmediate === 'undefined') {\n  global.setImmediate = (fn, ...args) => setTimeout(fn, 0, ...args);\n}\nif (typeof clearImmediate === 'undefined') {\n  global.clearImmediate = (id) => clearTimeout(id);\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\scripts\\remove-unused-vars.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\scripts\\reset-project.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\CategorySelector\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[68,74],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'useRef' is defined but never used.","line":2,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"useRef"},"fix":{"range":[85,93],"text":""},"desc":"Remove unused variable 'useRef'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[120,125],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[124,136],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":28,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":44,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[136,154],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":46,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":50,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[154,160],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[195,249],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'index' is defined but never used.","line":53,"column":41,"nodeType":"Identifier","messageId":"unusedVar","endLine":53,"endColumn":46,"suggestions":[{"messageId":"removeVar","data":{"varName":"index"},"fix":{"range":[1641,1648],"text":""},"desc":"Remove unused variable 'index'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/exercise-common/CategorySelector/index.js\r\nimport React, { useState, useRef } from \"react\";\r\nimport { View, ScrollView, TouchableOpacity, Text, Animated } from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * 🏆 CategorySelector - Design Niveau LDC (Paris Saint-Germain)\r\n * - Pills modernes avec glassmorphism\r\n * - Animations fluides de sélection\r\n * - Gradients dynamiques\r\n * - Micro-interactions premium\r\n * - Typography élégante\r\n */\r\nconst CategorySelector = ({\r\n  categories = [],\r\n  selectedCategory,\r\n  onSelectCategory,\r\n  primaryColor = \"#5E60CE\",\r\n}) => {\r\n  const styles = createStyles(primaryColor);\r\n  const [animations] = useState(() => \r\n    categories.reduce((acc, category) => {\r\n      acc[category.id] = new Animated.Value(selectedCategory === category.id ? 1 : 0);\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  // Animation de sélection\r\n  const animateSelection = (categoryId) => {\r\n    // Animer la désélection de l'ancienne catégorie\r\n    if (selectedCategory !== undefined && animations[selectedCategory]) {\r\n      Animated.timing(animations[selectedCategory], {\r\n        toValue: 0,\r\n        duration: 200,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    }\r\n\r\n    // Animer la sélection de la nouvelle catégorie\r\n    if (animations[categoryId]) {\r\n      Animated.timing(animations[categoryId], {\r\n        toValue: 1,\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    }\r\n\r\n    onSelectCategory(categoryId);\r\n  };\r\n\r\n  // Rendu d'une pill de catégorie\r\n  const renderCategoryPill = (category, index) => {\r\n    const isSelected = selectedCategory === category.id;\r\n    const animation = animations[category.id] || new Animated.Value(0);\r\n\r\n    // Interpolations pour les animations\r\n    const scale = animation.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [1, 1.05],\r\n    });\r\n\r\n    const shadowOpacity = animation.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0.1, 0.25],\r\n    });\r\n\r\n    const borderWidth = animation.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [1, 2],\r\n    });\r\n\r\n    return (\r\n      <Animated.View\r\n        key={category.id}\r\n        style={[\r\n          styles.categoryItemWrapper,\r\n          {\r\n            transform: [{ scale }],\r\n          }\r\n        ]}\r\n      >\r\n        <TouchableOpacity\r\n          style={styles.categoryTouchable}\r\n          onPress={() => animateSelection(category.id)}\r\n          activeOpacity={0.8}\r\n        >\r\n          {isSelected ? (\r\n            // État sélectionné - Gradient premium\r\n            <LinearGradient\r\n              colors={[primaryColor, `${primaryColor}E6`, `${primaryColor}CC`]}\r\n              start={{ x: 0, y: 0 }}\r\n              end={{ x: 1, y: 1 }}\r\n              style={styles.selectedCategoryItem}\r\n            >\r\n              {/* Effet glassmorphism sur la pill sélectionnée */}\r\n              <View style={styles.selectedInner}>\r\n                <Text style={styles.selectedCategoryText}>\r\n                  {category.name}\r\n                </Text>\r\n                {/* Effet sparkle pour la sélection */}\r\n                <View style={styles.sparkleContainer}>\r\n                  <Text style={styles.sparkle}>✨</Text>\r\n                </View>\r\n              </View>\r\n            </LinearGradient>\r\n          ) : (\r\n            // État non sélectionné - Glassmorphism subtil\r\n            <Animated.View\r\n              style={[\r\n                styles.categoryItem,\r\n                {\r\n                  borderWidth,\r\n                  borderColor: `${primaryColor}20`,\r\n                  shadowOpacity,\r\n                }\r\n              ]}\r\n            >\r\n              <View style={[styles.categoryInner, { backgroundColor: `${primaryColor}08` }]}>\r\n                <Text style={[styles.categoryText, { color: primaryColor }]}>\r\n                  {category.name}\r\n                </Text>\r\n              </View>\r\n            </Animated.View>\r\n          )}\r\n        </TouchableOpacity>\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* 🎨 Gradient de fond subtil */}\r\n      <LinearGradient\r\n        colors={[`${primaryColor}04`, 'transparent', `${primaryColor}02`]}\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1, y: 0 }}\r\n        style={styles.backgroundGradient}\r\n      >\r\n        <ScrollView\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={styles.scrollContent}\r\n          style={styles.scrollView}\r\n        >\r\n          {categories.map((category, index) => renderCategoryPill(category, index))}\r\n        </ScrollView>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CategorySelector;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\CategorySelector\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseCard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[63,74],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[92,97],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[96,102],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[102,120],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[144,190],"text":""},"desc":"Remove unused variable 'Ionicons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/exercise-common/ExerciseCard/index.js\nimport React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport styles from \"./style\";\n\n/**\n * Carte représentant un type d'exercice dans la sélection des exercices\n */\nconst ExerciseCard = ({\n  title,\n  description,\n  icon,\n  progress,\n  color = \"#5E60CE\",\n  onPress,\n  isNew = false,\n}) => {\n  return (\n    <TouchableOpacity\n      style={[styles.card, { borderLeftColor: color, borderLeftWidth: 4 }]}\n      onPress={onPress}\n    >\n      <View style={styles.topSection}>\n        <View style={[styles.iconContainer, { backgroundColor: `${color}15` }]}>\n          <Text style={styles.icon}>{icon}</Text>\n        </View>\n\n        <View style={styles.infoContainer}>\n          <Text style={styles.title}>{title}</Text>\n          <Text style={styles.description}>{description}</Text>\n        </View>\n      </View>\n\n      {progress > 0 ? (\n        <View style={styles.progressSection}>\n          <View style={styles.progressContainer}>\n            <View style={styles.progressBar}>\n              <View\n                style={[\n                  styles.progressFill,\n                  { width: `${progress}%`, backgroundColor: color },\n                ]}\n              />\n            </View>\n            <Text style={[styles.progressText, { color }]}>{progress}%</Text>\n          </View>\n        </View>\n      ) : isNew ? (\n        <View style={styles.badgeContainer}>\n          <View style={[styles.badge, { backgroundColor: `${color}15` }]}>\n            <Text style={[styles.badgeText, { color }]}>Nouveau</Text>\n          </View>\n        </View>\n      ) : null}\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          style={[styles.startButton, { backgroundColor: color }]}\n          onPress={onPress}\n        >\n          <Text style={styles.buttonText}>Commencer</Text>\n        </TouchableOpacity>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default ExerciseCard;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseCard\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseFeedback\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[96,101],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[100,106],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[106,124],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[158,204],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook React.useEffect has missing dependencies: 'autoHide', 'autoHideDuration', 'fadeAnim', and 'onDismiss'. Either include them or remove the dependency array. If 'onDismiss' changes too often, find the parent component that defines it and wrap that definition in useCallback.","line":46,"column":6,"nodeType":"ArrayExpression","endLine":46,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [autoHide, autoHideDuration, fadeAnim, onDismiss]","fix":{"range":[1200,1202],"text":"[autoHide, autoHideDuration, fadeAnim, onDismiss]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/exercise-common/ExerciseFeedback/index.js\nimport React from \"react\";\nimport { View, Text, TouchableOpacity, Animated } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport styles from \"./style\";\n\n/**\n * Composant pour afficher un feedback après une réponse\n * (correct, incorrect ou information supplémentaire)\n */\nconst ExerciseFeedback = ({\n  type = \"success\", // 'success', 'error', 'info'\n  message,\n  explanation,\n  onDismiss,\n  autoHide = false,\n  autoHideDuration = 3000,\n  showDismissButton = true,\n}) => {\n  const fadeAnim = React.useRef(new Animated.Value(0)).current;\n\n  React.useEffect(() => {\n    // Animation d'entrée\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 300,\n      useNativeDriver: true,\n    }).start();\n\n    // Auto-masquage si activé\n    if (autoHide) {\n      const timer = setTimeout(() => {\n        Animated.timing(fadeAnim, {\n          toValue: 0,\n          duration: 300,\n          useNativeDriver: true,\n        }).start(({ finished }) => {\n          if (finished && onDismiss) {\n            onDismiss();\n          }\n        });\n      }, autoHideDuration);\n\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  // Définir les couleurs et icônes en fonction du type\n  const getTypeStyles = () => {\n    switch (type) {\n      case \"success\":\n        return {\n          containerStyle: styles.successContainer,\n          icon: \"checkmark-circle\",\n          iconColor: \"#10B981\",\n        };\n      case \"error\":\n        return {\n          containerStyle: styles.errorContainer,\n          icon: \"close-circle\",\n          iconColor: \"#EF4444\",\n        };\n      case \"info\":\n      default:\n        return {\n          containerStyle: styles.infoContainer,\n          icon: \"information-circle\",\n          iconColor: \"#3B82F6\",\n        };\n    }\n  };\n\n  const { containerStyle, icon, iconColor } = getTypeStyles();\n\n  // Handler pour fermer le feedback\n  const handleDismiss = () => {\n    if (process.env.NODE_ENV === 'test') {\n      if (onDismiss) onDismiss();\n      return;\n    }\n    Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 300,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished && onDismiss) {\n        onDismiss();\n      }\n    });\n  };\n\n  return (\n    <Animated.View\n      style={[styles.container, containerStyle, { opacity: fadeAnim }]}\n    >\n      <View style={styles.content}>\n        <View style={styles.iconContainer}>\n          <Ionicons name={icon} size={24} color={iconColor} />\n        </View>\n\n        <View style={styles.textContainer}>\n          <Text style={styles.message}>{message}</Text>\n          {explanation ? (\n            <Text style={styles.explanation}>{explanation}</Text>\n          ) : null}\n        </View>\n\n        {showDismissButton && (\n          <TouchableOpacity\n            style={styles.dismissButton}\n            onPress={handleDismiss}\n            hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n            accessibilityRole=\"button\"\n          >\n            <Ionicons name=\"close\" size={20} color=\"#9CA3AF\" />\n          </TouchableOpacity>\n        )}\n      </View>\n    </Animated.View>\n  );\n};\n\nexport default ExerciseFeedback;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseFeedback\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseFooter\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[65,76],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[94,99],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[98,104],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[104,122],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[146,192],"text":""},"desc":"Remove unused variable 'Ionicons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/exercise-common/ExerciseFooter/index.js\nimport React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport styles from './style';\n\n/**\n * Pied de page standardisé pour tous les écrans d'exercices \n * avec boutons de navigation et validation\n */\nconst ExerciseFooter = ({\n  primaryLabel = 'Continuer',\n  secondaryLabel = 'Précédent',\n  onPrimaryPress,\n  onSecondaryPress,\n  showSecondary = true,\n  showCheck = false,\n  isDisabled = false,\n  color = '#5E60CE',\n  isLastQuestion = false,\n  hideSkip = false,\n  onSkip,\n  skipLabel = 'Passer'\n}) => {\n  // Ajustement du label pour le dernier exercice\n  const finalPrimaryLabel = isLastQuestion ? 'Terminer' : primaryLabel;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.buttonRow}>\n        {showSecondary ? (\n          <TouchableOpacity\n            style={styles.secondaryButton}\n            onPress={onSecondaryPress}\n          >\n            <Ionicons name=\"chevron-back\" size={20} color=\"#6B7280\" />\n            <Text style={styles.secondaryButtonText}>{secondaryLabel}</Text>\n          </TouchableOpacity>\n        ) : (\n          <View style={{ flex: 1 }} />\n        )}\n\n        {!hideSkip && onSkip && (\n          <TouchableOpacity \n            style={styles.skipButton} \n            onPress={onSkip}\n          >\n            <Text style={styles.skipText}>{skipLabel}</Text>\n          </TouchableOpacity>\n        )}\n\n        <TouchableOpacity\n          style={[\n            styles.primaryButton,\n            { backgroundColor: color },\n            isDisabled && styles.disabledButton\n          ]}\n          onPress={onPrimaryPress}\n          disabled={isDisabled}\n        >\n          <Text style={styles.primaryButtonText}>{finalPrimaryLabel}</Text>\n          {showCheck ? (\n            <Ionicons name=\"checkmark\" size={20} color=\"white\" />\n          ) : (\n            <Ionicons name=\"chevron-forward\" size={20} color=\"white\" />\n          )}\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default ExerciseFooter;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseFooter\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[88,99],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[117,122],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[121,127],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[127,145],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[169,215],"text":""},"desc":"Remove unused variable 'Ionicons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// components/exercise-common/ExerciseHeader/index.js - VERSION HUMAINE & ÉPURÉE\nimport React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { EXERCISE_TYPES, LANGUAGE_LEVELS } from \"../../../utils/constants\";\nimport styles from \"./style\";\n\n/**\n * 🕊️ ExerciseHeader - Version Humaine & Épurée\n * - Design \"invisible\" qui met en avant le contenu\n * - Blanc pur universel\n * - Simplicité et fonctionnalité\n * - Zéro superflu, zéro bling-bling\n * - Élégance dans la sobriété\n */\nconst ExerciseHeader = ({\n  title,\n  level,\n  exerciseType = \"vocabulary\",\n  onClose,\n  backIcon = \"arrow-back\",\n}) => {\n  const navigation = useNavigation();\n\n  // Récupérer les infos de l'exercice (seule la couleur nous intéresse)\n  const exerciseInfo = EXERCISE_TYPES[exerciseType] || EXERCISE_TYPES.vocabulary;\n  const exerciseColor = exerciseInfo.color;\n  const exerciseIcon = exerciseInfo.icon;\n\n  // Récupérer la couleur du niveau\n  const levelInfo = LANGUAGE_LEVELS[level] || LANGUAGE_LEVELS[\"1\"];\n  const levelColor = levelInfo.color;\n\n  // Affichage du niveau\n  const displayLevel = level === \"bonus\" ? \"B\" : level;\n\n  const handleClose = () => {\n    if (onClose) {\n      onClose();\n    } else {\n      navigation.goBack();\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.content}>\n        {/* =================== SECTION GAUCHE =================== */}\n        <View style={styles.leftSection}>\n          {/* Bouton retour - ultra-simple */}\n          <TouchableOpacity\n            style={styles.backButton}\n            onPress={handleClose}\n            hitSlop={{ top: 12, bottom: 12, left: 12, right: 12 }}\n            activeOpacity={0.6}\n          accessibilityRole=\"button\"\n          >\n            <Ionicons name={backIcon} size={22} color=\"#64748b\" />\n          </TouchableOpacity>\n\n          {/* Titre avec icône - design épuré */}\n          <View style={styles.titleSection}>\n            {/* Icône d'exercice simple */}\n            <Text style={styles.exerciseIcon}>{exerciseIcon}</Text>\n            \n            {/* Titre épuré */}\n            <Text style={[styles.title, { color: exerciseColor }]}>\n              {title}\n            </Text>\n          </View>\n        </View>\n\n        {/* =================== BADGE NIVEAU - Minimal =================== */}\n        <View style={[styles.levelBadge, { backgroundColor: levelColor }]}>\n          <Text style={styles.levelText}>{displayLevel}</Text>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default ExerciseHeader;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseHeader\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\InstructionBox\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[65,71],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[108,113],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[112,118],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[118,136],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[170,216],"text":""},"desc":"Remove unused variable 'Ionicons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/exercise-common/InstructionBox/index.js\nimport React, { useState } from \"react\";\nimport { View, Text, TouchableOpacity, Animated } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport styles from \"./style\";\n\n/**\n * Boîte d'instructions pour les exercices avec possibilité\n * de les minimiser/maximiser\n */\nconst InstructionBox = ({\n  title = \"Instructions\",\n  instructions,\n  examples = [],\n  tips = [],\n  initiallyExpanded = true,\n  variant = \"standard\", // 'standard', 'compact', 'highlighted'\n  primaryColor = \"#5E60CE\",\n}) => {\n  // États\n  const [expanded, setExpanded] = useState(initiallyExpanded);\n\n  // Animation pour la hauteur (expansion/contraction)\n  const [animation] = useState(new Animated.Value(initiallyExpanded ? 1 : 0));\n\n  // Toggle l'expansion\n  const toggleExpanded = () => {\n    const toValue = expanded ? 0 : 1;\n\n    Animated.timing(animation, {\n      toValue,\n      duration: 300,\n      useNativeDriver: false,\n    }).start();\n\n    setExpanded(!expanded);\n  };\n\n  // Déterminer le style en fonction de la variante\n  const getVariantStyle = () => {\n    switch (variant) {\n      case \"compact\":\n        return styles.compactContainer;\n      case \"highlighted\":\n        return [styles.highlightedContainer, { borderColor: primaryColor }];\n      case \"standard\":\n      default:\n        return styles.standardContainer;\n    }\n  };\n\n  // Animation pour la hauteur maximale\n  const maxHeight = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [60, 1000], // Valeurs approximatives, s'ajustera automatiquement\n  });\n\n  // Animation pour la rotation de l'icône\n  const rotateIcon = animation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"0deg\", \"180deg\"],\n  });\n\n  return (\n    <Animated.View style={[styles.container, getVariantStyle(), { maxHeight }]}>\n      <TouchableOpacity\n        style={styles.headerContainer}\n        onPress={toggleExpanded}\n        activeOpacity={0.7}\n      >\n        <View style={styles.titleContainer}>\n          <Ionicons\n            name=\"information-circle\"\n            size={24}\n            color={primaryColor}\n            style={styles.titleIcon}\n          />\n          <Text style={[styles.title, { color: primaryColor }]}>{title}</Text>\n        </View>\n\n        <Animated.View style={{ transform: [{ rotate: rotateIcon }] }}>\n          <Ionicons name=\"chevron-down\" size={24} color=\"#6B7280\" />\n        </Animated.View>\n      </TouchableOpacity>\n\n      {expanded && (\n        <View style={styles.contentContainer}>\n          {instructions && (\n            <Text style={styles.instructions}>{instructions}</Text>\n          )}\n\n          {examples.length > 0 && (\n            <View style={styles.examplesContainer}>\n              <Text style={styles.sectionTitle}>Exemples:</Text>\n              {examples.map((example, index) => (\n                <View key={index} style={styles.exampleItem}>\n                  <Text style={styles.exampleText}>{example}</Text>\n                </View>\n              ))}\n            </View>\n          )}\n\n          {tips.length > 0 && (\n            <View style={styles.tipsContainer}>\n              <Text style={styles.sectionTitle}>Astuces:</Text>\n              {tips.map((tip, index) => (\n                <View key={index} style={styles.tipItem}>\n                  <Ionicons\n                    name=\"bulb-outline\"\n                    size={16}\n                    color={primaryColor}\n                    style={styles.tipIcon}\n                  />\n                  <Text style={styles.tipText}>{tip}</Text>\n                </View>\n              ))}\n            </View>\n          )}\n        </View>\n      )}\n    </Animated.View>\n  );\n};\n\nexport default InstructionBox;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\InstructionBox\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\NavigationButtons\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[61,67],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[102,107],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[106,124],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[124,130],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[164,210],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[211,265],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// NavigationButtons/index.js - SIMPLE & EFFICACE 🎯\n\nimport React, { useRef } from \"react\";\nimport { View, TouchableOpacity, Text, Animated } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 NavigationButtons - Coupe au gel sur le côté\n * - Simple mais léché\n * - Pas de délire glassmorphism\n * - Juste propre et moderne\n */\nconst NavigationButtons = ({\n  onNext,\n  onPrevious,\n  disablePrevious = false,\n  disableNext = false,\n  primaryColor = \"#5E60CE\",\n  buttonLabels = {\n    previous: \"Précédent\",\n    next: \"Suivant\",\n    finish: \"Terminer\",\n  },\n  isLast = false,\n}) => {\n  const styles = createStyles(primaryColor);\n  \n  // Animations subtiles - pas de délire\n  const prevScale = useRef(new Animated.Value(1)).current;\n  const nextScale = useRef(new Animated.Value(1)).current;\n\n  const nextButtonLabel = isLast ? buttonLabels.finish : buttonLabels.next;\n\n  // Animation simple pour précédent\n  const handlePrevPress = () => {\n    if (disablePrevious) return;\n    \n    Animated.sequence([\n      Animated.spring(prevScale, { \n        toValue: 0.96, \n        tension: 400,\n        friction: 10,\n        useNativeDriver: true \n      }),\n      Animated.spring(prevScale, { \n        toValue: 1, \n        tension: 300,\n        friction: 8,\n        useNativeDriver: true \n      })\n    ]).start();\n    \n    setTimeout(() => onPrevious(), 60);\n  };\n\n  // Animation simple pour suivant\n  const handleNextPress = () => {\n    if (disableNext) return;\n    \n    Animated.sequence([\n      Animated.spring(nextScale, { \n        toValue: 0.96, \n        tension: 400,\n        friction: 10,\n        useNativeDriver: true \n      }),\n      Animated.spring(nextScale, { \n        toValue: 1, \n        tension: 300,\n        friction: 8,\n        useNativeDriver: true \n      })\n    ]).start();\n    \n    setTimeout(() => onNext(), 60);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.buttonsRow}>\n        \n        {/* 🔙 BOUTON PRÉCÉDENT - Ghost propre */}\n        {!disablePrevious && (\n          <Animated.View style={{ transform: [{ scale: prevScale }] }}>\n            <TouchableOpacity\n              style={styles.previousButton}\n              onPress={handlePrevPress}\n              disabled={disablePrevious}\n              activeOpacity={0.8}\n            >\n              <Ionicons name=\"chevron-back\" size={18} color={primaryColor} />\n              <Text style={[styles.previousText, { color: primaryColor }]}>\n                {buttonLabels.previous}\n              </Text>\n            </TouchableOpacity>\n          </Animated.View>\n        )}\n\n        {/* ⏭️ BOUTON SUIVANT - Gradient propre */}\n        <Animated.View style={{ transform: [{ scale: nextScale }] }}>\n          <TouchableOpacity\n            style={styles.nextButtonContainer}\n            onPress={handleNextPress}\n            disabled={disableNext}\n            activeOpacity={0.9}\n          >\n            <LinearGradient\n              colors={\n                isLast \n                  ? ['#10B981', '#059669'] // Vert simple\n                  : [primaryColor, `${primaryColor}E6`] // Gradient léger\n              }\n              start={{ x: 0, y: 0 }}\n              end={{ x: 1, y: 1 }}\n              style={styles.nextButton}\n            >\n              <Text style={styles.nextText}>\n                {nextButtonLabel}\n              </Text>\n              <Ionicons\n                name={isLast ? \"checkmark\" : \"chevron-forward\"}\n                size={18}\n                color=\"white\"\n                style={styles.nextIcon}\n              />\n            </LinearGradient>\n          </TouchableOpacity>\n        </Animated.View>\n      </View>\n    </View>\n  );\n};\n\nexport default NavigationButtons;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\NavigationButtons\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\OptionsList\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[62,73],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[91,96],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[95,101],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[101,119],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[143,189],"text":""},"desc":"Remove unused variable 'Ionicons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/exercise-common/OptionsList/index.js\nimport React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport styles from \"./style\";\n\n/**\n * Liste d'options sélectionnables pour les exercices à choix multiples\n */\nconst OptionsList = ({\n  options = [],\n  selectedOptionId = null,\n  onSelectOption,\n  correctOptionId = null,\n  showCorrectAnswer = false,\n  disabled = false,\n  primaryColor = \"#5E60CE\",\n  layout = \"vertical\", // 'vertical' ou 'grid'\n}) => {\n  // Détermine si une option est correcte (utile pour l'affichage des réponses)\n  const isCorrectOption = (optionId) => {\n    return showCorrectAnswer && optionId === correctOptionId;\n  };\n\n  // Détermine si une option est incorrecte (utile pour l'affichage des réponses)\n  const isIncorrectSelection = (optionId) => {\n    return (\n      showCorrectAnswer &&\n      selectedOptionId === optionId &&\n      optionId !== correctOptionId\n    );\n  };\n\n  // Définit le style pour chaque option\n  const getOptionStyle = (optionId) => {\n    if (isCorrectOption(optionId)) {\n      return styles.correctOption;\n    }\n    if (isIncorrectSelection(optionId)) {\n      return styles.incorrectOption;\n    }\n    if (selectedOptionId === optionId) {\n      return {\n        ...styles.selectedOption,\n        borderColor: primaryColor,\n      };\n    }\n    return styles.option;\n  };\n\n  // Définit le style du texte pour chaque option\n  const getOptionTextStyle = (optionId) => {\n    if (isCorrectOption(optionId)) {\n      return styles.correctOptionText;\n    }\n    if (isIncorrectSelection(optionId)) {\n      return styles.incorrectOptionText;\n    }\n    if (selectedOptionId === optionId) {\n      return {\n        ...styles.selectedOptionText,\n        color: primaryColor,\n      };\n    }\n    return styles.optionText;\n  };\n\n  // Rendu pour la mise en page verticale\n  const renderVerticalOptions = () => (\n    <View style={styles.verticalContainer}>\n      {options.map((option) => (\n        <TouchableOpacity\n          key={option.id}\n          style={[styles.optionItem, getOptionStyle(option.id)]}\n          onPress={() => !disabled && onSelectOption(option.id)}\n          disabled={disabled}\n        >\n          <Text style={[styles.optionItemText, getOptionTextStyle(option.id)]}>\n            {option.text}\n          </Text>\n\n          {isCorrectOption(option.id) && (\n            <Ionicons name=\"checkmark-circle\" size={24} color=\"#10B981\" />\n          )}\n\n          {isIncorrectSelection(option.id) && (\n            <Ionicons name=\"close-circle\" size={24} color=\"#EF4444\" />\n          )}\n\n          {selectedOptionId === option.id && !showCorrectAnswer && (\n            <View\n              style={[\n                styles.selectedIndicator,\n                { backgroundColor: primaryColor },\n              ]}\n            />\n          )}\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n\n  // Rendu pour la mise en page en grille\n  const renderGridOptions = () => (\n    <View style={styles.gridContainer}>\n      {options.map((option) => (\n        <TouchableOpacity\n          key={option.id}\n          style={[\n            styles.gridOptionItem,\n            getOptionStyle(option.id),\n            { width: `${100 / Math.min(options.length, 2) - 2}%` },\n          ]}\n          onPress={() => !disabled && onSelectOption(option.id)}\n          disabled={disabled}\n        >\n          <Text style={[styles.gridOptionText, getOptionTextStyle(option.id)]}>\n            {option.text}\n          </Text>\n\n          {isCorrectOption(option.id) && (\n            <Ionicons name=\"checkmark-circle\" size={24} color=\"#10B981\" />\n          )}\n\n          {isIncorrectSelection(option.id) && (\n            <Ionicons name=\"close-circle\" size={24} color=\"#EF4444\" />\n          )}\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n\n  return layout === \"vertical\" ? renderVerticalOptions() : renderGridOptions();\n};\n\nexport default OptionsList;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\OptionsList\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ResultsScreen\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[64,70],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[118,123],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":5,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[122,130],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":6,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[130,144],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":7,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[144,164],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Platform' is defined but never used.","line":10,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":11,"suggestions":[{"messageId":"removeVar","data":{"varName":"Platform"},"fix":{"range":[185,197],"text":""},"desc":"Remove unused variable 'Platform'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":12,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[222,268],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'score' is assigned a value but never used.","line":21,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":21,"endColumn":8,"suggestions":[{"messageId":"removeVar","data":{"varName":"score"},"fix":{"range":[494,504],"text":""},"desc":"Remove unused variable 'score'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'navigation' is assigned a value but never used.","line":36,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":36,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"navigation"},"fix":{"range":[818,853],"text":""},"desc":"Remove unused variable 'navigation'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":88,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":88,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":88,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":90,"endColumn":6,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2392,2398],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'fadeAnim' and 'scaleAnim'. Either include them or remove the dependency array.","line":108,"column":6,"nodeType":"ArrayExpression","endLine":108,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [fadeAnim, scaleAnim]","fix":{"range":[2765,2767],"text":"[fadeAnim, scaleAnim]"}}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/exercise-common/ResultsScreen/index.js\nimport React, { useEffect, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  Animated,\n  Share,\n  Platform,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport styles from \"./style\";\n\n/**\n * Écran de résultats pour afficher le score et les statistiques\n * à la fin d'une série d'exercices\n */\nconst ResultsScreen = ({\n  score = 0,\n  totalQuestions = 0,\n  correctAnswers = 0,\n  incorrectAnswers = 0,\n  skippedAnswers = 0,\n  timeTaken = \"00:00\",\n  exerciseType = \"exercise\",\n  level = \"A1\",\n  levelColor = \"#3b82f6\",\n  feedback = \"\",\n  onRetry = () => {},\n  onContinue = () => {},\n  showDetailedResults = false,\n  detailedResults = [],\n}) => {\n  const navigation = useNavigation();\n\n  // Animations\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const scaleAnim = useRef(new Animated.Value(0.8)).current;\n\n  // Calculer le pourcentage de réussite\n  const successPercentage =\n    Math.round((correctAnswers / totalQuestions) * 100) || 0;\n\n  // Déterminer les messages et couleurs en fonction du score\n  const getPerformanceData = () => {\n    if (successPercentage >= 80) {\n      return {\n        title: \"Excellent!\",\n        message: \"Vous maîtrisez ce niveau.\",\n        color: \"#10B981\",\n        icon: \"trophy\",\n      };\n    } else if (successPercentage >= 60) {\n      return {\n        title: \"Bien joué!\",\n        message: \"Vous progressez bien.\",\n        color: \"#3B82F6\",\n        icon: \"thumbs-up\",\n      };\n    } else if (successPercentage >= 40) {\n      return {\n        title: \"Pas mal!\",\n        message: \"Continuez à pratiquer.\",\n        color: \"#F59E0B\",\n        icon: \"fitness\",\n      };\n    } else {\n      return {\n        title: \"Continuez vos efforts\",\n        message: \"Vous pouvez vous améliorer.\",\n        color: \"#EF4444\",\n        icon: \"school\",\n      };\n    }\n  };\n\n  const { title, message, color, icon } = getPerformanceData();\n\n  // Partager les résultats\n  const shareResults = async () => {\n    try {\n      await Share.share({\n        message: `J'ai obtenu ${correctAnswers}/${totalQuestions} (${successPercentage}%) dans mon exercice de ${exerciseType} niveau ${level} sur l'application JOUD English!`,\n        title: \"Mes résultats d'apprentissage\",\n      });\n    } catch (error) {\n\n    }\n  };\n\n  // Effet pour lancer les animations\n  useEffect(() => {\n    Animated.parallel([\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true,\n      }),\n      Animated.spring(scaleAnim, {\n        toValue: 1,\n        friction: 8,\n        tension: 40,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  }, []);\n\n  return (\n    <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>\n      <Animated.View\n        style={[\n          styles.resultsCard,\n          { opacity: fadeAnim, transform: [{ scale: scaleAnim }] },\n        ]}\n      >\n        <View style={styles.header}>\n          <View style={[styles.levelBadge, { backgroundColor: levelColor }]}>\n            <Text style={styles.levelText}>{level}</Text>\n          </View>\n          <Text style={styles.exerciseType}>{exerciseType}</Text>\n        </View>\n\n        <View style={styles.scoreSection}>\n          <View style={[styles.scoreCircle, { borderColor: color }]}>\n            <Ionicons name={icon} size={36} color={color} />\n            <Text style={[styles.scorePercentage, { color }]}>\n              {successPercentage}%\n            </Text>\n            <Text style={styles.scoreRatio}>\n              {correctAnswers}/{totalQuestions}\n            </Text>\n          </View>\n\n          <View style={styles.scoreSummary}>\n            <Text style={styles.scoreTitle}>{title}</Text>\n            <Text style={styles.scoreMessage}>{message}</Text>\n          </View>\n        </View>\n\n        <View style={styles.statsContainer}>\n          <View style={styles.statItem}>\n            <View\n              style={[styles.statIconContainer, { backgroundColor: \"#ECFDF5\" }]}\n            >\n              <Ionicons name=\"checkmark-circle\" size={24} color=\"#10B981\" />\n            </View>\n            <Text style={styles.statLabel}>Correctes</Text>\n            <Text style={styles.statValue}>{correctAnswers}</Text>\n          </View>\n\n          <View style={styles.statItem}>\n            <View\n              style={[styles.statIconContainer, { backgroundColor: \"#FEF2F2\" }]}\n            >\n              <Ionicons name=\"close-circle\" size={24} color=\"#EF4444\" />\n            </View>\n            <Text style={styles.statLabel}>Incorrectes</Text>\n            <Text style={styles.statValue}>{incorrectAnswers}</Text>\n          </View>\n\n          <View style={styles.statItem}>\n            <View\n              style={[styles.statIconContainer, { backgroundColor: \"#F3F4F6\" }]}\n            >\n              <Ionicons name=\"play-skip-forward\" size={24} color=\"#6B7280\" />\n            </View>\n            <Text style={styles.statLabel}>Passées</Text>\n            <Text style={styles.statValue}>{skippedAnswers}</Text>\n          </View>\n\n          <View style={styles.statItem}>\n            <View\n              style={[styles.statIconContainer, { backgroundColor: \"#EFF6FF\" }]}\n            >\n              <Ionicons name=\"time\" size={24} color=\"#3B82F6\" />\n            </View>\n            <Text style={styles.statLabel}>Temps</Text>\n            <Text style={styles.statValue}>{timeTaken}</Text>\n          </View>\n        </View>\n\n        {feedback ? (\n          <View style={styles.feedbackContainer}>\n            <Text style={styles.feedbackTitle}>Conseils pour progresser</Text>\n            <Text style={styles.feedbackText}>{feedback}</Text>\n          </View>\n        ) : null}\n\n        {showDetailedResults && detailedResults.length > 0 && (\n          <View style={styles.detailedResultsContainer}>\n            <Text style={styles.detailedResultsTitle}>Détail des réponses</Text>\n\n            {detailedResults.map((result, index) => (\n              <View key={index} style={styles.detailedResultItem}>\n                <View style={styles.questionHeader}>\n                  <Text style={styles.questionNumber}>\n                    Question {index + 1}\n                  </Text>\n                  <Ionicons\n                    name={\n                      result.isCorrect\n                        ? \"checkmark-circle\"\n                        : result.isSkipped\n                        ? \"play-skip-forward\"\n                        : \"close-circle\"\n                    }\n                    size={20}\n                    color={\n                      result.isCorrect\n                        ? \"#10B981\"\n                        : result.isSkipped\n                        ? \"#6B7280\"\n                        : \"#EF4444\"\n                    }\n                  />\n                </View>\n\n                <Text style={styles.questionText}>{result.question}</Text>\n\n                <View style={styles.answersContainer}>\n                  <View style={styles.answerRow}>\n                    <Text style={styles.answerLabel}>Votre réponse:</Text>\n                    <Text\n                      style={[\n                        styles.answerValue,\n                        result.isCorrect\n                          ? styles.correctAnswer\n                          : result.isSkipped\n                          ? styles.skippedAnswer\n                          : styles.incorrectAnswer,\n                      ]}\n                    >\n                      {result.isSkipped ? \"Passée\" : result.userAnswer}\n                    </Text>\n                  </View>\n\n                  {!result.isCorrect && !result.isSkipped && (\n                    <View style={styles.answerRow}>\n                      <Text style={styles.answerLabel}>Réponse correcte:</Text>\n                      <Text style={[styles.answerValue, styles.correctAnswer]}>\n                        {result.correctAnswer}\n                      </Text>\n                    </View>\n                  )}\n                </View>\n              </View>\n            ))}\n          </View>\n        )}\n\n        <View style={styles.buttonsContainer}>\n          <TouchableOpacity style={styles.shareButton} onPress={shareResults}>\n            <Ionicons name=\"share-social\" size={20} color=\"#6B7280\" />\n            <Text style={styles.shareButtonText}>Partager</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.retryButton} onPress={onRetry}>\n            <Ionicons name=\"refresh\" size={20} color=\"#6B7280\" />\n            <Text style={styles.retryButtonText}>Réessayer</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={[styles.continueButton, { backgroundColor: levelColor }]}\n            onPress={onContinue}\n          >\n            <Text style={styles.continueButtonText}>Continuer</Text>\n            <Ionicons name=\"arrow-forward\" size={20} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n      </Animated.View>\n    </ScrollView>\n  );\n};\n\nexport default ResultsScreen;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ResultsScreen\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\layout\\Container\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[51,62],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'StatusBar' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"StatusBar"},"fix":{"range":[84,95],"text":""},"desc":"Remove unused variable 'StatusBar'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":3,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":37,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[95,107],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'WrapperComponent' is assigned a value but never used.","line":28,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":28,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"WrapperComponent"},"fix":{"range":[905,961],"text":""},"desc":"Remove unused variable 'WrapperComponent'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/layout/Container/index.js\nimport React from \"react\";\nimport { View, StatusBar, ScrollView } from \"react-native\";\n// ✅ CHANGEMENT : Utiliser SafeAreaView moderne au lieu du basique\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport styles from \"./style\";\n\n/**\n * Conteneur principal pour les écrans de l'application\n * Assure la cohérence de la mise en page avec gestion des marges et du padding\n */\nconst Container = ({\n  children,\n  style,\n  withScrollView = false,\n  safeArea = true,\n  statusBarColor = \"#FFFFFF\",\n  statusBarStyle = \"dark-content\",\n  withStatusBar = true,\n  withPadding = true,\n  backgroundColor = \"#F9FAFB\",\n  scrollViewProps = {},\n  // ✅ NOUVEAUX PROPS pour plus de contrôle SafeArea\n  safeAreaEdges = ['top', 'left', 'right'], // Par défaut pas de bottom pour garder navigation\n  ...props\n}) => {\n  // Déterminer le composant wrapper principal\n  const WrapperComponent = safeArea ? SafeAreaView : View;\n\n  // Déterminer les styles principaux du conteneur\n  const containerStyle = [\n    styles.container,\n    { backgroundColor },\n    withPadding && styles.withPadding,\n    style,\n  ];\n\n  // Props spécifiques pour SafeAreaView moderne\n  const safeAreaProps = safeArea ? {\n    edges: safeAreaEdges,\n    ...props\n  } : {};\n\n  // Contenu à rendre\n  const content = (\n    <>\n      {/* StatusBar conditionnelle */}\n      {withStatusBar && (\n        <StatusBar backgroundColor={statusBarColor} barStyle={statusBarStyle} />\n      )}\n      \n      {withScrollView ? (\n        <ScrollView\n          style={styles.scrollView}\n          contentContainerStyle={[\n            styles.scrollViewContent,\n            // ✅ Padding bottom pour home indicator\n            { paddingBottom: safeArea ? 34 : 0 }\n          ]}\n          showsVerticalScrollIndicator={false}\n          {...scrollViewProps}\n        >\n          {children}\n        </ScrollView>\n      ) : (\n        children\n      )}\n    </>\n  );\n\n  return (\n    <WrapperComponent \n      style={containerStyle}\n      {...safeAreaProps}\n    >\n      {content}\n    </WrapperComponent>\n  );\n};\n\nexport default Container;\n\n// ✅ Export des edges prédéfinis pour flexibilité\nexport const CONTAINER_SAFE_EDGES = {\n  ALL: ['top', 'bottom', 'left', 'right'],\n  NO_BOTTOM: ['top', 'left', 'right'], // Pour garder navigation\n  NO_TOP: ['bottom', 'left', 'right'],  // Pour modals avec header custom\n  HORIZONTAL: ['left', 'right'],        // Juste les côtés\n  NONE: []                              // Aucune SafeArea\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\layout\\Container\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Platform' is defined but never used.","line":2,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":30,"suggestions":[{"messageId":"removeVar","data":{"varName":"Platform"},"fix":{"range":[64,74],"text":""},"desc":"Remove unused variable 'Platform'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/layout/Container/styles.js\nimport { StyleSheet, Platform } from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  withPadding: {\n    padding: 16,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n  },\n});\n\nexport default styles;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\layout\\Header\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[48,59],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[79,84],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":5,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[83,91],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":6,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[91,111],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'StatusBar' is defined but never used.","line":7,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":12,"suggestions":[{"messageId":"removeVar","data":{"varName":"StatusBar"},"fix":{"range":[111,124],"text":""},"desc":"Remove unused variable 'StatusBar'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Platform' is defined but never used.","line":8,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":11,"suggestions":[{"messageId":"removeVar","data":{"varName":"Platform"},"fix":{"range":[124,136],"text":""},"desc":"Remove unused variable 'Platform'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":10,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[161,207],"text":""},"desc":"Remove unused variable 'Ionicons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/layout/Header/index.js\nimport React from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StatusBar,\n  Platform,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport styles from \"./style\";\n\n/**\n * Composant d'en-tête réutilisable pour les écrans de l'application\n * avec support amélioré pour le contenu personnalisé\n */\nconst Header = ({\n  // Options de base\n  title,\n  showBackButton = true,\n  onBackPress,\n  rightComponent,\n  rightIcon,\n  onRightPress,\n\n  // Style et apparence\n  backgroundColor = \"#FFFFFF\",\n  textColor = \"#1F2937\",\n  withShadow = true,\n  withBottomBorder = false,\n  withStatusBar = true,\n  statusBarColor = \"#FFFFFF\",\n  statusBarStyle = \"dark-content\",\n  condensed = false,\n\n  // Mode titre large\n  largeTitleMode = false,\n  subtitle,\n\n  // Nouveaux paramètres pour plus de flexibilité\n  leftComponent, // Composant personnalisé à gauche (remplace le bouton retour si fourni)\n  bottomComponent, // Composant personnalisé sous le titre/sous-titre\n  children, // Contenu personnalisé pour le header (remplace tout le contenu standard si fourni)\n  contentContainerStyle, // Style pour le conteneur de contenu\n  titleContainerStyle, // Style pour le conteneur de titre\n}) => {\n  const navigation = useNavigation();\n\n  // Fonction pour le bouton retour\n  const handleBackPress = () => {\n    if (onBackPress) {\n      onBackPress();\n    } else if (navigation.canGoBack()) {\n      navigation.goBack();\n    }\n  };\n\n  // Rendu du contenu standard du header\n  const renderStandardContent = () => (\n    <View style={styles.standardContainer}>\n      {/* Composant gauche ou bouton retour */}\n      {leftComponent ? (\n        leftComponent\n      ) : showBackButton ? (\n        <TouchableOpacity\n          onPress={handleBackPress}\n          style={styles.backButton}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          accessibilityRole=\"button\"\n        >\n          <Ionicons name=\"chevron-back\" size={24} color={textColor} />\n        </TouchableOpacity>\n      ) : (\n        <View style={styles.placeholderButton} />\n      )}\n\n      {/* Titre */}\n      <Text\n        style={[\n          styles.title,\n          { color: textColor },\n          condensed && styles.condensedTitle,\n          titleContainerStyle,\n        ]}\n        numberOfLines={1}\n      >\n        {title}\n      </Text>\n\n      {/* Composant droite ou icône */}\n      {rightComponent ? (\n        rightComponent\n      ) : rightIcon ? (\n        <TouchableOpacity\n          onPress={onRightPress}\n          style={styles.rightButton}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n        >\n          <Ionicons name={rightIcon} size={24} color={textColor} />\n        </TouchableOpacity>\n      ) : (\n        <View style={styles.placeholderButton} />\n      )}\n    </View>\n  );\n\n  // Rendu du contenu en mode titre large\n  const renderLargeTitleContent = () => (\n    <View style={styles.largeTitleWrapper}>\n      {/* Ligne supérieure avec bouton retour et éventuel composant à droite */}\n      <View style={styles.topRow}>\n        {leftComponent ? (\n          leftComponent\n        ) : showBackButton ? (\n          <TouchableOpacity\n            onPress={handleBackPress}\n            style={styles.backButton}\n            hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          >\n            <Ionicons name=\"chevron-back\" size={24} color={textColor} />\n          </TouchableOpacity>\n        ) : (\n          <View style={styles.placeholderButton} />\n        )}\n\n        {/* Composant de droite (ou icône) */}\n        {rightComponent ? (\n          <View style={styles.rightComponentContainer}>{rightComponent}</View>\n        ) : rightIcon ? (\n          <TouchableOpacity\n            onPress={onRightPress}\n            hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          >\n            <Ionicons name={rightIcon} size={24} color={textColor} />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n\n      {/* Conteneur de titre avec style personnalisable */}\n      <View style={titleContainerStyle}>\n        {/* Grand titre */}\n        <Text style={[styles.largeTitle, { color: textColor }]}>{title}</Text>\n\n        {/* Sous-titre (optionnel) */}\n        {subtitle && <Text style={styles.largeTitleSubtitle}>{subtitle}</Text>}\n      </View>\n\n      {/* Composant supplémentaire sous le titre (si fourni) */}\n      {bottomComponent && (\n        <View style={styles.bottomComponentContainer}>{bottomComponent}</View>\n      )}\n    </View>\n  );\n\n  return (\n    <View\n      style={[\n        styles.container,\n        { backgroundColor },\n        withShadow && styles.withShadow,\n        withBottomBorder && styles.withBorder,\n        condensed && styles.condensed,\n        largeTitleMode && styles.largeTitleContainer,\n        contentContainerStyle,\n      ]}\n    >\n      {/* StatusBar (optionnel) */}\n      {withStatusBar && (\n        <StatusBar backgroundColor={statusBarColor} barStyle={statusBarStyle} />\n      )}\n\n      {/* Contenu personnalisé ou contenu standard */}\n      {children ? (\n        <View style={styles.childrenContainer}>{children}</View>\n      ) : largeTitleMode ? (\n        renderLargeTitleContent()\n      ) : (\n        renderStandardContent()\n      )}\n    </View>\n  );\n};\n\nexport default Header;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\layout\\Header\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'width' is assigned a value but never used.","line":4,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"width"},"fix":{"range":[119,162],"text":""},"desc":"Remove unused variable 'width'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/layout/Header/styles.js\nimport { StyleSheet, Platform, StatusBar, Dimensions } from \"react-native\";\n\nconst { width } = Dimensions.get(\"window\");\nconst STATUSBAR_HEIGHT = Platform.OS === \"ios\" ? 44 : StatusBar.currentHeight;\nconst HEADER_HEIGHT = Platform.OS === \"ios\" ? 44 : 56;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    backgroundColor: \"white\",\n    paddingTop: Platform.OS === \"ios\" ? STATUSBAR_HEIGHT : 0,\n  },\n  withShadow: {\n    ...Platform.select({\n      ios: {\n        shadowColor: \"#000\",\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.05,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 3,\n      },\n    }),\n  },\n  withBorder: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"#E5E7EB\",\n  },\n  standardContainer: {\n    height: HEADER_HEIGHT,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 16,\n  },\n  condensed: {\n    height: Platform.OS === \"ios\" ? 40 : 48,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    flex: 1,\n  },\n  condensedTitle: {\n    fontSize: 16,\n  },\n  backButton: {\n    width: 40,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginLeft: -8,\n  },\n  rightButton: {\n    width: 40,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginRight: -8,\n  },\n  placeholderButton: {\n    width: 32,\n  },\n\n  // Styles pour le mode titre large\n  largeTitleContainer: {\n    height: \"auto\",\n    minHeight: HEADER_HEIGHT + STATUSBAR_HEIGHT + 44,\n  },\n  largeTitleWrapper: {\n    paddingHorizontal: 16,\n    paddingBottom: 10,\n  },\n  topRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    height: HEADER_HEIGHT,\n  },\n  largeTitle: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n    letterSpacing: 0.35,\n    marginTop: 8,\n  },\n  largeTitleSubtitle: {\n    fontSize: 16,\n    color: \"#6B7280\",\n    marginTop: 4,\n    marginBottom: 8,\n  },\n  rightComponentContainer: {\n    alignItems: \"flex-end\",\n  },\n\n  // Nouveaux styles\n  bottomComponentContainer: {\n    marginTop: 8,\n    marginBottom: 8,\n  },\n  childrenContainer: {\n    width: \"100%\",\n  },\n\n  // Styles pour les effets visuels\n  gradientBackground: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  wavyBottom: {\n    position: \"absolute\",\n    bottom: -1,\n    left: 0,\n    right: 0,\n    height: 20,\n    zIndex: 1,\n  },\n});\n\nexport default styles;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\setting\\RevisionSettings\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[81,92],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[110,115],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[114,120],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[120,138],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Switch' is defined but never used.","line":3,"column":40,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":46,"suggestions":[{"messageId":"removeVar","data":{"varName":"Switch"},"fix":{"range":[138,146],"text":""},"desc":"Remove unused variable 'Switch'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Alert' is defined but never used.","line":3,"column":48,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":53,"suggestions":[{"messageId":"removeVar","data":{"varName":"Alert"},"fix":{"range":[146,153],"text":""},"desc":"Remove unused variable 'Alert'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/settings/RevisionSettings/index.js - INTERFACE SETTINGS\nimport React from 'react';\nimport { View, Text, TouchableOpacity, Switch, Alert } from 'react-native';\nimport { useRevisionSettings } from '../../../hooks/useRevisionSettings';\nimport styles from './style';\n\nconst RevisionSettings = () => {\n  const { \n    preferences, \n    isLoading, \n    enableRevisions, \n    disableRevisions, \n    updateFrequency \n  } = useRevisionSettings();\n\n  const handleToggleRevisions = async (enabled) => {\n    if (enabled) {\n      // Activation simple, garder la fréquence actuelle\n      await enableRevisions(preferences.frequency, preferences.questionsCount);\n    } else {\n      // Désactivation simple\n      await disableRevisions();\n    }\n  };\n\n  const frequencyOptions = [\n    { value: 25, label: \"Tous les 25 mots (léger)\" },\n    { value: 50, label: \"Tous les 50 mots (standard)\" },\n    { value: 100, label: \"Tous les 100 mots (espacé)\" }\n  ];\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <Text style={styles.loadingText}>Chargement des paramètres...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.sectionTitle}>\n        🔄 Révisions automatiques\n      </Text>\n\n      {/* Toggle principal */}\n      <View style={styles.toggleRow}>\n        <Text style={styles.toggleLabel}>Révisions automatiques</Text>\n        <Switch\n          value={!preferences.isDisabled}\n          onValueChange={handleToggleRevisions}\n        />\n      </View>\n\n      {/* Options de fréquence */}\n      {!preferences.isDisabled && (\n        <View style={styles.frequencySection}>\n          <Text style={styles.frequencyTitle}>\n            Fréquence :\n          </Text>\n          \n          {frequencyOptions.map((option) => (\n            <TouchableOpacity\n              key={option.value}\n              style={[\n                styles.frequencyOption,\n                preferences.frequency === option.value \n                  ? styles.frequencyOptionSelected \n                  : styles.frequencyOptionDefault\n              ]}\n              onPress={() => updateFrequency(option.value)}\n            >\n              <Text style={[\n                styles.frequencyText,\n                preferences.frequency === option.value \n                  ? styles.frequencyTextSelected \n                  : styles.frequencyTextDefault\n              ]}>\n                {option.label}\n              </Text>\n              {preferences.frequency === option.value && (\n                <Text style={styles.checkIcon}>✓</Text>\n              )}\n            </TouchableOpacity>\n          ))}\n\n          <Text style={styles.nextRevisionInfo}>\n            💡 Prochaine révision à {preferences.nextRevisionAt} mots appris\n          </Text>\n        </View>\n      )}\n\n      {/* Message si désactivé */}\n      {preferences.isDisabled && (\n        <View style={styles.disabledWarning}>\n          <Text style={styles.warningTitle}>\n            ⚠️ Révisions désactivées\n          </Text>\n          <Text style={styles.warningMessage}>\n            Réactivez-les pour maintenir votre mémorisation !\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default RevisionSettings;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\setting\\RevisionSettings\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\Button\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[44,55],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Pressable' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"Pressable"},"fix":{"range":[73,83],"text":""},"desc":"Remove unused variable 'Pressable'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":21,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[82,88],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":3,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":44,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[88,107],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":46,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":50,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[107,113],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[137,183],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":91,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":91,"endColumn":58,"suggestions":[{"messageId":"addBrackets","fix":{"range":[2632,3321],"text":"{ const iconSizeValue = sizeStyles?.iconSize || 24;\n        return {\n          button: {\n            backgroundColor: disabled ? \"#F3F4F6\" : \"transparent\",\n            borderWidth: 0,\n            borderRadius: iconSizeValue + 16,\n            paddingVertical: 8,\n            paddingHorizontal: 8,\n            minWidth: iconSizeValue + 16,\n            minHeight: iconSizeValue + 16,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          },\n          text: {\n            color: disabled ? \"#9CA3AF\" : baseColor,\n          },\n          icon: disabled ? \"#9CA3AF\" : baseColor,\n          pressed: {\n            backgroundColor: `${baseColor}10`,\n          },\n        }; }"},"desc":"Add {} brackets around the case block."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ui/Button/index.js\nimport React from \"react\";\nimport { Pressable, Text, ActivityIndicator, View } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport styles from \"./style\";\n\n/**\n * Composant Button modernisé utilisant Pressable avec feedback visuel amélioré\n */\nconst Button = ({\n  title,\n  onPress,\n  variant = \"filled\", // 'filled', 'outlined', 'text', 'icon', 'tonal'\n  size = \"medium\", // 'small', 'medium', 'large'\n  color = \"primary\", // 'primary', 'secondary', 'success', 'warning', 'danger', 'info'\n  fullWidth = false,\n  disabled = false,\n  loading = false,\n  leftIcon,\n  rightIcon,\n  iconOnly,\n  style,\n  textStyle,\n  onLongPress,\n  elevation = true, // Ajoute un effet d'élévation sur les boutons filled\n  uppercase = false, // Option pour mettre le texte en majuscules\n  rounded = false, // Option pour des coins plus arrondis\n  ...props\n}) => {\n  // Définition des couleurs pour chaque type\n  const colors = {\n    primary: \"#5E60CE\",\n    secondary: \"#6B7280\",\n    success: \"#10B981\",\n    warning: \"#F59E0B\",\n    danger: \"#EF4444\",\n    info: \"#3B82F6\",\n  };\n\n  // Couleur de base pour ce bouton\n  const baseColor = colors[color] || colors.primary;\n\n  // Déterminer les styles en fonction de la variante\n  const getVariantStyles = () => {\n    switch (variant) {\n      case \"outlined\":\n        return {\n          button: {\n            backgroundColor: \"transparent\",\n            borderWidth: 1,\n            borderColor: disabled ? \"#D1D5DB\" : baseColor,\n          },\n          text: {\n            color: disabled ? \"#9CA3AF\" : baseColor,\n          },\n          icon: disabled ? \"#9CA3AF\" : baseColor,\n          pressed: {\n            backgroundColor: `${baseColor}10`, // 10% d'opacité lors de la pression\n          },\n        };\n      case \"text\":\n        return {\n          button: {\n            backgroundColor: \"transparent\",\n            borderWidth: 0,\n            paddingHorizontal: 12,\n          },\n          text: {\n            color: disabled ? \"#9CA3AF\" : baseColor,\n          },\n          icon: disabled ? \"#9CA3AF\" : baseColor,\n          pressed: {\n            backgroundColor: `${baseColor}10`,\n          },\n        };\n      case \"tonal\": // Nouvelle variante tonale\n        return {\n          button: {\n            backgroundColor: disabled ? \"#F3F4F6\" : `${baseColor}15`,\n            borderWidth: 0,\n          },\n          text: {\n            color: disabled ? \"#9CA3AF\" : baseColor,\n          },\n          icon: disabled ? \"#9CA3AF\" : baseColor,\n          pressed: {\n            backgroundColor: `${baseColor}25`,\n          },\n        };\n      case \"icon\":\n        const iconSizeValue = sizeStyles?.iconSize || 24;\n        return {\n          button: {\n            backgroundColor: disabled ? \"#F3F4F6\" : \"transparent\",\n            borderWidth: 0,\n            borderRadius: iconSizeValue + 16,\n            paddingVertical: 8,\n            paddingHorizontal: 8,\n            minWidth: iconSizeValue + 16,\n            minHeight: iconSizeValue + 16,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          },\n          text: {\n            color: disabled ? \"#9CA3AF\" : baseColor,\n          },\n          icon: disabled ? \"#9CA3AF\" : baseColor,\n          pressed: {\n            backgroundColor: `${baseColor}10`,\n          },\n        };\n      case \"filled\":\n      default:\n        return {\n          button: {\n            backgroundColor: disabled ? \"#E5E7EB\" : baseColor,\n            borderWidth: 0,\n          },\n          text: {\n            color: \"white\",\n          },\n          icon: \"white\",\n          pressed: {\n            backgroundColor: disabled ? \"#E5E7EB\" : `${baseColor}DD`, // Légèrement plus foncé quand pressé\n          },\n        };\n    }\n  };\n\n  // Déterminer les styles en fonction de la taille\n  const getSizeStyles = () => {\n    switch (size) {\n      case \"small\":\n        return {\n          button: styles.smallButton,\n          text: styles.smallText,\n          iconSize: 16,\n          loaderSize: \"small\",\n        };\n      case \"large\":\n        return {\n          button: styles.largeButton,\n          text: styles.largeText,\n          iconSize: 24,\n          loaderSize: \"large\",\n        };\n      case \"medium\":\n      default:\n        return {\n          button: styles.mediumButton,\n          text: styles.mediumText,\n          iconSize: 20,\n          loaderSize: \"small\",\n        };\n    }\n  };\n\n  const sizeStyles = getSizeStyles();\n  const variantStyles = getVariantStyles();\n  const iconSize = sizeStyles.iconSize;\n\n  // Styles d'élévation\n  const elevationStyle = \n    elevation && variant === \"filled\" && !disabled \n      ? styles.withElevation \n      : {};\n\n  // Styles de coins arrondis\n  const radiusStyle = rounded ? styles.rounded : {};\n\n  // Rendu du bouton\n  return (\n    <Pressable\n      style={({ pressed }) => [\n        styles.button,\n        sizeStyles.button,\n        variantStyles.button,\n        fullWidth && styles.fullWidth,\n        pressed && variantStyles.pressed,\n        elevationStyle,\n        radiusStyle,\n        style,\n      ]}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      disabled={disabled || loading}\n      android_ripple={\n        variant !== \"text\" && variant !== \"outlined\"\n          ? { color: `${baseColor}30`, borderless: false }\n          : null\n      }\n      {...props}\n    >\n      {loading ? (\n        // Affichage du loader\n        <ActivityIndicator\n          size={sizeStyles.loaderSize}\n          color={variantStyles.text.color}\n        />\n      ) : (\n        <View style={styles.contentContainer}>\n          {/* Icône gauche (si présente) */}\n          {leftIcon && !iconOnly && (\n            <View style={styles.leftIconContainer}>\n              <Ionicons\n                name={leftIcon}\n                size={iconSize}\n                color={variantStyles.icon}\n              />\n            </View>\n          )}\n          {/* Icône pour le bouton icône */}\n          {iconOnly && (\n            <Ionicons\n              name={iconOnly}\n              size={iconSize}\n              color={variantStyles.icon}\n            />\n          )}\n          {/* Texte du bouton (sauf si bouton icône uniquement) */}\n          {!iconOnly && title && (\n            <Text\n              style={[\n                styles.text,\n                sizeStyles.text,\n                variantStyles.text,\n                uppercase && styles.uppercase,\n                textStyle,\n              ]}\n              numberOfLines={1}\n            >\n              {title}\n            </Text>\n          )}\n          {/* Icône droite (si présente) */}\n          {rightIcon && !iconOnly && (\n            <View style={styles.rightIconContainer}>\n              <Ionicons\n                name={rightIcon}\n                size={iconSize}\n                color={variantStyles.icon}\n              />\n            </View>\n          )}\n        </View>\n      )}\n    </Pressable>\n  );\n};\n\nexport default Button;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\Button\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\Card\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[72,78],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[121,127],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[169,215],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressBar' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressBar"},"fix":{"range":[286,303],"text":""},"desc":"Remove unused variable 'ProgressBar'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'WrapperComponent' is assigned a value but never used.","line":83,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":83,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"WrapperComponent"},"fix":{"range":[2273,2336],"text":""},"desc":"Remove unused variable 'WrapperComponent'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ui/Card/index.js - Enhanced pour mobile badges\nimport React, { useContext } from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { ThemeContext } from \"../../../contexts/ThemeContext\";\nimport ProgressBar from \"../ProgressBar\";\nimport styles from \"./style\";\n\n/**\n * Composant Card réutilisable avec support amélioré pour badges mobiles\n */\nconst Card = ({\n  children,\n  title,\n  subtitle,\n  headerRight,\n  headerIcon,\n  headerIconColor,\n  headerIconBackground = true,\n  onPress,\n  footer,\n  footerStyle,\n  style,\n  titleStyle,\n  subtitleStyle,\n  contentStyle,\n  withShadow = true,\n  bordered = false,\n  withSideBorder = false,\n  elevated = true,\n  padding = true,\n  margin = true,\n  badge,\n  badgeStyle,\n  badgeTextStyle,\n  isActive = false,\n  backgroundColor = \"white\",\n  borderRadius = 12,\n  testID,\n  \n  // Props pour barre de progression\n  progress = null,\n  progressColor,\n  progressHeight = 8,\n  progressStyle,\n  showPercentage = false,\n  percentageFormatter = (val) => `${Math.round(val)}%`,\n  \n  // =================== NOUVELLES PROPS MOBILE ===================\n  // Support pour badge dans le titre (comme \"Niveau [1]\")\n  titleBadge, // Texte du badge (ex: \"1\")\n  titleBadgeColor, // Couleur du badge (ex: \"#3b82f6\")\n  titleBadgeStyle, // Style custom du badge\n  titleLayout = \"row\", // \"row\" | \"column\" - layout du header\n  \n  // Support pour icône à droite\n  rightIcon, // Nom de l'icône (ex: \"🌱\")\n  rightIconStyle, // Style de l'icône\n  \n  // Mode compact mobile\n  compactMode = false, // Active le mode compact\n  \n  // Support pour overlay (ex: niveau verrouillé)\n  showOverlay = false,\n  overlayContent, // Contenu de l'overlay\n  overlayStyle, // Style de l'overlay\n}) => {\n  // Récupération du contexte de thème\n  const themeContext = useContext(ThemeContext);\n  const colors = themeContext?.colors || { primary: \"#5E60CE\" };\n\n  // Couleur de l'icône\n  const iconColor = headerIconColor || colors.primary;\n  \n  // Couleur de la barre de progression\n  const fillColor = progressColor || iconColor;\n  \n  // Couleur du badge titre\n  const badgeColor = titleBadgeColor || iconColor;\n\n  // Déterminer si la carte est cliquable\n  const isClickable = Boolean(onPress);\n  const WrapperComponent = isClickable ? TouchableOpacity : View;\n  const wrapperProps = isClickable ? { activeOpacity: 0.7, onPress } : {};\n\n  // Déterminer si un header doit être affiché\n  const showHeader = title || subtitle || headerRight || headerIcon || titleBadge;\n  \n  // Déterminer si une barre de progression doit être affichée\n  const showProgressBar = progress !== null;\n\n  // =================== RENDER HEADER MOBILE ===================\n  const renderMobileHeader = () => {\n    if (!showHeader) return null;\n\n    return (\n      <View style={[\n        styles.header,\n        titleLayout === \"column\" && styles.headerColumn,\n        compactMode && styles.headerCompact\n      ]}>\n        <View style={[\n          styles.headerLeft,\n          titleLayout === \"column\" && styles.headerLeftColumn\n        ]}>\n          {/* Icône header (si présente) */}\n          {headerIcon && (\n            headerIconBackground ? (\n              <View style={[\n                styles.headerIconContainer,\n                { backgroundColor: `${iconColor}15` },\n                compactMode && styles.headerIconContainerCompact\n              ]}>\n                <Ionicons name={headerIcon} size={compactMode ? 18 : 20} color={iconColor} />\n              </View>\n            ) : (\n              <Ionicons\n                name={headerIcon}\n                size={compactMode ? 18 : 20}\n                color={iconColor}\n                style={styles.headerIcon}\n              />\n            )\n          )}\n          \n          {/* Conteneur de texte avec badge */}\n          <View style={styles.headerTextContainer}>\n            {/* Titre avec badge inline */}\n            {title && (\n              <View style={styles.titleWithBadgeContainer}>\n                <Text style={[\n                  styles.title,\n                  { color: titleStyle?.color || \"#1F2937\" },\n                  compactMode && styles.titleCompact,\n                  titleStyle\n                ]}>\n                  {title}\n                </Text>\n                \n                {/* Badge dans le titre */}\n                {titleBadge && (\n                  <View style={[\n                    styles.titleBadge,\n                    { backgroundColor: badgeColor },\n                    compactMode && styles.titleBadgeCompact,\n                    titleBadgeStyle\n                  ]}>\n                    <Text style={[\n                      styles.titleBadgeText,\n                      compactMode && styles.titleBadgeTextCompact,\n                      badgeTextStyle\n                    ]}>\n                      {titleBadge}\n                    </Text>\n                  </View>\n                )}\n              </View>\n            )}\n            \n            {/* Sous-titre */}\n            {subtitle && (\n              <Text style={[\n                styles.subtitle,\n                compactMode && styles.subtitleCompact,\n                subtitleStyle\n              ]}>\n                {subtitle}\n              </Text>\n            )}\n          </View>\n        </View>\n\n        {/* Partie droite du header */}\n        <View style={styles.headerRight}>\n          {/* Icône à droite (ex: emoji) */}\n          {rightIcon && (\n            <Text style={[\n              styles.rightIconText,\n              compactMode && styles.rightIconTextCompact,\n              rightIconStyle\n            ]}>\n              {rightIcon}\n            </Text>\n          )}\n          \n          {/* Composant header right */}\n          {headerRight}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <WrapperComponent\n      style={[\n        styles.container,\n        withShadow && styles.shadow,\n        bordered && styles.bordered,\n        withSideBorder && [styles.withSideBorder, { borderLeftColor: iconColor }],\n        elevated && styles.elevated,\n        margin && styles.margin,\n        isActive && [styles.activeCard, { borderColor: iconColor }],\n        compactMode && styles.containerCompact,\n        { backgroundColor, borderRadius },\n        style,\n      ]}\n      testID={testID}\n      {...wrapperProps}\n    >\n      {/* Badge optionnel (coin supérieur) */}\n      {badge && (\n        <View style={[\n          styles.cardBadge,\n          { backgroundColor: `${iconColor}15` },\n          badgeStyle,\n        ]}>\n          <Text style={[styles.badgeText, { color: iconColor }, badgeTextStyle]}>\n            {badge}\n          </Text>\n        </View>\n      )}\n\n      {/* Header mobile amélioré */}\n      {renderMobileHeader()}\n\n      {/* Contenu de la carte */}\n      <View style={[\n        styles.content,\n        padding && styles.contentPadding,\n        compactMode && styles.contentCompact,\n        contentStyle\n      ]}>\n        {children}\n\n        {/* Barre de progression */}\n        {showProgressBar && (\n          <ProgressBar\n            progress={progress}\n            fillColor={fillColor}\n            height={progressHeight}\n            backgroundColor={`${fillColor}15`}\n            borderRadius={Math.floor(progressHeight / 2)}\n            showPercentage={showPercentage}\n            percentageFormatter={percentageFormatter}\n            style={[\n              { marginTop: compactMode ? 8 : 12, marginBottom: compactMode ? 4 : 8 },\n              progressStyle\n            ]}\n          />\n        )}\n      </View>\n\n      {/* Footer */}\n      {footer && (\n        <View style={[styles.footer, footerStyle]}>\n          {footer}\n        </View>\n      )}\n\n      {/* Overlay (ex: niveau verrouillé) */}\n      {showOverlay && (\n        <View style={[styles.overlay, overlayStyle]}>\n          {overlayContent}\n        </View>\n      )}\n    </WrapperComponent>\n  );\n};\n\nexport default Card;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\Card\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ContentSection\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[52,63],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[81,86],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[85,91],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Card' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":12,"suggestions":[{"messageId":"removeVar","data":{"varName":"Card"},"fix":{"range":[122,132],"text":""},"desc":"Remove unused variable 'Card'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ui/ContentSection/index.js\nimport React from \"react\";\nimport { View, Text } from \"react-native\";\nimport Card from \"../Card\";\nimport createStyles from \"./style\";\n\n/**\n * 📝 ContentSection - Composant générique pour sections de contenu\n * Usage : Examples, Context, Rules, Explanations, etc.\n * \n * @param {string} title - Titre de la section (ex: \"Example\", \"Context\", \"Rule\")\n * @param {string} content - Contenu principal de la section\n * @param {string} levelColor - Couleur du niveau\n * @param {string} backgroundColor - Couleur de fond (optionnel)\n * @param {boolean} isItalic - Mettre le contenu en italique\n * @param {boolean} showIcon - Afficher l'icône/dot coloré\n * @param {object} containerStyle - Style personnalisé pour le container\n */\nconst ContentSection = ({\n  title = \"Content\",\n  content,\n  levelColor = \"#5E60CE\",\n  backgroundColor,\n  isItalic = false,\n  showIcon = true,\n  containerStyle = {},\n  children,\n}) => {\n  const styles = createStyles(levelColor, backgroundColor);\n\n  // Ne pas rendre si pas de contenu et pas d'enfants\n  if (!content && !children) return null;\n\n  return (\n    <Card\n      withShadow\n      borderRadius={18}\n      style={[styles.card, containerStyle]}\n      contentStyle={styles.cardContent}\n    >\n      {/* Header avec titre et ligne décorative */}\n      <View style={styles.header}>\n        {showIcon && (\n          <View style={[styles.iconDot, { backgroundColor: levelColor }]} />\n        )}\n        <Text style={styles.title}>{title}</Text>\n        <View style={styles.decorativeLine} />\n      </View>\n      \n      {/* Contenu */}\n      {content ? (\n        <Text style={[styles.contentText, isItalic && styles.italicText]}>\n          {content}\n        </Text>\n      ) : null}\n      {children}\n    </Card>\n  );\n};\n\nexport default ContentSection;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ContentSection\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":8,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[202,225],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ui/ContentSection/style.js\nimport { StyleSheet } from \"react-native\";\n\n/**\n * 📝 Styles génériques pour ContentSection\n * Adaptables selon le type de contenu\n */\nconst createStyles = (levelColor = \"#5E60CE\", backgroundColor) =>\n  StyleSheet.create({\n    // =================== CARD ===================\n    card: {\n      backgroundColor: backgroundColor || '#FAFBFC',\n      borderWidth: 1,\n      borderColor: '#F1F3F4',\n      marginBottom: 16,\n    },\n    cardContent: {\n      padding: 20,\n    },\n\n    // =================== HEADER ===================\n    header: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: 16,\n    },\n    iconDot: {\n      width: 10,\n      height: 10,\n      borderRadius: 5,\n      marginRight: 12,\n    },\n    title: {\n      fontSize: 16,\n      fontWeight: '700',\n      color: '#374151',\n      letterSpacing: 0.3,\n    },\n    decorativeLine: {\n      flex: 1,\n      height: 1,\n      backgroundColor: '#E5E7EB',\n      marginLeft: 12,\n    },\n\n    // =================== CONTENU ===================\n    contentText: {\n      fontSize: 16,\n      color: '#4B5563',\n      lineHeight: 26,\n      fontWeight: '500',\n    },\n    italicText: {\n      fontStyle: 'italic',\n      color: '#6B7280',\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\HeroCard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[72,83],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[101,106],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[105,111],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[135,189],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ui/HeroCard/index.js - VERSION MOBILE-FRIENDLY\nimport React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 HeroCard - Version Mobile-Friendly Premium\n * - Backgrounds solides pour lisibilité mobile\n * - Ombres neutres (pas colorées)\n * - Contrastes optimisés (WCAG AA)\n * - Cross-platform cohérent\n * \n * @param {string} content - Contenu principal à afficher\n * @param {number} fontSize - Taille du texte (42 pour mots, 28 pour phrases, etc.)\n * @param {string} levelColor - Couleur du niveau\n * @param {number} lineHeight - Hauteur de ligne (optionnel)\n * @param {string} textAlign - Alignement du texte\n * @param {boolean} showUnderline - Afficher la ligne décorative\n * @param {object} containerStyle - Style personnalisé pour le container\n */\nconst HeroCard = ({\n  content,\n  fontSize = 32,\n  levelColor = \"#5E60CE\",\n  lineHeight,\n  textAlign = \"center\",\n  showUnderline = true,\n  containerStyle = {},\n  children,\n}) => {\n  const styles = createStyles(levelColor);\n  \n  // Calcul automatique du lineHeight si non fourni\n  const calculatedLineHeight = lineHeight || Math.round(fontSize * 1.3);\n\n  return (\n    <View style={[styles.heroSection, containerStyle]}>\n      <LinearGradient\n        colors={[\n          'white',\n          `${levelColor}08`, // Gradient très subtil vers couleur\n          `${levelColor}12`   // Légèrement plus visible\n        ]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={styles.heroGradient}\n      >\n        {/* Cercles décoratifs - plus visibles */}\n        <View style={[styles.decorativeCircle, styles.circle1, { backgroundColor: `${levelColor}15` }]} />\n        <View style={[styles.decorativeCircle, styles.circle2, { backgroundColor: `${levelColor}10` }]} />\n        \n        {/* Contenu principal */}\n        <View style={styles.contentContainer}>\n          {content ? (\n            <Text \n              style={[\n                styles.contentText, \n                { \n                  color: levelColor,\n                  fontSize,\n                  lineHeight: calculatedLineHeight,\n                  textAlign,\n                }\n              ]}\n            >\n              {content}\n            </Text>\n          ) : null}\n          {children}\n          {/* Ligne décorative */}\n          {showUnderline && (\n            <View style={[styles.underline, { backgroundColor: levelColor }]} />\n          )}\n        </View>\n      </LinearGradient>\n    </View>\n  );\n};\n\nexport default HeroCard;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\HeroCard\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\Modal\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'RNModal' is defined but never used.","line":4,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"RNModal"},"fix":{"range":[74,91],"text":""},"desc":"Remove unused variable 'RNModal'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":5,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[90,98],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":6,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[98,106],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":7,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[106,126],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableWithoutFeedback' is defined but never used.","line":8,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableWithoutFeedback"},"fix":{"range":[126,154],"text":""},"desc":"Remove unused variable 'TouchableWithoutFeedback'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":11,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[180,194],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'KeyboardAvoidingView' is defined but never used.","line":12,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"KeyboardAvoidingView"},"fix":{"range":[194,218],"text":""},"desc":"Remove unused variable 'KeyboardAvoidingView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":15,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[255,301],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'backdropOpacity' is assigned a value but never used.","line":37,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":37,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"backdropOpacity"},"fix":{"range":[776,801],"text":""},"desc":"Remove unused variable 'backdropOpacity'."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook React.useEffect has a missing dependency: 'animation'. Either include it or remove the dependency array.","line":58,"column":6,"nodeType":"ArrayExpression","endLine":58,"endColumn":47,"suggestions":[{"desc":"Update the dependencies array to be: [visible, animationType, customAnimation, animation]","fix":{"range":[1333,1374],"text":"[visible, animationType, customAnimation, animation]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ui/Modal/index.js\nimport React from \"react\";\nimport {\n  Modal as RNModal,\n  View,\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Animated,\n  Dimensions,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport styles from \"./style\";\n\n/**\n * Composant Modal personnalisé avec plusieurs variantes et animations\n */\nconst Modal = ({\n  visible = false,\n  onClose,\n  title,\n  children,\n  footer,\n  position = \"center\", // 'center', 'bottom', 'top'\n  animationType = \"fade\", // 'none', 'slide', 'fade', 'custom'\n  closeOnBackdropPress = true,\n  showCloseButton = true,\n  width,\n  height,\n  maxHeight,\n  fullScreen = false,\n  transparent = true,\n  backdropColor = \"rgba(0, 0, 0, 0.5)\",\n  backdropOpacity = 0.5,\n  contentContainerStyle,\n  headerStyle,\n  footerStyle,\n  bodyStyle,\n  avoidKeyboard = true,\n  scrollable = false,\n  customAnimation,\n}) => {\n  // Animation personnalisée\n  const [animation] = React.useState(new Animated.Value(0));\n\n  // Exécuter l'animation personnalisée lorsque visible change\n  React.useEffect(() => {\n    if (animationType === \"custom\" && customAnimation) {\n      Animated.timing(animation, {\n        toValue: visible ? 1 : 0,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, animationType, customAnimation]);\n\n  // Gérer le clic sur l'arrière-plan\n  const handleBackdropPress = () => {\n    if (closeOnBackdropPress && onClose) {\n      onClose();\n    }\n  };\n\n  // Calcul de la largeur de la modal\n  const getModalWidth = () => {\n    if (fullScreen) return \"100%\";\n    if (width) return width;\n\n    const screenWidth = Dimensions.get(\"window\").width;\n    switch (position) {\n      case \"bottom\":\n      case \"top\":\n        return \"100%\";\n      case \"center\":\n      default:\n        return Math.min(screenWidth - 48, 480);\n    }\n  };\n\n  // Calcul de la hauteur de la modal\n  const getModalHeight = () => {\n    if (fullScreen) return \"100%\";\n    if (height) return height;\n    return \"auto\";\n  };\n\n  // Position de la modal\n  const getPositionStyle = () => {\n    switch (position) {\n      case \"bottom\":\n        return styles.bottomPosition;\n      case \"top\":\n        return styles.topPosition;\n      case \"center\":\n      default:\n        return styles.centerPosition;\n    }\n  };\n\n  // Style d'animation personnalisée\n  const getCustomAnimationStyle = () => {\n    if (animationType !== \"custom\" || !customAnimation) return {};\n\n    switch (position) {\n      case \"bottom\":\n        return {\n          transform: [\n            {\n              translateY: animation.interpolate({\n                inputRange: [0, 1],\n                outputRange: [300, 0],\n              }),\n            },\n          ],\n        };\n      case \"top\":\n        return {\n          transform: [\n            {\n              translateY: animation.interpolate({\n                inputRange: [0, 1],\n                outputRange: [-300, 0],\n              }),\n            },\n          ],\n        };\n      case \"center\":\n      default:\n        return {\n          opacity: animation,\n          transform: [\n            {\n              scale: animation.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0.8, 1],\n              }),\n            },\n          ],\n        };\n    }\n  };\n\n  // Construction du contenu de la modal\n  const renderModalContent = () => {\n    const modalContent = (\n      <Animated.View\n        style={[\n          styles.contentContainer,\n          getPositionStyle(),\n          {\n            width: getModalWidth(),\n            height: getModalHeight(),\n            maxHeight: maxHeight,\n          },\n          animationType === \"custom\" && getCustomAnimationStyle(),\n          contentContainerStyle,\n        ]}\n      >\n        {/* En-tête */}\n        {(title || showCloseButton) && (\n          <View style={[styles.header, headerStyle]}>\n            <Text style={styles.title}>{title}</Text>\n            {showCloseButton && (\n              <TouchableOpacity\n                style={styles.closeButton}\n                onPress={onClose}\n                hitSlop={{ top: 10, right: 10, bottom: 10, left: 10 }}\n              >\n                <Ionicons name=\"close\" size={24} color=\"#6B7280\" />\n              </TouchableOpacity>\n            )}\n          </View>\n        )}\n\n        {/* Corps */}\n        {scrollable ? (\n          <ScrollView\n            style={[styles.scrollableBody, bodyStyle]}\n            contentContainerStyle={styles.scrollableContent}\n            showsVerticalScrollIndicator\n          >\n            {children}\n          </ScrollView>\n        ) : (\n          <View style={[styles.body, bodyStyle]}>{children}</View>\n        )}\n\n        {/* Pied de page */}\n        {footer && <View style={[styles.footer, footerStyle]}>{footer}</View>}\n      </Animated.View>\n    );\n\n    // Envelopper dans KeyboardAvoidingView si nécessaire\n    return avoidKeyboard ? (\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.keyboardAvoidingView}\n      >\n        {modalContent}\n      </KeyboardAvoidingView>\n    ) : (\n      modalContent\n    );\n  };\n\n  return (\n    <RNModal\n      visible={visible}\n      transparent={transparent}\n      onRequestClose={onClose}\n      animationType={animationType === \"custom\" ? \"none\" : animationType}\n    >\n      <View style={[styles.modalContainer, { backgroundColor: backdropColor }]}>\n        {/* Touche de l'arrière-plan pour fermer */}\n        <TouchableWithoutFeedback onPress={handleBackdropPress}>\n          <View style={styles.backdrop} />\n        </TouchableWithoutFeedback>\n\n        {/* Contenu de la modal */}\n        {renderModalContent()}\n      </View>\n    </RNModal>\n  );\n};\n\nexport default Modal;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\Modal\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ProgressBar\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[79,85],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[131,136],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[135,141],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'progressAnim'. Either include it or remove the dependency array.","line":49,"column":6,"nodeType":"ArrayExpression","endLine":49,"endColumn":50,"suggestions":[{"desc":"Update the dependencies array to be: [validProgress, animated, animationDuration, progressAnim]","fix":{"range":[1385,1429],"text":"[validProgress, animated, animationDuration, progressAnim]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ui/ProgressBar/index.js - Version Mobile-First Simple\nimport React, { useEffect, useRef } from \"react\";\nimport { View, Text, Animated } from \"react-native\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 ProgressBar - Version Mobile-First Ultra-Simple\n * - Focus sur l'essentiel : progression claire\n * - Pas de surcharge visuelle\n * - Animation fluide et subtile\n * - Lecture immédiate sur mobile\n */\nconst ProgressBar = ({\n  progress = 0, // 0 à 100\n  showPercentage = false,\n  showValue = false,\n  total = 100,\n  height = 8,\n  backgroundColor = \"#E5E7EB\",\n  fillColor = \"#5E60CE\",\n  borderRadius = 4,\n  animated = true,\n  animationDuration = 600,\n  label,\n  labelPosition = \"top\",\n  style,\n  valueFormatter = (value, total) => `${value}/${total}`,\n  percentageFormatter = (percentage) => `${Math.round(percentage)}%`,\n  testID,\n}) => {\n  const styles = createStyles(fillColor, height, borderRadius);\n  \n  // Calculer le pourcentage validé\n  const validProgress = Math.min(Math.max(progress, 0), 100);\n\n  // Animation simple de la barre\n  const progressAnim = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    if (animated) {\n      Animated.timing(progressAnim, {\n        toValue: validProgress,\n        duration: animationDuration,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      progressAnim.setValue(validProgress);\n    }\n  }, [validProgress, animated, animationDuration]);\n\n  // Largeur animée\n  const width = progressAnim.interpolate({\n    inputRange: [0, 100],\n    outputRange: [\"0%\", \"100%\"],\n  });\n\n  // Rendu du label\n  const renderLabel = () => {\n    if (!label) return null;\n    return <Text style={styles.label}>{label}</Text>;\n  };\n\n  // Rendu de la valeur\n  const renderValue = () => {\n    if (!showValue) return null;\n    const calculatedValue = Math.round((validProgress / 100) * total);\n    return (\n      <Text style={styles.value}>{valueFormatter(calculatedValue, total)}</Text>\n    );\n  };\n\n  // Rendu du pourcentage\n  const renderPercentage = () => {\n    if (!showPercentage) return null;\n    return (\n      <Text style={[styles.percentage, { color: fillColor }]}>\n        {percentageFormatter(validProgress)}\n      </Text>\n    );\n  };\n\n  // Contenu au-dessus\n  const renderTopContent = () => {\n    if (labelPosition !== \"top\") return null;\n    return (\n      <View style={styles.topContentContainer}>\n        {renderLabel()}\n        <View style={styles.valuesContainer}>\n          {renderValue()}\n          {renderPercentage()}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View style={[styles.container, style]} testID={testID}>\n      {/* Contenu au-dessus */}\n      {renderTopContent()}\n\n      {/* 📊 BARRE DE PROGRESSION SIMPLE ET CLAIRE */}\n      <View style={styles.progressBarContainer}>\n        {/* Track de fond simple */}\n        <View style={[styles.progressTrack, { backgroundColor, borderRadius }]} />\n        \n        {/* Barre de progression */}\n        <Animated.View\n          style={[\n            styles.progressFill,\n            {\n              width,\n              backgroundColor: fillColor,\n              borderRadius,\n            },\n          ]}\n        />\n      </View>\n\n      {/* Pourcentage en ligne si pas au-dessus */}\n      {labelPosition !== \"top\" && showPercentage && (\n        <View style={styles.inlinePercentage}>\n          {renderPercentage()}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ProgressBar;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ProgressBar\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'fillColor' is assigned a value but never used.","line":10,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"fillColor"},"fix":{"range":[312,334],"text":""},"desc":"Remove unused variable 'fillColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ui/ProgressBar/style.js - Version Mobile-First Simple\nimport { StyleSheet } from 'react-native';\n\n/**\n * 🎯 Styles Mobile-First Ultra-Simples pour ProgressBar\n * - Pas de surcharge : que l'essentiel\n * - Lisibilité optimale sur mobile\n * - Animation fluide et subtile\n */\nconst createStyles = (fillColor = \"#5E60CE\", height = 8, borderRadius = 4) =>\n  StyleSheet.create({\n    // =================== CONTAINER SIMPLE ===================\n    container: {\n      width: '100%',\n      marginVertical: 4, // Réduit pour mobile\n    },\n\n    // =================== CONTENU AU-DESSUS ===================\n    topContentContainer: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: 6,\n    },\n    valuesContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n\n    // =================== BARRE SIMPLE ===================\n    progressBarContainer: {\n      height,\n      borderRadius,\n      position: 'relative',\n      overflow: 'hidden',\n    },\n    progressTrack: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n    progressFill: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n    },\n\n    // =================== POURCENTAGE EN LIGNE ===================\n    inlinePercentage: {\n      alignItems: 'flex-end',\n      marginTop: 4,\n    },\n\n    // =================== TYPOGRAPHY SIMPLE ===================\n    label: {\n      fontSize: 14,\n      fontWeight: '500',\n      color: '#374151',\n    },\n    value: {\n      fontSize: 12,\n      color: '#6B7280',\n      fontWeight: '500',\n      marginRight: 6,\n    },\n    percentage: {\n      fontSize: 12,\n      fontWeight: '600',\n      letterSpacing: 0.2,\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ProgressCard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[77,88],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[106,111],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[110,116],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[116,134],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[185,239],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[240,286],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressBar' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressBar"},"fix":{"range":[294,311],"text":""},"desc":"Remove unused variable 'ProgressBar'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'unit' is assigned a value but never used.","line":34,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":34,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"unit"},"fix":{"range":[1373,1391],"text":""},"desc":"Remove unused variable 'unit'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ui/ProgressCard/index.js - VERSION ÉPURÉE SANS DOTS\nimport React from \"react\";\nimport { View, Text, TouchableOpacity, LayoutAnimation, Platform } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport ProgressBar from \"../ProgressBar\";\nimport createStyles from \"./style\";\n\n/**\n * 📊 ProgressCard - Version Épurée Sans Dots\n * ✨ Design clean et moderne\n * 🚫 Suppression des categoryDot qui polluent l'interface\n * 🎯 Focus sur l'information, pas la décoration\n * \n * @param {string} title - Titre principal\n * @param {string} subtitle - Sous-titre\n * @param {number} progress - Pourcentage de progression (0-100)\n * @param {number} completed - Nombre d'items complétés\n * @param {number} total - Nombre total d'items\n * @param {string} unit - Unité (ex: \"mots\", \"phrases\", \"règles\")\n * @param {string} levelColor - Couleur du niveau\n * @param {boolean} expandable - Peut être étendu pour voir détails\n * @param {boolean} expanded - État d'expansion\n * @param {function} onToggleExpand - Fonction pour toggle expansion\n * @param {array} categoryData - Données des catégories pour l'expansion\n * @param {function} onCategoryPress - Fonction appelée lors du clic sur catégorie\n */\nconst ProgressCard = ({\n  title = \"Progress\",\n  subtitle,\n  progress = 0,\n  completed = 0,\n  total = 0,\n  unit = \"items\",\n  levelColor = \"#5E60CE\",\n  expandable = false,\n  expanded = false,\n  onToggleExpand,\n  categoryData = [],\n  onCategoryPress,\n}) => {\n  const styles = createStyles(levelColor);\n\n  // Configuration LayoutAnimation pour smooth transition\n  const configureLayoutAnimation = () => {\n    if (Platform.OS === 'ios') {\n      LayoutAnimation.configureNext({\n        duration: 300,\n        create: {\n          type: LayoutAnimation.Types.easeInEaseOut,\n          property: LayoutAnimation.Properties.opacity,\n        },\n        update: {\n          type: LayoutAnimation.Types.easeInEaseOut,\n          property: LayoutAnimation.Properties.scaleXY,\n        },\n        delete: {\n          type: LayoutAnimation.Types.easeInEaseOut,\n          property: LayoutAnimation.Properties.opacity,\n        },\n      });\n    } else {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    }\n  };\n\n  // Toggle expansion avec LayoutAnimation smooth\n  const toggleExpanded = () => {\n    if (!expandable) return;\n    configureLayoutAnimation();\n    onToggleExpand?.();\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* =================== CARD PRINCIPALE =================== */}\n      <LinearGradient\n        colors={[`${levelColor}06`, `${levelColor}03`, 'transparent']}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={styles.cardGradient}\n      >\n        {/* Header avec stats */}\n        <TouchableOpacity \n          style={styles.header}\n          onPress={toggleExpanded}\n          activeOpacity={expandable ? 0.8 : 1}\n        >\n          <View style={styles.headerLeft}>\n            <Text style={styles.title}>{title}</Text>\n            {subtitle && (\n              <Text style={styles.subtitle}>{subtitle}</Text>\n            )}\n          </View>\n\n          <View style={styles.headerRight}>\n            <View style={styles.statsContainer}>\n              <Text style={[styles.statsCount, { color: levelColor }]}>\n                {completed}\n              </Text>\n              <Text style={styles.statsTotal}>/ {total}</Text>\n            </View>\n            <Text style={[styles.statsPercentage, { color: levelColor }]}>\n              {Math.round(progress)}%\n            </Text>\n            \n            {/* Flèche d'expansion */}\n            {expandable && (\n              <View style={[\n                styles.chevronContainer,\n                expanded && styles.chevronExpanded\n              ]}>\n                <Ionicons name=\"chevron-down\" size={16} color={levelColor} />\n              </View>\n            )}\n          </View>\n        </TouchableOpacity>\n\n        {/* Barre de progression principale */}\n        <View style={styles.progressSection}>\n          <ProgressBar\n            progress={progress}\n            showPercentage={false}\n            fillColor={levelColor}\n            height={6}\n            backgroundColor={`${levelColor}15`}\n            borderRadius={3}\n            animated\n          />\n        </View>\n      </LinearGradient>\n\n      {/* =================== SECTION EXPANSION ÉPURÉE =================== */}\n      {expandable && expanded && categoryData.length > 0 && (\n        <View style={styles.expansionWrapper}>\n          <View style={styles.expansionContainer}>\n            {/* Header des catégories épuré */}\n            <View style={styles.expansionHeader}>\n              <Text style={styles.expansionTitle}>Par catégorie</Text>\n              <Text style={styles.expansionSubtitle}>\n                {categoryData.length} {categoryData.length > 1 ? 'catégories' : 'catégorie'}\n              </Text>\n            </View>\n            \n            {/* Liste des catégories - DESIGN ÉPURÉ SANS DOTS */}\n            <View style={styles.categoriesList}>\n              {categoryData.map((category, index) => (\n                <TouchableOpacity\n                  key={`category-${index}`}\n                  style={styles.categoryItem}\n                  onPress={() => onCategoryPress?.(index)}\n                  activeOpacity={0.7}\n                >\n                  {/* Row principale avec titre et stats */}\n                  <View style={styles.categoryRow}>\n                    <View style={styles.categoryLeft}>\n                      {/* 🚫 categoryDot SUPPRIMÉ - c'était ça les ronds ! */}\n                      <Text style={styles.categoryTitle} numberOfLines={1}>\n                        {category.title}\n                      </Text>\n                    </View>\n                    <Text style={[styles.categoryStats, { color: levelColor }]}>\n                      {category.completed}/{category.total}\n                    </Text>\n                  </View>\n                  \n                  {/* Barre de progression de la catégorie */}\n                  <View style={styles.categoryProgressContainer}>\n                    <ProgressBar\n                      progress={category.progress}\n                      showPercentage={false}\n                      fillColor={levelColor}\n                      backgroundColor={`${levelColor}10`}\n                      height={3}\n                      borderRadius={2}\n                      animated\n                    />\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n          </View>\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ProgressCard;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ProgressCard\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\RevealButton\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[118,123],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[122,128],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[128,146],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[180,226],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[227,281],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Card' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":12,"suggestions":[{"messageId":"removeVar","data":{"varName":"Card"},"fix":{"range":[289,299],"text":""},"desc":"Remove unused variable 'Card'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ui/RevealButton/index.js - DESIGN BABBEL 2025 🎯\n\nimport React, { useState } from \"react\";\nimport { View, Text, TouchableOpacity, Animated } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Card from \"../Card\";\nimport createStyles from \"./style\";\n\n/**\n * 🔘 RevealButton - Version Babbel 2025\n * - Simple et efficace\n * - Cohérent avec NavigationButtons  \n * - Pas de délire shimmer/étoiles\n * - Juste propre et moderne\n */\nconst RevealButton = ({\n  isRevealed = false,\n  onToggle,\n  revealText = \"Reveal Translation\",\n  hideText = \"Hide Translation\", \n  revealedContent = \"\",\n  levelColor = \"#5E60CE\",\n  contentStyle = {},\n}) => {\n  const styles = createStyles(levelColor);\n  \n  // Animations simples - pas de délire\n  const [buttonScale] = useState(new Animated.Value(1));\n  const [contentOpacity] = useState(new Animated.Value(0));\n\n  // Animation du contenu révélé - simple\n  React.useEffect(() => {\n    if (isRevealed) {\n      Animated.timing(contentOpacity, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      contentOpacity.setValue(0);\n    }\n  }, [isRevealed, contentOpacity]);\n\n  // Animation press simple pour reveal\n  const handleRevealPress = () => {\n    Animated.sequence([\n      Animated.spring(buttonScale, { \n        toValue: 0.96, \n        tension: 400,\n        friction: 10,\n        useNativeDriver: true \n      }),\n      Animated.spring(buttonScale, { \n        toValue: 1, \n        tension: 300,\n        friction: 8,\n        useNativeDriver: true \n      })\n    ]).start();\n    \n    setTimeout(() => onToggle(), 60);\n  };\n\n  // Animation press simple pour hide\n  const handleHidePress = () => {\n    Animated.sequence([\n      Animated.spring(buttonScale, { \n        toValue: 0.96, \n        tension: 400,\n        friction: 10,\n        useNativeDriver: true \n      }),\n      Animated.spring(buttonScale, { \n        toValue: 1, \n        tension: 300,\n        friction: 8,\n        useNativeDriver: true \n      })\n    ]).start();\n    \n    setTimeout(() => onToggle(), 60);\n  };\n\n  return (\n    <Card\n      withShadow\n      borderRadius={18}\n      style={styles.card}\n      contentStyle={styles.cardContent}\n    >\n      {isRevealed ? (\n        // État : Contenu révélé - Simple et propre\n        <View style={styles.revealedContainer}>\n          {/* Contenu révélé */}\n          <Animated.View \n            style={[\n              styles.contentWrapper,\n              { opacity: contentOpacity }\n            ]}\n          >\n            <Text style={[\n              styles.revealedText, \n              { color: levelColor },\n              contentStyle\n            ]}>\n              {revealedContent}\n            </Text>\n          </Animated.View>\n          \n          {/* Bouton Hide simple */}\n          <Animated.View style={{ transform: [{ scale: buttonScale }] }}>\n            <TouchableOpacity\n              style={styles.hideButton}\n              onPress={handleHidePress}\n              activeOpacity={0.8}\n              accessibilityRole=\"button\"\n            >\n              <Text style={[styles.hideButtonText, { color: levelColor }]}>\n                {hideText}\n              </Text>\n            </TouchableOpacity>\n          </Animated.View>\n        </View>\n      ) : (\n        // État : Bouton Reveal - Style cohérent avec NavigationButtons\n        <Animated.View style={{ transform: [{ scale: buttonScale }] }}>\n          <TouchableOpacity\n            style={styles.revealButtonContainer}\n            onPress={handleRevealPress}\n            activeOpacity={0.9}\n            accessibilityRole=\"button\"\n          >\n            <LinearGradient\n              colors={[levelColor, `${levelColor}E6`]}\n              start={{ x: 0, y: 0 }}\n              end={{ x: 1, y: 1 }}\n              style={styles.revealButton}\n            >\n              <Text style={styles.revealButtonText}>{revealText}</Text>\n            </LinearGradient>\n          </TouchableOpacity>\n        </Animated.View>\n      )}\n    </Card>\n  );\n};\n\nexport default RevealButton;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\RevealButton\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\contexts\\AppProvider.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[39,50],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ThemeProvider' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"ThemeProvider"},"fix":{"range":[60,107],"text":""},"desc":"Remove unused variable 'ThemeProvider'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressProvider' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressProvider"},"fix":{"range":[109,162],"text":""},"desc":"Remove unused variable 'ProgressProvider'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SettingsProvider' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"SettingsProvider"},"fix":{"range":[164,216],"text":""},"desc":"Remove unused variable 'SettingsProvider'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/contexts/AppProvider.js\r\nimport React from 'react';\r\nimport { ThemeProvider } from './ThemeContext';\r\nimport { ProgressProvider } from './ProgressContext';\r\nimport { SettingsProvider } from './SettingContext';\r\n\r\n/**\r\n * Fournisseur global qui combine tous les contextes de l'application\r\n * Simplifie l'inclusion des contextes dans l'application\r\n */\r\nconst AppProvider = ({ children }) => {\r\n  return (\r\n    <ThemeProvider>\r\n      <SettingsProvider>\r\n        <ProgressProvider>\r\n          {children}\r\n        </ProgressProvider>\r\n      </SettingsProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppProvider;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\contexts\\ProgressContext.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[74,80],"text":""},"desc":"Remove unused variable 'React'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/contexts/ProgressContext.js - VERSION CORRIGÉE SANS BOUCLE\r\nimport React, { createContext, useState, useEffect, useContext, useCallback, useRef, useMemo } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { STORAGE_KEYS } from '../utils/constants';\r\n\r\n// Créer le contexte\r\nexport const ProgressContext = createContext();\r\n\r\n// Données initiales simples\r\nconst createInitialProgress = () => ({\r\n  // Progression par niveau (0-100%)\r\n  levels: {\r\n    '1': { completed: 0, total: 100 },\r\n    '2': { completed: 0, total: 100 },\r\n    '3': { completed: 0, total: 100 },\r\n    '4': { completed: 0, total: 100 },\r\n    '5': { completed: 0, total: 100 },\r\n    '6': { completed: 0, total: 100 },\r\n    'bonus': { completed: 0, total: 100 },\r\n  },\r\n  \r\n  // Progression par exercice et niveau\r\n  exercises: {\r\n    vocabulary: {\r\n      '1': { completed: 0, total: 100 },\r\n      '2': { completed: 0, total: 100 },\r\n      '3': { completed: 0, total: 100 },\r\n      '4': { completed: 0, total: 100 },\r\n      '5': { completed: 0, total: 100 },\r\n      '6': { completed: 0, total: 100 },\r\n      'bonus': { completed: 0, total: 100 },\r\n    },\r\n    phrases: {\r\n      '1': { completed: 0, total: 100 },\r\n      '2': { completed: 0, total: 100 },\r\n      '3': { completed: 0, total: 100 },\r\n      '4': { completed: 0, total: 100 },\r\n      '5': { completed: 0, total: 100 },\r\n      '6': { completed: 0, total: 100 },\r\n      'bonus': { completed: 0, total: 100 },\r\n    },\r\n    grammar: {\r\n      '1': { completed: 0, total: 100 },\r\n      '2': { completed: 0, total: 100 },\r\n      '3': { completed: 0, total: 100 },\r\n      '4': { completed: 0, total: 100 },\r\n      '5': { completed: 0, total: 100 },\r\n      '6': { completed: 0, total: 100 },\r\n    },\r\n    // ... autres exercices peuvent être ajoutés au besoin\r\n  },\r\n\r\n  // Stats globales\r\n  stats: {\r\n    streak: 0,\r\n    totalTimeSpent: 0,\r\n    correctAnswers: 0,\r\n    totalAnswers: 0,\r\n    exercisesCompleted: 0,\r\n    lastLogin: null,\r\n  },\r\n\r\n  // Dernière activité\r\n  lastActivity: {\r\n    type: null,\r\n    level: null,\r\n    timestamp: null,\r\n  },\r\n});\r\n\r\n// Fournisseur du contexte\r\nexport const ProgressProvider = ({ children }) => {\r\n  const [progress, setProgress] = useState(createInitialProgress());\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  // ✅ CORRECTION : Ref pour éviter la boucle de sauvegarde\r\n  const saveTimeoutRef = useRef(null);\r\n  const isInitialLoad = useRef(true);\r\n\r\n  // ========== CHARGEMENT INITIAL ==========\r\n  useEffect(() => {\r\n    const loadProgress = async () => {\r\n      try {\r\n        const stored = await AsyncStorage.getItem(STORAGE_KEYS.USER_PROGRESS);\r\n        if (stored) {\r\n          const parsed = JSON.parse(stored);\r\n          setProgress(parsed);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur chargement progression:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n        isInitialLoad.current = false; // ✅ Marquer que le chargement initial est fini\r\n      }\r\n    };\r\n\r\n    loadProgress();\r\n  }, []); // ✅ CORRIGÉ : Aucune dépendance\r\n\r\n  // ========== SAUVEGARDE AUTO CORRIGÉE ==========\r\n  useEffect(() => {\r\n    // ✅ CORRECTION : Ne pas sauvegarder pendant le chargement initial\r\n    if (isLoading || isInitialLoad.current) {\r\n      return;\r\n    }\r\n\r\n    // Clear previous timeout\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n    }\r\n\r\n    // Set new timeout for debounced save\r\n    saveTimeoutRef.current = setTimeout(async () => {\r\n      try {\r\n        await AsyncStorage.setItem(STORAGE_KEYS.USER_PROGRESS, JSON.stringify(progress));\r\n      } catch (error) {\r\n        console.error('Erreur sauvegarde progression:', error);\r\n      }\r\n    }, 500);\r\n\r\n    // Cleanup timeout\r\n    return () => {\r\n      if (saveTimeoutRef.current) {\r\n        clearTimeout(saveTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [progress, isLoading]); // ✅ IMPORTANT : Inclure isLoading pour éviter sauvegarde pendant chargement\r\n\r\n  // ========== MÉTHODES MÉMORISÉES ==========\r\n\r\n  // ✅ CORRECTION : Mémoriser toutes les fonctions\r\n  const updateExerciseProgress = useCallback((exerciseType, level, completed) => {\r\n    setProgress(prev => {\r\n      const newProgress = { ...prev };\r\n      \r\n      // Vérifier que l'exercice existe\r\n      if (!newProgress.exercises[exerciseType]) {\r\n        newProgress.exercises[exerciseType] = {};\r\n      }\r\n      \r\n      if (!newProgress.exercises[exerciseType][level]) {\r\n        newProgress.exercises[exerciseType][level] = { completed: 0, total: 100 };\r\n      }\r\n\r\n      // Mettre à jour l'exercice\r\n      newProgress.exercises[exerciseType][level].completed = Math.min(Math.max(0, completed), 100);\r\n\r\n      // Recalculer progression du niveau (moyenne des exercices)\r\n      const levelExercises = Object.keys(newProgress.exercises).map(type => \r\n        newProgress.exercises[type][level]?.completed || 0\r\n      ).filter(val => val > 0);\r\n\r\n      if (levelExercises.length > 0) {\r\n        const averageProgress = levelExercises.reduce((sum, val) => sum + val, 0) / levelExercises.length;\r\n        newProgress.levels[level].completed = Math.round(averageProgress);\r\n      }\r\n\r\n      // Mettre à jour dernière activité\r\n      newProgress.lastActivity = {\r\n        type: exerciseType,\r\n        level,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      return newProgress;\r\n    });\r\n  }, []);\r\n\r\n  const updateStats = useCallback((newStats) => {\r\n    setProgress(prev => ({\r\n      ...prev,\r\n      stats: { ...prev.stats, ...newStats }\r\n    }));\r\n  }, []);\r\n\r\n  const calculateGlobalProgress = useCallback(() => {\r\n    const levels = Object.values(progress.levels);\r\n    if (levels.length === 0) return 0;\r\n    \r\n    const total = levels.reduce((sum, level) => sum + level.completed, 0);\r\n    return Math.round(total / levels.length);\r\n  }, [progress.levels]);\r\n\r\n  const calculateLevelProgress = useCallback((level) => {\r\n    return progress.levels[level]?.completed || 0;\r\n  }, [progress.levels]);\r\n\r\n  const resetProgress = useCallback(async () => {\r\n    try {\r\n      await AsyncStorage.removeItem(STORAGE_KEYS.USER_PROGRESS);\r\n      setProgress(createInitialProgress());\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur reset progression:', error);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // ========== 🚨 CORRECTION PRINCIPALE : VALEUR MÉMORISÉE ==========\r\n  const contextValue = useMemo(() => ({\r\n    progress,\r\n    isLoading,\r\n    updateExerciseProgress,\r\n    updateStats,\r\n    calculateGlobalProgress,\r\n    calculateLevelProgress,\r\n    resetProgress,\r\n  }), [\r\n    progress, \r\n    isLoading, \r\n    updateExerciseProgress, \r\n    updateStats, \r\n    calculateGlobalProgress, \r\n    calculateLevelProgress, \r\n    resetProgress\r\n  ]);\r\n\r\n  return (\r\n    <ProgressContext.Provider value={contextValue}>\r\n      {children}\r\n    </ProgressContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook pour utiliser le contexte\r\nexport const useProgress = () => {\r\n  const context = useContext(ProgressContext);\r\n  if (!context) {\r\n    throw new Error('useProgress must be used within a ProgressProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default ProgressContext;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\contexts\\SettingContext.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[43,49],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":28,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":28,"endColumn":21},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":28,"column":23,"nodeType":"BlockStatement","messageId":"unexpected","endLine":30,"endColumn":8,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1018,1028],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/contexts/SettingsContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport { storeData, getData } from '../utils/storageUtils';\r\nimport { DEFAULT_SETTINGS } from '../utils/constants';\r\n\r\n// Créer le contexte\r\nexport const SettingsContext = createContext();\r\n\r\n/**\r\n * Fournisseur de contexte pour gérer les paramètres de l'application\r\n */\r\nexport const SettingsProvider = ({ children }) => {\r\n  // État des paramètres\r\n  const [settings, setSettings] = useState(DEFAULT_SETTINGS);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Charger les paramètres au démarrage\r\n  useEffect(() => {\r\n    const loadSettings = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const savedSettings = await getData('userSettings');\r\n\r\n        if (savedSettings) {\r\n          // Fusionner avec les paramètres par défaut pour s'assurer que tous les champs sont présents\r\n          setSettings({ ...DEFAULT_SETTINGS, ...savedSettings });\r\n        }\r\n      } catch (error) {\r\n\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadSettings();\r\n  }, []);\r\n\r\n  // Sauvegarder les paramètres lorsqu'ils changent\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      storeData('userSettings', settings);\r\n    }\r\n  }, [settings, isLoading]);\r\n\r\n  // Mettre à jour un paramètre spécifique\r\n  const updateSetting = (key, value) => {\r\n    if (settings[key] === undefined) {\r\n\r\n      return;\r\n    }\r\n\r\n    setSettings(prevSettings => ({\r\n      ...prevSettings,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  // Mettre à jour plusieurs paramètres à la fois\r\n  const updateSettings = (newSettings) => {\r\n    setSettings(prevSettings => ({\r\n      ...prevSettings,\r\n      ...newSettings\r\n    }));\r\n  };\r\n\r\n  // Réinitialiser tous les paramètres\r\n  const resetSettings = () => {\r\n    setSettings(DEFAULT_SETTINGS);\r\n  };\r\n\r\n  // Vérifier si les notifications sont activées\r\n  const areNotificationsEnabled = () => {\r\n    return settings.notifications;\r\n  };\r\n\r\n  // Obtenir le délai journalier\r\n  const getDailyGoal = () => {\r\n    return settings.dailyGoal;\r\n  };\r\n\r\n  // Définir le délai journalier\r\n  const setDailyGoal = (minutes) => {\r\n    updateSetting('dailyGoal', Math.max(1, Math.min(120, minutes))); // Entre 1 et 120 minutes\r\n  };\r\n\r\n  // Valeur fournie par le contexte\r\n  const contextValue = {\r\n    settings,\r\n    updateSetting,\r\n    updateSettings,\r\n    resetSettings,\r\n    areNotificationsEnabled,\r\n    getDailyGoal,\r\n    setDailyGoal,\r\n    isLoading,\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider value={contextValue}>\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SettingsContext;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\contexts\\ThemeContext.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[71,77],"text":""},"desc":"Remove unused variable 'React'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/contexts/ThemeContext.js - VERSION CORRIGÉE SANS BOUCLE\r\nimport React, { createContext, useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useColorScheme } from 'react-native';\r\nimport { getData, storeData } from '../utils/storageUtils';\r\nimport { COLORS } from '../utils/constants';\r\n\r\n// Créer le contexte\r\nexport const ThemeContext = createContext();\r\n\r\n/**\r\n * Fournisseur de contexte pour gérer le thème de l'application\r\n */\r\nexport const ThemeProvider = ({ children }) => {\r\n  // États\r\n  const [theme, setTheme] = useState('system'); // 'light', 'dark', 'system'\r\n  const systemColorScheme = useColorScheme();\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  // ========== 🚨 MÉMORISER LE MODE SOMBRE ==========\r\n  const isDarkTheme = useMemo(() => {\r\n    return theme === 'system' \r\n      ? systemColorScheme === 'dark'\r\n      : theme === 'dark';\r\n  }, [theme, systemColorScheme]);\r\n\r\n  // Charger le thème sauvegardé au démarrage\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const loadTheme = async () => {\r\n      try {\r\n        const savedTheme = await getData('appTheme');\r\n        if (mounted) {\r\n          if (savedTheme) {\r\n            setTheme(savedTheme);\r\n          }\r\n          setLoaded(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading theme:', error);\r\n        if (mounted) {\r\n          setLoaded(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    loadTheme();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []); // ← Dépendances vides = une seule fois\r\n\r\n  // Sauvegarder le thème lorsqu'il change\r\n  useEffect(() => {\r\n    let timeoutId;\r\n\r\n    if (loaded) {\r\n      // Debounce pour éviter trop de sauvegardes\r\n      timeoutId = setTimeout(() => {\r\n        storeData('appTheme', theme);\r\n      }, 300);\r\n    }\r\n\r\n    return () => {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n    };\r\n  }, [theme, loaded]);\r\n\r\n  // ========== 🚨 MÉMORISER TOUTES LES FONCTIONS ==========\r\n  const setAppTheme = useCallback((newTheme) => {\r\n    setTheme(newTheme);\r\n  }, []);\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    if (theme === 'system') {\r\n      setTheme(systemColorScheme === 'dark' ? 'light' : 'dark');\r\n    } else {\r\n      setTheme(theme === 'dark' ? 'light' : 'dark');\r\n    }\r\n  }, [theme, systemColorScheme]);\r\n\r\n  const resetToSystemTheme = useCallback(() => {\r\n    setTheme('system');\r\n  }, []);\r\n\r\n  // ========== 🚨 MÉMORISER LES COULEURS ==========\r\n  const colors = useMemo(() => {\r\n    return isDarkTheme \r\n      ? {\r\n          // Palette de couleurs pour le thème sombre\r\n          background: '#121212',\r\n          surface: '#1E1E1E',\r\n          primary: '#BB86FC',\r\n          primaryDark: '#9F66EB',\r\n          secondary: '#03DAC6',\r\n          accent: '#CF6679',\r\n          error: '#CF6679',\r\n          text: '#FFFFFF',\r\n          textSecondary: '#B0B0B0',\r\n          border: '#2C2C2C',\r\n          divider: '#2C2C2C',\r\n          disabled: '#666666',\r\n          icon: '#FFFFFF',\r\n\r\n          // Couleurs spécifiques au niveau\r\n          level: {\r\n            A1: '#3b82f6',\r\n            A2: '#8b5cf6', \r\n            B1: '#10b981',\r\n            B2: '#f59e0b',\r\n            C1: '#ef4444',\r\n            C2: '#6366f1',\r\n          }\r\n        }\r\n      : {\r\n          // Palette de couleurs pour le thème clair\r\n          ...COLORS,\r\n\r\n          // Couleurs spécifiques au niveau\r\n          level: {\r\n            A1: '#3b82f6',\r\n            A2: '#8b5cf6', \r\n            B1: '#10b981',\r\n            B2: '#f59e0b',\r\n            C1: '#ef4444',\r\n            C2: '#6366f1',\r\n          }\r\n        };\r\n  }, [isDarkTheme]);\r\n\r\n  // ========== 🚨 MÉMORISER ESPACEMENT ==========\r\n  const spacing = useMemo(() => ({\r\n    xs: 4,\r\n    sm: 8,\r\n    md: 16,\r\n    lg: 24,\r\n    xl: 32,\r\n    xxl: 48,\r\n  }), []);\r\n\r\n  // ========== 🚨 MÉMORISER TYPOGRAPHIE ==========\r\n  const typography = useMemo(() => ({\r\n    fontSizes: {\r\n      xs: 12,\r\n      sm: 14,\r\n      md: 16,\r\n      lg: 18,\r\n      xl: 20,\r\n      xxl: 24,\r\n      xxxl: 30,\r\n    },\r\n    fontWeights: {\r\n      light: '300',\r\n      regular: '400',\r\n      medium: '500',\r\n      semibold: '600',\r\n      bold: '700',\r\n    },\r\n    lineHeights: {\r\n      tight: 1.2,\r\n      normal: 1.5,\r\n      loose: 1.8,\r\n    },\r\n  }), []);\r\n\r\n  // ========== 🚨 MÉMORISER BORDER RADIUS ==========\r\n  const borderRadius = useMemo(() => ({\r\n    sm: 4,\r\n    md: 8,\r\n    lg: 12,\r\n    xl: 16,\r\n    round: 9999,\r\n  }), []);\r\n\r\n  // ========== 🚨 MÉMORISER OMBRES ==========\r\n  const shadows = useMemo(() => {\r\n    return isDarkTheme \r\n      ? {\r\n          sm: {\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 0, height: 1 },\r\n            shadowOpacity: 0.2,\r\n            shadowRadius: 2,\r\n            elevation: 2,\r\n          },\r\n          md: {\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 0, height: 2 },\r\n            shadowOpacity: 0.3,\r\n            shadowRadius: 4,\r\n            elevation: 4,\r\n          },\r\n          lg: {\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 0, height: 3 },\r\n            shadowOpacity: 0.4,\r\n            shadowRadius: 6,\r\n            elevation: 6,\r\n          },\r\n        }\r\n      : {\r\n          sm: {\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 0, height: 1 },\r\n            shadowOpacity: 0.1,\r\n            shadowRadius: 2,\r\n            elevation: 2,\r\n          },\r\n          md: {\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 0, height: 2 },\r\n            shadowOpacity: 0.15,\r\n            shadowRadius: 4,\r\n            elevation: 4,\r\n          },\r\n          lg: {\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 0, height: 3 },\r\n            shadowOpacity: 0.2,\r\n            shadowRadius: 6,\r\n            elevation: 6,\r\n          },\r\n        };\r\n  }, [isDarkTheme]);\r\n\r\n  // ========== 🚨 MÉMORISER LA VALEUR DU CONTEXTE ==========\r\n  const contextValue = useMemo(() => ({\r\n    theme,\r\n    setTheme: setAppTheme,\r\n    toggleTheme,\r\n    resetToSystemTheme,\r\n    isDarkTheme,\r\n    colors,\r\n    spacing,\r\n    typography,\r\n    borderRadius,\r\n    shadows,\r\n    loaded,\r\n  }), [\r\n    theme,\r\n    setAppTheme,\r\n    toggleTheme,\r\n    resetToSystemTheme,\r\n    isDarkTheme,\r\n    colors,\r\n    spacing,\r\n    typography,\r\n    borderRadius,\r\n    shadows,\r\n    loaded,\r\n  ]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={contextValue}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContext;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\assessment\\assessmentsA1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\assessment\\assessmentsA2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\assessment\\assessmentsB1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\assessment\\assessmentsB2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\assessment\\assessmentsC1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\assessment\\assessmentsC2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\scenarios\\askingDirections.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\scenarios\\bankBasics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\scenarios\\coffeeShop.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\scenarios\\doctorVisit.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\scenarios\\greetingsBasics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\scenarios\\hotelCheckIn.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\scenarios\\restaurantReservation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\scenarios\\shoppingClothes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\scenarios\\supermarketShopping.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A1\\scenarios\\transportPublic.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\apartmentViewing.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\atTheDoctorSpecialist.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\atTheRestaurant.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\gettingDirectionsDetailed.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\jobInterview.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\makingAppointments.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\meetingFriendOfFriend.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\phoneProblems.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\shoppingClothes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\talkingAboutHobbies.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\travelPlanning.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\A2\\scenarios\\weatherAndSeasons.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\businessMeeting.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\complainingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\culturalDifferences.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\describingIllness.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\discussingMovies.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\discussingNews.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\educationChoices.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\environmentalIssues.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\explainProblemIT.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\healthAndFitness.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\jobApplicationCall.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\makingComplaint.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\planningEvent.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\rentingCar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B1\\scenarios\\travelExperiences.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\academicDiscussion.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\artCriticism.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\culturalIntegration.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\debateCurrentTopic.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\diplomacyDisagreement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\economicDiscussion.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\jobPerformanceReview.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\mediationConflict.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\moralDilemma.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\negotiatingContract.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\persuasiveArgument.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\presentingIdeas.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\psychologicalAnalysis.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\scientificResearch.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\B2\\scenarios\\technicalExplanation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\academicPresentation.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'academicPresentation' is assigned a value but never used.","line":3,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"academicPresentation"},"fix":{"range":[49,82321],"text":""},"desc":"Remove unused variable 'academicPresentation'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// chatbot/C1/scenarios/academicPresentation.js\n\nconst academicPresentation = {\n  id: 7,\n  title: \"Academic Presentation\",\n  level: \"C1\",\n  description: \"Deliver a sophisticated academic presentation on complex research findings, using appropriate academic language, logical structure, and effective rhetorical techniques to engage with a knowledgeable audience.\",\n  estimatedTime: \"35-40 minutes\",\n  vocabulary: [\"methodology\", \"theoretical framework\", \"empirical evidence\", \"statistically significant\", \"correlation\", \"causation\", \"interdisciplinary approach\", \"paradigm shift\", \"underlying mechanisms\", \"longitudinal study\", \"meta-analysis\", \"conceptual model\", \"implications\", \"epistemology\", \"quantitative assessment\"],\n  steps: [\n    {\n      id: 1,\n      botMessage: \"Welcome to our academic conference on sustainable urban development. You're scheduled to present your research on the relationship between urban density and transportation-related carbon emissions. Could you begin by introducing your research topic, its significance, and your main research questions?\",\n      inputMode: \"freeText\",\n      suggestions: [\n        \"Thank you, chairperson, and good morning distinguished colleagues. My presentation today examines the complex relationship between urban density configurations and transportation-related carbon emissions across diverse metropolitan contexts. This research addresses a critical gap in our understanding of how specific density patterns—beyond simple aggregate measures—influence mobility-related emissions through multiple causal pathways. While previous research has established general correlations between higher density and lower emissions, these studies have often relied on overly simplistic density metrics and failed to adequately account for contextual factors that moderate this relationship. The significance of this work lies in its potential to inform evidence-based urban planning policies aimed at emissions reduction through optimized density configurations rather than through blanket densification approaches that may prove ineffective or counterproductive in certain contexts. Our research was guided by three primary questions: First, how do different typologies of urban density—including mixed-use, polycentricity, and transit-oriented configurations—affect transportation mode choice and associated carbon emissions? Second, to what extent do socioeconomic, infrastructural, and governance factors moderate the relationship between density patterns and emissions outcomes? And third, what density optimization strategies offer the most promising pathways for emissions reduction while maintaining urban livability and economic vitality? Through answering these questions, we aim to contribute to both theoretical understanding of urban form-transportation dynamics and practical applications for carbon-conscious urban planning across diverse global contexts.\",\n        \"Good morning and thank you for the opportunity to present at this distinguished gathering. My research investigates the nuanced relationship between urban morphological characteristics—with particular emphasis on density distributions—and transportation-related carbon emissions in metropolitan regions. This work addresses a significant research gap: while conventional wisdom suggests a straightforward negative correlation between urban density and carbon emissions, empirical evidence reveals substantial unexplained variance in emissions outcomes among cities with similar aggregate density measures. This inconsistency suggests the presence of complex mediating and moderating factors that previous research has inadequately captured. The significance of this inquiry extends beyond academic discourse, as urban form represents one of the few structural determinants of emissions that can be deliberately shaped through policy interventions, with implications persisting for decades through the built environment's relative permanence. Our research was guided by three interconnected questions: First, how do spatially-differentiated density patterns affect transportation mode choice, trip distances, and resulting emissions across diverse urban typologies? Second, through what specific causal mechanisms does density influence mobility behaviors, and how are these mechanisms conditioned by contextual factors including governance structures, technological availability, and socioeconomic characteristics? Third, what quantifiable thresholds and optimal configurations of density maximize emissions reduction benefits while minimizing potential negative externalities such as congestion or affordability challenges? By addressing these questions through a mixed-methods approach, this research contributes to both theoretical understanding of urban sustainability transitions and practical planning applications for low-carbon urban development.\",\n        \"Distinguished colleagues, thank you for the opportunity to share my research examining the relationship between urban density configurations and transportation-related carbon emissions. This investigation addresses a critical knowledge gap in sustainable urban planning—specifically, our limited understanding of how different density patterns influence mobility-related emissions through various causal pathways and contextual interactions. While substantial literature documents correlations between higher density and reduced vehicular travel, these studies frequently employ aggregate density measures that obscure crucial spatial variations and contextual dependencies. Furthermore, they often rely on cross-sectional data that inadequately capture dynamic adaptation processes as density patterns evolve. The significance of this research lies in its potential to identify optimized density configurations that can substantially reduce transportation emissions while supporting other urban sustainability objectives. This matters because urban morphological characteristics represent enduring determinants of mobility patterns, with infrastructure and development decisions locking in emission trajectories for decades. My investigation was structured around three primary research questions: First, how do specific typologies of density distribution—including monocentric, polycentric, corridor-based, and mixed-use configurations—impact mode choice, trip length, and resulting emissions across different metropolitan contexts? Second, what socio-technical factors moderate the density-emissions relationship, including transportation infrastructure, technological availability, governance structures, and cultural preferences? Third, what methodological approaches can more accurately model and predict the emissions impacts of density-focused planning interventions, accounting for both direct effects and complex system interactions? Through addressing these questions, this research aims to advance both theoretical understanding of urban form-transportation relationships and provide actionable guidance for carbon-conscious metropolitan planning.\"\n      ],\n      hints: \"Introduce your research topic on urban density and emissions, explaining its significance and main research questions with appropriate academic language.\",\n      expectedKeywords: [\"research\", \"urban density\", \"emissions\", \"relationship\", \"significance\", \"questions\", \"carbon\", \"transportation\", \"investigate\", \"understanding\", \"sustainable\"],\n      feedback: {\n        correct: \"Thank you for that excellent introduction. You've clearly established the importance of your research and your key questions. Could you now explain your theoretical framework and methodology, including data sources and analytical approaches used in your study?\",\n        partial: \"Thank you for introducing your research topic. Could you elaborate further on the specific research questions guiding your study and why this research is significant within the context of sustainable urban development?\",\n        incorrect: \"Thank you for your willingness to present. However, I'd like you to more specifically introduce your research on urban density and transportation-related carbon emissions, explaining why this research matters and what specific questions you aimed to address.\"\n      }\n    },\n    {\n      id: 2,\n      botMessage: \"Thank you for that excellent introduction. Could you now explain your theoretical framework and methodology, including data sources and analytical approaches used in your study?\",\n      inputMode: \"hybrid\",\n      suggestions: [\n        \"My research is grounded in a theoretical framework that integrates urban morphology theory...\",\n        \"Our research is anchored in a theoretical framework that synthesizes principles from urban systems theory...\",\n        \"The theoretical foundation of this research integrates insights from three complementary perspectives...\"\n      ],\n      hints: \"Explain your theoretical framework that guides the research and your methodology including data sources, analytical approaches, and how you conducted the study.\",\n      expectedKeywords: [\"theoretical framework\", \"methodology\", \"data\", \"analysis\", \"approach\", \"sources\", \"quantitative\", \"qualitative\", \"research design\", \"methods\", \"study\"],\n      acceptablePhrases: [\n        \"theoretical framework\",\n        \"methodologically\",\n        \"mixed-methods\",\n        \"data sources\",\n        \"analysis\",\n        \"dataset\",\n        \"analytical approaches\",\n        \"research design\",\n        \"case studies\",\n        \"is grounded in\",\n        \"integrated framework\"\n      ],\n      feedback: {\n        correct: \"Thank you for that comprehensive explanation of your theoretical framework and methodology. Now, could you present the key findings from your research? What significant relationships did you identify between urban density configurations and transportation-related carbon emissions?\",\n        partial: \"Thank you for explaining some aspects of your approach. Could you provide more specific details about your methodology, including how you collected and analyzed data to answer your research questions?\",\n        incorrect: \"I would like you to explain more specifically the theoretical framework guiding your research and the methodological approaches you used, including your data sources and analytical techniques.\"\n      }\n    },\n    {\n      id: 3,\n      botMessage: \"Thank you for that comprehensive explanation of your theoretical framework and methodology. Now, could you present the key findings from your research? What significant relationships did you identify between urban density configurations and transportation-related carbon emissions?\",\n      inputMode: \"freeText\",\n      suggestions: [\n        \"Our research yielded several significant findings that both confirm existing theoretical predictions and reveal previously unidentified nuances in the relationship between urban density configurations and transportation emissions. First, our analysis confirmed the general negative correlation between overall urban density and per capita transportation emissions, with an average 11.3% reduction in emissions associated with each doubling of metropolitan population density. However, this aggregate relationship masks substantial variation explained by specific density configuration characteristics. Most significantly, we found that the spatial distribution of density matters more than aggregate density measures. Polycentric configurations with well-connected high-density nodes demonstrated 23-37% lower transportation emissions compared to monocentric structures with equivalent aggregate density, primarily due to more efficient trip distribution patterns and reduced cross-metropolitan commuting. Second, our analysis revealed critical threshold effects and non-linear relationships that challenge conventional density-emissions models. We identified minimum density thresholds required for significant modal shifts: approximately 35 persons per hectare for substantial public transit utilization and 70 persons per hectare for significant non-motorized transportation adoption. However, beyond these thresholds, additional density increases yielded diminishing returns, with minimal emission benefits observed beyond 150 persons per hectare unless accompanied by corresponding transportation infrastructure investments. Third, we found that density diversification—the strategic intensification of previously low-density areas rather than further densification of already-dense areas—produced greater emission reductions than uniform densification approaches. Metropolitan regions implementing targeted densification of suburban nodes demonstrated average emissions reductions of 14.7% over the study period, compared to just 6.2% for regions pursuing centralized densification strategies. Fourth, our case studies revealed that the emissions benefits of increased density are highly contingent on supportive policy and infrastructure contexts. Density increases accompanied by parking restrictions, transit service improvements, and mixed-use zoning generated 2.8 times greater emissions reductions than density increases implemented without such complementary measures. Fifth, our findings indicate significant temporal dynamics in the density-emissions relationship. Newly densified areas demonstrated a lag effect, with full emissions benefits manifesting only 7-9 years after densification as travel behaviors and local services gradually adapted to new urban forms. These findings collectively suggest that optimizing density configurations for emissions reduction requires context-sensitive approaches focused on strategic polycentricity, targeted threshold achievement, and integrated policy packages rather than simplistic aggregate densification.\",\n        \"Our analysis revealed several key findings that significantly advance understanding of the relationship between urban density patterns and transportation-related carbon emissions. First, while confirming the general negative correlation between density and emissions, our research demonstrates that the spatial configuration of density is more determinative than aggregate density values. Specifically, polycentric development patterns with distributed density nodes connected by high-capacity transit corridors demonstrated 28-42% lower per capita transportation emissions compared to monocentric configurations with equivalent overall density values. This advantage stems primarily from optimized trip distribution patterns that reduce average travel distances while maintaining agglomeration benefits. Second, our research identified distinct emission impact pathways associated with different density typologies. Transit-oriented density clusters produced the largest modal shift effects, reducing car dependency by an average of 38% within their catchment areas. In contrast, mixed-use densification generated the greatest trip length reductions, decreasing average trip distances by 23-31% even when mode share remained relatively stable. These differentiated effects suggest that strategic combinations of density typologies offer greater emission reduction potential than uniform approaches. Third, our analysis revealed critical contextual dependencies that moderate the density-emissions relationship. The emissions benefits of increased density were amplified by 2.3-3.1 times in contexts with supportive conditions including coordinated land-use and transportation planning, progressive parking policies, high fuel taxation, and cycling/pedestrian infrastructure provision. Conversely, in contexts with misaligned policies—particularly abundant parking, disconnected street networks, and segregated land uses—density increases yielded minimal or even negative emission outcomes due to congestion effects. Fourth, our longitudinal analysis demonstrated significant temporal dynamics, with an average implementation lag of 6-8 years before density interventions achieved their full emission reduction potential. This lag reflects the time required for behavioral adaptation, local service development, and supporting infrastructure implementation. Fifth, through comparative institutional analysis, we identified governance arrangements that enable effective density interventions. Metropolitan regions with integrated regional planning authorities demonstrated significantly more successful density optimization strategies than those with fragmented municipal governance, achieving average emissions reductions of 26% versus 9% over the study period, even controlling for demographic and economic factors. These findings collectively indicate that optimizing urban density for climate mitigation requires sophisticated configuration strategies rather than simple intensification, with particular attention to polycentric development, typological diversity, policy coherence, implementation timeframes, and governance integration.\",\n        \"Our research yielded five principal findings that significantly advance understanding of how urban density configurations influence transportation-related carbon emissions. First, our quantitative analysis revealed that the spatial distribution pattern of density has greater explanatory power for emissions outcomes than aggregate density values alone. Specifically, we found that continuous density corridors along transit lines demonstrated 31-47% lower per capita transportation emissions compared to isolated high-density clusters with equivalent overall density, primarily due to enhanced transit viability and improved accessibility distribution. This finding challenges simplistic density-emissions models and emphasizes the importance of coordinated transportation-land use planning. Second, our analysis identified critical threshold effects in the density-emissions relationship. Emissions reductions accelerated significantly at density levels that enabled major modal shifts: approximately 32 persons per hectare for basic transit service viability and 67 persons per hectare for substantial walking/cycling adoption. However, we also observed diminishing returns at extreme density levels, with minimal additional benefits beyond 180 persons per hectare and potential disbenefits including congestion and localized pollution concentration in ultra-high-density contexts lacking appropriate infrastructure. Third, our comparative case studies revealed that density diversification—specifically, the strategic development of mixed-use subcenters in previously homogeneous residential areas—yielded greater emission reductions than either centralized or distributed densification approaches. Metropolitan regions implementing such diversification strategies demonstrated average emissions reductions of 18.2% over the study period, compared to 11.7% for conventional densification approaches, primarily through reduced trip lengths and improved local service provision. Fourth, our structural equation modeling identified significant indirect effects through which density influences emissions. While direct effects through trip length reduction and mode shift accounted for approximately 60% of observed emissions impacts, indirect effects—including enhanced electric vehicle feasibility in dense areas, shared mobility service viability, and efficiency gains in goods delivery—collectively contributed the remaining 40% of emissions benefits. Fifth, our institutional analysis demonstrated that the emission benefits of optimal density configurations are highly contingent on governance capacity. Metropolitan regions with unified planning authorities achieved 2.7 times greater emissions reductions from density interventions compared to regions with fragmented municipal governance, controlling for socioeconomic factors. These findings collectively suggest that optimizing urban form for climate mitigation requires sophisticated, context-sensitive approaches to density that prioritize transit-supportive configurations, strategic mixed-use development, and integrated governance rather than simplistic densification targets.\"\n      ],\n      hints: \"Present your key research findings regarding the relationship between urban density configurations and transportation emissions, focusing on significant patterns, relationships, and insights.\",\n      expectedKeywords: [\"findings\", \"revealed\", \"relationship\", \"analysis\", \"significant\", \"reduction\", \"configurations\", \"compared\", \"patterns\", \"effects\", \"identified\"],\n      feedback: {\n        correct: \"These findings provide valuable insights into the complexity of urban density and emissions relationships. Could you now discuss the implications of your research for urban planning policy and practice? What recommendations would you make to policymakers and urban planners based on your findings?\",\n        partial: \"Thank you for sharing some of your findings. Could you elaborate more specifically on the significant relationships you identified between different urban density configurations and transportation-related carbon emissions?\",\n        incorrect: \"I'd like you to focus more directly on presenting the key findings from your research, specifically addressing what significant relationships you identified between urban density configurations and transportation-related carbon emissions.\"\n      }\n    },\n    {\n      id: 4,\n      botMessage: \"These findings provide valuable insights into the complexity of urban density and emissions relationships. Could you now discuss the implications of your research for urban planning policy and practice? What recommendations would you make to policymakers and urban planners based on your findings?\",\n      inputMode: \"hybrid\",\n      suggestions: [\n        \"Our findings have several significant implications for urban planning policy and practice, yielding recommendations across multiple governance levels. First, regarding metropolitan structure planning, our research strongly supports polycentric development strategies with connected, transit-oriented density nodes rather than either monocentric intensification or dispersed densification. We recommend that regional planning authorities identify strategic node-corridor networks where density can be concentrated to maximize emissions reduction potential, particularly focusing on areas with existing or planned high-capacity transit infrastructure. These nodes should be developed with minimum density thresholds of approximately 35-40 persons per hectare to enable viable transit service and substantial mode shifting. Second, our findings challenge conventional zoning practices that emphasize density without addressing its spatial configuration and functional characteristics. We recommend implementing performance-based zoning approaches that specify desired accessibility outcomes and mobility patterns rather than simple density targets, potentially through metrics like \\\"15-minute neighborhood\\\" criteria that emphasize mixed-use development and multimodal connectivity. Third, our research indicates that coordinated policy packages significantly outperform isolated density interventions. We recommend that municipalities adopt integrated implementation strategies that combine density increases with complementary measures including parking maximums rather than minimums, elimination of minimum lot sizes, removal of single-family zoning restrictions, and investment in pedestrian/cycling infrastructure networks that connect density nodes. Fourth, our findings regarding temporal dynamics suggest the need for staged implementation strategies. We recommend that planning authorities develop phased densification schedules that align with incremental transit service improvements and allow for gradual adaptation of travel behaviors and local service provision, rather than expecting immediate emissions benefits from density interventions. Fifth, our research highlights significant governance challenges in optimizing density configurations. We recommend creating metropolitan-scale planning authorities with mandate to coordinate density strategies across municipal boundaries, potentially through incentive structures that reward municipalities for contributing to regional emissions reduction through strategic densification. Finally, our findings regarding contextual dependencies suggest the need for adaptive planning approaches. Rather than prescribing universal density solutions, we recommend that planners develop context-sensitive typologies based on existing urban form, transportation infrastructure, governance capacity, and socioeconomic characteristics, with different density configuration strategies appropriate to different urban contexts. By implementing these recommendations, urban areas can more effectively leverage density as a tool for transportation emissions reduction while simultaneously advancing other sustainability objectives including affordability, livability, and resilience.\",\n\n        \"Our research generates several significant implications for urban planning policy and practice, informing recommendations across strategic, regulatory, and implementation dimensions. At the strategic planning level, our findings strongly support transit-oriented corridor development rather than either isolated density clusters or uniform densification approaches. We recommend that metropolitan planning organizations identify and designate strategic transit corridors where density can be concentrated to maximize emissions reduction potential, with particular emphasis on connecting major employment centers, institutional anchors, and commercial districts. Within these corridors, development should meet minimum density thresholds (approximately 35 persons per hectare) necessary to support high-frequency transit service and enable significant mode shifting. Beyond transit corridors, we recommend implementing a hierarchy of density nodes with density levels calibrated to their position within the metropolitan accessibility network rather than arbitrary intensification targets. At the regulatory level, our findings challenge conventional Euclidean zoning practices that separate uses and impose arbitrary density limits. We recommend implementing form-based codes that emphasize building typologies and street connectivity rather than use restrictions, particularly allowing neighborhood-scale commercial activities within previously residential-only zones to reduce trip requirements. Additionally, municipalities should reform parking requirements, shifting from minimum to maximum standards in areas targeted for strategic densification, with parking fees calibrated to reflect the true cost of land consumption and induced vehicle travel. At the project implementation level, our research underscores the importance of fine-grained urban design considerations that significantly moderate the density-emissions relationship. We recommend that development approval processes incorporate multimodal accessibility assessments that evaluate projects based on their contribution to low-carbon mobility patterns rather than conventional traffic impact analyses focused solely on vehicle throughput. Regarding governance, our findings highlight the critical role of coordination across jurisdictional boundaries. We recommend establishing metropolitan transportation-land use coordination authorities with meaningful power to align density configurations with transportation infrastructure investments, potentially through incentive funding mechanisms that reward municipalities for implementing regionally-optimal density patterns. Finally, regarding implementation sequencing, our research indicates the importance of coordinated, long-term approaches. We recommend that planning authorities develop 15-20 year strategic densification plans with explicit emissions reduction targets, coordinated infrastructure investment schedules, and monitoring frameworks to assess progress and enable adaptive management as travel patterns evolve in response to density changes.\",\n\n        \"Our findings yield several practical implications for urban planning policy and practice, translating into actionable recommendations across multiple dimensions of urban governance. First, regarding spatial planning strategies, our research strongly supports networked polycentricity rather than either centralized intensification or dispersed densification. We recommend that metropolitan planning authorities identify strategic networks of connected subcenters where density can be concentrated to optimize accessibility while minimizing travel distances. These networks should be configured as \\\"transit metropolises\\\" with development intensity proportional to transit capacity and network centrality, rather than implementing uniform density targets across metropolitan regions. Within this framework, municipalities should establish minimum density thresholds of 35-70 persons per hectare (varying based on transit service levels) in designated development nodes to enable viable transportation alternatives to private vehicles. Second, our findings challenge regulatory approaches focusing exclusively on residential density. We recommend implementing mixed-use zoning reforms that enable fine-grained functional integration, particularly emphasizing employment-housing balance within subregional areas and neighborhood-scale commercial activities within residential zones. These regulatory reforms should be complemented by revised parking policies that establish maximum rather than minimum requirements in strategic densification areas, with particular emphasis on reducing parking near high-capacity transit nodes to discourage automobile dependency. Third, regarding implementation mechanisms, our research indicates the critical importance of coordinated public investments to catalyze density reconfiguration. We recommend that municipalities align infrastructure investment priorities—particularly transit service improvements, pedestrian/cycling network development, and public space enhancements—with designated densification areas to create the supportive conditions necessary for meaningful travel behavior changes. These investments should precede or coincide with density increases rather than following development, establishing mobility alternatives before travel patterns become automobile-dependent. Fourth, our findings regarding governance challenges suggest the need for institutional innovations. We recommend establishing metropolitan-scale implementation partnerships with representation from transportation authorities, municipal planning departments, and regional governance bodies to coordinate density optimization strategies across jurisdictional boundaries. These partnerships should have meaningful authority over both transportation investments and land-use decisions to overcome the fragmentation that has undermined previous emissions reduction efforts. Finally, regarding monitoring and adaptation, our research highlights the importance of evidence-based implementation. We recommend that planning authorities establish robust monitoring frameworks using accessibility metrics, travel behavior indicators, and emissions measurements to track the performance of density interventions and enable adaptive management as implementation proceeds.\"\n      ],\n      hints: \"Discuss the implications of your findings for urban planning policy and practice, providing specific recommendations for policymakers and planners based on your research.\",\n      expectedKeywords: [\"implications\", \"recommendations\", \"policy\", \"planning\", \"practice\", \"findings\", \"strategies\", \"implementation\", \"governance\", \"development\", \"approach\"],\n      acceptablePhrases: [\n        \"implications for urban planning\",\n        \"we recommend\",\n        \"our research indicates\",\n        \"our findings suggest\",\n        \"strongly supports\",\n        \"should implement\",\n        \"planning authorities should\"\n      ],\n      feedback: {\n        correct: \"Thank you for those thoughtful policy recommendations. As we move toward the conclusion of your presentation, could you address the limitations of your study and suggest directions for future research in this area?\",\n        partial: \"You've outlined some policy implications of your work. Could you develop more specific, actionable recommendations for urban planners and policymakers based directly on your key findings?\",\n        incorrect: \"Please provide more specific implications of your research for urban planning policy and practice, with clear recommendations for policymakers and urban planners that follow directly from your findings.\"\n      }\n    },\n    {\n      id: 5,\n      botMessage: \"Thank you for those thoughtful policy recommendations. As we move toward the conclusion of your presentation, could you address the limitations of your study and suggest directions for future research in this area?\",\n      inputMode: \"freeText\",\n      suggestions: [\n        \"While our research provides valuable insights into the relationship between urban density configurations and transportation emissions, several limitations must be acknowledged. First, methodological constraints affected our analysis. Despite our comprehensive dataset, cross-sectional elements of our study limit causal inference capabilities. Although we employed statistical controls and case study approaches to strengthen causal arguments, truly experimental research designs remain infeasible in urban contexts. Additionally, data inconsistencies across jurisdictions required normalization procedures that potentially introduced measurement error, particularly regarding emissions accounting methodologies and boundary definitions for metropolitan areas. Second, scope limitations restricted our investigation. Our focus on transportation emissions excluded consideration of embodied energy in urban infrastructure and buildings, which represents a significant component of urban carbon footprints. Similarly, our emphasis on spatial configuration overlooked temporal dynamics of urban activity patterns—increasingly important as work arrangements become more flexible. Third, contextual specificity constrains generalizability. Despite our diverse sample, most data originated from high and middle-income countries, limiting applicability to rapidly urbanizing regions in low-income contexts where the most significant urban development will occur in coming decades. These limitations suggest several promising directions for future research. First, longitudinal studies tracking emissions impacts as density patterns evolve would strengthen causal understanding of the mechanisms identified in our research. Particularly valuable would be natural experiment approaches leveraging significant transit infrastructure investments or zoning reforms to isolate density effects through difference-in-difference methodologies. Second, integrated assessment approaches that combine transportation emissions with building and infrastructure lifecycle analysis would provide more comprehensive understanding of how density configurations affect overall urban carbon footprints. Third, microsimulation studies modeling individual mobility decisions within different density configurations could illuminate behavioral mechanisms underlying observed patterns and enable more sophisticated scenario modeling. Fourth, research specifically examining transferability of identified principles to diverse global contexts, particularly rapidly urbanizing regions in Africa and Asia, would enhance practical applicability of findings. Finally, interdisciplinary research integrating urban morphology with emerging technological transitions—particularly vehicle electrification, autonomous mobility, and virtual interaction substituting for physical travel—would address critical questions about how density-emissions relationships might evolve in future socio-technical contexts. These research directions would address key knowledge gaps while building upon the foundation established by our current findings.\",\n        \"Despite the significant findings of our research, several important limitations must be acknowledged. First, data constraints affected our analysis in multiple ways. While our dataset represents the most comprehensive compilation to date of comparable cross-metropolitan density and emissions indicators, significant measurement challenges remain. Emissions data relied on varying methodologies across jurisdictions, requiring harmonization procedures that potentially introduced systemic error. Similarly, our density characterization metrics, while multidimensional, could not fully capture qualitative aspects of urban form such as design quality, microaccessibility features, and aesthetic characteristics that likely moderate travel behavior responses to density. Second, our analytical approach faced inherent limitations. The predominantly cross-sectional nature of our quantitative analysis, despite partial longitudinal components, constrains causal inference capabilities. While our mixed-methods design strengthened internal validity through triangulation, the fundamental challenge of isolating density effects from other concurrent urban phenomena remains. Additionally, our statistical models, though robust, cannot fully account for potential endogeneity between density configurations and transportation infrastructure investments, as these decisions are often simultaneously determined through planning processes. Third, our research scope necessarily excluded several relevant dimensions. We focused primarily on passenger transportation, with limited attention to freight movement and logistics systems that contribute significantly to urban emissions profiles. Furthermore, our emissions accounting addressed operational transportation emissions without fully incorporating lifecycle emissions from vehicle manufacturing or infrastructure construction that may vary with density patterns. These limitations suggest several promising directions for future research. First, dedicated longitudinal studies tracking emissions outcomes as density patterns evolve would significantly strengthen causal understanding. Particularly valuable would be research designs leveraging natural policy experiments such as major upzoning initiatives or transit infrastructure investments to isolate density effects using quasi-experimental methods. Second, integrated studies examining interactions between density configurations and emerging transportation technologies—particularly electrification, shared mobility, and autonomous vehicles—would illuminate how the relationships we identified might evolve in future socio-technical contexts. Third, research specifically addressing governance challenges in implementing optimal density configurations would bridge the gap between theoretical understanding and practical implementation. This should include comparative institutional analyses of successful metropolitan coordination mechanisms and implementation pathways in different governance contexts. Fourth, expanded geographical coverage examining density-emissions relationships in rapidly urbanizing regions of the Global South would address critical generalizability limitations of current findings. Finally, agent-based modeling approaches could advance theoretical understanding by simulating emergent emissions patterns resulting from individual mobility decisions within different density configurations, potentially revealing non-linear effects and system dynamics not captured in statistical approaches.\",\n        \"Our research, while advancing understanding of density-emissions relationships, contains several noteworthy limitations that should inform interpretation of our findings and future research directions. First, methodological constraints affect our conclusions in important ways. Our mixed-methods approach, while comprehensive, relies substantially on observational data and retrospective analysis rather than experimental design, limiting causal inference despite statistical controls. The heterogeneity of data sources across metropolitan regions required harmonization procedures that potentially obscured context-specific nuances, particularly regarding emissions accounting methods and built environment characterization. Additionally, our quantitative models, though sophisticated, cannot fully capture complex feedback mechanisms between transportation infrastructure investments and land use evolution that likely moderate the density-emissions relationship over time. Second, temporal limitations affect our findings' prospective applicability. Most data represent pre-pandemic urban patterns, potentially overlooking structural shifts in work arrangements and mobility preferences that may fundamentally alter how density influences travel behavior. Even our longitudinal components cover relatively short timeframes (15 years maximum) compared to the multi-decade implementation horizons of density reconfiguration strategies. Third, our analytical framework necessarily simplifies complex sociocultural dimensions of urban mobility. While we controlled for socioeconomic factors, deeper cultural and psychological determinants of transportation choices—including status associations with different modes, safety perceptions, and embodied habits—received limited attention despite potentially mediating density effects on travel behavior. These limitations suggest several valuable directions for future research. First, dedicated studies examining causal mechanisms through natural experiment approaches would strengthen understanding of how specific density interventions affect mobility patterns. Research designs leveraging major transit-oriented development initiatives, significant zoning reforms, or neighborhood-scale densification projects could isolate density effects through difference-in-difference methodologies and intervention studies. Second, expanded temporal analyses tracking emissions trajectories as density patterns evolve over decades rather than years would illuminate longer-term adaptation processes and potential non-linear effects that emerge as urban systems reach critical thresholds. Third, research explicitly addressing transferability challenges would enhance practical applicability, particularly studies examining how density-emissions relationships manifest in rapidly urbanizing regions of the Global South where urban form is still emerging and transportation systems remain fluid. Fourth, integrated studies examining interactions between urban form and technological transitions—particularly vehicle electrification, micromobility adoption, and potential autonomous vehicle deployment—would illuminate how density-emissions relationships might evolve in changing socio-technical contexts. Finally, research specifically addressing implementation pathways—including governance innovations, financing mechanisms, and equity considerations in density reconfiguration—would bridge the gap between theoretical understanding and practical application, addressing the critical question of how optimal density configurations can be achieved within complex political and institutional contexts.\"\n      ],\n      hints: \"Address the limitations of your study and suggest specific directions for future research that would extend understanding of urban density and emissions relationships.\",\n      expectedKeywords: [\"limitations\", \"future research\", \"constraints\", \"methodology\", \"challenges\", \"suggest\", \"directions\", \"extend\", \"despite\", \"further\", \"understanding\"],\n      feedback: {\n        correct: \"Thank you for addressing the limitations and future research directions so thoroughly. To conclude your presentation, could you summarize the main contributions of your research and its significance for advancing sustainable urban development?\",\n        partial: \"You've identified some limitations of your study. Could you elaborate more on specific directions for future research that would address these limitations and advance understanding in this field?\",\n        incorrect: \"I'd like you to more directly address the specific limitations of your study methodology and suggest concrete directions for future research that would build on your findings.\"\n      }\n    },\n    {\n      id: 6,\n      botMessage: \"Thank you for addressing the limitations and future research directions so thoroughly. To conclude your presentation, could you summarize the main contributions of your research and its significance for advancing sustainable urban development?\",\n      inputMode: \"hybrid\",\n      suggestions: [\n        \"In conclusion, our research makes several significant contributions to both theoretical understanding and practical approaches to sustainable urban development. First, we advance conceptual frameworks regarding urban form-transportation relationships by demonstrating that the spatial configuration of density matters more than aggregate density values—shifting emphasis from simple intensification toward strategic optimization of density patterns. Our multidimensional characterization of density distributions and their differential impacts provides a more sophisticated foundation for analyzing urban morphology's influence on mobility patterns than previous research using one-dimensional density metrics. Second, our identification of specific causal pathways, threshold effects, and contextual dependencies transforms understanding of how density influences transportation emissions from simplistic correlations to nuanced system dynamics. This enhanced mechanistic understanding enables more precise interventions targeting specific pathways rather than general densification approaches. Third, our mixed-methods approach integrating quantitative analysis with comparative case studies provides methodological innovation for studying complex urban systems, demonstrating how triangulation between statistical patterns and context-specific processes can overcome limitations of either approach in isolation. Fourth, our findings regarding the superior performance of polycentric, transit-oriented density configurations offer an evidence-based alternative to both compact city and dispersed development models, potentially resolving longstanding tensions between centralization and decentralization advocates by identifying configurations that capture benefits from both approaches. The significance of these contributions extends beyond academic discourse to practical advancement of sustainable urban development in several ways. Our research provides evidence-based guidance for metropolitan planning organizations seeking to align spatial development patterns with climate mitigation objectives, offering specific configuration strategies rather than generic density targets. Our identification of threshold effects and implementation lags addresses crucial questions regarding the sequencing and prioritization of urban interventions, informing both short-term actions and long-term strategic planning. Our findings regarding contextual dependencies and governance challenges highlight the importance of integrated approaches and institutional innovation, demonstrating that technical planning solutions must be complemented by appropriate implementation frameworks. Perhaps most importantly, our research suggests pathways for reconciling environmental, social, and economic objectives in urban development—showing how density configurations optimized for emissions reduction can simultaneously enhance accessibility, reduce infrastructure costs, and improve urban livability when thoughtfully implemented. By advancing both theoretical understanding and practical approaches to sustainable urban form, this research contributes to the urgent challenge of reconciling continued urbanization with climate stabilization objectives.\",\n        \"To conclude, our research makes four primary contributions that significantly advance both academic understanding and practical implementation of sustainable urban development. First, theoretically, we have reconceptualized the density-emissions relationship by moving beyond simplistic correlation models toward a nuanced systems understanding that recognizes multiple causal pathways, threshold effects, contextual dependencies, and feedback mechanisms. This expanded framework illuminates how density influences transportation emissions through diverse mechanisms including trip length reduction, modal shift facilitation, transit viability enhancement, and mobility service transformation—mechanisms that operate with varying strength across different urban contexts. Second, methodologically, our research demonstrates the value of integrated mixed-methods approaches to urban sustainability questions, showing how triangulation between quantitative pattern identification and qualitative process understanding can generate insights inaccessible through either approach alone. Our novel methodological contribution lies particularly in the development of multidimensional density characterization techniques that capture spatial configuration patterns rather than merely aggregate values, enabling more sophisticated analysis of urban morphological influences on mobility behaviors. Third, empirically, our findings provide robust evidence challenging conventional density-centered planning approaches by demonstrating that strategic density configuration—particularly polycentricity, corridor-based development, and functional mixing—yields substantially greater emissions reduction benefits than simple intensification. These empirical insights enable evidence-based refinement of urban form interventions to maximize climate mitigation potential while avoiding counterproductive approaches. Fourth, practically, our research identifies specific, actionable interventions for urban practitioners, including optimal density threshold targets, strategic node-corridor configurations, implementation sequencing recommendations, and governance arrangements that facilitate effective density optimization. The significance of these contributions for advancing sustainable urban development manifests across multiple dimensions. At the environmental level, our findings enable more effective leveraging of urban form as a climate mitigation strategy, potentially reducing the transportation sector's substantial contribution to global emissions. At the social level, our identification of density configurations that simultaneously reduce emissions while enhancing accessibility and affordability demonstrates pathways toward more equitable sustainable development rather than approaches that create environmental-social tradeoffs. At the economic level, our research highlights opportunities for infrastructure cost optimization through strategic density configurations that enable efficient service provision and resource utilization. Most fundamentally, our research advances understanding of how urban density—among the most enduring physical characteristics of human settlements—can be optimized to enhance both environmental performance and human wellbeing, contributing to the urgent challenge of creating urban futures that remain within planetary boundaries while meeting human needs.\",\n        \"In conclusion, our research contributes to sustainable urban development in four fundamental ways—conceptually, methodologically, empirically, and practically. Conceptually, we have advanced theoretical understanding of urban form-mobility relationships by demonstrating that urban density influences transportation emissions through multiple distinct causal pathways moderated by contextual factors rather than through simple aggregate correlations. Our conceptual framework integrating urban morphology, transportation behavior, and institutional analysis provides a more sophisticated foundation for analyzing the complex systems dynamics through which built environment characteristics shape mobility patterns and resulting emissions. Methodologically, our research demonstrates the value of mixed-methods approaches that combine quantitative precision with qualitative depth, particularly our innovative integration of geospatial analytics, statistical modeling, case study analysis, and institutional examination. Our methodological contribution extends to measurement innovation through the development of multidimensional density metrics that capture configurational characteristics rather than simply aggregate values, enabling more nuanced analysis of spatial patterns. Empirically, our findings provide robust evidence regarding specific density configurations that optimize emissions reduction potential, challenging both urban sprawl advocates and simplistic compact city proponents by demonstrating the superior performance of strategically configured polycentric development patterns. These empirical insights refine understanding of urban density's potential contribution to climate mitigation while identifying approaches that minimize unintended consequences or counterproductive outcomes. Practically, our research translates theoretical insights into actionable guidance for urban practitioners through specific recommendations regarding density thresholds, spatial configurations, implementation sequencing, and governance arrangements that maximize emissions reduction potential while advancing other sustainability objectives. The significance of these contributions extends beyond academic advancement to addressing urgent sustainability challenges facing metropolitan regions worldwide. By identifying urban form interventions that can substantially reduce transportation emissions while enhancing accessibility, affordability, and livability, our research demonstrates pathways toward integrated sustainability rather than approaches creating environmental-social tradeoffs. By providing evidence-based guidance for metropolitan planning organizations, our findings enable more effective leveraging of urban form as a climate mitigation strategy, potentially reducing the transportation sector's substantial contribution to global emissions. Most fundamentally, our research advances understanding of how one of the most basic characteristics of human settlements—their spatial organization and intensity of development—can be optimized to enhance both environmental performance and quality of life, contributing to the crucial challenge of creating urban futures that respect planetary boundaries while fostering human flourishing.\"\n      ],\n      hints: \"Summarize your research's main contributions (theoretical, methodological, empirical) and its significance for sustainable urban development practice and policy.\",\n      expectedKeywords: [\"contributions\", \"significance\", \"advance\", \"understanding\", \"sustainable\", \"development\", \"research\", \"findings\", \"theoretical\", \"practical\", \"approach\"],\n      acceptablePhrases: [\n        \"our research makes several significant contributions\",\n        \"we advance\",\n        \"the significance of these contributions\",\n        \"our findings provide\",\n        \"in conclusion\",\n        \"our research contributes\",\n        \"these empirical insights\"\n      ],\n      feedback: {\n        correct: \"Thank you for that excellent summary of your research contributions and significance. Your presentation has provided valuable insights into the complex relationship between urban density configurations and transportation emissions. Are there any questions from the audience that you would like to address?\",\n        partial: \"Thank you for summarizing some aspects of your research. Could you provide a more comprehensive conclusion that addresses both the theoretical contributions of your work and its practical significance for advancing sustainable urban development?\",\n        incorrect: \"To conclude your presentation, please provide a more substantive summary of your research's main contributions to the field and explain its significance for advancing sustainable urban development in practice.\"\n      }\n    },\n    {\n      id: 7,\n      botMessage: \"Thank you for your excellent presentation. We have time for a few questions from the audience. Professor Chen asks: 'Your research emphasizes the importance of polycentric urban configurations. How would you respond to critics who argue that such configurations might actually increase total travel distance compared to monocentric models by creating more complex, cross-city travel patterns?'\",\n      inputMode: \"freeText\",\n      suggestions: [\n        \"Thank you, Professor Chen, for raising this important counterargument to polycentric development. This critique reflects a legitimate theoretical concern grounded in traditional urban economics models that predict travel minimization through central agglomeration. However, our empirical findings directly address this critique through several mechanisms that explain why well-designed polycentric configurations consistently demonstrated lower emissions despite theoretical concerns about increased cross-commuting. First, our research distinguishes between unplanned polycentricity—where employment disperses without coordinated residential development—and strategic polycentricity where employment centers are deliberately paired with residential density and mixed-use development. The former indeed often generates problematic cross-commuting patterns, but the latter enables trip containment within subregional areas. This distinction explains seemingly contradictory results in previous studies. In metropolitan regions implementing strategic polycentricity with coordinated employment-housing development and mixed-use nodes, we observed 23-37% higher rates of subregional trip containment compared to monocentric regions with equivalent populations. Second, our data reveal that monocentric configurations increasingly generate their own long-distance travel patterns as metropolitan regions expand, with peripheral residents facing extreme commute distances to centralized employment. Polycentricity actually mitigates this effect by creating proximity between residential and employment centers in multiple subregions, reducing average trip lengths despite some increase in non-radial travel patterns. Third, our comparative analysis of travel behavior reveals a critical modal dimension often overlooked in this debate: polycentric configurations enable higher rates of non-motorized transportation and transit usage within compact, mixed-use nodes, offsetting any increases in trip complexity through reduced carbon intensity per trip. Quantitatively, we found that residents in well-designed polycentric regions conducted 27-41% more trips by walking, cycling, or transit compared to residents of monocentric regions, even controlling for socioeconomic factors. Finally, our longitudinal analysis demonstrates that polycentricity's benefits increase over time as local service provision develops within nodes, further increasing trip containment through reduced need for long-distance travel to access specialized services. These multiple mechanisms explain why, contrary to theoretical concerns, our empirical evidence consistently shows lower transportation emissions in regions with strategic polycentric development compared to either monocentric or dispersed configurations. However, I would emphasize that these benefits depend on thoughtful implementation—particularly the coordination of employment, housing, and services within nodes, and high-quality transit connections between nodes—rather than simply decentralizing employment without corresponding planning interventions.\",\n\n        \"Thank you for this thought-provoking question, Professor Chen. The concern about polycentric development potentially increasing cross-commuting and total travel distance represents a legitimate theoretical critique grounded in traditional urban economics. However, our empirical findings indicate that this theoretical risk fails to materialize in practice under specific conditions, and I'd like to explain why through several key mechanisms. First, our research distinguishes between what we term \\\"coordinated polycentricity\\\" versus \\\"fragmented polycentricity.\\\" The latter—where employment and housing disperse without strategic alignment—indeed often generates problematic cross-commuting patterns consistent with your concern. However, coordinated polycentricity—characterized by balanced employment-housing development within subcenters and functional complementarity between centers—demonstrates markedly different outcomes. In metropolitan regions with coordinated polycentric structures, we observed average commute distances 17-28% lower than in comparable monocentric regions, directly contradicting the theoretical prediction of increased travel. Second, our analysis indicates that the composition of travel, not just its distance, fundamentally differs between polycentric and monocentric configurations. While monocentric structures concentrate commuting patterns along radial corridors, they frequently generate longer non-work trips as residents travel greater distances to access services and amenities. Conversely, mixed-use polycentric nodes accommodate diverse trip purposes within shorter distances, reducing overall mobility requirements despite more distributed commuting patterns. Our activity-based analysis revealed that residents of well-designed polycentric regions conducted 31-45% more non-work trips within their local subcenter compared to residents of monocentric regions, substantially reducing total travel demand. Third, our research demonstrates critical threshold effects in the relationship between polycentricity and travel patterns. Metropolitan regions must achieve sufficient development intensity within subcenters to enable functional self-sufficiency and trip containment—what we term \\\"complete subcenters\\\" with employment, housing, retail, services, and amenities rather than single-purpose nodes. When subcenters achieve this completeness, cross-commuting decreases as residents find appropriate employment and services within their subregion. Our quantitative analysis identified minimum thresholds of approximately 10,000 jobs and 20,000 residents per subcenter to achieve significant trip containment benefits. Finally, our longitudinal case studies reveal that travel patterns adapt to urban structure over time. While newly established subcenters initially generate complex travel patterns as predicted by critics, these patterns gradually normalize as both residential location choices and employment distributions adjust to the polycentric structure, with increasing trip containment observed over 5-7 year adaptation periods. This temporal dimension explains why cross-sectional studies sometimes support the critique you've raised, while our longitudinal analysis consistently shows polycentricity's benefits emerging as urban systems adapt. In conclusion, while the theoretical concern is valid, our empirical evidence demonstrates that well-designed polycentric configurations with appropriate implementation characteristics consistently outperform monocentric models in reducing both travel distances and carbon intensity, though achieving these benefits requires sophisticated planning rather than simply decentralizing urban structure.\",\n\n        \"Thank you, Professor Chen, for raising this important theoretical critique of polycentric development. This concern reflects legitimate urban economic principles regarding agglomeration benefits and travel efficiency. However, our empirical analysis provides compelling evidence that contradicts the theoretical prediction of increased travel in polycentric configurations, and I'd like to explain the mechanisms behind this apparent paradox. First, our research reveals that the travel implications of polycentricity depend fundamentally on implementation characteristics rather than merely the presence of multiple centers. Specifically, we distinguish between \\\"functional polycentricity\\\"—where centers develop complementary specializations necessitating significant inter-center travel—and \\\"complete polycentricity\\\"—where centers contain balanced housing, employment, and services enabling trip containment. In metropolitan regions characterized by complete polycentricity, we observed average commuting distances 21-34% lower than comparable monocentric regions, with particularly pronounced benefits for moderate and lower-income populations who often face the longest commutes in monocentric structures due to housing affordability constraints in central areas. Second, our analysis demonstrates that monocentric configurations generate their own problematic travel patterns as metropolitan regions expand beyond certain thresholds. While theoretically optimal for travel minimization at small scales, monocentricity in larger metropolitan regions creates extreme commute burdens for peripheral residents facing both distance and congestion penalties. Our comparative analysis of metropolitan regions with populations exceeding one million residents showed that average commute distances increase non-linearly with size in monocentric regions but scale more gradually in polycentric configurations. Third, our research highlights the critical role of transportation infrastructure configuration in determining travel outcomes. Polycentric regions with predominantly radial transportation networks indeed demonstrated increased travel complexity and distance, confirming the theoretical critique. However, regions implementing polycentric development in conjunction with networked transportation infrastructure—combining circumferential connections between subcenters with radial links to the metropolitan core—showed substantially different travel patterns with higher rates of trip containment and significantly lower average trip distances. Fourth, our data reveal important temporal dynamics in travel adaptation. Metropolitan regions transitioning from monocentric to polycentric configurations typically experience a temporary increase in travel complexity during transition periods (averaging 3-5 years in our sample) before trip containment benefits materialize as residential location choices, employment distributions, and travel behaviors adjust to the new urban structure. These adaptation processes help explain conflicting findings in previous studies depending on when measurements occurred within this transition cycle. Finally, our modal analysis demonstrates that well-designed polycentric regions achieve significantly higher rates of non-motorized transportation within centers and transit usage between centers compared to either monocentric or dispersed alternatives, reducing carbon intensity per trip even where trip numbers remain stable. These multiple mechanisms explain why our empirical evidence consistently contradicts the theoretical prediction of increased travel in polycentric regions, though I emphasize that these benefits depend on thoughtful implementation rather than simply decentralizing urban structure.\"\n      ],\n      hints: \"Respond to the question about polycentricity potentially increasing travel distances, addressing this critique with evidence from your research findings.\",\n      expectedKeywords: [\"polycentric\", \"travel\", \"distance\", \"findings\", \"research\", \"compared\", \"monocentric\", \"patterns\", \"evidence\", \"empirical\", \"analysis\"],\n      feedback: {\n        correct: \"Thank you for that comprehensive response. We have another question from Dr. Patel: 'Your research emphasizes physical density configurations, but how do you think emerging technologies like autonomous vehicles or widespread telework might alter the relationship between urban form and transportation emissions in the future?'\",\n        partial: \"Thank you for beginning to address Professor Chen's question. Could you provide a more comprehensive response that directly addresses the critique with specific evidence from your research findings?\",\n        incorrect: \"Please provide a more direct response to Professor Chen's question about polycentricity potentially increasing travel distances, supporting your answer with specific evidence from your research findings.\"\n      }\n    },\n    {\n      id: 8,\n      botMessage: \"Thank you for that comprehensive response. We have another question from Dr. Patel: 'Your research emphasizes physical density configurations, but how do you think emerging technologies like autonomous vehicles or widespread telework might alter the relationship between urban form and transportation emissions in the future?'\",\n      inputMode: \"hybrid\",\n      suggestions: [\n        \"Thank you, Dr. Patel, for this forward-looking question addressing the critical intersection of urban form, technology, and travel behavior. While our research focused primarily on current socio-technical systems, our findings suggest several ways emerging technologies might modify—but not fundamentally negate—the relationship between density and transportation emissions. Regarding autonomous vehicles (AVs), their impact will likely depend substantially on deployment models and regulatory frameworks rather than simply technological capabilities. Our analysis indicates that density configurations will strongly influence whether AVs generate positive or negative emissions outcomes. In higher-density, mixed-use environments, AVs could potentially strengthen the emissions benefits of optimal density configurations through several mechanisms: facilitating first/last-mile connections to transit in transit-oriented developments, enabling car-free lifestyles through on-demand mobility without parking requirements, and supporting efficient shared vehicle deployment due to higher trip density. Conversely, in lower-density, segregated land-use patterns, AVs risk exacerbating emissions through induced travel demand, as reduced time costs and enhanced comfort might encourage longer commutes and increased trip generation. Thus, optimal density configurations become potentially more important, not less, in managing AV deployment for emissions reduction. Similarly, widespread telework demonstrates both complementary and competitive relationships with density-focused strategies. Our case studies of regions with higher telework adoption rates before the pandemic suggest that telework can enhance the effectiveness of polycentric density configurations by reducing peak-hour commuting pressure while maintaining accessibility benefits of clustered development. However, evidence also indicates that extreme dispersal enabled by telework—particularly to exurban and rural areas completely disconnected from service networks—may generate counteracting emissions increases through longer non-work trips, reduced transit viability, and increased floor area per capita. This suggests the need for what we might term \\\"telework-compatible density\\\"—nodal development patterns specifically designed to accommodate hybrid work models while maintaining sustainable transportation options for non-work travel, which comprises approximately 65-75% of total trips. Perhaps most importantly, our findings regarding the critical role of integrated policy packages in determining emissions outcomes appear even more relevant in technology-disrupted futures. Technological transitions occurring within supportive density configurations and policy environments will likely generate dramatically different outcomes than identical technologies deployed in unsupportive urban forms. This suggests policymakers should focus on creating urban environments that channel technological adoption toward emissions-reducing outcomes rather than assuming technologies alone will resolve emissions challenges regardless of spatial organization. While these projections necessarily involve uncertainty, they indicate that physical urban form will remain a fundamental determinant of transportation emissions even as technological and behavioral shifts alter specific aspects of the relationship.\",\n\n        \"Thank you for this important question, Dr. Patel. Emerging technologies will undoubtedly modify the relationship between urban form and transportation emissions, though our research suggests these modifications will be more evolutionary than revolutionary, with density configurations remaining significant through altered mechanisms. Regarding autonomous vehicles (AVs), our analysis indicates a bifurcated future where urban form largely determines whether this technology increases or decreases emissions. In optimally configured dense environments—particularly transit-oriented, mixed-use developments—AVs could potentially enhance the emissions benefits of urban form through several pathways: First, by solving the \\\"first/last mile\\\" problem that currently limits transit ridership in many areas, AVs could extend the effective catchment area of transit nodes and strengthen the emissions advantages of transit-oriented density patterns. Second, by eliminating parking requirements near destinations, AVs could facilitate higher density, mixed-use development in areas currently dominated by parking infrastructure. Third, in dense environments, shared autonomous mobility services become economically viable, potentially reducing vehicle ownership and total vehicle miles while increasing vehicle utilization efficiency. However, in dispersed, single-use environments, the same technology risks significant emissions increases through induced demand, as reduced time costs and eliminated driving stress could encourage longer commutes and additional discretionary trips. This divergent potential makes optimal density configurations more crucial, not less, in a future with autonomous mobility. Regarding telework, our research similarly suggests context-dependent outcomes heavily influenced by urban form. Our pre-pandemic data from regions with higher telework adoption rates indicate that moderate telework adoption (1-3 days weekly) within polycentric urban configurations can enhance emissions reduction through peak travel demand reduction while maintaining the agglomeration benefits of clustered development. However, this complementary relationship deteriorates when telework enables extreme dispersal to areas entirely disconnected from services and amenities, generating longer non-work trips that offset commute reductions. This suggests the emergence of what we might term \\\"distributed density\\\" models—polycentric configurations incorporating telework hubs and neighborhood co-working facilities that maintain proximity for non-work activities while reducing commute frequencies. Most crucially, our findings regarding threshold effects and accessibility-oriented planning become even more relevant in technology-disrupted futures. The fundamental human needs for physical proximity to services, amenities, and social interactions remain even as specific mobility patterns evolve, suggesting that optimized density configurations will retain significance even as their specific forms adapt to changing technological contexts. While technological evolution creates uncertainty, our research framework analyzing multiple causal pathways can accommodate these shifts by identifying which pathways strengthen or weaken under different technological scenarios, providing a foundation for adaptive planning amid socio-technical transitions.\",\n\n        \"Thank you for this thought-provoking question, Dr. Patel. The interaction between emerging technologies and urban form represents one of the most significant uncertainties in future emissions trajectories. While our research focused primarily on current socio-technical systems, our analytical framework and findings provide insights into how these relationships might evolve. Regarding autonomous vehicles (AVs), our analysis suggests they will likely function as amplifiers of urban form characteristics rather than independent determinants of emissions outcomes. In optimally configured dense environments—particularly mixed-use, transit-oriented developments—AVs could potentially enhance emissions benefits through three primary mechanisms: complementing transit systems through first/last-mile connections, thereby extending the catchment area of transit nodes; reducing parking requirements that currently consume valuable urban land and interrupt walkable environments; and enabling efficient shared mobility services that become economically viable at certain density thresholds. Our modeling suggests these benefits primarily emerge at density levels above approximately 25-30 persons per hectare. Conversely, in dispersed, segregated land-use environments, our analysis indicates AVs risk significantly increasing emissions through induced demand effects, as reduced travel friction in terms of time costs and driver attention requirements could encourage both longer trips and additional discretionary travel. This divergent potential makes thoughtful density configuration more important, not less, in determining AV emissions impacts. Regarding telework, our research indicates similarly context-dependent effects substantially moderated by urban form. Pre-pandemic data from metropolitan regions with higher telework adoption rates suggest that hybrid work models (1-3 days weekly at home) within polycentric urban configurations can reduce emissions through decreased commute frequencies while maintaining the benefits of accessibility-based planning for non-work activities. However, our case studies also identified counteracting effects when telework enables residential dispersion beyond certain thresholds, particularly to areas without local services and amenities, generating longer non-work trips that offset commute reductions. This suggests the emergence of what we might term \\\"distributed centrality\\\"—modified polycentric configurations incorporating neighborhood telework hubs and flexible workspaces that maintain proximity benefits while accommodating changing work patterns. Perhaps most significantly, our findings regarding the importance of integrated approaches have profound implications for technology transition management. Technologies deployed within supportive density configurations and complementary policy environments demonstrate dramatically different emissions outcomes than identical technologies implemented in unsupportive contexts. This suggests the need for coordinated technology-urban form planning rather than assuming technological solutions alone will resolve emissions challenges regardless of spatial organization. While these projections necessarily involve uncertainty, our analytical framework identifying multiple causal pathways through which density influences emissions provides a foundation for understanding how technological changes might modify specific pathways while leaving others intact, enabling structured analysis of complex future scenarios.\"\n      ],\n      hints: \"Address how emerging technologies like autonomous vehicles and telework might alter the relationship between urban density and emissions, drawing on insights from your research.\",\n      expectedKeywords: [\"autonomous vehicles\", \"telework\", \"technology\", \"future\", \"emerging\", \"relationship\", \"urban form\", \"emissions\", \"density\", \"patterns\", \"impact\"],\n      acceptablePhrases: [\n        \"emerging technologies might modify\",\n        \"the impact will likely depend\",\n        \"our analysis indicates\",\n        \"regarding autonomous vehicles\",\n        \"regarding telework\",\n        \"our research suggests\",\n        \"in higher-density\",\n        \"in lower-density\"\n      ],\n      feedback: {\n        correct: \"Thank you for addressing these thoughtful questions. Your presentation has provided valuable insights into the complex relationship between urban density configurations and transportation emissions. The chair thanks you for your contribution to our understanding of sustainable urban development.\",\n        partial: \"Thank you for beginning to address Dr. Patel's question. Could you provide a more comprehensive response about how both autonomous vehicles and telework might specifically alter the urban form-emissions relationship that you've studied?\",\n        incorrect: \"Please provide a more direct and comprehensive response to Dr. Patel's question about how emerging technologies like autonomous vehicles and widespread telework might alter the relationship between urban form and transportation emissions.\"\n      }\n    }\n  ],\n  completionMessage: \"Excellent work! You've delivered a sophisticated academic presentation demonstrating advanced language abilities and complex subject matter expertise. Your presentation effectively communicated research findings, responded to challenging questions, and engaged with complex academic concepts. You successfully employed appropriate academic language, logical structure, and rhetorical techniques throughout your presentation, showing the high-level communication skills required in academic settings.\",\n  learningObjectives: [\n    \"Structure a coherent academic presentation with appropriate sections and transitions\",\n    \"Communicate complex research findings using precise academic language\",\n    \"Explain theoretical frameworks and methodological approaches clearly\",\n    \"Present evidence and data to support research conclusions\",\n    \"Discuss implications of research findings for theory and practice\",\n    \"Address limitations of research methodologies appropriately\",\n    \"Respond effectively to challenging questions from an academic audience\",\n    \"Use specialized vocabulary and complex sentence structures in academic discourse\"\n  ],\n  grammar: {\n    points: [\n      \"Complex sentences with multiple subordinate clauses for academic exposition\",\n      \"Passive voice for methodology and research description\",\n      \"Formal academic register with precise terminology\",\n      \"Hedging language appropriate for academic uncertainty\",\n      \"Complex noun phrases with multiple modifiers\",\n      \"Varied transition phrases for academic discourse\",\n      \"Complex conditional structures for discussing implications and alternatives\"\n    ]\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\corporateStrategy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\culturalDiplomacy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\diplomaticNegotiation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\ethicalDilemma.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\financialConsulting.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\literaryAnalysis.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\medicalConsultation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\programmingParadigmDebate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\psychotherapySession.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\researchMethodology.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C1\\scenarios\\socialPolicyDebate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\scenarios\\advancedLinguistics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\scenarios\\diplomaticCrisisMediation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\scenarios\\economicPolicyAnalysis.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\scenarios\\internationalRelations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\scenarios\\judicialReasoning.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\scenarios\\literaryCriticism.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\scenarios\\neuroscientificTheories.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\scenarios\\quantumComputingExplanation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\scenarios\\silenceCommunication.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\conversation\\C2\\scenarios\\theoreticalPhysics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\A1\\categories\\errorCorrectionA1Full.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\A1\\categories\\errorCorrectionA1Identify.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\A1\\categories\\errorCorrectionA1MultipleChoice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\A1\\index.js","messages":[{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":112,"column":18,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":112,"endColumn":32,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[3512,3536],"text":"Object.prototype.hasOwnProperty.call(exercise, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":45,"nodeType":"BlockStatement","messageId":"unexpected","endLine":134,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4185,4187],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/data/exercises/errorCorrection/A1/index.js\n\nimport errorCorrectionA1Full from './categories/errorCorrectionA1Full';\nimport errorCorrectionA1Identify from './categories/errorCorrectionA1Identify';\nimport errorCorrectionA1MultipleChoice from './categories/errorCorrectionA1MultipleChoice';\n\n// Combine all exercises from the 3 files\nconst allExercises = [\n  ...errorCorrectionA1Full,\n  ...errorCorrectionA1Identify,\n  ...errorCorrectionA1MultipleChoice\n];\n\n// Sort exercises by categoryId to maintain logical order\nallExercises.sort((a, b) => {\n  if (a.categoryId !== b.categoryId) {\n    return a.categoryId - b.categoryId;\n  }\n  // Within same category, order by type: full, identify, multiple_choice\n  const typeOrder = { 'full': 1, 'identify': 2, 'multiple_choice': 3 };\n  return typeOrder[a.type] - typeOrder[b.type];\n});\n\nconst errorCorrectionA1 = {\n  level: \"A1\",\n  totalExercises: allExercises.length,\n\n  // Statistics by type\n  statistics: {\n    full: errorCorrectionA1Full.length,\n    identify: errorCorrectionA1Identify.length,\n    multiple_choice: errorCorrectionA1MultipleChoice.length,\n    byCategory: {\n      1: { name: \"Articles\", count: 5 },        // 2 full + 2 identify + 1 multiple_choice\n      2: { name: \"Verb to Be\", count: 5 },      // 2 full + 2 identify + 1 multiple_choice\n      3: { name: \"Simple Present\", count: 5 },  // 1 full + 2 identify + 2 multiple_choice\n      4: { name: \"Pronouns\", count: 4 },        // 1 full + 2 identify + 1 multiple_choice\n      5: { name: \"Sentence Structure\", count: 5 } // 1 full + 2 identify + 2 multiple_choice\n    }\n  },\n\n  // Categories metadata (maintained for compatibility)\n  categories: [\n    {\n      id: 1,\n      name: \"Articles\",\n      description: \"Practicing correct usage of 'a', 'an', and 'the'\",\n      exerciseCount: 5,\n      difficulty: \"Basic\",\n      color: \"#3b82f6\"\n    },\n    {\n      id: 2,\n      name: \"Verb to Be\",\n      description: \"Correcting errors with the verb 'to be'\",\n      exerciseCount: 5,\n      difficulty: \"Basic\", \n      color: \"#10b981\"\n    },\n    {\n      id: 3,\n      name: \"Simple Present\",\n      description: \"Fixing mistakes in simple present tense\",\n      exerciseCount: 5,\n      difficulty: \"Basic\",\n      color: \"#f59e0b\"\n    },\n    {\n      id: 4,\n      name: \"Pronouns\",\n      description: \"Identifying and correcting pronoun errors\",\n      exerciseCount: 4,\n      difficulty: \"Basic\",\n      color: \"#8b5cf6\"\n    },\n    {\n      id: 5,\n      name: \"Sentence Structure\",\n      description: \"Improving basic sentence construction\",\n      exerciseCount: 5,\n      difficulty: \"Basic\",\n      color: \"#ef4444\"\n    },\n  ],\n\n  // All exercises combined and sorted\n  exercises: allExercises,\n\n  // Helper methods for filtering exercises\n  getExercisesByCategory: (categoryId) => {\n    return allExercises.filter(exercise => exercise.categoryId === categoryId);\n  },\n\n  getExercisesByType: (type) => {\n    return allExercises.filter(exercise => exercise.type === type);\n  },\n\n  getExercisesByCategoryAndType: (categoryId, type) => {\n    return allExercises.filter(exercise => \n      exercise.categoryId === categoryId && exercise.type === type\n    );\n  },\n\n  // Validation\n  validateStructure: () => {\n    const requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];\n    const validTypes = ['full', 'identify', 'multiple_choice'];\n\n    return allExercises.every(exercise => {\n      // Check required fields\n      const hasRequiredFields = requiredFields.every(field => \n        exercise.hasOwnProperty(field) && exercise[field] !== undefined\n      );\n\n      // Check valid type\n      const hasValidType = validTypes.includes(exercise.type);\n\n      // Check type-specific fields\n      let hasTypeSpecificFields = true;\n      if (exercise.type === 'multiple_choice') {\n        hasTypeSpecificFields = exercise.choices && exercise.correctChoiceIndex !== undefined;\n      } else {\n        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);\n      }\n\n      return hasRequiredFields && hasValidType && hasTypeSpecificFields;\n    });\n  }\n};\n\n// Validate structure on export\nif (!errorCorrectionA1.validateStructure()) {\n\n}\n\nexport default errorCorrectionA1;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\A2\\categories\\errorCorrectionA2Full.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\A2\\categories\\errorCorrectionA2Identify.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\A2\\categories\\errorCorrectionA2MultipleChoice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\A2\\index.js","messages":[{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":125,"column":18,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":125,"endColumn":32,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[4260,4284],"text":"Object.prototype.hasOwnProperty.call(exercise, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":169,"column":45,"nodeType":"BlockStatement","messageId":"unexpected","endLine":171,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5914,5916],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":171,"column":8,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5924,5926],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/data/exercises/errorCorrection/A2/index.js\n\nimport errorCorrectionA2Full from './categories/errorCorrectionA2Full';\nimport errorCorrectionA2Identify from './categories/errorCorrectionA2Identify';\nimport errorCorrectionA2MultipleChoice from './categories/errorCorrectionA2MultipleChoice';\n\n// Combine all exercises from the 3 files\nconst allExercises = [\n  ...errorCorrectionA2Full,\n  ...errorCorrectionA2Identify,\n  ...errorCorrectionA2MultipleChoice\n];\n\n// Sort exercises by categoryId to maintain logical order\nallExercises.sort((a, b) => {\n  if (a.categoryId !== b.categoryId) {\n    return a.categoryId - b.categoryId;\n  }\n  // Within same category, order by type: full, identify, multiple_choice\n  const typeOrder = { 'full': 1, 'identify': 2, 'multiple_choice': 3 };\n  return typeOrder[a.type] - typeOrder[b.type];\n});\n\nconst errorCorrectionA2 = {\n  level: \"A2\",\n  totalExercises: allExercises.length,\n\n  // Statistics by type\n  statistics: {\n    full: errorCorrectionA2Full.length,\n    identify: errorCorrectionA2Identify.length,\n    multiple_choice: errorCorrectionA2MultipleChoice.length,\n    byCategory: {\n      1: { name: \"Past Tense\", count: 7 },           // 2 full + 3 identify + 2 multiple_choice\n      2: { name: \"Future Forms\", count: 6 },         // 2 full + 2 identify + 2 multiple_choice\n      3: { name: \"Comparative & Superlative\", count: 5 }, // 2 full + 2 identify + 1 multiple_choice\n      4: { name: \"Prepositions\", count: 7 },         // 2 full + 3 identify + 2 multiple_choice\n      5: { name: \"Modal Verbs\", count: 5 }           // 2 full + 2 identify + 1 multiple_choice\n    }\n  },\n\n  // Categories metadata for A2 intermediate level\n  categories: [\n    {\n      id: 1,\n      name: \"Past Tense\",\n      description: \"Past simple, past continuous, and irregular verbs\",\n      exerciseCount: 7,\n      difficulty: \"Intermediate\",\n      color: \"#3b82f6\",\n      topics: [\"past simple\", \"past continuous\", \"irregular verbs\", \"past negatives\"]\n    },\n    {\n      id: 2,\n      name: \"Future Forms\",\n      description: \"Will, going to, and present continuous for future\",\n      exerciseCount: 6,\n      difficulty: \"Intermediate\", \n      color: \"#10b981\",\n      topics: [\"will\", \"going to\", \"future plans\", \"predictions\"]\n    },\n    {\n      id: 3,\n      name: \"Comparative & Superlative\",\n      description: \"Comparative and superlative adjectives\",\n      exerciseCount: 5,\n      difficulty: \"Intermediate\",\n      color: \"#f59e0b\",\n      topics: [\"comparative adjectives\", \"superlative adjectives\", \"irregular forms\"]\n    },\n    {\n      id: 4,\n      name: \"Prepositions\",\n      description: \"Prepositions of time, place, and movement\",\n      exerciseCount: 7,\n      difficulty: \"Intermediate\",\n      color: \"#8b5cf6\",\n      topics: [\"time prepositions\", \"place prepositions\", \"verb + preposition\"]\n    },\n    {\n      id: 5,\n      name: \"Modal Verbs\",\n      description: \"Can, could, should, must, and have to\",\n      exerciseCount: 5,\n      difficulty: \"Intermediate\",\n      color: \"#ef4444\",\n      topics: [\"ability\", \"obligation\", \"advice\", \"permission\"]\n    },\n  ],\n\n  // All exercises combined and sorted\n  exercises: allExercises,\n\n  // Helper methods for filtering exercises\n  getExercisesByCategory: (categoryId) => {\n    return allExercises.filter(exercise => exercise.categoryId === categoryId);\n  },\n\n  getExercisesByType: (type) => {\n    return allExercises.filter(exercise => exercise.type === type);\n  },\n\n  getExercisesByCategoryAndType: (categoryId, type) => {\n    return allExercises.filter(exercise => \n      exercise.categoryId === categoryId && exercise.type === type\n    );\n  },\n\n  // Get exercises by difficulty or topic\n  getExercisesByTopic: (topic) => {\n    return allExercises.filter(exercise => {\n      const category = errorCorrectionA2.categories.find(cat => cat.id === exercise.categoryId);\n      return category?.topics.includes(topic);\n    });\n  },\n\n  // Validation\n  validateStructure: () => {\n    const requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];\n    const validTypes = ['full', 'identify', 'multiple_choice'];\n\n    return allExercises.every(exercise => {\n      // Check required fields\n      const hasRequiredFields = requiredFields.every(field => \n        exercise.hasOwnProperty(field) && exercise[field] !== undefined\n      );\n\n      // Check valid type\n      const hasValidType = validTypes.includes(exercise.type);\n\n      // Check valid category (1-5 for A2)\n      const hasValidCategory = exercise.categoryId >= 1 && exercise.categoryId <= 5;\n\n      // Check type-specific fields\n      let hasTypeSpecificFields = true;\n      if (exercise.type === 'multiple_choice') {\n        hasTypeSpecificFields = exercise.choices && \n                               Array.isArray(exercise.choices) &&\n                               exercise.choices.length >= 2 &&\n                               exercise.correctChoiceIndex !== undefined &&\n                               exercise.correctChoiceIndex >= 0 &&\n                               exercise.correctChoiceIndex < exercise.choices.length;\n      } else {\n        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);\n      }\n\n      return hasRequiredFields && hasValidType && hasValidCategory && hasTypeSpecificFields;\n    });\n  },\n\n  // Get summary statistics\n  getSummary: () => {\n    return {\n      level: \"A2\",\n      totalExercises: allExercises.length,\n      categories: errorCorrectionA2.categories.length,\n      difficulty: \"Intermediate\",\n      progression: \"Builds on A1 with past/future tenses, comparatives, prepositions, and modals\",\n      distribution: {\n        full: errorCorrectionA2Full.length,\n        identify: errorCorrectionA2Identify.length,\n        multiple_choice: errorCorrectionA2MultipleChoice.length\n      }\n    };\n  }\n};\n\n// Validate structure on export\nif (!errorCorrectionA2.validateStructure()) {\n\n} else {\n\n}\n\nexport default errorCorrectionA2;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\B1\\categories\\errorCorrectionB1Full.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\B1\\categories\\errorCorrectionB1Identify.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\B1\\categories\\errorCorrectionB1MultipleChoice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\B1\\index.js","messages":[{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":148,"column":18,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":148,"endColumn":32,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[5694,5718],"text":"Object.prototype.hasOwnProperty.call(exercise, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":206,"column":45,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8157,8159],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":8,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8167,8169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/data/exercises/errorCorrection/B1/index.js\n\nimport errorCorrectionB1Full from './categories/errorCorrectionB1Full';\nimport errorCorrectionB1Identify from './categories/errorCorrectionB1Identify';\nimport errorCorrectionB1MultipleChoice from './categories/errorCorrectionB1MultipleChoice';\n\n// Combine all exercises from the 3 files\nconst allExercises = [\n  ...errorCorrectionB1Full,\n  ...errorCorrectionB1Identify,\n  ...errorCorrectionB1MultipleChoice\n];\n\n// Sort exercises by categoryId to maintain logical order\nallExercises.sort((a, b) => {\n  if (a.categoryId !== b.categoryId) {\n    return a.categoryId - b.categoryId;\n  }\n  // Within same category, order by type: full, identify, multiple_choice\n  const typeOrder = { 'full': 1, 'identify': 2, 'multiple_choice': 3 };\n  return typeOrder[a.type] - typeOrder[b.type];\n});\n\nconst errorCorrectionB1 = {\n  level: \"B1\",\n  totalExercises: allExercises.length,\n\n  // Statistics by type\n  statistics: {\n    full: errorCorrectionB1Full.length,\n    identify: errorCorrectionB1Identify.length,\n    multiple_choice: errorCorrectionB1MultipleChoice.length,\n    byCategory: {\n      1: { name: \"Present Perfect\", count: 7 },      // 2 full + 3 identify + 2 multiple_choice\n      2: { name: \"Conditionals\", count: 7 },         // 3 full + 3 identify + 1 multiple_choice\n      3: { name: \"Passive Voice\", count: 7 },        // 2 full + 3 identify + 2 multiple_choice\n      4: { name: \"Reported Speech\", count: 8 },      // 3 full + 3 identify + 2 multiple_choice\n      5: { name: \"Relative Clauses\", count: 7 }      // 2 full + 3 identify + 2 multiple_choice\n    }\n  },\n\n  // Categories metadata for B1 intermediate-advanced level\n  categories: [\n    {\n      id: 1,\n      name: \"Present Perfect\",\n      description: \"Present perfect vs past simple, for/since, already/yet/just\",\n      exerciseCount: 7,\n      difficulty: \"Intermediate-Advanced\",\n      color: \"#3b82f6\",\n      topics: [\"present perfect formation\", \"vs past simple\", \"time expressions\", \"experience\", \"duration\"],\n      commonErrors: [\"using with specific past times\", \"wrong past participle\", \"confusion with past simple\"]\n    },\n    {\n      id: 2,\n      name: \"Conditionals\",\n      description: \"First, second, and mixed conditionals\",\n      exerciseCount: 7,\n      difficulty: \"Intermediate-Advanced\", \n      color: \"#10b981\",\n      topics: [\"first conditional\", \"second conditional\", \"third conditional\", \"mixed conditionals\", \"unless\"],\n      commonErrors: [\"will in if-clause\", \"wrong verb forms\", \"mixing conditional types\"]\n    },\n    {\n      id: 3,\n      name: \"Passive Voice\",\n      description: \"Passive voice in different tenses and contexts\",\n      exerciseCount: 7,\n      difficulty: \"Intermediate-Advanced\",\n      color: \"#f59e0b\",\n      topics: [\"passive formation\", \"different tenses\", \"by/with agents\", \"passive reporting\"],\n      commonErrors: [\"missing be verb\", \"wrong prepositions\", \"incorrect past participle\"]\n    },\n    {\n      id: 4,\n      name: \"Reported Speech\",\n      description: \"Direct to indirect speech, reporting verbs\",\n      exerciseCount: 8,\n      difficulty: \"Intermediate-Advanced\",\n      color: \"#8b5cf6\",\n      topics: [\"tense changes\", \"pronoun changes\", \"time/place changes\", \"reporting questions\", \"reporting verbs\"],\n      commonErrors: [\"wrong tense changes\", \"question word order\", \"incorrect reporting verbs\"]\n    },\n    {\n      id: 5,\n      name: \"Relative Clauses\",\n      description: \"Defining and non-defining relative clauses\",\n      exerciseCount: 7,\n      difficulty: \"Intermediate-Advanced\",\n      color: \"#ef4444\",\n      topics: [\"who/which/that\", \"defining vs non-defining\", \"whose\", \"where/when\", \"prepositions\"],\n      commonErrors: [\"wrong relative pronouns\", \"unnecessary prepositions\", \"comma usage\"]\n    },\n  ],\n\n  // All exercises combined and sorted\n  exercises: allExercises,\n\n  // Helper methods for filtering exercises\n  getExercisesByCategory: (categoryId) => {\n    return allExercises.filter(exercise => exercise.categoryId === categoryId);\n  },\n\n  getExercisesByType: (type) => {\n    return allExercises.filter(exercise => exercise.type === type);\n  },\n\n  getExercisesByCategoryAndType: (categoryId, type) => {\n    return allExercises.filter(exercise => \n      exercise.categoryId === categoryId && exercise.type === type\n    );\n  },\n\n  // Get exercises by difficulty or topic\n  getExercisesByTopic: (topic) => {\n    return allExercises.filter(exercise => {\n      const category = errorCorrectionB1.categories.find(cat => cat.id === exercise.categoryId);\n      return category?.topics.includes(topic);\n    });\n  },\n\n  // Get exercises by common error type\n  getExercisesByErrorType: (errorType) => {\n    return allExercises.filter(exercise => {\n      const category = errorCorrectionB1.categories.find(cat => cat.id === exercise.categoryId);\n      return category?.commonErrors.some(error => error.includes(errorType));\n    });\n  },\n\n  // Advanced filtering for B1 level\n  getAdvancedExercises: () => {\n    // Return exercises that are more challenging (longer texts, multiple errors)\n    return allExercises.filter(exercise => {\n      const wordCount = exercise.text.split(' ').length;\n      const errorCount = exercise.errorPositions ? exercise.errorPositions.length : 1;\n      return wordCount > 8 || errorCount > 2;\n    });\n  },\n\n  // Validation with B1-specific checks\n  validateStructure: () => {\n    const requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];\n    const validTypes = ['full', 'identify', 'multiple_choice'];\n\n    return allExercises.every(exercise => {\n      // Check required fields\n      const hasRequiredFields = requiredFields.every(field => \n        exercise.hasOwnProperty(field) && exercise[field] !== undefined\n      );\n\n      // Check valid type\n      const hasValidType = validTypes.includes(exercise.type);\n\n      // Check valid category (1-5 for B1)\n      const hasValidCategory = exercise.categoryId >= 1 && exercise.categoryId <= 5;\n\n      // Check B1 level complexity (minimum text length)\n      const hasMinimumComplexity = exercise.text.split(' ').length >= 6;\n\n      // Check type-specific fields\n      let hasTypeSpecificFields = true;\n      if (exercise.type === 'multiple_choice') {\n        hasTypeSpecificFields = exercise.choices && \n                               Array.isArray(exercise.choices) &&\n                               exercise.choices.length >= 3 && // B1 should have at least 3 choices\n                               exercise.correctChoiceIndex !== undefined &&\n                               exercise.correctChoiceIndex >= 0 &&\n                               exercise.correctChoiceIndex < exercise.choices.length;\n      } else {\n        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);\n      }\n\n      return hasRequiredFields && hasValidType && hasValidCategory && \n             hasMinimumComplexity && hasTypeSpecificFields;\n    });\n  },\n\n  // Get comprehensive summary for B1\n  getSummary: () => {\n    const totalErrorPositions = allExercises\n      .filter(ex => ex.errorPositions)\n      .reduce((sum, ex) => sum + ex.errorPositions.length, 0);\n\n    return {\n      level: \"B1\",\n      totalExercises: allExercises.length,\n      categories: errorCorrectionB1.categories.length,\n      difficulty: \"Intermediate-Advanced\",\n      focus: \"Complex grammatical structures and tense relationships\",\n      progression: \"Builds on A2 with present perfect, conditionals, passive voice, reported speech, and relative clauses\",\n      distribution: {\n        full: errorCorrectionB1Full.length,\n        identify: errorCorrectionB1Identify.length,\n        multiple_choice: errorCorrectionB1MultipleChoice.length\n      },\n      complexity: {\n        averageTextLength: Math.round(allExercises.reduce((sum, ex) => sum + ex.text.split(' ').length, 0) / allExercises.length),\n        totalErrorPositions: totalErrorPositions,\n        averageErrorsPerExercise: Math.round(totalErrorPositions / allExercises.filter(ex => ex.errorPositions).length * 10) / 10\n      }\n    };\n  }\n};\n\n// Validate structure on export\nif (!errorCorrectionB1.validateStructure()) {\n\n} else {\n\n}\n\nexport default errorCorrectionB1;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\B2\\categories\\errorCorrectionB2Full.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\B2\\categories\\errorCorrectionB2Identify.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\B2\\categories\\errorCorrectionB2MultipleChoice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\B2\\index.js","messages":[{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":164,"column":18,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":164,"endColumn":32,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[6895,6919],"text":"Object.prototype.hasOwnProperty.call(exercise, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":237,"column":45,"nodeType":"BlockStatement","messageId":"unexpected","endLine":239,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10289,10291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":239,"column":8,"nodeType":"BlockStatement","messageId":"unexpected","endLine":241,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10299,10301],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/data/exercises/errorCorrection/B2/index.js\n\nimport errorCorrectionB2Full from './categories/errorCorrectionB2Full';\nimport errorCorrectionB2Identify from './categories/errorCorrectionB2Identify';\nimport errorCorrectionB2MultipleChoice from './categories/errorCorrectionB2MultipleChoice';\n\n// Combine all exercises from the 3 files\nconst allExercises = [\n  ...errorCorrectionB2Full,\n  ...errorCorrectionB2Identify,\n  ...errorCorrectionB2MultipleChoice\n];\n\n// Sort exercises by categoryId to maintain logical order\nallExercises.sort((a, b) => {\n  if (a.categoryId !== b.categoryId) {\n    return a.categoryId - b.categoryId;\n  }\n  // Within same category, order by type: full, identify, multiple_choice\n  const typeOrder = { 'full': 1, 'identify': 2, 'multiple_choice': 3 };\n  return typeOrder[a.type] - typeOrder[b.type];\n});\n\nconst errorCorrectionB2 = {\n  level: \"B2\",\n  totalExercises: allExercises.length,\n\n  // Statistics by type\n  statistics: {\n    full: errorCorrectionB2Full.length,\n    identify: errorCorrectionB2Identify.length,\n    multiple_choice: errorCorrectionB2MultipleChoice.length,\n    byCategory: {\n      1: { name: \"Advanced Conditionals\", count: 8 },        // 3 full + 3 identify + 2 multiple_choice\n      2: { name: \"Subjunctive & Formal Grammar\", count: 8 }, // 3 full + 3 identify + 2 multiple_choice\n      3: { name: \"Advanced Passive & Causative\", count: 9 }, // 3 full + 4 identify + 2 multiple_choice\n      4: { name: \"Discourse & Cohesion\", count: 9 },         // 3 full + 4 identify + 2 multiple_choice\n      5: { name: \"Register & Style\", count: 8 }              // 2 full + 3 identify + 3 multiple_choice\n    }\n  },\n\n  // Categories metadata for B2 advanced level\n  categories: [\n    {\n      id: 1,\n      name: \"Advanced Conditionals\",\n      description: \"Mixed conditionals, complex hypothetical situations, advanced conditional patterns\",\n      exerciseCount: 8,\n      difficulty: \"Advanced\",\n      color: \"#3b82f6\",\n      topics: [\"mixed conditionals\", \"complex hypotheticals\", \"conditional with modals\", \"implied conditionals\", \"formal conditional conjunctions\"],\n      commonErrors: [\"would have in if-clauses\", \"tense mixing\", \"inappropriate conjunctions\"],\n      skillsTargeted: [\"hypothetical reasoning\", \"complex time relationships\", \"formal register\"]\n    },\n    {\n      id: 2,\n      name: \"Subjunctive & Formal Grammar\",\n      description: \"Subjunctive mood, formal constructions, advanced verb patterns\",\n      exerciseCount: 8,\n      difficulty: \"Advanced\", \n      color: \"#10b981\",\n      topics: [\"subjunctive mood\", \"formal registers\", \"complex verb patterns\", \"inversion\", \"mandative subjunctive\"],\n      commonErrors: [\"indicative instead of subjunctive\", \"incorrect formal inversions\", \"should instead of subjunctive\"],\n      skillsTargeted: [\"formal register awareness\", \"advanced grammar structures\", \"academic writing\"]\n    },\n    {\n      id: 3,\n      name: \"Advanced Passive & Causative\",\n      description: \"Complex passive constructions, causative forms, advanced passive patterns\",\n      exerciseCount: 9,\n      difficulty: \"Advanced\",\n      color: \"#f59e0b\",\n      topics: [\"complex passives\", \"causative have/get\", \"passive reporting\", \"perfect infinitives\", \"passive with modals\"],\n      commonErrors: [\"incorrect causative structures\", \"wrong infinitive forms\", \"missing auxiliaries\"],\n      skillsTargeted: [\"complex sentence transformation\", \"causative understanding\", \"passive mastery\"]\n    },\n    {\n      id: 4,\n      name: \"Discourse & Cohesion\",\n      description: \"Advanced linking devices, discourse markers, text cohesion\",\n      exerciseCount: 9,\n      difficulty: \"Advanced\",\n      color: \"#8b5cf6\",\n      topics: [\"discourse markers\", \"cohesive devices\", \"substitution\", \"ellipsis\", \"advanced connectors\"],\n      commonErrors: [\"inappropriate connectors\", \"wordiness\", \"repetition\", \"informal markers in formal text\"],\n      skillsTargeted: [\"text organization\", \"coherence\", \"advanced writing skills\", \"academic discourse\"]\n    },\n    {\n      id: 5,\n      name: \"Register & Style\",\n      description: \"Formal vs informal register, academic writing, stylistic appropriateness\",\n      exerciseCount: 8,\n      difficulty: \"Advanced\",\n      color: \"#ef4444\",\n      topics: [\"register awareness\", \"academic style\", \"formal language\", \"appropriateness\", \"professional communication\"],\n      commonErrors: [\"mixed registers\", \"inappropriate informality\", \"lack of precision\", \"colloquial expressions\"],\n      skillsTargeted: [\"register sensitivity\", \"professional communication\", \"academic writing\", \"stylistic awareness\"]\n    },\n  ],\n\n  // All exercises combined and sorted\n  exercises: allExercises,\n\n  // Advanced helper methods for B2 level\n  getExercisesByCategory: (categoryId) => {\n    return allExercises.filter(exercise => exercise.categoryId === categoryId);\n  },\n\n  getExercisesByType: (type) => {\n    return allExercises.filter(exercise => exercise.type === type);\n  },\n\n  getExercisesByCategoryAndType: (categoryId, type) => {\n    return allExercises.filter(exercise => \n      exercise.categoryId === categoryId && exercise.type === type\n    );\n  },\n\n  // Get exercises by specific skills\n  getExercisesBySkill: (skill) => {\n    return allExercises.filter(exercise => {\n      const category = errorCorrectionB2.categories.find(cat => cat.id === exercise.categoryId);\n      return category?.skillsTargeted.includes(skill);\n    });\n  },\n\n  // Get exercises by difficulty within B2\n  getAdvancedExercises: () => {\n    return allExercises.filter(exercise => {\n      const wordCount = exercise.text.split(' ').length;\n      const errorCount = exercise.errorPositions ? exercise.errorPositions.length : 1;\n      // B2 advanced: longer texts (10+ words) or multiple errors (3+)\n      return wordCount >= 10 || errorCount >= 3;\n    });\n  },\n\n  // Get exercises focusing on formal register\n  getFormalRegisterExercises: () => {\n    return allExercises.filter(exercise => {\n      return exercise.categoryId === 2 || exercise.categoryId === 5 || \n             exercise.explanation.toLowerCase().includes('formal');\n    });\n  },\n\n  // Get exercises for academic preparation\n  getAcademicPreparationExercises: () => {\n    return allExercises.filter(exercise => {\n      const academicKeywords = ['academic', 'formal', 'discourse', 'register', 'subjunctive'];\n      return academicKeywords.some(keyword => \n        exercise.explanation.toLowerCase().includes(keyword) ||\n        exercise.hint.toLowerCase().includes(keyword)\n      );\n    });\n  },\n\n  // Enhanced validation for B2 level\n  validateStructure: () => {\n    const requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];\n    const validTypes = ['full', 'identify', 'multiple_choice'];\n\n    return allExercises.every(exercise => {\n      // Check required fields\n      const hasRequiredFields = requiredFields.every(field => \n        exercise.hasOwnProperty(field) && exercise[field] !== undefined\n      );\n\n      // Check valid type\n      const hasValidType = validTypes.includes(exercise.type);\n\n      // Check valid category (1-5 for B2)\n      const hasValidCategory = exercise.categoryId >= 1 && exercise.categoryId <= 5;\n\n      // Check B2 level complexity (minimum text length and sophistication)\n      const hasMinimumComplexity = exercise.text.split(' ').length >= 8;\n      const hasAdvancedVocabulary = exercise.text.length > 50; // More sophisticated texts\n\n      // Check type-specific fields with B2 standards\n      let hasTypeSpecificFields = true;\n      if (exercise.type === 'multiple_choice') {\n        hasTypeSpecificFields = exercise.choices && \n                               Array.isArray(exercise.choices) &&\n                               exercise.choices.length >= 4 && // B2 should have 4 choices for complexity\n                               exercise.correctChoiceIndex !== undefined &&\n                               exercise.correctChoiceIndex >= 0 &&\n                               exercise.correctChoiceIndex < exercise.choices.length;\n      } else {\n        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);\n      }\n\n      return hasRequiredFields && hasValidType && hasValidCategory && \n             hasMinimumComplexity && hasAdvancedVocabulary && hasTypeSpecificFields;\n    });\n  },\n\n  // Comprehensive B2 summary with advanced metrics\n  getSummary: () => {\n    const totalErrorPositions = allExercises\n      .filter(ex => ex.errorPositions)\n      .reduce((sum, ex) => sum + ex.errorPositions.length, 0);\n\n    const totalTextLength = allExercises.reduce((sum, ex) => sum + ex.text.length, 0);\n    const complexExercises = errorCorrectionB2.getAdvancedExercises().length;\n    const formalExercises = errorCorrectionB2.getFormalRegisterExercises().length;\n\n    return {\n      level: \"B2\",\n      totalExercises: allExercises.length,\n      categories: errorCorrectionB2.categories.length,\n      difficulty: \"Advanced\",\n      focus: \"Complex grammatical structures, register awareness, and discourse competence\",\n      progression: \"Builds on B1 with mixed conditionals, subjunctive, advanced passive, discourse markers, and register sensitivity\",\n      distribution: {\n        full: errorCorrectionB2Full.length,\n        identify: errorCorrectionB2Identify.length,\n        multiple_choice: errorCorrectionB2MultipleChoice.length\n      },\n      complexity: {\n        averageTextLength: Math.round(totalTextLength / allExercises.length),\n        averageWordCount: Math.round(allExercises.reduce((sum, ex) => sum + ex.text.split(' ').length, 0) / allExercises.length),\n        totalErrorPositions: totalErrorPositions,\n        averageErrorsPerExercise: Math.round(totalErrorPositions / allExercises.filter(ex => ex.errorPositions).length * 10) / 10,\n        complexExercisesPercentage: Math.round((complexExercises / allExercises.length) * 100),\n        formalRegisterFocus: Math.round((formalExercises / allExercises.length) * 100)\n      },\n      skillsTargeted: [\n        \"Advanced grammatical competence\",\n        \"Register and style awareness\", \n        \"Discourse organization\",\n        \"Academic writing preparation\",\n        \"Professional communication\"\n      ]\n    };\n  }\n};\n\n// Validate structure on export\nif (!errorCorrectionB2.validateStructure()) {\n\n} else {\n\n}\n\nexport default errorCorrectionB2;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\C1\\categories\\errorCorrectionC1Full.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\C1\\categories\\errorCorrectionC1Identify.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\C1\\categories\\errorCorrectionC1MultipleChoice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\C1\\index.js","messages":[{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":165,"column":18,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":165,"endColumn":32,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[7061,7085],"text":"Object.prototype.hasOwnProperty.call(exercise, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":240,"column":45,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10649,10651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":8,"nodeType":"BlockStatement","messageId":"unexpected","endLine":244,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10659,10661],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/data/exercises/errorCorrection/C1/index.js\n\nimport errorCorrectionC1Full from './categories/errorCorrectionC1Full';\nimport errorCorrectionC1Identify from './categories/errorCorrectionC1Identify';\nimport errorCorrectionC1MultipleChoice from './categories/errorCorrectionC1MultipleChoice';\n\n// Combine all exercises from the 3 files\nconst allExercises = [\n  ...errorCorrectionC1Full,\n  ...errorCorrectionC1Identify,\n  ...errorCorrectionC1MultipleChoice\n];\n\n// Sort exercises by categoryId to maintain logical order\nallExercises.sort((a, b) => {\n  if (a.categoryId !== b.categoryId) {\n    return a.categoryId - b.categoryId;\n  }\n  // Within same category, order by type: full, identify, multiple_choice\n  const typeOrder = { 'full': 1, 'identify': 2, 'multiple_choice': 3 };\n  return typeOrder[a.type] - typeOrder[b.type];\n});\n\nconst errorCorrectionC1 = {\n  level: \"C1\",\n  totalExercises: allExercises.length,\n\n  // Statistics by type\n  statistics: {\n    full: errorCorrectionC1Full.length,\n    identify: errorCorrectionC1Identify.length,\n    multiple_choice: errorCorrectionC1MultipleChoice.length,\n    byCategory: {\n      1: { name: \"Nuanced Grammar & Style\", count: 9 },          // 3 full + 4 identify + 2 multiple_choice\n      2: { name: \"Advanced Discourse & Rhetoric\", count: 10 },  // 3 full + 4 identify + 3 multiple_choice\n      3: { name: \"Cultural & Contextual Language\", count: 9 },   // 3 full + 4 identify + 2 multiple_choice\n      4: { name: \"Complex Argumentation\", count: 11 },          // 4 full + 4 identify + 3 multiple_choice\n      5: { name: \"Linguistic Precision\", count: 9 }             // 3 full + 4 identify + 2 multiple_choice\n    }\n  },\n\n  // Categories metadata for C1 expert level\n  categories: [\n    {\n      id: 1,\n      name: \"Nuanced Grammar & Style\",\n      description: \"Sophisticated grammatical structures, stylistic nuances, advanced syntax\",\n      exerciseCount: 9,\n      difficulty: \"Expert\",\n      color: \"#3b82f6\",\n      topics: [\"complex inversions\", \"parallel structures\", \"nuanced modality\", \"sophisticated conjunctions\", \"advanced syntax\"],\n      commonErrors: [\"tense inconsistency\", \"redundant expressions\", \"inappropriate register\"],\n      skillsTargeted: [\"grammatical sophistication\", \"stylistic awareness\", \"syntactic complexity\", \"academic precision\"]\n    },\n    {\n      id: 2,\n      name: \"Advanced Discourse & Rhetoric\",\n      description: \"Rhetorical devices, advanced discourse markers, persuasive language structures\",\n      exerciseCount: 10,\n      difficulty: \"Expert\",\n      color: \"#10b981\",\n      topics: [\"rhetorical devices\", \"advanced connectors\", \"discourse sophistication\", \"formal transitions\", \"academic argumentation\"],\n      commonErrors: [\"inappropriate connectors\", \"redundant hedging\", \"informal discourse markers\"],\n      skillsTargeted: [\"rhetorical competence\", \"advanced argumentation\", \"discourse mastery\", \"academic sophistication\"]\n    },\n    {\n      id: 3,\n      name: \"Cultural & Contextual Language\",\n      description: \"Cultural references, idiomatic sophistication, contextual appropriateness\",\n      exerciseCount: 9,\n      difficulty: \"Expert\",\n      color: \"#f59e0b\",\n      topics: [\"cultural allusions\", \"mythological references\", \"sophisticated idioms\", \"contextual precision\", \"literary references\"],\n      commonErrors: [\"incorrect cultural references\", \"inappropriate register\", \"spelling of cultural terms\"],\n      skillsTargeted: [\"cultural competence\", \"implicit understanding\", \"contextual sensitivity\", \"literary knowledge\"]\n    },\n    {\n      id: 4,\n      name: \"Complex Argumentation\",\n      description: \"Advanced argumentative structures, logical precision, academic reasoning\",\n      exerciseCount: 11,\n      difficulty: \"Expert\",\n      color: \"#8b5cf6\",\n      topics: [\"complex reasoning\", \"logical structures\", \"academic argumentation\", \"analytical precision\", \"empirical reasoning\"],\n      commonErrors: [\"misused logical terms\", \"unsupported claims\", \"redundant qualifications\", \"imprecise terminology\"],\n      skillsTargeted: [\"analytical thinking\", \"logical precision\", \"academic discourse\", \"critical reasoning\"]\n    },\n    {\n      id: 5,\n      name: \"Linguistic Precision\",\n      description: \"Precise word choice, semantic nuances, register mastery, conciseness\",\n      exerciseCount: 9,\n      difficulty: \"Expert\",\n      color: \"#ef4444\",\n      topics: [\"semantic precision\", \"register mastery\", \"lexical sophistication\", \"conciseness\", \"elegant expression\"],\n      commonErrors: [\"redundant expressions\", \"wordy constructions\", \"imprecise vocabulary\", \"inappropriate formality\"],\n      skillsTargeted: [\"lexical precision\", \"semantic awareness\", \"register expertise\", \"expressive economy\"]\n    }\n  ],\n\n  // All exercises combined and sorted\n  exercises: allExercises,\n\n  // Advanced helper methods for C1 level\n  getExercisesByCategory: (categoryId) => {\n    return allExercises.filter(exercise => exercise.categoryId === categoryId);\n  },\n\n  getExercisesByType: (type) => {\n    return allExercises.filter(exercise => exercise.type === type);\n  },\n\n  getExercisesByCategoryAndType: (categoryId, type) => {\n    return allExercises.filter(exercise => \n      exercise.categoryId === categoryId && exercise.type === type\n    );\n  },\n\n  // Get exercises by specific expert skills\n  getExpertLevelExercises: () => {\n    return allExercises.filter(exercise => {\n      const wordCount = exercise.text.split(' ').length;\n      const hasAdvancedVocab = exercise.text.length > 100;\n      return wordCount >= 15 && hasAdvancedVocab; // Very sophisticated texts\n    });\n  },\n\n  // Get exercises with cultural references\n  getCulturalReferenceExercises: () => {\n    return allExercises.filter(exercise => {\n      const culturalKeywords = ['Sisyphean', 'Kafkaesque', 'Machiavellian', 'Pyrrhic', 'Achilles', 'quixotic'];\n      return culturalKeywords.some(keyword => \n        exercise.text.toLowerCase().includes(keyword.toLowerCase())\n      );\n    });\n  },\n\n  // Get exercises focusing on academic precision\n  getAcademicPrecisionExercises: () => {\n    return allExercises.filter(exercise => {\n      const academicKeywords = ['research', 'methodology', 'hypothesis', 'empirical', 'evidence'];\n      return academicKeywords.some(keyword => \n        exercise.text.toLowerCase().includes(keyword)\n      );\n    });\n  },\n\n  // Get exercises for stylistic sophistication\n  getStylisticExercises: () => {\n    return allExercises.filter(exercise => {\n      return exercise.categoryId === 1 || exercise.categoryId === 5 ||\n             exercise.explanation.toLowerCase().includes('style') ||\n             exercise.explanation.toLowerCase().includes('sophisticated');\n    });\n  },\n\n  // Enhanced validation for C1 expert level\n  validateStructure: () => {\n    const requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];\n    const validTypes = ['full', 'identify', 'multiple_choice'];\n\n    return allExercises.every(exercise => {\n      // Check required fields\n      const hasRequiredFields = requiredFields.every(field => \n        exercise.hasOwnProperty(field) && exercise[field] !== undefined\n      );\n\n      // Check valid type\n      const hasValidType = validTypes.includes(exercise.type);\n\n      // Check valid category (1-5 for C1)\n      const hasValidCategory = exercise.categoryId >= 1 && exercise.categoryId <= 5;\n\n      // Check C1 level complexity (sophisticated texts and vocabulary)\n      const hasExpertComplexity = exercise.text.split(' ').length >= 12;\n      const hasSophisticatedVocab = exercise.text.length > 80;\n\n      // Check type-specific fields with C1 standards\n      let hasTypeSpecificFields = true;\n      if (exercise.type === 'multiple_choice') {\n        hasTypeSpecificFields = exercise.choices && \n                               Array.isArray(exercise.choices) &&\n                               exercise.choices.length >= 4 && // C1 should have 4 sophisticated choices\n                               exercise.correctChoiceIndex !== undefined &&\n                               exercise.correctChoiceIndex >= 0 &&\n                               exercise.correctChoiceIndex < exercise.choices.length;\n      } else {\n        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);\n      }\n\n      return hasRequiredFields && hasValidType && hasValidCategory && \n             hasExpertComplexity && hasSophisticatedVocab && hasTypeSpecificFields;\n    });\n  },\n\n  // Comprehensive C1 summary with expert metrics\n  getSummary: () => {\n    const totalErrorPositions = allExercises\n      .filter(ex => ex.errorPositions)\n      .reduce((sum, ex) => sum + ex.errorPositions.length, 0);\n\n    const totalTextLength = allExercises.reduce((sum, ex) => sum + ex.text.length, 0);\n    const expertExercises = errorCorrectionC1.getExpertLevelExercises().length;\n    const culturalExercises = errorCorrectionC1.getCulturalReferenceExercises().length;\n    const academicExercises = errorCorrectionC1.getAcademicPrecisionExercises().length;\n\n    return {\n      level: \"C1\",\n      totalExercises: allExercises.length,\n      categories: errorCorrectionC1.categories.length,\n      difficulty: \"Expert\",\n      focus: \"Sophisticated grammatical structures, cultural competence, rhetorical mastery, academic precision\",\n      progression: \"Builds on B2 with advanced stylistic awareness, cultural sophistication, and expert-level precision\",\n      distribution: {\n        full: errorCorrectionC1Full.length,\n        identify: errorCorrectionC1Identify.length,\n        multiple_choice: errorCorrectionC1MultipleChoice.length\n      },\n      complexity: {\n        averageTextLength: Math.round(totalTextLength / allExercises.length),\n        averageWordCount: Math.round(allExercises.reduce((sum, ex) => sum + ex.text.split(' ').length, 0) / allExercises.length),\n        totalErrorPositions: totalErrorPositions,\n        averageErrorsPerExercise: Math.round(totalErrorPositions / allExercises.filter(ex => ex.errorPositions).length * 10) / 10,\n        expertExercisesPercentage: Math.round((expertExercises / allExercises.length) * 100),\n        culturalReferencePercentage: Math.round((culturalExercises / allExercises.length) * 100),\n        academicFocusPercentage: Math.round((academicExercises / allExercises.length) * 100)\n      },\n      skillsTargeted: [\n        \"Expert grammatical competence\",\n        \"Cultural and literary sophistication\",\n        \"Advanced rhetorical skills\",\n        \"Academic precision and register mastery\",\n        \"Sophisticated stylistic awareness\"\n      ]\n    };\n  }\n};\n\n// Validate structure on export\nif (!errorCorrectionC1.validateStructure()) {\n\n} else {\n\n}\n\nexport default errorCorrectionC1;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\C2\\categories\\errorCorrectionC2Full.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\C2\\categories\\errorCorrectionC2Identify.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\C2\\categories\\errorCorrectionC2MultipleChoice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\C2\\index.js","messages":[{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":176,"column":18,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":176,"endColumn":32,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[7775,7799],"text":"Object.prototype.hasOwnProperty.call(exercise, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":264,"column":45,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12074,12076],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":8,"nodeType":"BlockStatement","messageId":"unexpected","endLine":268,"endColumn":2,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12084,12086],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/data/exercises/errorCorrection/C2/index.js\n\nimport errorCorrectionC2Full from './categories/errorCorrectionC2Full';\nimport errorCorrectionC2Identify from './categories/errorCorrectionC2Identify';\nimport errorCorrectionC2MultipleChoice from './categories/errorCorrectionC2MultipleChoice';\n\n// Combine all exercises from the 3 files\nconst allExercises = [\n  ...errorCorrectionC2Full,\n  ...errorCorrectionC2Identify,\n  ...errorCorrectionC2MultipleChoice\n];\n\n// Sort exercises by categoryId to maintain logical order\nallExercises.sort((a, b) => {\n  if (a.categoryId !== b.categoryId) {\n    return a.categoryId - b.categoryId;\n  }\n  // Within same category, order by type: full, identify, multiple_choice\n  const typeOrder = { 'full': 1, 'identify': 2, 'multiple_choice': 3 };\n  return typeOrder[a.type] - typeOrder[b.type];\n});\n\nconst errorCorrectionC2 = {\n  level: \"C2\",\n  totalExercises: allExercises.length,\n\n  // Statistics by type\n  statistics: {\n    full: errorCorrectionC2Full.length,\n    identify: errorCorrectionC2Identify.length,\n    multiple_choice: errorCorrectionC2MultipleChoice.length,\n    byCategory: {\n      1: { name: \"Literary & Artistic Language\", count: 12 },    // 4 full + 5 identify + 3 multiple_choice\n      2: { name: \"Sophisticated Rhetoric\", count: 10 },         // 4 full + 4 identify + 2 multiple_choice\n      3: { name: \"Linguistic Mastery\", count: 10 },             // 4 full + 4 identify + 2 multiple_choice\n      4: { name: \"Cultural Expertise\", count: 11 },             // 4 full + 5 identify + 2 multiple_choice\n      5: { name: \"Advanced Stylistics\", count: 11 }             // 4 full + 4 identify + 3 multiple_choice\n    }\n  },\n\n  // Categories metadata for C2 mastery level\n  categories: [\n    {\n      id: 1,\n      name: \"Literary & Artistic Language\",\n      description: \"Literary devices, aesthetic expression, artistic language mastery\",\n      exerciseCount: 12,\n      difficulty: \"Mastery\",\n      color: \"#3b82f6\",\n      topics: [\"literary devices\", \"aesthetic expression\", \"artistic language\", \"poetic structures\", \"literary analysis\", \"prosody\"],\n      commonErrors: [\"unnecessary articles\", \"redundant modifiers\", \"overly formal language\", \"redundant literary terms\"],\n      skillsTargeted: [\"literary sophistication\", \"aesthetic sensitivity\", \"artistic expression\", \"cultural literacy\", \"poetic awareness\"]\n    },\n    {\n      id: 2,\n      name: \"Sophisticated Rhetoric\",\n      description: \"Advanced rhetorical mastery, persuasive excellence, oratory sophistication\",\n      exerciseCount: 10,\n      difficulty: \"Mastery\",\n      color: \"#10b981\",\n      topics: [\"rhetorical mastery\", \"persuasive excellence\", \"dialectical reasoning\", \"oratory sophistication\", \"argumentative artistry\"],\n      commonErrors: [\"wordy constructions\", \"unnecessary formality\", \"redundant phrases\", \"weak intensifiers\"],\n      skillsTargeted: [\"rhetorical mastery\", \"persuasive artistry\", \"oratorical excellence\", \"argumentative sophistication\", \"dialectical thinking\"]\n    },\n    {\n      id: 3,\n      name: \"Linguistic Mastery\",\n      description: \"Perfect command of language, semantic precision, lexical sophistication\",\n      exerciseCount: 10,\n      difficulty: \"Mastery\",\n      color: \"#f59e0b\",\n      topics: [\"semantic mastery\", \"lexical precision\", \"linguistic sophistication\", \"perfect command\", \"stylistic finesse\"],\n      commonErrors: [\"redundant modifiers\", \"imprecise vocabulary\", \"unnecessary intensifiers\", \"wordy expressions\"],\n      skillsTargeted: [\"linguistic perfection\", \"semantic precision\", \"lexical mastery\", \"expressive excellence\", \"linguistic artistry\"]\n    },\n    {\n      id: 4,\n      name: \"Cultural Expertise\",\n      description: \"Deep cultural knowledge, literary references, mythological sophistication\",\n      exerciseCount: 11,\n      difficulty: \"Mastery\",\n      color: \"#8b5cf6\",\n      topics: [\"cultural mastery\", \"literary allusions\", \"mythological references\", \"cross-cultural competence\", \"archetypal understanding\"],\n      commonErrors: [\"unnecessary elaboration\", \"redundant cultural markers\", \"over-explanation\", \"wordy constructions\"],\n      skillsTargeted: [\"cultural expertise\", \"literary knowledge\", \"cultural sophistication\", \"intellectual breadth\", \"mythological literacy\"]\n    },\n    {\n      id: 5,\n      name: \"Advanced Stylistics\",\n      description: \"Stylistic mastery, register perfection, expressive sophistication\",\n      exerciseCount: 11,\n      difficulty: \"Mastery\",\n      color: \"#ef4444\",\n      topics: [\"stylistic mastery\", \"register perfection\", \"expressive sophistication\", \"artistic communication\", \"linguistic modulation\"],\n      commonErrors: [\"redundant specifications\", \"unnecessary intensifiers\", \"overly complex constructions\", \"lack of economy\"],\n      skillsTargeted: [\"stylistic excellence\", \"expressive mastery\", \"communicative artistry\", \"linguistic elegance\", \"expressive economy\"]\n    }\n  ],\n\n  // All exercises combined and sorted\n  exercises: allExercises,\n\n  // Master-level helper methods for C2\n  getExercisesByCategory: (categoryId) => {\n    return allExercises.filter(exercise => exercise.categoryId === categoryId);\n  },\n\n  getExercisesByType: (type) => {\n    return allExercises.filter(exercise => exercise.type === type);\n  },\n\n  getExercisesByCategoryAndType: (categoryId, type) => {\n    return allExercises.filter(exercise => \n      exercise.categoryId === categoryId && exercise.type === type\n    );\n  },\n\n  // Get exercises for mastery-level skills\n  getMasteryLevelExercises: () => {\n    return allExercises.filter(exercise => {\n      const wordCount = exercise.text.split(' ').length;\n      const hasAdvancedVocab = exercise.text.length > 120;\n      const hasSophisticatedTerms = ['literary', 'rhetorical', 'aesthetic', 'linguistic', 'cultural']\n        .some(term => exercise.text.toLowerCase().includes(term));\n      return wordCount >= 18 && hasAdvancedVocab && hasSophisticatedTerms;\n    });\n  },\n\n  // Get exercises with literary and cultural references\n  getLiteraryExercises: () => {\n    return allExercises.filter(exercise => {\n      const literaryKeywords = ['literary', 'poet', 'novelist', 'prose', 'rhetoric', 'aesthetic', 'artistic'];\n      return literaryKeywords.some(keyword => \n        exercise.text.toLowerCase().includes(keyword)\n      );\n    });\n  },\n\n  getCulturalReferenceExercises: () => {\n    return allExercises.filter(exercise => {\n      const culturalKeywords = ['Kafkaesque', 'quixotic', 'Faustian', 'Prometheus', 'Pandora', 'archetypal', 'mythological'];\n      return culturalKeywords.some(keyword => \n        exercise.text.includes(keyword) || exercise.correctedText.includes(keyword)\n      );\n    });\n  },\n\n  // Get exercises focusing on linguistic artistry\n  getArtisticLanguageExercises: () => {\n    return allExercises.filter(exercise => {\n      return exercise.categoryId === 1 || exercise.categoryId === 5 ||\n             exercise.explanation.toLowerCase().includes('artistic') ||\n             exercise.explanation.toLowerCase().includes('sophisticated');\n    });\n  },\n\n  // Get exercises for stylistic precision\n  getStylisticPrecisionExercises: () => {\n    return allExercises.filter(exercise => {\n      const precisionKeywords = ['redundant', 'unnecessary', 'elegant', 'sophisticated', 'precise'];\n      return precisionKeywords.some(keyword => \n        exercise.explanation.toLowerCase().includes(keyword)\n      );\n    });\n  },\n\n  // Ultimate validation for C2 mastery level\n  validateStructure: () => {\n    const requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];\n    const validTypes = ['full', 'identify', 'multiple_choice'];\n\n    return allExercises.every(exercise => {\n      // Check required fields\n      const hasRequiredFields = requiredFields.every(field => \n        exercise.hasOwnProperty(field) && exercise[field] !== undefined\n      );\n\n      // Check valid type\n      const hasValidType = validTypes.includes(exercise.type);\n\n      // Check valid category (1-5 for C2)\n      const hasValidCategory = exercise.categoryId >= 1 && exercise.categoryId <= 5;\n\n      // Check C2 mastery level complexity\n      const hasMasteryComplexity = exercise.text.split(' ').length >= 15;\n      const hasSophisticatedVocab = exercise.text.length > 100;\n      const hasAdvancedConcepts = exercise.explanation.length > 50; // Detailed explanations\n\n      // Check type-specific fields with C2 mastery standards\n      let hasTypeSpecificFields = true;\n      if (exercise.type === 'multiple_choice') {\n        hasTypeSpecificFields = exercise.choices && \n                               Array.isArray(exercise.choices) &&\n                               exercise.choices.length === 4 && // C2 should have exactly 4 sophisticated choices\n                               exercise.correctChoiceIndex !== undefined &&\n                               exercise.correctChoiceIndex >= 0 &&\n                               exercise.correctChoiceIndex < exercise.choices.length &&\n                               exercise.choices.every(choice => choice.length > 3); // Sophisticated vocabulary\n      } else {\n        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);\n      }\n\n      return hasRequiredFields && hasValidType && hasValidCategory && \n             hasMasteryComplexity && hasSophisticatedVocab && hasAdvancedConcepts && hasTypeSpecificFields;\n    });\n  },\n\n  // Comprehensive C2 mastery summary with ultimate metrics\n  getSummary: () => {\n    const totalErrorPositions = allExercises\n      .filter(ex => ex.errorPositions)\n      .reduce((sum, ex) => sum + ex.errorPositions.length, 0);\n\n    const totalTextLength = allExercises.reduce((sum, ex) => sum + ex.text.length, 0);\n    const masteryExercises = errorCorrectionC2.getMasteryLevelExercises().length;\n    const literaryExercises = errorCorrectionC2.getLiteraryExercises().length;\n    const culturalExercises = errorCorrectionC2.getCulturalReferenceExercises().length;\n    const artisticExercises = errorCorrectionC2.getArtisticLanguageExercises().length;\n\n    return {\n      level: \"C2\",\n      totalExercises: allExercises.length,\n      categories: errorCorrectionC2.categories.length,\n      difficulty: \"Mastery\",\n      focus: \"Perfect linguistic command, literary sophistication, cultural expertise, artistic expression\",\n      progression: \"Ultimate mastery: native-speaker level precision with artistic and cultural sophistication\",\n      distribution: {\n        full: errorCorrectionC2Full.length,\n        identify: errorCorrectionC2Identify.length,\n        multiple_choice: errorCorrectionC2MultipleChoice.length\n      },\n      complexity: {\n        averageTextLength: Math.round(totalTextLength / allExercises.length),\n        averageWordCount: Math.round(allExercises.reduce((sum, ex) => sum + ex.text.split(' ').length, 0) / allExercises.length),\n        totalErrorPositions: totalErrorPositions,\n        averageErrorsPerExercise: Math.round(totalErrorPositions / allExercises.filter(ex => ex.errorPositions).length * 10) / 10,\n        masteryExercisesPercentage: Math.round((masteryExercises / allExercises.length) * 100),\n        literaryFocusPercentage: Math.round((literaryExercises / allExercises.length) * 100),\n        culturalReferencePercentage: Math.round((culturalExercises / allExercises.length) * 100),\n        artisticLanguagePercentage: Math.round((artisticExercises / allExercises.length) * 100)\n      },\n      masteryIndicators: [\n        \"Perfect linguistic precision\",\n        \"Literary and artistic sophistication\", \n        \"Advanced cultural competence\",\n        \"Stylistic and rhetorical mastery\",\n        \"Semantic and expressive perfection\"\n      ],\n      skillsTargeted: [\n        \"Perfect linguistic mastery\",\n        \"Literary and artistic sophistication\",\n        \"Advanced cultural competence\",\n        \"Stylistic and rhetorical excellence\",\n        \"Semantic and expressive precision\",\n        \"Communicative artistry\",\n        \"Linguistic elegance\"\n      ]\n    };\n  }\n};\n\n// Validate structure on export\nif (!errorCorrectionC2.validateStructure()) {\n\n} else {\n\n}\n\nexport default errorCorrectionC2;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\fastVocabulary\\1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\fastVocabulary\\2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\fastVocabulary\\3.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\fastVocabulary\\4.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\fastVocabulary\\5.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\fastVocabulary\\6.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\fastVocabulary\\bonus.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\A1\\exercices\\grammarExercisesA1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\A1\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\A1\\rules\\grammarRulesA1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\A2\\exercices\\grammarExercisesA2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\A2\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\A2\\rules\\grammarRulesA2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\B1\\exercices\\grammarExercisesB1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\B1\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\B1\\rules\\grammarRulesB1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\B2\\exercices\\grammarExercisesB2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\B2\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\B2\\rules\\grammarRulesB2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\C1\\exercices\\grammarExercisesC1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\C1\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\C1\\rules\\grammarRulesC1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\C2\\exercices\\grammarExercisesC2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\C2\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\grammar\\C2\\rules\\grammarRulesC2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\asking-help.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\basic-needs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\food-restaurant.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\locations-directions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\numbers-date-time.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\personal-intro.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\salutations-polite.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\simple-descriptions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\simple-shopping.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\weather-seasons.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\generate-index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\metadata.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\communication.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\daily-routines.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\future-plans.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\health-wellbeing.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\housing-environment.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\leisure-freetime.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\opinions-preferences.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\past-experiences.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\simple-complaints.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\social-life.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\travel-transport.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\work-studies.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\metadata.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\advice-recommendations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\agreements-disagreements.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\comparisons-contrasts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\culture-entertainment.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\environment-society.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\event-narration.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\formal-requests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\nuanced-feelings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\opinions-preferences.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\past-experiences.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\professional-communication.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\categories\\technology.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\metadata.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\advanced-health.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\advantages-disadvantages.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\arguments-debates.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\arts-literature.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\cause-consequence.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\complaints-problem-solving.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\complex-processes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\diplomatic-communication.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\economy-politics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\environment-social-issues.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\hypotheses-conditions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\idiomatic-expressions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\meetings-presentations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\categories\\retrospective-reflection.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\4\\metadata.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\advanced-technology-science.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\certitude-doubt-expressions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\complex-debates.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\critiques-evaluations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\euphemisms-diplomatic-language.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\formal-informal-discourse.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\historical-cultural-references.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\humor-cultural-subtleties.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\idiomatic-expressions-advanced.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\innovation-entrepreneurship.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\international-relations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\literary-expressions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\negotiations-persuasion.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\categories\\opinion-nuances.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\5\\metadata.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\academic-scientific.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\advanced-intercultural-communication.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\complex-analysis-interpretation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\irony-sarcasm-humor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\legal-administrative.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\literary-artistic-criticism.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\metaphors-cultural-allusions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\poetic-figurative-language.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\precise-emotional-nuances.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\quotes-cultural-references.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\rare-idiomatic-expressions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\rhetoric-sophisticated-persuasion.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\stylistic-mastery-variations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\categories\\wordplay-double-meaning.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\6\\metadata.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\categories\\food-restaurant.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\categories\\modern-life-situations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\categories\\phrasal-verbs-context.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\categories\\problems-complaints.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\categories\\reactions-emotions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\categories\\relationship-dynamics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\categories\\shopping-consumer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\categories\\slang-conversations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\categories\\small-talk-social.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\categories\\workplace-casual.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\bonus\\metadata.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\1\\categories\\readingQuestionsA1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\1\\categories\\readingTextsA1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\1\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\2\\categories\\readingQuestionsA2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\2\\categories\\readingTextsA2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\2\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\3\\categories\\readingQuestionsB1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\3\\categories\\readingTextsB1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\3\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\4\\categories\\readingQuestionsB2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\4\\categories\\readingTextsB2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\4\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\5\\categories\\readingQuestionsC1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\5\\categories\\readingTextsC1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\5\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\6\\categories\\readingQuestionsC2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\6\\categories\\readingTextsC2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\6\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\bonus\\categories\\readingQuestionsBonus.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\bonus\\categories\\readingTextsBonus.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\reading\\bonus\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\1\\spellingCorrection1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\1\\spellingHomophones1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\1\\spellingRules1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\2\\spellingCorrection2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\2\\spellingHomophones2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\2\\spellingRules2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\3\\spellingCorrection3.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\3\\spellingHomophones3.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\3\\spellingRules3.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\4\\spellingCorrection4.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\4\\spellingHomophones4.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\4\\spellingRules4.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\5\\spellingCorrection5.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\5\\spellingHomophones5.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\5\\spellingRules5.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\6\\spellingCorrection6.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\6\\spellingHomophones6.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\6\\spellingRules6.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\01_identite.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\02_famille.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\03_chiffres.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\04_temps.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\05_maison.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\06_nourriture.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\07_vetements.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\08_activites.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\09_lieux.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\10_transports.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\11_meteo.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\12_achats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\13_communication.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\14_loisirs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\15_emotions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\16_animals.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\17_couleurs_et_formes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\generate-index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\01_identite_elargie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\02_famille_relations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\03_logement_environnement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\04_urbain_rural.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\05_travail_professionnel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\06_alimentation_elargie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\07_sante_corps.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\08_achats_services.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\09_transports_voyages.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\10_education_apprentissage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\11_loisirs_culture.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\12_temps_meteo.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\13_communications.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\14_nature_environnement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\15_actualites_evenements.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\generate-index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\01_expression.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\02_relations_interpersonnelles.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\03_monde_du_travail.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\04_habitation_style_de_vie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\05_voyages_decouvertes_culturelles.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\06_alimentation_gastronomie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\07_sante_bien_etre.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\08_consommation_tendances.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\09_education_formation_continue.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\10_medias_information.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\11_technologie_innovations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\12_environnement_enjeux_ecologiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\13_culture_arts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\14_sports_activites_physiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\15_societe_questions_sociales.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\generate-index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\01_identite_complexe_et_psychologie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\02_relations_et_dynamiques_sociales.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\03_economie_et_monde_des_affaires.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\04_urbanisme_et_amenagement_du_territoire.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\05_sante_publique_et_systemes_de_sante.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\06_technologies_de_l_information_et_communication.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\07_questions_environnementales_avancees.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\08_politique_et_gouvernance.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\09_justice_et_droit.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\10_education_superieure_et_recherche.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\11_arts_et_critique_culturelle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\12_medias_avances_et_communication_de_masse.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\13_debats_societaux_contemporains.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\14_economie_globale_et_finances.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\15_sciences_et_applications_technologiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\16_enjeux_mondiaux_et_cooperation_internationale.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token {","line":105,"column":1}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const vocab = {\n  title: \"Enjeux Mondiaux et Coopération Internationale\",\n  words: [\n    // Organisations et structures internationales (38 mots)\n\n    { word: \"United Nations\", translation: \"Nations Unies\", example: \"The United Nations General Assembly meets annually to discuss global challenges.\" },\n\n    { word: \"bilateral agreement\", translation: \"accord bilatéral\", example: \"The bilateral agreement facilitated trade between the neighboring countries.\" },\n    { word: \"multilateral cooperation\", translation: \"coopération multilatérale\", example: \"Multilateral cooperation is essential to address transboundary environmental issues.\" },\n\n    { word: \"diplomatic relations\", translation: \"relations diplomatiques\", example: \"The countries have maintained diplomatic relations for over fifty years.\" },\n    { word: \"peacekeeping mission\", translation: \"mission de maintien de la paix\", example: \"The peacekeeping mission helps stabilize the region following the conflict.\" },\n\n    { word: \"human rights council\", translation: \"conseil des droits de l'homme\", example: \"The Human Rights Council investigated reports of abuses in the conflict zone.\" },\n    { word: \"diplomatic corps\", translation: \"corps diplomatique\", example: \"Members of the diplomatic corps attended the national day celebration.\" },\n\n    { word: \"sanctions\", translation: \"sanctions\", example: \"Economic sanctions were imposed following violations of the peace agreement.\" },\n    { word: \"ambassador\", translation: \"ambassadeur\", example: \"The newly appointed ambassador presented her credentials to the host government.\" },\n    { word: \"embassy\", translation: \"ambassade\", example: \"Citizens sought assistance at their embassy following the natural disaster.\" },\n    { word: \"consulate\", translation: \"consulat\", example: \"The consulate processed visa applications for travelers to the region.\" },\n\n    { word: \"international community\", translation: \"communauté internationale\", example: \"The international community expressed concern about the deteriorating situation.\" },\n\n    { word: \"international aid\", translation: \"aide internationale\", example: \"International aid was mobilized following the devastating earthquake.\" },\n\n    { word: \"secretary-general\", translation: \"secrétaire général\", example: \"The Secretary-General urged member states to increase their climate commitments.\" },\n    { word: \"diplomatic channel\", translation: \"voie diplomatique\", example: \"The countries communicated through diplomatic channels to avoid public confrontation.\" },\n    { word: \"international waters\", translation: \"eaux internationales\", example: \"The incident occurred in international waters, complicating jurisdiction questions.\" },\n    { word: \"international alliance\", translation: \"alliance internationale\", example: \"The international alliance coordinated military operations against terrorist groups.\" },\n\n    { word: \"diplomatic crisis\", translation: \"crise diplomatique\", example: \"The diplomatic crisis escalated after the expulsion of several ambassadors.\" },\n\n    { word: \"sovereign state\", translation: \"État souverain\", example: \"As a sovereign state, the country determines its own domestic policies.\" },\n\n    // Enjeux mondiaux (37 mots)\n\n    { word: \"greenhouse gas emissions\", translation: \"émissions de gaz à effet de serre\", example: \"The agreement commits countries to reducing greenhouse gas emissions significantly.\" },\n\n    { word: \"biodiversity loss\", translation: \"perte de biodiversité\", example: \"Habitat destruction accelerates biodiversity loss worldwide.\" },\n\n    { word: \"water scarcity\", translation: \"pénurie d'eau\", example: \"Water scarcity affects over two billion people globally.\" },\n    { word: \"refugee crisis\", translation: \"crise des réfugiés\", example: \"The refugee crisis requires coordinated international responses.\" },\n    { word: \"human rights violation\", translation: \"violation des droits de l'homme\", example: \"The report documented numerous human rights violations in the region.\" },\n\n    { word: \"humanitarian crisis\", translation: \"crise humanitaire\", example: \"The conflict has triggered a humanitarian crisis affecting millions.\" },\n\n    { word: \"infectious disease\", translation: \"maladie infectieuse\", example: \"Global travel facilitates the spread of infectious diseases across borders.\" },\n\n    { word: \"nuclear proliferation\", translation: \"prolifération nucléaire\", example: \"The treaty aims to prevent nuclear proliferation through verification measures.\" },\n    { word: \"terrorism\", translation: \"terrorisme\", example: \"Countering terrorism requires international intelligence sharing and cooperation.\" },\n\n    { word: \"cross-border crime\", translation: \"criminalité transfrontalière\", example: \"Cross-border crime includes human trafficking, drug smuggling, and money laundering.\" },\n    { word: \"economic inequality\", translation: \"inégalité économique\", example: \"Economic inequality has increased within many countries despite overall growth.\" },\n\n    { word: \"disarmament\", translation: \"désarmement\", example: \"The disarmament negotiations aim to reduce conventional weapons stockpiles.\" },\n    { word: \"peace process\", translation: \"processus de paix\", example: \"The peace process involves multiple rounds of negotiations between conflict parties.\" },\n\n    { word: \"arms control\", translation: \"contrôle des armements\", example: \"Arms control agreements limit specific weapons technologies and quantities.\" },\n\n    { word: \"population growth\", translation: \"croissance démographique\", example: \"Rapid population growth creates challenges for urban infrastructure and services.\" },\n    { word: \"border dispute\", translation: \"litige frontalier\", example: \"The longstanding border dispute occasionally flares into minor confrontations.\" },\n\n    // Développement international et aide (38 mots)\n    { word: \"humanitarian aid\", translation: \"aide humanitaire\", example: \"Humanitarian aid was dispatched to the earthquake-affected regions.\" },\n    { word: \"development assistance\", translation: \"aide au développement\", example: \"Development assistance focuses on building long-term capacity rather than short-term relief.\" },\n\n    { word: \"disaster relief\", translation: \"secours en cas de catastrophe\", example: \"International disaster relief arrived within days of the hurricane.\" },\n    { word: \"poverty alleviation\", translation: \"réduction de la pauvreté\", example: \"Microcredit programs contribute to poverty alleviation in rural communities.\" },\n    { word: \"capacity building\", translation: \"renforcement des capacités\", example: \"The program focuses on capacity building for local government officials.\" },\n    { word: \"developing country\", translation: \"pays en développement\", example: \"The initiative provides technological support to developing countries.\" },\n    { word: \"developed nation\", translation: \"pays développé\", example: \"Developed nations pledged climate finance for vulnerable countries.\" },\n    { word: \"emerging economy\", translation: \"économie émergente\", example: \"The emerging economy has seen rapid growth in the technology sector.\" },\n    { word: \"least developed country\", translation: \"pays les moins avancés\", example: \"Special trade provisions apply to least developed countries under the agreement.\" },\n    { word: \"technical assistance\", translation: \"assistance technique\", example: \"The organization provides technical assistance in water management practices.\" },\n    { word: \"developmental goal\", translation: \"objectif de développement\", example: \"Universal education remains a key developmental goal worldwide.\" },\n\n    { word: \"sustainable growth\", translation: \"croissance durable\", example: \"The policy promotes sustainable growth through green technology incentives.\" },\n    { word: \"donor country\", translation: \"pays donateur\", example: \"The donor country attached conditions to its financial assistance package.\" },\n    { word: \"recipient nation\", translation: \"pays bénéficiaire\", example: \"The recipient nation implemented transparency measures for aid management.\" },\n    { word: \"aid effectiveness\", translation: \"efficacité de l'aide\", example: \"Research examines factors influencing aid effectiveness across contexts.\" },\n\n    { word: \"debt relief\", translation: \"allègement de la dette\", example: \"Debt relief enabled the country to increase education spending.\" },\n    { word: \"financial assistance\", translation: \"assistance financière\", example: \"Financial assistance was conditional on governance reforms.\" },\n\n    { word: \"rural development\", translation: \"développement rural\", example: \"The program supports rural development through agricultural modernization.\" },\n\n    { word: \"infrastructure development\", translation: \"développement des infrastructures\", example: \"Infrastructure development focuses on renewable energy and digital connectivity.\" },\n\n    { word: \"education access\", translation: \"accès à l'éducation\", example: \"Improving education access for girls remains a priority initiative.\" },\n    { word: \"literacy program\", translation: \"programme d'alphabétisation\", example: \"The literacy program targets adult learners in underserved communities.\" },\n    { word: \"vaccination campaign\", translation: \"campagne de vaccination\", example: \"The global vaccination campaign aims to eradicate the disease.\" },\n    { word: \"maternal health\", translation: \"santé maternelle\", example: \"Improving maternal health reduces preventable mortality in developing regions.\" },\n    { word: \"child mortality\", translation: \"mortalité infantile\", example: \"Child mortality rates have declined significantly following the intervention.\" },\n\n    { word: \"grassroots organization\", translation: \"organisation locale\", example: \"The grassroots organization mobilizes residents for neighborhood improvement initiatives.\" },\n    { word: \"microfinance\", translation: \"microfinance\", example: \"Microfinance provides small business loans to entrepreneurs without access to traditional banking.\" },\n    { word: \"social enterprise\", translation: \"entreprise sociale\", example: \"The social enterprise creates employment while addressing environmental challenges.\" },\n    { word: \"sustainable livelihood\", translation: \"moyens de subsistance durables\", example: \"Training programs promote sustainable livelihoods through diversified income sources.\" },\n\n    { word: \"knowledge sharing\", translation: \"partage des connaissances\", example: \"The platform facilitates knowledge sharing between practitioners worldwide.\" }\n// 30 mots à ajouter dans 16_enjeux_mondiaux_et_cooperation_internationale.js\n// Pour passer de 64 à 94 mots\n\n// Commerce international et économie mondiale (10 mots)\n{ word: \"global trade\", translation: \"commerce mondial\", example: \"Global trade policies affect economic development in emerging markets.\" },\n{ word: \"free trade agreement\", translation: \"accord de libre-échange\", example: \"The free trade agreement eliminated tariffs between member countries.\" },\n\n{ word: \"economic partnership\", translation: \"partenariat économique\", example: \"The economic partnership promotes investment and technology transfer.\" },\n{ word: \"global supply chain\", translation: \"chaîne d'approvisionnement mondiale\", example: \"The pandemic disrupted global supply chains across multiple industries.\" },\n\n{ word: \"foreign investment\", translation: \"investissement étranger\", example: \"Foreign investment can stimulate economic growth but may create dependencies.\" },\n\n{ word: \"financial markets\", translation: \"marchés financiers\", example: \"Global financial markets are increasingly interconnected and volatile.\" },\n{ word: \"economic sanctions\", translation: \"sanctions économiques\", example: \"Economic sanctions aim to change behavior through financial pressure.\" },\n\n// Migration et mouvement de populations (10 mots)\n\n{ word: \"asylum seeker\", translation: \"demandeur d'asile\", example: \"Asylum seekers require legal protection while their cases are processed.\" },\n{ word: \"internally displaced person\", translation: \"personne déplacée à l'intérieur du pays\", example: \"Internally displaced persons often face similar challenges to refugees.\" },\n\n{ word: \"remittances\", translation: \"envois de fonds\", example: \"Remittances from migrant workers support families and local economies.\" },\n{ word: \"integration policy\", translation: \"politique d'intégration\", example: \"Effective integration policies help migrants contribute to host societies.\" },\n{ word: \"stateless person\", translation: \"apatride\", example: \"Stateless persons lack citizenship protection and face legal difficulties.\" },\n\n{ word: \"border control\", translation: \"contrôle frontalier\", example: \"Border control must balance security concerns with humanitarian obligations.\" },\n{ word: \"resettlement program\", translation: \"programme de réinstallation\", example: \"The resettlement program helps refugees rebuild their lives in host countries.\" },\n\n// Défis technologiques et gouvernance globale (10 mots)\n\n{ word: \"cyber warfare\", translation: \"cyberguerre\", example: \"Cyber warfare poses new challenges to international security frameworks.\" },\n\n{ word: \"treaty negotiation\", translation: \"négociation de traité\", example: \"Treaty negotiations often require years of diplomatic discussions.\" },\n{ word: \"compliance monitoring\", translation: \"suivi de la conformité\", example: \"Compliance monitoring ensures countries meet their international obligations.\" },\n{ word: \"multilateral institution\", translation: \"institution multilatérale\", example: \"Multilateral institutions coordinate responses to global challenges.\" },\n{ word: \"global citizenship\", translation: \"citoyenneté mondiale\", example: \"Education promotes global citizenship and cross-cultural understanding.\" }\n  ]\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\categories\\17_entrepreneuriat_et_economie_pratique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\generate-index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\4\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\01_analyse_psychosociale_et_comportementale.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\02_communication_strategique_et_rhetorique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\03_economie_politique_et_systemes_mondiaux.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\04_gouvernance_et_politiques_publiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\05_recherche_scientifique_et_methodologie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\06_systemes_juridiques_compares.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\07_analyse_litteraire_et_critique_textuelle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\08_technologies_emergentes_et_prospective.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\09_enjeux_environnementaux_systemiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\10_expression_idiomatique_et_culturelle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\11_dynamiques_socioculturelles.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\12_medias_internationaux_et_communication_globale.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\13_arts_contemporains_et_pratiques_creatives.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\14_relations_internationales.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\15_sante_globale_et_enjeux_biomedical.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\16_gestion_des_risques_globaux.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\17_innovation_et_transformation_numerique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\generate-index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\01_finance_corporative.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\02_marches_financiers.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\03_management_strategie.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\04_technologies_emergentes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\05_sciences_medicales.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\06_environnement_developpement_durable.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\07_droit_commercial_international.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\08_diplomatie_negociations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\09_organisations_institutions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\10_litterature_critique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\11_arts_visuels.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\12_ia_ethique_technologies.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\13_medias_numeriques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\14_rhetorique_art_oratoire.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\15_communication_interculturelle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\16_expressions_idiomatiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\17_nuances_linguistiques.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\18_geopolitique_contemporaine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\19_enjeux_sociaux.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\20_methodologie_recherche.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\21_redaction_academique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\22_cybersecurite.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\23_intelligence_artificielle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\24_sante_publique.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\25_psychologie_sante_mentale.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\generate-index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\01_american_slang.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\02_british_slang.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\03_digital.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\04_emotions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\05_fillers.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\06_foodculture.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\07_ice_breakers.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\08_idiomes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\09_intensificateurs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\10_internet.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\11_neo.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\12_outdoor_life.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\13_phrasal_verbs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\14_psycho.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\15_relations_sociales.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\16_sarcasme.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\17_situations_quotidien.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\18_slang.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\19_temporelle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\20_urban.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\categories\\21_workplace_slang.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\generate-index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\bonus\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\word-games\\wordGamesA1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\word-games\\wordGamesA2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\word-games\\wordGamesB1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\word-games\\wordGamesB2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\word-games\\wordGamesC1.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\word-games\\wordGamesC2.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\hooks\\useActivityMetrics.js","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadMetrics'. Either include it or remove the dependency array.","line":17,"column":6,"nodeType":"ArrayExpression","endLine":17,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [loadMetrics]","fix":{"range":[638,640],"text":"[loadMetrics]"}}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":41,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":41,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'exerciseType' is defined but never used.","line":47,"column":37,"nodeType":"Identifier","messageId":"unusedVar","endLine":47,"endColumn":49,"suggestions":[{"messageId":"removeVar","data":{"varName":"exerciseType"},"fix":{"range":[1548,1560],"text":""},"desc":"Remove unused variable 'exerciseType'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":70,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":70,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":99,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":99,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/hooks/useActivityMetrics.js - TEMPS QUOTIDIEN\n\nimport { useState, useEffect, useCallback } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst useActivityMetrics = () => {\n  const [currentStreak, setCurrentStreak] = useState(0);\n  const [todayMinutes, setTodayMinutes] = useState(0); // ✅ CHANGÉ : quotidien\n  const [sessionStart, setSessionStart] = useState(null);\n\n  // =================== DATES HELPER ===================\n  const getTodayString = () => new Date().toDateString();\n\n  // =================== CHARGEMENT INITIAL ===================\n  useEffect(() => {\n    loadMetrics();\n  }, []);\n\n  const loadMetrics = async () => {\n    try {\n      const today = getTodayString();\n      \n      const [streakData, timeData, lastDateData] = await Promise.all([\n        AsyncStorage.getItem('current_streak'),\n        AsyncStorage.getItem('today_minutes'),\n        AsyncStorage.getItem('last_time_date')\n      ]);\n\n      setCurrentStreak(parseInt(streakData || '0'));\n      \n      // ✅ CORRECTION : Vérifier si c'est aujourd'hui\n      const lastDate = lastDateData;\n      if (lastDate === today) {\n        setTodayMinutes(parseInt(timeData || '0'));\n      } else {\n        // Nouveau jour = reset\n        setTodayMinutes(0);\n        await AsyncStorage.setItem('today_minutes', '0');\n        await AsyncStorage.setItem('last_time_date', today);\n      }\n    } catch (error) {\n      // Silently fail\n    }\n  };\n\n  // =================== SESSION TIMER ===================\n  const startSession = useCallback((exerciseType) => {\n    setSessionStart(Date.now());\n  }, []);\n\n  const endSession = useCallback(async () => {\n    if (!sessionStart) return;\n\n    try {\n      const sessionEnd = Date.now();\n      const sessionMinutes = Math.round((sessionEnd - sessionStart) / 60000);\n\n      if (sessionMinutes > 0) {\n        const newTodayTotal = todayMinutes + sessionMinutes;\n        setTodayMinutes(newTodayTotal);\n        \n        const today = getTodayString();\n        await Promise.all([\n          AsyncStorage.setItem('today_minutes', newTodayTotal.toString()),\n          AsyncStorage.setItem('last_time_date', today)\n        ]);\n      }\n\n      setSessionStart(null);\n    } catch (error) {\n      // Silently fail\n    }\n  }, [sessionStart, todayMinutes]);\n\n  // =================== STREAK LOGIC ===================\n  const updateStreak = useCallback(async () => {\n    try {\n      const today = getTodayString();\n      const lastDate = await AsyncStorage.getItem('last_activity_date');\n      \n      if (lastDate !== today) {\n        const yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n        const isYesterday = lastDate === yesterday.toDateString();\n        \n        let newStreak;\n        if (isYesterday) {\n          newStreak = currentStreak + 1;\n        } else {\n          newStreak = 1;\n        }\n        \n        setCurrentStreak(newStreak);\n        await Promise.all([\n          AsyncStorage.setItem('current_streak', newStreak.toString()),\n          AsyncStorage.setItem('last_activity_date', today)\n        ]);\n      }\n    } catch (error) {\n      // Silently fail\n    }\n  }, [currentStreak]);\n\n  // =================== GETTERS ===================\n  const getStreakTrend = useCallback(() => {\n    if (currentStreak >= 7) return '🏆 Incroyable!';\n    if (currentStreak >= 3) return '💪 En forme!';\n    if (currentStreak >= 1) return '🔥 Continue!';\n    return null;\n  }, [currentStreak]);\n\n  const getFormattedTime = useCallback(() => {\n    if (todayMinutes < 60) {\n      return `${todayMinutes}min`;\n    } else {\n      const hours = Math.floor(todayMinutes / 60);\n      const mins = todayMinutes % 60;\n      return `${hours}h${mins > 0 ? `${mins}min` : ''}`;\n    }\n  }, [todayMinutes]);\n\n  return {\n    startSession,\n    endSession,\n    updateStreak,\n    \n    currentStreak: currentStreak || 0,\n    todayMinutes: todayMinutes || 0, // ✅ CHANGÉ : quotidien\n    \n    streakTrend: getStreakTrend(),\n    formattedTime: getFormattedTime() || '0min',\n  };\n};\n\nexport default useActivityMetrics;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\hooks\\useDailyWords.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":59,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":59,"endColumn":23},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":66,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":66,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/hooks/useDailyWords.js - SANS TREND\n\nimport { useState, useEffect, useCallback } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n/**\n * 📅 Hook pour compter les mots appris AUJOURD'HUI\n * Reset automatique à minuit\n * Focus sur vocabulary CLASSIC uniquement\n * ✅ PLUS DE TREND - juste le nombre\n */\nconst useDailyWords = () => {\n  const [wordsToday, setWordsToday] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // =================== DATES HELPER ===================\n  const getTodayString = () => new Date().toDateString();\n\n  // =================== CALCUL DES MOTS QUOTIDIENS ===================\n  const calculateDailyWords = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const today = getTodayString();\n      let todayCount = 0;\n\n      // Parcourir tous les niveaux (1 à 6)\n      const levels = ['1', '2', '3', '4', '5', '6'];\n      \n      for (const level of levels) {\n        try {\n          // ✅ Seulement vocabulary CLASSIC (pas fast)\n          const storageKey = `vocabulary_${level}_classic`;\n          const savedData = await AsyncStorage.getItem(storageKey);\n          \n          if (savedData) {\n            const data = JSON.parse(savedData);\n            const completedWords = data.completedWords || {};\n\n            // Parcourir chaque catégorie\n            Object.keys(completedWords).forEach(categoryIndex => {\n              const wordsInCategory = completedWords[categoryIndex] || [];\n              \n              wordsInCategory.forEach(word => {\n                // ✅ COMPATIBILITÉ : Ancien format (number) vs nouveau format (object)\n                if (typeof word === 'object' && word.timestamp) {\n                  // Nouveau format avec timestamp\n                  const wordDate = new Date(word.timestamp).toDateString();\n                  \n                  if (wordDate === today) {\n                    todayCount++;\n                  }\n                } else {\n                  // Ancien format (number) - on ne peut pas savoir la date\n                  // Pour compatibilité, on les ignore dans le comptage quotidien\n                }\n              });\n            });\n          }\n        } catch (error) {\n          // Continue avec les autres niveaux si erreur\n        }\n      }\n\n      setWordsToday(todayCount);\n\n    } catch (error) {\n      setWordsToday(0);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // =================== CHARGEMENT INITIAL ===================\n  useEffect(() => {\n    calculateDailyWords();\n  }, [calculateDailyWords]);\n\n  // =================== AUTO-REFRESH À MINUIT ===================\n  useEffect(() => {\n    const now = new Date();\n    const tomorrow = new Date(now);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    tomorrow.setHours(0, 0, 0, 0); // Minuit\n    \n    const timeUntilMidnight = tomorrow.getTime() - now.getTime();\n    \n    // Timer pour refresh à minuit\n    const midnightTimer = setTimeout(() => {\n      calculateDailyWords(); // Reset automatique\n      \n      // Ensuite refresh chaque 24h\n      const dailyInterval = setInterval(calculateDailyWords, 24 * 60 * 60 * 1000);\n      \n      return () => clearInterval(dailyInterval);\n    }, timeUntilMidnight);\n\n    return () => clearTimeout(midnightTimer);\n  }, [calculateDailyWords]);\n\n  // =================== REFRESH MANUEL ===================\n  const refresh = useCallback(() => {\n    calculateDailyWords();\n  }, [calculateDailyWords]);\n\n  return {\n    wordsToday: wordsToday || 0,     // ✅ Juste le nombre\n    isLoading,\n    refresh,\n    // ✅ SUPPRIMÉ : wordsYesterday, trend, getTrend()\n  };\n};\n\nexport default useDailyWords;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\hooks\\useLastActivity.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":60,"column":86,"nodeType":"Identifier","messageId":"unusedVar","endLine":60,"endColumn":87},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":60,"column":89,"nodeType":"BlockStatement","messageId":"unexpected","endLine":60,"endColumn":91,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2080,2080],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/hooks/useLastActivity.js - VERSION CORRIGÉE AVEC useCallback\nimport { useState, useEffect, useCallback } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { STORAGE_KEYS } from '../utils/constants';\n\nconst useLastActivity = () => {\n  const [lastActivity, setLastActivity] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // ========== CHARGEMENT ==========\n  const loadLastActivity = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const stored = await AsyncStorage.getItem(STORAGE_KEYS.LAST_ACTIVITY);\n      \n      if (stored) {\n        const activity = JSON.parse(stored);\n        \n        // Calculer temps écoulé simple\n        const now = Date.now();\n        const diffInMinutes = Math.floor((now - activity.timestamp) / (1000 * 60));\n        \n        let timeElapsed = \"À l'instant\";\n        if (diffInMinutes < 60) {\n          timeElapsed = diffInMinutes === 0 ? \"À l'instant\" : `Il y a ${diffInMinutes} min`;\n        } else if (diffInMinutes < 1440) {\n          const hours = Math.floor(diffInMinutes / 60);\n          timeElapsed = `Il y a ${hours}h`;\n        } else {\n          const days = Math.floor(diffInMinutes / 1440);\n          timeElapsed = `Il y a ${days}j`;\n        }\n        \n        setLastActivity({\n          ...activity,\n          timeElapsed\n        });\n      } else {\n        setLastActivity(null);\n      }\n    } catch (error) {\n      console.error('Erreur chargement dernière activité:', error);\n      setLastActivity(null);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []); // ✅ Aucune dépendance - stable\n\n  // ========== SAUVEGARDE MÉMORISÉE ==========\n  const saveActivity = useCallback(async (activityData) => {\n    try {\n      const activity = {\n        ...activityData,\n        timestamp: Date.now()\n      };\n      \n      await AsyncStorage.setItem(STORAGE_KEYS.LAST_ACTIVITY, JSON.stringify(activity));\n      \n      // Event bus : notifier la progression\n      try { require('../utils/eventBus').emit('progress-updated', activity); } catch(e) {}\n      // Mettre à jour l'état local avec temps écoulé\n      setLastActivity({\n        ...activity,\n        timeElapsed: \"À l'instant\"\n      });\n    } catch (error) {\n      console.error('Erreur sauvegarde activité:', error);\n    }\n  }, []); // ✅ CRUCIAL : Aucune dépendance - fonction stable\n\n  // ========== SUPPRESSION MÉMORISÉE ==========\n  const clearActivity = useCallback(async () => {\n    try {\n      await AsyncStorage.removeItem(STORAGE_KEYS.LAST_ACTIVITY);\n      setLastActivity(null);\n    } catch (error) {\n      console.error('Erreur suppression activité:', error);\n    }\n  }, []); // ✅ Fonction stable\n\n  // ========== CHARGEMENT INITIAL ==========\n  useEffect(() => {\n    loadLastActivity();\n  }, [loadLastActivity]);\n\n  return {\n    lastActivity,\n    isLoading,\n    saveActivity, // ✅ Maintenant stable entre les renders\n    clearActivity, // ✅ Maintenant stable\n    reload: loadLastActivity // ✅ Maintenant stable\n  };\n};\n\nexport default useLastActivity;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\hooks\\useRealTimeProgress.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":44,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":44,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":78,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":78,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":106,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":106,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":133,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":133,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":153,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":153,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":180,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":180,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":204,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":204,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":231,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":231,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":254,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":254,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":270,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":270,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/hooks/useRealTimeProgress.js - CORRIGÉ - Juste les vraies données\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { getVocabularyData } from '../utils/vocabulary/vocabularyDataHelper';\r\n\r\nconst useRealTimeProgress = () => {\r\n  const [levelProgress, setLevelProgress] = useState({});\r\n  const [exerciseProgress, setExerciseProgress] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // =================== VOCABULAIRE - CORRECTION PRINCIPALE ===================\r\n  \r\n  const calculateVocabularyProgress = async (level) => {\r\n    try {\r\n      const storageKey = `vocabulary_${level}_classic`;\r\n      const savedData = await AsyncStorage.getItem(storageKey);\r\n      \r\n      if (!savedData) return 0;\r\n      \r\n      const data = JSON.parse(savedData);\r\n      const completedWords = data.completedWords || {};\r\n      \r\n      // ✅ FIX : Récupérer les VRAIES données comme useVocabulary.js\r\n      const vocabularyData = getVocabularyData(level, 'classic');\r\n      if (!vocabularyData?.exercises) return 0;\r\n      \r\n      // ✅ FIX : Calcul réel du total comme ligne 168 de useVocabulary.js\r\n      const totalWords = vocabularyData.exercises.reduce((sum, cat) => \r\n        sum + (cat.words?.length || 0), 0\r\n      );\r\n      \r\n      // Compter mots complétés\r\n      let completedCount = 0;\r\n      Object.values(completedWords).forEach(categoryWords => {\r\n        if (Array.isArray(categoryWords)) {\r\n          completedCount += categoryWords.length;\r\n        }\r\n      });\r\n      \r\n      // ✅ FIX : Calcul correct au lieu de constante bidon\r\n      const percentage = totalWords > 0 ? (completedCount / totalWords) * 100 : 0;\r\n      return Math.min(Math.round(percentage), 100);\r\n      \r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // VOCABULARY FAST\r\n  const calculateVocabularyFastProgress = async (level) => {\r\n    try {\r\n      const storageKey = `vocabulary_${level}_fast`;\r\n      const savedData = await AsyncStorage.getItem(storageKey);\r\n      \r\n      if (!savedData) return 0;\r\n      \r\n      const data = JSON.parse(savedData);\r\n      const completedWords = data.completedWords || {};\r\n      \r\n      // ✅ Même fix pour fast\r\n      const vocabularyData = getVocabularyData(level, 'fast');\r\n      if (!vocabularyData?.exercises) return 0;\r\n      \r\n      const totalWords = vocabularyData.exercises.reduce((sum, cat) => \r\n        sum + (cat.words?.length || 0), 0\r\n      );\r\n      \r\n      let completedCount = 0;\r\n      Object.values(completedWords).forEach(categoryWords => {\r\n        if (Array.isArray(categoryWords)) {\r\n          completedCount += categoryWords.length;\r\n        }\r\n      });\r\n      \r\n      const percentage = totalWords > 0 ? (completedCount / totalWords) * 100 : 0;\r\n      return Math.min(Math.round(percentage), 100);\r\n      \r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // GRAMMAR\r\n  const calculateGrammarProgress = async (level) => {\r\n    try {\r\n      const storageKey = `grammar_${level}`;\r\n      const savedData = await AsyncStorage.getItem(storageKey);\r\n      \r\n      if (!savedData) return 0;\r\n      \r\n      const data = JSON.parse(savedData);\r\n      const completedExercises = data.completedExercises || {};\r\n      \r\n      let completedCount = 0;\r\n      Object.values(completedExercises).forEach(exerciseIndices => {\r\n        if (Array.isArray(exerciseIndices)) {\r\n          completedCount += exerciseIndices.length;\r\n        }\r\n      });\r\n      \r\n      // Estimation réaliste (à ajuster selon vos vraies données)\r\n      const EXERCISES_PER_LEVEL = 20;\r\n      const percentage = (completedCount / EXERCISES_PER_LEVEL) * 100;\r\n      return Math.min(Math.round(percentage), 100);\r\n      \r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // READING\r\n  const calculateReadingProgress = async (level) => {\r\n    try {\r\n      const storageKey = `reading_${level}`;\r\n      const savedData = await AsyncStorage.getItem(storageKey);\r\n      \r\n      if (!savedData) return 0;\r\n      \r\n      const data = JSON.parse(savedData);\r\n      const completedQuestions = data.completedQuestions || {};\r\n      \r\n      let completedCount = 0;\r\n      Object.values(completedQuestions).forEach(questionIndices => {\r\n        if (Array.isArray(questionIndices)) {\r\n          completedCount += questionIndices.length;\r\n        }\r\n      });\r\n      \r\n      const QUESTIONS_PER_LEVEL = 15;\r\n      const percentage = (completedCount / QUESTIONS_PER_LEVEL) * 100;\r\n      return Math.min(Math.round(percentage), 100);\r\n      \r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // SPELLING\r\n  const calculateSpellingProgress = async (level) => {\r\n    try {\r\n      const storageKey = `spelling_${level}_correction`;\r\n      const savedData = await AsyncStorage.getItem(storageKey);\r\n      \r\n      if (!savedData) return 0;\r\n      \r\n      const data = JSON.parse(savedData);\r\n      const completedExercises = data.completedExercises || [];\r\n      \r\n      const EXERCISES_PER_LEVEL = 25;\r\n      const percentage = (completedExercises.length / EXERCISES_PER_LEVEL) * 100;\r\n      return Math.min(Math.round(percentage), 100);\r\n      \r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // PHRASES\r\n  const calculatePhrasesProgress = async (level) => {\r\n    try {\r\n      const storageKey = `phrases_${level}`;\r\n      const savedData = await AsyncStorage.getItem(storageKey);\r\n      \r\n      if (!savedData) return 0;\r\n      \r\n      const data = JSON.parse(savedData);\r\n      const completedPhrases = data.completedPhrases || {};\r\n      \r\n      let completedCount = 0;\r\n      Object.values(completedPhrases).forEach(phraseIndices => {\r\n        if (Array.isArray(phraseIndices)) {\r\n          completedCount += phraseIndices.length;\r\n        }\r\n      });\r\n      \r\n      const PHRASES_PER_LEVEL = 30;\r\n      const percentage = (completedCount / PHRASES_PER_LEVEL) * 100;\r\n      return Math.min(Math.round(percentage), 100);\r\n      \r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // CONVERSATIONS\r\n  const calculateConversationsProgress = async (level) => {\r\n    try {\r\n      const storageKey = `conversation_${level}`;\r\n      const savedData = await AsyncStorage.getItem(storageKey);\r\n      \r\n      if (!savedData) return 0;\r\n      \r\n      const data = JSON.parse(savedData);\r\n      const completedScenarios = data.completedScenarios || {};\r\n      \r\n      const completedCount = Object.values(completedScenarios).filter(scenario => \r\n        scenario && (scenario.completed || scenario.completedAt)\r\n      ).length;\r\n      \r\n      const CONVERSATIONS_PER_LEVEL = 8;\r\n      const percentage = (completedCount / CONVERSATIONS_PER_LEVEL) * 100;\r\n      return Math.min(Math.round(percentage), 100);\r\n      \r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // ERROR CORRECTION\r\n  const calculateErrorCorrectionProgress = async (level) => {\r\n    try {\r\n      const storageKey = `error_correction_${level}`;\r\n      const savedData = await AsyncStorage.getItem(storageKey);\r\n      \r\n      if (!savedData) return 0;\r\n      \r\n      const data = JSON.parse(savedData);\r\n      const completedExercises = data.completedExercises || {};\r\n      \r\n      let completedCount = 0;\r\n      Object.values(completedExercises).forEach(exerciseIndices => {\r\n        if (Array.isArray(exerciseIndices)) {\r\n          completedCount += exerciseIndices.length;\r\n        }\r\n      });\r\n      \r\n      const EXERCISES_PER_LEVEL = 20;\r\n      const percentage = (completedCount / EXERCISES_PER_LEVEL) * 100;\r\n      return Math.min(Math.round(percentage), 100);\r\n      \r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // WORD GAMES\r\n  const calculateWordGamesProgress = async (level) => {\r\n    try {\r\n      const storageKey = `word_games_completed_${level}`;\r\n      const savedData = await AsyncStorage.getItem(storageKey);\r\n      \r\n      if (!savedData) return 0;\r\n      \r\n      const data = JSON.parse(savedData);\r\n      \r\n      const completedCount = Object.values(data).filter(game => \r\n        game && game.completed\r\n      ).length;\r\n      \r\n      const GAMES_PER_LEVEL = 10;\r\n      const percentage = (completedCount / GAMES_PER_LEVEL) * 100;\r\n      return Math.min(Math.round(percentage), 100);\r\n      \r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // ASSESSMENT\r\n  const calculateAssessmentProgress = async (level) => {\r\n    try {\r\n      const storageKey = `assessment_results_${level}`;\r\n      const savedData = await AsyncStorage.getItem(storageKey);\r\n      \r\n      if (!savedData) return 0;\r\n      \r\n      const data = JSON.parse(savedData);\r\n      return data.completedAt ? 100 : 0;\r\n      \r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // =================== CALCUL GLOBAL ===================\r\n  const calculateProgress = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      const newLevelProgress = {};\r\n      const newExerciseProgress = {};\r\n\r\n      const levels = ['1', '2', '3', '4', '5', '6', 'bonus'];\r\n      \r\n      for (const level of levels) {\r\n        const exerciseCalculators = {\r\n          vocabulary: calculateVocabularyProgress,\r\n          vocabulary_fast: calculateVocabularyFastProgress,\r\n          grammar: calculateGrammarProgress,\r\n          reading: calculateReadingProgress,\r\n          spelling: calculateSpellingProgress,\r\n          phrases: calculatePhrasesProgress,\r\n          conversations: calculateConversationsProgress,\r\n          errorCorrection: calculateErrorCorrectionProgress,\r\n          wordGames: calculateWordGamesProgress,\r\n          assessment: calculateAssessmentProgress,\r\n        };\r\n\r\n        const availableExercises = level === 'bonus' \r\n          ? ['reading', 'vocabulary', 'phrases']\r\n          : Object.keys(exerciseCalculators);\r\n\r\n        let levelTotal = 0;\r\n        let levelCompleted = 0;\r\n\r\n        for (const exerciseType of availableExercises) {\r\n          try {\r\n            const calculator = exerciseCalculators[exerciseType];\r\n            const exerciseProgress = await calculator(level);\r\n\r\n            if (!newExerciseProgress[exerciseType]) {\r\n              newExerciseProgress[exerciseType] = {};\r\n            }\r\n            newExerciseProgress[exerciseType][level] = exerciseProgress;\r\n\r\n            levelTotal += 100;\r\n            levelCompleted += exerciseProgress;\r\n            \r\n          } catch (error) {\r\n            console.warn(`Erreur calcul ${exerciseType} niveau ${level}:`, error);\r\n          }\r\n        }\r\n\r\n        newLevelProgress[level] = levelTotal > 0 \r\n          ? Math.round((levelCompleted / levelTotal) * 100)\r\n          : 0;\r\n      }\r\n\r\n      setLevelProgress(newLevelProgress);\r\n      setExerciseProgress(newExerciseProgress);\r\n      \r\n    } catch (error) {\r\n      console.error('Erreur calcul progression:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // =================== GETTERS ===================\r\n  \r\n  const getLevelProgress = useCallback((level) => {\r\n    return levelProgress[level] || 0;\r\n  }, [levelProgress]);\r\n\r\n  const getExerciseProgress = useCallback((exerciseType, level) => {\r\n    return exerciseProgress[exerciseType]?.[level] || 0;\r\n  }, [exerciseProgress]);\r\n\r\n  const hasProgress = useCallback((exerciseType, level) => {\r\n    return getExerciseProgress(exerciseType, level) > 0;\r\n  }, [getExerciseProgress]);\r\n\r\n  const hasVocabularyStarted = useCallback((level) => {\r\n    return hasProgress('vocabulary', level);\r\n  }, [hasProgress]);\r\n\r\n  const hasVocabularyFastStarted = useCallback((level) => {\r\n    return hasProgress('vocabulary_fast', level);\r\n  }, [hasProgress]);\r\n\r\n  // =================== INIT ===================\r\n  \r\n  useEffect(() => {\r\n    calculateProgress();\r\n  }, [calculateProgress]);\r\n\r\n  const refresh = useCallback(() => {\r\n    calculateProgress();\r\n  }, [calculateProgress]);\r\n\r\n  return {\r\n    levelProgress,\r\n    exerciseProgress,\r\n    isLoading,\r\n    getLevelProgress,\r\n    getExerciseProgress,\r\n    hasProgress,\r\n    hasVocabularyStarted,\r\n    hasVocabularyFastStarted,\r\n    refresh,\r\n  };\r\n};\r\n\r\nexport default useRealTimeProgress;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\hooks\\useRevisionData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\hooks\\useRevisionManager.js","messages":[{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":212,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":212,"endColumn":52,"suggestions":[{"messageId":"addBrackets","fix":{"range":[7757,7903],"text":"{ const newTarget50 = totalWordsLearned + 50;\r\n        setNextRevisionAt(newTarget50);\r\n        return { action: 'postponed', nextAt: newTarget50 }; }"},"desc":"Add {} brackets around the case block."}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":217,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":217,"endColumn":54,"suggestions":[{"messageId":"addBrackets","fix":{"range":[7948,8098],"text":"{ const newTarget100 = totalWordsLearned + 100;\r\n        setNextRevisionAt(newTarget100);\r\n        return { action: 'postponed', nextAt: newTarget100 }; }"},"desc":"Add {} brackets around the case block."}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/hooks/useRevisionManager.js - SYSTÈME INTELLIGENT SIMPLE\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst REVISION_CONFIG = {\r\n  TRIGGER_INTERVAL: 50,    // Tous les 50 mots\r\n  QUESTIONS_COUNT: 10,     // Toujours 10 questions\r\n  STORAGE_KEY: 'revision_manager_data'\r\n};\r\n\r\nconst useRevisionManager = () => {\r\n  // ========== ÉTATS ==========\r\n  const [totalWordsLearned, setTotalWordsLearned] = useState(0);\r\n  const [nextRevisionAt, setNextRevisionAt] = useState(50);\r\n  const [lastRevisionWords, setLastRevisionWords] = useState([]);\r\n  const [revisionHistory, setRevisionHistory] = useState([]);\r\n  const [isRevisionDisabled, setIsRevisionDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  // Ref pour éviter les calculs trop fréquents\r\n  const lastCalculationRef = useRef(0);\r\n\r\n  // ========== CHARGEMENT INITIAL ==========\r\n  useEffect(() => {\r\n    loadRevisionData();\r\n  }, []);\r\n\r\n  const loadRevisionData = async () => {\r\n    try {\r\n      const stored = await AsyncStorage.getItem(REVISION_CONFIG.STORAGE_KEY);\r\n      if (stored) {\r\n        const data = JSON.parse(stored);\r\n        setNextRevisionAt(data.nextRevisionAt || 50);\r\n        setLastRevisionWords(data.lastRevisionWords || []);\r\n        setRevisionHistory(data.revisionHistory || []);\r\n        setIsRevisionDisabled(data.isRevisionDisabled || false);\r\n      }\r\n    } catch (error) {\r\n      console.warn('Erreur chargement données révision:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // ========== SAUVEGARDE AUTO ==========\r\n  const saveRevisionData = useCallback(async () => {\r\n    if (isLoading) return;\r\n    \r\n    try {\r\n      const data = {\r\n        nextRevisionAt,\r\n        lastRevisionWords,\r\n        revisionHistory,\r\n        isRevisionDisabled,\r\n        lastUpdate: Date.now()\r\n      };\r\n      await AsyncStorage.setItem(REVISION_CONFIG.STORAGE_KEY, JSON.stringify(data));\r\n    } catch (error) {\r\n      console.warn('Erreur sauvegarde données révision:', error);\r\n    }\r\n  }, [nextRevisionAt, lastRevisionWords, revisionHistory, isRevisionDisabled, isLoading]);\r\n\r\n  useEffect(() => {\r\n    saveRevisionData();\r\n  }, [saveRevisionData]);\r\n\r\n  // ========== COMPTAGE DES MOTS APPRIS ==========\r\n  const calculateTotalWords = useCallback(async () => {\r\n    const now = Date.now();\r\n    if (now - lastCalculationRef.current < 2000) return; // Debounce 2s\r\n    lastCalculationRef.current = now;\r\n\r\n    try {\r\n      let total = 0;\r\n      const levels = ['1', '2', '3', '4', '5', '6', 'bonus'];\r\n      const modes = ['classic', 'fast'];\r\n\r\n      for (const level of levels) {\r\n        for (const mode of modes) {\r\n          const stored = await AsyncStorage.getItem(`vocabulary_${level}_${mode}`);\r\n          if (stored) {\r\n            const data = JSON.parse(stored);\r\n            const completedWords = data.completedWords || {};\r\n            \r\n            // Compter tous les mots appris\r\n            Object.values(completedWords).forEach(words => {\r\n              if (Array.isArray(words)) {\r\n                total += words.length;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      setTotalWordsLearned(total);\r\n      return total;\r\n    } catch (error) {\r\n      console.warn('Erreur calcul mots appris:', error);\r\n      return 0;\r\n    }\r\n  }, []);\r\n\r\n  // ========== RÉCUPÉRATION DES MOTS POUR RÉVISION ==========\r\n  const getAllLearnedWords = useCallback(async () => {\r\n    try {\r\n      const allWords = [];\r\n      const levels = ['1', '2', '3', '4', '5', '6', 'bonus'];\r\n      const modes = ['classic', 'fast'];\r\n\r\n      for (const level of levels) {\r\n        for (const mode of modes) {\r\n          const stored = await AsyncStorage.getItem(`vocabulary_${level}_${mode}`);\r\n          if (stored) {\r\n            const data = JSON.parse(stored);\r\n            const completedWords = data.completedWords || {};\r\n            \r\n            // Récupérer tous les mots avec métadonnées\r\n            Object.entries(completedWords).forEach(([categoryIndex, words]) => {\r\n              if (Array.isArray(words)) {\r\n                words.forEach(word => {\r\n                  // Support ancien et nouveau format\r\n                  if (typeof word === 'object' && word.word) {\r\n                    allWords.push({\r\n                      ...word,\r\n                      fromLevel: level,\r\n                      fromMode: mode,\r\n                      categoryIndex: parseInt(categoryIndex)\r\n                    });\r\n                  } else if (typeof word === 'string') {\r\n                    // Ancien format - on fait de notre mieux\r\n                    allWords.push({\r\n                      word: word,\r\n                      translation: '?', // Sera récupéré depuis les données originales\r\n                      fromLevel: level,\r\n                      fromMode: mode,\r\n                      categoryIndex: parseInt(categoryIndex),\r\n                      timestamp: null\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      return allWords;\r\n    } catch (error) {\r\n      console.warn('Erreur récupération mots appris:', error);\r\n      return [];\r\n    }\r\n  }, []);\r\n\r\n  // ========== ALGORITHME ANTI-RÉPÉTITION ==========\r\n  const selectRevisionWords = useCallback(async (count = REVISION_CONFIG.QUESTIONS_COUNT) => {\r\n    const allWords = await getAllLearnedWords();\r\n    \r\n    if (allWords.length === 0) return [];\r\n    if (allWords.length <= count) return allWords;\r\n\r\n    // Filtrer les mots de la dernière révision (éviter répétition immédiate)\r\n    const lastWords = new Set(lastRevisionWords.map(w => w.word));\r\n    const availableWords = allWords.filter(word => !lastWords.has(word.word));\r\n    \r\n    // Si pas assez de mots différents, on prend quand même dans tous\r\n    const poolWords = availableWords.length >= count ? availableWords : allWords;\r\n    \r\n    // Algorithme de sélection intelligent :\r\n    // 1. Prioriser les mots les plus anciens (non révisés récemment)\r\n    // 2. Mélanger les niveaux et modes\r\n    // 3. Éviter trop de mots du même niveau d'affilée\r\n\r\n    const sortedByAge = poolWords.sort((a, b) => {\r\n      const aTime = a.timestamp ? new Date(a.timestamp).getTime() : 0;\r\n      const bTime = b.timestamp ? new Date(b.timestamp).getTime() : 0;\r\n      return aTime - bTime; // Plus ancien en premier\r\n    });\r\n\r\n    // Prendre une mix : 60% des plus anciens + 40% aléatoire\r\n    const oldCount = Math.floor(count * 0.6);\r\n    const randomCount = count - oldCount;\r\n    \r\n    const oldWords = sortedByAge.slice(0, oldCount);\r\n    const remainingWords = sortedByAge.slice(oldCount);\r\n    const randomWords = remainingWords\r\n      .sort(() => Math.random() - 0.5)\r\n      .slice(0, randomCount);\r\n\r\n    const selectedWords = [...oldWords, ...randomWords]\r\n      .sort(() => Math.random() - 0.5); // Mélanger le résultat final\r\n\r\n    return selectedWords.slice(0, count);\r\n  }, [lastRevisionWords, getAllLearnedWords]);\r\n\r\n  // ========== LOGIQUE DE DÉCLENCHEMENT ==========\r\n  const shouldShowRevision = !isRevisionDisabled && \r\n                           totalWordsLearned >= nextRevisionAt && \r\n                           totalWordsLearned > 0;\r\n\r\n  // ========== HANDLERS DU POPUP ==========\r\n  const handleRevisionChoice = useCallback(async (choice) => {\r\n    switch (choice) {\r\n      case 'now':\r\n        // La navigation sera gérée par le composant parent\r\n        return {\r\n          action: 'navigate',\r\n          words: await selectRevisionWords(),\r\n          questionsCount: REVISION_CONFIG.QUESTIONS_COUNT\r\n        };\r\n        \r\n      case 'later_50':\r\n        const newTarget50 = totalWordsLearned + 50;\r\n        setNextRevisionAt(newTarget50);\r\n        return { action: 'postponed', nextAt: newTarget50 };\r\n        \r\n      case 'later_100':\r\n        const newTarget100 = totalWordsLearned + 100;\r\n        setNextRevisionAt(newTarget100);\r\n        return { action: 'postponed', nextAt: newTarget100 };\r\n        \r\n      case 'disable':\r\n        setIsRevisionDisabled(true);\r\n        return { action: 'disabled' };\r\n        \r\n      default:\r\n        return { action: 'cancelled' };\r\n    }\r\n  }, [totalWordsLearned, selectRevisionWords]);\r\n\r\n  // ========== COMPLETION D'UNE RÉVISION ==========\r\n  const markRevisionCompleted = useCallback(async (completedWords, score, questionsCount) => {\r\n    try {\r\n      // Enregistrer l'historique\r\n      const revisionRecord = {\r\n        timestamp: Date.now(),\r\n        wordsCount: completedWords.length,\r\n        score,\r\n        questionsCount,\r\n        percentage: Math.round((score / questionsCount) * 100),\r\n        totalWordsAtTime: totalWordsLearned\r\n      };\r\n\r\n      setRevisionHistory(prev => [...prev, revisionRecord]);\r\n      setLastRevisionWords(completedWords);\r\n      \r\n      // Programmer la prochaine révision\r\n      const nextTarget = totalWordsLearned + REVISION_CONFIG.TRIGGER_INTERVAL;\r\n      setNextRevisionAt(nextTarget);\r\n\r\n    } catch (error) {\r\n      console.warn('Erreur enregistrement révision:', error);\r\n    }\r\n  }, [totalWordsLearned]);\r\n\r\n  // ========== RÉACTIVATION DES RÉVISIONS ==========\r\n  const enableRevisions = useCallback(() => {\r\n    setIsRevisionDisabled(false);\r\n    const nextTarget = totalWordsLearned + REVISION_CONFIG.TRIGGER_INTERVAL;\r\n    setNextRevisionAt(nextTarget);\r\n  }, [totalWordsLearned]);\r\n\r\n  // ========== CALCUL AUTO DU TOTAL ==========\r\n  useEffect(() => {\r\n    calculateTotalWords();\r\n    \r\n    // Recalculer périodiquement\r\n    const interval = setInterval(calculateTotalWords, 10000); // Toutes les 10s\r\n    return () => clearInterval(interval);\r\n  }, [calculateTotalWords]);\r\n\r\n  // ========== STATISTIQUES ==========\r\n  const getRevisionStats = useCallback(() => {\r\n    if (revisionHistory.length === 0) {\r\n      return {\r\n        totalRevisions: 0,\r\n        averageScore: 0,\r\n        lastRevision: null,\r\n        streak: 0\r\n      };\r\n    }\r\n\r\n    const totalRevisions = revisionHistory.length;\r\n    const averageScore = revisionHistory.reduce((sum, r) => sum + r.percentage, 0) / totalRevisions;\r\n    const lastRevision = revisionHistory[revisionHistory.length - 1];\r\n    \r\n    // Calculer le streak (révisions récentes avec >70%)\r\n    let streak = 0;\r\n    for (let i = revisionHistory.length - 1; i >= 0; i--) {\r\n      if (revisionHistory[i].percentage >= 70) {\r\n        streak++;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return {\r\n      totalRevisions,\r\n      averageScore: Math.round(averageScore),\r\n      lastRevision,\r\n      streak\r\n    };\r\n  }, [revisionHistory]);\r\n\r\n  // ========== RETURN ==========\r\n  return {\r\n    // État\r\n    totalWordsLearned,\r\n    nextRevisionAt,\r\n    shouldShowRevision,\r\n    isRevisionDisabled,\r\n    isLoading,\r\n    \r\n    // Actions\r\n    handleRevisionChoice,\r\n    markRevisionCompleted,\r\n    enableRevisions,\r\n    calculateTotalWords,\r\n    selectRevisionWords,\r\n    \r\n    // Utilitaires\r\n    getRevisionStats,\r\n    \r\n    // Configuration\r\n    config: REVISION_CONFIG\r\n  };\r\n};\r\n\r\nexport default useRevisionManager;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\hooks\\useRevisionSettings.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":47,"column":90,"nodeType":"Identifier","messageId":"unusedVar","endLine":47,"endColumn":91},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":47,"column":93,"nodeType":"BlockStatement","messageId":"unexpected","endLine":47,"endColumn":95,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1595,1595],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/hooks/useRevisionSettings.js - HOOK POUR MENU SETTINGS\nimport { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst REVISION_STORAGE_KEY = 'revision_preferences';\n\nexport const useRevisionSettings = () => {\n  const [preferences, setPreferences] = useState({\n    isDisabled: false,\n    nextRevisionAt: 50,\n    frequency: 50, // Tous les X mots\n    questionsCount: 10\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  // ========== CHARGEMENT ==========\n  useEffect(() => {\n    loadPreferences();\n  }, []);\n\n  const loadPreferences = async () => {\n    try {\n      const saved = await AsyncStorage.getItem(REVISION_STORAGE_KEY);\n      if (saved) {\n        const prefs = JSON.parse(saved);\n        setPreferences({\n          isDisabled: prefs.isDisabled || false,\n          nextRevisionAt: prefs.nextRevisionAt || 50,\n          frequency: prefs.frequency || 50,\n          questionsCount: prefs.questionsCount || 10\n        });\n      }\n    } catch (error) {\n      console.error('Error loading revision settings:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // ========== SAUVEGARDE ==========\n  const updatePreferences = async (newPrefs) => {\n    try {\n      const updatedPrefs = { ...preferences, ...newPrefs, lastUpdate: Date.now() };\n      await AsyncStorage.setItem(REVISION_STORAGE_KEY, JSON.stringify(updatedPrefs));\n      setPreferences(updatedPrefs);\n      // Événement de mise à jour des settings\n      try { require('../utils/eventBus').emit('settings-updated', updatedPrefs); } catch(e) {}\n      console.log(\"💾 Updated revision settings:\", updatedPrefs);\n      return true;\n    } catch (error) {\n      console.error('Error saving revision settings:', error);\n      return false;\n    }\n  };\n\n  // ========== ACTIONS SPÉCIFIQUES ==========\n  const enableRevisions = async (frequency = 50, questionsCount = 10) => {\n    console.log(\"✅ Enabling revisions with frequency:\", frequency);\n    return await updatePreferences({\n      isDisabled: false,\n      frequency,\n      questionsCount,\n      nextRevisionAt: frequency // Reset target\n    });\n  };\n\n  const disableRevisions = async () => {\n    console.log(\"❌ Disabling revisions\");\n    return await updatePreferences({ isDisabled: true });\n  };\n\n  const updateFrequency = async (newFrequency) => {\n    console.log(\"🔄 Updating frequency to:\", newFrequency);\n    return await updatePreferences({ \n      frequency: newFrequency,\n      nextRevisionAt: newFrequency // Reset target\n    });\n  };\n\n  const resetToNextTarget = async (wordsLearned) => {\n    const newTarget = wordsLearned + preferences.frequency;\n    return await updatePreferences({ nextRevisionAt: newTarget });\n  };\n\n  return {\n    preferences,\n    isLoading,\n    enableRevisions,\n    disableRevisions,\n    updateFrequency,\n    updatePreferences,\n    resetToNextTarget\n  };\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\hooks\\useRouteActivityTracker.js","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'endSession', 'startSession', and 'updateStreak'. Either include them or remove the dependency array.","line":84,"column":6,"nodeType":"ArrayExpression","endLine":84,"endColumn":26,"suggestions":[{"desc":"Update the dependencies array to be: [segments, pathname, endSession, updateStreak, startSession]","fix":{"range":[2783,2803],"text":"[segments, pathname, endSession, updateStreak, startSession]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'endSession'. Either include it or remove the dependency array.","line":97,"column":6,"nodeType":"ArrayExpression","endLine":97,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [endSession]","fix":{"range":[3157,3159],"text":"[endSession]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/hooks/useRouteActivityTracker.js - VERSION CORRIGÉE SANS BOUCLE\r\nimport { useEffect, useRef } from 'react';\r\nimport { useSegments, usePathname } from 'expo-router';\r\nimport useActivityMetrics from './useActivityMetrics';\r\n\r\nconst useRouteActivityTracker = () => {\r\n  const segments = useSegments();\r\n  const pathname = usePathname();\r\n  const { startSession, endSession, updateStreak } = useActivityMetrics();\r\n  \r\n  // ✅ CORRECTION : Refs pour éviter les appels en boucle\r\n  const currentSessionRef = useRef(null);\r\n  const isTrackingRef = useRef(false);\r\n  const lastPathnameRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // ✅ CORRECTION : Eviter les re-déclenchements inutiles\r\n    if (lastPathnameRef.current === pathname) {\r\n      return;\r\n    }\r\n    lastPathnameRef.current = pathname;\r\n\r\n    // Vérifier si c'est un exercice\r\n    const isExercise = segments.some(segment => \r\n      segment.includes('Exercise') ||\r\n      segment.includes('exercise') ||\r\n      segment.includes('Assessment') ||\r\n      segment.includes('assessment')\r\n    );\r\n\r\n    if (isExercise) {\r\n      // Récupérer le type d'exercice (dernier segment)\r\n      const exerciseType = segments[segments.length - 1];\r\n      \r\n      // ✅ CORRECTION : Logique directe sans callbacks\r\n      if (!isTrackingRef.current || currentSessionRef.current !== exerciseType) {\r\n        // Arrêter la session précédente si elle existe\r\n        if (isTrackingRef.current) {\r\n          try {\r\n            endSession();\r\n            updateStreak();\r\n          } catch (error) {\r\n            console.warn('Erreur lors de la fin de session:', error);\r\n          }\r\n        }\r\n        \r\n        // Démarrer la nouvelle session\r\n        try {\r\n          isTrackingRef.current = true;\r\n          currentSessionRef.current = exerciseType;\r\n          startSession(exerciseType);\r\n        } catch (error) {\r\n          console.warn('Erreur lors du démarrage de session:', error);\r\n          isTrackingRef.current = false;\r\n          currentSessionRef.current = null;\r\n        }\r\n      }\r\n    } else {\r\n      // Si on n'est plus sur un exercice, arrêter la session\r\n      if (isTrackingRef.current) {\r\n        try {\r\n          isTrackingRef.current = false;\r\n          currentSessionRef.current = null;\r\n          endSession();\r\n          updateStreak();\r\n        } catch (error) {\r\n          console.warn('Erreur lors de la fin de session:', error);\r\n        }\r\n      }\r\n    }\r\n\r\n    // ✅ CORRECTION : Cleanup unique et stable\r\n    return () => {\r\n      if (isTrackingRef.current) {\r\n        try {\r\n          isTrackingRef.current = false;\r\n          currentSessionRef.current = null;\r\n          endSession();\r\n        } catch (error) {\r\n          console.warn('Erreur lors du cleanup:', error);\r\n        }\r\n      }\r\n    };\r\n  }, [segments, pathname]); // ✅ CORRIGÉ : Seulement les vraies dépendances\r\n\r\n  // ✅ CORRECTION : Cleanup final seulement au démontage\r\n  useEffect(() => {\r\n    return () => {\r\n      if (isTrackingRef.current) {\r\n        try {\r\n          endSession();\r\n        } catch (error) {\r\n          console.warn('Erreur lors du cleanup final:', error);\r\n        }\r\n      }\r\n    };\r\n  }, []); // ✅ CORRIGÉ : Aucune dépendance = seulement au démontage\r\n\r\n  // Pas de rendu\r\n};\r\n\r\nexport default useRouteActivityTracker;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\HeroContinueSection\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[72,78],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[117,122],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[121,127],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[127,145],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":3,"column":40,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":57,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[145,164],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Card' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":12,"suggestions":[{"messageId":"removeVar","data":{"varName":"Card"},"fix":{"range":[195,205],"text":""},"desc":"Remove unused variable 'Card'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/Dashboard/components/HeroContinueSection/index.js\nimport React, { useContext } from \"react\";\nimport { View, Text, TouchableOpacity, ActivityIndicator } from \"react-native\";\nimport Card from \"../../../../components/ui/Card\";\nimport { ThemeContext } from \"../../../../contexts/ThemeContext\";\nimport styles from \"./style\";\n\nconst HeroContinueSection = ({\n  lastActivity,\n  onPress,\n  accentColor = \"#3B82F6\",\n  isLoading = false,\n}) => {\n  const themeContext = useContext(ThemeContext);\n  const colors = themeContext?.colors || {\n    surface: \"#FFFFFF\",\n    text: \"#1F2937\",\n    textSecondary: \"#6B7280\",\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.container}>\n        <Card style={[styles.card, { backgroundColor: colors.surface }]}>\n          <View style={styles.loadingContainer}>\n            <ActivityIndicator size=\"small\" color={accentColor} />\n            <Text style={[styles.loadingText, { color: colors.textSecondary }]}>\n              Chargement...\n            </Text>\n          </View>\n        </Card>\n      </View>\n    );\n  }\n\n  // État vide - première utilisation\n  if (!lastActivity) {\n    return (\n      <View style={styles.container}>\n        <Card style={[styles.card, { backgroundColor: colors.surface }]}>\n          <View style={styles.content}>\n            <Text style={styles.emoji}>🚀</Text>\n            <Text style={[styles.title, { color: colors.text }]}>\n              Commencer l'apprentissage\n            </Text>\n            <Text style={[styles.subtitle, { color: colors.textSecondary }]}>\n              Choisissez votre premier exercice\n            </Text>\n            \n            <TouchableOpacity\n              style={[styles.button, { backgroundColor: accentColor }]}\n              onPress={() => onPress?.('levelSelection')}\n              activeOpacity={0.8}\n            >\n              <Text style={styles.buttonText}>Commencer ▶️</Text>\n            </TouchableOpacity>\n          </View>\n        </Card>\n      </View>\n    );\n  }\n\n  // Calculer progression simple\n  const currentWord = (lastActivity.metadata?.word || 0) + 1;\n  const totalWords = lastActivity.metadata?.totalWords || 15;\n  const percentage = Math.round((currentWord / totalWords) * 100);\n\n  return (\n    <View style={styles.container}>\n      <Card style={[styles.card, { backgroundColor: colors.surface }]}>\n        <View style={styles.content}>\n          <View style={styles.header}>\n            <Text style={styles.emoji}>📚</Text>\n            <Text style={[styles.label, { color: colors.textSecondary }]}>\n              Reprendre\n            </Text>\n          </View>\n\n          <Text style={[styles.title, { color: colors.text }]}>\n            {lastActivity.title}\n          </Text>\n\n          <Text style={[styles.subtitle, { color: colors.textSecondary }]}> \n            Niv {lastActivity.level || 1}\n            {typeof lastActivity.metadata?.categoryIndex === 'number' ? ` • Catégorie ${lastActivity.metadata.categoryIndex + 1}` : ''}\n            • Mot {currentWord}/{totalWords}\n          </Text>\n\n          {/* Barre de progression */}\n          <View style={styles.progressContainer}>\n            <View style={[styles.progressTrack, { backgroundColor: `${accentColor}15` }]}>\n              <View \n                style={[\n                  styles.progressFill,\n                  { \n                    width: `${Math.min(percentage, 100)}%`,\n                    backgroundColor: accentColor\n                  }\n                ]} \n              />\n            </View>\n            <Text style={[styles.progressText, { color: accentColor }]}>\n              {percentage}%\n            </Text>\n          </View>\n\n          <TouchableOpacity\n            style={[styles.button, { backgroundColor: accentColor }]}\n            onPress={() => onPress?.(lastActivity)}\n            activeOpacity={0.8}\n          >\n            <Text style={styles.buttonText}>Continuer ▶️</Text>\n          </TouchableOpacity>\n        </View>\n      </Card>\n    </View>\n  );\n};\n\nexport default HeroContinueSection;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\HeroContinueSection\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\LearningProgress\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[69,75],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[114,119],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[118,124],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[124,142],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Card' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":12,"suggestions":[{"messageId":"removeVar","data":{"varName":"Card"},"fix":{"range":[173,183],"text":""},"desc":"Remove unused variable 'Card'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/Dashboard/components/LearningProgress/index.js\nimport React, { useContext } from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport Card from \"../../../../components/ui/Card\";\nimport { ThemeContext } from \"../../../../contexts/ThemeContext\";\nimport { LANGUAGE_LEVELS } from \"../../../../utils/constants\";\nimport styles from \"./style\";\n\n/**\n * Progression d'apprentissage - VERSION SIMPLE\n * ✅ Clic cercle = change niveau visuel seulement  \n * ✅ Seul le niveau en cours est coloré\n * ✅ Bouton Explorer = navigation vers exercices\n */\nconst LearningProgress = ({\n  levels = [],\n  currentLevel = \"1\",\n  onSelectLevel, // Pour navigation vers exercices\n  onChangeLevelVisual, // Pour changer niveau visuel seulement\n  primaryColor = \"#3B82F6\",\n  globalProgress = 0,\n}) => {\n  const themeContext = useContext(ThemeContext);\n  const colors = themeContext?.colors || {\n    surface: \"#FFFFFF\",\n    text: \"#1F2937\",\n    textSecondary: \"#6B7280\",\n  };\n\n  // Générer les niveaux par défaut si pas fournis\n  const defaultLevels = Object.keys(LANGUAGE_LEVELS).map((levelKey) => ({\n    id: levelKey,\n    color: LANGUAGE_LEVELS[levelKey].color,\n  }));\n\n  const displayLevels = levels.length > 0 ? levels : defaultLevels;\n\n  // Info du niveau actuel\n  const getCurrentLevelInfo = () => {\n    return LANGUAGE_LEVELS[currentLevel] || LANGUAGE_LEVELS[\"1\"];\n  };\n\n  // Affichage du niveau (1,2,3,4,5,6 ou B pour bonus)\n  const getLevelDisplay = (levelId) => {\n    return levelId === \"bonus\" ? \"B\" : levelId;\n  };\n\n  const currentLevelInfo = getCurrentLevelInfo();\n  const currentLevelDisplay = getLevelDisplay(currentLevel);\n\n  // ========== GESTION SIMPLE ==========\n  \n  // Clic sur cercle niveau = change affichage visuel seulement\n  const handleLevelPress = (levelId) => {\n    if (onChangeLevelVisual) {\n      onChangeLevelVisual(levelId);\n    }\n  };\n\n  // Clic sur bouton Explorer = navigation vers exercices du niveau courant\n  const handleExplorePress = () => {\n    if (onSelectLevel) {\n      onSelectLevel(currentLevel);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>\n        🎯 Progression générale\n      </Text>\n\n      <Card style={[styles.card, { backgroundColor: colors.surface }]}>\n        {/* Header avec progression globale */}\n        <View style={styles.header}>\n          <View style={styles.progressInfo}>\n            <Text style={[styles.progressTitle, { color: colors.text }]}>\n              {currentLevelInfo.title || `Niveau ${currentLevelDisplay}`}\n            </Text>\n            <Text style={[styles.progressSubtitle, { color: colors.textSecondary }]}>\n              Continuez votre apprentissage {currentLevelInfo.icon}\n            </Text>\n          </View>\n\n          <View style={styles.progressBadge}>\n            <Text style={[styles.progressPercentage, { color: primaryColor }]}>\n              {globalProgress}%\n            </Text>\n          </View>\n        </View>\n\n        {/* Barre de progression globale */}\n        <View style={styles.globalProgressContainer}>\n          <View style={[styles.globalProgressTrack, { backgroundColor: `${primaryColor}15` }]}>\n            <View \n              style={[\n                styles.globalProgressFill,\n                { \n                  width: `${Math.min(globalProgress, 100)}%`,\n                  backgroundColor: primaryColor\n                }\n              ]} \n            />\n          </View>\n          <Text style={[styles.progressLabel, { color: colors.textSecondary }]}>\n            Progression globale\n          </Text>\n        </View>\n\n        {/* Niveaux en cercles - VERSION SIMPLE */}\n        <View style={styles.levelsContainer}>\n          {displayLevels.map((level) => {\n            // ✅ SIMPLE : Seul le niveau en cours est actif\n            const isActive = level.id === currentLevel;\n\n            let circleStyle = [styles.levelCircle];\n            let textStyle = [styles.levelText];\n\n            if (isActive) {\n              // ✅ Niveau en cours = coloré\n              circleStyle.push([\n                styles.activeLevelCircle,\n                { backgroundColor: level.color || primaryColor }\n              ]);\n              textStyle.push(styles.activeLevelText);\n            } else {\n              // ❌ Autres niveaux = gris\n              circleStyle.push(styles.futureLevelCircle);\n              textStyle.push([styles.futureLevelText, { color: colors.textSecondary }]);\n            }\n\n            return (\n              <TouchableOpacity\n                key={level.id}\n                style={styles.levelButton}\n                onPress={() => handleLevelPress(level.id)} // ✅ Change visuel seulement\n                activeOpacity={0.7}\n              >\n                <View style={circleStyle}>\n                  <Text style={textStyle}>{getLevelDisplay(level.id)}</Text>\n                </View>\n\n                {/* ❌ SUPPRIMÉ : Indicateur \"Actuel\" inutile */}\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n\n        {/* Action button - SEULE NAVIGATION */}\n        <TouchableOpacity\n          style={[styles.actionButton, { borderColor: primaryColor }]}\n          onPress={handleExplorePress}\n          activeOpacity={0.7}\n        >\n          <Text style={[styles.actionButtonText, { color: primaryColor }]}>\n            Explorer le niveau {currentLevelDisplay}\n          </Text>\n        </TouchableOpacity>\n      </Card>\n    </View>\n  );\n};\n\nexport default LearningProgress;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\LearningProgress\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\ModernHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[65,71],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[110,115],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[114,120],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[144,198],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/Dashboard/components/ModernHeader/index.js\nimport React, { useContext } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { ThemeContext } from \"../../../../contexts/ThemeContext\";\nimport styles from \"./style\";\n\n/**\n * Header moderne pour le Dashboard - Version nettoyée\n * ✅ Logo + Badge niveau uniquement (textes utilisateur supprimés)\n */\nconst ModernHeader = ({ \n  level = \"1\", \n  levelColor = \"#3B82F6\"\n}) => {\n  const themeContext = useContext(ThemeContext);\n  const colors = themeContext?.colors || {\n    surface: \"#FFFFFF\",\n  };\n\n  // Affichage du niveau (1,2,3,4,5,6 ou B pour bonus)\n  const displayLevel = level === \"bonus\" ? \"B\" : level;\n\n  return (\n    <LinearGradient\n      colors={[levelColor, `${levelColor}DD`]}\n      start={{ x: 0, y: 0 }}\n      end={{ x: 1, y: 1 }}\n      style={styles.container}\n    >\n      {/* Pattern décoratif subtil */}\n      <View style={styles.backgroundPattern} />\n\n      <View style={styles.content}>\n        {/* Section gauche : Logo uniquement */}\n        <View style={styles.leftSection}>\n          <View style={styles.logoContainer}>\n            <Text style={styles.logoEmoji}>🎓</Text>\n            <Text style={[styles.logoText, { color: colors.surface }]}>\n              JOUD\n            </Text>\n          </View>\n        </View>\n\n        {/* Section droite : Badge niveau uniquement */}\n        <View style={styles.rightSection}>\n          <View style={[styles.levelBadge, { backgroundColor: colors.surface }]}>\n            <Text style={[styles.levelText, { color: levelColor }]}>\n              {displayLevel}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </LinearGradient>\n  );\n};\n\nexport default ModernHeader;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\ModernHeader\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\QuickActions\\RevisionPreferencesModal\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[66,72],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[112,117],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":5,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[116,125],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":6,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[125,146],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Modal' is defined but never used.","line":7,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":8,"suggestions":[{"messageId":"removeVar","data":{"varName":"Modal"},"fix":{"range":[146,156],"text":""},"desc":"Remove unused variable 'Modal'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":8,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[156,170],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":10,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[236,290],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/modals/RevisionPreferencesModal/index.js\nimport React, { useState } from 'react';\nimport { \n  View, \n  Text, \n  TouchableOpacity, \n  Modal,\n  ScrollView  // Ajout de l'import ScrollView manquant\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport styles from './style';\n\n/**\n * 🎯 Modal pour choisir le style de révision\n * S'affiche lors du premier déclenchement à 25 mots\n */\nconst RevisionPreferencesModal = ({\n  visible = false,\n  onChoice,\n  onSkip\n}) => {\n  const [selectedStyle, setSelectedStyle] = useState('standard');\n\n  // 🎯 Les 4 styles de révision\n  const revisionStyles = [\n    {\n      id: 'light',\n      title: '📚 Révision Light',\n      subtitle: 'Tous les 25 mots, 5 questions',\n      description: 'Idéal pour maintenir sans effort',\n      frequency: 25,\n      questionsCount: 5,\n      color: '#10B981',\n      icon: '📚'\n    },\n    {\n      id: 'standard',\n      title: '⚡ Révision Standard', \n      subtitle: 'Tous les 35 mots, 8 questions',\n      description: 'Équilibre parfait effort/résultats',\n      frequency: 35,\n      questionsCount: 8,\n      color: '#3B82F6',\n      icon: '⚡'\n    },\n    {\n      id: 'intensive',\n      title: '🔥 Révision Intensive',\n      subtitle: 'Tous les 50 mots, 12 questions', \n      description: 'Maximum de rétention mémoire',\n      frequency: 50,\n      questionsCount: 12,\n      color: '#EF4444',\n      icon: '🔥'\n    },\n    {\n      id: 'none',\n      title: '❌ Pas de révision auto',\n      subtitle: 'Révision manuelle uniquement',\n      description: 'Vous gérez vos révisions',\n      frequency: null,\n      questionsCount: 0,\n      color: '#6B7280',\n      icon: '❌'\n    }\n  ];\n\n  const handleConfirm = () => {\n    const style = revisionStyles.find(s => s.id === selectedStyle);\n    onChoice?.(style.frequency, style.questionsCount, selectedStyle);\n  };\n\n  const handleSkip = () => {\n    const defaultStyle = revisionStyles.find(s => s.id === 'standard');\n    onSkip?.(defaultStyle.frequency, defaultStyle.questionsCount, 'standard');\n  };\n\n  if (!visible) return null;\n\n  return (\n    <Modal\n      transparent\n      visible={visible}\n      animationType=\"fade\"\n      statusBarTranslucent\n    >\n      <View style={styles.overlay}>\n        <View style={styles.modalContainer}>\n          {/* Header */}\n          <LinearGradient\n            colors={['#8B5CF6', '#A855F7']}\n            start={{ x: 0, y: 0 }}\n            end={{ x: 1, y: 1 }}\n            style={styles.header}\n          >\n            {/* Bouton close */}\n            <TouchableOpacity\n              style={styles.closeButton}\n              onPress={onSkip}\n              activeOpacity={0.7}\n            >\n              <Text style={styles.closeButtonText}>×</Text>\n            </TouchableOpacity>\n\n            <Text style={styles.headerIcon}>🎉</Text>\n            <Text style={styles.headerTitle}>Félicitations !</Text>\n            <Text style={styles.headerSubtitle}>\n              25 mots appris ! Choisissez votre style de révision :\n            </Text>\n          </LinearGradient>\n\n          <View style={styles.content}>\n            <ScrollView \n              style={styles.scrollContainer}\n              contentContainerStyle={styles.scrollContent}\n              showsVerticalScrollIndicator={false}\n            >\n              {/* Section Styles */}\n              <View style={styles.section}>\n                <Text style={styles.sectionTitle}>🎯 Choisissez votre style</Text>\n                <Text style={styles.sectionDescription}>\n                  Sélectionnez la fréquence qui vous convient le mieux\n                </Text>\n\n                <View style={styles.stylesContainer}>\n                  {revisionStyles.map((style) => (\n                    <TouchableOpacity\n                      key={style.id}\n                      style={[\n                        styles.styleCard,\n                        selectedStyle === style.id && {\n                          borderColor: style.color,\n                          backgroundColor: `${style.color}10`\n                        }\n                      ]}\n                      onPress={() => setSelectedStyle(style.id)}\n                      activeOpacity={0.7}\n                    >\n                      <View style={styles.styleHeader}>\n                        <Text style={styles.styleIcon}>{style.icon}</Text>\n                        <View style={styles.styleInfo}>\n                          <Text style={[\n                            styles.styleTitle,\n                            selectedStyle === style.id && { color: style.color }\n                          ]}>\n                            {style.title}\n                          </Text>\n                          <Text style={styles.styleSubtitle}>\n                            {style.subtitle}\n                          </Text>\n                        </View>\n                      </View>\n                      \n                      <Text style={styles.styleDescription}>\n                        {style.description}\n                      </Text>\n                      \n                      {selectedStyle === style.id && (\n                        <View style={[styles.selectedBadge, { backgroundColor: style.color }]}>\n                          <Text style={styles.selectedText}>✓</Text>\n                        </View>\n                      )}\n                    </TouchableOpacity>\n                  ))}\n                </View>\n              </View>\n\n              {/* Résumé du choix */}\n              {selectedStyle !== 'none' && (\n                <View style={styles.summary}>\n                  <Text style={styles.summaryTitle}>📋 Votre configuration :</Text>\n                  <Text style={styles.summaryText}>\n                    • Style : <Text style={styles.summaryHighlight}>\n                      {revisionStyles.find(s => s.id === selectedStyle)?.title}\n                    </Text>\n                  </Text>\n                  <Text style={styles.summaryText}>\n                    • Révision tous les <Text style={styles.summaryHighlight}>\n                      {revisionStyles.find(s => s.id === selectedStyle)?.frequency} mots\n                    </Text>\n                  </Text>\n                  <Text style={styles.summaryText}>\n                    • <Text style={styles.summaryHighlight}>\n                      {revisionStyles.find(s => s.id === selectedStyle)?.questionsCount} questions\n                    </Text> par session\n                  </Text>\n                  <Text style={styles.summaryNote}>\n                    💡 Vous pourrez modifier ces paramètres plus tard\n                  </Text>\n                </View>\n              )}\n\n              {selectedStyle === 'none' && (\n                <View style={[styles.summary, styles.summaryWarning]}>\n                  <Text style={[styles.summaryTitle, styles.summaryTitleWarning]}>\n                    ⚠️ Révision désactivée\n                  </Text>\n                  <Text style={[styles.summaryText, styles.summaryTextWarning]}>\n                    • Aucune révision automatique\n                  </Text>\n                  <Text style={[styles.summaryText, styles.summaryTextWarning]}>\n                    • Bouton révision manuelle disponible\n                  </Text>\n                  <Text style={[styles.summaryNote, styles.summaryNoteWarning]}>\n                    💡 Réactivable à tout moment\n                  </Text>\n                </View>\n              )}\n\n              {/* Boutons */}\n              <View style={styles.buttons}>\n                <TouchableOpacity\n                  style={[\n                    styles.confirmButton,\n                    { backgroundColor: revisionStyles.find(s => s.id === selectedStyle)?.color || '#8B5CF6' }\n                  ]}\n                  onPress={handleConfirm}\n                  activeOpacity={0.8}\n                >\n                  <Text style={styles.confirmButtonText}>\n                    ✅ Confirmer mon choix\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  style={styles.skipButton}\n                  onPress={handleSkip}\n                  activeOpacity={0.7}\n                >\n                  <Text style={styles.skipButtonText}>\n                    ⏭️ Utiliser Standard par défaut\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </ScrollView>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nexport default RevisionPreferencesModal;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\QuickActions\\RevisionPreferencesModal\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\QuickActions\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[83,89],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[149,154],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[153,159],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[159,177],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'accentColor' is assigned a value but never used.","line":10,"column":45,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":56,"suggestions":[{"messageId":"removeVar","data":{"varName":"accentColor"},"fix":{"range":[512,537],"text":""},"desc":"Remove unused variable 'accentColor'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":41,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":41,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/Dashboard/components/QuickActions/index.js - VERSION RÉPARÉE\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { View, Text, TouchableOpacity, Alert } from \"react-native\";\nimport { router } from \"expo-router\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { ThemeContext } from \"../../../../contexts/ThemeContext\";\nimport { EXERCISES } from \"../../../../utils/constants\";\nimport styles from \"./style\";\n\nconst QuickActions = ({ currentLevel = \"1\", accentColor = \"#3B82F6\" }) => {\n  const themeContext = useContext(ThemeContext);\n  const colors = themeContext?.colors || {\n    surface: \"#FFFFFF\",\n    text: \"#1F2937\",\n    textSecondary: \"#6B7280\",\n  };\n\n  const [totalWords, setTotalWords] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // ========== COMPTAGE MOTS SIMPLES ==========\n  const countWordsLearned = async () => {\n    try {\n      let total = 0;\n      const levels = ['1', '2', '3', '4', '5', '6', 'bonus'];\n      const modes = ['classic', 'fast'];\n\n      for (const level of levels) {\n        for (const mode of modes) {\n          const stored = await AsyncStorage.getItem(`vocabulary_${level}_${mode}`);\n          if (stored) {\n            const data = JSON.parse(stored);\n            const completedWords = data.completedWords || {};\n            total += Object.values(completedWords).reduce((sum, words) => {\n              return sum + (Array.isArray(words) ? words.length : 0);\n            }, 0);\n          }\n        }\n      }\n      return total;\n    } catch (error) {\n      return 0;\n    }\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      const count = await countWordsLearned();\n      setTotalWords(count);\n      setIsLoading(false);\n    };\n    loadData();\n  }, [currentLevel]);\n\n  // ========== NAVIGATION AVEC NOUVELLES CONSTANTES ==========\n  const navigateToVocabulary = () => {\n    router.push({\n      pathname: EXERCISES.vocabulary.route,\n      params: { level: currentLevel, mode: \"classic\" }\n    });\n  };\n\n  const navigateToRevision = () => {\n    if (totalWords < 10) {\n      Alert.alert(\"Révision\", \"Apprenez au moins 10 mots avant de réviser.\", [{ text: \"OK\" }]);\n      return;\n    }\n\n    router.push({\n      pathname: \"/(tabs)/vocabularyRevision\",\n      params: {\n        level: currentLevel,\n        questionsCount: Math.min(10, totalWords),\n        source: 'manual'\n      }\n    });\n  };\n\n  const navigateToTest = () => {\n    router.push({\n      pathname: EXERCISES.assessment.route,\n      params: { level: currentLevel }\n    });\n  };\n\n  // ========== ACTIONS AVEC NOUVELLES CONSTANTES ==========\n  const actions = [\n    {\n      id: 'vocabulary',\n      icon: EXERCISES.vocabulary.icon,\n      label: EXERCISES.vocabulary.title,\n      subtitle: 'Apprendre de nouveaux mots',\n      action: navigateToVocabulary,\n      color: EXERCISES.vocabulary.color\n    },\n    {\n      id: 'revision',\n      icon: '🔄',\n      label: 'Révision',\n      subtitle: totalWords >= 10 ? `${totalWords} mots disponibles` : 'Apprenez plus de mots',\n      action: navigateToRevision,\n      color: totalWords >= 10 ? '#8B5CF6' : '#6B7280',\n      disabled: totalWords < 10\n    },\n    {\n      id: 'test',\n      icon: EXERCISES.assessment.icon,\n      label: EXERCISES.assessment.title,\n      subtitle: 'Évaluer vos connaissances',\n      action: navigateToTest,\n      color: EXERCISES.assessment.color\n    }\n  ];\n\n  if (isLoading) {\n    return (\n      <View style={styles.container}>\n        <Text style={[styles.sectionTitle, { color: colors.text }]}>\n          ⚡ Actions rapides\n        </Text>\n        <Text style={[styles.loadingText, { color: colors.textSecondary }]}>\n          Chargement...\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>\n        ⚡ Actions rapides\n      </Text>\n\n      <View style={styles.actionsGrid}>\n        {actions.map(action => (\n          <TouchableOpacity\n            key={action.id}\n            style={[\n              styles.actionButton,\n              { backgroundColor: colors.surface },\n              action.disabled && styles.actionButtonDisabled\n            ]}\n            onPress={action.action}\n            activeOpacity={0.7}\n            disabled={action.disabled}\n          >\n            <View style={[styles.actionIcon, { backgroundColor: `${action.color}15` }]}>\n              <Text style={styles.actionIconText}>{action.icon}</Text>\n            </View>\n            \n            <View style={styles.actionContent}>\n              <Text style={[styles.actionLabel, { color: colors.text }]}>\n                {action.label}\n              </Text>\n              <Text style={[styles.actionSubtitle, { color: colors.textSecondary }]}>\n                {action.subtitle}\n              </Text>\n            </View>\n\n            <Text style={[styles.arrow, { color: colors.textSecondary }]}>\n              →\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default QuickActions;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\QuickActions\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\SimpleMetrics\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[89,95],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[134,139],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[138,144],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":4,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":39,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[144,163],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'MetricCard' is assigned a value but never used.","line":119,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":119,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"MetricCard"},"fix":{"range":[3312,4745],"text":""},"desc":"Remove unused variable 'MetricCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'accentColor' is defined but never used.","line":119,"column":39,"nodeType":"Identifier","messageId":"unusedVar","endLine":119,"endColumn":50,"suggestions":[{"messageId":"removeVar","data":{"varName":"accentColor"},"fix":{"range":[3348,3361],"text":""},"desc":"Remove unused variable 'accentColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/Dashboard/components/SimpleMetrics/index.js - MÉTRIQUES CORRIGÉES\n\nimport React, { useContext } from \"react\";\nimport { View, Text, ActivityIndicator } from \"react-native\";\nimport { ThemeContext } from \"../../../../contexts/ThemeContext\";\nimport useActivityMetrics from \"../../../../hooks/useActivityMetrics\";\nimport useDailyWords from \"../../../../hooks/useDailyWords\";\nimport styles from \"./style\";\n\n/**\n * 📊 SimpleMetrics - CORRIGÉ\n * ✅ Temps quotidien (pas total)\n * ✅ Mots sans trend\n * ✅ Plus de confusion quotidien/cumulatif\n */\nconst SimpleMetrics = ({ accentColor = \"#3B82F6\" }) => {\n  const themeContext = useContext(ThemeContext);\n  const colors = themeContext?.colors || {\n    surface: \"#FFFFFF\",\n    text: \"#1F2937\",\n    textSecondary: \"#6B7280\",\n  };\n\n  // =================== HOOKS CORRIGÉS ===================\n  const { \n    currentStreak, \n    streakTrend, \n    formattedTime // ✅ Maintenant quotidien\n  } = useActivityMetrics();\n\n  const { \n    wordsToday,\n    isLoading: wordsLoading \n    // ✅ Plus de trend\n  } = useDailyWords();\n\n  // =================== LOADING STATE ===================\n  if (wordsLoading) {\n    return (\n      <View style={styles.container}>\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"small\" color={accentColor} />\n          <Text style={[styles.loadingText, { color: colors.textSecondary }]}>\n            Chargement des métriques...\n          </Text>\n        </View>\n      </View>\n    );\n  }\n\n  // =================== DONNÉES DES MÉTRIQUES CORRIGÉES ===================\n  const metrics = [\n    {\n      id: 'streak',\n      icon: '🔥',\n      value: (currentStreak || 0).toString(),\n      label: 'Jours de suite',\n      trend: streakTrend, // ✅ Gardé pour streak\n    },\n    {\n      id: 'words',\n      icon: '📚',\n      value: (wordsToday || 0).toString(),\n      label: 'Mots aujourd\\'hui',\n      trend: null, // ✅ SUPPRIMÉ : plus de trend trompeur\n    },\n    {\n      id: 'time',\n      icon: '⏱️',\n      value: formattedTime || '0min',\n      label: 'Temps aujourd\\'hui', // ✅ CHANGÉ : quotidien\n      trend: null,\n    }\n  ];\n\n  // Masquer si toutes les métriques sont à 0\n  const hasActivity = currentStreak > 0 || wordsToday > 0 || (formattedTime && formattedTime !== '0min');\n  \n  if (!hasActivity) {\n    return (\n      <View style={styles.container}>\n        <View style={styles.emptyState}>\n          <Text style={styles.emptyIcon}>🎯</Text>\n          <Text style={[styles.emptyTitle, { color: colors.text }]}>\n            Commencez votre première session !\n          </Text>\n          <Text style={[styles.emptySubtitle, { color: colors.textSecondary }]}>\n            Vos statistiques apparaîtront ici\n          </Text>\n        </View>\n      </View>\n    );\n  }\n\n  // =================== RENDER PRINCIPAL ===================\n  return (\n    <View style={styles.container}>\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>\n        📊 Aujourd'hui\n      </Text>\n      \n      <View style={styles.metricsGrid}>\n        {metrics.map((metric) => (\n          <MetricCard\n            key={metric.id}\n            metric={metric}\n            colors={colors}\n            accentColor={accentColor}\n          />\n        ))}\n      </View>\n    </View>\n  );\n};\n\n/**\n * 📈 Carte métrique individuelle - INCHANGÉE\n */\nconst MetricCard = ({ metric, colors, accentColor }) => {\n  const getTrendStyle = (trend) => {\n    if (!trend) return null;\n    \n    const isPositive = trend.includes('+') || trend.includes('🏆') || trend.includes('💪') || trend.includes('🔥');\n    const isNegative = trend.includes('-');\n    \n    if (isPositive) {\n      return {\n        backgroundColor: '#DCFCE7',\n        color: '#16A34A'\n      };\n    }\n    \n    if (isNegative) {\n      return {\n        backgroundColor: '#FEF2F2', \n        color: '#DC2626'\n      };\n    }\n    \n    return {\n      backgroundColor: '#F1F5F9',\n      color: '#64748B'\n    };\n  };\n\n  const trendStyle = getTrendStyle(metric.trend);\n\n  return (\n    <View style={[styles.metricCard, { backgroundColor: colors.surface }]}>\n      {/* Trend indicator */}\n      {metric.trend && trendStyle && (\n        <View style={[styles.trendIndicator, { backgroundColor: trendStyle.backgroundColor }]}>\n          <Text style={[styles.trendText, { color: trendStyle.color }]}>\n            {metric.trend}\n          </Text>\n        </View>\n      )}\n      \n      {/* Icon */}\n      <Text style={styles.metricIcon}>{metric.icon}</Text>\n      \n      {/* Value */}\n      <Text style={[styles.metricValue, { color: colors.text }]}>\n        {metric.value}\n      </Text>\n      \n      {/* Label */}\n      <Text style={[styles.metricLabel, { color: colors.textSecondary }]}>\n        {metric.label}\n      </Text>\n    </View>\n  );\n};\n\nexport default SimpleMetrics;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\SimpleMetrics\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\popup\\RevisionPopup\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,13],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[52,57],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":2,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[56,62],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":2,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[62,80],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Modal' is defined but never used.","line":2,"column":40,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":45,"suggestions":[{"messageId":"removeVar","data":{"varName":"Modal"},"fix":{"range":[80,87],"text":""},"desc":"Remove unused variable 'Modal'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Animated' is defined but never used.","line":2,"column":47,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":55,"suggestions":[{"messageId":"removeVar","data":{"varName":"Animated"},"fix":{"range":[87,97],"text":""},"desc":"Remove unused variable 'Animated'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[131,185],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'BlurView' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"BlurView"},"fix":{"range":[186,223],"text":""},"desc":"Remove unused variable 'BlurView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[224,270],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'currentLevel' is assigned a value but never used.","line":13,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":15,"suggestions":[{"messageId":"removeVar","data":{"varName":"currentLevel"},"fix":{"range":[462,488],"text":""},"desc":"Remove unused variable 'currentLevel'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useContext } from 'react';\nimport { View, Text, TouchableOpacity, Modal, Animated, Platform } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { BlurView } from 'expo-blur';\nimport { Ionicons } from '@expo/vector-icons';\nimport { ThemeContext } from '../../../../../contexts/ThemeContext';\nimport styles from './style';\n\nconst RevisionPopup = ({\n  visible = false,\n  totalWordsLearned = 50,\n  questionsCount = 10,\n  currentLevel = \"mixed\",\n  onChoice,\n  onDismiss,\n}) => {\n  const themeContext = useContext(ThemeContext);\n  const colors = themeContext?.colors || {\n    surface: \"#FFFFFF\",\n    text: \"#1F2937\",\n    textSecondary: \"#6B7280\",\n    primary: \"#10B981\",\n    accent: \"#3B82F6\"\n  };\n\n  if (!visible) return null;\n\n  const choices = [\n    {\n      id: 'now',\n      icon: <Ionicons name=\"flash\" size={22} color=\"#fff\" style={{ marginRight: 8 }} />, \n      label: 'Réviser maintenant',\n      subtitle: `${questionsCount} questions • ~3 min`,\n      color: colors.primary,\n      primary: true\n    },\n    {\n      id: 'later_50',\n      icon: <Ionicons name=\"time\" size={20} color={colors.accent} style={{ marginRight: 8 }} />, \n      label: 'Plus tard (50 mots)',\n      subtitle: `Prochaine révision à ${totalWordsLearned + 50} mots`,\n      color: colors.accent\n    },\n    {\n      id: 'later_100',\n      icon: <Ionicons name=\"hourglass\" size={20} color=\"#F59E0B\" style={{ marginRight: 8 }} />, \n      label: 'Plus tard (100 mots)',\n      subtitle: `Prochaine révision à ${totalWordsLearned + 100} mots`,\n      color: '#F59E0B'\n    },\n    {\n      id: 'disable',\n      icon: <Ionicons name=\"close-circle\" size={20} color=\"#6B7280\" style={{ marginRight: 8 }} />, \n      label: 'Désactiver la révision automatique',\n      subtitle: 'Vous pourrez la réactiver dans les paramètres',\n      color: '#6B7280'\n    }\n  ];\n\n  return (\n    <Modal\n      transparent\n      visible={visible}\n      animationType=\"fade\"\n      onRequestClose={onDismiss}\n    >\n      <View style={styles.overlay}>\n        <Animated.View style={styles.animatedPopup}>\n          <BlurView intensity={Platform.OS === 'ios' ? 60 : 40} tint=\"light\" style={styles.blurCard}>\n            <LinearGradient\n              colors={[colors.primary, colors.accent]}\n              start={{ x: 0, y: 0 }}\n              end={{ x: 1, y: 1 }}\n              style={styles.header}\n            >\n              <Text style={styles.celebration}>🎯</Text>\n              <Text style={styles.mainTitle}>Prêt pour une révision ?</Text>\n              <Text style={styles.wordsCounter}>{totalWordsLearned} mots appris</Text>\n              <Text style={styles.motivation}>Consolidez vos acquis !</Text>\n            </LinearGradient>\n\n            <View style={styles.choicesContainer}>\n              {choices.map((choice, idx) => (\n                <TouchableOpacity\n                  key={choice.id}\n                  style={[\n                    styles.choiceButton,\n                    choice.primary\n                      ? styles.choiceButtonPrimary\n                      : styles.choiceButtonSecondary,\n                    { marginTop: idx === 0 ? 0 : 14, borderColor: choice.color }\n                  ]}\n                  onPress={() => onChoice?.(choice.id)}\n                  activeOpacity={0.85}\n                >\n                  <View style={styles.choiceContent}>\n                    {choice.icon}\n                    <View style={styles.choiceTexts}>\n                      <Text style={[\n                        styles.choiceLabel,\n                        choice.primary ? styles.choiceLabelPrimary : styles.choiceLabelSecondary\n                      ]}>\n                        {choice.label}\n                      </Text>\n                      <Text style={styles.choiceSubtitle}>{choice.subtitle}</Text>\n                    </View>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n\n            <View style={styles.footerNote}>\n              <Ionicons name=\"settings-outline\" size={16} color={colors.textSecondary} style={{ marginRight: 4 }} />\n              <Text style={styles.noteText}>\n                Vous pouvez modifier vos préférences à tout moment\n              </Text>\n            </View>\n          </BlurView>\n        </Animated.View>\n      </View>\n    </Modal>\n  );\n};\n\nexport default RevisionPopup;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\popup\\RevisionPopup\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\hooks\\useDashboardData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\hooks\\useDashboardLevel.js","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'mapOldToNewLevel' and 'progressData.currentLevel'. Either include them or remove the dependency array. If 'setCurrentLevel' needs the current value of 'progressData.currentLevel', you can also switch to useReducer instead of useState and read 'progressData.currentLevel' in the reducer.","line":64,"column":6,"nodeType":"ArrayExpression","endLine":64,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [mapOldToNewLevel, progressData.currentLevel]","fix":{"range":[2109,2111],"text":"[mapOldToNewLevel, progressData.currentLevel]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/Dashboard/hooks/useDashboardLevel.js - VERSION CORRIGÉE\r\nimport { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { LANGUAGE_LEVELS } from \"../../../utils/constants\";\r\n\r\nconst ACTIVE_LEVEL_KEY = \"user_active_level\";\r\n\r\nexport const useDashboardLevel = ({ progress: progressData }) => {\r\n  const [currentLevel, setCurrentLevel] = useState(\"1\");\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const isInitialLoad = useRef(true);\r\n\r\n  // ✅ CORRECTION : Mémoriser la fonction de mapping\r\n  const mapOldToNewLevel = useCallback((level) => {\r\n    const mapping = {\r\n      A1: \"1\",\r\n      A2: \"2\", \r\n      B1: \"3\",\r\n      B2: \"4\",\r\n      C1: \"5\",\r\n      C2: \"6\",\r\n      bonus: \"bonus\",\r\n    };\r\n    return mapping[level] || level;\r\n  }, []);\r\n\r\n  // ✅ CORRECTION : Mémoriser la fonction de changement de niveau\r\n  const handleChangeActiveLevel = useCallback(async (newLevel) => {\r\n    if (!LANGUAGE_LEVELS[newLevel]) return;\r\n\r\n    setCurrentLevel(newLevel);\r\n    try {\r\n      await AsyncStorage.setItem(ACTIVE_LEVEL_KEY, newLevel);\r\n    } catch (error) {\r\n      console.error('Erreur sauvegarde niveau actif:', error);\r\n    }\r\n  }, []);\r\n\r\n  // ========== 🚨 CORRECTION PRINCIPALE : CHARGEMENT UNIQUE ==========\r\n  useEffect(() => {\r\n    // Ne charger qu'une seule fois au montage\r\n    if (!isInitialLoad.current) return;\r\n    \r\n    const loadActiveLevel = async () => {\r\n      try {\r\n        const savedLevel = await AsyncStorage.getItem(ACTIVE_LEVEL_KEY);\r\n        \r\n        if (savedLevel && LANGUAGE_LEVELS[savedLevel]) {\r\n          setCurrentLevel(mapOldToNewLevel(savedLevel));\r\n        } else if (progressData?.currentLevel) {\r\n          setCurrentLevel(mapOldToNewLevel(progressData.currentLevel));\r\n        }\r\n        \r\n        setIsLoaded(true);\r\n        isInitialLoad.current = false;\r\n      } catch (error) {\r\n        console.error('Erreur chargement niveau actif:', error);\r\n        setIsLoaded(true);\r\n        isInitialLoad.current = false;\r\n      }\r\n    };\r\n\r\n    loadActiveLevel();\r\n  }, []); // ✅ CORRIGÉ : Aucune dépendance - ne charge qu'une fois\r\n\r\n  // ========== EFFET SÉPARÉ POUR SYNC AVEC PROGRESS ==========\r\n  useEffect(() => {\r\n    // Seulement après le chargement initial\r\n    if (!isLoaded || isInitialLoad.current) return;\r\n    \r\n    // Seulement si le progress a un currentLevel différent\r\n    if (progressData?.currentLevel && progressData.currentLevel !== currentLevel) {\r\n      const mappedLevel = mapOldToNewLevel(progressData.currentLevel);\r\n      if (mappedLevel !== currentLevel && LANGUAGE_LEVELS[mappedLevel]) {\r\n        setCurrentLevel(mappedLevel);\r\n      }\r\n    }\r\n  }, [progressData?.currentLevel, isLoaded, currentLevel, mapOldToNewLevel]);\r\n\r\n  // ✅ CORRECTION : Mémoriser la couleur du niveau\r\n  const levelColor = LANGUAGE_LEVELS[currentLevel]?.color || \"#3B82F6\";\r\n\r\n  return {\r\n    currentLevel,\r\n    handleChangeActiveLevel,\r\n    levelColor,\r\n    isLoaded, // Exposer l'état de chargement si nécessaire\r\n  };\r\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\hooks\\useDashboardState.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":14,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":14,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":16,"endColumn":6,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[513,519],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/Dashboard/hooks/useDashboardState.js\nimport { useState, useCallback } from \"react\";\n\nexport const useDashboardState = (loadLastActivities) => {\n  const [showLevelProgress, setShowLevelProgress] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"home\");\n\n  // Gérer le pull-to-refresh optimisé\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    try {\n      await loadLastActivities();\n    } catch (error) {\n\n    } finally {\n      setRefreshing(false);\n    }\n  }, [loadLastActivities]);\n\n  // Gestionnaires pour la modal de progression\n  const openLevelProgressModal = useCallback(() => {\n    setShowLevelProgress(true);\n  }, []);\n\n  const closeLevelProgressModal = useCallback(() => {\n    setShowLevelProgress(false);\n  }, []);\n\n  return {\n    showLevelProgress,\n    setShowLevelProgress,\n    openLevelProgressModal,\n    closeLevelProgressModal,\n    refreshing,\n    activeTab,\n    setActiveTab,\n    onRefresh,\n  };\n};\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[95,101],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'useEffect' is defined but never used.","line":3,"column":42,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":51,"suggestions":[{"messageId":"removeVar","data":{"varName":"useEffect"},"fix":{"range":[127,138],"text":""},"desc":"Remove unused variable 'useEffect'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'subscribe' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"subscribe"},"fix":{"range":[155,204],"text":""},"desc":"Remove unused variable 'subscribe'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'RefreshControl' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"RefreshControl"},"fix":{"range":[214,229],"text":""},"desc":"Remove unused variable 'RefreshControl'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":5,"column":26,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":30,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[228,234],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":5,"column":32,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":42,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[234,246],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":5,"column":44,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":48,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[246,252],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[276,330],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":22,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":22,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[831,841],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ModernHeader' is defined but never used.","line":25,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":25,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ModernHeader"},"fix":{"range":[941,959],"text":""},"desc":"Remove unused variable 'ModernHeader'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroContinueSection' is defined but never used.","line":26,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":26,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroContinueSection"},"fix":{"range":[995,1020],"text":""},"desc":"Remove unused variable 'HeroContinueSection'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'QuickActions' is defined but never used.","line":27,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":27,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"QuickActions"},"fix":{"range":[1063,1081],"text":""},"desc":"Remove unused variable 'QuickActions'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SimpleMetrics' is defined but never used.","line":28,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":28,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"SimpleMetrics"},"fix":{"range":[1117,1136],"text":""},"desc":"Remove unused variable 'SimpleMetrics'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LearningProgress' is defined but never used.","line":29,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":29,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LearningProgress"},"fix":{"range":[1173,1195],"text":""},"desc":"Remove unused variable 'LearningProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'RevisionOrchestrator' is defined but never used.","line":32,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":32,"endColumn":28,"suggestions":[{"messageId":"removeVar","data":{"varName":"RevisionOrchestrator"},"fix":{"range":[1251,1277],"text":""},"desc":"Remove unused variable 'RevisionOrchestrator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'route' is defined but never used.","line":38,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":38,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"route"},"fix":{"range":[1456,1465],"text":""},"desc":"Remove unused variable 'route'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'getExerciseProgress' is assigned a value but never used.","line":45,"column":29,"nodeType":"Identifier","messageId":"unusedVar","endLine":45,"endColumn":48,"suggestions":[{"messageId":"removeVar","data":{"varName":"getExerciseProgress"},"fix":{"range":[1675,1696],"text":""},"desc":"Remove unused variable 'getExerciseProgress'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/Dashboard/index.js - VERSION CORRIGÉE - MÊME LOGIQUE QUE LEVELSELECTION\n\nimport React, { useContext, useCallback, useEffect } from \"react\";\nimport { subscribe } from '../../utils/eventBus';\nimport { RefreshControl, Text, ScrollView, View } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { router } from \"expo-router\";\n\n// Contextes\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { useProgress } from \"../../contexts/ProgressContext\";\n\n// 🚀 HOOK PROGRESSION TEMPS RÉEL\nimport useRealTimeProgress from \"../../hooks/useRealTimeProgress\";\n\n// Hooks\nimport { useDashboardLevel } from \"./hooks/useDashboardLevel\";\nimport { useDashboardState } from \"./hooks/useDashboardState\";\nimport useLastActivity from \"../../hooks/useLastActivity\";\n\n// Composants Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../components/layout/Container\";\n\n// Composants Dashboard\nimport ModernHeader from \"./components/ModernHeader\";\nimport HeroContinueSection from \"./components/HeroContinueSection\";\nimport QuickActions from \"./components/QuickActions\";\nimport SimpleMetrics from \"./components/SimpleMetrics\";\nimport LearningProgress from \"./components/LearningProgress\";\n\n// 🚀 RÉVISION\nimport RevisionOrchestrator from \"../VocabularyRevision/RevisionOrchestrator\";\n\n// Constantes\nimport { EXERCISES, LANGUAGE_LEVELS } from \"../../utils/constants\";\nimport styles from \"./style\";\n\nconst Dashboard = ({ route }) => {\n  \n  // =================== CONTEXTES ===================\n  const themeContext = useContext(ThemeContext);\n  const progressData = useProgress();\n\n  // 🚀 PROGRESSION TEMPS RÉEL\n  const { getLevelProgress, getExerciseProgress, refresh: refreshProgress } = useRealTimeProgress();\n\n  const colors = themeContext?.colors || {\n    background: \"#F8FAFC\",\n    primary: \"#3B82F6\", \n    surface: \"#FFFFFF\",\n    text: \"#1F2937\",\n    textSecondary: \"#6B7280\",\n  };\n\n  // =================== HOOKS DASHBOARD ===================\n  const { currentLevel, handleChangeActiveLevel, levelColor } = useDashboardLevel({ \n    progress: progressData.progress \n  });\n  \n  const { lastActivity, isLoading: isActivityLoading, reload: reloadActivity } = useLastActivity();\n  \n  const { refreshing, onRefresh: originalOnRefresh } = useDashboardState(reloadActivity);\n\n  const onRefresh = useCallback(async () => {\n    await Promise.all([\n      originalOnRefresh(),\n      refreshProgress()\n    ]);\n  }, [originalOnRefresh, refreshProgress]);\n\n  // =================== NAVIGATION ===================\n  \n  const handleContinue = useCallback((activity) => {\n    if (activity === \"levelSelection\") {\n      router.push(\"/(tabs)/levelSelection\");\n      return;\n    }\n\n    const { type, level, mode } = activity;\n    const exercise = Object.values(EXERCISES).find(ex => ex.id === type);\n    \n    if (exercise) {\n      const params = { level };\n      if (mode && type === \"vocabulary\") params.mode = mode;\n      \n      router.push({\n        pathname: exercise.route,\n        params\n      });\n    }\n  }, []);\n\n  const handleChangeLevelVisual = useCallback((levelId) => {\n    handleChangeActiveLevel(levelId);\n  }, [handleChangeActiveLevel]);\n\n  const handleLevelSelect = useCallback((level) => {\n    router.push(`/(tabs)/exerciseSelection?level=${level}`);\n  }, []);\n\n  // =================== NIVEAUX - MÊME LOGIQUE QUE LEVELSELECTION ===================\n  \n  // ✅ EXACTEMENT comme LevelSelection - progression individuelle par niveau\n  const allLevels = ['1', '2', '3', '4', '5', '6', 'bonus'].map(levelKey => {\n    const levelInfo = LANGUAGE_LEVELS[levelKey];\n    const progress = getLevelProgress(levelKey); // ✅ Progression réelle de ce niveau\n    \n    return {\n      id: levelKey,\n      title: levelInfo.title,\n      color: levelInfo.color,\n      icon: levelInfo.icon,\n      progress, // ✅ % réel de ce niveau spécifique\n      isActive: levelKey === currentLevel,\n      isCompleted: progress >= 100,\n    };\n  });\n\n  // ✅ PROGRESSION GÉNÉRALE = PROGRESSION DU NIVEAU EN COURS (pas moyenne!)\n  const globalProgress = getLevelProgress(currentLevel);\n\n  // =================== LOADING ===================\n  \n  if (progressData.isLoading) {\n    return (\n      <Container safeArea backgroundColor={colors.background} withPadding>\n        <View style={styles.loadingContainer}>\n          <Text style={[styles.loadingText, { color: colors.primary }]}>\n            Chargement du tableau de bord...\n          </Text>\n        </View>\n      </Container>\n    );\n  }\n\n  // =================== BACKGROUND ===================\n  \n  const backgroundGradient = {\n    colors: [levelColor + '05', colors.background, levelColor + '08'],\n    locations: [0, 0.6, 1],\n  };\n\n  // =================== RENDER ===================\n  \n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.NO_BOTTOM}\n      withScrollView={false}\n      backgroundColor=\"transparent\"\n      statusBarStyle=\"light-content\"\n      withPadding={false}\n    >\n      <LinearGradient\n        colors={backgroundGradient.colors}\n        locations={backgroundGradient.locations}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 0, y: 1 }}\n        style={styles.container}\n      >\n        {/* Header */}\n        <ModernHeader\n          level={currentLevel}\n          levelColor={levelColor}\n        />\n\n        {/* Contenu principal */}\n        <ScrollView\n          style={styles.scrollView}\n          contentContainerStyle={styles.scrollContent}\n          showsVerticalScrollIndicator={false}\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={onRefresh}\n              colors={[levelColor]}\n              tintColor={levelColor}\n            />\n          }\n        >\n          {/* Section Continue */}\n          <HeroContinueSection\n            lastActivity={lastActivity}\n            onPress={handleContinue}\n            accentColor={levelColor}\n            isLoading={isActivityLoading}\n          />\n\n          {/* Actions rapides */}\n          <QuickActions\n            currentLevel={currentLevel}\n            progressContext={progressData}\n            accentColor={levelColor}\n          />\n\n          {/* Métriques */}\n          <SimpleMetrics accentColor={levelColor} />\n\n          {/* ✅ PROGRESSION - MÊME LOGIQUE QUE LEVELSELECTION */}\n          <LearningProgress\n            globalProgress={globalProgress} // ✅ Progression du niveau en cours\n            levels={allLevels} // ✅ Chaque niveau avec sa vraie progression\n            currentLevel={currentLevel}\n            onSelectLevel={handleLevelSelect}\n            onChangeLevelVisual={handleChangeLevelVisual}\n            primaryColor={levelColor}\n          />\n\n          {/* Espace en bas */}\n          <View style={styles.bottomSpacer} />\n        </ScrollView>\n\n        {/* Système de révision */}\n        <RevisionOrchestrator currentLevel={currentLevel} />\n      </LinearGradient>\n    </Container>\n  );\n};\n\nexport default Dashboard;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\ExerciseSelection\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[87,93],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[141,146],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[145,151],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[151,163],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":50,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[163,181],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[205,259],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":14,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Button"},"fix":{"range":[525,537],"text":""},"desc":"Remove unused variable 'Button'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":17,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[596,606],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":18,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Header"},"fix":{"range":[681,693],"text":""},"desc":"Remove unused variable 'Header'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/ExerciseSelection/index.js - VERSION SIMPLE QUI GARDE TON DESIGN\nimport React, { useContext, useMemo } from \"react\";\nimport { View, Text, ScrollView, TouchableOpacity } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { router } from \"expo-router\";\n\n// Contextes\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\n// 🚀 HOOK PROGRESSION TEMPS RÉEL - JUSTE POUR LES CHIFFRES\nimport useRealTimeProgress from \"../../hooks/useRealTimeProgress\";\n\n// Composants UI\nimport Button from \"../../components/ui/Button\";\n\n// Composants Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../components/layout/Container\";\nimport Header from \"../../components/layout/Header\";\n\n// Constantes\nimport { EXERCISES, LANGUAGE_LEVELS, BONUS_EXERCISES } from \"../../utils/constants\";\n\n// Styles\nimport styles, { getBackgroundGradient } from \"./style\";\n\nconst DEFAULT_THEME = {\n  colors: {\n    background: \"#F9FAFB\",\n    primary: \"#5E60CE\",\n    text: \"#1F2937\",\n    textSecondary: \"#6B7280\",\n    surface: \"#FFFFFF\",\n  },\n};\n\nconst ExerciseSelection = ({ route }) => {\n  const { level } = route.params;\n  const themeContext = useContext(ThemeContext) || DEFAULT_THEME;\n  const { colors } = themeContext;\n\n  // 🚀 JUSTE POUR RÉCUPÉRER LES VRAIS CHIFFRES\n  const { getExerciseProgress, hasProgress } = useRealTimeProgress();\n\n  // Infos du niveau\n  const levelInfo = useMemo(() => {\n    return LANGUAGE_LEVELS[level] || {\n      color: colors.primary,\n      title: `Niveau ${level}`,\n      icon: level === \"bonus\" ? \"⭐\" : \"📚\",\n    };\n  }, [level, colors.primary]);\n\n  const levelColor = levelInfo.color;\n  const backgroundGradient = getBackgroundGradient(levelColor, colors.background);\n\n  // ✅ EXERCICES - TON DESIGN ORIGINAL + VRAIES DONNÉES\n  const exercises = useMemo(() => {\n    const exercisesList = [];\n\n    Object.values(EXERCISES).forEach((exercise) => {\n      // Filtrer niveau bonus\n      if (level === \"bonus\" && !BONUS_EXERCISES.includes(exercise.id)) {\n        return;\n      }\n\n      // ✅ FAST VOCABULARY - A SON PROPRE POURCENTAGE\n      if (exercise.id === 'vocabulary_fast') {\n        const fastProgress = getExerciseProgress('vocabulary_fast', level); // ✅ Vraie progression Fast\n        \n        exercisesList.push({\n          ...exercise,\n          progress: fastProgress, // ✅ Son vrai %\n          hasProgress: fastProgress > 0,\n          isFast: true,\n        });\n        return;\n      }\n\n      // ✅ EXERCICES NORMAUX avec VRAIE PROGRESSION\n      const exerciseProgress = getExerciseProgress(exercise.id, level);\n      const exerciseHasProgress = hasProgress(exercise.id, level);\n\n      exercisesList.push({\n        ...exercise,\n        progress: exerciseProgress, // ✅ Vrai chiffre\n        hasProgress: exerciseHasProgress, // ✅ Vraie détection\n        isFast: false,\n      });\n    });\n\n    return exercisesList;\n  }, [level, getExerciseProgress, hasProgress]);\n\n  // Navigation\n  const handleExerciseSelect = (exercise) => {\n    const params = { level };\n    \n    if (exercise.id === 'vocabulary') {\n      params.mode = 'classic';\n    } else if (exercise.id === 'vocabulary_fast') {\n      params.mode = 'fast';\n    }\n    \n    router.push({\n      pathname: exercise.route,\n      params\n    });\n  };\n\n  // ========== RENDU - TON DESIGN ORIGINAL ==========\n  const renderHeader = () => (\n    <View style={styles.headerContainer}>\n      <LinearGradient\n        colors={[levelColor, levelColor + \"DD\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={styles.headerGradient}\n      >\n        <Header\n          title={levelInfo.title}\n          showBackButton\n          backgroundColor=\"transparent\"\n          textColor=\"white\"\n          withStatusBar={false}\n          withShadow={false}\n          titleContainerStyle={styles.headerTitle}\n        />\n\n        {level === \"bonus\" && (\n          <View style={{ alignItems: \"center\", paddingBottom: 12 }}>\n            <Text style={styles.bonusText}>\n              Contenu exclusif débloqué !\n            </Text>\n          </View>\n        )}\n      </LinearGradient>\n    </View>\n  );\n\n  const renderExerciseCard = (exercise) => {\n    // ✅ LOGIQUE BOUTON SIMPLE\n    const getButtonText = () => {\n      if (exercise.hasProgress) return \"Continuer\"; // Dès qu'on a commencé = Continuer\n      return \"Commencer\";\n    };\n\n    const getButtonIcon = () => {\n      if (exercise.hasProgress) return \"play-outline\";\n      return \"rocket-outline\";\n    };\n\n    return (\n      <TouchableOpacity\n        key={exercise.id}\n        style={styles.levelCard}\n        onPress={() => handleExerciseSelect(exercise)}\n        activeOpacity={0.8}\n      >\n        <View style={styles.cardContentStyle}>\n          {/* Header - TON DESIGN ORIGINAL */}\n          <View style={styles.cardHeader}>\n            <View style={styles.levelTitleContainer}>\n              <Text style={[styles.levelMainTitle, { color: colors.text }]}>\n                {exercise.title}\n              </Text>\n              \n              {/* ✅ TON BADGE ORIGINAL avec VRAI CHIFFRE */}\n              <View style={[styles.levelBadge, { backgroundColor: exercise.color }]}>\n                <Text style={styles.levelBadgeText}>\n                  {exercise.progress}% {/* ✅ VRAI CHIFFRE (même Fast aura le sien) */}\n                </Text>\n              </View>\n              \n              {/* Badge FAST - TON DESIGN ORIGINAL */}\n              {exercise.id === \"vocabulary_fast\" && (\n                <View style={[styles.levelBadge, styles.fastBadge]}>\n                  <Text style={[styles.levelBadgeText, styles.fastBadgeText]}>FAST</Text>\n                </View>\n              )}\n            </View>\n            <Text style={styles.levelIcon}>{exercise.icon}</Text>\n          </View>\n\n          {/* Progression - TON DESIGN ORIGINAL */}\n          {exercise.hasProgress && (\n            <View style={styles.progressContainer}>\n              <View style={styles.progressBar}>\n                <View \n                  style={[\n                    styles.progressFill,\n                    { \n                      width: `${exercise.progress}%`, // ✅ Vrai chiffre\n                      backgroundColor: exercise.color\n                    }\n                  ]} \n                />\n              </View>\n              <Text style={[styles.progressText, { color: colors.textSecondary }]}>\n                {exercise.progress}% {/* ✅ Vrai chiffre */}\n              </Text>\n            </View>\n          )}\n\n          {/* Bouton - TON DESIGN ORIGINAL */}\n          <Button\n            title={getButtonText()} // ✅ Logique simple\n            variant=\"filled\"\n            color={exercise.color}\n            fullWidth\n            onPress={() => handleExerciseSelect(exercise)}\n            style={styles.startButton}\n            rightIcon={getButtonIcon()}\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.NO_BOTTOM}\n      withScrollView={false}\n      backgroundColor=\"transparent\"\n      statusBarColor={levelColor}\n      statusBarStyle=\"light-content\"\n      withPadding={false}\n    >\n      <LinearGradient\n        colors={backgroundGradient.colors}\n        locations={backgroundGradient.locations}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 0, y: 1 }}\n        style={{ flex: 1 }}\n      >\n        {renderHeader()}\n        \n        <ScrollView\n          style={{ flex: 1 }}\n          contentContainerStyle={[styles.scrollContent, { paddingBottom: 60 }]}\n          showsVerticalScrollIndicator={false}\n        >\n          <View style={styles.introSection}>\n            <Text style={[styles.introText, { color: colors.textSecondary }]}>\n              Choisissez votre exercice\n            </Text>\n          </View>\n          \n          <View style={styles.levelsContainer}>\n            {exercises.map(renderExerciseCard)}\n          </View>\n        </ScrollView>\n      </LinearGradient>\n    </Container>\n  );\n};\n\nexport default ExerciseSelection;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\ExerciseSelection\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\LevelSelection\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[84,90],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[129,134],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[133,139],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[139,157],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":3,"column":40,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":50,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[157,169],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[193,247],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":14,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Button"},"fix":{"range":[513,525],"text":""},"desc":"Remove unused variable 'Button'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":17,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[584,594],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":18,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Header"},"fix":{"range":[669,681],"text":""},"desc":"Remove unused variable 'Header'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'hasVocabularyStarted' is assigned a value but never used.","line":41,"column":42,"nodeType":"Identifier","messageId":"unusedVar","endLine":41,"endColumn":62,"suggestions":[{"messageId":"removeVar","data":{"varName":"hasVocabularyStarted"},"fix":{"range":[1263,1285],"text":""},"desc":"Remove unused variable 'hasVocabularyStarted'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'hasVocabularyFastStarted' is assigned a value but never used.","line":41,"column":64,"nodeType":"Identifier","messageId":"unusedVar","endLine":41,"endColumn":88,"suggestions":[{"messageId":"removeVar","data":{"varName":"hasVocabularyFastStarted"},"fix":{"range":[1285,1311],"text":""},"desc":"Remove unused variable 'hasVocabularyFastStarted'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/LevelSelection/index.js - VERSION SIMPLE QUI GARDE TON DESIGN\nimport React, { useContext } from \"react\";\nimport { View, Text, TouchableOpacity, ScrollView } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { router } from \"expo-router\";\n\n// Contextes\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\n// 🚀 HOOK PROGRESSION TEMPS RÉEL - JUSTE POUR LES CHIFFRES\nimport useRealTimeProgress from \"../../hooks/useRealTimeProgress\";\n\n// Composants UI\nimport Button from \"../../components/ui/Button\";\n\n// Composants Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../components/layout/Container\";\nimport Header from \"../../components/layout/Header\";\n\n// Constantes\nimport { LANGUAGE_LEVELS, LEVELS_LIST } from \"../../utils/constants\";\n\n// Styles\nimport styles, { getBackgroundGradient } from \"./style\";\n\nconst DEFAULT_THEME = {\n  colors: {\n    background: \"#F8F9FA\",\n    primary: \"#5E60CE\", \n    text: \"#1F2937\",\n    textSecondary: \"#6B7280\",\n    surface: \"#FFFFFF\",\n  },\n};\n\nconst LevelSelection = () => {\n  const themeContext = useContext(ThemeContext) || DEFAULT_THEME;\n  const { colors } = themeContext;\n  \n  // 🚀 JUSTE POUR RÉCUPÉRER LES VRAIS CHIFFRES\n  const { getLevelProgress, hasProgress, hasVocabularyStarted, hasVocabularyFastStarted } = useRealTimeProgress();\n\n  // Niveau actuel simplifié\n  const getCurrentUserLevel = () => {\n    for (let i = 1; i <= 6; i++) {\n      if (getLevelProgress(i.toString()) === 0) {\n        return i;\n      }\n    }\n    return 6;\n  };\n\n  const currentUserLevel = getCurrentUserLevel();\n  const currentLevelData = LANGUAGE_LEVELS[currentUserLevel];\n\n  // Background\n  const backgroundGradient = getBackgroundGradient(\n    currentLevelData.color, \n    colors.background\n  );\n\n  // ✅ DONNÉES NIVEAUX - DESIGN ORIGINAL + VRAIES DONNÉES\n  const levels = LEVELS_LIST.map((levelKey) => {\n    const levelInfo = LANGUAGE_LEVELS[levelKey];\n    const progress = getLevelProgress(levelKey); // ✅ Seul changement : vrai chiffre\n    \n    // ✅ LOGIQUE SIMPLE : A-t-on commencé ce niveau ?\n    const hasStarted = hasProgress('vocabulary', levelKey) || \n                      hasProgress('phrases', levelKey) ||\n                      hasProgress('grammar', levelKey) ||\n                      hasProgress('reading', levelKey) ||\n                      hasProgress('spelling', levelKey) ||\n                      hasProgress('conversations', levelKey) ||\n                      hasProgress('errorCorrection', levelKey) ||\n                      hasProgress('wordGames', levelKey) ||\n                      hasProgress('assessment', levelKey);\n    \n    return {\n      id: levelKey,\n      title: levelInfo.title,\n      progress, // ✅ Vrai chiffre\n      color: levelInfo.color,\n      icon: levelInfo.icon,\n      hasProgress: progress > 0,\n      hasStarted, // ✅ Pour logique bouton\n    };\n  });\n\n  // Navigation\n  const handleLevelSelect = (level) => {\n    router.push({\n      pathname: \"/(tabs)/exerciseSelection\",\n      params: { level: level.id },\n    });\n  };\n\n  // ========== RENDU - TON DESIGN ORIGINAL ==========\n  const renderHeader = () => (\n    <View style={styles.headerContainer}>\n      <LinearGradient\n        colors={[\"#6366F1\", \"#8B5CF6\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={styles.headerGradient}\n      >\n        <Header\n          title=\"Niveaux\"\n          showBackButton\n          onBackPress={() => router.push(\"/(tabs)/dashboard\")}\n          backgroundColor=\"transparent\"\n          textColor=\"white\"\n          withStatusBar={false}\n          withShadow={false}\n          titleContainerStyle={styles.headerTitle}\n        />\n      </LinearGradient>\n    </View>\n  );\n\n  const renderLevelCard = (level) => {\n    // ✅ LOGIQUE BOUTON SIMPLE\n    const getButtonText = () => {\n      if (level.hasStarted) return \"Continuer\"; // Dès qu'on a commencé = Continuer\n      return \"Commencer\";\n    };\n\n    const getButtonIcon = () => {\n      if (level.hasStarted) return \"play-outline\";\n      return \"rocket-outline\";\n    };\n\n    return (\n      <TouchableOpacity\n        key={level.id}\n        style={styles.modernCard}\n        onPress={() => handleLevelSelect(level)}\n        activeOpacity={0.8}\n      >\n        <View style={styles.modernCardContent}>\n          {/* Header - TON DESIGN ORIGINAL */}\n          <View style={styles.modernCardHeader}>\n            <View style={styles.modernTitleContainer}>\n              <Text style={[styles.modernTitle, { color: colors.text }]}>\n                {level.title}\n              </Text>\n              {/* ✅ TON BADGE ORIGINAL avec VRAI CHIFFRE */}\n              <View style={[styles.modernBadge, { backgroundColor: level.color }]}>\n                <Text style={styles.modernBadgeText}>\n                  {level.progress}% {/* ✅ SEUL CHANGEMENT : vrai chiffre */}\n                </Text>\n              </View>\n            </View>\n            <Text style={styles.modernIcon}>{level.icon}</Text>\n          </View>\n\n          {/* Progression - TON DESIGN ORIGINAL */}\n          {level.hasProgress && (\n            <View style={styles.modernProgressContainer}>\n              <View style={styles.modernProgressBar}>\n                <View \n                  style={[\n                    styles.modernProgressFill,\n                    { \n                      width: `${level.progress}%`, // ✅ Vrai chiffre\n                      backgroundColor: level.color\n                    }\n                  ]} \n                />\n              </View>\n              <Text style={[styles.modernProgressText, { color: colors.textSecondary }]}>\n                {level.progress}% {/* ✅ Vrai chiffre */}\n              </Text>\n            </View>\n          )}\n\n          {/* Bouton - TON DESIGN ORIGINAL */}\n          <Button\n            title={getButtonText()} // ✅ Logique simple\n            variant=\"filled\"\n            color={level.color}\n            fullWidth\n            onPress={() => handleLevelSelect(level)}\n            style={styles.modernButton}\n            rightIcon={getButtonIcon()}\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.NO_BOTTOM}\n      withScrollView={false}\n      backgroundColor=\"transparent\" \n      statusBarColor=\"#6366F1\"\n      statusBarStyle=\"light-content\"\n      withPadding={false}\n    >\n      <LinearGradient\n        colors={backgroundGradient.colors}\n        locations={backgroundGradient.locations}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 0, y: 1 }}\n        style={{ flex: 1 }}\n      >\n        {renderHeader()}\n        \n        <ScrollView \n          style={{ flex: 1 }}\n          contentContainerStyle={[styles.modernScrollContent, { paddingBottom: 60 }]}\n          showsVerticalScrollIndicator={false}\n        >\n          <View style={styles.modernIntro}>\n            <Text style={[styles.modernIntroText, { color: colors.textSecondary }]}>\n              À vous de choisir !\n            </Text>\n          </View>\n          \n          <View style={styles.modernLevelsContainer}>\n            {levels.map(renderLevelCard)}\n          </View>\n        </ScrollView>\n      </LinearGradient>\n    </Container>\n  );\n};\n\nexport default LevelSelection;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\LevelSelection\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Settings\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[40,51],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[69,74],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[73,79],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[79,91],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'RevisionSettings' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"RevisionSettings"},"fix":{"range":[122,144],"text":""},"desc":"Remove unused variable 'RevisionSettings'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/Settings/index.js\nimport React from 'react';\nimport { View, Text, ScrollView } from 'react-native';\nimport RevisionSettings from '../../components/setting/RevisionSettings';\n\nconst SettingsScreen = () => {\n  return (\n    <ScrollView style={{ flex: 1, backgroundColor: '#F8FAFC' }} contentContainerStyle={{ padding: 20 }}>\n      <Text style={{ fontSize: 24, fontWeight: 'bold', marginBottom: 20 }}>\n        Paramètres\n      </Text>\n      <RevisionSettings />\n      {/* D'autres paramètres pourront être ajoutés ici */}\n    </ScrollView>\n  );\n};\n\nexport default SettingsScreen;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\VocabularyRevision\\RevisionOrchestrator\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[84,90],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'RevisionPopup' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"RevisionPopup"},"fix":{"range":[255,274],"text":""},"desc":"Remove unused variable 'RevisionPopup'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":44,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":44,"endColumn":19},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":136,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":136,"endColumn":44,"suggestions":[{"messageId":"addBrackets","fix":{"range":[4366,4734],"text":"{ const nextTarget = totalWords + 50;\r\n        await saveRevisionPreferences(nextTarget, false);\r\n        \r\n        // Navigation\r\n        router.push({\r\n          pathname: \"/(tabs)/vocabularyRevision\",\r\n          params: {\r\n            level: currentLevel,\r\n            questionsCount: 10,\r\n            source: 'popup_trigger'\r\n          }\r\n        });\r\n        break; }"},"desc":"Add {} brackets around the case block."}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":151,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":151,"endColumn":40,"suggestions":[{"messageId":"addBrackets","fix":{"range":[4778,4880],"text":"{ const next50 = totalWords + 50;\r\n        await saveRevisionPreferences(next50, false);\r\n        break; }"},"desc":"Add {} brackets around the case block."}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":156,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":156,"endColumn":42,"suggestions":[{"messageId":"addBrackets","fix":{"range":[4925,5030],"text":"{ const next100 = totalWords + 100;\r\n        await saveRevisionPreferences(next100, false);\r\n        break; }"},"desc":"Add {} brackets around the case block."}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":168,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":168,"endColumn":45,"suggestions":[{"messageId":"addBrackets","fix":{"range":[5345,5457],"text":"{ const defaultNext = totalWords + 50;\r\n        await saveRevisionPreferences(defaultNext, false);\r\n        break; }"},"desc":"Add {} brackets around the case block."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/revision/RevisionOrchestrator/index.js - VERSION CORRIGÉE\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { router } from 'expo-router';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport RevisionPopup from '../../Dashboard/components/popup/RevisionPopup';\r\n\r\nconst REVISION_STORAGE_KEY = 'revision_preferences';\r\n\r\nconst RevisionOrchestrator = ({ currentLevel = \"mixed\" }) => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [totalWords, setTotalWords] = useState(0);\r\n  const [nextRevisionAt, setNextRevisionAt] = useState(50);\r\n  const [isDisabled, setIsDisabled] = useState(false); // ✅ VRAI FLAG BOOLEAN\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  \r\n  // ✅ PROTECTION contre double-popup\r\n  const popupShownRef = useRef(false);\r\n\r\n  // ========== COMPTAGE SIMPLE ==========\r\n  const countWords = async () => {\r\n    try {\r\n      let total = 0;\r\n      const levels = ['1', '2', '3', '4', '5', '6', 'bonus'];\r\n      const modes = ['classic', 'fast'];\r\n\r\n      for (const level of levels) {\r\n        for (const mode of modes) {\r\n          const stored = await AsyncStorage.getItem(`vocabulary_${level}_${mode}`);\r\n          if (stored) {\r\n            const data = JSON.parse(stored);\r\n            const completedWords = data.completedWords || {};\r\n            \r\n            Object.values(completedWords).forEach(words => {\r\n              if (Array.isArray(words)) {\r\n                total += words.length;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      setTotalWords(total);\r\n      return total;\r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // ========== SAUVEGARDE/CHARGEMENT CORRIGÉ ==========\r\n  const loadRevisionPreferences = async () => {\r\n    try {\r\n      const saved = await AsyncStorage.getItem(REVISION_STORAGE_KEY);\r\n      if (saved) {\r\n        const prefs = JSON.parse(saved);\r\n        setNextRevisionAt(prefs.nextRevisionAt || 50);\r\n        setIsDisabled(prefs.isDisabled || false); // ✅ VRAI FLAG\r\n        console.log(\"🔄 Loaded revision prefs:\", prefs);\r\n      } else {\r\n        // ✅ Valeurs par défaut\r\n        setNextRevisionAt(50);\r\n        setIsDisabled(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading revision preferences:', error);\r\n      setNextRevisionAt(50);\r\n      setIsDisabled(false);\r\n    } finally {\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n\r\n  const saveRevisionPreferences = async (newNextAt, newIsDisabled) => {\r\n    try {\r\n      const prefs = {\r\n        nextRevisionAt: newNextAt,\r\n        isDisabled: newIsDisabled,\r\n        lastUpdate: Date.now()\r\n      };\r\n      \r\n      await AsyncStorage.setItem(REVISION_STORAGE_KEY, JSON.stringify(prefs));\r\n      console.log(\"💾 Saved revision prefs:\", prefs);\r\n      \r\n      setNextRevisionAt(newNextAt);\r\n      setIsDisabled(newIsDisabled);\r\n    } catch (error) {\r\n      console.error('Error saving revision preferences:', error);\r\n    }\r\n  };\r\n\r\n  // ========== CHARGEMENT INITIAL ==========\r\n  useEffect(() => {\r\n    const initializeRevision = async () => {\r\n      await loadRevisionPreferences();\r\n      await countWords();\r\n    };\r\n\r\n    initializeRevision();\r\n  }, []);\r\n\r\n  // ========== VÉRIFICATION RÉVISION ==========\r\n  useEffect(() => {\r\n    // ✅ ATTENDRE que tout soit chargé\r\n    if (!isLoaded) return;\r\n    \r\n    // ✅ VÉRIFICATION COMPLÈTE\r\n    const shouldShow = !isDisabled && \r\n                      totalWords >= nextRevisionAt && \r\n                      totalWords > 0 && \r\n                      !showPopup && \r\n                      !popupShownRef.current;\r\n\r\n    console.log(\"🔍 Revision check:\", {\r\n      isDisabled,\r\n      totalWords,\r\n      nextRevisionAt,\r\n      shouldShow,\r\n      popupAlreadyShown: popupShownRef.current\r\n    });\r\n\r\n    if (shouldShow) {\r\n      // ✅ PROTECTION double-popup\r\n      popupShownRef.current = true;\r\n      setTimeout(() => setShowPopup(true), 1000);\r\n    }\r\n  }, [isLoaded, isDisabled, totalWords, nextRevisionAt, showPopup]);\r\n\r\n  // ========== HANDLERS CORRIGÉS ==========\r\n  const handleChoice = async (choice) => {\r\n    console.log(\"🎯 Révision choice:\", choice);\r\n    setShowPopup(false);\r\n    popupShownRef.current = false; // ✅ Reset protection\r\n    \r\n    switch (choice) {\r\n      case 'now':\r\n        // ✅ Programmer prochaine révision AVANT navigation\r\n        const nextTarget = totalWords + 50;\r\n        await saveRevisionPreferences(nextTarget, false);\r\n        \r\n        // Navigation\r\n        router.push({\r\n          pathname: \"/(tabs)/vocabularyRevision\",\r\n          params: {\r\n            level: currentLevel,\r\n            questionsCount: 10,\r\n            source: 'popup_trigger'\r\n          }\r\n        });\r\n        break;\r\n        \r\n      case 'later_50':\r\n        const next50 = totalWords + 50;\r\n        await saveRevisionPreferences(next50, false);\r\n        break;\r\n        \r\n      case 'later_100':\r\n        const next100 = totalWords + 100;\r\n        await saveRevisionPreferences(next100, false);\r\n        break;\r\n        \r\n      case 'disable':\r\n        // ✅ VRAIE DÉSACTIVATION\r\n        console.log(\"❌ Révisions désactivées par l'utilisateur\");\r\n        await saveRevisionPreferences(nextRevisionAt, true); // ✅ isDisabled = true\r\n        break;\r\n        \r\n      default:\r\n        // Fermeture = later_50 par défaut\r\n        const defaultNext = totalWords + 50;\r\n        await saveRevisionPreferences(defaultNext, false);\r\n        break;\r\n    }\r\n  };\r\n\r\n  // ✅ NE PAS RENDRE SI DISABLED\r\n  if (isDisabled) {\r\n    console.log(\"❌ Révisions désactivées - pas d'affichage\");\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <RevisionPopup\r\n      visible={showPopup}\r\n      totalWordsLearned={totalWords}\r\n      questionsCount={10}\r\n      currentLevel={currentLevel}\r\n      onChoice={handleChoice}\r\n      onDismiss={() => handleChoice('later_50')}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RevisionOrchestrator;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\VocabularyRevision\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[77,83],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[133,138],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[137,143],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[143,161],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'StatusBar' is defined but never used.","line":3,"column":50,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":59,"suggestions":[{"messageId":"removeVar","data":{"varName":"StatusBar"},"fix":{"range":[171,182],"text":""},"desc":"Remove unused variable 'StatusBar'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/VocabularyRevision/index.js - VERSION AVEC HOOK DÉDIÉ\r\nimport React, { useState, useContext } from 'react';\r\nimport { View, Text, TouchableOpacity, Animated, StatusBar } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport useRevisionManager from '../../hooks/useRevisionManager';\r\nimport useRevisionData from '../../hooks/useRevisionData'; // ← NOUVEAU HOOK\r\n\r\nimport styles from './style';\r\n\r\nconst VocabularyRevision = ({ route }) => {\r\n  const navigation = useNavigation();\r\n  const themeContext = useContext(ThemeContext);\r\n  const { markRevisionCompleted } = useRevisionManager();\r\n  \r\n  const { \r\n    level = \"mixed\", \r\n    questionsCount = 10,\r\n    source = 'manual'\r\n  } = route?.params || {};\r\n\r\n  const colors = themeContext?.colors || {\r\n    background: \"#F8FAFC\",\r\n    surface: \"#FFFFFF\",\r\n    text: \"#1F2937\",\r\n    textSecondary: \"#6B7280\",\r\n    primary: \"#3B82F6\"\r\n  };\r\n\r\n  // ========== HOOK RÉVISION DÉDIÉ ==========\r\n  const {\r\n    revisionQuestions,\r\n    isLoading,\r\n    error,\r\n    stats,\r\n    hasEnoughWords,\r\n    canGenerateQuestions\r\n  } = useRevisionData(level, questionsCount);\r\n\r\n  // ========== ÉTATS DU QUIZ ==========\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [fadeAnim] = useState(new Animated.Value(1));\r\n\r\n  const currentQuestion = revisionQuestions[currentIndex];\r\n  const progress = revisionQuestions.length > 0 ? ((currentIndex + 1) / revisionQuestions.length) * 100 : 0;\r\n\r\n  // ========== ÉCRAN DE CHARGEMENT ==========\r\n  if (isLoading) {\r\n    return (\r\n      <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n        <StatusBar barStyle=\"dark-content\" backgroundColor={colors.background} />\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyEmoji}>🔄</Text>\r\n          <Text style={[styles.emptyTitle, { color: colors.text }]}>\r\n            Chargement...\r\n          </Text>\r\n          <Text style={[styles.emptyMessage, { color: colors.textSecondary }]}>\r\n            Récupération de vos mots appris\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // ========== ÉCRAN D'ERREUR ==========\r\n  if (error) {\r\n    return (\r\n      <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n        <StatusBar barStyle=\"dark-content\" backgroundColor={colors.background} />\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyEmoji}>⚠️</Text>\r\n          <Text style={[styles.emptyTitle, { color: colors.text }]}>\r\n            Erreur\r\n          </Text>\r\n          <Text style={[styles.emptyMessage, { color: colors.textSecondary }]}>\r\n            {error}\r\n          </Text>\r\n          <TouchableOpacity \r\n            style={[styles.emptyButton, { backgroundColor: colors.primary }]} \r\n            onPress={() => navigation.goBack()}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={styles.emptyButtonText}>Retour</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // ========== ÉCRAN VIDE ==========\r\n  if (!hasEnoughWords || !canGenerateQuestions) {\r\n    return (\r\n      <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n        <StatusBar barStyle=\"dark-content\" backgroundColor={colors.background} />\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyEmoji}>📚</Text>\r\n          <Text style={[styles.emptyTitle, { color: colors.text }]}>\r\n            Aucun mot disponible\r\n          </Text>\r\n          <Text style={[styles.emptyMessage, { color: colors.textSecondary }]}>\r\n            Apprenez quelques mots avant de réviser !{'\\n'}\r\n            {stats.totalLearned > 0 && `Vous avez ${stats.totalLearned} mots appris`}\r\n          </Text>\r\n          <TouchableOpacity \r\n            style={[styles.emptyButton, { backgroundColor: colors.primary }]} \r\n            onPress={() => navigation.goBack()}\r\n            activeOpacity={0.8}\r\n          >\r\n            <Text style={styles.emptyButtonText}>Retour</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // ========== ANIMATIONS ==========\r\n  const animateTransition = () => {\r\n    Animated.timing(fadeAnim, {\r\n      toValue: 0,\r\n      duration: 200,\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      if (currentIndex < revisionQuestions.length - 1) {\r\n        setCurrentIndex(currentIndex + 1);\r\n        setSelectedAnswer(null);\r\n        setShowResult(false);\r\n        \r\n        Animated.timing(fadeAnim, {\r\n          toValue: 1,\r\n          duration: 300,\r\n          useNativeDriver: true,\r\n        }).start();\r\n      } else {\r\n        setIsFinished(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  // ========== HANDLERS ==========\r\n  const handleAnswer = (choice) => {\r\n    if (showResult) return;\r\n    \r\n    setSelectedAnswer(choice);\r\n    setShowResult(true);\r\n    \r\n    if (choice === currentQuestion.correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    setTimeout(animateTransition, 1500);\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setCurrentIndex(0);\r\n    setSelectedAnswer(null);\r\n    setScore(0);\r\n    setShowResult(false);\r\n    setIsFinished(false);\r\n    fadeAnim.setValue(1);\r\n  };\r\n\r\n  const handleFinish = async () => {\r\n    if (markRevisionCompleted) {\r\n      await markRevisionCompleted(revisionQuestions, score, revisionQuestions.length);\r\n    }\r\n    navigation.goBack();\r\n  };\r\n\r\n  // ========== ÉCRAN FINAL ==========\r\n  if (isFinished) {\r\n    const percentage = Math.round((score / revisionQuestions.length) * 100);\r\n    \r\n    let resultConfig = {\r\n      emoji: \"😊\",\r\n      title: \"Bien joué !\",\r\n      message: \"Continuez comme ça !\",\r\n      color: \"#3B82F6\"\r\n    };\r\n\r\n    if (percentage >= 80) {\r\n      resultConfig = {\r\n        emoji: \"🎉\",\r\n        title: \"Excellent !\",\r\n        message: \"Vous maîtrisez parfaitement ces mots !\",\r\n        color: \"#10B981\"\r\n      };\r\n    } else if (percentage >= 60) {\r\n      resultConfig = {\r\n        emoji: \"👍\",\r\n        title: \"Bien joué !\", \r\n        message: \"Bonne progression, continuez !\",\r\n        color: \"#3B82F6\"\r\n      };\r\n    } else {\r\n      resultConfig = {\r\n        emoji: \"📖\",\r\n        title: \"À améliorer\",\r\n        message: \"Révisez encore ces mots pour progresser\",\r\n        color: \"#F59E0B\"\r\n      };\r\n    }\r\n    \r\n    return (\r\n      <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n        <StatusBar barStyle=\"dark-content\" backgroundColor={colors.background} />\r\n        \r\n        <View style={styles.resultContainer}>\r\n          <Text style={styles.resultEmoji}>{resultConfig.emoji}</Text>\r\n          \r\n          <Text style={[styles.resultTitle, { color: colors.text }]}>\r\n            {resultConfig.title}\r\n          </Text>\r\n          <Text style={[styles.resultMessage, { color: colors.textSecondary }]}>\r\n            {resultConfig.message}\r\n          </Text>\r\n          \r\n          <View style={[styles.scoreCard, { backgroundColor: colors.surface }]}>\r\n            <View style={styles.scoreRow}>\r\n              <Text style={[styles.scoreNumber, { color: resultConfig.color }]}>\r\n                {score}\r\n              </Text>\r\n              <Text style={[styles.scoreSlash, { color: colors.textSecondary }]}>\r\n                /{revisionQuestions.length}\r\n              </Text>\r\n            </View>\r\n            \r\n            <View style={[styles.progressBar, { backgroundColor: '#F3F4F6' }]}>\r\n              <View \r\n                style={[\r\n                  styles.progressFill, \r\n                  { \r\n                    backgroundColor: resultConfig.color,\r\n                    width: `${percentage}%` \r\n                  }\r\n                ]} \r\n              />\r\n            </View>\r\n            \r\n            <Text style={[styles.percentageText, { color: resultConfig.color }]}>\r\n              {percentage}% de réussite\r\n            </Text>\r\n          </View>\r\n          \r\n          {/* Stats détaillées */}\r\n          <View style={[styles.statsContainer, { backgroundColor: colors.surface }]}>\r\n            <Text style={[styles.statsTitle, { color: colors.text }]}>\r\n              📊 Statistiques\r\n            </Text>\r\n            <Text style={[styles.statsText, { color: colors.textSecondary }]}>\r\n              {stats.totalLearned} mots appris au total\r\n            </Text>\r\n            {Object.entries(stats.byLevel).map(([lvl, count]) => (\r\n              <Text key={lvl} style={[styles.statsText, { color: colors.textSecondary }]}>\r\n                Niveau {lvl}: {count} mots\r\n              </Text>\r\n            ))}\r\n          </View>\r\n          \r\n          {source && (\r\n            <Text style={[styles.sourceText, { color: colors.textSecondary }]}>\r\n              {source === 'popup_trigger' ? '🤖 Révision automatique' : '👤 Révision manuelle'}\r\n            </Text>\r\n          )}\r\n          \r\n          <View style={styles.buttonsContainer}>\r\n            <TouchableOpacity \r\n              style={[styles.restartButton, { backgroundColor: colors.surface }]} \r\n              onPress={handleRestart}\r\n              activeOpacity={0.8}\r\n            >\r\n              <View style={styles.buttonContent}>\r\n                <Text style={styles.restartIcon}>🔄</Text>\r\n                <Text style={[styles.restartText, { color: colors.text }]}>\r\n                  Rejouer\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity \r\n              style={[styles.finishButton, { backgroundColor: resultConfig.color }]} \r\n              onPress={handleFinish}\r\n              activeOpacity={0.8}\r\n            >\r\n              <View style={styles.buttonContent}>\r\n                <Text style={styles.finishIcon}>✓</Text>\r\n                <Text style={styles.finishText}>\r\n                  Terminer\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // ========== ÉCRAN QUIZ ==========\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor={colors.background} />\r\n      \r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity \r\n          onPress={() => navigation.goBack()} \r\n          style={[styles.backButton, { backgroundColor: colors.surface }]}\r\n        >\r\n          <Text style={[styles.backButtonText, { color: colors.text }]}>←</Text>\r\n        </TouchableOpacity>\r\n        \r\n        <View style={styles.headerCenter}>\r\n          <Text style={[styles.questionCounter, { color: colors.text }]}>\r\n            Question {currentIndex + 1}\r\n          </Text>\r\n          <Text style={[styles.totalQuestions, { color: colors.textSecondary }]}>\r\n            sur {revisionQuestions.length}\r\n          </Text>\r\n        </View>\r\n        \r\n        <View style={[styles.scoreChip, { backgroundColor: colors.primary }]}>\r\n          <Text style={styles.scoreChipText}>{score}</Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Progress bar */}\r\n      <View style={styles.progressSection}>\r\n        <View style={[styles.progressTrack, { backgroundColor: '#F3F4F6' }]}>\r\n          <View \r\n            style={[\r\n              styles.progressBarQuiz, \r\n              { \r\n                backgroundColor: colors.primary,\r\n                width: `${progress}%` \r\n              }\r\n            ]} \r\n          />\r\n        </View>\r\n        <Text style={[styles.progressText, { color: colors.textSecondary }]}>\r\n          {Math.round(progress)}%\r\n        </Text>\r\n      </View>\r\n\r\n      {/* Question card */}\r\n      <Animated.View style={[styles.questionSection, { opacity: fadeAnim }]}>\r\n        <View style={[styles.questionCard, { backgroundColor: colors.surface }]}>\r\n          <Text style={styles.questionLabel}>Traduisez :</Text>\r\n          <Text style={[styles.wordToTranslate, { color: colors.text }]}>\r\n            {currentQuestion.word}\r\n          </Text>\r\n          {currentQuestion.fromLevel && (\r\n            <Text style={[styles.levelInfo, { color: colors.textSecondary }]}>\r\n              Niveau {currentQuestion.fromLevel} ({currentQuestion.fromMode})\r\n            </Text>\r\n          )}\r\n        </View>\r\n      </Animated.View>\r\n\r\n      {/* Choix */}\r\n      <View style={styles.choicesSection}>\r\n        {currentQuestion.choices.map((choice, index) => {\r\n          const isSelected = selectedAnswer === choice;\r\n          const isCorrect = choice === currentQuestion.correctAnswer;\r\n          const isWrong = showResult && isSelected && !isCorrect;\r\n          const shouldHighlight = showResult && isCorrect;\r\n          \r\n          let buttonStyle = [styles.choiceButton, { backgroundColor: colors.surface }];\r\n          let textStyle = [styles.choiceText, { color: colors.text }];\r\n          let icon = null;\r\n          \r\n          if (shouldHighlight) {\r\n            buttonStyle.push(styles.choiceCorrect);\r\n            textStyle.push(styles.choiceTextCorrect);\r\n            icon = <Text style={styles.choiceIcon}>✓</Text>;\r\n          } else if (isWrong) {\r\n            buttonStyle.push(styles.choiceWrong);\r\n            textStyle.push(styles.choiceTextWrong);\r\n            icon = <Text style={styles.choiceIcon}>✗</Text>;\r\n          } else if (isSelected) {\r\n            buttonStyle.push({ borderColor: colors.primary, borderWidth: 2 });\r\n          }\r\n          \r\n          return (\r\n            <TouchableOpacity\r\n              key={index}\r\n              style={buttonStyle}\r\n              onPress={() => handleAnswer(choice)}\r\n              disabled={showResult}\r\n              activeOpacity={0.7}\r\n            >\r\n              <Text style={textStyle}>{choice}</Text>\r\n              {icon}\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default VocabularyRevision;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\VocabularyRevision\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[42,53],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseHeader' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseHeader"},"fix":{"range":[69,89],"text":""},"desc":"Remove unused variable 'ExerciseHeader'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// 2. ChatbotHeader - MIS À JOUR  \nimport React from \"react\";\nimport ExerciseHeader from \"../../../../components/exercise-common/ExerciseHeader\";\n\nconst ChatbotHeader = ({ level, onBackPress }) => {\n  return (\n    <ExerciseHeader\n      title=\"Conversations\"\n      level={level}\n      exerciseType=\"conversations\" // ✅ NOUVEAU\n      onClose={onBackPress}\n      backIcon=\"arrow-back\"\n    />\n  );\n};\n\nexport default ChatbotHeader;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationHelpPanel\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[36,41],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":2,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[40,46],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":2,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[46,64],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport styles from './style';\n\n/**\n * Composant qui affiche un panneau d'aide pour l'utilisateur\n * \n * @param {string} helpText - Texte d'aide à afficher\n * @param {boolean} isVisible - Indique si le panneau est visible\n * @param {Function} onToggle - Fonction pour afficher/masquer le panneau\n * @param {string} levelColor - Couleur associée au niveau courant\n */\nconst ConversationHelpPanel = ({ helpText, isVisible, onToggle, levelColor }) => {\n  // Si le panneau n'est pas visible, afficher seulement le bouton\n  if (!isVisible) {\n    return (\n      <TouchableOpacity \n        style={styles.helpButton} \n        onPress={onToggle}\n      >\n        <Text style={[styles.helpButtonText, { color: levelColor }]}>\n          Show Help\n        </Text>\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <View style={[styles.container, { borderColor: `${levelColor}30` }]}>\n      <View style={styles.headerContainer}>\n        <Text style={styles.title}>Hint:</Text>\n        <TouchableOpacity\n          style={styles.closeButton}\n          onPress={onToggle}\n        >\n          <Text style={[styles.closeButtonText, { color: levelColor }]}>\n            Hide\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <Text style={styles.helpText}>\n        {helpText || \"No hint available for this step.\"}\n      </Text>\n    </View>\n  );\n};\n\nexport default ConversationHelpPanel;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationHelpPanel\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationInput\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[36,41],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TextInput' is defined but never used.","line":2,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"TextInput"},"fix":{"range":[40,51],"text":""},"desc":"Remove unused variable 'TextInput'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":2,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":43,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[51,69],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":2,"column":45,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":49,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[69,75],"text":""},"desc":"Remove unused variable 'Text'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { View, TextInput, TouchableOpacity, Text } from 'react-native';\nimport styles from './style';\n\n/**\n * Composant pour la saisie de messages dans le Conversation\n * \n * @param {string} message - Texte actuellement dans l'input\n * @param {Function} onChangeMessage - Fonction appelée quand le texte change\n * @param {Function} onSendMessage - Fonction appelée quand le message est envoyé\n * @param {string} levelColor - Couleur associée au niveau courant\n */\nconst ConversationInput = ({ message, onChangeMessage, onSendMessage, levelColor }) => {\n  // Vérifier si le bouton d'envoi doit être activé\n  const isButtonEnabled = message.trim() !== '';\n\n  // Gérer l'envoi du message\n  const handleSend = () => {\n    if (isButtonEnabled) {\n      onSendMessage();\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.textInput}\n        value={message}\n        onChangeText={onChangeMessage}\n        placeholder=\"Type your message...\"\n        placeholderTextColor=\"#9ca3af\"\n        multiline\n      />\n      <TouchableOpacity\n        style={[\n          styles.sendButton,\n          isButtonEnabled\n            ? { backgroundColor: levelColor }\n            : styles.disabledButton\n        ]}\n        onPress={handleSend}\n        disabled={!isButtonEnabled}\n      >\n        <Text style={styles.sendButtonText}>↑</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default ConversationInput;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationInput\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationMessageList\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,13],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[50,92],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationMessage' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationMessage"},"fix":{"range":[100,125],"text":""},"desc":"Remove unused variable 'ConversationMessage'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationTypingIndicator' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":35,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationTypingIndicator"},"fix":{"range":[158,191],"text":""},"desc":"Remove unused variable 'ConversationTypingIndicator'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useRef, useEffect } from 'react';\nimport { ScrollView } from 'react-native';\nimport ConversationMessage from '../ConversationMessage';\nimport ConversationTypingIndicator from '../ConversationTypingIndicator';\nimport styles from './style';\n\n/**\n * Composant qui affiche la liste des messages dans la conversation\n * \n * @param {Array} messages - Liste des messages à afficher\n * @param {boolean} isTyping - Indique si le bot est en train de taper\n * @param {string} levelColor - Couleur associée au niveau courant\n */\nconst ConversationMessageList = ({ messages, isTyping, levelColor }) => {\n  const scrollViewRef = useRef(null);\n\n  // Faire défiler automatiquement vers le bas quand de nouveaux messages arrivent\n  useEffect(() => {\n    if (scrollViewRef.current) {\n      setTimeout(() => {\n        scrollViewRef.current.scrollToEnd({ animated: true });\n      }, 100);\n    }\n  }, [messages, isTyping]);\n\n  return (\n    <ScrollView\n      ref={scrollViewRef}\n      style={styles.container}\n      contentContainerStyle={styles.contentContainer}\n      showsVerticalScrollIndicator={false}\n    >\n      {/* Afficher tous les messages */}\n      {messages.map((message) => (\n        <ConversationMessage\n          key={message.id}\n          message={message}\n          levelColor={levelColor}\n        />\n      ))}\n\n      {/* Afficher l'indicateur de frappe si nécessaire */}\n      {isTyping && <ConversationTypingIndicator levelColor={levelColor} />}\n    </ScrollView>\n  );\n};\n\nexport default ConversationMessageList;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationMessageList\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationMessage\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[70,81],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[99,104],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[103,109],"text":""},"desc":"Remove unused variable 'Text'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ConversationMessage/index.js - VERSION CLEAN SANS TIMESTAMP\nimport React from 'react';\nimport { View, Text } from 'react-native';\nimport styles from './style';\n\n/**\n * Composant pour afficher un message dans le Conversation\n * VERSION CLEAN : Timestamp inutile supprimé ✅\n * \n * @param {Object} message - Objet contenant les informations du message\n * @param {string} levelColor - Couleur associée au niveau courant\n */\nconst ConversationMessage = ({ message, levelColor }) => {\n  const isBotMessage = message.sender === 'bot';\n\n  return (\n    <View\n      style={[\n        styles.messageBubble,\n        isBotMessage ? styles.botBubble : styles.userBubble,\n        isBotMessage\n          ? { backgroundColor: `${levelColor}15` }\n          : { backgroundColor: levelColor },\n      ]}\n    >\n      <Text\n        style={[\n          styles.messageText,\n          isBotMessage ? { color: '#1f2937' } : { color: 'white' },\n        ]}\n      >\n        {message.text}\n      </Text>\n\n      {/* ❌ SUPPRIMÉ : Timestamp inutile */}\n      {/* <Text style={styles.messageTime}>\n        {message.timestamp}\n      </Text> */}\n    </View>\n  );\n};\n\nexport default ConversationMessage;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationMessage\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationProgress\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[73,79],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressCard' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressCard"},"fix":{"range":[113,131],"text":""},"desc":"Remove unused variable 'ProgressCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'progress' is assigned a value but never used.","line":18,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":11,"suggestions":[{"messageId":"removeVar","data":{"varName":"progress"},"fix":{"range":[565,578],"text":""},"desc":"Remove unused variable 'progress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'index' is defined but never used.","line":67,"column":58,"nodeType":"Identifier","messageId":"unusedVar","endLine":67,"endColumn":63,"suggestions":[{"messageId":"removeVar","data":{"varName":"index"},"fix":{"range":[2194,2201],"text":""},"desc":"Remove unused variable 'index'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'debugData' is assigned a value but never used.","line":76,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":76,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"debugData"},"fix":{"range":[2458,3190],"text":""},"desc":"Remove unused variable 'debugData'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ConversationProgress/index.js - VERSION CORRIGÉE AVEC useMemo\n\nimport React, { useMemo } from \"react\";\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\nimport {\n  calculateTotalScenarios,\n  calculateCompletedScenariosCount,\n  calculateTotalProgress,\n  calculateScenarioProgress,\n} from \"../../../../utils/conversation/conversationStats\";\n\n/**\n * 📊 ConversationProgress - Version corrigée avec mémorisation\n * ✅ Évite les boucles infinies avec useMemo\n * ✅ Détecte automatiquement la structure des données\n */\nconst ConversationProgress = ({\n  progress = 0,\n  currentStep = 1,\n  totalSteps = 0,\n  levelColor = \"#5E60CE\",\n  conversationData = [],\n  completedScenarios = {},\n  conversationHistory = {},\n  expanded = false,\n  onToggleExpand = () => {},\n  onScenarioPress = () => {},\n}) => {\n  \n  // ✅ MÉMORISER la détection de structure\n  const dataArray = useMemo(() => {\n    // Si c'est un tableau directement\n    if (Array.isArray(conversationData)) {\n      return conversationData;\n    }\n    \n    // Si c'est un objet avec des propriétés\n    if (conversationData && typeof conversationData === 'object') {\n      // Cherche scenarios, exercises, conversations, etc.\n      return conversationData.scenarios || \n             conversationData.exercises || \n             conversationData.conversations || \n             conversationData.items || \n             [];\n    }\n    \n    return [];\n  }, [conversationData]);\n  \n  // ✅ MÉMORISER tous les calculs\n  const statsData = useMemo(() => {\n    const totalScenariosCount = calculateTotalScenarios(dataArray);\n    const completedScenariosCount = calculateCompletedScenariosCount(completedScenarios);\n    const totalProgress = calculateTotalProgress(dataArray, completedScenarios);\n    const scenarioProgressData = calculateScenarioProgress(dataArray, completedScenarios, conversationHistory);\n\n    return {\n      totalScenariosCount,\n      completedScenariosCount,\n      totalProgress,\n      scenarioProgressData\n    };\n  }, [dataArray, completedScenarios, conversationHistory]);\n\n  // ✅ MÉMORISER la transformation des données\n  const formattedScenarioData = useMemo(() => {\n    return statsData.scenarioProgressData.map((scenario, index) => ({\n      title: scenario.title,\n      completed: scenario.completedSteps,\n      total: scenario.totalSteps,\n      progress: scenario.progress,\n    }));\n  }, [statsData.scenarioProgressData]);\n\n  // ✅ MÉMORISER les données de debug (seulement en dev)\n  const debugData = useMemo(() => {\n    if (process.env.NODE_ENV !== 'development') return null;\n    \n    return {\n      isArray: Array.isArray(conversationData),\n      hasScenarios: !!(conversationData?.scenarios),\n      hasExercises: !!(conversationData?.exercises),\n      hasConversations: !!(conversationData?.conversations),\n      dataArrayLength: dataArray.length,\n      totalScenariosCount: statsData.totalScenariosCount,\n      completedScenariosCount: statsData.completedScenariosCount,\n      totalProgress: statsData.totalProgress,\n      conversationDataKeys: conversationData && typeof conversationData === 'object' ? Object.keys(conversationData) : \"not object\"\n    };\n  }, [conversationData, dataArray.length, statsData]);\n\n  // ✅ CORRECTION FINALE : Pas de log dans le render !\n\n  return (\n    <ProgressCard\n      title=\"Progression\"\n      progress={statsData.totalProgress}\n      completed={statsData.completedScenariosCount}\n      total={statsData.totalScenariosCount}\n      unit=\"scénarios\"\n      levelColor={levelColor}\n      expandable={formattedScenarioData.length > 0}\n      expanded={expanded}\n      onToggleExpand={onToggleExpand}\n      categoryData={formattedScenarioData}\n      onCategoryPress={onScenarioPress}\n      secondaryInfo={totalSteps > 0 ? `Étape ${currentStep}/${totalSteps}` : \"\"}\n    />\n  );\n};\n\nexport default ConversationProgress;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationScenarioDescription\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[36,41],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":2,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[40,46],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationHelpPanel' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationHelpPanel"},"fix":{"range":[77,104],"text":""},"desc":"Remove unused variable 'ConversationHelpPanel'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { View, Text } from 'react-native';\nimport ConversationHelpPanel from '../ConversationHelpPanel';\nimport styles from './style';\n\n/**\n * Composant qui affiche la description du scénario actuel et le panel d'aide\n * \n * @param {string} description - Description du scénario\n * @param {string} helpText - Texte d'aide pour l'étape actuelle\n * @param {boolean} showHelp - Indique si l'aide est visible\n * @param {Function} toggleHelp - Fonction pour afficher/masquer l'aide\n * @param {string} levelColor - Couleur associée au niveau courant\n */\nconst ConversationScenarioDescription = ({ \n  description, \n  helpText, \n  showHelp, \n  toggleHelp, \n  levelColor \n}) => {\n  return (\n    <View>\n      <View style={styles.container}>\n        <Text style={styles.descriptionText}>\n          {description || \"Practice your writing skills in this conversation.\"}\n        </Text>\n      </View>\n\n      <ConversationHelpPanel\n        helpText={helpText}\n        isVisible={showHelp}\n        onToggle={toggleHelp}\n        levelColor={levelColor}\n      />\n    </View>\n  );\n};\n\nexport default ConversationScenarioDescription;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationScenarioDescription\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationSelector\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[87,98],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[107,143],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'CategorySelector' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"CategorySelector"},"fix":{"range":[151,173],"text":""},"desc":"Remove unused variable 'CategorySelector'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/exercises/Conversation/ConversationConversationSelector/index.js\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport CategorySelector from \"../../../../components/exercise-common/CategorySelector\";\nimport styles from \"./style\";\n\nconst ConversationSelector = ({\n  scenarios,\n  selectedIndex,\n  onSelectScenario,\n  levelColor = \"#5E60CE\",\n}) => {\n  // Transformer les scénarios pour correspondre au format du CategorySelector\n  const formattedScenarios = scenarios.map((scenario, index) => ({\n    id: index,\n    name: scenario.title,\n  }));\n\n  return (\n    <View style={styles.conversationSelector}>\n      <CategorySelector\n        categories={formattedScenarios}\n        selectedCategory={selectedIndex === undefined ? 0 : selectedIndex}\n        onSelectCategory={onSelectScenario}\n        primaryColor={levelColor}\n      />\n    </View>\n  );\n};\n\nexport default ConversationSelector;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationSelector\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationSuggestions\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[36,47],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":2,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[46,64],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":2,"column":40,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":44,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[64,70],"text":""},"desc":"Remove unused variable 'Text'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { ScrollView, TouchableOpacity, Text } from 'react-native';\nimport styles from './style';\n\n/**\n * Composant qui affiche les suggestions de messages que l'utilisateur peut envoyer\n * \n * @param {Array} suggestions - Liste des suggestions à afficher\n * @param {Function} onPressSuggestion - Fonction à appeler quand une suggestion est choisie\n * @param {string} levelColor - Couleur associée au niveau courant\n */\nconst ConversationSuggestions = ({ suggestions, onPressSuggestion, levelColor }) => {\n  // S'il n'y a pas de suggestions, ne rien afficher\n  if (!suggestions || suggestions.length === 0) {\n    return null;\n  }\n\n  return (\n    <ScrollView\n      horizontal\n      showsHorizontalScrollIndicator={false}\n      style={styles.container}\n      contentContainerStyle={styles.contentContainer}\n    >\n      {suggestions.map((suggestion, index) => (\n        <TouchableOpacity\n          key={index}\n          style={[styles.suggestionBubble, { borderColor: levelColor }]}\n          onPress={() => onPressSuggestion(suggestion)}\n        >\n          <Text style={[styles.suggestionText, { color: levelColor }]}>\n            {suggestion}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </ScrollView>\n  );\n};\n\nexport default ConversationSuggestions;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationSuggestions\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationTypingIndicator\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,13],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[59,64],"text":""},"desc":"Remove unused variable 'View'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useRef, useEffect } from 'react';\nimport { View, Animated } from 'react-native';\nimport styles from './style';\n\n/**\n * Composant qui affiche une animation indiquant que le bot est en train de taper\n * \n * @param {string} levelColor - Couleur associée au niveau courant\n */\nconst ConversationTypingIndicator = ({ levelColor }) => {\n  // Animation pour faire pulser les points\n  const typingAnimation = useRef(new Animated.Value(0)).current;\n\n  // Lancer l'animation en boucle\n  useEffect(() => {\n    const startAnimation = () => {\n      Animated.loop(\n        Animated.sequence([\n          Animated.timing(typingAnimation, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(typingAnimation, {\n            toValue: 0,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n        ])\n      ).start();\n    };\n\n    startAnimation();\n\n    return () => {\n      // Arrêter l'animation quand le composant est démonté\n      typingAnimation.stopAnimation();\n    };\n  }, [typingAnimation]);\n\n  return (\n    <View\n      style={[\n        styles.messageBubble,\n        styles.botBubble,\n        { backgroundColor: `${levelColor}15` },\n      ]}\n    >\n      <View style={styles.typingContainer}>\n        <Animated.View\n          style={[styles.typingDot, { opacity: typingAnimation }]}\n        />\n        <Animated.View\n          style={[\n            styles.typingDot,\n            { opacity: typingAnimation, marginHorizontal: 4 },\n          ]}\n        />\n        <Animated.View\n          style={[styles.typingDot, { opacity: typingAnimation }]}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default ConversationTypingIndicator;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationTypingIndicator\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\hooks\\useConversation.js","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'scenarios' logical expression could make the dependencies of useEffect Hook (at line 95) change on every render. To fix this, wrap the initialization of 'scenarios' in its own useMemo() Hook.","line":30,"column":9,"nodeType":"VariableDeclarator","endLine":30,"endColumn":54},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'scenarios' logical expression could make the dependencies of useCallback Hook (at line 266) change on every render. To fix this, wrap the initialization of 'scenarios' in its own useMemo() Hook.","line":30,"column":9,"nodeType":"VariableDeclarator","endLine":30,"endColumn":54},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentScenario' logical expression could make the dependencies of useCallback Hook (at line 139) change on every render. To fix this, wrap the initialization of 'currentScenario' in its own useMemo() Hook.","line":31,"column":9,"nodeType":"VariableDeclarator","endLine":31,"endColumn":64},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentScenario' logical expression could make the dependencies of useCallback Hook (at line 210) change on every render. To fix this, wrap the initialization of 'currentScenario' in its own useMemo() Hook.","line":31,"column":9,"nodeType":"VariableDeclarator","endLine":31,"endColumn":64},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentScenario' logical expression could make the dependencies of useCallback Hook (at line 266) change on every render. To fix this, wrap the initialization of 'currentScenario' in its own useMemo() Hook.","line":31,"column":9,"nodeType":"VariableDeclarator","endLine":31,"endColumn":64},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'STORAGE_KEY'. Either include it or remove the dependency array.","line":59,"column":6,"nodeType":"ArrayExpression","endLine":59,"endColumn":13,"suggestions":[{"desc":"Update the dependencies array to be: [STORAGE_KEY, level]","fix":{"range":[2459,2466],"text":"[STORAGE_KEY, level]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'currentScenario.steps'. Either include it or remove the dependency array.","line":146,"column":6,"nodeType":"ArrayExpression","endLine":146,"endColumn":55,"suggestions":[{"desc":"Update the dependencies array to be: [loaded, currentScenarioIndex, startConversation, currentScenario.steps]","fix":{"range":[5509,5558],"text":"[loaded, currentScenarioIndex, startConversation, currentScenario.steps]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useConversation.js - HOOK UNIFIÉ SIMPLE\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n/**\n * 🎯 Hook unifié pour Conversation Exercise\n * Remplace useConversationProgress + useConversationExerciseState + logique du composant\n * Simple, efficace, maintenable - pattern identique aux 4 autres exercices\n */\nconst useConversation = (conversationData = null, level = \"A1\") => {\n  \n  // =================== CORE STATE ===================\n  const [currentScenarioIndex, setCurrentScenarioIndex] = useState(0);\n  const [conversation, setConversation] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [showHelp, setShowHelp] = useState(false);\n  const [completedScenarios, setCompletedScenarios] = useState({});\n  const [conversationHistory, setConversationHistory] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [showDetailedProgress, setShowDetailedProgress] = useState(false);\n\n  // =================== REFS ===================\n  const isInitialized = useRef(false);\n  const conversationChanged = useRef(false);\n\n  // =================== COMPUTED VALUES ===================\n  const scenarios = conversationData?.exercises || [];\n  const currentScenario = scenarios[currentScenarioIndex] || {};\n  const totalScenarios = scenarios.length;\n  const totalSteps = currentScenario.steps?.length || 0;\n  \n  // =================== PERSISTENCE ===================\n  const STORAGE_KEY = `conversation_${level}`;\n\n  // Load data from storage\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const saved = await AsyncStorage.getItem(STORAGE_KEY);\n        if (saved) {\n          const { completedScenarios: savedCompleted, conversationHistory: savedHistory, lastPosition } = JSON.parse(saved);\n          setCompletedScenarios(savedCompleted || {});\n          setConversationHistory(savedHistory || {});\n          if (lastPosition) {\n            setCurrentScenarioIndex(lastPosition.scenarioIndex || 0);\n            setCurrentStep(lastPosition.stepIndex || 0);\n          }\n        }\n      } catch (error) {\n        console.log('Error loading conversation data:', error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    loadData();\n  }, [level]);\n\n  // Save data to storage\n  const saveData = useCallback(async () => {\n    try {\n      const dataToSave = {\n        completedScenarios,\n        conversationHistory,\n        lastPosition: {\n          scenarioIndex: currentScenarioIndex,\n          stepIndex: currentStep\n        }\n      };\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n    } catch (error) {\n      console.log('Error saving conversation data:', error);\n    }\n  }, [completedScenarios, conversationHistory, currentScenarioIndex, currentStep, STORAGE_KEY]);\n\n  // Auto-save when data changes\n  useEffect(() => {\n    if (loaded) saveData();\n  }, [saveData, loaded]);\n\n  // Initialize progress for new scenarios\n  useEffect(() => {\n    if (loaded && conversationData && !isInitialized.current) {\n      const newCompletedScenarios = { ...completedScenarios };\n      scenarios.forEach((_, index) => {\n        if (!newCompletedScenarios[index]) {\n          newCompletedScenarios[index] = null;\n        }\n      });\n      setCompletedScenarios(newCompletedScenarios);\n      isInitialized.current = true;\n    }\n  }, [loaded, conversationData, scenarios, completedScenarios]);\n\n  // =================== CONVERSATION MANAGEMENT ===================\n  const startConversation = useCallback(() => {\n    if (!currentScenario.steps || currentScenario.steps.length === 0) return;\n\n    // Check if there's saved conversation for this scenario\n    const savedConversation = conversationHistory[currentScenarioIndex];\n    \n    if (savedConversation?.conversation && savedConversation.conversation.length > 0) {\n      // Restore saved conversation\n      setConversation(savedConversation.conversation);\n      \n      // Calculate current step based on bot messages\n      const botMessages = savedConversation.conversation.filter(msg => msg.sender === \"bot\");\n      const calculatedStep = Math.min(botMessages.length - 1, currentScenario.steps.length - 1);\n      setCurrentStep(Math.max(0, calculatedStep));\n      \n      // Set suggestions for current step\n      const stepIndex = Math.min(calculatedStep, currentScenario.steps.length - 1);\n      setSuggestions(currentScenario.steps[stepIndex]?.suggestions || []);\n    } else {\n      // Start new conversation\n      setConversation([]);\n      setCurrentStep(0);\n      \n      // Add initial bot message\n      setTimeout(() => {\n        setIsTyping(true);\n        \n        setTimeout(() => {\n          const initialMessage = {\n            id: `bot-${Date.now()}`,\n            text: currentScenario.steps[0].botMessage,\n            sender: \"bot\",\n          };\n          \n          setConversation([initialMessage]);\n          setSuggestions(currentScenario.steps[0].suggestions || []);\n          setIsTyping(false);\n          conversationChanged.current = true;\n        }, 1000);\n      }, 500);\n    }\n  }, [currentScenario, conversationHistory, currentScenarioIndex]);\n\n  // Initialize conversation when scenario changes\n  useEffect(() => {\n    if (loaded && currentScenario.steps) {\n      startConversation();\n    }\n  }, [loaded, currentScenarioIndex, startConversation]);\n\n  // =================== MESSAGE HANDLING ===================\n  const sendMessage = useCallback(() => {\n    if (message.trim() === \"\" || !currentScenario.steps) return;\n\n    // User message\n    const userMessage = {\n      id: `user-${Date.now()}`,\n      text: message,\n      sender: \"user\",\n    };\n\n    const updatedConversation = [...conversation, userMessage];\n    setConversation(updatedConversation);\n    setMessage(\"\");\n    setSuggestions([]);\n    conversationChanged.current = true;\n\n    // Bot response\n    setIsTyping(true);\n\n    setTimeout(() => {\n      const nextStepIndex = currentStep + 1;\n\n      if (nextStepIndex < currentScenario.steps.length) {\n        const nextStep = currentScenario.steps[nextStepIndex];\n\n        const botMessage = {\n          id: `bot-${Date.now()}`,\n          text: nextStep.botMessage,\n          sender: \"bot\",\n        };\n\n        const conversationWithBot = [...updatedConversation, botMessage];\n        setConversation(conversationWithBot);\n        setCurrentStep(nextStepIndex);\n        setSuggestions(nextStep.suggestions || []);\n\n        // Save to history\n        setConversationHistory(prev => ({\n          ...prev,\n          [currentScenarioIndex]: {\n            conversation: conversationWithBot,\n            updatedAt: new Date().toISOString(),\n            timestamp: Date.now(),\n          }\n        }));\n\n        // Mark as completed if last step\n        if (nextStepIndex === currentScenario.steps.length - 1) {\n          setCompletedScenarios(prev => ({\n            ...prev,\n            [currentScenarioIndex]: {\n              completedAt: new Date().toISOString(),\n              timestamp: Date.now(),\n              messageCount: conversationWithBot.length,\n            }\n          }));\n        }\n      }\n\n      setIsTyping(false);\n    }, 1000);\n  }, [message, currentScenario, currentStep, conversation, currentScenarioIndex]);\n\n  // =================== NAVIGATION ACTIONS ===================\n  const changeScenario = useCallback((newIndex) => {\n    if (newIndex !== currentScenarioIndex && newIndex >= 0 && newIndex < scenarios.length) {\n      setCurrentScenarioIndex(newIndex);\n      setConversation([]);\n      setCurrentStep(0);\n      setSuggestions([]);\n      setMessage(\"\");\n      setShowHelp(false);\n      conversationChanged.current = false;\n    }\n  }, [currentScenarioIndex, scenarios.length]);\n\n  const useSuggestion = useCallback((suggestion) => {\n    setMessage(suggestion);\n  }, []);\n\n  const toggleHelp = useCallback(() => {\n    setShowHelp(prev => !prev);\n  }, []);\n\n  const toggleDetailedProgress = useCallback(() => {\n    setShowDetailedProgress(prev => !prev);\n  }, []);\n\n  // =================== COMPUTED STATS ===================\n  const getStats = useCallback(() => {\n    const completedScenariosCount = Object.values(completedScenarios).filter(Boolean).length;\n    const totalProgress = totalScenarios > 0 ? Math.round((completedScenariosCount / totalScenarios) * 100) : 0;\n    const completionProgress = totalSteps > 0 ? ((currentStep + 1) / totalSteps) * 100 : 0;\n\n    return {\n      totalScenarios,\n      completedScenariosCount,\n      totalProgress,\n      completionProgress,\n      currentStep: currentStep + 1,\n      totalSteps\n    };\n  }, [completedScenarios, totalScenarios, totalSteps, currentStep]);\n\n  // =================== COMPUTED DISPLAY ===================\n  const getDisplayData = useCallback(() => {\n    const scenarioCounter = `${currentScenarioIndex + 1} / ${totalScenarios}`;\n    const stepCounter = `${currentStep + 1} / ${totalSteps}`;\n    const scenarioTitles = scenarios.map(scenario => scenario.title || \"Scenario\");\n    \n    return {\n      scenarioCounter,\n      stepCounter,\n      scenarios: scenarioTitles,\n      currentScenario,\n      currentHelp: currentScenario.steps?.[currentStep]?.help || \"\"\n    };\n  }, [currentScenarioIndex, totalScenarios, currentStep, totalSteps, scenarios, currentScenario]);\n\n  // =================== VALIDATION ===================\n  const hasValidData = conversationData?.exercises && Array.isArray(conversationData.exercises) && conversationData.exercises.length > 0;\n  const isLastStep = currentStep === totalSteps - 1;\n  const isConversationStarted = conversation.length > 0;\n\n  return {\n    // State\n    currentScenarioIndex,\n    conversation,\n    currentStep,\n    message,\n    setMessage,\n    isTyping,\n    suggestions,\n    showHelp,\n    completedScenarios,\n    conversationHistory,\n    loaded,\n    showDetailedProgress,\n    \n    // Data\n    currentScenario,\n    totalScenarios,\n    totalSteps,\n    hasValidData,\n    \n    // Actions\n    changeScenario,\n    sendMessage,\n    useSuggestion,\n    toggleHelp,\n    toggleDetailedProgress,\n    startConversation,\n    \n    // Computed\n    isLastStep,\n    isConversationStarted,\n    stats: getStats(),\n    display: getDisplayData(),\n  };\n};\n\nexport default useConversation;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[59,65],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'KeyboardAvoidingView' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":30,"suggestions":[{"messageId":"removeVar","data":{"varName":"KeyboardAvoidingView"},"fix":{"range":[125,146],"text":""},"desc":"Remove unused variable 'KeyboardAvoidingView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[293,303],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationHeader' is defined but never used.","line":11,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationHeader"},"fix":{"range":[396,420],"text":""},"desc":"Remove unused variable 'ConversationHeader'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationSelector' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":28,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationSelector"},"fix":{"range":[451,477],"text":""},"desc":"Remove unused variable 'ConversationSelector'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationProgress' is defined but never used.","line":13,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":28,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationProgress"},"fix":{"range":[510,536],"text":""},"desc":"Remove unused variable 'ConversationProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationScenarioDescription' is defined but never used.","line":14,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":39,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationScenarioDescription"},"fix":{"range":[569,606],"text":""},"desc":"Remove unused variable 'ConversationScenarioDescription'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationMessageList' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":31,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationMessageList"},"fix":{"range":[650,679],"text":""},"desc":"Remove unused variable 'ConversationMessageList'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationSuggestions' is defined but never used.","line":16,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":31,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationSuggestions"},"fix":{"range":[715,744],"text":""},"desc":"Remove unused variable 'ConversationSuggestions'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ConversationInput' is defined but never used.","line":17,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"ConversationInput"},"fix":{"range":[780,803],"text":""},"desc":"Remove unused variable 'ConversationInput'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'navigation' is assigned a value but never used.","line":29,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":29,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"navigation"},"fix":{"range":[1198,1233],"text":""},"desc":"Remove unused variable 'navigation'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'initialScenarioIndex' is assigned a value but never used.","line":30,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":45,"suggestions":[{"messageId":"removeVar","data":{"varName":"initialScenarioIndex"},"fix":{"range":[1256,1282],"text":""},"desc":"Remove unused variable 'initialScenarioIndex'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'initialStepIndex' is assigned a value but never used.","line":30,"column":51,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":67,"suggestions":[{"messageId":"removeVar","data":{"varName":"initialStepIndex"},"fix":{"range":[1282,1304],"text":""},"desc":"Remove unused variable 'initialStepIndex'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'currentStep' is assigned a value but never used.","line":43,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":43,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"currentStep"},"fix":{"range":[1618,1635],"text":""},"desc":"Remove unused variable 'currentStep'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'totalSteps' is assigned a value but never used.","line":55,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":55,"endColumn":15,"suggestions":[{"messageId":"removeVar","data":{"varName":"totalSteps"},"fix":{"range":[1837,1853],"text":""},"desc":"Remove unused variable 'totalSteps'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'isLastStep' is assigned a value but never used.","line":62,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":62,"endColumn":15,"suggestions":[{"messageId":"removeVar","data":{"varName":"isLastStep"},"fix":{"range":[1971,1987],"text":""},"desc":"Remove unused variable 'isLastStep'."}]},{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useSuggestion\" is called in function \"handleUseSuggestion\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","line":106,"column":47,"nodeType":"Identifier","endLine":106,"endColumn":60}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ConversationExercise/index.js - VERSION CORRIGÉE\nimport React, { useMemo, useEffect, useCallback } from \"react\";\nimport { KeyboardAvoidingView, Platform } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\n\n// Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\n\n// Components\nimport ConversationHeader from \"./ConversationHeader\";\nimport ConversationSelector from \"./ConversationSelector\";\nimport ConversationProgress from \"./ConversationProgress\";\nimport ConversationScenarioDescription from \"./ConversationScenarioDescription\";\nimport ConversationMessageList from \"./ConversationMessageList\";\nimport ConversationSuggestions from \"./ConversationSuggestions\";\nimport ConversationInput from \"./ConversationInput\";\n\n// Hook & Utils\nimport useConversation from \"./hooks/useConversation\";\nimport useLastActivity from \"../../../hooks/useLastActivity\";\nimport { getConversationData, getLevelColor } from \"../../../utils/conversation/conversationDataHelper\";\nimport styles from \"./style\";\n\n/**\n * 🎯 ConversationExercise - VERSION CORRIGÉE\n */\nconst ConversationExercise = ({ route }) => {\n  const navigation = useNavigation();\n  const { level = \"A1\", initialScenarioIndex = 0, initialStepIndex = 0 } = route?.params || {};\n\n  // Hook pour sauvegarder l'activité\n  const { saveActivity } = useLastActivity();\n\n  // Data\n  const levelColor = getLevelColor(level);\n  const conversationData = useMemo(() => getConversationData(level), [level]);\n\n  // Hook unifié\n  const {\n    currentScenarioIndex,\n    conversation,\n    currentStep,\n    message,\n    setMessage,\n    isTyping,\n    suggestions,\n    showHelp,\n    completedScenarios,\n    conversationHistory,\n    loaded,\n    showDetailedProgress,\n    currentScenario,\n    totalScenarios,\n    totalSteps,\n    hasValidData,\n    changeScenario,\n    sendMessage,\n    useSuggestion,\n    toggleHelp,\n    toggleDetailedProgress,\n    isLastStep,\n    isConversationStarted,\n    stats,\n    display,\n  } = useConversation(conversationData, level);\n\n  // ✅ CORRECTION : Mémoriser les métadonnées\n  const activityMetadata = useMemo(() => ({\n    scenario: currentScenarioIndex,\n    step: stats.currentStep || 0,\n    totalSteps: stats.totalSteps || 1,\n    scenarioName: currentScenario?.title || `Scénario ${currentScenarioIndex + 1}`,\n    totalScenarios: totalScenarios\n  }), [currentScenarioIndex, stats.currentStep, stats.totalSteps, currentScenario?.title, totalScenarios]);\n\n  // ✅ CORRECTION : Callback mémorisé pour saveActivity\n  const handleSaveActivity = useCallback(() => {\n    if (loaded && hasValidData && currentScenario && isConversationStarted) {\n      saveActivity({\n        title: \"Conversations\",\n        level: level,\n        type: \"conversations\",\n        metadata: activityMetadata\n      });\n    }\n  }, [loaded, hasValidData, currentScenario, isConversationStarted, level, saveActivity, activityMetadata]);\n\n  // ✅ CORRECTION : useEffect optimisé\n  useEffect(() => {\n    handleSaveActivity();\n  }, [handleSaveActivity]);\n\n  // Handlers\n   const handleBackPress = () => {\n    router.push({\n      pathname: \"/(tabs)/exerciseSelection\",\n      params: { level }\n    });\n  };\n  \n  const handleScenarioChange = (index) => changeScenario(index);\n\n  const handleSendMessage = () => sendMessage();\n\n  const handleUseSuggestion = (suggestion) => useSuggestion(suggestion);\n\n  const handleToggleHelp = () => toggleHelp();\n\n  const handleToggleProgressDetails = () => toggleDetailedProgress();\n\n  // Loading state\n  if (!loaded || !hasValidData) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#FAFBFC\"\n        statusBarStyle=\"dark-content\"\n      >\n        {/* Loading content can be added here */}\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      backgroundColor=\"#FAFBFC\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      style={styles.safeArea}\n    >\n      {/* Header */}\n      <ConversationHeader\n        level={level}\n        onBackPress={handleBackPress}\n        levelColor={levelColor}\n      />\n\n      {/* Scenario Selector */}\n      <ConversationSelector\n        scenarios={conversationData.exercises}\n        selectedIndex={currentScenarioIndex}\n        onSelectScenario={handleScenarioChange}\n        levelColor={levelColor}\n      />\n\n      {/* Progress */}\n      <ConversationProgress\n        progress={stats.completionProgress}\n        currentStep={stats.currentStep}\n        totalSteps={stats.totalSteps}\n        levelColor={levelColor}\n        conversationData={conversationData.exercises}\n        completedScenarios={completedScenarios}\n        conversationHistory={conversationHistory}\n        expanded={showDetailedProgress}\n        onToggleExpand={handleToggleProgressDetails}\n        onScenarioPress={handleScenarioChange}\n      />\n\n      {/* Scenario Description */}\n      <ConversationScenarioDescription\n        description={currentScenario.description}\n        helpText={display.currentHelp}\n        showHelp={showHelp}\n        toggleHelp={handleToggleHelp}\n        levelColor={levelColor}\n      />\n\n      {/* Chat Area */}\n      <KeyboardAvoidingView\n        style={styles.chatContainer}\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        keyboardVerticalOffset={Platform.OS === \"ios\" ? 90 : 0}\n      >\n        {/* Message List */}\n        <ConversationMessageList\n          messages={conversation}\n          isTyping={isTyping}\n          levelColor={levelColor}\n        />\n\n        {/* Suggestions */}\n        <ConversationSuggestions\n          suggestions={suggestions}\n          onPressSuggestion={handleUseSuggestion}\n          levelColor={levelColor}\n        />\n\n        {/* Input */}\n        <ConversationInput\n          message={message}\n          onChangeMessage={setMessage}\n          onSendMessage={handleSendMessage}\n          levelColor={levelColor}\n        />\n      </KeyboardAvoidingView>\n    </Container>\n  );\n};\n\nexport default ConversationExercise;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionCategorySelector\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[100,111],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[120,156],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'CategorySelector' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"CategorySelector"},"fix":{"range":[164,186],"text":""},"desc":"Remove unused variable 'CategorySelector'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/screens/exercises/errorCorrection/ErrorCorrectionCategorySelector/index.js\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport CategorySelector from \"../../../../components/exercise-common/CategorySelector\";\nimport styles from \"./style\";\n\n/**\n * Sélecteur de catégories pour les exercices de correction d'erreurs\n * Réutilise le composant CategorySelector générique\n */\nconst ErrorCorrectionCategorySelector = ({\n  categories,\n  selectedCategory,\n  onSelectCategory,\n  levelColor,\n}) => {\n  if (!categories || categories.length === 0) {\n    return null;\n  }\n\n  return (\n    <View style={styles.container}>\n      <CategorySelector\n        categories={categories}\n        selectedCategory={selectedCategory}\n        onSelectCategory={onSelectCategory}\n        primaryColor={levelColor}\n      />\n    </View>\n  );\n};\n\nexport default ErrorCorrectionCategorySelector;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionCategorySelector\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionExerciceCard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[96,107],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseCard' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseCard"},"fix":{"range":[123,141],"text":""},"desc":"Remove unused variable 'ExerciseCard'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/screens/exercises/errorCorrection/ErrorCorrectionExerciseCard/index.js\nimport React from \"react\";\nimport ExerciseCard from \"../../../../components/exercise-common/ExerciseCard\";\n\n\n/**\n * Carte représentant un type d'exercice de correction d'erreurs dans la sélection\n * Réutilise le composant ExerciseCard générique\n */\nconst ErrorCorrectionExerciseCard = ({\n  title,\n  description,\n  progress = 0,\n  isNew = false,\n  levelColor = \"#5E60CE\",\n  onPress,\n}) => {\n  return (\n    <ExerciseCard\n      title={title}\n      description={description}\n      icon=\"✏️\" // Icône pour la correction d'erreurs\n      progress={progress}\n      color={levelColor}\n      onPress={onPress}\n      isNew={isNew}\n    />\n  );\n};\n\nexport default ErrorCorrectionExerciseCard;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionExerciseContent\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[96,107],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseCard' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseCard"},"fix":{"range":[123,141],"text":""},"desc":"Remove unused variable 'ExerciseCard'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/screens/exercises/errorCorrection/ErrorCorrectionExerciseCard/index.js\nimport React from \"react\";\nimport ExerciseCard from \"../../../../components/exercise-common/ExerciseCard\";\n\n/**\n * Carte représentant un exercice de correction d'erreurs dans la liste des exercices\n * Utilise le composant générique ExerciseCard\n */\nconst ErrorCorrectionExerciseCard = ({\n  categoryName,\n  description,\n  progress = 0,\n  levelColor = \"#5E60CE\",\n  onPress,\n  isNew = false,\n}) => {\n  return (\n    <ExerciseCard\n      title={`Correction d'erreurs: ${categoryName}`}\n      description={description}\n      icon=\"✏️\"\n      progress={progress}\n      color={levelColor}\n      onPress={onPress}\n      isNew={isNew}\n    />\n  );\n};\n\nexport default ErrorCorrectionExerciseCard;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[48,59],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseHeader' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseHeader"},"fix":{"range":[75,95],"text":""},"desc":"Remove unused variable 'ExerciseHeader'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// 1. ErrorCorrectionHeader - MIS À JOUR\nimport React from \"react\";\nimport ExerciseHeader from \"../../../../components/exercise-common/ExerciseHeader\";\n\nconst ErrorCorrectionHeader = ({ level, onBackPress }) => {\n  return (\n    <ExerciseHeader\n      title=\"Correction d'erreurs\"\n      level={level}\n      exerciseType=\"errorCorrection\" // ✅ NOUVEAU\n      onClose={onBackPress}\n      backIcon=\"arrow-back\"\n    />\n  );\n};\n\nexport default ErrorCorrectionHeader;\n\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionModeSelector\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[86,97],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[115,120],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[119,125],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[125,143],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[167,213],"text":""},"desc":"Remove unused variable 'Ionicons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ErrorCorrectionModeSelector/index.js - VERSION SIMPLIFIÉE (80 → 35 lignes)\n\nimport React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 ErrorCorrectionModeSelector - Version Ultra-Simplifiée\n * 80 lignes → 35 lignes (-56% de code)\n * Logique épurée, design clean\n */\nconst ErrorCorrectionModeSelector = ({\n  onSelectMode,\n  disabled = false,\n  levelColor = \"#5E60CE\",\n}) => {\n  const styles = createStyles(levelColor);\n\n  const modes = [\n    {\n      id: \"full\",\n      title: \"Correction complète\",\n      description: \"Corriger la phrase entière\",\n      icon: \"create-outline\",\n    },\n    {\n      id: \"identify\",\n      title: \"Identifier erreurs\",\n      description: \"Toucher les mots erronés\",\n      icon: \"search-outline\",\n    },\n    {\n      id: \"multiple_choice\",\n      title: \"Choix multiple\",\n      description: \"Choisir la bonne réponse\",\n      icon: \"list-outline\",\n    },\n  ];\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Choisir un mode :</Text>\n\n      {modes.map((mode) => (\n        <TouchableOpacity\n          key={mode.id}\n          style={[styles.modeCard, disabled && styles.disabledCard]}\n          onPress={() => onSelectMode(mode.id)}\n          disabled={disabled}\n        >\n          <Ionicons\n            name={mode.icon}\n            size={24}\n            color={disabled ? \"#94a3b8\" : levelColor}\n            style={styles.icon}\n          />\n          <View style={styles.modeInfo}>\n            <Text style={[styles.modeTitle, disabled && styles.disabledText]}>\n              {mode.title}\n            </Text>\n            <Text style={[styles.modeDescription, disabled && styles.disabledText]}>\n              {mode.description}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n};\n\nexport default ErrorCorrectionModeSelector;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionModeSelector\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[265,287],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ErrorCorrectionModeSelector/style.js - VERSION SIMPLIFIÉE\n\nimport { StyleSheet, Platform } from 'react-native';\n\n/**\n * 🎯 Styles ultra-simplifiés pour ErrorCorrectionModeSelector  \n * Focus sur l'essentiel, suppression des redondances\n */\nconst createStyles = (levelColor = \"#5E60CE\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      padding: 16,\n      marginBottom: 16,\n    },\n    \n    // =================== TITRE ===================\n    title: {\n      fontSize: 18,\n      fontWeight: '700',\n      color: '#1e293b',\n      marginBottom: 16,\n      textAlign: 'center',\n    },\n\n    // =================== MODE CARDS ===================\n    modeCard: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: 'white',\n      borderRadius: 12,\n      padding: 16,\n      marginBottom: 12,\n      borderWidth: 1,\n      borderColor: '#e2e8f0',\n      ...Platform.select({\n        ios: {\n          shadowColor: '#64748b',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.1,\n          shadowRadius: 2,\n        },\n        android: {\n          elevation: 2,\n        },\n      }),\n    },\n    disabledCard: {\n      opacity: 0.6,\n    },\n\n    // =================== ICON & INFO ===================\n    icon: {\n      marginRight: 16,\n    },\n    modeInfo: {\n      flex: 1,\n    },\n    modeTitle: {\n      fontSize: 16,\n      fontWeight: '600',\n      color: '#1e293b',\n      marginBottom: 2,\n    },\n    modeDescription: {\n      fontSize: 14,\n      color: '#64748b',\n    },\n    disabledText: {\n      color: '#94a3b8',\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionNavigation\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[94,105],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[114,150],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[158,181],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/screens/exercises/errorCorrection/ErrorCorrectionNavigation/index.js\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\nimport styles from \"./style\";\n\n/**\n * Composant de navigation pour les exercices de correction d'erreurs\n * Réutilise le composant NavigationButtons générique\n */\nconst ErrorCorrectionNavigation = ({\n  onNext,\n  onPrevious,\n  onExit,\n  currentIndex,\n  totalCount,\n  disableNext = false,\n  isLastExercise = false,\n  showFeedback = false,\n  levelColor,\n}) => {\n  // Si on est en mode feedback (après vérification de réponse)\n  // ou si on est au dernier exercice, adapter les labels\n  const buttonLabels = {\n    previous: \"Précédent\",\n    next: showFeedback\n      ? isLastExercise\n        ? \"Voir les résultats\"\n        : \"Exercice suivant\"\n      : \"Vérifier\",\n    skip: \"Passer\",\n    finish: \"Terminer\",\n  };\n\n  return (\n    <View style={styles.container}>\n      <NavigationButtons\n        onNext={onNext}\n        onPrevious={onPrevious}\n        onSkip={onExit}\n        currentIndex={currentIndex}\n        totalCount={totalCount}\n        disablePrevious={currentIndex === 0}\n        disableNext={disableNext}\n        showSkip={!showFeedback && !isLastExercise}\n        primaryColor={levelColor}\n        buttonLabels={buttonLabels}\n        variant=\"standard\"\n      />\n    </View>\n  );\n};\n\nexport default ErrorCorrectionNavigation;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionNavigation\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionProgress\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[76,82],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressCard' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressCard"},"fix":{"range":[116,134],"text":""},"desc":"Remove unused variable 'ProgressCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'index' is defined but never used.","line":35,"column":67,"nodeType":"Identifier","messageId":"unusedVar","endLine":35,"endColumn":72,"suggestions":[{"messageId":"removeVar","data":{"varName":"index"},"fix":{"range":[1159,1166],"text":""},"desc":"Remove unused variable 'index'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'index' is defined but never used.","line":85,"column":58,"nodeType":"Identifier","messageId":"unusedVar","endLine":85,"endColumn":63,"suggestions":[{"messageId":"removeVar","data":{"varName":"index"},"fix":{"range":[3020,3027],"text":""},"desc":"Remove unused variable 'index'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'debugData' is assigned a value but never used.","line":94,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":94,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"debugData"},"fix":{"range":[3292,3887],"text":""},"desc":"Remove unused variable 'debugData'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ErrorCorrectionProgress/index.js - VERSION CORRIGÉE AVEC useMemo\n\nimport React, { useMemo } from \"react\";\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\nimport {\n  calculateTotalExercises,\n  calculateCompletedExercisesCount,\n  calculateTotalProgress,\n  calculateCategoryProgress,\n} from \"../../../../utils/errorCorrection/errorCorrectionStats\";\n\n/**\n * 📊 ErrorCorrectionProgress - Version corrigée avec mémorisation\n * ✅ Évite les boucles infinies avec useMemo\n * ✅ Détecte automatiquement la structure des données\n */\nconst ErrorCorrectionProgress = ({\n  categories = [],\n  exercises = [],\n  completedExercises = {},\n  levelColor,\n  expanded = false,\n  onToggleExpand,\n  onCategoryPress,\n}) => {\n  \n  // ✅ MÉMORISER la validation des catégories\n  const validCategories = useMemo(() => {\n    if (Array.isArray(categories) && categories.length > 0) {\n      return categories;\n    }\n    // Fallback si pas de catégories mais qu'on a des exercices\n    if (Array.isArray(exercises) && exercises.length > 0) {\n      // Créer des catégories virtuelles basées sur les exercices\n      const categoriesFromExercises = exercises.reduce((cats, ex, index) => {\n        const categoryId = ex.categoryId || ex.category || 'general';\n        if (!cats.find(c => c.id === categoryId)) {\n          cats.push({\n            id: categoryId,\n            name: ex.categoryName || `Catégorie ${categoryId}`,\n            exercises: exercises.filter(e => (e.categoryId || e.category || 'general') === categoryId)\n          });\n        }\n        return cats;\n      }, []);\n      return categoriesFromExercises;\n    }\n    return [];\n  }, [categories, exercises]);\n\n  // ✅ MÉMORISER la validation des exercices\n  const validExercises = useMemo(() => {\n    if (Array.isArray(exercises) && exercises.length > 0) {\n      return exercises;\n    }\n    // Si pas d'exercices directement, extraire des catégories\n    if (Array.isArray(categories) && categories.length > 0) {\n      return categories.reduce((exs, cat) => {\n        if (cat.exercises && Array.isArray(cat.exercises)) {\n          return [...exs, ...cat.exercises];\n        }\n        return exs;\n      }, []);\n    }\n    return [];\n  }, [categories, exercises]);\n  \n  // ✅ MÉMORISER tous les calculs\n  const statsData = useMemo(() => {\n    const totalExercisesCount = calculateTotalExercises(validCategories, validExercises);\n    const completedExercisesCount = calculateCompletedExercisesCount(completedExercises);\n    const totalProgress = calculateTotalProgress(validCategories, validExercises, completedExercises);\n    const categoryProgressData = calculateCategoryProgress(validCategories, validExercises, completedExercises);\n\n    return {\n      totalExercisesCount,\n      completedExercisesCount,\n      totalProgress,\n      categoryProgressData\n    };\n  }, [validCategories, validExercises, completedExercises]);\n\n  // ✅ MÉMORISER la transformation des données\n  const formattedCategoryData = useMemo(() => {\n    return statsData.categoryProgressData.map((category, index) => ({\n      title: category.title,\n      completed: category.completedExercises,\n      total: category.totalExercises,\n      progress: category.progress,\n    }));\n  }, [statsData.categoryProgressData]);\n\n  // ✅ MÉMORISER les données de debug (seulement en dev)\n  const debugData = useMemo(() => {\n    if (process.env.NODE_ENV !== 'development') return null;\n    \n    return {\n      originalCategoriesLength: categories.length,\n      originalExercisesLength: exercises.length,\n      validCategoriesLength: validCategories.length,\n      validExercisesLength: validExercises.length,\n      totalExercisesCount: statsData.totalExercisesCount,\n      completedExercisesCount: statsData.completedExercisesCount,\n      totalProgress: statsData.totalProgress\n    };\n  }, [categories.length, exercises.length, validCategories.length, validExercises.length, statsData]);\n\n  // ✅ CORRECTION FINALE : Pas de log dans le render !\n\n  return (\n    <ProgressCard\n      title=\"Progression\"\n      progress={statsData.totalProgress}\n      completed={statsData.completedExercisesCount}\n      total={statsData.totalExercisesCount}\n      unit=\"exercices\"\n      levelColor={levelColor}\n      expandable={true}\n      expanded={expanded}\n      onToggleExpand={onToggleExpand}\n      categoryData={formattedCategoryData}\n      onCategoryPress={onCategoryPress}\n    />\n  );\n};\n\nexport default ErrorCorrectionProgress;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionResultsCard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[95,106],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[115,151],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ResultsScreen' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"ResultsScreen"},"fix":{"range":[159,178],"text":""},"desc":"Remove unused variable 'ResultsScreen'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/screens/exercises/errorCorrection/ErrorCorrectionResultsCard/index.js\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport ResultsScreen from \"../../../../components/exercise-common/ResultsScreen\";\nimport styles from \"./style\";\n\n/**\n * Carte de résultats pour les exercices de correction d'erreurs\n * Réutilise le composant ResultsScreen générique\n */\nconst ErrorCorrectionResultsCard = ({\n  score,\n  totalExercises,\n  userAttempts = [],\n  exercises = [],\n  level,\n  levelColor,\n  onRetry,\n  onContinue,\n  onExit,\n}) => {\n  // Calculer le nombre de réponses correctes, incorrectes et passées\n  const correctAnswers = userAttempts.filter(\n    (attempt) => attempt.isCorrect\n  ).length;\n  const incorrectAnswers = userAttempts.filter(\n    (attempt) => !attempt.isCorrect && attempt.attempted\n  ).length;\n  const skippedAnswers = totalExercises - (correctAnswers + incorrectAnswers);\n\n  // Préparer les résultats détaillés pour chaque exercice\n  const detailedResults = exercises.map((exercise, index) => {\n    const attempt = userAttempts[index] || {};\n\n    return {\n      question: exercise.text,\n      userAnswer: attempt.correction || \"Pas de réponse\",\n      correctAnswer: exercise.correctedText,\n      isCorrect: attempt.isCorrect || false,\n      isSkipped: !attempt.attempted,\n    };\n  });\n\n  // Générer un feedback personnalisé en fonction du score\n  const getFeedback = () => {\n    const percentage = Math.round((correctAnswers / totalExercises) * 100);\n\n    if (percentage >= 80) {\n      return \"Excellent ! Vous avez très bien compris les différentes erreurs grammaticales et d'usage. Continuez sur cette voie !\";\n    } else if (percentage >= 60) {\n      return \"Bon travail ! Vous commencez à bien repérer les erreurs. Continuez à pratiquer pour améliorer votre précision.\";\n    } else {\n      return \"Continuez à pratiquer ! La correction d'erreurs demande de la pratique. Revoyez les règles grammaticales et observez attentivement les structures de phrases.\";\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ResultsScreen\n        score={score}\n        totalQuestions={totalExercises}\n        correctAnswers={correctAnswers}\n        incorrectAnswers={incorrectAnswers}\n        skippedAnswers={skippedAnswers}\n        exerciseType=\"Correction d'erreurs\"\n        level={level}\n        levelColor={levelColor}\n        feedback={getFeedback()}\n        onRetry={onRetry}\n        onContinue={onContinue || onExit}\n        showDetailedResults\n        detailedResults={detailedResults}\n      />\n    </View>\n  );\n};\n\nexport default ErrorCorrectionResultsCard;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionResultsCard\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionWordSection\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[103,109],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[143,148],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[147,153],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[178,232],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'FullCorrectionMode' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"FullCorrectionMode"},"fix":{"range":[241,265],"text":""},"desc":"Remove unused variable 'FullCorrectionMode'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'IdentifyErrorsMode' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"IdentifyErrorsMode"},"fix":{"range":[304,328],"text":""},"desc":"Remove unused variable 'IdentifyErrorsMode'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'MultipleChoiceMode' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"MultipleChoiceMode"},"fix":{"range":[367,391],"text":""},"desc":"Remove unused variable 'MultipleChoiceMode'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'level' is defined but never used.","line":34,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":34,"endColumn":8,"suggestions":[{"messageId":"removeVar","data":{"varName":"level"},"fix":{"range":[1616,1626],"text":""},"desc":"Remove unused variable 'level'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ErrorCorrectionWordSection/index.js - WRAPPER INTELLIGENT (pattern VocabularyWordSection)\r\n\r\nimport React, { memo } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport FullCorrectionMode from \"../modes/FullCorrectionMode\";\r\nimport IdentifyErrorsMode from \"../modes/IdentifyErrorsMode\";\r\nimport MultipleChoiceMode from \"../modes/MultipleChoiceMode\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ⚡ ErrorCorrectionWordSection - Wrapper intelligent\r\n * Garde toute la logique métier (compteur, mode switching, etc.)\r\n * Pattern identique à VocabularyWordSection\r\n * \r\n * @param {Object} currentExercise - Exercice actuel avec ses propriétés\r\n * @param {string} exerciseCounter - Compteur stylé (ex: \"5 / 20\")\r\n * @param {string} correctionMode - Mode de correction (full/identify/multiple_choice)\r\n * @param {string} level - Niveau actuel\r\n * @param {string} levelColor - Couleur du niveau\r\n * @param {boolean} showFeedback - État d'affichage du feedback\r\n * @param {boolean} isCorrect - Réponse correcte ou non\r\n * @param {string} userCorrection - Texte corrigé (mode full)\r\n * @param {Array} selectedErrorIndices - Indices sélectionnés (mode identify)\r\n * @param {number} selectedChoiceIndex - Choix sélectionné (mode multiple_choice)\r\n * @param {function} onChangeUserCorrection - Callback mode full\r\n * @param {function} onToggleErrorIndex - Callback mode identify\r\n * @param {function} onSelectChoice - Callback mode multiple_choice\r\n */\r\nconst ErrorCorrectionWordSection = memo(({\r\n  currentExercise,\r\n  exerciseCounter,\r\n  correctionMode,\r\n  level,\r\n  levelColor,\r\n  showFeedback,\r\n  isCorrect,\r\n  // Mode-specific props\r\n  userCorrection,\r\n  selectedErrorIndices,\r\n  selectedChoiceIndex,\r\n  onChangeUserCorrection,\r\n  onToggleErrorIndex,\r\n  onSelectChoice,\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      {/* 🎯 COMPTEUR STYLÉ - Garde la logique existante */}\r\n      <View style={styles.counterSection}>\r\n        <LinearGradient\r\n          colors={[`${levelColor}08`, `${levelColor}04`, 'transparent']}\r\n          start={{ x: 0, y: 0 }}\r\n          end={{ x: 1, y: 1 }}\r\n          style={styles.counterGradient}\r\n        >\r\n          {/* Compteur principal */}\r\n          <View style={[styles.counterBadge, { borderColor: `${levelColor}20` }]}>\r\n            <Text style={[styles.counterText, { color: levelColor }]}>\r\n              {exerciseCounter}\r\n            </Text>\r\n          </View>\r\n        </LinearGradient>\r\n      </View>\r\n\r\n      {/* 🎨 MODE SWITCHING - Affiche le bon composant selon le mode */}\r\n      {correctionMode === 'full' && (\r\n        <FullCorrectionMode\r\n          exercise={currentExercise}\r\n          userCorrection={userCorrection}\r\n          onChangeUserCorrection={onChangeUserCorrection}\r\n          showFeedback={showFeedback}\r\n          isCorrect={isCorrect}\r\n          levelColor={levelColor}\r\n        />\r\n      )}\r\n\r\n      {correctionMode === 'identify' && (\r\n        <IdentifyErrorsMode\r\n          exercise={currentExercise}\r\n          selectedErrorIndices={selectedErrorIndices}\r\n          onToggleErrorIndex={onToggleErrorIndex}\r\n          showFeedback={showFeedback}\r\n          levelColor={levelColor}\r\n        />\r\n      )}\r\n\r\n      {correctionMode === 'multiple_choice' && (\r\n        <MultipleChoiceMode\r\n          exercise={currentExercise}\r\n          selectedChoiceIndex={selectedChoiceIndex}\r\n          onSelectChoice={onSelectChoice}\r\n          showFeedback={showFeedback}\r\n          levelColor={levelColor}\r\n        />\r\n      )}\r\n\r\n      {/* 🚨 MODE INCONNU */}\r\n      {!['full', 'identify', 'multiple_choice'].includes(correctionMode) && (\r\n        <View style={styles.errorContainer}>\r\n          <Text style={styles.errorText}>\r\n            Mode de correction inconnu: {correctionMode}\r\n          </Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n});\r\n\r\nErrorCorrectionWordSection.displayName = \"ErrorCorrectionWordSection\";\r\n\r\nexport default ErrorCorrectionWordSection;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionWordSection\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[274,296],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ErrorCorrectionWordSection/style.js - Garde styles compteur\r\n\r\nimport { StyleSheet, Platform } from \"react-native\";\r\n\r\n/**\r\n * ⚡ Styles pour ErrorCorrectionWordSection\r\n * Garde les styles du compteur, le reste est dans les modes refactorisés\r\n */\r\nconst createStyles = (levelColor = \"#5E60CE\") =>\r\n  StyleSheet.create({\r\n    // =================== CONTAINER ===================\r\n    container: {\r\n      flex: 1,\r\n      paddingBottom: 20,\r\n    },\r\n    \r\n    // =================== COMPTEUR SECTION ===================\r\n    counterSection: {\r\n      marginHorizontal: 16,\r\n      marginBottom: 16,\r\n      borderRadius: 20,\r\n      overflow: 'hidden',\r\n    },\r\n    counterGradient: {\r\n      paddingVertical: 16,\r\n      paddingHorizontal: 24,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    \r\n    // =================== BADGE COMPTEUR ===================\r\n    counterBadge: {\r\n      backgroundColor: 'white',\r\n      paddingHorizontal: 20,\r\n      paddingVertical: 10,\r\n      borderRadius: 16,\r\n      borderWidth: 1,\r\n      // Ombre subtile\r\n      ...Platform.select({\r\n        ios: {\r\n          shadowColor: '#000',\r\n          shadowOffset: { width: 0, height: 2 },\r\n          shadowOpacity: 0.08,\r\n          shadowRadius: 8,\r\n        },\r\n        android: {\r\n          elevation: 2,\r\n        },\r\n      }),\r\n    },\r\n    counterText: {\r\n      fontSize: 18,\r\n      fontWeight: '800',\r\n      letterSpacing: 0.5,\r\n    },\r\n\r\n    // =================== ERROR STATE ===================\r\n    errorContainer: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: 20,\r\n    },\r\n    errorText: {\r\n      fontSize: 16,\r\n      color: '#ef4444',\r\n      textAlign: 'center',\r\n      fontWeight: '500',\r\n    },\r\n  });\r\n\r\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\hooks\\useErrorCorrection.js","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'categories' logical expression could make the dependencies of useEffect Hook (at line 103) change on every render. To fix this, wrap the initialization of 'categories' in its own useMemo() Hook.","line":35,"column":9,"nodeType":"VariableDeclarator","endLine":35,"endColumn":59},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'categories' logical expression could make the dependencies of useEffect Hook (at line 110) change on every render. To fix this, wrap the initialization of 'categories' in its own useMemo() Hook.","line":35,"column":9,"nodeType":"VariableDeclarator","endLine":35,"endColumn":59},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'categories' logical expression could make the dependencies of useCallback Hook (at line 201) change on every render. To fix this, wrap the initialization of 'categories' in its own useMemo() Hook.","line":35,"column":9,"nodeType":"VariableDeclarator","endLine":35,"endColumn":59},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'categories' logical expression could make the dependencies of useCallback Hook (at line 315) change on every render. To fix this, wrap the initialization of 'categories' in its own useMemo() Hook.","line":35,"column":9,"nodeType":"VariableDeclarator","endLine":35,"endColumn":59},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'categories' logical expression could make the dependencies of useCallback Hook (at line 342) change on every render. To fix this, wrap the initialization of 'categories' in its own useMemo() Hook.","line":35,"column":9,"nodeType":"VariableDeclarator","endLine":35,"endColumn":59},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'categories' logical expression could make the dependencies of useCallback Hook (at line 355) change on every render. To fix this, wrap the initialization of 'categories' in its own useMemo() Hook.","line":35,"column":9,"nodeType":"VariableDeclarator","endLine":35,"endColumn":59},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'categories' logical expression could make the dependencies of useCallback Hook (at line 369) change on every render. To fix this, wrap the initialization of 'categories' in its own useMemo() Hook.","line":35,"column":9,"nodeType":"VariableDeclarator","endLine":35,"endColumn":59},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'exercises' logical expression could make the dependencies of useCallback Hook (at line 149) change on every render. To fix this, wrap the initialization of 'exercises' in its own useMemo() Hook.","line":36,"column":9,"nodeType":"VariableDeclarator","endLine":38,"endColumn":10},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'exercises' logical expression could make the dependencies of useCallback Hook (at line 277) change on every render. To fix this, wrap the initialization of 'exercises' in its own useMemo() Hook.","line":36,"column":9,"nodeType":"VariableDeclarator","endLine":38,"endColumn":10},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'exercises' logical expression could make the dependencies of useCallback Hook (at line 315) change on every render. To fix this, wrap the initialization of 'exercises' in its own useMemo() Hook.","line":36,"column":9,"nodeType":"VariableDeclarator","endLine":38,"endColumn":10},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentCategory' logical expression could make the dependencies of useCallback Hook (at line 355) change on every render. To fix this, wrap the initialization of 'currentCategory' in its own useMemo() Hook.","line":39,"column":9,"nodeType":"VariableDeclarator","endLine":39,"endColumn":104},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentExercise' logical expression could make the dependencies of useCallback Hook (at line 238) change on every render. To fix this, wrap the initialization of 'currentExercise' in its own useMemo() Hook.","line":40,"column":9,"nodeType":"VariableDeclarator","endLine":40,"endColumn":126},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentExercise' logical expression could make the dependencies of useCallback Hook (at line 355) change on every render. To fix this, wrap the initialization of 'currentExercise' in its own useMemo() Hook.","line":40,"column":9,"nodeType":"VariableDeclarator","endLine":40,"endColumn":126},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'STORAGE_KEY'. Either include it or remove the dependency array.","line":68,"column":6,"nodeType":"ArrayExpression","endLine":68,"endColumn":19,"suggestions":[{"desc":"Update the dependencies array to be: [STORAGE_KEY, progressKey]","fix":{"range":[3016,3029],"text":"[STORAGE_KEY, progressKey]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'resetExerciseState'. Either include it or remove the dependency array.","line":117,"column":6,"nodeType":"ArrayExpression","endLine":117,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [resetExerciseState]","fix":{"range":[4615,4617],"text":"[resetExerciseState]"}}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":217,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":217,"endColumn":69,"suggestions":[{"messageId":"addBrackets","fix":{"range":[7746,7981],"text":"{ const errorPositions = currentExercise.errorPositions || [];\n        answerCorrect = selectedErrorIndices.length === errorPositions.length &&\n          selectedErrorIndices.every(index => errorPositions.includes(index));\n        break; }"},"desc":"Add {} brackets around the case block."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useErrorCorrection.js - HOOK UNIFIÉ SIMPLE\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { Alert } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n/**\n * 🎯 Hook unifié pour Error Correction Exercise\n * Remplace useErrorCorrectionExerciseState + useErrorCorrectionProgress\n * Simple, efficace, maintenable - pattern identique à useVocabulary\n */\nconst useErrorCorrection = (errorCorrectionData = null, level = \"A1\") => {\n  \n  // =================== CORE STATE ===================\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentExerciseIndex, setCurrentExerciseIndex] = useState(0);\n  const [correctionMode, setCorrectionMode] = useState('full'); // 'full', 'identify', 'multiple_choice'\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [completedExercises, setCompletedExercises] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [showDetailedProgress, setShowDetailedProgress] = useState(false);\n\n  // =================== MODE-SPECIFIC STATE ===================\n  const [userCorrection, setUserCorrection] = useState('');\n  const [selectedErrorIndices, setSelectedErrorIndices] = useState([]);\n  const [selectedChoiceIndex, setSelectedChoiceIndex] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showHint, setShowHint] = useState(false);\n\n  // =================== REFS ===================\n  const isInitialized = useRef(false);\n\n  // =================== COMPUTED VALUES ===================\n  const categories = errorCorrectionData?.categories || [];\n  const exercises = errorCorrectionData?.exercises?.filter(\n    ex => ex.categoryId === selectedCategory\n  ) || [];\n  const currentCategory = categories.find(cat => cat.id === selectedCategory) || { name: \"\", id: null };\n  const currentExercise = exercises[currentExerciseIndex] || { text: \"\", correctedText: \"\", errorPositions: [], choices: [] };\n  const totalCategories = categories.length;\n  const totalExercisesInCategory = exercises.length;\n  \n  // =================== PERSISTENCE ===================\n  const progressKey = `${level}`;\n  const STORAGE_KEY = `error_correction_${progressKey}`;\n\n  // Load data from storage\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const saved = await AsyncStorage.getItem(STORAGE_KEY);\n        if (saved) {\n          const { completedExercises: savedCompleted, lastPosition } = JSON.parse(saved);\n          setCompletedExercises(savedCompleted || {});\n          if (lastPosition) {\n            setSelectedCategory(lastPosition.categoryId || null);\n            setCurrentExerciseIndex(lastPosition.exerciseIndex || 0);\n          }\n        }\n      } catch (error) {\n        console.log('Error loading error correction data:', error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    loadData();\n  }, [progressKey]);\n\n  // Save data to storage\n  const saveData = useCallback(async () => {\n    try {\n      const dataToSave = {\n        completedExercises,\n        lastPosition: {\n          categoryId: selectedCategory,\n          exerciseIndex: currentExerciseIndex\n        }\n      };\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n    } catch (error) {\n      console.log('Error saving error correction data:', error);\n    }\n  }, [completedExercises, selectedCategory, currentExerciseIndex, STORAGE_KEY]);\n\n  // Auto-save when data changes\n  useEffect(() => {\n    if (loaded) saveData();\n  }, [saveData, loaded]);\n\n  // Initialize progress for new categories\n  useEffect(() => {\n    if (loaded && errorCorrectionData && !isInitialized.current) {\n      const newCompletedExercises = { ...completedExercises };\n      categories.forEach((category) => {\n        if (!newCompletedExercises[category.id]) {\n          newCompletedExercises[category.id] = [];\n        }\n      });\n      setCompletedExercises(newCompletedExercises);\n      isInitialized.current = true;\n    }\n  }, [loaded, errorCorrectionData, categories, completedExercises]);\n\n  // Initialize first category\n  useEffect(() => {\n    if (loaded && categories.length > 0 && !selectedCategory) {\n      setSelectedCategory(categories[0].id);\n    }\n  }, [loaded, categories, selectedCategory]);\n\n  // =================== NAVIGATION ACTIONS ===================\n  const changeCategory = useCallback((newCategoryId) => {\n    setSelectedCategory(newCategoryId);\n    setCurrentExerciseIndex(0);\n    resetExerciseState();\n  }, []);\n\n  const resetExerciseState = useCallback(() => {\n    setUserCorrection('');\n    setSelectedErrorIndices([]);\n    setSelectedChoiceIndex(null);\n    setShowFeedback(false);\n    setIsCorrect(false);\n    setShowHint(false);\n  }, []);\n\n  const startExercise = useCallback((mode = 'full') => {\n    setCorrectionMode(mode);\n    resetExerciseState();\n    setShowResults(false);\n    setScore(0);\n\n    // Initialize based on mode\n    if (exercises.length > 0) {\n      const firstExercise = exercises[0];\n      switch(mode) {\n        case 'full':\n          setUserCorrection(firstExercise.text || '');\n          break;\n        case 'identify':\n          setSelectedErrorIndices([]);\n          break;\n        case 'multiple_choice':\n          setSelectedChoiceIndex(null);\n          break;\n      }\n    }\n  }, [exercises, resetExerciseState]);\n\n  const toggleDetailedProgress = useCallback(() => {\n    setShowDetailedProgress(prev => !prev);\n  }, []);\n\n  // =================== MODE-SPECIFIC ACTIONS ===================\n  const handleWordPress = useCallback((wordIndex) => {\n    if (showFeedback || correctionMode !== 'identify') return;\n\n    setSelectedErrorIndices(prev => \n      prev.includes(wordIndex) \n        ? prev.filter(i => i !== wordIndex)\n        : [...prev, wordIndex]\n    );\n  }, [showFeedback, correctionMode]);\n\n  const handleChoiceSelect = useCallback((choiceIndex) => {\n    if (showFeedback) return;\n    setSelectedChoiceIndex(choiceIndex);\n  }, [showFeedback]);\n\n  // =================== COMPLETION LOGIC ===================\n  const markExerciseAsCompleted = useCallback((catId, exIndex) => {\n    setCompletedExercises(prev => {\n      const categoryCompleted = prev[catId] || [];\n      if (!categoryCompleted.includes(exIndex)) {\n        return {\n          ...prev,\n          [catId]: [...categoryCompleted, exIndex]\n        };\n      }\n      return prev;\n    });\n  }, []);\n\n  // Find next uncompleted category\n  const findNextUncompletedCategory = useCallback(() => {\n    const totalCategories = categories.length;\n    for (let i = 1; i <= totalCategories; i++) {\n      const nextIndex = (categories.findIndex(cat => cat.id === selectedCategory) + i) % totalCategories;\n      const nextCategory = categories[nextIndex];\n      const exercisesInCategory = errorCorrectionData?.exercises?.filter(\n        ex => ex.categoryId === nextCategory.id\n      )?.length || 0;\n      const completedInCategory = completedExercises[nextCategory.id]?.length || 0;\n      \n      if (completedInCategory < exercisesInCategory) {\n        return nextCategory.id;\n      }\n    }\n    return null;\n  }, [categories, selectedCategory, completedExercises, errorCorrectionData]);\n\n  // =================== ANSWER CHECKING ===================\n  const checkAnswer = useCallback(() => {\n    if (showFeedback) return false;\n\n    let answerCorrect = false;\n\n    switch(correctionMode) {\n      case 'full':\n        if (!userCorrection.trim()) return false;\n        answerCorrect = userCorrection.trim().toLowerCase() === \n                       (currentExercise.correctedText || '').trim().toLowerCase();\n        break;\n\n      case 'identify':\n        const errorPositions = currentExercise.errorPositions || [];\n        answerCorrect = selectedErrorIndices.length === errorPositions.length &&\n          selectedErrorIndices.every(index => errorPositions.includes(index));\n        break;\n\n      case 'multiple_choice':\n        answerCorrect = selectedChoiceIndex === currentExercise.correctChoiceIndex;\n        break;\n\n      default:\n        return false;\n    }\n\n    setIsCorrect(answerCorrect);\n    setShowFeedback(true);\n\n    if (answerCorrect) {\n      setScore(prev => prev + 1);\n    }\n\n    return answerCorrect;\n  }, [showFeedback, correctionMode, userCorrection, selectedErrorIndices, selectedChoiceIndex, currentExercise]);\n\n  // =================== MAIN NAVIGATION ===================\n  const handleNext = useCallback(() => {\n    // Mark current exercise as completed\n    markExerciseAsCompleted(selectedCategory, currentExerciseIndex);\n\n    // Check if there are more exercises in current category\n    if (currentExerciseIndex < totalExercisesInCategory - 1) {\n      const nextIndex = currentExerciseIndex + 1;\n      setCurrentExerciseIndex(nextIndex);\n      resetExerciseState();\n\n      // Initialize next exercise based on mode\n      const nextExercise = exercises[nextIndex];\n      switch(correctionMode) {\n        case 'full':\n          setUserCorrection(nextExercise.text || '');\n          break;\n        case 'identify':\n          setSelectedErrorIndices([]);\n          break;\n        case 'multiple_choice':\n          setSelectedChoiceIndex(null);\n          break;\n      }\n    } else {\n      // End of category - find next uncompleted category\n      const nextCategoryId = findNextUncompletedCategory();\n      if (nextCategoryId === null) {\n        // All done!\n        const completionMessage = `Félicitations ! Vous avez terminé tous les exercices de correction d'erreurs ${level} !`;\n        Alert.alert(\"Félicitations\", completionMessage);\n        return { completed: true };\n      } else {\n        changeCategory(nextCategoryId);\n      }\n    }\n    return { completed: false };\n  }, [selectedCategory, currentExerciseIndex, totalExercisesInCategory, markExerciseAsCompleted, \n      resetExerciseState, exercises, correctionMode, findNextUncompletedCategory, changeCategory, level]);\n\n  const handlePrevious = useCallback(() => {\n    // Case 1: Not first exercise in category\n    if (currentExerciseIndex > 0) {\n      const prevIndex = currentExerciseIndex - 1;\n      setCurrentExerciseIndex(prevIndex);\n      resetExerciseState();\n\n      // Initialize previous exercise based on mode\n      const prevExercise = exercises[prevIndex];\n      switch(correctionMode) {\n        case 'full':\n          setUserCorrection(prevExercise.text || '');\n          break;\n        case 'identify':\n          setSelectedErrorIndices([]);\n          break;\n        case 'multiple_choice':\n          setSelectedChoiceIndex(null);\n          break;\n      }\n      return;\n    }\n    \n    // Case 2: First exercise in category - go to previous category\n    const currentCategoryIndex = categories.findIndex(cat => cat.id === selectedCategory);\n    if (currentCategoryIndex > 0) {\n      const previousCategory = categories[currentCategoryIndex - 1];\n      const exercisesInPreviousCategory = errorCorrectionData?.exercises?.filter(\n        ex => ex.categoryId === previousCategory.id\n      ) || [];\n      const lastExerciseIndex = exercisesInPreviousCategory.length - 1;\n      \n      changeCategory(previousCategory.id);\n      setCurrentExerciseIndex(lastExerciseIndex);\n    }\n  }, [currentExerciseIndex, exercises, correctionMode, resetExerciseState, \n      categories, selectedCategory, errorCorrectionData, changeCategory]);\n\n  // =================== COMPUTED STATS ===================\n  const getStats = useCallback(() => {\n    const totalExercises = categories.reduce((sum, cat) => {\n      const exercisesInCat = errorCorrectionData?.exercises?.filter(\n        ex => ex.categoryId === cat.id\n      )?.length || 0;\n      return sum + exercisesInCat;\n    }, 0);\n    \n    const completedExercisesCount = Object.values(completedExercises).reduce(\n      (sum, completed) => sum + (completed?.length || 0), 0\n    );\n    \n    const totalProgress = totalExercises > 0 ? Math.round((completedExercisesCount / totalExercises) * 100) : 0;\n\n    return {\n      totalExercises,\n      completedExercisesCount,\n      totalProgress,\n      completedInCurrentCategory: completedExercises[selectedCategory]?.length || 0,\n      totalInCurrentCategory: totalExercisesInCategory,\n      completedExercises,\n      score\n    };\n  }, [categories, errorCorrectionData, completedExercises, selectedCategory, totalExercisesInCategory, score]);\n\n  // =================== COMPUTED DISPLAY ===================\n  const getDisplayData = useCallback(() => {\n    const exerciseCounter = `${currentExerciseIndex + 1} / ${totalExercisesInCategory}`;\n    const categoryNames = categories.map(cat => cat.name);\n    \n    return {\n      exerciseCounter,\n      categories: categoryNames,\n      currentExercise,\n      currentCategory\n    };\n  }, [currentExerciseIndex, totalExercisesInCategory, categories, currentExercise, currentCategory]);\n\n  // =================== VALIDATION ===================\n  const canGoToPrevious = useCallback(() => {\n    if (currentExerciseIndex > 0) return true;\n    const currentCategoryIndex = categories.findIndex(cat => cat.id === selectedCategory);\n    if (currentCategoryIndex > 0) {\n      const previousCategory = categories[currentCategoryIndex - 1];\n      const exercisesInPreviousCategory = errorCorrectionData?.exercises?.filter(\n        ex => ex.categoryId === previousCategory.id\n      ) || [];\n      return exercisesInPreviousCategory.length > 0;\n    }\n    return false;\n  }, [currentExerciseIndex, categories, selectedCategory, errorCorrectionData]);\n\n  const isLastExerciseInCategory = useCallback(() => {\n    return currentExerciseIndex === totalExercisesInCategory - 1;\n  }, [currentExerciseIndex, totalExercisesInCategory]);\n\n  const hasValidData = errorCorrectionData?.categories && \n                      Array.isArray(errorCorrectionData.categories) && \n                      errorCorrectionData.categories.length > 0;\n\n  return {\n    // State\n    selectedCategory,\n    currentExerciseIndex,\n    correctionMode,\n    showFeedback,\n    isCorrect,\n    showResults,\n    completedExercises,\n    loaded,\n    showDetailedProgress,\n    \n    // Mode-specific state\n    userCorrection,\n    selectedErrorIndices,\n    selectedChoiceIndex,\n    score,\n    showHint,\n    \n    // Data\n    currentExercise,\n    currentCategory,\n    totalCategories,\n    totalExercisesInCategory,\n    exercises,\n    \n    // Actions\n    changeCategory,\n    startExercise,\n    resetExerciseState,\n    toggleDetailedProgress,\n    handleNext,\n    handlePrevious,\n    checkAnswer,\n    handleWordPress,\n    handleChoiceSelect,\n    setUserCorrection,\n    setShowHint,\n    setShowResults,\n    \n    // Computed\n    canGoToPrevious: canGoToPrevious(),\n    isLastExerciseInCategory: isLastExerciseInCategory(),\n    hasValidData,\n    stats: getStats(),\n    display: getDisplayData(),\n  };\n};\n\nexport default useErrorCorrection;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[63,69],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[139,144],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[143,162],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":9,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[300,310],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorCorrectionHeader' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"ErrorCorrectionHeader"},"fix":{"range":[416,443],"text":""},"desc":"Remove unused variable 'ErrorCorrectionHeader'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorCorrectionCategorySelector' is defined but never used.","line":13,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":39,"suggestions":[{"messageId":"removeVar","data":{"varName":"ErrorCorrectionCategorySelector"},"fix":{"range":[477,514],"text":""},"desc":"Remove unused variable 'ErrorCorrectionCategorySelector'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorCorrectionModeSelector' is defined but never used.","line":14,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":35,"suggestions":[{"messageId":"removeVar","data":{"varName":"ErrorCorrectionModeSelector"},"fix":{"range":[558,591],"text":""},"desc":"Remove unused variable 'ErrorCorrectionModeSelector'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorCorrectionProgress' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":31,"suggestions":[{"messageId":"removeVar","data":{"varName":"ErrorCorrectionProgress"},"fix":{"range":[631,660],"text":""},"desc":"Remove unused variable 'ErrorCorrectionProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorCorrectionWordSection' is defined but never used.","line":16,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":34,"suggestions":[{"messageId":"removeVar","data":{"varName":"ErrorCorrectionWordSection"},"fix":{"range":[696,728],"text":""},"desc":"Remove unused variable 'ErrorCorrectionWordSection'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorCorrectionNavigation' is defined but never used.","line":17,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"ErrorCorrectionNavigation"},"fix":{"range":[767,798],"text":""},"desc":"Remove unused variable 'ErrorCorrectionNavigation'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorCorrectionResultsCard' is defined but never used.","line":18,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":34,"suggestions":[{"messageId":"removeVar","data":{"varName":"ErrorCorrectionResultsCard"},"fix":{"range":[836,868],"text":""},"desc":"Remove unused variable 'ErrorCorrectionResultsCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'navigation' is assigned a value but never used.","line":31,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":31,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"navigation"},"fix":{"range":[1344,1379],"text":""},"desc":"Remove unused variable 'navigation'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'canGoToPrevious' is assigned a value but never used.","line":70,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":70,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"canGoToPrevious"},"fix":{"range":[2179,2216],"text":""},"desc":"Remove unused variable 'canGoToPrevious'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ErrorCorrectionExercise/index.js - VERSION CORRIGÉE\n\nimport React, { useMemo, useState, useEffect, useCallback } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\n\n// Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\n\n// Composants refactorisés\nimport ErrorCorrectionHeader from \"./ErrorCorrectionHeader\";\nimport ErrorCorrectionCategorySelector from \"./ErrorCorrectionCategorySelector\";\nimport ErrorCorrectionModeSelector from \"./ErrorCorrectionModeSelector\";\nimport ErrorCorrectionProgress from \"./ErrorCorrectionProgress\";\nimport ErrorCorrectionWordSection from \"./ErrorCorrectionWordSection\";\nimport ErrorCorrectionNavigation from \"./ErrorCorrectionNavigation\";\nimport ErrorCorrectionResultsCard from \"./ErrorCorrectionResultsCard\";\n\n// Hook unifié & Utils\nimport useErrorCorrection from \"./hooks/useErrorCorrection\";\nimport useLastActivity from \"../../../hooks/useLastActivity\";\nimport { getErrorsData, getLevelColor } from \"../../../utils/errorCorrection/errorCorrectionDataHelper\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 ErrorCorrectionExercise - VERSION CORRIGÉE\n */\nconst ErrorCorrectionExercise = ({ route }) => {\n  const { level = \"A1\" } = route.params || {};\n  const navigation = useNavigation();\n  const styles = createStyles();\n\n  // Hook pour sauvegarder l'activité\n  const { saveActivity } = useLastActivity();\n\n  // Data\n  const levelColor = getLevelColor(level);\n  const errorCorrectionData = useMemo(() => getErrorsData(level), [level]);\n\n  // Hook unifié\n  const {\n    selectedCategory,\n    currentExerciseIndex,\n    correctionMode,\n    showFeedback,\n    isCorrect,\n    showResults,\n    loaded,\n    showDetailedProgress,\n    // Mode-specific state\n    userCorrection,\n    selectedErrorIndices,\n    selectedChoiceIndex,\n    // Data\n    currentExercise,\n    exercises,\n    // Actions\n    changeCategory,\n    startExercise,\n    toggleDetailedProgress,\n    handleNext,\n    handlePrevious,\n    checkAnswer,\n    handleWordPress,\n    handleChoiceSelect,\n    setUserCorrection,\n    setShowResults,\n    // Computed\n    canGoToPrevious,\n    isLastExerciseInCategory,\n    hasValidData,\n    stats,\n    display,\n  } = useErrorCorrection(errorCorrectionData, level);\n\n  // États locaux\n  const [viewMode, setViewMode] = useState(\"browse\"); // \"browse\", \"exercise\", \"results\"\n\n  // ✅ CORRECTION : Mémoriser le nom de catégorie\n  const currentCategoryName = useMemo(() => {\n    return errorCorrectionData?.categories?.find(cat => cat.id === selectedCategory)?.name || \"Général\";\n  }, [errorCorrectionData?.categories, selectedCategory]);\n\n  // ✅ CORRECTION : Mémoriser les métadonnées\n  const activityMetadata = useMemo(() => ({\n    exercise: currentExerciseIndex,\n    totalExercises: exercises.length,\n    category: currentCategoryName,\n    mode: correctionMode,\n    categoryId: selectedCategory\n  }), [currentExerciseIndex, exercises.length, currentCategoryName, correctionMode, selectedCategory]);\n\n  // ✅ CORRECTION : Callback mémorisé pour saveActivity\n  const handleSaveActivity = useCallback(() => {\n    if (loaded && hasValidData && viewMode === \"exercise\" && currentExercise && !showResults) {\n      saveActivity({\n        title: \"Correction d'erreurs\",\n        level: level,\n        type: \"errorCorrection\",\n        metadata: activityMetadata\n      });\n    }\n  }, [loaded, hasValidData, viewMode, currentExercise, showResults, level, saveActivity, activityMetadata]);\n\n  // ✅ CORRECTION : useEffect optimisé\n  useEffect(() => {\n    handleSaveActivity();\n  }, [handleSaveActivity]);\n\n  // Handlers\nconst handleBackPress = () => {\n  if (viewMode === \"exercise\") {\n    setViewMode(\"browse\"); // ✅ Reste pareil\n  } else {\n    router.push({\n      pathname: \"/(tabs)/exerciseSelection\",\n      params: { level }\n    }); // ✅ Remplace navigation.goBack()\n  }\n};\n\n  const handleStartExercise = (mode) => {\n    startExercise(mode);\n    setViewMode(\"exercise\");\n  };\n\n  const handleCategoryChange = (categoryId) => {\n    changeCategory(categoryId);\n  };\n\n  const handleCategoryProgressPress = (index) => {\n    // Conversion index vers categoryId si nécessaire\n    const category = errorCorrectionData?.categories?.[index];\n    if (category) {\n      changeCategory(category.id);\n    }\n  };\n\n  const handleToggleProgressDetails = () => {\n    toggleDetailedProgress();\n  };\n\n  const handleNextAction = () => {\n    if (showFeedback) {\n      const result = handleNext();\n      if (result.completed) {\n        setViewMode(\"browse\");\n      }\n    } else {\n      checkAnswer();\n    }\n  };\n\n  const handlePreviousAction = () => {\n    handlePrevious();\n  };\n\n  // Loading state\n  if (!loaded || !hasValidData) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} />\n        </View>\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      withScrollView\n      backgroundColor=\"#f8fafc\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      scrollViewProps={{\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: styles.scrollContent,\n      }}\n    >\n      {/* Header */}\n      <ErrorCorrectionHeader\n        level={level}\n        onBackPress={handleBackPress}\n      />\n\n      {/* Progress (seulement en mode exercice) */}\n      {viewMode === \"exercise\" && !showResults && (\n        <ErrorCorrectionProgress\n          categories={errorCorrectionData.categories || []}\n          exercises={errorCorrectionData.exercises || []}\n          completedExercises={stats.completedExercises || {}}\n          levelColor={levelColor}\n          expanded={showDetailedProgress}\n          onToggleExpand={handleToggleProgressDetails}\n          onCategoryPress={handleCategoryProgressPress}\n        />\n      )}\n\n      {/* Contenu principal */}\n      {viewMode === \"browse\" && (\n        <>\n          {/* Category Selector */}\n          <ErrorCorrectionCategorySelector\n            categories={errorCorrectionData.categories || []}\n            selectedCategory={selectedCategory}\n            onSelectCategory={handleCategoryChange}\n            levelColor={levelColor}\n          />\n\n          {/* Mode Selector */}\n          <ErrorCorrectionModeSelector\n            onSelectMode={handleStartExercise}\n            disabled={exercises.length === 0}\n            levelColor={levelColor}\n          />\n        </>\n      )}\n\n      {viewMode === \"exercise\" && !showResults && (\n        <>\n          {/* Word Section */}\n          <ErrorCorrectionWordSection\n            currentExercise={currentExercise}\n            exerciseCounter={display.exerciseCounter}\n            correctionMode={correctionMode}\n            level={level}\n            levelColor={levelColor}\n            showFeedback={showFeedback}\n            isCorrect={isCorrect}\n            // Mode-specific props\n            userCorrection={userCorrection}\n            selectedErrorIndices={selectedErrorIndices}\n            selectedChoiceIndex={selectedChoiceIndex}\n            onChangeUserCorrection={setUserCorrection}\n            onToggleErrorIndex={handleWordPress}\n            onSelectChoice={handleChoiceSelect}\n          />\n        </>\n      )}\n\n      {showResults && (\n        <ErrorCorrectionResultsCard\n          score={stats.score || 0}\n          totalExercises={exercises.length}\n          level={level}\n          levelColor={levelColor}\n          onRetry={() => {\n            setShowResults(false);\n            setViewMode(\"exercise\");\n          }}\n          onContinue={() => setViewMode(\"browse\")}\n          onExit={handleBackPress}\n        />\n      )}\n\n      {/* Navigation (seulement en mode exercice) */}\n      {viewMode === \"exercise\" && !showResults && (\n        <ErrorCorrectionNavigation\n          onNext={handleNextAction}\n          onPrevious={handlePreviousAction}\n          onExit={() => setViewMode(\"browse\")}\n          currentIndex={currentExerciseIndex}\n          totalCount={exercises.length}\n          disableNext={\n            (correctionMode === \"full\" && userCorrection.trim() === \"\") ||\n            (correctionMode === \"identify\" && selectedErrorIndices.length === 0) ||\n            (correctionMode === \"multiple_choice\" && selectedChoiceIndex === null)\n          }\n          isLastExercise={isLastExerciseInCategory}\n          showFeedback={showFeedback}\n          levelColor={levelColor}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default ErrorCorrectionExercise;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\modes\\FullCorrectionMode\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[90,101],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[119,124],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TextInput' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"TextInput"},"fix":{"range":[123,134],"text":""},"desc":"Remove unused variable 'TextInput'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[165,179],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[227,247],"text":""},"desc":"Remove unused variable 'ContentSection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// FullCorrectionMode/index.js - VERSION REFACTORISÉE (HeroCard + ContentSection)\n\nimport React from \"react\";\nimport { View, TextInput } from \"react-native\";\nimport HeroCard from \"../../../../../components/ui/HeroCard\";\nimport ContentSection from \"../../../../../components/ui/ContentSection\";\nimport createStyles from \"./style\";\n\n/**\n * 🔧 FullCorrectionMode - Version Refactorisée avec composants génériques\n * Remplace Card par HeroCard + ContentSection\n * \n * @param {Object} exercise - Exercice actuel\n * @param {string} userCorrection - Texte corrigé par l'utilisateur\n * @param {function} onChangeUserCorrection - Callback pour changer le texte\n * @param {boolean} showFeedback - Afficher le feedback\n * @param {boolean} isCorrect - Réponse correcte ou non\n * @param {string} levelColor - Couleur du niveau\n */\nconst FullCorrectionMode = ({\n  exercise,\n  userCorrection,\n  onChangeUserCorrection,\n  showFeedback = false,\n  isCorrect = false,\n  levelColor = \"#5E60CE\",\n}) => {\n  const styles = createStyles(levelColor);\n\n  if (!exercise) return null;\n\n  return (\n    <View style={styles.container}>\n      {/* 🎯 HERO SECTION - Texte original */}\n      <HeroCard \n        content={exercise.text}\n        fontSize={24}\n        levelColor={levelColor}\n        showUnderline={false}\n        style={styles.heroCard}\n      />\n      \n      {/* 📝 SECTION INSTRUCTIONS */}\n      <ContentSection\n        title=\"Instructions\"\n        content=\"Corrigez toutes les erreurs dans le texte ci-dessus en réécrivant la phrase complète.\"\n        levelColor={levelColor}\n        backgroundColor=\"#F8F9FA\"\n        style={styles.instructionSection}\n      />\n\n      {/* ✏️ ZONE DE CORRECTION */}\n      <View style={styles.correctionContainer}>\n        <TextInput\n          style={[\n            styles.correctionInput,\n            showFeedback && (isCorrect ? styles.correctInput : styles.incorrectInput),\n          ]}\n          value={userCorrection}\n          onChangeText={onChangeUserCorrection}\n          multiline\n          placeholder=\"Tapez le texte corrigé ici...\"\n          placeholderTextColor=\"#94a3b8\"\n          editable={!showFeedback}\n        />\n      </View>\n\n      {/* 💡 FEEDBACK SI NÉCESSAIRE */}\n      {showFeedback && exercise.explanation && (\n        <ContentSection\n          title={isCorrect ? \"Correct !\" : \"Explication\"}\n          content={exercise.explanation}\n          levelColor={isCorrect ? \"#10b981\" : \"#ef4444\"}\n          backgroundColor={isCorrect ? \"#f0fdf4\" : \"#fef2f2\"}\n          style={styles.feedbackSection}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default FullCorrectionMode;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\modes\\FullCorrectionMode\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[263,285],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// FullCorrectionMode/style.js - VERSION REFACTORISÉE (styles minimaux)\n\nimport { StyleSheet } from 'react-native';\n\n/**\n * 🎯 Styles ultra-simplifiés pour FullCorrectionMode\n * La majorité des styles est dans HeroCard et ContentSection\n */\nconst createStyles = (levelColor = \"#5E60CE\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      marginHorizontal: 16,\n      marginVertical: 8,\n    },\n\n    // =================== HERO CARD ===================\n    heroCard: {\n      marginBottom: 16,\n    },\n\n    // =================== SECTIONS ===================\n    instructionSection: {\n      marginBottom: 16,\n    },\n    feedbackSection: {\n      marginTop: 16,\n    },\n\n    // =================== CORRECTION INPUT ===================\n    correctionContainer: {\n      marginVertical: 8,\n    },\n    correctionInput: {\n      backgroundColor: \"#f8fafc\",\n      borderWidth: 1,\n      borderColor: \"#e2e8f0\",\n      borderRadius: 12,\n      padding: 16,\n      fontSize: 16,\n      color: \"#334155\",\n      minHeight: 120,\n      textAlignVertical: \"top\",\n      lineHeight: 24,\n    },\n    correctInput: {\n      borderColor: \"#10b981\",\n      backgroundColor: \"#f0fdf4\",\n    },\n    incorrectInput: {\n      borderColor: \"#ef4444\",\n      backgroundColor: \"#fef2f2\",\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\modes\\IdentifyErrorsMode\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[90,101],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[119,124],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[123,129],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[129,147],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[178,192],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[240,260],"text":""},"desc":"Remove unused variable 'ContentSection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// IdentifyErrorsMode/index.js - VERSION REFACTORISÉE (HeroCard + ContentSection)\n\nimport React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport HeroCard from \"../../../../../components/ui/HeroCard\";\nimport ContentSection from \"../../../../../components/ui/ContentSection\";\nimport createStyles from \"./style\";\n\n/**\n * 🔍 IdentifyErrorsMode - Version Refactorisée avec composants génériques\n * Remplace Card par HeroCard + ContentSection + logique simplifiée\n * \n * @param {Object} exercise - Exercice actuel\n * @param {Array} selectedErrorIndices - Indices des mots sélectionnés\n * @param {function} onToggleErrorIndex - Callback pour toggle un mot\n * @param {boolean} showFeedback - Afficher le feedback\n * @param {string} levelColor - Couleur du niveau\n */\nconst IdentifyErrorsMode = ({\n  exercise,\n  selectedErrorIndices = [],\n  onToggleErrorIndex,\n  showFeedback = false,\n  levelColor = \"#5E60CE\",\n}) => {\n  const styles = createStyles(levelColor);\n\n  if (!exercise) return null;\n\n  // Diviser le texte en mots\n  const words = exercise.text.split(\" \");\n  const expectedErrors = exercise.errorPositions?.length || 0;\n\n  return (\n    <View style={styles.container}>\n      {/* 📝 SECTION INSTRUCTIONS */}\n      <ContentSection\n        title=\"Instructions\"\n        content={`Touchez les mots qui contiennent des erreurs. Vous devez trouver ${expectedErrors} erreur(s).`}\n        levelColor={levelColor}\n        backgroundColor=\"#F8F9FA\"\n        style={styles.instructionSection}\n      />\n\n      {/* 🎯 HERO SECTION - Zone de mots cliquables */}\n      <HeroCard \n        levelColor={levelColor}\n        showUnderline={false}\n        style={styles.heroCard}\n      >\n        <View style={styles.wordsContainer}>\n          {words.map((word, index) => {\n            const isSelected = selectedErrorIndices.includes(index);\n            const isError = showFeedback && (exercise.errorPositions || []).includes(index);\n            const isCorrectSelection = showFeedback && isSelected && isError;\n            const isIncorrectSelection = showFeedback && isSelected && !isError;\n\n            return (\n              <TouchableOpacity\n                key={index}\n                onPress={() => !showFeedback && onToggleErrorIndex(index)}\n                disabled={showFeedback}\n                style={[\n                  styles.word,\n                  isSelected && !showFeedback && {\n                    backgroundColor: `${levelColor}20`,\n                    borderColor: levelColor,\n                  },\n                  isCorrectSelection && styles.correctWord,\n                  isIncorrectSelection && styles.incorrectWord,\n                  isError && !isSelected && showFeedback && styles.missedErrorWord,\n                ]}\n              >\n                <Text\n                  style={[\n                    styles.wordText,\n                    isSelected && !showFeedback && { \n                      color: levelColor, \n                      fontWeight: \"600\" \n                    },\n                    isCorrectSelection && styles.correctWordText,\n                    isIncorrectSelection && styles.incorrectWordText,\n                    isError && !isSelected && showFeedback && styles.missedErrorWordText,\n                  ]}\n                >\n                  {word}\n                </Text>\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n      </HeroCard>\n\n      {/* 📊 AIDE CONTEXTUELLE */}\n      {!showFeedback && (\n        <ContentSection\n          title=\"Aide\"\n          content={`Sélectionnés: ${selectedErrorIndices.length}/${expectedErrors} erreurs`}\n          levelColor={levelColor}\n          backgroundColor=\"#FAFBFC\"\n          style={styles.helpSection}\n        />\n      )}\n\n      {/* 💡 FEEDBACK SI NÉCESSAIRE */}\n      {showFeedback && exercise.explanation && (\n        <ContentSection\n          title=\"Explication\"\n          content={exercise.explanation}\n          levelColor=\"#ef4444\"\n          backgroundColor=\"#fef2f2\"\n          style={styles.feedbackSection}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default IdentifyErrorsMode;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\modes\\IdentifyErrorsMode\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[247,269],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// IdentifyErrorsMode/style.js - VERSION REFACTORISÉE (styles minimaux)\n\nimport { StyleSheet } from 'react-native';\n\n/**\n * 🎯 Styles ultra-simplifiés pour IdentifyErrorsMode\n * Focus sur la logique de sélection des mots\n */\nconst createStyles = (levelColor = \"#5E60CE\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      marginHorizontal: 16,\n      marginVertical: 8,\n    },\n\n    // =================== SECTIONS ===================\n    instructionSection: {\n      marginBottom: 16,\n    },\n    helpSection: {\n      marginTop: 16,\n    },\n    feedbackSection: {\n      marginTop: 16,\n    },\n\n    // =================== HERO CARD ===================\n    heroCard: {\n      marginVertical: 8,\n    },\n\n    // =================== MOTS CONTAINER ===================\n    wordsContainer: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      padding: 4,\n    },\n\n    // =================== MOTS INDIVIDUELS ===================\n    word: {\n      marginHorizontal: 4,\n      marginVertical: 6,\n      paddingHorizontal: 12,\n      paddingVertical: 8,\n      borderRadius: 8,\n      borderWidth: 1,\n      borderColor: \"transparent\",\n      backgroundColor: \"transparent\",\n    },\n    wordText: {\n      fontSize: 16,\n      color: \"#334155\",\n      fontWeight: \"500\",\n    },\n\n    // =================== ÉTATS FEEDBACK ===================\n    correctWord: {\n      backgroundColor: \"#f0fdf4\",\n      borderColor: \"#10b981\",\n      borderWidth: 2,\n    },\n    correctWordText: {\n      color: \"#10b981\",\n      fontWeight: \"700\",\n    },\n    \n    incorrectWord: {\n      backgroundColor: \"#fef2f2\",\n      borderColor: \"#ef4444\",\n      borderWidth: 2,\n    },\n    incorrectWordText: {\n      color: \"#ef4444\",\n      fontWeight: \"700\",\n    },\n\n    missedErrorWord: {\n      backgroundColor: \"#fef3c7\",\n      borderColor: \"#f59e0b\",\n      borderWidth: 2,\n    },\n    missedErrorWordText: {\n      color: \"#f59e0b\",\n      fontWeight: \"700\",\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\modes\\MultipleChoiceMode\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[90,101],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[119,124],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[123,129],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[129,147],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[178,192],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[240,260],"text":""},"desc":"Remove unused variable 'ContentSection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// MultipleChoiceMode/index.js - VERSION REFACTORISÉE (HeroCard + ContentSection)\n\nimport React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport HeroCard from \"../../../../../components/ui/HeroCard\";\nimport ContentSection from \"../../../../../components/ui/ContentSection\";\nimport createStyles from \"./style\";\n\n/**\n * ✅ MultipleChoiceMode - Version Refactorisée avec composants génériques\n * Remplace Card par HeroCard + ContentSection + choix simplifiés\n * \n * @param {Object} exercise - Exercice actuel\n * @param {number} selectedChoiceIndex - Index du choix sélectionné\n * @param {function} onSelectChoice - Callback pour sélectionner un choix\n * @param {boolean} showFeedback - Afficher le feedback\n * @param {string} levelColor - Couleur du niveau\n */\nconst MultipleChoiceMode = ({\n  exercise,\n  selectedChoiceIndex,\n  onSelectChoice,\n  showFeedback = false,\n  levelColor = \"#5E60CE\",\n}) => {\n  const styles = createStyles(levelColor);\n\n  if (!exercise) return null;\n\n  const choices = exercise.choices || [];\n  const correctChoiceIndex = exercise.correctChoiceIndex;\n\n  return (\n    <View style={styles.container}>\n      {/* 🎯 HERO SECTION - Texte original */}\n      <HeroCard \n        content={exercise.text}\n        fontSize={24}\n        levelColor={levelColor}\n        showUnderline={false}\n        style={styles.heroCard}\n      />\n      \n      {/* 📝 SECTION INSTRUCTIONS */}\n      <ContentSection\n        title=\"Instructions\"\n        content=\"Choisissez la version correcte parmi les options ci-dessous.\"\n        levelColor={levelColor}\n        backgroundColor=\"#F8F9FA\"\n        style={styles.instructionSection}\n      />\n\n      {/* ✅ CHOIX MULTIPLES */}\n      <View style={styles.choicesContainer}>\n        {choices.map((choice, index) => {\n          const isSelected = selectedChoiceIndex === index;\n          const isCorrect = showFeedback && index === correctChoiceIndex;\n          const isIncorrect = showFeedback && isSelected && index !== correctChoiceIndex;\n\n          return (\n            <TouchableOpacity\n              key={index}\n              style={[\n                styles.choiceOption,\n                isSelected && !showFeedback && {\n                  borderColor: levelColor,\n                  backgroundColor: `${levelColor}10`,\n                },\n                isCorrect && styles.correctChoice,\n                isIncorrect && styles.incorrectChoice,\n              ]}\n              onPress={() => !showFeedback && onSelectChoice(index)}\n              disabled={showFeedback}\n            >\n              <View style={styles.choiceContent}>\n                <View style={[\n                  styles.choiceIndicator,\n                  isSelected && !showFeedback && { backgroundColor: levelColor },\n                  isCorrect && styles.correctIndicator,\n                  isIncorrect && styles.incorrectIndicator,\n                ]}>\n                  <Text style={[\n                    styles.choiceIndicatorText,\n                    (isSelected && !showFeedback) || isCorrect || isIncorrect \n                      ? { color: 'white' } \n                      : { color: '#64748b' }\n                  ]}>\n                    {String.fromCharCode(65 + index)} {/* A, B, C, D */}\n                  </Text>\n                </View>\n                \n                <Text style={[\n                  styles.choiceText,\n                  isSelected && !showFeedback && { color: levelColor, fontWeight: '600' },\n                  isCorrect && styles.correctChoiceText,\n                  isIncorrect && styles.incorrectChoiceText,\n                ]}>\n                  {choice}\n                </Text>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n\n      {/* 💡 FEEDBACK SI NÉCESSAIRE */}\n      {showFeedback && exercise.explanation && (\n        <ContentSection\n          title=\"Explication\"\n          content={exercise.explanation}\n          levelColor={selectedChoiceIndex === correctChoiceIndex ? \"#10b981\" : \"#ef4444\"}\n          backgroundColor={selectedChoiceIndex === correctChoiceIndex ? \"#f0fdf4\" : \"#fef2f2\"}\n          style={styles.feedbackSection}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default MultipleChoiceMode;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\modes\\MultipleChoiceMode\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[261,283],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// MultipleChoiceMode/style.js - VERSION REFACTORISÉE (styles minimaux)\n\nimport { StyleSheet, Platform } from 'react-native';\n\n/**\n * 🎯 Styles ultra-simplifiés pour MultipleChoiceMode\n * Focus sur les choix multiples avec indicateurs\n */\nconst createStyles = (levelColor = \"#5E60CE\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      marginHorizontal: 16,\n      marginVertical: 8,\n    },\n\n    // =================== SECTIONS ===================\n    heroCard: {\n      marginBottom: 16,\n    },\n    instructionSection: {\n      marginBottom: 16,\n    },\n    feedbackSection: {\n      marginTop: 16,\n    },\n\n    // =================== CHOIX CONTAINER ===================\n    choicesContainer: {\n      marginVertical: 8,\n    },\n\n    // =================== CHOIX INDIVIDUELS ===================\n    choiceOption: {\n      backgroundColor: \"white\",\n      borderWidth: 1,\n      borderColor: \"#e2e8f0\",\n      borderRadius: 12,\n      marginBottom: 12,\n      ...Platform.select({\n        ios: {\n          shadowColor: '#64748b',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.1,\n          shadowRadius: 2,\n        },\n        android: {\n          elevation: 2,\n        },\n      }),\n    },\n\n    choiceContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: 16,\n    },\n\n    // =================== INDICATEURS (A, B, C, D) ===================\n    choiceIndicator: {\n      width: 32,\n      height: 32,\n      borderRadius: 16,\n      backgroundColor: '#f1f5f9',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: 16,\n    },\n    choiceIndicatorText: {\n      fontSize: 16,\n      fontWeight: '700',\n    },\n\n    // =================== TEXTE CHOIX ===================\n    choiceText: {\n      flex: 1,\n      fontSize: 16,\n      color: \"#334155\",\n      lineHeight: 24,\n    },\n\n    // =================== ÉTATS FEEDBACK ===================\n    correctChoice: {\n      backgroundColor: \"#f0fdf4\",\n      borderWidth: 2,\n      borderColor: \"#10b981\",\n    },\n    correctChoiceText: {\n      color: \"#10b981\",\n      fontWeight: \"600\",\n    },\n    correctIndicator: {\n      backgroundColor: \"#10b981\",\n    },\n\n    incorrectChoice: {\n      backgroundColor: \"#fef2f2\",\n      borderWidth: 2,\n      borderColor: \"#ef4444\",\n    },\n    incorrectChoiceText: {\n      color: \"#ef4444\",\n      fontWeight: \"600\",\n    },\n    incorrectIndicator: {\n      backgroundColor: \"#ef4444\",\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarExerciceRenderer\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[98,109],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[127,132],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[131,137],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[137,155],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TextInput' is defined but never used.","line":4,"column":40,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":49,"suggestions":[{"messageId":"removeVar","data":{"varName":"TextInput"},"fix":{"range":[155,166],"text":""},"desc":"Remove unused variable 'TextInput'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[190,244],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[245,291],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[299,313],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[358,378],"text":""},"desc":"Remove unused variable 'ContentSection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// GrammarExerciseRenderer/index.js - VERSION REFACTORISÉE avec HeroCard (71 → 50 lignes)\n\nimport React from \"react\";\nimport { View, Text, TouchableOpacity, TextInput } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport HeroCard from \"../../../../components/ui/HeroCard\";\nimport ContentSection from \"../../../../components/ui/ContentSection\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 GrammarExerciseRenderer - Version Refactorisée avec composants génériques\n * Utilise HeroCard pour la question principale\n * Design cohérent avec VocabularyWordCard et PhraseCard\n * 71 lignes → 50 lignes (-30% de code)\n */\nconst GrammarExerciseRenderer = ({\n  exercise,\n  selectedOption,\n  setSelectedOption,\n  inputText,\n  setInputText,\n  showFeedback,\n  isCorrect,\n  exerciseIndex,\n  attempts,\n}) => {\n  if (!exercise) return null;\n\n  const styles = createStyles();\n  const levelColor = \"#3b82f6\"; // Couleur Grammar\n\n  // Render pour un exercice à choix multiples\n  const renderMultipleChoiceExercise = () => (\n    <View style={styles.container}>\n      {/* 🎯 QUESTION HÉRO avec HeroCard générique */}\n      <HeroCard \n        content={exercise.question}\n        fontSize={24} // Adapté pour questions Grammar\n        levelColor={levelColor}\n        showUnderline={true}\n      />\n\n      {/* 📝 PHRASE EXEMPLE avec ContentSection */}\n      {exercise.sentence && (\n        <ContentSection\n          title=\"Complete the sentence\"\n          content={exercise.sentence.replace(\"___\", \"______\")}\n          levelColor={levelColor}\n          backgroundColor=\"#F8FAFC\"\n          isItalic={true}\n          showIcon={false}\n        />\n      )}\n\n      {/* 🎨 OPTIONS avec styles optimisés */}\n      <View style={styles.optionsSection}>\n        {exercise.options.map((option, index) => {\n          const isCorrectOption = index === exercise.answer || option === exercise.answer;\n          const isSelectedOption = selectedOption === index;\n          \n          return (\n            <TouchableOpacity\n              key={`option-${index}-${attempts}`}\n              style={styles.optionContainer}\n              onPress={() => !showFeedback && setSelectedOption(index)}\n              disabled={showFeedback && isCorrect}\n              activeOpacity={0.8}\n            >\n              <LinearGradient\n                colors={\n                  showFeedback && isCorrectOption\n                    ? ['#10B981', '#059669', '#047857'] // Vert pour correct\n                    : showFeedback && isSelectedOption && !isCorrectOption\n                    ? ['#EF4444', '#DC2626', '#B91C1C'] // Rouge pour incorrect\n                    : isSelectedOption\n                    ? [levelColor, `${levelColor}E6`, `${levelColor}CC`] // Bleu pour sélectionné\n                    : ['#FFFFFF', '#F8FAFC', '#F1F5F9'] // Neutre\n                }\n                start={{ x: 0, y: 0 }}\n                end={{ x: 1, y: 1 }}\n                style={styles.optionGradient}\n              >\n                <View style={styles.optionInner}>\n                  {/* Icône de statut */}\n                  <View style={styles.optionIconContainer}>\n                    {showFeedback && isCorrectOption ? (\n                      <Ionicons name=\"checkmark-circle\" size={20} color=\"white\" />\n                    ) : showFeedback && isSelectedOption && !isCorrectOption ? (\n                      <Ionicons name=\"close-circle\" size={20} color=\"white\" />\n                    ) : isSelectedOption ? (\n                      <Ionicons name=\"radio-button-on\" size={20} color=\"white\" />\n                    ) : (\n                      <Ionicons name=\"radio-button-off\" size={20} color=\"#9CA3AF\" />\n                    )}\n                  </View>\n\n                  {/* Texte de l'option */}\n                  <Text style={[\n                    styles.optionText,\n                    showFeedback && isCorrectOption && styles.correctOptionText,\n                    showFeedback && isSelectedOption && !isCorrectOption && styles.incorrectOptionText,\n                    isSelectedOption && !showFeedback && styles.selectedOptionText,\n                  ]}>\n                    {option}\n                  </Text>\n                </View>\n              </LinearGradient>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </View>\n  );\n\n  // Render pour un exercice à remplir les blancs\n  const renderFillBlankExercise = () => (\n    <View style={styles.container}>\n      {/* 🎯 QUESTION HÉRO avec HeroCard générique */}\n      <HeroCard \n        content={exercise.question}\n        fontSize={24}\n        levelColor={levelColor}\n        showUnderline={true}\n      />\n\n      {/* 📝 PHRASE AVEC INPUT intégré */}\n      <ContentSection\n        title=\"Complete the sentence\"\n        content={exercise.sentence || \"Fill in the blank\"}\n        levelColor={levelColor}\n        backgroundColor=\"#F8FAFC\"\n        showIcon={false}\n      />\n\n      {/* INPUT personnalisé pour fill-in-the-blank */}\n      <View style={styles.inputSection}>\n        <TextInput\n          key={`fill-blank-input-${exerciseIndex}-${attempts}`}\n          style={[\n            styles.fillBlankInput,\n            showFeedback && inputText.trim().toLowerCase() === exercise.answer.toLowerCase()\n              ? styles.correctInput\n              : showFeedback && !isCorrect\n              ? styles.incorrectInput\n              : styles.neutralInput,\n          ]}\n          value={inputText}\n          onChangeText={(text) => !showFeedback && setInputText(text)}\n          placeholder=\"Type your answer...\"\n          editable={!showFeedback || !isCorrect}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n      </View>\n    </View>\n  );\n\n  // Render pour un exercice de transformation\n  const renderTransformationExercise = () => (\n    <View style={styles.container}>\n      {/* 🎯 QUESTION HÉRO avec HeroCard générique */}\n      <HeroCard \n        content={exercise.question}\n        fontSize={24}\n        levelColor={levelColor}\n        showUnderline={true}\n      />\n\n      {/* 📝 PHRASE ORIGINALE */}\n      {exercise.sentence && (\n        <ContentSection\n          title=\"Transform this sentence\"\n          content={exercise.sentence}\n          levelColor={levelColor}\n          backgroundColor=\"#F8FAFC\"\n          isItalic={true}\n          showIcon={false}\n        />\n      )}\n\n      {/* INPUT de transformation stylé */}\n      <View style={styles.inputSection}>\n        <TextInput\n          key={`transformation-input-${exerciseIndex}-${attempts}`}\n          style={[\n            styles.transformationInput,\n            showFeedback && inputText.trim().toLowerCase() === exercise.answer.toLowerCase()\n              ? styles.correctInput\n              : showFeedback && !isCorrect\n              ? styles.incorrectInput\n              : styles.neutralInput,\n          ]}\n          value={inputText}\n          onChangeText={(text) => !showFeedback && setInputText(text)}\n          placeholder=\"Write your transformed sentence...\"\n          editable={!showFeedback || !isCorrect}\n          multiline\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n      </View>\n    </View>\n  );\n\n  // Déterminer quel type d'exercice afficher\n  if (exercise.type === \"fillInTheBlank\" && exercise.options) {\n    return renderMultipleChoiceExercise();\n  } else if (exercise.type === \"fillInTheBlank\") {\n    return renderFillBlankExercise();\n  } else if (exercise.type === \"transformation\") {\n    return renderTransformationExercise();\n  }\n\n  return null;\n};\n\nexport default GrammarExerciseRenderer;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarExerciceRenderer\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarFeedback\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[96,107],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[123,143],"text":""},"desc":"Remove unused variable 'ContentSection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// GrammarFeedback/index.js - VERSION REFACTORISÉE avec ContentSection (75 → 15 lignes)\n\nimport React from \"react\";\nimport ContentSection from \"../../../../components/ui/ContentSection\";\n\n/**\n * 💬 GrammarFeedback - Version Refactorisée avec ContentSection générique\n * 75 lignes → 15 lignes (-80% de code)\n * Design moderne et cohérent avec le reste de l'app\n * États visuels élégants (correct/incorrect)\n * \n * @param {boolean} isVisible - Si le feedback est visible\n * @param {boolean} isCorrect - Si la réponse est correcte\n * @param {string} explanation - Explication de la règle\n * @param {string|number} correctAnswer - Réponse correcte\n * @param {number} attempts - Nombre de tentatives\n */\nconst GrammarFeedback = ({\n  isVisible,\n  isCorrect,\n  explanation,\n  correctAnswer,\n  attempts,\n}) => {\n  if (!isVisible) return null;\n\n  // Formater la réponse correcte pour l'affichage\n  const formatCorrectAnswer = () => {\n    if (!correctAnswer) return \"\";\n\n    // Si la réponse contient des alternatives (séparées par des /)\n    if (typeof correctAnswer === \"string\" && correctAnswer.includes(\"/\")) {\n      return correctAnswer\n        .split(\"/\")\n        .map((ans) => ans.trim())\n        .join(\" ou \");\n    }\n\n    return correctAnswer;\n  };\n\n  // Déterminer le titre selon le contexte\n  const getTitle = () => {\n    if (isCorrect) return \"Correct!\";\n    return attempts === 1 ? \"Try Again!\" : \"Incorrect!\";\n  };\n\n  // Déterminer le contenu selon le contexte\n  const getContent = () => {\n    if (isCorrect) {\n      return explanation || \"Well done! 🎉\";\n    }\n    \n    if (attempts > 1) {\n      return `The correct answer is: ${formatCorrectAnswer()}`;\n    }\n    \n    return \"You can try once more. Check spelling and punctuation or try another formulation.\";\n  };\n\n  // Couleur selon l'état\n  const levelColor = isCorrect ? \"#10B981\" : \"#EF4444\";\n  const backgroundColor = isCorrect ? \"#F0FDF4\" : \"#FEF2F2\";\n\n  return (\n    <ContentSection\n      title={getTitle()}\n      content={getContent()}\n      levelColor={levelColor}\n      backgroundColor={backgroundColor}\n      showIcon={true}\n      isItalic={false}\n    />\n  );\n};\n\nexport default GrammarFeedback;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[41,52],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseHeader' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseHeader"},"fix":{"range":[68,88],"text":""},"desc":"Remove unused variable 'ExerciseHeader'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\n// 3. GrammarHeader - MIS À JOUR\nimport React from \"react\";\nimport ExerciseHeader from \"../../../../components/exercise-common/ExerciseHeader\";\n\nconst GrammarHeader = ({ level, onBackPress }) => {\n  return (\n    <ExerciseHeader\n      title=\"Grammaire\"\n      level={level}\n      exerciseType=\"grammar\" // ✅ NOUVEAU\n      onClose={onBackPress}\n      backIcon=\"arrow-back\"\n    />\n  );\n};\n\nexport default GrammarHeader;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarNavigation\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[78,89],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[98,134],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[142,165],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'attempts' is defined but never used.","line":25,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":25,"endColumn":11,"suggestions":[{"messageId":"removeVar","data":{"varName":"attempts"},"fix":{"range":[688,700],"text":""},"desc":"Remove unused variable 'attempts'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/screens/exercises/grammar/GrammarNavigation/index.js\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\nimport styles from \"./style\";\n\n/**\n * 🎯 GrammarNavigation - Version Simple avec NavigationButtons\n * - Réutilise le composant générique NavigationButtons\n * - Logique simplifiée et cohérente avec Vocabulaire\n * - Pas de code dupliqué\n * - Design unifié\n */\nconst GrammarNavigation = ({\n  showFeedback,\n  isCorrect,\n  canCheckAnswer,\n  onCheckAnswer,\n  onPreviousExercise,\n  onNextExercise,\n  onRetryExercise,\n  onSkipExercise,\n  isFirstExercise,\n  isLastExercise,\n  attempts,\n  levelColor = \"#3b82f6\",\n}) => {\n\n  // 🎯 LOGIQUE SIMPLIFIÉE - 3 modes clairs\n  \n  // Mode 1: Pas encore vérifié → Check Answer\n  if (!showFeedback) {\n    return (\n      <View style={styles.container}>\n        <NavigationButtons\n          onNext={onCheckAnswer}\n          disableNext={!canCheckAnswer}\n          disablePrevious={true} // Pas de Previous pendant check\n          showSkip={false}\n          currentIndex={0}\n          totalCount={1}\n          primaryColor={levelColor}\n          buttonLabels={{\n            next: \"Check Answer\",\n            previous: \"\",\n            skip: \"\",\n            finish: \"\",\n          }}\n          variant=\"centered\" // Juste le bouton Check centré\n        />\n      </View>\n    );\n  }\n\n  // Mode 2: Réponse correcte → Navigation normale\n  if (isCorrect) {\n    return (\n      <View style={styles.container}>\n        <NavigationButtons\n          onNext={onNextExercise}\n          onPrevious={onPreviousExercise}\n          disablePrevious={isFirstExercise}\n          disableNext={false}\n          showSkip={false}\n          currentIndex={isLastExercise ? 1 : 0}\n          totalCount={2}\n          primaryColor={levelColor}\n          buttonLabels={{\n            next: isLastExercise ? \"Finish\" : \"Next\",\n            previous: \"Previous\",\n            skip: \"\",\n            finish: \"Finish\",\n          }}\n          variant=\"standard\" // Navigation standard comme Vocabulaire\n        />\n      </View>\n    );\n  }\n\n  // Mode 3: Réponse incorrecte → Try Again + Skip\n  return (\n    <View style={styles.container}>\n      <NavigationButtons\n        onNext={onSkipExercise}\n        onPrevious={onRetryExercise}\n        disablePrevious={false}\n        disableNext={false}\n        showSkip={false}\n        currentIndex={0}\n        totalCount={1}\n        primaryColor={levelColor}\n        buttonLabels={{\n          next: \"Skip\",\n          previous: \"Try Again\",\n          skip: \"\",\n          finish: \"\",\n        }}\n        variant=\"standard\" // Try Again à gauche, Skip à droite\n      />\n    </View>\n  );\n};\n\nexport default GrammarNavigation;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarNavigation\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarProgress\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[78,84],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressCard' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressCard"},"fix":{"range":[118,136],"text":""},"desc":"Remove unused variable 'ProgressCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'index' is defined but never used.","line":66,"column":50,"nodeType":"Identifier","messageId":"unusedVar","endLine":66,"endColumn":55,"suggestions":[{"messageId":"removeVar","data":{"varName":"index"},"fix":{"range":[2065,2072],"text":""},"desc":"Remove unused variable 'index'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'debugData' is assigned a value but never used.","line":75,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":75,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"debugData"},"fix":{"range":[2327,3019],"text":""},"desc":"Remove unused variable 'debugData'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// GrammarProgress/index.js - VERSION TOTALEMENT RECODÉE AVEC useMemo\n\nimport React, { useMemo } from \"react\";\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\nimport {\n  calculateTotalExercises,\n  calculateCompletedExercisesCount,\n  calculateTotalProgress,\n  calculateRuleProgress,\n} from \"../../../../utils/grammar/grammarStats\";\n\n/**\n * 📊 GrammarProgress - Version totalement recodée avec mémorisation complète\n * ✅ Évite les boucles infinies avec useMemo partout\n * ✅ Détecte automatiquement la structure des données\n * ✅ Logs conditionnels en développement uniquement\n */\nconst GrammarProgress = ({\n  grammarData,\n  completedExercises,\n  levelColor,\n  expanded = false,\n  onToggleExpand,\n  onRulePress,\n}) => {\n  \n  // ✅ MÉMORISER la détection automatique de la structure\n  const dataArray = useMemo(() => {\n    if (!grammarData) return [];\n    \n    // Si c'est déjà un tableau (liste de rules)\n    if (Array.isArray(grammarData)) {\n      return grammarData;\n    }\n    \n    // Si c'est un objet avec différentes propriétés possibles\n    if (typeof grammarData === 'object') {\n      return grammarData.rules || \n             grammarData.categories || \n             grammarData.exercises || \n             grammarData.grammar || \n             grammarData.items || \n             [];\n    }\n    \n    return [];\n  }, [grammarData]);\n  \n  // ✅ MÉMORISER tous les calculs statistiques\n  const statsData = useMemo(() => {\n    const totalExercisesCount = calculateTotalExercises(dataArray);\n    const completedExercisesCount = calculateCompletedExercisesCount(completedExercises);\n    const totalProgress = calculateTotalProgress(dataArray, completedExercises);\n    const ruleProgressData = calculateRuleProgress(dataArray, completedExercises);\n\n    return {\n      totalExercisesCount,\n      completedExercisesCount,\n      totalProgress,\n      ruleProgressData\n    };\n  }, [dataArray, completedExercises]);\n\n  // ✅ MÉMORISER la transformation pour ProgressCard\n  const formattedRuleData = useMemo(() => {\n    return statsData.ruleProgressData.map((rule, index) => ({\n      title: rule.title,\n      completed: rule.completedExercises,\n      total: rule.totalExercises,\n      progress: rule.progress,\n    }));\n  }, [statsData.ruleProgressData]);\n\n  // ✅ MÉMORISER les données de debug (seulement en développement)\n  const debugData = useMemo(() => {\n    if (process.env.NODE_ENV !== 'development') return null;\n    \n    return {\n      isGrammarDataArray: Array.isArray(grammarData),\n      hasRules: !!(grammarData?.rules),\n      hasCategories: !!(grammarData?.categories),\n      hasExercises: !!(grammarData?.exercises),\n      dataArrayLength: dataArray.length,\n      totalExercisesCount: statsData.totalExercisesCount,\n      completedExercisesCount: statsData.completedExercisesCount,\n      totalProgress: statsData.totalProgress,\n      grammarDataKeys: grammarData && typeof grammarData === 'object' ? Object.keys(grammarData) : \"not object or null\"\n    };\n  }, [grammarData, dataArray.length, statsData]);\n\n  // ✅ CORRECTION FINALE : Pas de log dans le render !\n  // Le log était dans le render, il se déclenchait à chaque fois\n  // On peut l'ajouter dans un useEffect si vraiment nécessaire\n\n  return (\n    <ProgressCard\n      title=\"Progression\"\n      progress={statsData.totalProgress}\n      completed={statsData.completedExercisesCount}\n      total={statsData.totalExercisesCount}\n      unit=\"exercices\"\n      levelColor={levelColor}\n      expandable={true}\n      expanded={expanded}\n      onToggleExpand={onToggleExpand}\n      categoryData={formattedRuleData}\n      onCategoryPress={onRulePress}\n    />\n  );\n};\n\nexport default GrammarProgress;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarRuleContent\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[99,105],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[142,147],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[146,152],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[152,170],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[204,258],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[259,305],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[313,333],"text":""},"desc":"Remove unused variable 'ContentSection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// GrammarRuleContent/index.js - VERSION REFACTORISÉE avec ContentSection (90 → 50 lignes)\n\nimport React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, Animated } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons } from '@expo/vector-icons';\nimport ContentSection from '../../../../components/ui/ContentSection';\nimport createStyles from './style';\n\n/**\n * 📚 GrammarRuleContent - Version Refactorisée avec ContentSection\n * Garde le header collapsible custom (spécifique à Grammar)\n * Utilise ContentSection pour explication, exemples et règles\n * 90 lignes → 50 lignes (-45% de code)\n * Design cohérent avec les autres composants\n */\nconst GrammarRuleContent = ({ rule, levelColor = \"#3b82f6\" }) => {\n  const styles = createStyles(levelColor);\n  const [expanded, setExpanded] = useState(false);\n  const [expandAnim] = useState(new Animated.Value(0));\n\n  if (!rule) return null;\n\n  // Animation d'expansion (garde la logique custom)\n  const toggleExpanded = () => {\n    const toValue = expanded ? 0 : 1;\n    Animated.spring(expandAnim, {\n      toValue,\n      useNativeDriver: false,\n      tension: 100,\n      friction: 8,\n    }).start();\n    setExpanded(!expanded);\n  };\n\n  // Hauteur animée pour le contenu\n  const contentHeight = expandAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 600], // Augmenté pour les ContentSections\n  });\n\n  // Rotation de l'icône\n  const iconRotation = expandAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  return (\n    <View style={styles.container}>\n      {/* 📖 HEADER COLLAPSIBLE - Garde le design custom */}\n      <TouchableOpacity\n        style={styles.headerContainer}\n        onPress={toggleExpanded}\n        activeOpacity={0.8}\n      >\n        <LinearGradient\n          colors={[`${levelColor}08`, `${levelColor}04`, 'transparent']}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 1 }}\n          style={styles.headerGradient}\n        >\n          <View style={styles.headerContent}>\n            <View style={styles.headerLeft}>\n              <View style={[styles.ruleIcon, { backgroundColor: `${levelColor}15` }]}>\n                <Ionicons name=\"book-outline\" size={16} color={levelColor} />\n              </View>\n              <Text style={styles.ruleTitle} numberOfLines={1}>\n                {rule.title}\n              </Text>\n            </View>\n\n            <View style={styles.headerRight}>\n              <Text style={[styles.hintText, { color: levelColor }]}>\n                {expanded ? 'Hide' : 'Show'} rule\n              </Text>\n              <Animated.View style={{ transform: [{ rotate: iconRotation }] }}>\n                <Ionicons name=\"chevron-down\" size={16} color={levelColor} />\n              </Animated.View>\n            </View>\n          </View>\n        </LinearGradient>\n      </TouchableOpacity>\n\n      {/* 📚 CONTENU EXPANSIBLE avec ContentSection */}\n      <Animated.View \n        style={[\n          styles.contentWrapper,\n          { \n            height: contentHeight,\n            opacity: expandAnim,\n          }\n        ]}\n      >\n        <View style={styles.contentContainer}>\n          {/* 💡 EXPLICATION avec ContentSection */}\n          <ContentSection\n            title=\"Explanation\"\n            content={rule.explanation}\n            levelColor={levelColor}\n            backgroundColor=\"white\"\n            showIcon={true}\n          />\n\n          {/* 📝 EXEMPLES avec ContentSection */}\n          {rule.examples && rule.examples.length > 0 && (\n            <ContentSection\n              title=\"Examples\"\n              content={rule.examples.map((example, index) => \n                `${index + 1}. ${example.english}\\n   → ${example.french}`\n              ).join('\\n\\n')}\n              levelColor={levelColor}\n              backgroundColor=\"#F8FAFC\"\n              showIcon={true}\n              isItalic={false}\n            />\n          )}\n\n          {/* 📋 RÈGLES avec ContentSection */}\n          {rule.rules && rule.rules.length > 0 && (\n            <ContentSection\n              title=\"Rules\"\n              content={rule.rules.map((ruleItem, index) => \n                `${index + 1}. ${ruleItem}`\n              ).join('\\n\\n')}\n              levelColor={levelColor}\n              backgroundColor=\"#F1F5F9\"\n              showIcon={true}\n              isItalic={false}\n            />\n          )}\n        </View>\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default GrammarRuleContent;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarRuleContent\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":11,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[386,408],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// GrammarRuleContent/style.js - VERSION REFACTORISÉE (200 → 80 lignes)\n\nimport { StyleSheet, Platform } from 'react-native';\n\n/**\n * 📚 Styles optimisés pour GrammarRuleContent\n * Ancien : 200 lignes avec sections custom dupliquées\n * Nouveau : 80 lignes - ContentSection gère explication, exemples, règles\n * Focus sur le header collapsible unique à Grammar\n */\nconst createStyles = (levelColor = \"#3b82f6\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      marginHorizontal: 16,\n      marginVertical: 8,\n    },\n\n    // =================== HEADER COLLAPSIBLE (garde le custom) ===================\n    headerContainer: {\n      borderRadius: 12,\n      overflow: 'hidden',\n      // Ombre subtile pour le header\n      ...Platform.select({\n        ios: {\n          shadowColor: '#000',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.05,\n          shadowRadius: 4,\n        },\n        android: {\n          elevation: 1,\n        },\n      }),\n    },\n    headerGradient: {\n      backgroundColor: 'white',\n      borderWidth: 1,\n      borderColor: '#F1F5F9',\n    },\n    headerContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      paddingVertical: 12,\n      paddingHorizontal: 16,\n    },\n\n    // =================== HEADER LEFT ===================\n    headerLeft: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n    },\n    ruleIcon: {\n      width: 24,\n      height: 24,\n      borderRadius: 6,\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: 10,\n    },\n    ruleTitle: {\n      fontSize: 14,\n      fontWeight: '600',\n      color: '#374151',\n      flex: 1,\n      letterSpacing: 0.2,\n    },\n\n    // =================== HEADER RIGHT ===================\n    headerRight: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    hintText: {\n      fontSize: 12,\n      fontWeight: '500',\n      marginRight: 6,\n      letterSpacing: 0.3,\n    },\n\n    // =================== CONTENU EXPANSIBLE ===================\n    contentWrapper: {\n      overflow: 'hidden',\n      backgroundColor: '#FAFBFC',\n      marginTop: 4,\n      borderRadius: 12,\n      borderWidth: 1,\n      borderColor: '#F1F5F9',\n    },\n    contentContainer: {\n      padding: 16,\n      gap: 16, // Espacement entre les ContentSections\n    },\n\n    // 🧹 SUPPRIMÉ : explanationSection, section, sectionHeader, etc.\n    // Tous ces styles sont maintenant dans ContentSection générique !\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarRuleSelector\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'CategorySelector' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"CategorySelector"},"fix":{"range":[34,56],"text":""},"desc":"Remove unused variable 'CategorySelector'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport CategorySelector from \"../../../../components/exercise-common/CategorySelector\";\n\n/**\n * Sélecteur de règles grammaticales réutilisant le CategorySelector générique\n *\n * @param {Array} rules - Liste des règles disponibles\n * @param {number} selectedIndex - Index de la règle sélectionnée\n * @param {function} onSelectRule - Fonction à appeler lors de la sélection d'une règle\n * @param {string} levelColor - Couleur du niveau actuel\n */\nconst GrammarRuleSelector = ({\n  rules,\n  selectedIndex,\n  onSelectRule,\n  levelColor = \"#3b82f6\",\n}) => {\n  // Transformer les règles pour correspondre au format du CategorySelector\n  const formattedRules = rules.map((rule, index) => ({\n    id: index,\n    name: rule.title,\n  }));\n\n  return (\n    <CategorySelector\n      categories={formattedRules}\n      selectedCategory={selectedIndex === undefined ? 0 : selectedIndex}\n      onSelectCategory={onSelectRule}\n      primaryColor={levelColor}\n    />\n  );\n};\n\nexport default GrammarRuleSelector;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\hooks\\useGrammar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[65,71],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'useEffect' is defined but never used.","line":3,"column":26,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":35,"suggestions":[{"messageId":"removeVar","data":{"varName":"useEffect"},"fix":{"range":[81,92],"text":""},"desc":"Remove unused variable 'useEffect'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[131,136],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[135,154],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":9,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[292,302],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GrammarHeader' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"GrammarHeader"},"fix":{"range":[395,414],"text":""},"desc":"Remove unused variable 'GrammarHeader'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GrammarRuleSelector' is defined but never used.","line":13,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"GrammarRuleSelector"},"fix":{"range":[440,465],"text":""},"desc":"Remove unused variable 'GrammarRuleSelector'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GrammarProgress' is defined but never used.","line":14,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"GrammarProgress"},"fix":{"range":[497,518],"text":""},"desc":"Remove unused variable 'GrammarProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GrammarRuleContent' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"GrammarRuleContent"},"fix":{"range":[546,570],"text":""},"desc":"Remove unused variable 'GrammarRuleContent'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GrammarExerciseRenderer' is defined but never used.","line":16,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":31,"suggestions":[{"messageId":"removeVar","data":{"varName":"GrammarExerciseRenderer"},"fix":{"range":[601,630],"text":""},"desc":"Remove unused variable 'GrammarExerciseRenderer'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GrammarFeedback' is defined but never used.","line":17,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"GrammarFeedback"},"fix":{"range":[666,687],"text":""},"desc":"Remove unused variable 'GrammarFeedback'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GrammarNavigation' is defined but never used.","line":18,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"GrammarNavigation"},"fix":{"range":[715,738],"text":""},"desc":"Remove unused variable 'GrammarNavigation'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'saveActivity' is assigned a value but never used.","line":39,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":39,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"saveActivity"},"fix":{"range":[1460,1503],"text":""},"desc":"Remove unused variable 'saveActivity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'totalExercises' is assigned a value but never used.","line":61,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":61,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"totalExercises"},"fix":{"range":[1965,1985],"text":""},"desc":"Remove unused variable 'totalExercises'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'progress' is assigned a value but never used.","line":65,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":65,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"progress"},"fix":{"range":[2046,2060],"text":""},"desc":"Remove unused variable 'progress'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// GrammarExercise/index.js - VERSION TOTALEMENT RECODÉE\n\nimport React, { useMemo, useEffect, useCallback } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\n\n// Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\n\n// Components\nimport GrammarHeader from \"./GrammarHeader\";\nimport GrammarRuleSelector from \"./GrammarRuleSelector\";\nimport GrammarProgress from \"./GrammarProgress\";\nimport GrammarRuleContent from \"./GrammarRuleContent\";\nimport GrammarExerciseRenderer from \"./GrammarExerciceRenderer\";\nimport GrammarFeedback from \"./GrammarFeedback\";\nimport GrammarNavigation from \"./GrammarNavigation\";\n\n// Hook & Utils\nimport useGrammar from \"./hooks/useGrammar\";\nimport useLastActivity from \"../../../hooks/useLastActivity\";\nimport { getGrammarData, getLevelColor } from \"../../../utils/grammar/grammarDataHelper\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 GrammarExercise - VERSION TOTALEMENT RECODÉE AVEC OPTIMISATIONS COMPLÈTES\n * ✅ Mémorisation complète avec useMemo et useCallback\n * ✅ useEffect optimisé pour saveActivity\n * ✅ Gestion des handlers mémorisés\n * ✅ Performance maximale\n */\nconst GrammarExercise = ({ route }) => {\n  const navigation = useNavigation();\n  const { level = \"A1\" } = route?.params || {};\n  const styles = createStyles();\n\n  // Hook pour sauvegarder l'activité\n  const { saveActivity } = useLastActivity();\n\n  // ✅ MÉMORISER les données principales\n  const levelColor = useMemo(() => getLevelColor(level), [level]);\n  const grammarData = useMemo(() => getGrammarData(level), [level]);\n\n  // Hook unifié\n  const {\n    ruleIndex,\n    exerciseIndex,\n    selectedOption,\n    setSelectedOption,\n    inputText,\n    setInputText,\n    showFeedback,\n    isCorrect,\n    attempts,\n    completedExercises,\n    loaded,\n    showDetailedProgress,\n    currentRule,\n    currentExercise,\n    totalExercises,\n    canCheckAnswer,\n    isFirstExercise,\n    isLastExercise,\n    progress,\n    changeRule,\n    submitAnswer,\n    nextExercise,\n    previousExercise,\n    retryExercise,\n    toggleDetailedProgress,\n  } = useGrammar(grammarData, level);\n\n  // ✅ CORRECTION FINALE : Suppression de la double sauvegarde\n  // Le hook useGrammar gère déjà la sauvegarde, pas besoin de doublon\n  // Si on veut vraiment sauvegarder l'activité, on peut le faire à des moments spécifiques\n  // comme quand on change de règle ou termine un exercice\n\n  // ✅ TOUS LES HANDLERS MÉMORISÉS pour éviter les re-renders\nconst handleBackPress = useCallback(() => {\n  router.push({\n    pathname: \"/(tabs)/exerciseSelection\",\n    params: { level }\n  });\n}, [level]);\n  \n  const handleCheckAnswer = useCallback(() => {\n    submitAnswer();\n  }, [submitAnswer]);\n  \n  const handleNextExercise = useCallback(() => {\n    if (!nextExercise()) {\n      // All exercises completed\n      navigation.goBack();\n    }\n  }, [nextExercise, navigation]);\n\n  const handlePreviousExercise = useCallback(() => {\n    previousExercise();\n  }, [previousExercise]);\n\n  const handleRetryExercise = useCallback(() => {\n    retryExercise();\n  }, [retryExercise]);\n\n  const handleSkipExercise = useCallback(() => {\n    handleNextExercise();\n  }, [handleNextExercise]);\n\n  const handleRuleChange = useCallback((index) => {\n    changeRule(index);\n  }, [changeRule]);\n\n  const handleRuleProgressPress = useCallback((index) => {\n    changeRule(index);\n  }, [changeRule]);\n\n  const handleToggleProgressDetails = useCallback(() => {\n    toggleDetailedProgress();\n  }, [toggleDetailedProgress]);\n\n  // ✅ MÉMORISER les conditions de rendu\n  const isLoading = useMemo(() => {\n    return !loaded || !grammarData.length;\n  }, [loaded, grammarData.length]);\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} />\n        </View>\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      withScrollView\n      backgroundColor=\"#f8fafc\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      scrollViewProps={{\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: styles.scrollContent,\n      }}\n    >\n      {/* Header */}\n      <GrammarHeader\n        level={level}\n        onBackPress={handleBackPress}\n      />\n\n      {/* Rule Selector */}\n      <GrammarRuleSelector\n        rules={grammarData}\n        selectedIndex={ruleIndex}\n        onSelectRule={handleRuleChange}\n        levelColor={levelColor}\n      />\n\n      {/* Progress */}\n      <GrammarProgress\n        grammarData={grammarData}\n        completedExercises={completedExercises}\n        levelColor={levelColor}\n        expanded={showDetailedProgress}\n        onToggleExpand={handleToggleProgressDetails}\n        onRulePress={handleRuleProgressPress}\n      />\n\n      {/* Rule Content */}\n      <GrammarRuleContent \n        rule={currentRule} \n        levelColor={levelColor}\n      />\n\n      {/* Exercise Renderer */}\n      {currentExercise && (\n        <View key={`exercise-${exerciseIndex}-${attempts}`}>\n          <GrammarExerciseRenderer\n            exercise={currentExercise}\n            selectedOption={selectedOption}\n            setSelectedOption={setSelectedOption}\n            inputText={inputText}\n            setInputText={setInputText}\n            showFeedback={showFeedback}\n            isCorrect={isCorrect}\n            exerciseIndex={exerciseIndex}\n            attempts={attempts}\n          />\n        </View>\n      )}\n\n      {/* Feedback */}\n      <GrammarFeedback\n        isVisible={showFeedback}\n        isCorrect={isCorrect}\n        explanation={currentExercise?.explanation}\n        correctAnswer={currentExercise?.answer}\n        attempts={attempts}\n      />\n\n      {/* Navigation */}\n      <GrammarNavigation\n        showFeedback={showFeedback}\n        isCorrect={isCorrect}\n        canCheckAnswer={canCheckAnswer}\n        onCheckAnswer={handleCheckAnswer}\n        onPreviousExercise={handlePreviousExercise}\n        onNextExercise={handleNextExercise}\n        onRetryExercise={handleRetryExercise}\n        onSkipExercise={handleSkipExercise}\n        isFirstExercise={isFirstExercise}\n        isLastExercise={isLastExercise}\n        attempts={attempts}\n        levelColor={levelColor}\n      />\n    </Container>\n  );\n};\n\nexport default GrammarExercise;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\AssessmentHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseHeader' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseHeader"},"fix":{"range":[34,54],"text":""},"desc":"Remove unused variable 'ExerciseHeader'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport ExerciseHeader from \"../../../../components/exercise-common/ExerciseHeader\";\n\nconst AssessmentHeader = ({ level, onBackPress }) => {\n  return (\n    <ExerciseHeader\n      title=\"Évaluation\"\n      level={level}\n      exerciseType=\"assessment\" // ✅ NOUVEAU\n      onClose={onBackPress}\n      backIcon=\"arrow-back\"\n    />\n  );\n};\n\nexport default AssessmentHeader;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\AssessmentNavigation\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[87,98],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[116,121],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[120,138],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[138,144],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[175,198],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// AssessmentNavigation/index.js - VERSION REFACTORISÉE avec NavigationButtons\n\nimport React from \"react\";\nimport { View, TouchableOpacity, Text } from \"react-native\";\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 AssessmentNavigation - Version Refactorisée\n * Utilise NavigationButtons pour la navigation + bouton Check Answer custom\n * \n * @param {boolean} showFeedback - Afficher le feedback ou non\n * @param {number} selectedAnswer - Index de la réponse sélectionnée\n * @param {boolean} isLastQuestionInSection - Dernière question de la section\n * @param {boolean} canGoPrevious - Peut aller en arrière\n * @param {string} levelColor - Couleur du niveau\n * @param {function} onValidateAnswer - Valider la réponse\n * @param {function} onTryAgain - Réessayer\n * @param {function} onNext - Question suivante\n * @param {function} onPrevious - Question précédente\n */\nconst AssessmentNavigation = ({\n  showFeedback,\n  selectedAnswer,\n  isLastQuestionInSection,\n  canGoPrevious,\n  levelColor = \"#3b82f6\",\n  onValidateAnswer,\n  onTryAgain,\n  onNext,\n  onPrevious,\n}) => {\n  const styles = createStyles(levelColor);\n\n  // Phase 1: Check Answer (avant feedback)\n  if (!showFeedback) {\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          style={[\n            styles.checkButton,\n            selectedAnswer === null && styles.disabledButton,\n            { backgroundColor: selectedAnswer === null ? \"#cbd5e1\" : levelColor },\n          ]}\n          onPress={onValidateAnswer}\n          disabled={selectedAnswer === null}\n          activeOpacity={0.8}\n        >\n          <Text style={styles.checkButtonText}>Check Answer</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  // Phase 2: Try Again + Next (après feedback)\n  return (\n    <View style={styles.container}>\n      <View style={styles.feedbackActionsRow}>\n        {/* Bouton Try Again */}\n        <TouchableOpacity\n          style={[styles.tryAgainButton, { borderColor: levelColor }]}\n          onPress={onTryAgain}\n          activeOpacity={0.7}\n        >\n          <Text style={[styles.tryAgainButtonText, { color: levelColor }]}>\n            Try Again\n          </Text>\n        </TouchableOpacity>\n\n        {/* Bouton Next (utilise NavigationButtons) */}\n        <View style={styles.nextButtonContainer}>\n          <NavigationButtons\n            onNext={onNext}\n            onPrevious={canGoPrevious ? onPrevious : undefined}\n            disablePrevious={!canGoPrevious}\n            disableNext={false}\n            primaryColor={levelColor}\n            isLast={false} // Assessment n'a pas de \"finish\"\n            buttonLabels={{\n              next: isLastQuestionInSection ? \"Next Section\" : \"Next Question\",\n              previous: \"Previous\"\n            }}\n            layout=\"minimal\" // Nouveau prop pour layout réduit\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default AssessmentNavigation;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\AssessmentNavigation\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[225,247],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// AssessmentNavigation/style.js\n\nimport { StyleSheet, Platform } from \"react-native\";\n\n/**\n * 🎯 Styles pour AssessmentNavigation\n * Mélange bouton Check Answer custom + NavigationButtons générique\n */\nconst createStyles = (levelColor = \"#3b82f6\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      backgroundColor: 'white',\n      borderTopWidth: 1,\n      borderTopColor: '#f1f5f9',\n      paddingHorizontal: 20,\n      paddingVertical: 16,\n      paddingBottom: Platform.OS === 'ios' ? 34 : 16, // Safe area bottom\n    },\n\n    // =================== BOUTON CHECK ANSWER ===================\n    checkButton: {\n      borderRadius: 12,\n      paddingVertical: 16,\n      alignItems: 'center',\n      justifyContent: 'center',\n      // Ombre\n      ...Platform.select({\n        ios: {\n          shadowColor: '#000',\n          shadowOffset: { width: 0, height: 2 },\n          shadowOpacity: 0.1,\n          shadowRadius: 4,\n        },\n        android: {\n          elevation: 3,\n        },\n      }),\n    },\n\n    disabledButton: {\n      opacity: 0.6,\n    },\n\n    checkButtonText: {\n      fontSize: 16,\n      fontWeight: '700',\n      color: 'white',\n      letterSpacing: 0.3,\n    },\n\n    // =================== ACTIONS FEEDBACK ===================\n    feedbackActionsRow: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      gap: 12,\n    },\n\n    // =================== BOUTON TRY AGAIN ===================\n    tryAgainButton: {\n      backgroundColor: 'white',\n      borderWidth: 2,\n      borderRadius: 12,\n      paddingVertical: 14,\n      paddingHorizontal: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      minWidth: 100,\n      // Ombre subtile\n      ...Platform.select({\n        ios: {\n          shadowColor: '#000',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.05,\n          shadowRadius: 2,\n        },\n        android: {\n          elevation: 1,\n        },\n      }),\n    },\n\n    tryAgainButtonText: {\n      fontSize: 15,\n      fontWeight: '600',\n      letterSpacing: 0.2,\n    },\n\n    // =================== CONTAINER NEXT BUTTON ===================\n    nextButtonContainer: {\n      flex: 1,\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\AssessmentProgress\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[71,77],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressCard' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressCard"},"fix":{"range":[111,129],"text":""},"desc":"Remove unused variable 'ProgressCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'sectionTitle' is assigned a value but never used.","line":16,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":15,"suggestions":[{"messageId":"removeVar","data":{"varName":"sectionTitle"},"fix":{"range":[588,609],"text":""},"desc":"Remove unused variable 'sectionTitle'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'expanded' is assigned a value but never used.","line":23,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":23,"endColumn":11,"suggestions":[{"messageId":"removeVar","data":{"varName":"expanded"},"fix":{"range":[750,770],"text":""},"desc":"Remove unused variable 'expanded'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'onToggleExpand' is defined but never used.","line":24,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":24,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"onToggleExpand"},"fix":{"range":[770,788],"text":""},"desc":"Remove unused variable 'onToggleExpand'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'onSectionPress' is defined but never used.","line":25,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":25,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"onSectionPress"},"fix":{"range":[788,806],"text":""},"desc":"Remove unused variable 'onSectionPress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'formattedSectionData' is assigned a value but never used.","line":51,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":51,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"formattedSectionData"},"fix":{"range":[1607,1890],"text":""},"desc":"Remove unused variable 'formattedSectionData'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'index' is defined but never used.","line":52,"column":46,"nodeType":"Identifier","messageId":"unusedVar","endLine":52,"endColumn":51,"suggestions":[{"messageId":"removeVar","data":{"varName":"index"},"fix":{"range":[1695,1702],"text":""},"desc":"Remove unused variable 'index'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'debugData' is assigned a value but never used.","line":61,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":61,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"debugData"},"fix":{"range":[1951,2579],"text":""},"desc":"Remove unused variable 'debugData'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// AssessmentProgress/index.js - VERSION CORRIGÉE AVEC useMemo\n\nimport React, { useMemo } from \"react\";\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\nimport { calculateSectionProgressData } from \"../../../../utils/assessment/assessmentStats\";\nimport { getAssessmentData, getAssessmentSections } from \"../../../../utils/assessment/assessmentDataHelper\";\n\n/**\n * 📊 AssessmentProgress - Version corrigée avec mémorisation\n * ✅ Évite les boucles infinies avec useMemo\n * ✅ Performance optimisée\n */\nconst AssessmentProgress = ({\n  currentSection = 1,\n  totalSections = 0,\n  sectionTitle = \"\",\n  currentQuestion = 1,\n  totalQuestions = 0,\n  answeredQuestionsInSection = 0,\n  levelColor = \"#3b82f6\",\n  userAnswers = {},\n  level = \"A1\",\n  expanded = false,\n  onToggleExpand,\n  onSectionPress,\n}) => {\n  \n  // ✅ MÉMORISER le calcul de progression de section\n  const sectionProgress = useMemo(() => {\n    return totalQuestions > 0 \n      ? Math.round((answeredQuestionsInSection / totalQuestions) * 100)\n      : 0;\n  }, [answeredQuestionsInSection, totalQuestions]);\n\n  // ✅ MÉMORISER les données d'assessment\n  const assessmentData = useMemo(() => {\n    return getAssessmentData(level);\n  }, [level]);\n\n  // ✅ MÉMORISER les sections\n  const sections = useMemo(() => {\n    return getAssessmentSections();\n  }, []);\n\n  // ✅ MÉMORISER le calcul de progression des sections\n  const sectionProgressData = useMemo(() => {\n    return calculateSectionProgressData(assessmentData, sections, userAnswers);\n  }, [assessmentData, sections, userAnswers]);\n\n  // ✅ MÉMORISER la transformation des données\n  const formattedSectionData = useMemo(() => {\n    return sectionProgressData.map((section, index) => ({\n      title: section.title,\n      completed: section.answeredQuestions,\n      total: section.totalQuestions,\n      progress: section.progress,\n    }));\n  }, [sectionProgressData]);\n\n  // ✅ MÉMORISER les données de debug (seulement en dev)\n  const debugData = useMemo(() => {\n    if (process.env.NODE_ENV !== 'development') return null;\n    \n    return {\n      currentSection,\n      totalSections,\n      currentQuestion,\n      totalQuestions,\n      answeredQuestionsInSection,\n      sectionProgress,\n      hasAssessmentData: !!assessmentData,\n      sectionsLength: sections.length,\n      assessmentDataKeys: assessmentData && typeof assessmentData === 'object' ? Object.keys(assessmentData) : \"not object or null\"\n    };\n  }, [currentSection, totalSections, currentQuestion, totalQuestions, answeredQuestionsInSection, sectionProgress, assessmentData, sections.length]);\n\n  // ✅ CORRECTION FINALE : Pas de log dans le render !\n  // Le log était dans le render, il se déclenchait à chaque fois\n\n  return (\n    <ProgressCard\n      title=\"Progression\"\n      subtitle={`Section ${currentSection}/${totalSections} • Question ${currentQuestion}/${totalQuestions}`}\n      progress={sectionProgress}\n      completed={answeredQuestionsInSection}\n      total={totalQuestions}\n      unit=\"questions\"\n      levelColor={levelColor}\n      expandable={false}\n      expanded={false}\n      onToggleExpand={undefined}\n      categoryData={[]}\n      onCategoryPress={undefined}\n    />\n  );\n};\n\nexport default AssessmentProgress;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\AssessmentQuestion\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[89,100],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[118,123],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[122,140],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[140,146],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[177,191],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[236,256],"text":""},"desc":"Remove unused variable 'ContentSection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// AssessmentQuestion/index.js - VERSION REFACTORISÉE avec composants génériques\n\nimport React from \"react\";\nimport { View, TouchableOpacity, Text } from \"react-native\";\nimport HeroCard from \"../../../../components/ui/HeroCard\";\nimport ContentSection from \"../../../../components/ui/ContentSection\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 AssessmentQuestion - Version Refactorisée avec composants génériques\n * Utilise HeroCard pour la question + ContentSection pour le feedback\n * \n * @param {object} question - Question avec text, options, correctAnswer, explanation\n * @param {number} selectedAnswer - Index de la réponse sélectionnée\n * @param {boolean} showFeedback - Afficher le feedback ou non\n * @param {string} levelColor - Couleur du niveau\n * @param {function} onSelectAnswer - Callback sélection réponse\n */\nconst AssessmentQuestion = ({\n  question,\n  selectedAnswer,\n  showFeedback,\n  levelColor = \"#3b82f6\",\n  onSelectAnswer,\n}) => {\n  const styles = createStyles(levelColor);\n\n  if (!question || !question.options) {\n    return null;\n  }\n\n  // Déterminer le feedback à afficher\n  const isCorrect = selectedAnswer === question.correctAnswer;\n  const feedbackText = isCorrect \n    ? \"✅ Correct! Great job.\" \n    : \"❌ Oops! The correct answer is different.\";\n\n  return (\n    <View style={styles.container}>\n      {/* 🎯 QUESTION PRINCIPALE - HeroCard */}\n      <HeroCard \n        content={question.text}\n        fontSize={20}\n        levelColor={levelColor}\n        showUnderline={false}\n        backgroundColor=\"white\"\n        padding={24}\n      />\n      \n      {/* 📝 OPTIONS DE RÉPONSE */}\n      <View style={styles.optionsContainer}>\n        {question.options.map((option, index) => (\n          <TouchableOpacity\n            key={index}\n            style={[\n              styles.optionButton,\n              selectedAnswer === index && [\n                styles.selectedOption,\n                { borderColor: levelColor, backgroundColor: `${levelColor}08` }\n              ],\n              showFeedback && index === question.correctAnswer && [\n                styles.correctOption,\n                { borderColor: '#10b981', backgroundColor: '#f0fdf4' }\n              ],\n            ]}\n            onPress={() => onSelectAnswer(index)}\n            disabled={showFeedback}\n            activeOpacity={0.7}\n          >\n            <Text\n              style={[\n                styles.optionText,\n                selectedAnswer === index && { color: levelColor, fontWeight: '600' },\n                showFeedback && index === question.correctAnswer && { \n                  color: '#10b981', \n                  fontWeight: '600' \n                },\n              ]}\n            >\n              {option}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n\n      {/* 📖 FEEDBACK - ContentSection */}\n      {showFeedback && (\n        <ContentSection\n          title=\"Feedback\"\n          content={feedbackText}\n          levelColor={isCorrect ? '#10b981' : '#ef4444'}\n          backgroundColor={isCorrect ? '#f0fdf4' : '#fef2f2'}\n          icon={isCorrect ? '✅' : '❌'}\n        />\n      )}\n\n      {/* 📝 EXPLICATION - ContentSection (si disponible) */}\n      {showFeedback && question.explanation && (\n        <ContentSection\n          title=\"Explanation\"\n          content={question.explanation}\n          levelColor=\"#6366f1\"\n          backgroundColor=\"#f8fafc\"\n          isItalic={true}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default AssessmentQuestion;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\AssessmentQuestion\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[247,269],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// AssessmentQuestion/style.js - VERSION SIMPLIFIÉE\n\nimport { StyleSheet, Platform } from \"react-native\";\n\n/**\n * 🎯 Styles simplifiés pour AssessmentQuestion\n * La plupart des styles sont dans HeroCard et ContentSection\n */\nconst createStyles = (levelColor = \"#3b82f6\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      marginHorizontal: 16,\n      marginVertical: 8,\n    },\n\n    // =================== OPTIONS DE RÉPONSE ===================\n    optionsContainer: {\n      marginTop: 16,\n      gap: 12,\n    },\n\n    optionButton: {\n      backgroundColor: 'white',\n      borderWidth: 2,\n      borderColor: '#e2e8f0',\n      borderRadius: 12,\n      padding: 16,\n      // Ombre subtile\n      ...Platform.select({\n        ios: {\n          shadowColor: '#000',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.05,\n          shadowRadius: 2,\n        },\n        android: {\n          elevation: 1,\n        },\n      }),\n    },\n\n    selectedOption: {\n      borderWidth: 2,\n      // borderColor et backgroundColor sont définies inline\n    },\n\n    correctOption: {\n      borderWidth: 2,\n      // borderColor et backgroundColor sont définies inline\n    },\n\n    optionText: {\n      fontSize: 16,\n      color: '#334155',\n      textAlign: 'center',\n      lineHeight: 22,\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\AssessmentResults\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[88,99],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[117,122],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[121,133],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[164,178],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[223,243],"text":""},"desc":"Remove unused variable 'ContentSection'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[294,317],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// AssessmentResults/index.js - VERSION REFACTORISÉE avec composants génériques\n\nimport React from \"react\";\nimport { View, ScrollView } from \"react-native\";\nimport HeroCard from \"../../../../components/ui/HeroCard\";\nimport ContentSection from \"../../../../components/ui/ContentSection\";\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\nimport createStyles from \"./style\";\n\n/**\n * 🏆 AssessmentResults - Version Refactorisée avec composants génériques\n * 200+ lignes → 60 lignes (-70% de code)\n * Utilise HeroCard + ContentSection + NavigationButtons\n * \n * @param {string} level - Niveau de l'évaluation\n * @param {string} levelColor - Couleur du niveau\n * @param {object} userScore - Score utilisateur {correctAnswers, totalQuestions, percentage}\n * @param {function} onContinue - Fonction pour continuer\n * @param {function} onRetry - Fonction pour recommencer\n */\nconst AssessmentResults = ({\n  level,\n  levelColor = \"#3b82f6\",\n  userScore,\n  onContinue,\n  onRetry,\n}) => {\n  const styles = createStyles(levelColor);\n\n  // Fallback si pas de score\n  if (!userScore) {\n    return (\n      <ScrollView style={styles.container} contentContainerStyle={styles.content}>\n        {/* 🎯 HERO - Titre simple */}\n        <HeroCard \n          content=\"Évaluation Terminée\"\n          fontSize={24}\n          levelColor={levelColor}\n          showUnderline={true}\n          backgroundColor=\"white\"\n        />\n\n        {/* 📝 MESSAGE SIMPLE */}\n        <ContentSection\n          title={`Niveau ${level}`}\n          content=\"Votre évaluation est terminée. Merci d'avoir participé !\"\n          levelColor={levelColor}\n          backgroundColor=\"#f8fafc\"\n        />\n\n        {/* 🚀 NAVIGATION */}\n        <View style={styles.navigationContainer}>\n          <NavigationButtons\n            onNext={onContinue}\n            disablePrevious={true}\n            disableNext={false}\n            primaryColor={levelColor}\n            isLast={true}\n            buttonLabels={{\n              next: \"Continuer\",\n              finish: \"Continuer\"\n            }}\n          />\n        </View>\n      </ScrollView>\n    );\n  }\n\n  // Calculs pour l'affichage\n  const scoreOutOf20 = Math.round((userScore.percentage / 100) * 20);\n  const wrongAnswers = userScore.totalQuestions - userScore.correctAnswers;\n\n  // Système de couleurs et messages basé sur performance\n  const getPerformanceData = (scoreOut20) => {\n    if (scoreOut20 >= 16) {\n      return {\n        title: \"🏆 Bravo champion !\",\n        subtitle: \"Tu maîtrises bien ton affaire !\",\n        color: \"#16a34a\",\n        backgroundColor: \"#f0fdf4\",\n        showRetry: false\n      };\n    } else if (scoreOut20 >= 12) {\n      return {\n        title: \"👌 Pas mal du tout !\",\n        subtitle: \"On est sur la bonne voie !\",\n        color: \"#ea580c\",\n        backgroundColor: \"#fff7ed\",\n        showRetry: false\n      };\n    } else if (scoreOut20 >= 8) {\n      return {\n        title: \"😬 Hmm... on a vu mieux !\",\n        subtitle: \"Allez, on remonte la pente !\",\n        color: \"#dc2626\",\n        backgroundColor: \"#fef2f2\",\n        showRetry: true\n      };\n    } else {\n      return {\n        title: \"🔥 Oula... c'est chaud !\",\n        subtitle: \"Bon, on va pas se mentir, il faut bosser !\",\n        color: \"#b91c1c\",\n        backgroundColor: \"#fef2f2\",\n        showRetry: true\n      };\n    }\n  };\n\n  const performance = getPerformanceData(scoreOutOf20);\n\n  return (\n    <ScrollView \n      style={styles.container} \n      contentContainerStyle={styles.content}\n      showsVerticalScrollIndicator={false}\n    >\n      {/* 🎯 HERO - Score principal spectaculaire */}\n      <HeroCard \n        content={`${scoreOutOf20}/20`}\n        fontSize={56}\n        levelColor={performance.color}\n        showUnderline={false}\n        backgroundColor={performance.backgroundColor}\n        padding={32}\n        subtitle={`${userScore.percentage.toFixed(1)}%`}\n      />\n\n      {/* 📊 STATISTIQUES - ContentSection */}\n      <ContentSection\n        title=\"Statistiques détaillées\"\n        content={`✅ ${userScore.correctAnswers} correctes\\n❌ ${wrongAnswers} incorrectes\\n📊 ${userScore.totalQuestions} questions au total`}\n        levelColor=\"#6366f1\"\n        backgroundColor=\"white\"\n        isMonospace={true}\n      />\n\n      {/* 🎭 MESSAGE DE PERFORMANCE */}\n      <ContentSection\n        title=\"Votre Performance\"\n        content={`${performance.title}\\n\\n${performance.subtitle}`}\n        levelColor={performance.color}\n        backgroundColor={performance.backgroundColor}\n        icon={performance.title.split(' ')[0]} // Récupère l'emoji\n      />\n\n      {/* 🏷️ BADGE NIVEAU */}\n      <ContentSection\n        title={`Évaluation Niveau ${level}`}\n        content=\"Évaluation terminée avec succès !\"\n        levelColor={levelColor}\n        backgroundColor=\"#f1f5f9\"\n        isItalic={true}\n      />\n\n      {/* 🚀 NAVIGATION - Boutons d'action */}\n      <View style={styles.navigationContainer}>\n        {/* Bouton Retry conditionnel */}\n        {performance.showRetry && onRetry && (\n          <View style={styles.retryContainer}>\n            <NavigationButtons\n              onNext={onRetry}\n              disablePrevious={true}\n              disableNext={false}\n              primaryColor={performance.color}\n              isLast={false}\n              buttonLabels={{\n                next: \"Recommencer\",\n              }}\n            />\n          </View>\n        )}\n\n        {/* Bouton principal Continue */}\n        <NavigationButtons\n          onNext={onContinue}\n          disablePrevious={true}\n          disableNext={false}\n          primaryColor={levelColor}\n          isLast={true}\n          buttonLabels={{\n            next: \"Continuer\",\n            finish: \"Continuer\"\n          }}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default AssessmentResults;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\AssessmentResults\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":10,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[282,304],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// AssessmentResults/style.js - VERSION ÉPURÉE\n\nimport { StyleSheet } from \"react-native\";\n\n/**\n * 🎯 Styles ultra-simplifiés pour AssessmentResults\n * 200+ lignes → 25 lignes (-87% de code)\n * La majorité des styles est déléguée aux composants génériques\n */\nconst createStyles = (levelColor = \"#3b82f6\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      flex: 1,\n      backgroundColor: \"#f8fafc\",\n    },\n\n    content: {\n      padding: 20,\n      paddingBottom: 40,\n      gap: 16, // Espacement uniforme entre les sections\n    },\n\n    // =================== NAVIGATION ===================\n    navigationContainer: {\n      marginTop: 'auto',\n      paddingTop: 20,\n      gap: 12,\n    },\n\n    retryContainer: {\n      opacity: 0.9, // Légèrement moins visible que le bouton principal\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\hooks\\useAssessment.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Alert' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":15,"suggestions":[{"messageId":"removeVar","data":{"varName":"Alert"},"fix":{"range":[113,150],"text":""},"desc":"Remove unused variable 'Alert'."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentSectionData' logical expression could make the dependencies of useCallback Hook (at line 292) change on every render. To fix this, wrap the initialization of 'currentSectionData' in its own useMemo() Hook.","line":31,"column":9,"nodeType":"VariableDeclarator","endLine":31,"endColumn":92},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentQuestion' logical expression could make the dependencies of useCallback Hook (at line 156) change on every render. To fix this, wrap the initialization of 'currentQuestion' in its own useMemo() Hook.","line":32,"column":9,"nodeType":"VariableDeclarator","endLine":32,"endColumn":126},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentQuestion' logical expression could make the dependencies of useCallback Hook (at line 292) change on every render. To fix this, wrap the initialization of 'currentQuestion' in its own useMemo() Hook.","line":32,"column":9,"nodeType":"VariableDeclarator","endLine":32,"endColumn":126},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'ANSWERS_KEY', 'RESULTS_KEY', and 'STORAGE_KEY'. Either include them or remove the dependency array.","line":74,"column":6,"nodeType":"ArrayExpression","endLine":74,"endColumn":13,"suggestions":[{"desc":"Update the dependencies array to be: [ANSWERS_KEY, RESULTS_KEY, STORAGE_KEY, level]","fix":{"range":[3015,3022],"text":"[ANSWERS_KEY, RESULTS_KEY, STORAGE_KEY, level]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'totalSections'. Either include it or remove the dependency array.","line":277,"column":6,"nodeType":"ArrayExpression","endLine":277,"endColumn":86,"suggestions":[{"desc":"Update the dependencies array to be: [sections, userAnswers, currentSection, totalSections, totalQuestionsInSection, assessmentData]","fix":{"range":[9829,9909],"text":"[sections, userAnswers, currentSection, totalSections, totalQuestionsInSection, assessmentData]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useAssessment.js - HOOK UNIFIÉ SIMPLE\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { Alert } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getAssessmentData, getAssessmentSections } from '../../../../utils/assessment/assessmentDataHelper';\n\n/**\n * 🎯 Hook unifié pour Level Assessment\n * Remplace useAssessmentState + useAssessmentProgress\n * Simple, efficace, maintenable - pattern identique à useVocabulary\n */\nconst useAssessment = (level = \"A1\") => {\n  \n  // =================== CORE STATE ===================\n  const [currentSection, setCurrentSection] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [assessmentResults, setAssessmentResults] = useState({});\n  const [lastPosition, setLastPosition] = useState({ sectionIndex: 0, questionIndex: 0 });\n  const [loaded, setLoaded] = useState(false);\n\n  // =================== REFS ===================\n  const isInitialized = useRef(false);\n\n  // =================== COMPUTED VALUES ===================\n  const assessmentData = getAssessmentData(level);\n  const sections = getAssessmentSections();\n  const currentSectionData = assessmentData[currentSection] || { title: \"\", questions: [] };\n  const currentQuestion = currentSectionData.questions?.[currentQuestionIndex] || { text: \"\", options: [], correctAnswer: 0 };\n  const totalSections = sections.length;\n  const totalQuestionsInSection = currentSectionData.questions?.length || 0;\n  \n  // =================== PERSISTENCE ===================\n  const STORAGE_KEY = `assessment_${level}`;\n  const RESULTS_KEY = `assessment_results_${level}`;\n  const ANSWERS_KEY = `assessment_answers_${level}`;\n\n  // Load data from storage\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Charger position\n        const savedPosition = await AsyncStorage.getItem(STORAGE_KEY);\n        if (savedPosition) {\n          const { sectionIndex, questionIndex } = JSON.parse(savedPosition);\n          setLastPosition({ sectionIndex, questionIndex });\n        }\n\n        // Charger réponses\n        const savedAnswers = await AsyncStorage.getItem(ANSWERS_KEY);\n        if (savedAnswers) {\n          setUserAnswers(JSON.parse(savedAnswers));\n        }\n\n        // Charger résultats\n        const savedResults = await AsyncStorage.getItem(RESULTS_KEY);\n        if (savedResults) {\n          const results = JSON.parse(savedResults);\n          setAssessmentResults(results);\n          if (results.completedAt) {\n            setTestCompleted(true);\n          }\n        }\n      } catch (error) {\n        console.log('Error loading assessment data:', error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    loadData();\n  }, [level]);\n\n  // Save data to storage\n  const saveData = useCallback(async () => {\n    try {\n      // Sauvegarder position\n      const dataToSave = {\n        sectionIndex: sections.indexOf(currentSection),\n        questionIndex: currentQuestionIndex,\n        timestamp: Date.now()\n      };\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n\n      // Sauvegarder réponses\n      await AsyncStorage.setItem(ANSWERS_KEY, JSON.stringify(userAnswers));\n    } catch (error) {\n      console.log('Error saving assessment data:', error);\n    }\n  }, [currentSection, currentQuestionIndex, userAnswers, sections, STORAGE_KEY, ANSWERS_KEY]);\n\n  // Auto-save when data changes\n  useEffect(() => {\n    if (loaded && currentSection) saveData();\n  }, [saveData, loaded, currentSection]);\n\n  // Initialize first section\n  useEffect(() => {\n    if (loaded && !currentSection && sections.length > 0 && !isInitialized.current) {\n      // Restaurer position ou commencer au début\n      if (lastPosition && sections[lastPosition.sectionIndex]) {\n        setCurrentSection(sections[lastPosition.sectionIndex]);\n        setCurrentQuestionIndex(lastPosition.questionIndex);\n      } else {\n        setCurrentSection(sections[0]);\n        setCurrentQuestionIndex(0);\n      }\n      isInitialized.current = true;\n    }\n  }, [loaded, currentSection, sections, lastPosition]);\n\n  // =================== NAVIGATION ACTIONS ===================\n  const changeSection = useCallback((sectionKey) => {\n    if (sections.includes(sectionKey)) {\n      setCurrentSection(sectionKey);\n      setCurrentQuestionIndex(0);\n      setSelectedAnswer(null);\n      setShowFeedback(false);\n    }\n  }, [sections]);\n\n  const changeQuestion = useCallback((questionIndex) => {\n    if (questionIndex >= 0 && questionIndex < totalQuestionsInSection) {\n      setCurrentQuestionIndex(questionIndex);\n      setSelectedAnswer(null);\n      setShowFeedback(false);\n    }\n  }, [totalQuestionsInSection]);\n\n  const handleSelectAnswer = useCallback((answerIndex) => {\n    if (!showFeedback) {\n      setSelectedAnswer(answerIndex);\n    }\n  }, [showFeedback]);\n\n  const validateAnswer = useCallback(() => {\n    if (selectedAnswer !== null && !showFeedback) {\n      setShowFeedback(true);\n      \n      // Sauvegarder la réponse\n      const isCorrect = selectedAnswer === currentQuestion.correctAnswer;\n      setUserAnswers(prev => ({\n        ...prev,\n        [currentSection]: {\n          ...prev[currentSection],\n          [currentQuestionIndex]: {\n            selectedAnswer,\n            isCorrect,\n            timestamp: Date.now()\n          }\n        }\n      }));\n    }\n  }, [selectedAnswer, showFeedback, currentQuestion, currentSection, currentQuestionIndex]);\n\n  const tryAgain = useCallback(() => {\n    setSelectedAnswer(null);\n    setShowFeedback(false);\n  }, []);\n\n  // =================== MAIN NAVIGATION ===================\n  const handleNext = useCallback(() => {\n    // Vérifier si fin de l'évaluation\n    const currentSectionIndex = sections.indexOf(currentSection);\n    const isLastSection = currentSectionIndex === sections.length - 1;\n    const isLastQuestion = currentQuestionIndex === totalQuestionsInSection - 1;\n\n    if (isLastSection && isLastQuestion) {\n      // Calculer et sauvegarder résultats finaux\n      setTestCompleted(true);\n      return { completed: true };\n    }\n\n    // Navigation normale\n    if (currentQuestionIndex < totalQuestionsInSection - 1) {\n      // Question suivante dans la section\n      setCurrentQuestionIndex(prev => prev + 1);\n    } else {\n      // Section suivante\n      const nextSectionIndex = currentSectionIndex + 1;\n      if (nextSectionIndex < sections.length) {\n        setCurrentSection(sections[nextSectionIndex]);\n        setCurrentQuestionIndex(0);\n      }\n    }\n    \n    setSelectedAnswer(null);\n    setShowFeedback(false);\n    return { completed: false };\n  }, [sections, currentSection, currentQuestionIndex, totalQuestionsInSection]);\n\n  const handlePrevious = useCallback(() => {\n    if (currentQuestionIndex > 0) {\n      // Question précédente dans la section\n      setCurrentQuestionIndex(prev => prev - 1);\n    } else {\n      // Section précédente\n      const currentSectionIndex = sections.indexOf(currentSection);\n      if (currentSectionIndex > 0) {\n        const prevSection = sections[currentSectionIndex - 1];\n        const prevSectionData = assessmentData[prevSection];\n        const lastQuestionIndex = (prevSectionData.questions?.length || 1) - 1;\n        \n        setCurrentSection(prevSection);\n        setCurrentQuestionIndex(lastQuestionIndex);\n      }\n    }\n    \n    setSelectedAnswer(null);\n    setShowFeedback(false);\n  }, [currentQuestionIndex, sections, currentSection, assessmentData]);\n\n  // =================== COMPLETION LOGIC ===================\n  const saveAssessmentResults = useCallback(async (results) => {\n    try {\n      const resultsWithTimestamp = {\n        ...results,\n        completedAt: new Date().toISOString(),\n        timestamp: Date.now(),\n      };\n      setAssessmentResults(resultsWithTimestamp);\n      await AsyncStorage.setItem(RESULTS_KEY, JSON.stringify(resultsWithTimestamp));\n    } catch (error) {\n      console.log('Error saving assessment results:', error);\n    }\n  }, [RESULTS_KEY]);\n\n  const resetAssessment = useCallback(async () => {\n    try {\n      await AsyncStorage.multiRemove([STORAGE_KEY, RESULTS_KEY, ANSWERS_KEY]);\n      setCurrentSection(sections[0]);\n      setCurrentQuestionIndex(0);\n      setSelectedAnswer(null);\n      setShowFeedback(false);\n      setTestCompleted(false);\n      setUserAnswers({});\n      setAssessmentResults({});\n      setLastPosition({ sectionIndex: 0, questionIndex: 0 });\n    } catch (error) {\n      console.log('Error resetting assessment:', error);\n    }\n  }, [STORAGE_KEY, RESULTS_KEY, ANSWERS_KEY, sections]);\n\n  // =================== COMPUTED STATS ===================\n  const getStats = useCallback(() => {\n    const totalQuestions = sections.reduce((sum, sectionKey) => {\n      return sum + (assessmentData[sectionKey]?.questions?.length || 0);\n    }, 0);\n\n    let correctAnswers = 0;\n    let answeredQuestions = 0;\n\n    Object.values(userAnswers).forEach(section => {\n      Object.values(section).forEach(answer => {\n        answeredQuestions++;\n        if (answer.isCorrect) {\n          correctAnswers++;\n        }\n      });\n    });\n\n    const currentSectionIndex = sections.indexOf(currentSection) + 1;\n    const answeredInCurrentSection = Object.keys(userAnswers[currentSection] || {}).length;\n\n    return {\n      totalQuestions,\n      answeredQuestions,\n      correctAnswers,\n      totalSections,\n      currentSectionIndex,\n      totalQuestionsInSection,\n      answeredInCurrentSection,\n      percentage: answeredQuestions > 0 ? (correctAnswers / answeredQuestions) * 100 : 0\n    };\n  }, [sections, assessmentData, userAnswers, currentSection, totalQuestionsInSection]);\n\n  // =================== COMPUTED DISPLAY ===================\n  const getDisplayData = useCallback(() => {\n    const currentSectionIndex = sections.indexOf(currentSection) + 1;\n    const sectionTitle = currentSectionData.title || `Section ${currentSectionIndex}`;\n    const questionNumber = currentQuestionIndex + 1;\n\n    return {\n      currentSectionIndex,\n      sectionTitle,\n      questionNumber,\n      currentQuestion,\n      currentSectionData\n    };\n  }, [sections, currentSection, currentSectionData, currentQuestionIndex, currentQuestion]);\n\n  // =================== VALIDATION ===================\n  const canGoToPrevious = useCallback(() => {\n    if (currentQuestionIndex > 0) return true;\n    return sections.indexOf(currentSection) > 0;\n  }, [currentQuestionIndex, sections, currentSection]);\n\n  const isLastQuestionInSection = currentQuestionIndex === totalQuestionsInSection - 1;\n  const isLastSection = sections.indexOf(currentSection) === sections.length - 1;\n\n  return {\n    // State\n    currentSection,\n    currentQuestionIndex,\n    selectedAnswer,\n    showFeedback,\n    testCompleted,\n    userAnswers,\n    assessmentResults,\n    loaded,\n    \n    // Data\n    currentQuestion,\n    currentSectionData,\n    totalSections,\n    totalQuestionsInSection,\n    \n    // Actions\n    changeSection,\n    changeQuestion,\n    handleSelectAnswer,\n    validateAnswer,\n    tryAgain,\n    handleNext,\n    handlePrevious,\n    saveAssessmentResults,\n    resetAssessment,\n    setTestCompleted,\n    \n    // Computed\n    canGoToPrevious: canGoToPrevious(),\n    isLastQuestionInSection,\n    isLastSection,\n    stats: getStats(),\n    display: getDisplayData(),\n  };\n};\n\nexport default useAssessment;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[76,82],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[142,147],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[146,165],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[303,313],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'AssessmentHeader' is defined but never used.","line":11,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"AssessmentHeader"},"fix":{"range":[406,428],"text":""},"desc":"Remove unused variable 'AssessmentHeader'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'AssessmentProgress' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"AssessmentProgress"},"fix":{"range":[457,481],"text":""},"desc":"Remove unused variable 'AssessmentProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'AssessmentQuestion' is defined but never used.","line":13,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"AssessmentQuestion"},"fix":{"range":[512,536],"text":""},"desc":"Remove unused variable 'AssessmentQuestion'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'AssessmentNavigation' is defined but never used.","line":14,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":28,"suggestions":[{"messageId":"removeVar","data":{"varName":"AssessmentNavigation"},"fix":{"range":[567,593],"text":""},"desc":"Remove unused variable 'AssessmentNavigation'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'AssessmentResults' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"AssessmentResults"},"fix":{"range":[626,649],"text":""},"desc":"Remove unused variable 'AssessmentResults'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/exercises/levelAssessment/index.js - VERSION CORRIGÉE\nimport React, { useMemo, useEffect, useCallback } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\n\n// Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\n\n// Components\nimport AssessmentHeader from \"./AssessmentHeader\";\nimport AssessmentProgress from \"./AssessmentProgress\";\nimport AssessmentQuestion from \"./AssessmentQuestion\";\nimport AssessmentNavigation from \"./AssessmentNavigation\";\nimport AssessmentResults from \"./AssessmentResults\";\n\n// Hook & Utils\nimport useAssessment from \"./hooks/useAssessment\";\nimport useLastActivity from \"../../../hooks/useLastActivity\";\nimport { getLevelColor } from \"../../../utils/assessment/assessmentDataHelper\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 LevelAssessment - VERSION CORRIGÉE\n */\nconst LevelAssessment = ({ route }) => {\n  const navigation = useNavigation();\n  const { level = \"A1\" } = route?.params || {};\n  const styles = createStyles();\n\n  // Hook pour sauvegarder l'activité\n  const { saveActivity } = useLastActivity();\n\n  // Data\n  const levelColor = getLevelColor(level);\n\n  // Hook unifié\n  const {\n    currentSection,\n    currentQuestionIndex,\n    selectedAnswer,\n    showFeedback,\n    testCompleted,\n    userAnswers,\n    loaded,\n    currentQuestion,\n    totalSections,\n    totalQuestionsInSection,\n    handleSelectAnswer,\n    validateAnswer,\n    tryAgain,\n    handleNext,\n    handlePrevious,\n    saveAssessmentResults,\n    resetAssessment,\n    canGoToPrevious,\n    isLastQuestionInSection,\n    stats,\n    display,\n  } = useAssessment(level);\n\n  // ✅ CORRECTION : Mémoriser les métadonnées\n  const activityMetadata = useMemo(() => ({\n    section: display?.currentSectionIndex || 0,\n    question: currentQuestionIndex,\n    totalQuestions: totalQuestionsInSection,\n    sectionTitle: display?.sectionTitle || `Section ${(display?.currentSectionIndex || 0) + 1}`,\n    totalSections: totalSections\n  }), [display?.currentSectionIndex, currentQuestionIndex, totalQuestionsInSection, display?.sectionTitle, totalSections]);\n\n  // ✅ CORRECTION : Callback mémorisé pour saveActivity\n  const handleSaveActivity = useCallback(() => {\n    if (loaded && currentSection && currentQuestion && !testCompleted) {\n      saveActivity({\n        title: \"Évaluation\",\n        level: level,\n        type: \"assessment\",\n        metadata: activityMetadata\n      });\n    }\n  }, [loaded, currentSection, currentQuestion, testCompleted, level, saveActivity, activityMetadata]);\n\n  // ✅ CORRECTION : useEffect optimisé\n  useEffect(() => {\n    handleSaveActivity();\n  }, [handleSaveActivity]);\n\n  // Handlers\n const handleBackPress = () => {\n  router.push({\n    pathname: \"/(tabs)/exerciseSelection\",\n    params: { level }\n  });\n};\n\n  const handleValidateAnswer = () => validateAnswer();\n\n  const handleNextQuestion = () => {\n    const result = handleNext();\n    if (result.completed) {\n      // Calculer et sauvegarder les résultats finaux\n      const finalResults = {\n        level,\n        userScore: stats,\n        sectionsCompleted: stats.totalSections,\n        completedAt: new Date().toISOString(),\n      };\n      saveAssessmentResults(finalResults);\n    }\n  };\n\n  const handlePreviousQuestion = () => handlePrevious();\n\n  const handleRetry = async () => {\n    try {\n      await resetAssessment();\n    } catch (error) {\n      console.log('Error retrying assessment:', error);\n    }\n  };\n\n  const handleContinue = () => navigation.navigate(\"Dashboard\");\n\n  // Loading state\n  if (!loaded || !currentSection || !currentQuestion) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <AssessmentHeader\n          level={level}\n          onBackPress={handleBackPress}\n        />\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} />\n        </View>\n      </Container>\n    );\n  }\n\n  // Results state\n  if (testCompleted) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <AssessmentResults \n          level={level}\n          levelColor={levelColor}\n          userScore={stats}\n          onContinue={handleContinue}\n          onRetry={handleRetry}\n        />\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      withScrollView\n      backgroundColor=\"#f8fafc\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      scrollViewProps={{\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: styles.scrollContent,\n      }}\n    >\n      {/* Header */}\n      <AssessmentHeader\n        level={level}\n        onBackPress={handleBackPress}\n      />\n\n      {/* Progress */}\n      <AssessmentProgress\n        currentSection={display.currentSectionIndex}\n        totalSections={totalSections}\n        sectionTitle={display.sectionTitle}\n        currentQuestion={display.questionNumber}\n        totalQuestions={totalQuestionsInSection}\n        answeredQuestionsInSection={stats.answeredInCurrentSection}\n        levelColor={levelColor}\n        userAnswers={userAnswers}\n        level={level}\n      />\n\n      {/* Question */}\n      <AssessmentQuestion\n        question={currentQuestion}\n        selectedAnswer={selectedAnswer}\n        showFeedback={showFeedback}\n        levelColor={levelColor}\n        onSelectAnswer={handleSelectAnswer}\n      />\n\n      {/* Navigation */}\n      <AssessmentNavigation\n        showFeedback={showFeedback}\n        selectedAnswer={selectedAnswer}\n        isLastQuestionInSection={isLastQuestionInSection}\n        canGoPrevious={canGoToPrevious}\n        levelColor={levelColor}\n        onValidateAnswer={handleValidateAnswer}\n        onTryAgain={tryAgain}\n        onNext={handleNextQuestion}\n        onPrevious={handlePreviousQuestion}\n      />\n    </Container>\n  );\n};\n\nexport default LevelAssessment;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhraseCard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[55,66],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[75,111],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[119,133],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'RevealButton' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"RevealButton"},"fix":{"range":[178,196],"text":""},"desc":"Remove unused variable 'RevealButton'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// PhraseCard/index.js - VERSION ULTRA-NETTOYÉE\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport HeroCard from \"../../../../components/ui/HeroCard\";\nimport RevealButton from \"../../../../components/ui/RevealButton\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 PhraseCard - Version Ultra-Simple\n * Phrase anglaise + Reveal traduction française\n * SUPPRIMÉ : Example et Context (inutiles)\n */\nconst PhraseCard = ({\n  phraseData,\n  showTranslation,\n  onToggleTranslation,\n  levelColor = \"#5E60CE\",\n}) => {\n  const styles = createStyles(levelColor);\n\n  // Validation des données\n  if (!phraseData) {\n    return (\n      <View style={styles.container}>\n        <HeroCard \n          content=\"Loading phrase...\"\n          fontSize={24}\n          levelColor={levelColor}\n          showUnderline={false}\n        />\n      </View>\n    );\n  }\n\n  // 🎯 DONNÉES ESSENTIELLES SEULEMENT\n  const phrase = phraseData.english;\n  const translation = phraseData.translation;\n\n  return (\n    <View style={styles.container}>\n      {/* 🎯 PHRASE ANGLAISE - Hero Section */}\n      <HeroCard \n        content={phrase}\n        fontSize={28} // Adapté pour phrases (plus longues que mots)\n        levelColor={levelColor}\n        showUnderline={true}\n        lineHeight={36} // Pour phrases multi-lignes\n      />\n      \n      {/* 🔘 BOUTON REVEAL TRADUCTION */}\n      <RevealButton\n        isRevealed={showTranslation}\n        revealedContent={translation}\n        revealText=\"Reveal Translation\"\n        hideText=\"Hide Translation\"\n        onToggle={onToggleTranslation}\n        levelColor={levelColor}\n      />\n    </View>\n  );\n};\n\nexport default PhraseCard;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhraseCard\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":16,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[460,482],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// PhraseCard/style.js - VERSION ULTRA-NETTOYÉE\nimport { StyleSheet } from \"react-native\";\n\n/**\n * 🧹 CSS Ultra-Simplifié pour PhraseCard\n * \n * AVANT : 300+ lignes avec :\n * - heroSection, heroGradient, decorativeCircle\n * - revealButton, glassEffect, translationCard  \n * - exampleCard, contextCard, headers, shadows\n * \n * MAINTENANT : 10 lignes\n * - Tout est géré par HeroCard et RevealButton\n * - On garde SEULEMENT le container\n */\nconst createStyles = (levelColor = \"#5E60CE\") =>\n  StyleSheet.create({\n    // =================== CONTAINER SEULEMENT ===================\n    container: {\n      marginHorizontal: 16, // Espacement horizontal\n      marginVertical: 8,    // Espacement vertical entre les composants\n    },\n    \n    // 🗑️ SUPPRIMÉ : 290+ lignes de styles maintenant gérés par les composants génériques !\n    // Plus besoin de styles pour :\n    // - Hero section (dans HeroCard)\n    // - Reveal button (dans RevealButton) \n    // - Example section (supprimé)\n    // - Context section (supprimé)\n    // - Toutes les animations, shadows, glassmorphism, etc.\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesCategorySelector\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[89,100],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'CategorySelector' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"CategorySelector"},"fix":{"range":[116,138],"text":""},"desc":"Remove unused variable 'CategorySelector'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/exercises/phrases/PhrasesCategorySelector/index.js - VERSION FIXÉE\nimport React from \"react\";\nimport CategorySelector from \"../../../../components/exercise-common/CategorySelector\";\n\nconst PhrasesCategorySelector = ({\n  categories,\n  selectedIndex,\n  onSelectCategory,\n  levelColor,\n}) => {\n  // 🎯 FIX : categories est un array de strings, pas d'objets\n  // Transformer les noms de catégories en objets avec index comme id\n  const formattedCategories = categories.map((categoryName, index) => ({\n    id: index, // Utiliser l'index comme id pour correspondre à selectedIndex\n    name: categoryName\n  }));\n\n  // 🎯 FIX : Utiliser selectedIndex directement (pas de transformation)\n  const handleCategorySelect = (categoryId) => {\n    // categoryId est maintenant l'index, on peut l'utiliser directement\n    onSelectCategory(categoryId);\n  };\n\n  return (\n    <CategorySelector\n      categories={formattedCategories}\n      selectedCategory={selectedIndex} // 🎯 FIX : Maintenant selectedIndex correspond à category.id\n      onSelectCategory={handleCategorySelect}\n      primaryColor={levelColor}\n    />\n  );\n};\n\nexport default PhrasesCategorySelector;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesDetailsModal\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[7,18],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[36,41],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":2,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[40,46],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Modal' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"Modal"},"fix":{"range":[77,88],"text":""},"desc":"Remove unused variable 'Modal'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'renderFooter' is assigned a value but never used.","line":85,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":85,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"renderFooter"},"fix":{"range":[2578,2819],"text":""},"desc":"Remove unused variable 'renderFooter'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { View, Text } from 'react-native';\nimport Modal from '../../../../components/ui/Modal';\nimport styles from './style';\n\n/**\n * Modal pour afficher les détails détaillés d'une phrase\n * Utilise le composant Modal personnalisé\n * \n * @param {Object} phrase - La phrase à afficher en détail\n * @param {boolean} isVisible - Indique si le modal est visible\n * @param {function} onClose - Fonction appelée pour fermer le modal\n * @param {string} levelColor - Couleur du niveau\n */\nconst PhrasesDetailsModal = ({ \n  phrase, \n  isVisible, \n  onClose, \n  levelColor \n}) => {\n  // Si pas de phrase, ne rien afficher\n  if (!phrase) return null;\n\n  // Contenu du modal\n  const renderContent = () => (\n    <View style={styles.modalInnerContent}>\n      {/* Phrase originale */}\n      <View style={styles.detailSection}>\n        <Text style={[styles.detailLabel, { color: levelColor }]}>\n          Phrase originale :\n        </Text>\n        <Text style={styles.detailText}>{phrase.english}</Text>\n      </View>\n\n      {/* Traduction */}\n      <View style={styles.detailSection}>\n        <Text style={[styles.detailLabel, { color: levelColor }]}>\n          Traduction :\n        </Text>\n        <Text style={styles.detailText}>{phrase.translation}</Text>\n      </View>\n\n      {/* Contexte */}\n      {phrase.context && (\n        <View style={styles.detailSection}>\n          <Text style={[styles.detailLabel, { color: levelColor }]}>\n            Contexte :\n          </Text>\n          <Text style={styles.detailText}>{phrase.context}</Text>\n        </View>\n      )}\n\n      {/* Exemples */}\n      {phrase.examples && phrase.examples.length > 0 && (\n        <View style={styles.detailSection}>\n          <Text style={[styles.detailLabel, { color: levelColor }]}>\n            Exemples :\n          </Text>\n          {phrase.examples.map((example, index) => (\n            <View key={index} style={styles.exampleItem}>\n              <Text style={styles.exampleText}>\n                {example.english}\n              </Text>\n              <Text style={styles.exampleTranslation}>\n                {example.translation}\n              </Text>\n            </View>\n          ))}\n        </View>\n      )}\n\n      {/* Notes supplémentaires */}\n      {phrase.notes && (\n        <View style={styles.detailSection}>\n          <Text style={[styles.detailLabel, { color: levelColor }]}>\n            Notes :\n          </Text>\n          <Text style={styles.detailText}>{phrase.notes}</Text>\n        </View>\n      )}\n    </View>\n  );\n\n  // Pied de page du modal (bouton de fermeture)\n  const renderFooter = () => (\n    <View style={[styles.modalFooter, { borderTopColor: levelColor }]}>\n      <Text style={[styles.modalFooterText, { color: levelColor }]}>\n        Appuyez n'importe où pour fermer\n      </Text>\n    </View>\n  );\n\n  return (\n    <Modal\n      visible={isVisible}\n      onClose={onClose}\n      title=\"Détails de la phrase\"\n      position=\"center\"\n      animationType=\"fade\"\n      scrollable\n      closeOnBackdropPress\n      showCloseButton\n      width=\"90%\"\n      maxHeight=\"80%\"\n      contentContainerStyle={styles.modalCustomContainer}\n      headerStyle={{ borderBottomColor: levelColor, borderBottomWidth: 2 }}\n      bodyStyle={styles.modalCustomBody}\n    >\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default PhrasesDetailsModal;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesDetailsModal\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[40,51],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseHeader' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseHeader"},"fix":{"range":[67,87],"text":""},"desc":"Remove unused variable 'ExerciseHeader'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// 5. PhrasesHeader - MIS À JOUR\nimport React from \"react\";\nimport ExerciseHeader from \"../../../../components/exercise-common/ExerciseHeader\";\n\nconst PhrasesHeader = ({ level, onBackPress }) => {\n  return (\n    <ExerciseHeader\n      title=\"Expressions\"\n      level={level}\n      exerciseType=\"phrases\" // ✅ NOUVEAU\n      onClose={onBackPress}\n      backIcon=\"arrow-back\"\n    />\n  );\n};\n\nexport default PhrasesHeader;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesNavigation\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[84,95],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[111,134],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// PhrasesNavigation/index.js - VERSION OPTIMISÉE (plus de \"1/2\" redondant)\n\nimport React from \"react\";\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\n\n/**\n * ⏭️ PhrasesNavigation - Version Optimisée\n * - Plus d'indicateur \"1/2\" redondant \n * - Utilise le NavigationButtons optimisé\n * - Interface cohérente avec VocabularyNavigation et GrammarNavigation\n * - Props simplifiées\n */\nconst PhrasesNavigation = ({ \n  onPrevious, \n  onNext, \n  disablePrevious = false, \n  disableNext = false,\n  levelColor = \"#5E60CE\",\n  isLast = false, // Nouveau prop simple pour \"Terminer\"\n}) => {\n  return (\n    <NavigationButtons\n      onNext={onNext}\n      onPrevious={onPrevious}\n      disablePrevious={disablePrevious}\n      disableNext={disableNext}\n      primaryColor={levelColor}\n      isLast={isLast}\n      buttonLabels={{\n        next: \"Suivant\",\n        previous: \"Précédent\", \n        finish: \"Terminer\"\n      }}\n      // 🧹 SUPPRIMÉ : currentIndex, totalCount, showSkip, variant, wrapper View\n      // Plus de \"1/2\" redondant !\n    />\n  );\n};\n\nexport default PhrasesNavigation;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesProgress\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[72,83],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressCard' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressCard"},"fix":{"range":[99,117],"text":""},"desc":"Remove unused variable 'ProgressCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ignoredProgress' is defined but never used.","line":29,"column":13,"nodeType":"Identifier","messageId":"unusedVar","endLine":29,"endColumn":28,"suggestions":[{"messageId":"removeVar","data":{"varName":"ignoredProgress"},"fix":{"range":[1253,1279],"text":""},"desc":"Remove unused variable 'ignoredProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ignoredCurrentPhrase' is defined but never used.","line":30,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"ignoredCurrentPhrase"},"fix":{"range":[1278,1359],"text":""},"desc":"Remove unused variable 'ignoredCurrentPhrase'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ignoredTotalPhrases' is defined but never used.","line":31,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":31,"endColumn":36,"suggestions":[{"messageId":"removeVar","data":{"varName":"ignoredTotalPhrases"},"fix":{"range":[1359,1396],"text":""},"desc":"Remove unused variable 'ignoredTotalPhrases'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ignoredCompletedCount' is defined but never used.","line":32,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":32,"endColumn":40,"suggestions":[{"messageId":"removeVar","data":{"varName":"ignoredCompletedCount"},"fix":{"range":[1396,1437],"text":""},"desc":"Remove unused variable 'ignoredCompletedCount'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'index' is defined but never used.","line":51,"column":69,"nodeType":"Identifier","messageId":"unusedVar","endLine":51,"endColumn":74,"suggestions":[{"messageId":"removeVar","data":{"varName":"index"},"fix":{"range":[2229,2236],"text":""},"desc":"Remove unused variable 'index'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// PhrasesProgress/index.js - VERSION CORRIGÉE AVEC PHRASESTATS\n\nimport React from \"react\";\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\nimport {\n  calculateTotalPhrases,\n  calculateCompletedPhrasesCount,\n  calculateTotalPhrasesProgress,\n  calculateCategoryPhrasesProgress,\n} from \"../../../../utils/phrases/phrasesStats\";\n\n/**\n * 📊 PhrasesProgress - Version Corrigée avec phrasesStats\n * ✅ Utilise les vraies fonctions de calcul\n * ✅ Gère correctement la structure des données phrases\n * \n * @param {number} progress - Pourcentage de progression (0-100) [IGNORÉ - recalculé]\n * @param {number} currentPhrase - Phrase actuelle (1-based) [IGNORÉ - recalculé]\n * @param {number} totalPhrases - Nombre total de phrases [IGNORÉ - recalculé]\n * @param {number} completedCount - Nombre de phrases complétées [IGNORÉ - recalculé]\n * @param {string} levelColor - Couleur du niveau\n * @param {object} phrasesData - Données des phrases\n * @param {object} completedPhrases - Phrases complétées par catégorie\n * @param {boolean} expanded - État d'expansion\n * @param {function} onToggleExpand - Fonction pour toggle expansion\n * @param {function} onCategoryPress - Fonction appelée lors du clic sur catégorie\n */\nconst PhrasesProgress = ({\n  progress: ignoredProgress, // ✅ On ignore ces props car on recalcule\n  currentPhrase: ignoredCurrentPhrase,\n  totalPhrases: ignoredTotalPhrases,\n  completedCount: ignoredCompletedCount,\n  levelColor = \"#5E60CE\",\n  phrasesData = null,\n  completedPhrases = {},\n  expanded = false,\n  onToggleExpand = () => {},\n  onCategoryPress = () => {},\n}) => {\n  \n  // ✅ CORRECTION : Utilise les vraies fonctions de calcul\n  const categories = phrasesData?.categories || [];\n  const phrases = phrasesData?.phrases || [];\n  \n  const totalPhrasesCount = calculateTotalPhrases(categories, phrases);\n  const completedPhrasesCount = calculateCompletedPhrasesCount(completedPhrases);\n  const totalProgress = calculateTotalPhrasesProgress(categories, phrases, completedPhrases);\n  const categoryProgressData = calculateCategoryPhrasesProgress(categories, phrases, completedPhrases);\n\n  // Transformation pour le format ProgressCard\n  const formattedCategoryData = categoryProgressData.map((category, index) => ({\n    title: category.title,\n    completed: category.completedPhrases,\n    total: category.totalPhrases,\n    progress: category.progress,\n  }));\n\n  console.log(\"🔍 PhrasesProgress Debug:\", {\n    hasCategories: categories.length > 0,\n    hasPhrases: phrases.length > 0,\n    categoriesLength: categories.length,\n    phrasesLength: phrases.length,\n    totalPhrasesCount,\n    completedPhrasesCount,\n    totalProgress,\n    phrasesDataKeys: phrasesData ? Object.keys(phrasesData) : \"null\"\n  });\n\n  return (\n    <ProgressCard\n      title=\"Progression\"\n      progress={totalProgress} // ✅ Utilise le calcul correct\n      completed={completedPhrasesCount} // ✅ Utilise le calcul correct\n      total={totalPhrasesCount} // ✅ Utilise le calcul correct\n      unit=\"phrases\"\n      levelColor={levelColor}\n      expandable={categoryProgressData.length > 0}\n      expanded={expanded}\n      onToggleExpand={onToggleExpand}\n      categoryData={formattedCategoryData}\n      onCategoryPress={onCategoryPress}\n    />\n  );\n};\n\nexport default PhrasesProgress;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\hooks\\usePhrases.js","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'categories' logical expression could make the dependencies of useEffect Hook (at line 93) change on every render. To fix this, wrap the initialization of 'categories' in its own useMemo() Hook.","line":25,"column":9,"nodeType":"VariableDeclarator","endLine":25,"endColumn":51},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'categories' logical expression could make the dependencies of useCallback Hook (at line 156) change on every render. To fix this, wrap the initialization of 'categories' in its own useMemo() Hook.","line":25,"column":9,"nodeType":"VariableDeclarator","endLine":25,"endColumn":51},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'categories' logical expression could make the dependencies of useCallback Hook (at line 216) change on every render. To fix this, wrap the initialization of 'categories' in its own useMemo() Hook.","line":25,"column":9,"nodeType":"VariableDeclarator","endLine":25,"endColumn":51},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'allPhrases' logical expression could make the dependencies of useCallback Hook (at line 156) change on every render. To fix this, wrap the initialization of 'allPhrases' in its own useMemo() Hook.","line":26,"column":9,"nodeType":"VariableDeclarator","endLine":26,"endColumn":48},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'allPhrases' logical expression could make the dependencies of useCallback Hook (at line 202) change on every render. To fix this, wrap the initialization of 'allPhrases' in its own useMemo() Hook.","line":26,"column":9,"nodeType":"VariableDeclarator","endLine":26,"endColumn":48},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentCategory' logical expression could make the dependencies of useCallback Hook (at line 216) change on every render. To fix this, wrap the initialization of 'currentCategory' in its own useMemo() Hook.","line":27,"column":9,"nodeType":"VariableDeclarator","endLine":27,"endColumn":101},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentPhrases' conditional could make the dependencies of useCallback Hook (at line 216) change on every render. To fix this, wrap the initialization of 'currentPhrases' in its own useMemo() Hook.","line":28,"column":9,"nodeType":"VariableDeclarator","endLine":30,"endColumn":9},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentPhrase' logical expression could make the dependencies of useCallback Hook (at line 216) change on every render. To fix this, wrap the initialization of 'currentPhrase' in its own useMemo() Hook.","line":31,"column":9,"nodeType":"VariableDeclarator","endLine":31,"endColumn":108},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'STORAGE_KEY'. Either include it or remove the dependency array.","line":58,"column":6,"nodeType":"ArrayExpression","endLine":58,"endColumn":13,"suggestions":[{"desc":"Update the dependencies array to be: [STORAGE_KEY, level]","fix":{"range":[2373,2380],"text":"[STORAGE_KEY, level]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/usePhrases.js - HOOK UNIFIÉ SIMPLE\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { Alert } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n/**\n * 🎯 Hook unifié pour Phrases Exercise\n * Remplace usePhrasesExerciseState + usePhrasesProgress + usePhrasesDisplay\n * Simple, efficace, maintenable - pattern identique à useReading, useGrammar et useVocabulary\n */\nconst usePhrases = (phrasesData = null, level = \"A1\") => {\n  \n  // =================== CORE STATE ===================\n  const [categoryIndex, setCategoryIndex] = useState(0);\n  const [phraseIndex, setPhraseIndex] = useState(0);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [completedPhrases, setCompletedPhrases] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [showDetailedProgress, setShowDetailedProgress] = useState(false);\n\n  // =================== REFS ===================\n  const isInitialized = useRef(false);\n\n  // =================== COMPUTED VALUES ===================\n  const categories = phrasesData?.categories || [];\n  const allPhrases = phrasesData?.phrases || [];\n  const currentCategory = categories[categoryIndex] || { id: null, name: \"Loading...\", phrases: [] };\n  const currentPhrases = currentCategory.id \n    ? allPhrases.filter(phrase => phrase.categoryId === currentCategory.id)\n    : [];\n  const currentPhrase = currentPhrases[phraseIndex] || { id: \"\", phrase: \"\", translation: \"\", context: \"\" };\n  const totalCategories = categories.length;\n  const totalPhrasesInCategory = currentPhrases.length;\n  \n  // =================== PERSISTENCE ===================\n  const STORAGE_KEY = `phrases_${level}`;\n\n  // Load data from storage\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const saved = await AsyncStorage.getItem(STORAGE_KEY);\n        if (saved) {\n          const { completedPhrases: savedCompleted, lastPosition } = JSON.parse(saved);\n          setCompletedPhrases(savedCompleted || {});\n          if (lastPosition) {\n            setCategoryIndex(lastPosition.categoryIndex || 0);\n            setPhraseIndex(lastPosition.phraseIndex || 0);\n          }\n        }\n      } catch (error) {\n        console.log('Error loading phrases data:', error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    loadData();\n  }, [level]);\n\n  // Save data to storage\n  const saveData = useCallback(async () => {\n    try {\n      const dataToSave = {\n        completedPhrases,\n        lastPosition: {\n          categoryIndex,\n          phraseIndex\n        }\n      };\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n    } catch (error) {\n      console.log('Error saving phrases data:', error);\n    }\n  }, [completedPhrases, categoryIndex, phraseIndex, STORAGE_KEY]);\n\n  // Auto-save when data changes\n  useEffect(() => {\n    if (loaded) saveData();\n  }, [saveData, loaded]);\n\n  // Initialize progress for new categories\n  useEffect(() => {\n    if (loaded && phrasesData && !isInitialized.current) {\n      const newCompletedPhrases = { ...completedPhrases };\n      categories.forEach((_, index) => {\n        if (!newCompletedPhrases[index]) {\n          newCompletedPhrases[index] = [];\n        }\n      });\n      setCompletedPhrases(newCompletedPhrases);\n      isInitialized.current = true;\n    }\n  }, [loaded, phrasesData, categories, completedPhrases]);\n\n  // =================== NAVIGATION ACTIONS ===================\n  const changeCategory = useCallback((newCategoryIndex) => {\n    if (newCategoryIndex !== categoryIndex && newCategoryIndex >= 0 && newCategoryIndex < categories.length) {\n      setCategoryIndex(newCategoryIndex);\n      setPhraseIndex(0);\n      setShowTranslation(false);\n    }\n  }, [categoryIndex, categories.length]);\n\n  const goToNextPhrase = useCallback(() => {\n    if (phraseIndex < totalPhrasesInCategory - 1) {\n      setPhraseIndex(prev => prev + 1);\n      setShowTranslation(false);\n    }\n  }, [phraseIndex, totalPhrasesInCategory]);\n\n  const goToPreviousPhrase = useCallback(() => {\n    if (phraseIndex > 0) {\n      setPhraseIndex(prev => prev - 1);\n      setShowTranslation(false);\n      return true;\n    }\n    return false;\n  }, [phraseIndex]);\n\n  const toggleTranslation = useCallback(() => {\n    setShowTranslation(prev => !prev);\n  }, []);\n\n  const toggleDetailedProgress = useCallback(() => {\n    setShowDetailedProgress(prev => !prev);\n  }, []);\n\n  // =================== COMPLETION LOGIC ===================\n  const markPhraseAsCompleted = useCallback((catIndex, pIndex) => {\n    setCompletedPhrases(prev => {\n      const categoryCompleted = prev[catIndex] || [];\n      if (!categoryCompleted.includes(pIndex)) {\n        return {\n          ...prev,\n          [catIndex]: [...categoryCompleted, pIndex]\n        };\n      }\n      return prev;\n    });\n  }, []);\n\n  // Find next uncompleted category\n  const findNextUncompletedCategory = useCallback(() => {\n    const totalCategories = categories.length;\n    for (let i = 1; i <= totalCategories; i++) {\n      const nextIndex = (categoryIndex + i) % totalCategories;\n      const category = categories[nextIndex];\n      const categoryPhrases = allPhrases.filter(p => p.categoryId === category.id);\n      const completedInCategory = completedPhrases[nextIndex]?.length || 0;\n      \n      if (completedInCategory < categoryPhrases.length) {\n        return nextIndex;\n      }\n    }\n    return -1;\n  }, [categories, categoryIndex, allPhrases, completedPhrases]);\n\n  // =================== MAIN NAVIGATION ===================\n  const handleNext = useCallback(() => {\n    // Mark current phrase as completed\n    markPhraseAsCompleted(categoryIndex, phraseIndex);\n\n    // Check if there are more phrases in current category\n    if (phraseIndex < totalPhrasesInCategory - 1) {\n      goToNextPhrase();\n    } else {\n      // End of category - find next uncompleted category\n      const nextCategoryIndex = findNextUncompletedCategory();\n      if (nextCategoryIndex === -1) {\n        // All done!\n        Alert.alert(\n          \"Félicitations\",\n          \"Vous avez terminé tous les exercices de phrases !\"\n        );\n        return { completed: true };\n      } else {\n        changeCategory(nextCategoryIndex);\n      }\n    }\n    return { completed: false };\n  }, [categoryIndex, phraseIndex, totalPhrasesInCategory, markPhraseAsCompleted, goToNextPhrase, findNextUncompletedCategory, changeCategory]);\n\n  const handlePrevious = useCallback(() => {\n    goToPreviousPhrase();\n  }, [goToPreviousPhrase]);\n\n  // =================== COMPUTED STATS ===================\n  const getStats = useCallback(() => {\n    const totalPhrases = allPhrases.length;\n    const completedPhrasesCount = Object.values(completedPhrases).reduce((sum, completed) => sum + (completed?.length || 0), 0);\n    const totalProgress = totalPhrases > 0 ? Math.round((completedPhrasesCount / totalPhrases) * 100) : 0;\n    const completionProgress = totalPhrasesInCategory > 0 ? ((phraseIndex + 1) / totalPhrasesInCategory) * 100 : 0;\n\n    return {\n      totalPhrases,\n      completedPhrasesCount,\n      totalProgress,\n      completionProgress,\n      completedInCurrentCategory: completedPhrases[categoryIndex]?.length || 0,\n      totalInCurrentCategory: totalPhrasesInCategory\n    };\n  }, [allPhrases, completedPhrases, totalPhrasesInCategory, phraseIndex, categoryIndex]);\n\n  // =================== COMPUTED DISPLAY ===================\n  const getDisplayData = useCallback(() => {\n    const phraseCounter = `${phraseIndex + 1} / ${totalPhrasesInCategory || 0}`;\n    const categoriesNames = categories.map(cat => cat.name);\n    \n    return {\n      phraseCounter,\n      categories: categoriesNames,\n      currentPhrase,\n      currentCategory,\n      currentPhrases\n    };\n  }, [phraseIndex, totalPhrasesInCategory, categories, currentPhrase, currentCategory, currentPhrases]);\n\n  // =================== VALIDATION ===================\n  const hasValidData = phrasesData?.categories && Array.isArray(phrasesData.categories) && phrasesData.categories.length > 0;\n\n  const canGoToPrevious = phraseIndex > 0;\n  const isLastPhraseInCategory = phraseIndex === totalPhrasesInCategory - 1;\n\n  return {\n    // State\n    categoryIndex,\n    phraseIndex,\n    showTranslation,\n    completedPhrases,\n    loaded,\n    showDetailedProgress,\n    \n    // Data\n    currentPhrase,\n    currentCategory,\n    currentPhrases,\n    totalCategories,\n    totalPhrasesInCategory,\n    hasValidData,\n    \n    // Actions\n    changeCategory,\n    toggleTranslation,\n    toggleDetailedProgress,\n    handleNext,\n    handlePrevious,\n    \n    // Computed\n    canGoToPrevious,\n    isLastPhraseInCategory,\n    stats: getStats(),\n    display: getDisplayData(),\n  };\n};\n\nexport default usePhrases;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[70,76],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[123,128],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[127,146],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[284,294],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'PhrasesHeader' is defined but never used.","line":11,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"PhrasesHeader"},"fix":{"range":[387,406],"text":""},"desc":"Remove unused variable 'PhrasesHeader'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'PhrasesCategorySelector' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":31,"suggestions":[{"messageId":"removeVar","data":{"varName":"PhrasesCategorySelector"},"fix":{"range":[432,461],"text":""},"desc":"Remove unused variable 'PhrasesCategorySelector'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'PhrasesProgress' is defined but never used.","line":13,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"PhrasesProgress"},"fix":{"range":[497,518],"text":""},"desc":"Remove unused variable 'PhrasesProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'PhraseCard' is defined but never used.","line":14,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"PhraseCard"},"fix":{"range":[546,562],"text":""},"desc":"Remove unused variable 'PhraseCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'PhrasesNavigation' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"PhrasesNavigation"},"fix":{"range":[585,608],"text":""},"desc":"Remove unused variable 'PhrasesNavigation'."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'saveActivity'. Either include it or remove the dependency array.","line":93,"column":6,"nodeType":"ArrayExpression","endLine":93,"endColumn":138,"suggestions":[{"desc":"Update the dependencies array to be: [loaded, hasValidData, currentPhrase, currentPhrases.length, phraseIndex, totalPhrasesInCategory, categoryIndex, level, phrasesData, saveActivity]","fix":{"range":[3070,3202],"text":"[loaded, hasValidData, currentPhrase, currentPhrases.length, phraseIndex, totalPhrasesInCategory, categoryIndex, level, phrasesData, saveActivity]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// PhrasesExercise/index.js - VERSION AVEC SAUVEGARDE ACTIVITÉ\nimport React, { useMemo, useEffect } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\n\n// Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\n\n// Components\nimport PhrasesHeader from \"./PhrasesHeader\";\nimport PhrasesCategorySelector from \"./PhrasesCategorySelector\";\nimport PhrasesProgress from \"./PhrasesProgress\";\nimport PhraseCard from \"./PhraseCard\";\nimport PhrasesNavigation from \"./PhrasesNavigation\";\n\n// Hook & Utils\nimport usePhrases from \"./hooks/usePhrases\";\nimport useLastActivity from \"../../../hooks/useLastActivity\"; // ✅ AJOUTÉ\nimport { getPhrasesData, getLevelColor } from \"../../../utils/phrases/phrasesDataHelper\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 PhrasesExercise - VERSION AVEC SAUVEGARDE ACTIVITÉ\n */\nconst PhrasesExercise = ({ route }) => {\n  const navigation = useNavigation();\n  const { level = \"A1\" } = route?.params || {};\n  const styles = createStyles();\n\n  // ✅ AJOUTÉ : Hook pour sauvegarder l'activité\n  const { saveActivity } = useLastActivity();\n\n  // Data\n  const levelColor = getLevelColor(level);\n  const phrasesData = useMemo(() => getPhrasesData(level), [level]);\n\n  // Hook unifié - Garde seulement les variables utilisées\n  const {\n    categoryIndex,\n    phraseIndex,\n    showTranslation,\n    completedPhrases,\n    loaded,\n    showDetailedProgress,\n    currentPhrase,\n    currentPhrases,\n    totalPhrasesInCategory,\n    hasValidData,\n    changeCategory,\n    toggleTranslation,\n    toggleDetailedProgress,\n    handleNext,\n    handlePrevious,\n    canGoToPrevious,\n    isLastPhraseInCategory,\n    stats,\n    display,\n  } = usePhrases(phrasesData, level);\n\n  // ✅ AJOUTÉ : Sauvegarder l'activité à chaque changement de phrase/catégorie\n  useEffect(() => {\n    console.log(\"🔍 DEBUG PhrasesExercise:\", { \n      loaded, \n      hasValidData, \n      hasCurrentPhrase: !!currentPhrase,\n      currentPhrasesLength: currentPhrases.length,\n      phraseIndex,\n      totalPhrasesInCategory,\n      categoryIndex,\n      phrasesDataStructure: phrasesData ? Object.keys(phrasesData) : \"none\"\n    });\n\n    if (loaded && hasValidData && currentPhrase && currentPhrases.length > 0 && phraseIndex < 100) { // ✅ Protection boucle\n      const currentCategory = phrasesData?.categories?.[categoryIndex];\n      \n      const activityData = {\n        title: \"Expressions\",\n        level: level,\n        type: \"phrases\",\n        metadata: {\n          phrase: phraseIndex,\n          totalPhrases: totalPhrasesInCategory || currentPhrases.length, // ✅ Fallback\n          category: currentCategory?.name || \"Général\",\n          categoryIndex: categoryIndex,\n          totalCategories: phrasesData?.categories?.length || 1\n        }\n      };\n\n      console.log(\"✅ Phrases activity saved:\", `${activityData.title} - Phrase ${phraseIndex + 1}/${activityData.metadata.totalPhrases}`);\n      saveActivity(activityData);\n    }\n  }, [loaded, hasValidData, currentPhrase, currentPhrases.length, phraseIndex, totalPhrasesInCategory, categoryIndex, level, phrasesData]);\n\n  // Handlers\n const handleBackPress = () => {\n  router.push({\n    pathname: \"/(tabs)/exerciseSelection\",\n    params: { level }\n  });\n};\n  \n  const handleCategoryChange = (index) => changeCategory(index);\n\n  const handleToggleProgressDetails = () => toggleDetailedProgress();\n\n  const handleNextPhrase = () => {\n    const result = handleNext();\n    if (result.completed) {\n      navigation.goBack();\n    }\n  };\n\n  const handlePreviousPhrase = () => handlePrevious();\n\n  // Loading state\n  if (!loaded || !hasValidData) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} />\n        </View>\n      </Container>\n    );\n  }\n\n  // Empty state\n  if (currentPhrases.length === 0) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <PhrasesHeader\n          level={level}\n          onBackPress={handleBackPress}\n        />\n        <View style={styles.emptyStateContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} />\n        </View>\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      withScrollView\n      backgroundColor=\"#f8fafc\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      scrollViewProps={{\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: styles.scrollContent,\n      }}\n    >\n      {/* Header */}\n      <PhrasesHeader\n        level={level}\n        onBackPress={handleBackPress}\n      />\n\n      {/* Progress - MAINTENANT COLLÉ AU HEADER */}\n      <PhrasesProgress\n        progress={stats.completionProgress}\n        currentPhrase={phraseIndex + 1}\n        totalPhrases={totalPhrasesInCategory}\n        completedCount={stats.completedPhrasesCount}\n        levelColor={levelColor}\n        phrasesData={phrasesData}\n        completedPhrases={completedPhrases}\n        expanded={showDetailedProgress}\n        onToggleExpand={handleToggleProgressDetails}\n        onCategoryPress={handleCategoryChange}\n      />\n\n      {/* Category Selector - APRÈS PROGRESS comme les autres exercices */}\n      <PhrasesCategorySelector\n        categories={display.categories}\n        selectedIndex={categoryIndex}\n        onSelectCategory={handleCategoryChange}\n        levelColor={levelColor}\n      />\n\n      {/* Phrase Card */}\n      <PhraseCard\n        phraseData={currentPhrase}\n        showTranslation={showTranslation}\n        onToggleTranslation={toggleTranslation}\n        levelColor={levelColor}\n      />\n\n      {/* Navigation */}\n      <PhrasesNavigation\n        onNext={handleNextPhrase}\n        onPrevious={handlePreviousPhrase}\n        disablePrevious={!canGoToPrevious}\n        disableNext={false}\n        isLast={isLastPhraseInCategory}\n        levelColor={levelColor}\n      />\n    </Container>\n  );\n};\n\nexport default PhrasesExercise;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\QuestionIndicators\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[79,90],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[108,113],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[112,130],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/screens/exercises/reading/QuestionIndicators/index.js\nimport React from \"react\";\nimport { View, TouchableOpacity } from \"react-native\";\nimport styles from \"./style\";\n\n/**\n * Indicateurs visuels pour naviguer entre les questions\n */\nconst QuestionIndicators = ({\n  totalQuestions,\n  currentQuestionIndex,\n  completedQuestions = [],\n  onSelectQuestion,\n  levelColor,\n}) => {\n  return (\n    <View style={styles.container}>\n      {Array.from({ length: totalQuestions }).map((_, index) => (\n        <TouchableOpacity\n          key={index}\n          onPress={() => onSelectQuestion(index)}\n        >\n          <View\n            style={[\n              styles.indicator,\n              {\n                backgroundColor:\n                  currentQuestionIndex === index\n                    ? levelColor\n                    : completedQuestions.includes(index)\n                    ? `${levelColor}50`\n                    : \"#e5e7eb\",\n                width: currentQuestionIndex === index ? 12 : 8,\n                height: currentQuestionIndex === index ? 12 : 8,\n              },\n            ]}\n          />\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n};\n\nexport default QuestionIndicators;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\QuestionIndicators\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[52,63],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseHeader' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseHeader"},"fix":{"range":[79,99],"text":""},"desc":"Remove unused variable 'ExerciseHeader'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ReadingHeader/index.js - VERSION CORRIGÉE\nimport React from \"react\";\nimport ExerciseHeader from \"../../../../components/exercise-common/ExerciseHeader\";\n\n/**\n * 🏆 ReadingHeader - Version corrigée avec exerciseType reading\n * Utilise le bon exerciseType maintenant qu'on a les constantes\n */\nconst ReadingHeader = ({ level, onBackPress }) => {\n  return (\n    <ExerciseHeader\n      title=\"Reading\"\n      level={level || \"A1\"} // ← SÉCURISÉ : fallback si level undefined\n      exerciseType=\"reading\" // ← CORRECT : existe dans les constantes\n      onClose={onBackPress}\n      backIcon=\"arrow-back\"\n    />\n  );\n};\n\nexport default ReadingHeader;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingNavigation\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[78,89],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[98,134],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[142,165],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/screens/exercises/reading/ReadingNavigation/index.js\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\nimport styles from \"./style\";\n\n/**\n * Composant de navigation pour l'exercice de lecture\n * Encapsule la logique de navigation avec différents états\n */\nconst ReadingNavigation = ({\n  showFeedback,\n  isCorrect,\n  selectedAnswer,\n  currentQuestionIndex,\n  totalQuestions,\n  attempts,\n  levelColor,\n  onNext,\n  onPrevious,\n  onRetry\n}) => {\n  // Déterminer quelle action effectuer pour les boutons\n  const handleNavigation = (action) => {\n    if (action === \"next\") {\n      showFeedback ? onNext() : onNext(\"check\");\n    } else if (action === \"previous\") {\n      onPrevious();\n    } else if (action === \"retry\") {\n      onRetry();\n    }\n  };\n\n  // État initial - pas encore de feedback\n  if (!showFeedback) {\n    return (\n      <View style={styles.container}>\n        <NavigationButtons\n          onNext={() => handleNavigation(\"next\")}\n          onPrevious={() => handleNavigation(\"previous\")}\n          currentIndex={currentQuestionIndex}\n          totalCount={totalQuestions}\n          disableNext={selectedAnswer === null}\n          disablePrevious={currentQuestionIndex === 0}\n          showSkip={false}\n          primaryColor={levelColor}\n          buttonLabels={{\n            previous: \"Previous\",\n            next: \"Check Answer\",\n            skip: \"Skip\",\n            finish: \"Finish\",\n          }}\n          variant=\"standard\"\n        />\n      </View>\n    );\n  } \n  // Réponse correcte\n  else if (isCorrect) {\n    return (\n      <View style={styles.container}>\n        <NavigationButtons\n          onNext={() => handleNavigation(\"next\")}\n          onPrevious={() => handleNavigation(\"previous\")}\n          currentIndex={currentQuestionIndex}\n          totalCount={totalQuestions}\n          disablePrevious={currentQuestionIndex === 0}\n          primaryColor={levelColor}\n          buttonLabels={{\n            previous: \"Previous\",\n            next: currentQuestionIndex < totalQuestions - 1 ? \"Next Question\" : \"Complete\",\n            skip: \"Skip\",\n            finish: \"Complete\",\n          }}\n          variant=\"standard\"\n        />\n      </View>\n    );\n  } \n  // Réponse incorrecte\n  else {\n    return (\n      <View style={styles.container}>\n        <NavigationButtons\n          onNext={attempts > 1 ? () => handleNavigation(\"next\") : () => handleNavigation(\"retry\")}\n          onPrevious={() => handleNavigation(\"previous\")}\n          currentIndex={currentQuestionIndex}\n          totalCount={totalQuestions}\n          disablePrevious={currentQuestionIndex === 0}\n          primaryColor={levelColor}\n          buttonLabels={{\n            previous: \"Previous\",\n            next: attempts > 1 ? \"Skip\" : \"Try Again\",\n            skip: \"Skip\",\n            finish: \"Finish\",\n          }}\n          variant=\"standard\"\n        />\n      </View>\n    );\n  }\n};\n\nexport default ReadingNavigation;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingNavigation\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingProgress\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[75,86],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressCard' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressCard"},"fix":{"range":[102,120],"text":""},"desc":"Remove unused variable 'ProgressCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'index' is defined but never used.","line":57,"column":69,"nodeType":"Identifier","messageId":"unusedVar","endLine":57,"endColumn":74,"suggestions":[{"messageId":"removeVar","data":{"varName":"index"},"fix":{"range":[1753,1760],"text":""},"desc":"Remove unused variable 'index'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ReadingProgress/index.js - VERSION CORRIGÉE AVEC DÉTECTION AUTO\n\nimport React from \"react\";\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\nimport {\n  calculateTotalQuestions,\n  calculateCompletedQuestionsCount,\n  calculateTotalProgress,\n  calculateExerciseProgress,\n} from \"../../../../utils/reading/readingStats.js\";\n\n/**\n * 📊 ReadingProgress - Version Corrigée avec détection automatique\n * ✅ Détecte automatiquement la structure des données\n * ✅ Gère exercises, texts, passages, etc.\n */\nconst ReadingProgress = ({\n  readingData,\n  completedQuestions,\n  levelColor,\n  expanded = false,\n  onToggleExpand,\n  onExercisePress,\n}) => {\n  \n  // ✅ DÉTECTION AUTOMATIQUE de la structure\n  const getDataArray = () => {\n    if (!readingData) return [];\n    \n    // Si c'est déjà un tableau directement\n    if (Array.isArray(readingData)) {\n      return readingData;\n    }\n    \n    // Si c'est un objet avec différentes propriétés possibles\n    if (typeof readingData === 'object') {\n      return readingData.exercises || \n             readingData.texts || \n             readingData.passages || \n             readingData.readings || \n             readingData.items || \n             [];\n    }\n    \n    return [];\n  };\n\n  const dataArray = getDataArray();\n  \n  // ✅ UTILISE la vraie structure détectée\n  const totalQuestionsCount = calculateTotalQuestions(dataArray);\n  const completedQuestionsCount = calculateCompletedQuestionsCount(completedQuestions);\n  const totalProgress = calculateTotalProgress(dataArray, completedQuestions);\n  const exerciseProgressData = calculateExerciseProgress(dataArray, completedQuestions);\n\n  // Transformation pour le format ProgressCard\n  const formattedExerciseData = exerciseProgressData.map((exercise, index) => ({\n    title: exercise.title,\n    completed: exercise.completedQuestions,\n    total: exercise.totalQuestions,\n    progress: exercise.progress,\n  }));\n\n  console.log(\"🔍 ReadingProgress Debug:\", {\n    isReadingDataArray: Array.isArray(readingData),\n    hasExercises: !!(readingData?.exercises),\n    hasTexts: !!(readingData?.texts),\n    hasPassages: !!(readingData?.passages),\n    dataArrayLength: dataArray.length,\n    totalQuestionsCount,\n    completedQuestionsCount,\n    totalProgress,\n    readingDataKeys: readingData && typeof readingData === 'object' ? Object.keys(readingData) : \"not object or null\"\n  });\n\n  return (\n    <ProgressCard\n      title=\"Progression\" // ✅ Titre uniforme\n      progress={totalProgress}\n      completed={completedQuestionsCount}\n      total={totalQuestionsCount}\n      unit=\"questions\"\n      levelColor={levelColor}\n      expandable={true}\n      expanded={expanded}\n      onToggleExpand={onToggleExpand}\n      categoryData={formattedExerciseData}\n      onCategoryPress={onExercisePress}\n    />\n  );\n};\n\nexport default ReadingProgress;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingQuestionCard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[56,67],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[85,90],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[89,95],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[95,113],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Animated' is defined but never used.","line":3,"column":40,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":48,"suggestions":[{"messageId":"removeVar","data":{"varName":"Animated"},"fix":{"range":[113,123],"text":""},"desc":"Remove unused variable 'Animated'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[147,193],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[201,215],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[260,280],"text":""},"desc":"Remove unused variable 'ContentSection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ReadingQuestionCard/index.js - VERSION SIMPLE\nimport React from \"react\";\nimport { View, Text, TouchableOpacity, Animated } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport HeroCard from \"../../../../components/ui/HeroCard\";\nimport ContentSection from \"../../../../components/ui/ContentSection\";\nimport createStyles from \"./style\";\n\n/**\n * ❓ ReadingQuestionCard - Version Simple & Efficace\n * ❌ Confetti animations\n * ❌ Complex micro-interactions\n * ✅ Clean, functional, maintainable\n */\nconst ReadingQuestionCard = ({\n  question,\n  questionIndex,\n  selectedAnswer,\n  onSelectAnswer,\n  showFeedback,\n  fadeAnim,\n  slideAnim,\n  levelColor = \"#3b82f6\",\n}) => {\n  const styles = createStyles(levelColor);\n\n  if (!question) return null;\n\n  // Determine option state\n  const getOptionState = (optionIndex) => {\n    if (!showFeedback) {\n      return selectedAnswer === optionIndex ? 'selected' : 'default';\n    }\n    \n    if (optionIndex === question.correctAnswer) {\n      return 'correct';\n    }\n    \n    if (selectedAnswer === optionIndex && selectedAnswer !== question.correctAnswer) {\n      return 'incorrect';\n    }\n    \n    return 'default';\n  };\n\n  // Handle option press\n  const handleOptionPress = (optionIndex) => {\n    if (showFeedback) return;\n    onSelectAnswer(optionIndex);\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        {\n          opacity: fadeAnim,\n          transform: [{ translateY: slideAnim }],\n        },\n      ]}\n    >\n      {/* Question Header */}\n      <View style={styles.questionHeader}>\n        <HeroCard \n          content={`Question ${questionIndex + 1}`}\n          fontSize={18}\n          levelColor={levelColor}\n          showUnderline={false}\n          backgroundColor=\"#F8F9FA\"\n        />\n      </View>\n      \n      {/* Question Text */}\n      <ContentSection\n        title=\"❓ Question\"\n        content={question.text}\n        levelColor={levelColor}\n        backgroundColor=\"white\"\n        contentStyle={{\n          fontSize: 18,\n          fontWeight: \"600\",\n          color: \"#1e293b\",\n          lineHeight: 26,\n        }}\n      />\n\n      {/* Options */}\n      <View style={styles.optionsContainer}>\n        <Text style={[styles.optionsTitle, { color: levelColor }]}>\n          💡 Choose your answer:\n        </Text>\n        \n        {question.options.map((option, index) => {\n          const optionState = getOptionState(index);\n          \n          return (\n            <TouchableOpacity\n              key={index}\n              style={[\n                styles.optionButton,\n                optionState === 'selected' && { \n                  borderColor: levelColor,\n                  backgroundColor: `${levelColor}08`,\n                },\n                optionState === 'correct' && styles.optionCorrect,\n                optionState === 'incorrect' && styles.optionIncorrect,\n              ]}\n              onPress={() => handleOptionPress(index)}\n              disabled={showFeedback}\n              activeOpacity={0.8}\n            >\n              <View style={styles.optionContent}>\n                {/* Option Letter */}\n                <View \n                  style={[\n                    styles.optionLetterContainer,\n                    { backgroundColor: `${levelColor}15` },\n                    optionState === 'correct' && { backgroundColor: '#10b98120' },\n                    optionState === 'incorrect' && { backgroundColor: '#ef444420' },\n                  ]}\n                >\n                  <Text style={[\n                    styles.optionLetter, \n                    { color: levelColor },\n                    optionState === 'correct' && { color: '#10b981' },\n                    optionState === 'incorrect' && { color: '#ef4444' },\n                  ]}>\n                    {String.fromCharCode(65 + index)}\n                  </Text>\n                </View>\n                \n                {/* Option Text */}\n                <Text\n                  style={[\n                    styles.optionText,\n                    optionState === 'selected' && { \n                      color: levelColor, \n                      fontWeight: \"600\" \n                    },\n                    optionState === 'correct' && styles.optionCorrectText,\n                    optionState === 'incorrect' && styles.optionIncorrectText,\n                  ]}\n                >\n                  {option}\n                </Text>\n                \n                {/* Status Icon */}\n                {showFeedback && (\n                  <View>\n                    {optionState === 'correct' && (\n                      <Ionicons name=\"checkmark-circle\" size={24} color=\"#10b981\" />\n                    )}\n                    {optionState === 'incorrect' && (\n                      <Ionicons name=\"close-circle\" size={24} color=\"#ef4444\" />\n                    )}\n                  </View>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n};\n\nexport default ReadingQuestionCard;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingQuestionCard\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingTextSelector\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[95,106],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'CategorySelector' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"CategorySelector"},"fix":{"range":[122,144],"text":""},"desc":"Remove unused variable 'CategorySelector'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'scrollViewRef' is defined but never used.","line":17,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"scrollViewRef"},"fix":{"range":[580,597],"text":""},"desc":"Remove unused variable 'scrollViewRef'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ReadingTextSelector/index.js - VERSION REFACTORISÉE avec CategorySelector générique\n\nimport React from \"react\";\nimport CategorySelector from \"../../../../components/exercise-common/CategorySelector\";\n\n/**\n * 🎨 ReadingTextSelector - Version Refactorisée avec CategorySelector générique\n * 80+ lignes → 25 lignes (-70% de code)\n * Adaptateur pour le sélecteur d'exercices de lecture\n * Réutilise le composant générique CategorySelector\n * Pattern identique à VocabularyCategorySelector\n */\nconst ReadingTextSelector = ({\n  exercises = [],\n  selectedIndex = 0,\n  onSelectExercise,\n  scrollViewRef, // Pas utilisé par CategorySelector, mais gardé pour compatibilité\n  levelColor,\n}) => {\n  // Transformation du format des exercices pour correspondre au composant générique\n  const formattedExercises = exercises.map((exercise, index) => ({\n    id: index,\n    name: exercise.title || `Exercise ${index + 1}`,\n  }));\n\n  // Fonction de callback adaptée - notre composant utilise des indices,\n  // le composant générique utilise des IDs\n  const handleExerciseSelect = (exerciseId) => {\n    // Si l'option \"Tous\" est sélectionnée (null), nous sélectionnons le premier exercice\n    if (exerciseId === null) {\n      onSelectExercise(0);\n    } else {\n      onSelectExercise(exerciseId);\n    }\n  };\n\n  return (\n    <CategorySelector\n      categories={formattedExercises}\n      selectedCategory={selectedIndex === undefined ? 0 : selectedIndex}\n      onSelectCategory={handleExerciseSelect}\n      primaryColor={levelColor}\n      // Props spécifiques à Reading\n      label=\"Reading Exercises:\" // Titre personnalisé\n      showAllOption={false} // Pas besoin de \"Tous\" pour les exercices\n    />\n  );\n};\n\nexport default ReadingTextSelector;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingText\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[52,63],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[81,86],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[85,91],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Ionicons' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ionicons"},"fix":{"range":[115,161],"text":""},"desc":"Remove unused variable 'Ionicons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[169,183],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'RevealButton' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"RevealButton"},"fix":{"range":[228,246],"text":""},"desc":"Remove unused variable 'RevealButton'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ReadingText/index.js - VERSION SIMPLIFIÉE\nimport React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport HeroCard from \"../../../../components/ui/HeroCard\";\nimport RevealButton from \"../../../../components/ui/RevealButton\";\nimport createStyles from \"./style\";\n\n/**\n * 📖 ReadingText - Version Simple & Efficace\n * ✅ Fix bug \"AA 88 words\" \n * ✅ Suppression \"Reading Topics\" redondant\n * ✅ Code simple, 60 lignes au lieu de 150+\n */\nconst ReadingText = ({\n  exercise,\n  textExpanded,\n  onToggleExpand,\n  levelColor = \"#3b82f6\",\n}) => {\n  const styles = createStyles(levelColor);\n  \n  if (!exercise) return null;\n\n  const fullText = exercise.text || \"\";\n  const wordCount = fullText.split(' ').filter(word => word.length > 0).length;\n  const estimatedReadingTime = Math.ceil(wordCount / 200); // 200 mots/min\n\n  return (\n    <View style={styles.container}>\n      {/* 🎯 TITLE */}\n      <HeroCard \n        content={exercise.title || \"Reading Text\"}\n        fontSize={24}\n        levelColor={levelColor}\n        showUnderline={false}\n        icon=\"book-outline\"\n      />\n\n      {/* 📊 READING INFO - VERSION CORRIGÉE */}\n      <View style={styles.infoContainer}>\n        <View style={styles.infoItem}>\n          <Ionicons name=\"time-outline\" size={16} color={levelColor} />\n          <Text style={[styles.infoText, { color: levelColor }]}>\n            ~{estimatedReadingTime} min read\n          </Text>\n        </View>\n        \n        <View style={styles.infoItem}>\n          <Ionicons name=\"text-outline\" size={16} color={levelColor} />\n          <Text style={[styles.infoText, { color: levelColor }]}>\n            {wordCount} words\n          </Text>\n        </View>\n      </View>\n\n      {/* 📖 TEXTE avec RevealButton */}\n      <RevealButton\n        isRevealed={textExpanded}\n        revealedContent={fullText}\n        revealText=\"📖 Read Full Text\"\n        hideText=\"📖 Collapse Text\"\n        onToggle={onToggleExpand}\n        levelColor={levelColor}\n        contentColor=\"#374151\"\n        contentStyle={{\n          fontSize: 16,\n          lineHeight: 24,\n          textAlign: 'justify',\n        }}\n      />\n    </View>\n  );\n};\n\nexport default ReadingText;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingText\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":8,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[215,237],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ReadingText/style.js - VERSION SIMPLIFIÉE\nimport { StyleSheet, Platform } from \"react-native\";\n\n/**\n * 🎯 Styles simples pour ReadingText\n * Pas de complexité inutile, juste l'essentiel\n */\nconst createStyles = (levelColor = \"#3b82f6\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      marginHorizontal: 16,\n      marginVertical: 8,\n    },\n\n    // =================== INFO SECTION ===================\n    infoContainer: {\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      backgroundColor: 'white',\n      borderRadius: 12,\n      padding: 12,\n      marginVertical: 10,\n      ...Platform.select({\n        ios: {\n          shadowColor: '#000',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.05,\n          shadowRadius: 4,\n        },\n        android: {\n          elevation: 1,\n        },\n      }),\n    },\n    \n    infoItem: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    \n    infoText: {\n      fontSize: 14,\n      fontWeight: '600',\n      marginLeft: 6,\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\hooks\\useReading.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[60,66],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[113,118],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[117,136],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[264,274],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ReadingHeader' is defined but never used.","line":9,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"ReadingHeader"},"fix":{"range":[352,371],"text":""},"desc":"Remove unused variable 'ReadingHeader'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ReadingTextSelector' is defined but never used.","line":10,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"ReadingTextSelector"},"fix":{"range":[397,422],"text":""},"desc":"Remove unused variable 'ReadingTextSelector'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ReadingProgress' is defined but never used.","line":11,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"ReadingProgress"},"fix":{"range":[454,475],"text":""},"desc":"Remove unused variable 'ReadingProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ReadingText' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"ReadingText"},"fix":{"range":[503,520],"text":""},"desc":"Remove unused variable 'ReadingText'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ReadingQuestionCard' is defined but never used.","line":13,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"ReadingQuestionCard"},"fix":{"range":[544,569],"text":""},"desc":"Remove unused variable 'ReadingQuestionCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'QuestionIndicators' is defined but never used.","line":14,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"QuestionIndicators"},"fix":{"range":[601,625],"text":""},"desc":"Remove unused variable 'QuestionIndicators'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ReadingNavigation' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"ReadingNavigation"},"fix":{"range":[656,679],"text":""},"desc":"Remove unused variable 'ReadingNavigation'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseFeedback' is defined but never used.","line":16,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseFeedback"},"fix":{"range":[709,731],"text":""},"desc":"Remove unused variable 'ExerciseFeedback'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'InstructionBox' is defined but never used.","line":17,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"InstructionBox"},"fix":{"range":[794,814],"text":""},"desc":"Remove unused variable 'InstructionBox'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'navigation' is assigned a value but never used.","line":25,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":25,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"navigation"},"fix":{"range":[1146,1181],"text":""},"desc":"Remove unused variable 'navigation'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'progress' is assigned a value but never used.","line":50,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":50,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"progress"},"fix":{"range":[1770,1784],"text":""},"desc":"Remove unused variable 'progress'."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'currentExercise', 'currentQuestion', 'exercises.length', 'level', 'loaded', 'saveActivity', and 'totalQuestions'. Either include them or remove the dependency array.","line":88,"column":6,"nodeType":"ArrayExpression","endLine":88,"endColumn":51,"suggestions":[{"desc":"Update the dependencies array to be: [selectedExerciseIndex, currentQuestionIndex, loaded, exercises.length, currentExercise, currentQuestion, saveActivity, level, totalQuestions]","fix":{"range":[2897,2942],"text":"[selectedExerciseIndex, currentQuestionIndex, loaded, exercises.length, currentExercise, currentQuestion, saveActivity, level, totalQuestions]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ReadingExercise/index.js - SANS BOUCLES INFINIES\n\nimport React, { useMemo, useEffect } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\n\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\nimport ReadingHeader from \"./ReadingHeader\";\nimport ReadingTextSelector from \"./ReadingTextSelector\";\nimport ReadingProgress from \"./ReadingProgress\";\nimport ReadingText from \"./ReadingText\";\nimport ReadingQuestionCard from \"./ReadingQuestionCard\";\nimport QuestionIndicators from \"./QuestionIndicators\";\nimport ReadingNavigation from \"./ReadingNavigation\";\nimport ExerciseFeedback from \"../../../components/exercise-common/ExerciseFeedback\";\nimport InstructionBox from \"../../../components/exercise-common/InstructionBox\";\n\nimport useReading from \"./hooks/useReading\";\nimport useLastActivity from \"../../../hooks/useLastActivity\";\nimport { getReadingData, getLevelColor } from \"../../../utils/reading/readingDataHelper\";\nimport createStyles from \"./style\";\n\nconst ReadingExercise = ({ route }) => {\n  const navigation = useNavigation();\n  const { level = \"A1\" } = route?.params || {};\n  const styles = createStyles();\n  const { saveActivity } = useLastActivity();\n\n  // Data\n  const levelColor = getLevelColor(level);\n  const readingData = useMemo(() => getReadingData(level), [level]);\n  const exercises = readingData?.exercises || [];\n\n  // Hook unifié\n  const {\n    selectedExerciseIndex,\n    currentQuestionIndex,\n    selectedAnswer,\n    showFeedback,\n    textExpanded,\n    attempts,\n    completedQuestions,\n    loaded,\n    showDetailedProgress,\n    currentExercise,\n    currentQuestion,\n    totalQuestions,\n    isCorrect,\n    progress,\n    changeExercise,\n    changeQuestion,\n    selectAnswer,\n    submitAnswer,\n    nextQuestion,\n    previousQuestion,\n    retryQuestion,\n    toggleTextExpansion,\n    toggleDetailedProgress,\n    scrollViewRef,\n    textsScrollViewRef,\n    fadeAnim,\n    slideAnim,\n  } = useReading(exercises, level);\n\n  // ✅ SAUVEGARDE SIMPLIFIÉE - seulement quand exercice/question change\n  useEffect(() => {\n    if (!loaded || exercises.length === 0 || !currentExercise || !currentQuestion) return;\n\n    try {\n      saveActivity({\n        title: \"Lecture\",\n        level: level,\n        type: \"reading\",\n        metadata: {\n          word: selectedExerciseIndex, // ✅ Pour cohérence avec autres exercices\n          totalWords: exercises.length, // ✅ Pour cohérence\n          exercise: selectedExerciseIndex,\n          question: currentQuestionIndex,\n          totalQuestions: totalQuestions,\n          exerciseTitle: currentExercise.title || `Texte ${selectedExerciseIndex + 1}`,\n          totalExercises: exercises.length\n        }\n      });\n    } catch (error) {\n      console.error('Error saving activity:', error);\n    }\n  }, [selectedExerciseIndex, currentQuestionIndex]); // ✅ SEULEMENT ces 2 dépendances !\n\n  // Handlers\n const handleBackPress = () => {\n  router.push({\n    pathname: \"/(tabs)/exerciseSelection\",\n    params: { level }\n  });\n};\n\n  const handleNext = () => {\n    if (showFeedback) {\n      nextQuestion();\n    } else {\n      submitAnswer();\n    }\n  };\n\n  const handleExerciseProgressPress = (index) => {\n    changeExercise(index);\n  };\n\n  const handleToggleProgressDetails = () => {\n    toggleDetailedProgress();\n  };\n\n  // =================== LOADING STATE ===================\n  if (!loaded || !exercises.length) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} />\n        </View>\n      </Container>\n    );\n  }\n\n  // =================== MAIN RENDER ===================\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      withScrollView\n      backgroundColor=\"#f8fafc\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      scrollViewProps={{\n        ref: scrollViewRef,\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: styles.scrollContent,\n      }}\n    >\n      <ReadingHeader\n        level={level}\n        onBackPress={handleBackPress}\n      />\n\n      <ReadingProgress\n        readingData={readingData}\n        completedQuestions={completedQuestions}\n        levelColor={levelColor}\n        expanded={showDetailedProgress}\n        onToggleExpand={handleToggleProgressDetails}\n        onExercisePress={handleExerciseProgressPress}\n      />\n\n      <ReadingTextSelector\n        exercises={exercises}\n        selectedIndex={selectedExerciseIndex}\n        onSelectExercise={changeExercise}\n        scrollViewRef={textsScrollViewRef}\n        levelColor={levelColor}\n      />\n\n      <InstructionBox\n        title=\"📖 Reading Exercise\"\n        instructions=\"Read the text carefully and answer the questions.\"\n        variant=\"compact\"\n        primaryColor={levelColor}\n        initiallyExpanded={false}\n      />\n\n      <ReadingText\n        exercise={currentExercise}\n        textExpanded={textExpanded}\n        onToggleExpand={toggleTextExpansion}\n        levelColor={levelColor}\n      />\n\n      {currentQuestion && (\n        <ReadingQuestionCard\n          question={currentQuestion}\n          questionIndex={currentQuestionIndex}\n          selectedAnswer={selectedAnswer}\n          onSelectAnswer={selectAnswer}\n          showFeedback={showFeedback}\n          fadeAnim={fadeAnim}\n          slideAnim={slideAnim}\n          levelColor={levelColor}\n        />\n      )}\n\n      {showFeedback && currentQuestion && (\n        <ExerciseFeedback\n          type={isCorrect ? \"success\" : \"error\"}\n          message={isCorrect ? \"🎉 Perfect!\" : \"🤔 Not quite...\"}\n          explanation={\n            isCorrect\n              ? currentQuestion.explanation\n              : attempts > 1\n              ? `💡 The correct answer is: ${currentQuestion.options[currentQuestion.correctAnswer]}`\n              : \"💪 Try again!\"\n          }\n          showDismissButton={false}\n        />\n      )}\n\n      <QuestionIndicators\n        totalQuestions={totalQuestions}\n        currentQuestionIndex={currentQuestionIndex}\n        completedQuestions={completedQuestions[selectedExerciseIndex] || []}\n        onSelectQuestion={changeQuestion}\n        levelColor={levelColor}\n      />\n\n      <ReadingNavigation\n        showFeedback={showFeedback}\n        isCorrect={isCorrect}\n        selectedAnswer={selectedAnswer}\n        currentQuestionIndex={currentQuestionIndex}\n        totalQuestions={totalQuestions}\n        attempts={attempts}\n        levelColor={levelColor}\n        onNext={handleNext}\n        onPrevious={previousQuestion}\n        onRetry={retryQuestion}\n      />\n    </Container>\n  );\n};\n\nexport default ReadingExercise;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\HomophoneChoices\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[77,88],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[106,111],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[110,116],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[116,134],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[165,179],"text":""},"desc":"Remove unused variable 'HeroCard'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// HomophoneChoices/index.js - VERSION NETTOYÉE (logique simplifiée)\n\nimport React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport HeroCard from \"../../../../components/ui/HeroCard\";\nimport createStyles from \"./style\";\n\n/**\n * 👂 HomophoneChoices - Version Nettoyée\n * Logique simplifiée + design cohérent\n * \n * @param {string} sentence - La phrase avec le blanc à compléter\n * @param {Array} choices - Les choix possibles\n * @param {string} selectedChoice - Le choix actuellement sélectionné\n * @param {function} onSelectChoice - Fonction appelée lors de la sélection\n * @param {boolean} disabled - Si les choix sont désactivés\n * @param {string} levelColor - Couleur du niveau\n */\nconst HomophoneChoices = ({\n  sentence,\n  choices = [],\n  selectedChoice,\n  onSelectChoice,\n  disabled = false,\n  levelColor = \"#3b82f6\",\n}) => {\n  const styles = createStyles(levelColor);\n\n  return (\n    <View style={styles.container}>\n      {/* 🎯 HERO SECTION - Phrase avec blanc */}\n      <HeroCard \n        content={sentence}\n        fontSize={20}\n        levelColor={levelColor}\n        showUnderline={false}\n        style={styles.heroCard}\n      />\n\n      {/* ✅ CHOIX MULTIPLES */}\n      <Text style={styles.choicesLabel}>Choisissez le mot correct :</Text>\n\n      <View style={styles.choicesGrid}>\n        {choices.map((choice, index) => {\n          const isSelected = selectedChoice === choice;\n\n          return (\n            <TouchableOpacity\n              key={index}\n              style={[\n                styles.choiceButton,\n                isSelected && {\n                  borderColor: levelColor,\n                  backgroundColor: `${levelColor}15`,\n                },\n                disabled && styles.disabledChoice\n              ]}\n              onPress={() => !disabled && onSelectChoice(choice)}\n              disabled={disabled}\n            >\n              <View style={styles.choiceContent}>\n                <View style={[\n                  styles.choiceIndicator,\n                  isSelected && { backgroundColor: levelColor }\n                ]}>\n                  <Text style={[\n                    styles.choiceIndicatorText,\n                    isSelected && { color: 'white' }\n                  ]}>\n                    {String.fromCharCode(65 + index)} {/* A, B, C, D */}\n                  </Text>\n                </View>\n                \n                <Text style={[\n                  styles.choiceText,\n                  isSelected && { \n                    color: levelColor, \n                    fontWeight: '700' \n                  }\n                ]}>\n                  {choice}\n                </Text>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </View>\n  );\n};\n\nexport default HomophoneChoices;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\HomophoneChoices\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[243,265],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// HomophoneChoices/style.js - VERSION NETTOYÉE (styles simplifiés)\n\nimport { StyleSheet, Platform } from \"react-native\";\n\n/**\n * 🎯 Styles nettoyés pour HomophoneChoices\n * Design cohérent avec les autres composants\n */\nconst createStyles = (levelColor = \"#3b82f6\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      marginVertical: 16,\n    },\n\n    // =================== HERO CARD ===================\n    heroCard: {\n      marginBottom: 20,\n    },\n\n    // =================== CHOICES SECTION ===================\n    choicesLabel: {\n      fontSize: 16,\n      fontWeight: \"600\",\n      color: \"#374151\",\n      marginBottom: 16,\n      textAlign: \"center\",\n    },\n\n    choicesGrid: {\n      gap: 12,\n    },\n\n    // =================== CHOICE BUTTONS ===================\n    choiceButton: {\n      backgroundColor: \"white\",\n      borderWidth: 2,\n      borderColor: \"#e2e8f0\",\n      borderRadius: 12,\n      marginBottom: 8,\n      ...Platform.select({\n        ios: {\n          shadowColor: '#64748b',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.1,\n          shadowRadius: 2,\n        },\n        android: {\n          elevation: 2,\n        },\n      }),\n    },\n\n    disabledChoice: {\n      opacity: 0.6,\n    },\n\n    choiceContent: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: 16,\n    },\n\n    // =================== CHOICE INDICATORS ===================\n    choiceIndicator: {\n      width: 32,\n      height: 32,\n      borderRadius: 16,\n      backgroundColor: '#f1f5f9',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: 16,\n    },\n\n    choiceIndicatorText: {\n      fontSize: 16,\n      fontWeight: '700',\n      color: '#64748b',\n    },\n\n    // =================== CHOICE TEXT ===================\n    choiceText: {\n      flex: 1,\n      fontSize: 16,\n      fontWeight: \"500\",\n      color: \"#374151\",\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingActions\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[53,64],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[73,109],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[117,140],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":30,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":38,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":38,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":46,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":46,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// SpellingActions/index.js - VERSION PROPRE\n\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\nimport styles from \"./style\";\n\nconst SpellingActions = ({\n  showFeedback,\n  isCorrect,\n  userInput,\n  isLastExercise,\n  exerciseType,\n  levelColor,\n  onCheck,\n  onNext,\n  onRetry\n}) => {\n\n  const canCheckAnswer = () => {\n    if (exerciseType === \"homophones\") {\n      return userInput !== \"\" && userInput !== null && userInput !== undefined;\n    }\n    return userInput && userInput.trim() !== \"\";\n  };\n\n  const handleCheckAnswer = () => {\n    try {\n      onCheck();\n    } catch (error) {\n      // Silently fail\n    }\n  };\n\n  const handleNext = () => {\n    try {\n      onNext();\n    } catch (error) {\n      // Silently fail\n    }\n  };\n\n  const handleRetry = () => {\n    try {\n      onRetry();\n    } catch (error) {\n      // Silently fail\n    }\n  };\n\n  if (!showFeedback) {\n    return (\n      <View style={styles.container}>\n        <NavigationButtons\n          onNext={handleCheckAnswer}\n          disablePrevious={true}\n          disableNext={!canCheckAnswer()}\n          primaryColor={levelColor}\n          buttonLabels={{\n            next: \"Vérifier la réponse\"\n          }}\n          variant=\"centered\"\n        />\n      </View>\n    );\n  }\n\n  if (showFeedback && isCorrect) {\n    return (\n      <View style={styles.container}>\n        <NavigationButtons\n          onNext={handleNext}\n          disablePrevious={true}\n          disableNext={false}\n          primaryColor={levelColor}\n          buttonLabels={{\n            next: isLastExercise ? \"Terminer\" : \"Exercice suivant\"\n          }}\n          variant=\"centered\"\n        />\n      </View>\n    );\n  }\n\n  if (showFeedback && !isCorrect) {\n    return (\n      <View style={styles.container}>\n        <NavigationButtons\n          onNext={handleNext}\n          onPrevious={handleRetry}\n          disablePrevious={false}\n          disableNext={false}\n          primaryColor={levelColor}\n          buttonLabels={{\n            next: isLastExercise ? \"Terminer\" : \"Exercice suivant\",\n            previous: \"Réessayer\"\n          }}\n          variant=\"standard\"\n        />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <NavigationButtons\n        onNext={handleNext}\n        primaryColor={levelColor}\n        buttonLabels={{ next: \"Continuer\" }}\n        variant=\"centered\"\n      />\n    </View>\n  );\n};\n\nexport default SpellingActions;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingActions\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingCard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[50,61],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[79,84],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[83,89],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":4,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[89,101],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[133,147],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'RevealButton' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"RevealButton"},"fix":{"range":[192,210],"text":""},"desc":"Remove unused variable 'RevealButton'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SpellingInput' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"SpellingInput"},"fix":{"range":[259,278],"text":""},"desc":"Remove unused variable 'SpellingInput'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HomophoneChoices' is defined but never used.","line":9,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"HomophoneChoices"},"fix":{"range":[305,327],"text":""},"desc":"Remove unused variable 'HomophoneChoices'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SpellingFeedback' is defined but never used.","line":10,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"SpellingFeedback"},"fix":{"range":[357,379],"text":""},"desc":"Remove unused variable 'SpellingFeedback'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// SpellingCard/index.js - VERSION PROPRE\n\nimport React from \"react\";\nimport { View, Text, ScrollView } from \"react-native\";\n\nimport HeroCard from \"../../../../components/ui/HeroCard\";\nimport RevealButton from \"../../../../components/ui/RevealButton\";\nimport SpellingInput from \"../SpellingInput\";\nimport HomophoneChoices from \"../HomophoneChoices\";\nimport SpellingFeedback from \"../SpellingFeedback\";\n\nimport styles from \"./style\";\n\nconst SpellingCard = ({\n  exercise,\n  userInput,\n  showHint,\n  showFeedback,\n  isCorrect,\n  isCompleted,\n  onChangeText,\n  onToggleHint,\n  levelColor,\n}) => {\n  \n  if (!exercise) {\n    return (\n      <View style={styles.card}>\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>Exercice non trouvé</Text>\n        </View>\n      </View>\n    );\n  }\n\n  const renderExerciseContent = () => {\n    switch (exercise.type) {\n      case \"correction\":\n        return (\n          <HeroCard \n            content={exercise.wordToCorrect}\n            fontSize={32}\n            levelColor={levelColor}\n            showUnderline={true}\n          />\n        );\n        \n      case \"spelling_rule\":\n        return (\n          <HeroCard \n            content={exercise.rule}\n            fontSize={18}\n            levelColor={levelColor}\n            showUnderline={false}\n          />\n        );\n        \n      case \"homophones\":\n        return (\n          <View style={styles.homophoneHeader}>\n            <Text style={styles.instruction}>{exercise.instruction}</Text>\n          </View>\n        );\n        \n      default:\n        return (\n          <View style={styles.fallbackContainer}>\n            <Text style={styles.instruction}>\n              {exercise.instruction || \"Instructions non disponibles\"}\n            </Text>\n          </View>\n        );\n    }\n  };\n\n  const renderInputArea = () => {\n    if (exercise.type === \"homophones\") {\n      return (\n        <HomophoneChoices\n          sentence={exercise.sentence}\n          choices={exercise.choices || []}\n          selectedChoice={userInput}\n          onSelectChoice={onChangeText}\n          disabled={showFeedback}\n          levelColor={levelColor}\n        />\n      );\n    } else {\n      return (\n        <SpellingInput\n          value={userInput}\n          onChangeText={onChangeText}\n          disabled={showFeedback}\n          levelColor={levelColor}\n        />\n      );\n    }\n  };\n\n  return (\n    <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\n      <View style={[\n        styles.card,\n        isCompleted && styles.completedCard\n      ]}>\n        \n        {isCompleted && (\n          <View style={styles.completedBadge}>\n            <Text style={styles.completedText}>✓ Complété</Text>\n          </View>\n        )}\n\n        <View style={styles.exerciseContent}>\n          {renderExerciseContent()}\n        </View>\n\n        <View style={styles.inputSection}>\n          {renderInputArea()}\n        </View>\n\n        {exercise.hint && (\n          <View style={styles.hintSection}>\n            <RevealButton\n              isRevealed={showHint}\n              revealedContent={exercise.hint}\n              revealText=\"Afficher l'indice\"\n              hideText=\"Masquer l'indice\"\n              onToggle={onToggleHint}\n              levelColor={levelColor}\n            />\n          </View>\n        )}\n\n        {showFeedback && (\n          <View style={styles.feedbackSection}>\n            <SpellingFeedback\n              isCorrect={isCorrect}\n              correctAnswer={exercise.correctAnswer}\n              explanation={exercise.explanation}\n              levelColor={levelColor}\n            />\n          </View>\n        )}\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default SpellingCard;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingCard\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingFeedback\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[91,102],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[111,147],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[155,175],"text":""},"desc":"Remove unused variable 'ContentSection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// SpellingFeedback/index.js - VERSION REFACTORISÉE (ContentSection avec couleurs)\n\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport ContentSection from \"../../../../components/ui/ContentSection\";\nimport createStyles from \"./style\";\n\n/**\n * 💬 SpellingFeedback - Version Refactorisée avec ContentSection\n * Remplace le feedback custom par ContentSection avec couleurs dynamiques\n * \n * @param {boolean} isCorrect - Indique si la réponse est correcte\n * @param {string} correctAnswer - La réponse correcte\n * @param {string} explanation - Explication supplémentaire\n * @param {string} levelColor - Couleur associée au niveau\n */\nconst SpellingFeedback = ({ \n  isCorrect, \n  correctAnswer, \n  explanation,\n  levelColor = \"#3b82f6\" \n}) => {\n  const styles = createStyles(levelColor);\n\n  const feedbackColor = isCorrect ? \"#10b981\" : \"#ef4444\";\n  const backgroundColor = isCorrect ? \"#f0fdf4\" : \"#fef2f2\";\n  const resultTitle = isCorrect ? \"Correct !\" : \"Incorrect !\";\n\n  // Construire le contenu du feedback\n  let feedbackContent = \"\";\n  \n  if (!isCorrect && correctAnswer) {\n    feedbackContent = `La bonne réponse est : \"${correctAnswer}\"`;\n    if (explanation) {\n      feedbackContent += `\\n\\n${explanation}`;\n    }\n  } else if (explanation) {\n    feedbackContent = explanation;\n  }\n\n  return (\n    <View style={styles.container}>\n      <ContentSection\n        title={resultTitle}\n        content={feedbackContent || (isCorrect ? \"Bien joué !\" : \"Réessayez !\")}\n        levelColor={feedbackColor}\n        backgroundColor={backgroundColor}\n        style={styles.feedbackSection}\n        isHighlighted={true}\n      />\n    </View>\n  );\n};\n\nexport default SpellingFeedback;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingFeedback\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[247,269],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// SpellingFeedback/style.js - VERSION REFACTORISÉE (styles minimaux)\n\nimport { StyleSheet } from \"react-native\";\n\n/**\n * 🎯 Styles ultra-simplifiés pour SpellingFeedback\n * La majorité des styles est dans ContentSection\n */\nconst createStyles = (levelColor = \"#3b82f6\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      marginVertical: 12,\n    },\n\n    // =================== SECTIONS ===================\n    feedbackSection: {\n      // ContentSection gère ses propres styles\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[41,52],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseHeader' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseHeader"},"fix":{"range":[68,88],"text":""},"desc":"Remove unused variable 'ExerciseHeader'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// 8. SpellingHeader - MIS À JOUR\nimport React from \"react\";\nimport ExerciseHeader from \"../../../../components/exercise-common/ExerciseHeader\";\n\nconst SpellingHeader = ({ level, exerciseType, onBackPress }) => {\n  // Formatage du titre en fonction du type d'exercice\n  const getExerciseTitle = (type) => {\n    switch (type) {\n      case \"correction\":\n        return \"Orthographe - Correction\";\n      case \"rules\":\n        return \"Orthographe - Règles\";\n      default:\n        return \"Orthographe\";\n    }\n  };\n\n  return (\n    <ExerciseHeader\n      title={getExerciseTitle(exerciseType)}\n      level={level}\n      exerciseType=\"spelling\" // ✅ NOUVEAU\n      onClose={onBackPress}\n      backIcon=\"arrow-back\"\n    />\n  );\n};\n\nexport default SpellingHeader;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingInput\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[55,66],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[84,89],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TextInput' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"TextInput"},"fix":{"range":[88,99],"text":""},"desc":"Remove unused variable 'TextInput'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":31,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[99,105],"text":""},"desc":"Remove unused variable 'Text'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// SpellingInput/index.js - VERSION SANS DEBUG\n\nimport React from \"react\";\nimport { View, TextInput, Text } from \"react-native\";\nimport createStyles from \"./style\";\n\nconst SpellingInput = ({ \n  value = \"\", \n  onChangeText, \n  disabled = false, \n  levelColor = \"#3b82f6\",\n  placeholder = \"Tapez votre réponse ici...\",\n  testID = \"spelling-input\"\n}) => {\n  const styles = createStyles(levelColor);\n\n  if (!onChangeText) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.errorText}>\n          Erreur: fonction onChangeText manquante\n        </Text>\n      </View>\n    );\n  }\n\n  const handleChangeText = (text) => {\n    onChangeText(text);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.label}>Votre réponse :</Text>\n      \n      <TextInput\n        testID={testID}\n        style={[\n          styles.input,\n          disabled && styles.disabledInput,\n          { borderColor: disabled ? \"#e2e8f0\" : levelColor }\n        ]}\n        value={value}\n        onChangeText={handleChangeText}\n        placeholder={placeholder}\n        placeholderTextColor=\"#94a3b8\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        editable={!disabled}\n        selectTextOnFocus={!disabled}\n        returnKeyType=\"done\"\n        blurOnSubmit={true}\n        accessible={true}\n        accessibilityLabel=\"Zone de saisie pour votre réponse\"\n        accessibilityHint=\"Tapez votre réponse à l'exercice d'orthographe\"\n      />\n    </View>\n  );\n};\n\nexport default SpellingInput;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingInput\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingProgress\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[60,66],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[102,107],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[106,112],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[136,190],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// SpellingProgress/index.js - VERSION ULTRA-SIMPLE\n\nimport React, { useMemo } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport createStyles from \"./style\";\n\n/**\n * 📊 SpellingProgress - VERSION ULTRA-SIMPLE\n * ✅ Juste une progress bar basique\n * ❌ Enlevé : expandable, détails par type, complexité\n * \n * AFFICHE :\n * - Progress bar visuelle\n * - \"X / Y exercices\"\n * - Pourcentage\n */\nconst SpellingProgress = ({\n  exercises = [],\n  completedExercises = [],\n  levelColor = \"#3b82f6\",\n}) => {\n  const styles = createStyles(levelColor);\n\n  // =================== CALCULS SIMPLES ===================\n  \n  const progressData = useMemo(() => {\n    const totalExercises = exercises.length;\n    const completedCount = completedExercises.length;\n    const progress = totalExercises > 0 ? Math.round((completedCount / totalExercises) * 100) : 0;\n\n    return {\n      totalExercises,\n      completedCount,\n      progress\n    };\n  }, [exercises, completedExercises]);\n\n  const { totalExercises, completedCount, progress } = progressData;\n\n  // =================== RENDER ===================\n  \n  return (\n    <View style={styles.container}>\n      <LinearGradient\n        colors={[`${levelColor}08`, `${levelColor}04`, 'transparent']}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={styles.gradient}\n      >\n        \n        {/* Header avec titre et stats */}\n        <View style={styles.header}>\n          <Text style={styles.title}>Progression</Text>\n          <Text style={[styles.stats, { color: levelColor }]}>\n            {completedCount} / {totalExercises} exercices\n          </Text>\n        </View>\n\n        {/* Progress bar */}\n        <View style={styles.progressBarContainer}>\n          <View style={[styles.progressBarTrack, { backgroundColor: `${levelColor}20` }]}>\n            <View \n              style={[\n                styles.progressBarFill,\n                { \n                  backgroundColor: levelColor,\n                  width: `${progress}%`\n                }\n              ]}\n            />\n          </View>\n          \n          {/* Pourcentage */}\n          <Text style={[styles.percentage, { color: levelColor }]}>\n            {progress}%\n          </Text>\n        </View>\n\n      </LinearGradient>\n    </View>\n  );\n};\n\nexport default SpellingProgress;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingProgress\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Platform' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":30,"suggestions":[{"messageId":"removeVar","data":{"varName":"Platform"},"fix":{"range":[72,82],"text":""},"desc":"Remove unused variable 'Platform'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":5,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[129,151],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// SpellingProgress/style.js - VERSION ULTRA-SIMPLE\n\nimport { StyleSheet, Platform } from \"react-native\";\n\nconst createStyles = (levelColor = \"#3b82f6\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      marginHorizontal: 16,\n      marginBottom: 16,\n      borderRadius: 20,\n      overflow: 'hidden',\n    },\n\n    gradient: {\n      paddingVertical: 20,\n      paddingHorizontal: 24,\n    },\n\n    // =================== HEADER ===================\n    header: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: 16,\n    },\n\n    title: {\n      fontSize: 18,\n      fontWeight: '700',\n      color: '#374151',\n    },\n\n    stats: {\n      fontSize: 16,\n      fontWeight: '600',\n    },\n\n    // =================== PROGRESS BAR ===================\n    progressBarContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n\n    progressBarTrack: {\n      flex: 1,\n      height: 8,\n      borderRadius: 4,\n      marginRight: 16,\n    },\n\n    progressBarFill: {\n      height: '100%',\n      borderRadius: 4,\n      minWidth: 4, // Pour toujours voir un peu de progress\n    },\n\n    percentage: {\n      fontSize: 16,\n      fontWeight: '700',\n      minWidth: 45,\n      textAlign: 'right',\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\hooks\\useSpelling.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":51,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":51,"endColumn":19},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'totalExercises'. Either include it or remove the dependency array.","line":56,"column":6,"nodeType":"ArrayExpression","endLine":56,"endColumn":19,"suggestions":[{"desc":"Update the dependencies array to be: [STORAGE_KEY, totalExercises]","fix":{"range":[1966,1979],"text":"[STORAGE_KEY, totalExercises]"}}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":70,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":70,"endColumn":19},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":102,"column":11,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":102,"endColumn":69,"suggestions":[{"messageId":"addBrackets","fix":{"range":[3126,3343],"text":"{ const userAnswer = String(userInput).trim().toLowerCase();\n          const correctAnswer = String(currentExercise.correctAnswer).trim().toLowerCase();\n          correct = userAnswer === correctAnswer;\n          break; }"},"desc":"Add {} brackets around the case block."}]},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":103,"column":11,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":103,"endColumn":92,"suggestions":[{"messageId":"addBrackets","fix":{"range":[3126,3343],"text":"{ const userAnswer = String(userInput).trim().toLowerCase();\n          const correctAnswer = String(currentExercise.correctAnswer).trim().toLowerCase();\n          correct = userAnswer === correctAnswer;\n          break; }"},"desc":"Add {} brackets around the case block."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":112,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":112,"endColumn":19}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useSpelling.js - BOUCLES INFINIES CORRIGÉES\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { Alert } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst useSpelling = (spellingData = null, level = \"1\", exerciseType = \"correction\") => {\n\n  const [currentExerciseIndex, setCurrentExerciseIndex] = useState(0);\n  const [userInput, setUserInput] = useState('');\n  const [showHint, setShowHint] = useState(false);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [completedExercises, setCompletedExercises] = useState([]);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  const isInitialized = useRef(false);\n\n  const exercises = spellingData?.exercises || [];\n  const totalExercises = exercises.length;\n  \n  const hasValidData = !!(\n    spellingData && \n    spellingData.exercises && \n    Array.isArray(spellingData.exercises) && \n    spellingData.exercises.length > 0\n  );\n\n  const currentExercise = exercises[currentExerciseIndex] || null;\n  \n  // ✅ STORAGE_KEY STABLE\n  const STORAGE_KEY = `spelling_${level}_${exerciseType}`;\n\n  // ✅ FONCTION STABLE avec useCallback et dépendances fixes\n  const loadStoredData = useCallback(async () => {\n    try {\n      const saved = await AsyncStorage.getItem(STORAGE_KEY);\n      if (saved) {\n        const data = JSON.parse(saved);\n        \n        setCompletedExercises(data.completedExercises || []);\n        setUserAnswers(data.userAnswers || []);\n        \n        if (data.lastPosition?.exerciseIndex !== undefined && \n            data.lastPosition.exerciseIndex >= 0 && \n            data.lastPosition.exerciseIndex < totalExercises) {\n          setCurrentExerciseIndex(data.lastPosition.exerciseIndex);\n        }\n      }\n    } catch (error) {\n      // Silently fail\n    } finally {\n      setLoaded(true);\n    }\n  }, [STORAGE_KEY]); // ✅ SEULEMENT STORAGE_KEY\n\n  // ✅ EFFET SIMPLIFIÉ - une seule fois\n  useEffect(() => {\n    if (!isInitialized.current) {\n      loadStoredData();\n      isInitialized.current = true;\n    }\n  }, [loadStoredData]);\n\n  // ✅ SAVE FONCTION STABLE\n  const saveToStorage = useCallback(async (dataToSave) => {\n    try {\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n    } catch (error) {\n      // Silently fail\n    }\n  }, [STORAGE_KEY]);\n\n  const resetExerciseState = useCallback(() => {\n    setUserInput('');\n    setShowHint(false);\n    setShowFeedback(false);\n    setIsCorrect(false);\n  }, []);\n\n  const toggleHint = useCallback(() => {\n    setShowHint(prev => !prev);\n  }, []);\n\n  const checkAnswer = useCallback(() => {\n    if (!currentExercise?.correctAnswer) {\n      Alert.alert('Erreur', 'Réponse correcte non définie');\n      return false;\n    }\n\n    try {\n      let correct = false;\n\n      switch (currentExercise.type) {\n        case 'homophones':\n          correct = userInput === currentExercise.correctAnswer;\n          break;\n        case 'correction':\n        case 'spelling_rule':\n        default:\n          const userAnswer = String(userInput).trim().toLowerCase();\n          const correctAnswer = String(currentExercise.correctAnswer).trim().toLowerCase();\n          correct = userAnswer === correctAnswer;\n          break;\n      }\n\n      setIsCorrect(correct);\n      setShowFeedback(true);\n      return correct;\n\n    } catch (error) {\n      setIsCorrect(false);\n      setShowFeedback(true);\n      return false;\n    }\n  }, [userInput, currentExercise]);\n\n  const handleNext = useCallback(() => {\n    // Marquer comme complété\n    const newCompleted = completedExercises.includes(currentExerciseIndex) \n      ? completedExercises \n      : [...completedExercises, currentExerciseIndex];\n\n    const newAnswer = {\n      exerciseIndex: currentExerciseIndex,\n      isCorrect: isCorrect,\n      userAnswer: userInput,\n      correctAnswer: currentExercise?.correctAnswer || '',\n      exerciseType: currentExercise?.type || 'correction',\n      timestamp: Date.now()\n    };\n\n    const newAnswers = [...userAnswers, newAnswer];\n\n    // Sauvegarder immédiatement\n    const dataToSave = {\n      completedExercises: newCompleted,\n      userAnswers: newAnswers,\n      lastPosition: {\n        exerciseIndex: currentExerciseIndex < totalExercises - 1 ? currentExerciseIndex + 1 : currentExerciseIndex,\n        exerciseType,\n        timestamp: Date.now()\n      }\n    };\n\n    saveToStorage(dataToSave);\n\n    // Mettre à jour les states\n    setCompletedExercises(newCompleted);\n    setUserAnswers(newAnswers);\n\n    if (currentExerciseIndex < totalExercises - 1) {\n      setCurrentExerciseIndex(prev => prev + 1);\n      resetExerciseState();\n    } else {\n      Alert.alert(\n        \"Félicitations\", \n        `Vous avez terminé tous les exercices d'orthographe ${exerciseType} du niveau ${level} !`\n      );\n      return { completed: true };\n    }\n    \n    return { completed: false };\n  }, [\n    currentExerciseIndex, \n    totalExercises, \n    isCorrect, \n    userInput, \n    currentExercise, \n    completedExercises, \n    userAnswers, \n    saveToStorage, \n    resetExerciseState, \n    exerciseType, \n    level\n  ]);\n\n  const retryExercise = useCallback(() => {\n    resetExerciseState();\n  }, [resetExerciseState]);\n\n  const stats = {\n    totalExercises,\n    completedExercisesCount: completedExercises.length,\n    totalProgress: totalExercises > 0 ? Math.round((completedExercises.length / totalExercises) * 100) : 0,\n    remainingExercises: totalExercises - completedExercises.length,\n    performance: {\n      total: userAnswers.length,\n      correct: userAnswers.filter(answer => answer.isCorrect).length,\n      incorrect: userAnswers.filter(answer => !answer.isCorrect).length,\n      accuracy: userAnswers.length > 0 ? Math.round((userAnswers.filter(answer => answer.isCorrect).length / userAnswers.length) * 100) : 0\n    },\n    completedExercises,\n    userAnswers\n  };\n\n  const isLastExercise = currentExerciseIndex === totalExercises - 1;\n\n  return {\n    currentExerciseIndex,\n    userInput,\n    showHint,\n    showFeedback,\n    isCorrect,\n    completedExercises,\n    userAnswers,\n    loaded,\n    currentExercise,\n    totalExercises,\n    exercises,\n    setUserInput,\n    toggleHint,\n    checkAnswer,\n    handleNext,\n    retryExercise,\n    resetExerciseState,\n    isLastExercise,\n    hasValidData,\n    stats,\n  };\n};\n\nexport default useSpelling;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[54,60],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[107,112],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[111,130],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":35,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":39,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[130,136],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[264,274],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SpellingHeader' is defined but never used.","line":9,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"SpellingHeader"},"fix":{"range":[352,372],"text":""},"desc":"Remove unused variable 'SpellingHeader'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SpellingProgress' is defined but never used.","line":10,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"SpellingProgress"},"fix":{"range":[399,421],"text":""},"desc":"Remove unused variable 'SpellingProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SpellingCard' is defined but never used.","line":11,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"SpellingCard"},"fix":{"range":[450,468],"text":""},"desc":"Remove unused variable 'SpellingCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'SpellingActions' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"SpellingActions"},"fix":{"range":[493,514],"text":""},"desc":"Remove unused variable 'SpellingActions'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":30,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":72,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":72,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":88,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":88,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":99,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":99,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":107,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":107,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// SpellingExercise/index.js - VERSION PROPRE\n\nimport React, { useMemo, useEffect } from \"react\";\nimport { View, ActivityIndicator, Text } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\n\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\nimport SpellingHeader from \"./SpellingHeader\";\nimport SpellingProgress from \"./SpellingProgress\";\nimport SpellingCard from \"./SpellingCard\";\nimport SpellingActions from \"./SpellingActions\";\n\nimport useSpelling from \"./hooks/useSpelling\";\nimport useLastActivity from \"../../../hooks/useLastActivity\";\nimport { getSpellingData, getLevelColor } from \"../../../utils/spelling/spellingDataHelper\";\nimport createStyles from \"./style\";\n\nconst SpellingExercise = ({ route }) => {\n  const { level = \"1\", exerciseType = \"correction\" } = route.params || {};\n  const navigation = useNavigation();\n  const styles = createStyles();\n  const { saveActivity } = useLastActivity();\n\n  const levelColor = getLevelColor(level);\n  \n  const spellingData = useMemo(() => {\n    try {\n      return getSpellingData(level, exerciseType);\n    } catch (error) {\n      return null;\n    }\n  }, [level, exerciseType]);\n\n  const {\n    currentExerciseIndex,\n    userInput,\n    showHint,\n    showFeedback,\n    isCorrect,\n    loaded,\n    currentExercise,\n    totalExercises,\n    exercises,\n    setUserInput,\n    toggleHint,\n    checkAnswer,\n    handleNext,\n    retryExercise,\n    isLastExercise,\n    hasValidData,\n    stats,\n  } = useSpelling(spellingData, level, exerciseType);\n\n  useEffect(() => {\n    if (loaded && hasValidData && currentExercise) {\n      const exerciseTypeName = exerciseType === \"correction\" ? \"Correction\" : \n                              exerciseType === \"rules\" ? \"Règles\" : \"Homophones\";\n      \n      try {\n        saveActivity({\n          title: `Orthographe ${exerciseTypeName}`,\n          level: level,\n          type: \"spelling\",\n          metadata: {\n            word: currentExerciseIndex,           // ✅ Index actuel (pour progression)\n            totalWords: totalExercises,           // ✅ Total (pour progression)\n            exerciseType: exerciseType,\n            content: currentExercise.wordToCorrect || `Exercice ${currentExerciseIndex + 1}` // ✅ Contenu de l'exercice\n          }\n        });\n      } catch (error) {\n        // Silently fail\n      }\n    }\n  }, [loaded, hasValidData, currentExercise, currentExerciseIndex, totalExercises, exerciseType, level, saveActivity]);\n\n const handleBackPress = () => {\n  router.push({\n    pathname: \"/(tabs)/exerciseSelection\",\n    params: { level }\n  });\n};\n\n  const handleCheckAnswer = () => {\n    try {\n      checkAnswer();\n    } catch (error) {\n      // Silently fail\n    }\n  };\n\n  const handleNextExercise = () => {\n    try {\n      const result = handleNext();\n      if (result?.completed) {\n        navigation.goBack();\n      }\n    } catch (error) {\n      // Silently fail\n    }\n  };\n\n  const handleRetryExercise = () => {\n    try {\n      retryExercise();\n    } catch (error) {\n      // Silently fail\n    }\n  };\n\n  if (!loaded) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} />\n          <Text style={styles.loadingText}>Chargement des exercices...</Text>\n        </View>\n      </Container>\n    );\n  }\n\n  if (!hasValidData || !spellingData) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <SpellingHeader \n          level={level} \n          exerciseType={exerciseType}\n          onBackPress={handleBackPress} \n        />\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorTitle}>Erreur</Text>\n          <Text style={styles.errorMessage}>\n            Aucun exercice trouvé pour le niveau {level} - {exerciseType}\n          </Text>\n        </View>\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      withScrollView={false}\n      backgroundColor=\"#f8fafc\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      style={styles.container}\n    >\n      <SpellingHeader \n        level={level} \n        exerciseType={exerciseType}\n        onBackPress={handleBackPress} \n      />\n\n      <SpellingProgress \n        exercises={exercises}\n        completedExercises={stats.completedExercises || []}\n        levelColor={levelColor}\n      />\n\n      <SpellingCard \n        exercise={currentExercise}\n        userInput={userInput}\n        showHint={showHint}\n        showFeedback={showFeedback}\n        isCorrect={isCorrect}\n        isCompleted={stats.completedExercises?.includes(currentExerciseIndex)}\n        onChangeText={setUserInput}\n        onToggleHint={toggleHint}\n        levelColor={levelColor}\n      />\n\n      <SpellingActions \n        showFeedback={showFeedback}\n        isCorrect={isCorrect}\n        userInput={userInput}\n        isLastExercise={isLastExercise}\n        exerciseType={exerciseType} \n        levelColor={levelColor}\n        onCheck={handleCheckAnswer}\n        onNext={handleNextExercise}\n        onRetry={handleRetryExercise}\n      />\n    </Container>\n  );\n};\n\nexport default SpellingExercise;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyCategorySelector\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[59,70],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'CategorySelector' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"CategorySelector"},"fix":{"range":[86,108],"text":""},"desc":"Remove unused variable 'CategorySelector'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// VocabularyExercise/VocabularyCategorySelector.js\nimport React from \"react\";\nimport CategorySelector from \"../../../../components/exercise-common/CategorySelector\";\n\n/**\n * Adaptateur pour le sélecteur de catégories de vocabulaire\n * Réutilise le composant générique CategorySelector\n */\nconst VocabularyCategorySelector = ({\n  categories = [],\n  selectedIndex = 0,\n  onSelectCategory,\n  levelColor,\n}) => {\n  // Transformation du format des catégories pour correspondre au composant générique\n  const formattedCategories = categories.map((categoryTitle, index) => ({\n    id: index,\n    name: categoryTitle,\n  }));\n\n  // Fonction de callback adaptée - notre composant utilise des indices,\n  // le composant générique utilise des IDs\n  const handleCategorySelect = (categoryId) => {\n    // Si l'option \"Tous\" est sélectionnée (null), nous sélectionnons la première catégorie\n    if (categoryId === null) {\n      onSelectCategory(0);\n    } else {\n      onSelectCategory(categoryId);\n    }\n  };\n\n  return (\n    <CategorySelector\n      categories={formattedCategories}\n      selectedCategory={selectedIndex === undefined ? 0 : selectedIndex}\n      onSelectCategory={handleCategorySelect}\n      primaryColor={levelColor}\n    />\n  );\n};\n\nexport default VocabularyCategorySelector;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[57,68],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseHeader' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseHeader"},"fix":{"range":[84,104],"text":""},"desc":"Remove unused variable 'ExerciseHeader'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// VocabularyHeader - Version épurée mobile-first\nimport React from \"react\";\nimport ExerciseHeader from \"../../../../components/exercise-common/ExerciseHeader\";\n\n/**\n * 🎯 VocabularyHeader - Version Mobile-First Épurée\n * - Titres courts et clairs\n * - Cohérence avec ExerciseSelection\n * - Focus sur l'essentiel\n * - Pas de redondance\n */\nconst VocabularyHeader = ({ level, mode, onBackPress }) => {\n  // 🎯 TITRES ÉPURÉS - Mobile-first\n  const getTitle = () => {\n    if (mode === 'fast') return 'Fast'; // Simple et clair ⚡\n    return 'Vocabulaire'; // Par défaut pour classic\n  };\n\n  return (\n    <ExerciseHeader\n      title={getTitle()}\n      level={level}\n      exerciseType=\"vocabulary\" // Même type, seul le mode change\n      onClose={onBackPress}\n      backIcon=\"arrow-back\"\n    />\n  );\n};\n\nexport default VocabularyHeader;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyNavigation\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[87,98],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[114,137],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// VocabularyNavigation/index.js - VERSION OPTIMISÉE (plus de \"1/2\" redondant)\n\nimport React from \"react\";\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\n\n/**\n * 🎯 VocabularyNavigation - Version Ultra-Simplifiée\n * - Plus d'indicateur \"1/2\" redondant \n * - Plus de wrapper inutile\n * - NavigationButtons gère tout maintenant\n */\nconst VocabularyNavigation = ({\n  onPrevious,\n  onNext,\n  canGoPrevious = true,\n  isLast = false,\n  levelColor,\n}) => {\n  return (\n    <NavigationButtons\n      onNext={onNext}\n      onPrevious={onPrevious}\n      disablePrevious={!canGoPrevious}\n      disableNext={false}\n      primaryColor={levelColor}\n      isLast={isLast} // ← Nouveau prop simple\n      buttonLabels={{\n        next: \"Suivant\",\n        previous: \"Précédent\", \n        finish: \"Terminer\"\n      }}\n      // 🧹 SUPPRIMÉ : currentIndex, totalCount, showSkip, variant, wrapper View\n    />\n  );\n};\n\nexport default VocabularyNavigation;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyProgress\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[80,91],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressCard' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressCard"},"fix":{"range":[107,125],"text":""},"desc":"Remove unused variable 'ProgressCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'index' is defined but never used.","line":55,"column":69,"nodeType":"Identifier","messageId":"unusedVar","endLine":55,"endColumn":74,"suggestions":[{"messageId":"removeVar","data":{"varName":"index"},"fix":{"range":[2007,2014],"text":""},"desc":"Remove unused variable 'index'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// VocabularyProgress/index.js - VERSION CORRIGÉE POUR LES 2 STRUCTURES\n\nimport React from \"react\";\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\nimport {\n  calculateTotalWords,\n  calculateCompletedWordsCount,\n  calculateTotalProgress,\n  calculateCategoryProgress,\n} from \"../../../../utils/vocabulary/vocabularyStats\";\n\n/**\n * 📊 VocabularyProgress - Version Corrigée pour gérer categories ET exercises\n * ✅ Gère mode classique (categories) ET mode fast (exercises)\n * \n * @param {object} vocabularyData - Données du vocabulaire\n * @param {object} completedWords - Mots complétés par catégorie\n * @param {string} levelColor - Couleur du niveau\n * @param {boolean} expanded - État d'expansion\n * @param {function} onToggleExpand - Fonction pour toggle expansion\n * @param {function} onCategoryPress - Fonction appelée lors du clic sur catégorie\n */\nconst VocabularyProgress = ({\n  vocabularyData,\n  completedWords,\n  levelColor,\n  expanded = false,\n  onToggleExpand,\n  onCategoryPress,\n}) => {\n  \n  // ✅ CORRIGÉ : Détecte la vraie structure\n  const getDataArray = () => {\n    if (vocabularyData?.categories && Array.isArray(vocabularyData.categories)) {\n      // Mode classique : { categories: [...] }\n      return vocabularyData.categories;\n    } else if (vocabularyData?.exercises && Array.isArray(vocabularyData.exercises)) {\n      // Mode fast : { exercises: [...] }\n      return vocabularyData.exercises;\n    }\n    return [];\n  };\n\n  const dataArray = getDataArray();\n  \n  // ✅ CORRIGÉ : Utilise la vraie structure détectée\n  const totalWordsCount = calculateTotalWords(dataArray);\n  const completedWordsCount = calculateCompletedWordsCount(completedWords);\n  const totalProgress = calculateTotalProgress(dataArray, completedWords);\n  \n  // Données des catégories pour l'expansion\n  const categoryProgressData = calculateCategoryProgress(dataArray, completedWords);\n\n  // Transformation pour le format ProgressCard\n  const formattedCategoryData = categoryProgressData.map((category, index) => ({\n    title: category.title,\n    completed: category.completedWords,\n    total: category.totalWords,\n    progress: category.progress,\n  }));\n\n  console.log(\"🔍 VocabularyProgress Debug:\", {\n    hasCategories: !!vocabularyData?.categories,\n    hasExercises: !!vocabularyData?.exercises,\n    dataArrayLength: dataArray.length,\n    totalWordsCount,\n    completedWordsCount,\n    totalProgress\n  });\n\n  return (\n    <ProgressCard\n      title=\"Progression\"\n      progress={totalProgress}\n      completed={completedWordsCount}\n      total={totalWordsCount}\n      unit=\"mots\"\n      levelColor={levelColor}\n      expandable={true}\n      expanded={expanded}\n      onToggleExpand={onToggleExpand}\n      categoryData={formattedCategoryData}\n      onCategoryPress={onCategoryPress}\n    />\n  );\n};\n\nexport default VocabularyProgress;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyWordCard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[80,91],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[100,136],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[144,158],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'RevealButton' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"RevealButton"},"fix":{"range":[203,221],"text":""},"desc":"Remove unused variable 'RevealButton'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[270,290],"text":""},"desc":"Remove unused variable 'ContentSection'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// VocabularyWordCard/index.js - VERSION REFACTORISÉE (280 → 50 lignes)\n\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport HeroCard from \"../../../../components/ui/HeroCard\";\nimport RevealButton from \"../../../../components/ui/RevealButton\";\nimport ContentSection from \"../../../../components/ui/ContentSection\";\nimport createStyles from \"./style\";\n\n/**\n * 🏆 VocabularyWordCard - Version Refactorisée avec composants génériques\n * 280 lignes → 50 lignes (-82% de code)\n * Même qualité visuelle, architecture optimisée\n * \n * @param {string} word - Mot principal à afficher\n * @param {string} translation - Traduction du mot\n * @param {string} definition - Définition (optionnel)\n * @param {string} example - Exemple d'utilisation\n * @param {boolean} showTranslation - État d'affichage de la traduction\n * @param {function} onToggleTranslation - Fonction pour toggle traduction\n * @param {string} levelColor - Couleur du niveau\n */\nconst VocabularyWordCard = ({\n  word,\n  translation,\n  definition,\n  example,\n  showTranslation,\n  onToggleTranslation,\n  levelColor = \"#5E60CE\",\n}) => {\n  const styles = createStyles(levelColor);\n\n  return (\n    <View style={styles.container}>\n      {/* 🎯 HERO SECTION - Le mot principal */}\n      <HeroCard \n        content={word}\n        fontSize={42}  // Taille spectaculaire pour mots\n        levelColor={levelColor}\n        showUnderline={true}\n      />\n      \n      {/* 🔘 BOUTON REVEAL/HIDE avec glassmorphism */}\n      <RevealButton\n        isRevealed={showTranslation}\n        revealedContent={translation}\n        revealText=\"Reveal Translation\"\n        hideText=\"Hide Translation\"\n        onToggle={onToggleTranslation}\n        levelColor={levelColor}\n      />\n      \n      {/* 📝 SECTION EXEMPLE */}\n      {example && (\n        <ContentSection\n          title=\"Example\"\n          content={example}\n          levelColor={levelColor}\n          isItalic={true}\n          backgroundColor=\"#FAFBFC\"\n        />\n      )}\n\n      {/* 📝 SECTION DÉFINITION (si disponible) */}\n      {definition && (\n        <ContentSection\n          title=\"Definition\"\n          content={definition}\n          levelColor={levelColor}\n          backgroundColor=\"#F8F9FA\"\n        />\n      )}\n    </View>\n  );\n};\n\nexport default VocabularyWordCard;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyWordCard\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":10,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[317,339],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// VocabularyWordCard/style.js - VERSION REFACTORISÉE (280 → 15 lignes)\n\nimport { StyleSheet } from \"react-native\";\n\n/**\n * 🎯 Styles ultra-simplifiés pour VocabularyWordCard\n * La majorité des styles est dans les composants génériques\n * Plus besoin de glassmorphism, Platform.select, etc.\n */\nconst createStyles = (levelColor = \"#5E60CE\") =>\n  StyleSheet.create({\n    // =================== CONTAINER SIMPLE ===================\n    container: {\n      marginHorizontal: 16,\n      marginVertical: 8,\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyWordSection\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[118,124],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[157,162],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[161,167],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'LinearGradient' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"LinearGradient"},"fix":{"range":[191,245],"text":""},"desc":"Remove unused variable 'LinearGradient'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyWordCard' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyWordCard"},"fix":{"range":[253,277],"text":""},"desc":"Remove unused variable 'VocabularyWordCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'isBonusLevel' is defined but never used.","line":7,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"isBonusLevel"},"fix":{"range":[339,420],"text":""},"desc":"Remove unused variable 'isBonusLevel'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'mode' is defined but never used.","line":26,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":26,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"mode"},"fix":{"range":[1113,1121],"text":""},"desc":"Remove unused variable 'mode'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'level' is defined but never used.","line":27,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":27,"endColumn":8,"suggestions":[{"messageId":"removeVar","data":{"varName":"level"},"fix":{"range":[1121,1130],"text":""},"desc":"Remove unused variable 'level'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// VocabularyWordSection/index.js - VERSION AJUSTÉE (garde la logique, utilise le nouveau VocabularyWordCard)\n\nimport React, { memo } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport VocabularyWordCard from \"../VocabularyWordCard\"; // ← Utilise la version refactorisée\nimport { isBonusLevel } from \"../../../../utils/vocabulary/vocabularyDataHelper\";\nimport createStyles from \"./style\";\n\n/**\n * ⚡ VocabularyWordSection - Version ajustée\n * Garde toute la logique métier (compteur, mode, etc.)\n * Utilise le nouveau VocabularyWordCard refactorisé\n * \n * @param {object} currentWord - Mot actuel avec ses propriétés\n * @param {string} wordCounter - Compteur stylé (ex: \"34 / 80\")\n * @param {string} mode - Mode d'exercice (classic/fast)\n * @param {string} level - Niveau actuel\n * @param {string} levelColor - Couleur du niveau\n * @param {boolean} showTranslation - État d'affichage de la traduction\n * @param {function} onToggleTranslation - Fonction pour toggle traduction\n */\nconst VocabularyWordSection = memo(({\n  currentWord,\n  wordCounter,\n  mode,\n  level,\n  levelColor,\n  showTranslation,\n  onToggleTranslation,\n}) => {\n  const styles = createStyles(levelColor);\n  \n  return (\n    <View style={styles.container}>\n      {/* 🎯 COMPTEUR STYLÉ - Garde la logique existante */}\n      <View style={styles.counterSection}>\n        <LinearGradient\n          colors={[`${levelColor}08`, `${levelColor}04`, 'transparent']}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 1 }}\n          style={styles.counterGradient}\n        >\n          {/* Compteur principal */}\n          <View style={[styles.counterBadge, { borderColor: `${levelColor}20` }]}>\n            <Text style={[styles.counterText, { color: levelColor }]}>\n              {wordCounter}\n            </Text>\n          </View>\n        </LinearGradient>\n      </View>\n\n      {/* 🎨 NOUVELLE CARTE DU MOT - Utilise la version refactorisée */}\n      <VocabularyWordCard\n        word={currentWord.word || \"\"}\n        translation={currentWord.translation || \"\"}\n        definition={currentWord.definition || \"\"}\n        example={currentWord.example || \"\"}\n        showTranslation={showTranslation}\n        onToggleTranslation={onToggleTranslation}\n        levelColor={levelColor}\n      />\n    </View>\n  );\n});\n\nVocabularyWordSection.displayName = \"VocabularyWordSection\";\n\nexport default VocabularyWordSection;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyWordSection\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[282,304],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// VocabularyWordSection/style.js - VERSION AJUSTÉE (garde styles compteur)\n\nimport { StyleSheet, Platform } from \"react-native\";\n\n/**\n * ⚡ Styles pour VocabularyWordSection\n * Garde les styles du compteur, le reste est dans VocabularyWordCard refactorisé\n */\nconst createStyles = (levelColor = \"#5E60CE\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      flex: 1,\n      paddingBottom: 20,\n    },\n    \n    // =================== COMPTEUR SECTION ===================\n    counterSection: {\n      marginHorizontal: 16,\n      marginBottom: 16,\n      borderRadius: 20,\n      overflow: 'hidden',\n    },\n    counterGradient: {\n      paddingVertical: 16,\n      paddingHorizontal: 24,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    \n    // =================== BADGE COMPTEUR ===================\n    counterBadge: {\n      backgroundColor: 'white',\n      paddingHorizontal: 20,\n      paddingVertical: 10,\n      borderRadius: 16,\n      borderWidth: 1,\n      // Ombre subtile\n      ...Platform.select({\n        ios: {\n          shadowColor: '#000',\n          shadowOffset: { width: 0, height: 2 },\n          shadowOpacity: 0.08,\n          shadowRadius: 8,\n        },\n        android: {\n          elevation: 2,\n        },\n      }),\n    },\n    counterText: {\n      fontSize: 18,\n      fontWeight: '800',\n      letterSpacing: 0.5,\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\hooks\\useVocabulary.js","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'exercises' logical expression could make the dependencies of useEffect Hook (at line 82) change on every render. To fix this, wrap the initialization of 'exercises' in its own useMemo() Hook.","line":18,"column":9,"nodeType":"VariableDeclarator","endLine":18,"endColumn":52},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'exercises' logical expression could make the dependencies of useCallback Hook (at line 156) change on every render. To fix this, wrap the initialization of 'exercises' in its own useMemo() Hook.","line":18,"column":9,"nodeType":"VariableDeclarator","endLine":18,"endColumn":52},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'exercises' logical expression could make the dependencies of useCallback Hook (at line 195) change on every render. To fix this, wrap the initialization of 'exercises' in its own useMemo() Hook.","line":18,"column":9,"nodeType":"VariableDeclarator","endLine":18,"endColumn":52},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'exercises' logical expression could make the dependencies of useCallback Hook (at line 217) change on every render. To fix this, wrap the initialization of 'exercises' in its own useMemo() Hook.","line":18,"column":9,"nodeType":"VariableDeclarator","endLine":18,"endColumn":52},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'exercises' logical expression could make the dependencies of useCallback Hook (at line 230) change on every render. To fix this, wrap the initialization of 'exercises' in its own useMemo() Hook.","line":18,"column":9,"nodeType":"VariableDeclarator","endLine":18,"endColumn":52},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'exercises' logical expression could make the dependencies of useCallback Hook (at line 240) change on every render. To fix this, wrap the initialization of 'exercises' in its own useMemo() Hook.","line":18,"column":9,"nodeType":"VariableDeclarator","endLine":18,"endColumn":52},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentCategory' logical expression could make the dependencies of useCallback Hook (at line 230) change on every render. To fix this, wrap the initialization of 'currentCategory' in its own useMemo() Hook.","line":19,"column":9,"nodeType":"VariableDeclarator","endLine":19,"endColumn":79},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'currentWord' logical expression could make the dependencies of useCallback Hook (at line 230) change on every render. To fix this, wrap the initialization of 'currentWord' in its own useMemo() Hook.","line":20,"column":9,"nodeType":"VariableDeclarator","endLine":20,"endColumn":119},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":40,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":40,"endColumn":21},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'STORAGE_KEY'. Either include it or remove the dependency array.","line":47,"column":6,"nodeType":"ArrayExpression","endLine":47,"endColumn":19,"suggestions":[{"desc":"Update the dependencies array to be: [STORAGE_KEY, progressKey]","fix":{"range":[1798,1811],"text":"[STORAGE_KEY, progressKey]"}}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":60,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":60,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useVocabulary.js - AVEC TIMESTAMPS POUR COMPTAGE QUOTIDIEN\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { Alert } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst useVocabulary = (vocabularyData = null, level = \"1\", mode = \"classic\") => {\n  \n  const [categoryIndex, setCategoryIndex] = useState(0);\n  const [wordIndex, setWordIndex] = useState(0);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [completedWords, setCompletedWords] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [showDetailedProgress, setShowDetailedProgress] = useState(false);\n\n  const isInitialized = useRef(false);\n\n  const exercises = vocabularyData?.exercises || [];\n  const currentCategory = exercises[categoryIndex] || { title: \"\", words: [] };\n  const currentWord = currentCategory.words?.[wordIndex] || { word: \"\", translation: \"\", definition: \"\", example: \"\" };\n  const totalCategories = exercises.length;\n  const totalWordsInCategory = currentCategory.words?.length || 0;\n  \n  const progressKey = `${level}_${mode}`;\n  const STORAGE_KEY = `vocabulary_${progressKey}`;\n\n  // Load data from storage\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const saved = await AsyncStorage.getItem(STORAGE_KEY);\n        if (saved) {\n          const { completedWords: savedCompleted, lastPosition } = JSON.parse(saved);\n          setCompletedWords(savedCompleted || {});\n          if (lastPosition) {\n            setCategoryIndex(lastPosition.categoryIndex || 0);\n            setWordIndex(lastPosition.wordIndex || 0);\n          }\n        }\n      } catch (error) {\n        // Silently fail\n      } finally {\n        setLoaded(true);\n      }\n    };\n    loadData();\n  }, [progressKey]);\n\n  // Save data to storage\n  const saveData = useCallback(async () => {\n    try {\n      const dataToSave = {\n        completedWords,\n        lastPosition: {\n          categoryIndex,\n          wordIndex\n        }\n      };\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n    } catch (error) {\n      // Silently fail\n    }\n  }, [completedWords, categoryIndex, wordIndex, STORAGE_KEY]);\n\n  // Auto-save when data changes\n  useEffect(() => {\n    if (loaded) saveData();\n  }, [saveData, loaded]);\n\n  // Initialize progress for new categories\n  useEffect(() => {\n    if (loaded && vocabularyData && !isInitialized.current) {\n      const newCompletedWords = { ...completedWords };\n      exercises.forEach((_, index) => {\n        if (!newCompletedWords[index]) {\n          newCompletedWords[index] = [];\n        }\n      });\n      setCompletedWords(newCompletedWords);\n      isInitialized.current = true;\n    }\n  }, [loaded, vocabularyData, exercises, completedWords]);\n\n  // Navigation actions\n  const changeCategory = useCallback((newCategoryIndex) => {\n    setCategoryIndex(newCategoryIndex);\n    setWordIndex(0);\n    setShowTranslation(false);\n  }, []);\n\n  const goToNextWord = useCallback(() => {\n    setWordIndex(prev => prev + 1);\n    setShowTranslation(false);\n  }, []);\n\n  const goToPreviousWord = useCallback(() => {\n    if (wordIndex > 0) {\n      setWordIndex(prev => prev - 1);\n      setShowTranslation(false);\n      return true;\n    }\n    return false;\n  }, [wordIndex]);\n\n  const toggleTranslation = useCallback(() => {\n    setShowTranslation(prev => !prev);\n  }, []);\n\n  const toggleDetailedProgress = useCallback(() => {\n    setShowDetailedProgress(prev => !prev);\n  }, []);\n\n  // =================== COMPLETION AVEC TIMESTAMP ===================\n  \n  const markWordAsCompleted = useCallback((catIndex, wIndex) => {\n    setCompletedWords(prev => {\n      const categoryCompleted = prev[catIndex] || [];\n      \n      // Vérifier si le mot n'est pas déjà complété\n      const isAlreadyCompleted = categoryCompleted.find(word => \n        (typeof word === 'number' && word === wIndex) || \n        (typeof word === 'object' && word.wordIndex === wIndex)\n      );\n      \n      if (!isAlreadyCompleted) {\n        // ✅ NOUVEAU FORMAT avec timestamp\n        const newWordEntry = {\n          wordIndex: wIndex,\n          timestamp: Date.now(),\n          date: new Date().toDateString() // Pour debug\n        };\n        \n        return {\n          ...prev,\n          [catIndex]: [...categoryCompleted, newWordEntry]\n        };\n      }\n      return prev;\n    });\n  }, []);\n\n  // Find next uncompleted category\n  const findNextUncompletedCategory = useCallback(() => {\n    const totalCategories = exercises.length;\n    for (let i = 1; i <= totalCategories; i++) {\n      const nextIndex = (categoryIndex + i) % totalCategories;\n      const category = exercises[nextIndex];\n      const completedInCategory = completedWords[nextIndex]?.length || 0;\n      const totalInCategory = category.words?.length || 0;\n      \n      if (completedInCategory < totalInCategory) {\n        return nextIndex;\n      }\n    }\n    return -1;\n  }, [exercises, categoryIndex, completedWords]);\n\n  // Main navigation\n  const handleNext = useCallback(() => {\n    markWordAsCompleted(categoryIndex, wordIndex);\n\n    if (wordIndex < totalWordsInCategory - 1) {\n      goToNextWord();\n    } else {\n      const nextCategoryIndex = findNextUncompletedCategory();\n      if (nextCategoryIndex === -1) {\n        const completionMessage = mode === \"fast\"\n          ? `Félicitations ! Vous avez terminé le Fast Vocabulary ${level} !`\n          : `Félicitations ! Vous avez terminé le vocabulaire ${level} !`;\n        \n        Alert.alert(\"Félicitations\", completionMessage);\n        return { completed: true };\n      } else {\n        changeCategory(nextCategoryIndex);\n      }\n    }\n    return { completed: false };\n  }, [categoryIndex, wordIndex, totalWordsInCategory, markWordAsCompleted, goToNextWord, findNextUncompletedCategory, changeCategory, mode, level]);\n\n  const handlePrevious = useCallback(() => {\n    if (wordIndex > 0) {\n      goToPreviousWord();\n      return;\n    }\n    \n    if (categoryIndex > 0) {\n      const previousCategoryIndex = categoryIndex - 1;\n      const previousCategory = exercises[previousCategoryIndex];\n      const lastWordIndex = (previousCategory.words?.length || 1) - 1;\n      \n      setCategoryIndex(previousCategoryIndex);\n      setWordIndex(lastWordIndex);\n      setShowTranslation(false);\n    }\n  }, [wordIndex, categoryIndex, exercises, goToPreviousWord]);\n\n  // =================== STATS AVEC COMPATIBILITÉ ===================\n  \n  const getStats = useCallback(() => {\n    const totalWords = exercises.reduce((sum, cat) => sum + (cat.words?.length || 0), 0);\n    \n    // ✅ COMPATIBILITÉ : Gérer ancien format (number) et nouveau format (object)\n    const completedWordsCount = Object.values(completedWords).reduce((sum, completed) => {\n      const categoryCount = (completed || []).length;\n      return sum + categoryCount;\n    }, 0);\n    \n    const totalProgress = totalWords > 0 ? Math.round((completedWordsCount / totalWords) * 100) : 0;\n\n    return {\n      totalWords,\n      completedWordsCount,\n      totalProgress,\n      completedInCurrentCategory: completedWords[categoryIndex]?.length || 0,\n      totalInCurrentCategory: totalWordsInCategory\n    };\n  }, [exercises, completedWords, categoryIndex, totalWordsInCategory]);\n\n  // Display data\n  const getDisplayData = useCallback(() => {\n    const wordCounter = `${wordIndex + 1} / ${totalWordsInCategory}`;\n    const categories = exercises.map(cat => cat.title);\n    \n    return {\n      wordCounter,\n      categories,\n      currentWord,\n      currentCategory\n    };\n  }, [wordIndex, totalWordsInCategory, exercises, currentWord, currentCategory]);\n\n  // Validation\n  const canGoToPrevious = useCallback(() => {\n    if (wordIndex > 0) return true;\n    if (categoryIndex > 0) {\n      const previousCategory = exercises[categoryIndex - 1];\n      return previousCategory?.words && previousCategory.words.length > 0;\n    }\n    return false;\n  }, [wordIndex, categoryIndex, exercises]);\n\n  const isLastWordInExercise = useCallback(() => {\n    return wordIndex === totalWordsInCategory - 1;\n  }, [wordIndex, totalWordsInCategory]);\n\n  return {\n    categoryIndex,\n    wordIndex,\n    showTranslation,\n    completedWords,\n    loaded,\n    showDetailedProgress,\n    currentWord,\n    currentCategory,\n    totalCategories,\n    totalWordsInCategory,\n    changeCategory,\n    toggleTranslation,\n    toggleDetailedProgress,\n    handleNext,\n    handlePrevious,\n    canGoToPrevious: canGoToPrevious(),\n    isLastWordInExercise: isLastWordInExercise(),\n    stats: getStats(),\n    display: getDisplayData(),\n  };\n};\n\nexport default useVocabulary;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[65,71],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[118,123],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[122,141],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[269,279],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyHeader' is defined but never used.","line":9,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyHeader"},"fix":{"range":[357,379],"text":""},"desc":"Remove unused variable 'VocabularyHeader'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyCategorySelector' is defined but never used.","line":10,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":34,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyCategorySelector"},"fix":{"range":[408,440],"text":""},"desc":"Remove unused variable 'VocabularyCategorySelector'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyProgress' is defined but never used.","line":11,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyProgress"},"fix":{"range":[479,503],"text":""},"desc":"Remove unused variable 'VocabularyProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyWordSection' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":29,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyWordSection"},"fix":{"range":[534,561],"text":""},"desc":"Remove unused variable 'VocabularyWordSection'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'VocabularyNavigation' is defined but never used.","line":13,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":28,"suggestions":[{"messageId":"removeVar","data":{"varName":"VocabularyNavigation"},"fix":{"range":[595,621],"text":""},"desc":"Remove unused variable 'VocabularyNavigation'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'totalCategories' is assigned a value but never used.","line":41,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":41,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"totalCategories"},"fix":{"range":[1512,1533],"text":""},"desc":"Remove unused variable 'totalCategories'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'totalWordsInCategory' is assigned a value but never used.","line":42,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":42,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"totalWordsInCategory"},"fix":{"range":[1533,1559],"text":""},"desc":"Remove unused variable 'totalWordsInCategory'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'stats' is assigned a value but never used.","line":50,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":50,"endColumn":10,"suggestions":[{"messageId":"removeVar","data":{"varName":"stats"},"fix":{"range":[1713,1724],"text":""},"desc":"Remove unused variable 'stats'."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'categoryIndex', 'currentCategory?.name', 'currentWord', 'finalMode', 'level', 'loaded', 'saveActivity', and 'vocabularyData'. Either include them or remove the dependency array.","line":86,"column":6,"nodeType":"ArrayExpression","endLine":86,"endColumn":17,"suggestions":[{"desc":"Update the dependencies array to be: [categoryIndex, currentCategory?.name, currentWord, finalMode, level, loaded, saveActivity, vocabularyData, wordIndex]","fix":{"range":[3071,3082],"text":"[categoryIndex, currentCategory?.name, currentWord, finalMode, level, loaded, saveActivity, vocabularyData, wordIndex]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// VocabularyExercise/index.js - BOUCLE INFINIE CORRIGÉE\n\nimport React, { useMemo, useEffect } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\n\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\nimport VocabularyHeader from \"./VocabularyHeader\";\nimport VocabularyCategorySelector from \"./VocabularyCategorySelector\";\nimport VocabularyProgress from \"./VocabularyProgress\";\nimport VocabularyWordSection from \"./VocabularyWordSection\";\nimport VocabularyNavigation from \"./VocabularyNavigation\";\n\nimport useVocabulary from \"./hooks/useVocabulary\";\nimport useLastActivity from \"../../../hooks/useLastActivity\";\nimport { getVocabularyData, isBonusLevel, getLevelColor } from \"../../../utils/vocabulary/vocabularyDataHelper\";\nimport createStyles from \"./style\";\n\nconst VocabularyExercise = ({ route }) => {\n  const { level, mode } = route.params;\n  const navigation = useNavigation();\n  const styles = createStyles();\n  const { saveActivity } = useLastActivity();\n\n  // Data\n  const finalMode = mode || (isBonusLevel(level) ? \"fast\" : \"classic\");\n  const levelColor = getLevelColor(level);\n  const vocabularyData = useMemo(() => getVocabularyData(level, finalMode), [level, finalMode]);\n\n  // Hook unifié\n  const {\n    categoryIndex,\n    wordIndex,\n    showTranslation,\n    completedWords,\n    loaded,\n    showDetailedProgress,\n    currentWord,\n    currentCategory,\n    totalCategories,\n    totalWordsInCategory,\n    changeCategory,\n    toggleTranslation,\n    toggleDetailedProgress,\n    handleNext,\n    handlePrevious,\n    canGoToPrevious,\n    isLastWordInExercise,\n    stats,\n    display,\n  } = useVocabulary(vocabularyData, level, finalMode);\n\n  // =================== SAUVEGARDE ACTIVITÉ SIMPLIFIÉE ===================\n  \n  useEffect(() => {\n    // ✅ CONDITION SIMPLIFIÉE pour éviter boucle infinie\n    if (!loaded || !vocabularyData || !currentWord) return;\n\n    // ✅ DÉPENDANCES LIMITÉES - seulement wordIndex change\n    let totalWords = 15; // fallback\n    \n    if (vocabularyData.categories && Array.isArray(vocabularyData.categories)) {\n      totalWords = vocabularyData.categories.reduce((total, cat) => total + (cat.words?.length || 0), 0);\n    } else if (vocabularyData.exercises && Array.isArray(vocabularyData.exercises)) {\n      totalWords = vocabularyData.exercises.reduce((total, ex) => total + (ex.words?.length || 0), 0);\n    } else if (vocabularyData.words && Array.isArray(vocabularyData.words)) {\n      totalWords = vocabularyData.words.length;\n    }\n\n    const activityData = {\n      title: `Vocabulaire ${finalMode === \"fast\" ? \"Fast\" : \"\"}`,\n      level: level,\n      type: \"vocabulary\",\n      mode: finalMode,\n      metadata: {\n        word: wordIndex, // ✅ Index pour progression (0-based)\n        totalWords: totalWords,\n        category: currentCategory?.name || \"Général\",\n        categoryIndex: categoryIndex,\n        wordIndex: wordIndex\n      }\n    };\n\n    saveActivity(activityData);\n  }, [wordIndex]); // ✅ SEULEMENT wordIndex - plus de boucle !\n\n  // Handlers\n const handleBackPress = () => {\n  router.push({\n    pathname: \"/(tabs)/exerciseSelection\",\n    params: { level }\n  });\n};\n  const handleCategoryChange = (index) => changeCategory(index);\n  const handleCategoryProgressPress = (index) => changeCategory(index);\n  const handleToggleProgressDetails = () => toggleDetailedProgress();\n\n  const handleNextWord = () => {\n    const result = handleNext();\n    if (result.completed) {\n      navigation.goBack();\n    }\n  };\n\n  const handlePreviousWord = () => handlePrevious();\n\n  // Loading state\n  if (!loaded || !vocabularyData) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} />\n        </View>\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      withScrollView\n      backgroundColor=\"#f8fafc\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      scrollViewProps={{\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: styles.scrollContent,\n      }}\n    >\n      <VocabularyHeader\n        level={level}\n        mode={finalMode}\n        onBackPress={handleBackPress}\n      />\n\n      <VocabularyProgress\n        vocabularyData={vocabularyData}\n        completedWords={completedWords}\n        levelColor={levelColor}\n        expanded={showDetailedProgress}\n        onToggleExpand={handleToggleProgressDetails}\n        onCategoryPress={handleCategoryProgressPress}\n      />\n\n      <VocabularyCategorySelector\n        categories={display.categories}\n        selectedIndex={categoryIndex}\n        onSelectCategory={handleCategoryChange}\n        levelColor={levelColor}\n      />\n\n      <VocabularyWordSection\n        currentWord={currentWord}\n        wordCounter={display.wordCounter}\n        mode={finalMode}\n        level={level}\n        levelColor={levelColor}\n        showTranslation={showTranslation}\n        onToggleTranslation={toggleTranslation}\n      />\n\n      <VocabularyNavigation\n        onNext={handleNextWord}\n        onPrevious={handlePreviousWord}\n        canGoPrevious={canGoToPrevious}\n        isLast={isLastWordInExercise}\n        levelColor={levelColor}\n      />\n    </Container>\n  );\n};\n\nexport default VocabularyExercise;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\CategorizationGame\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[76,87],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[105,110],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[109,115],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[115,133],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GameInstructions' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"GameInstructions"},"fix":{"range":[164,186],"text":""},"desc":"Remove unused variable 'GameInstructions'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/exercises/wordGames/games/CategorizationGame/index.js\nimport React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport GameInstructions from \"../GameInstructions\";\nimport styles from \"./style\";\n\n/**\n * Composant pour le jeu de catégorisation\n *\n * @param {Object} game - Données du jeu\n * @param {Array} selectedItems - Items sélectionnés par l'utilisateur\n * @param {Array} shuffledOptions - Options mélangées\n * @param {boolean} showFeedback - Indique si le feedback est affiché\n * @param {string} levelColor - Couleur associée au niveau\n * @param {Function} onSelectItem - Fonction appelée lors de la sélection d'un mot\n */\nconst CategorizationGame = ({\n  game,\n  selectedItems,\n  shuffledOptions,\n  showFeedback,\n  levelColor,\n  onSelectItem,\n}) => {\n  return (\n    <View style={styles.gameContainer}>\n      <GameInstructions instructions={game.instructions} />\n\n      <View style={styles.categoryContainer}>\n        <Text style={styles.categoryTitle}>\n          Category:{\" \"}\n          <Text style={{ color: levelColor }}>{game.currentCategory}</Text>\n        </Text>\n        <Text style={styles.categorySubtitle}>\n          Select all words that belong to this category:\n        </Text>\n      </View>\n\n      <View style={styles.wordsContainer}>\n        {shuffledOptions.map((word, index) => {\n          const isSelected = selectedItems.some((item) => item.value === word);\n\n          return (\n            <TouchableOpacity\n              key={`word-${index}`}\n              style={[\n                styles.wordTile,\n                isSelected && [\n                  styles.selectedWordTile,\n                  {\n                    backgroundColor: `${levelColor}30`,\n                    borderColor: levelColor,\n                  },\n                ],\n              ]}\n              onPress={() => onSelectItem(word, index)}\n              disabled={showFeedback}\n            >\n              <Text\n                style={[\n                  styles.wordTileText,\n                  isSelected && { color: levelColor },\n                ]}\n              >\n                {word}\n              </Text>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </View>\n  );\n};\n\nexport default CategorizationGame;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\CategorizationGame\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\FeedbackMessage\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[78,89],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[107,112],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[111,117],"text":""},"desc":"Remove unused variable 'Text'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/exercises/wordGames/components/FeedbackMessage/index.js\nimport React from \"react\";\nimport { View, Text } from \"react-native\";\nimport styles from \"./style\";\n\n/**\n * Composant pour afficher le feedback après une réponse\n * \n * @param {boolean} isCorrect - Indique si la réponse est correcte\n * @param {string} successMessage - Message à afficher en cas de succès\n * @param {string} failureMessage - Message à afficher en cas d'échec\n * @param {string} correctAnswer - Réponse correcte à afficher en cas d'échec\n * @param {string} levelColor - Couleur associée au niveau\n */\nconst FeedbackMessage = ({\n  isCorrect,\n  successMessage,\n  failureMessage,\n  correctAnswer,\n  levelColor\n}) => {\n  return (\n    <View\n      style={[\n        styles.feedbackContainer,\n        isCorrect\n          ? [styles.correctFeedback, { borderLeftColor: levelColor }]\n          : styles.incorrectFeedback,\n      ]}\n    >\n      <Text style={styles.feedbackTitle}>\n        {isCorrect ? \"Great job!\" : \"Try again!\"}\n      </Text>\n      <Text style={styles.feedbackText}>\n        {isCorrect\n          ? successMessage || \"You've successfully completed this game!\"\n          : failureMessage || \"Don't worry, you can try another word game.\"}\n      </Text>\n      {!isCorrect && correctAnswer && (\n        <Text style={styles.correctAnswerText}>\n          Correct answer: <Text style={styles.answerHighlight}>{correctAnswer}</Text>\n        </Text>\n      )}\n    </View>\n  );\n};\n\nexport default FeedbackMessage;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\FeedbackMessage\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\GameInstructions\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[79,90],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[99,135],"text":""},"desc":"Remove unused variable 'Text'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/exercises/wordGames/components/GameInstructions/index.js\nimport React from \"react\";\nimport { Text } from \"react-native\";\nimport styles from \"./style\";\n\n/**\n * Composant pour afficher les instructions d'un jeu\n * \n * @param {string} instructions - Instructions du jeu\n */\nconst GameInstructions = ({ instructions }) => {\n  return (\n    <Text style={styles.gameInstructions}>\n      {instructions}\n    </Text>\n  );\n};\n\nexport default GameInstructions;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\GameInstructions\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\MatchingGame\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[70,81],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[99,104],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[103,109],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[109,127],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'GameInstructions' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"GameInstructions"},"fix":{"range":[158,180],"text":""},"desc":"Remove unused variable 'GameInstructions'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/exercises/wordGames/games/MatchingGame/index.js\nimport React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport GameInstructions from \"../GameInstructions\";\nimport styles from \"./style\";\n\n/**\n * Composant pour le jeu d'association de paires\n *\n * @param {Object} game - Données du jeu\n * @param {Array} selectedItems - Items sélectionnés par l'utilisateur\n * @param {Array} matchedItems - Items correctement appariés\n * @param {Array} shuffledOptions - Options mélangées\n * @param {boolean} showFeedback - Indique si le feedback est affiché\n * @param {string} levelColor - Couleur associée au niveau\n * @param {Function} onSelectItem - Fonction appelée lors de la sélection d'un item\n */\nconst MatchingGame = ({\n  game,\n  selectedItems,\n  matchedItems,\n  shuffledOptions,\n  showFeedback,\n  levelColor,\n  onSelectItem,\n}) => {\n  return (\n    <View style={styles.gameContainer}>\n      <GameInstructions instructions={game.instructions} />\n\n      <View style={styles.matchingContainer}>\n        {shuffledOptions.map((item, index) => {\n          const isMatched = matchedItems.includes(item);\n          const isSelected = selectedItems.some(\n            (selected) => selected.index === index\n          );\n\n          return (\n            <TouchableOpacity\n              key={`matching-${index}`}\n              style={[\n                styles.matchingTile,\n                isSelected && [\n                  styles.selectedMatchingTile,\n                  { borderColor: levelColor },\n                ],\n                isMatched && [\n                  styles.matchedTile,\n                  { backgroundColor: `${levelColor}20` },\n                ],\n              ]}\n              onPress={() => onSelectItem(item, index)}\n              disabled={isMatched || showFeedback}\n            >\n              <Text\n                style={[\n                  styles.matchingText,\n                  isMatched && { color: levelColor },\n                ]}\n              >\n                {item}\n              </Text>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n\n      {game.hint && (\n        <View style={styles.hintContainer}>\n          <Text style={styles.hintText}>Hint: {game.hint}</Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default MatchingGame;\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\MatchingGame\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesCard\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[65,76],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[94,99],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[98,104],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[104,116],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Animated' is defined but never used.","line":3,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":42,"suggestions":[{"messageId":"removeVar","data":{"varName":"Animated"},"fix":{"range":[116,126],"text":""},"desc":"Remove unused variable 'Animated'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'MatchingGame' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"MatchingGame"},"fix":{"range":[157,175],"text":""},"desc":"Remove unused variable 'MatchingGame'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'CategorizationGame' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"CategorizationGame"},"fix":{"range":[201,225],"text":""},"desc":"Remove unused variable 'CategorizationGame'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'FeedbackMessage' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"FeedbackMessage"},"fix":{"range":[257,278],"text":""},"desc":"Remove unused variable 'FeedbackMessage'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/exercises/wordGames/WordGamesCard/index.js\nimport React from \"react\";\nimport { View, Text, ScrollView, Animated } from \"react-native\";\nimport MatchingGame from \"../MatchingGame\";\nimport CategorizationGame from \"../CategorizationGame\";\nimport FeedbackMessage from \"../FeedbackMessage\";\nimport styles from \"./style\";\n\n/**\n * Carte principale contenant le jeu actuel\n * Version simplifiée - Matching et Categorization uniquement\n *\n * @param {Object} currentGame - Jeu actuel à afficher\n * @param {Array} selectedItems - Items sélectionnés par l'utilisateur\n * @param {Array} matchedItems - Items correctement appariés (pour matching)\n * @param {Array} shuffledOptions - Options mélangées pour le jeu\n * @param {boolean} showFeedback - Indique si le feedback doit être affiché\n * @param {boolean} isCorrect - Indique si la réponse est correcte\n * @param {string} levelColor - Couleur associée au niveau\n * @param {Object} fadeAnim - Animation de fondu\n * @param {Object} bounceAnim - Animation de rebond\n * @param {Function} onSelectItem - Fonction appelée lors de la sélection d'un item\n */\nconst WordGamesCard = ({\n  currentGame,\n  selectedItems,\n  matchedItems,\n  shuffledOptions,\n  showFeedback,\n  isCorrect,\n  levelColor,\n  fadeAnim,\n  bounceAnim,\n  onSelectItem,\n}) => {\n  // Rendu en fonction du type de jeu (seulement matching et categorization)\n  const renderGameByType = () => {\n    switch (currentGame.type) {\n      case \"matching\":\n        return (\n          <MatchingGame\n            game={currentGame}\n            selectedItems={selectedItems}\n            matchedItems={matchedItems}\n            shuffledOptions={shuffledOptions}\n            showFeedback={showFeedback}\n            levelColor={levelColor}\n            onSelectItem={onSelectItem}\n          />\n        );\n      case \"categorization\":\n        return (\n          <CategorizationGame\n            game={currentGame}\n            selectedItems={selectedItems}\n            shuffledOptions={shuffledOptions}\n            showFeedback={showFeedback}\n            levelColor={levelColor}\n            onSelectItem={onSelectItem}\n          />\n        );\n      default:\n        return (\n          <View style={styles.errorContainer}>\n            <Text style={styles.errorText}>\n              Unsupported game type: {currentGame.type}\n            </Text>\n            <Text style={styles.errorSubText}>\n              Only matching and categorization games are supported.\n            </Text>\n          </View>\n        );\n    }\n  };\n\n  return (\n    <ScrollView\n      style={styles.scrollView}\n      contentContainerStyle={styles.contentContainer}\n    >\n      <Animated.View\n        style={[\n          styles.gameCardContainer,\n          {\n            opacity: fadeAnim,\n            transform: [{ scale: bounceAnim }],\n          },\n        ]}\n      >\n        {/* Titre du jeu */}\n        {currentGame.title && (\n          <Text style={styles.gameTitle}>{currentGame.title}</Text>\n        )}\n\n        {/* Rendu du jeu actuel */}\n        {renderGameByType()}\n\n        {/* Feedback après vérification */}\n        {showFeedback && (\n          <FeedbackMessage\n            isCorrect={isCorrect}\n            successMessage={currentGame.successMessage}\n            failureMessage={currentGame.failureMessage}\n            levelColor={levelColor}\n          />\n        )}\n      </Animated.View>\n    </ScrollView>\n  );\n};\n\nexport default WordGamesCard;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesCard\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesHeader\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[42,53],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ExerciseHeader' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ExerciseHeader"},"fix":{"range":[69,89],"text":""},"desc":"Remove unused variable 'ExerciseHeader'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// 9. WordGamesHeader - MIS À JOUR\nimport React from \"react\";\nimport ExerciseHeader from \"../../../../components/exercise-common/ExerciseHeader\";\n\nconst WordGamesHeader = ({ level, onBackPress }) => {\n  return (\n    <ExerciseHeader\n      title=\"Jeux de mots\"\n      level={level}\n      exerciseType=\"wordGames\" // ✅ NOUVEAU\n      onClose={onBackPress}\n      backIcon=\"arrow-back\"\n    />\n  );\n};\n\nexport default WordGamesHeader;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesNavigation\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[86,97],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[115,120],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'TouchableOpacity' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":32,"suggestions":[{"messageId":"removeVar","data":{"varName":"TouchableOpacity"},"fix":{"range":[119,137],"text":""},"desc":"Remove unused variable 'TouchableOpacity'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Text' is defined but never used.","line":4,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":38,"suggestions":[{"messageId":"removeVar","data":{"varName":"Text"},"fix":{"range":[137,143],"text":""},"desc":"Remove unused variable 'Text'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[174,197],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// WordGamesNavigation/index.js - VERSION REFACTORISÉE avec NavigationButtons\n\nimport React from \"react\";\nimport { View, TouchableOpacity, Text } from \"react-native\";\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 WordGamesNavigation - Version Refactorisée\n * Utilise NavigationButtons pour la navigation + bouton Check Answer custom\n * \n * @param {object} currentGame - Jeu actuel\n * @param {boolean} showFeedback - Afficher le feedback ou non\n * @param {array} selectedItems - Items sélectionnés\n * @param {boolean} isLastGame - Dernier jeu\n * @param {boolean} canGoPrevious - Peut aller en arrière\n * @param {string} levelColor - Couleur du niveau\n * @param {function} onCheckAnswer - Vérifier la réponse\n * @param {function} onNext - Jeu suivant\n * @param {function} onPrevious - Jeu précédent\n */\nconst WordGamesNavigation = ({\n  currentGame,\n  showFeedback,\n  selectedItems = [],\n  isLastGame,\n  canGoPrevious,\n  levelColor = \"#3b82f6\",\n  onCheckAnswer,\n  onNext,\n  onPrevious,\n}) => {\n  const styles = createStyles(levelColor);\n\n  // Déterminer si le bouton Check Answer doit être disponible\n  const isMatchingOrAutoComplete = currentGame?.type === \"matching\";\n  const hasSelection = selectedItems.length > 0;\n  const canCheckAnswer = !isMatchingOrAutoComplete && hasSelection;\n\n  // Phase 1: Check Answer (pour categorization seulement)\n  if (!showFeedback && currentGame?.type === \"categorization\") {\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          style={[\n            styles.checkButton,\n            !canCheckAnswer && styles.disabledButton,\n            { backgroundColor: canCheckAnswer ? levelColor : \"#cbd5e1\" },\n          ]}\n          onPress={onCheckAnswer}\n          disabled={!canCheckAnswer}\n          activeOpacity={0.8}\n        >\n          <Text style={styles.checkButtonText}>\n            {hasSelection ? \"Check Answer\" : \"Select items to check\"}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  // Phase 2: Matching games (auto-complete, pas de bouton Check)\n  if (!showFeedback && currentGame?.type === \"matching\") {\n    return (\n      <View style={styles.container}>\n        <View style={styles.instructionContainer}>\n          <Text style={styles.instructionText}>Find all matching pairs</Text>\n        </View>\n      </View>\n    );\n  }\n\n  // Phase 3: Navigation après feedback (tous types de jeux)\n  return (\n    <View style={styles.container}>\n      <NavigationButtons\n        onNext={onNext}\n        onPrevious={canGoPrevious ? onPrevious : undefined}\n        disablePrevious={!canGoPrevious}\n        disableNext={false}\n        primaryColor={levelColor}\n        isLast={isLastGame}\n        buttonLabels={{\n          next: isLastGame ? \"See Results\" : \"Next Game\",\n          previous: \"Previous Game\",\n          finish: \"See Results\"\n        }}\n        layout=\"full\" // Utilise toute la largeur\n      />\n    </View>\n  );\n};\n\nexport default WordGamesNavigation;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesNavigation\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":9,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[223,245],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// WordGamesNavigation/style.js\n\nimport { StyleSheet, Platform } from \"react-native\";\n\n/**\n * 🎯 Styles pour WordGamesNavigation\n * Mélange bouton Check Answer custom + NavigationButtons générique\n */\nconst createStyles = (levelColor = \"#3b82f6\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      backgroundColor: 'white',\n      borderTopWidth: 1,\n      borderTopColor: '#f1f5f9',\n      paddingHorizontal: 20,\n      paddingVertical: 16,\n      paddingBottom: Platform.OS === 'ios' ? 34 : 16, // Safe area bottom\n    },\n\n    // =================== BOUTON CHECK ANSWER ===================\n    checkButton: {\n      borderRadius: 12,\n      paddingVertical: 16,\n      alignItems: 'center',\n      justifyContent: 'center',\n      // Ombre\n      ...Platform.select({\n        ios: {\n          shadowColor: '#000',\n          shadowOffset: { width: 0, height: 2 },\n          shadowOpacity: 0.1,\n          shadowRadius: 4,\n        },\n        android: {\n          elevation: 3,\n        },\n      }),\n    },\n\n    disabledButton: {\n      opacity: 0.6,\n    },\n\n    checkButtonText: {\n      fontSize: 16,\n      fontWeight: '700',\n      color: 'white',\n      letterSpacing: 0.3,\n    },\n\n    // =================== INSTRUCTIONS MATCHING ===================\n    instructionContainer: {\n      backgroundColor: '#f8fafc',\n      borderRadius: 12,\n      paddingVertical: 12,\n      paddingHorizontal: 16,\n      alignItems: 'center',\n      borderWidth: 1,\n      borderColor: '#e2e8f0',\n    },\n\n    instructionText: {\n      fontSize: 15,\n      color: '#64748b',\n      fontStyle: 'italic',\n      textAlign: 'center',\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesProgress\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[70,76],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ProgressCard' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"ProgressCard"},"fix":{"range":[110,128],"text":""},"desc":"Remove unused variable 'ProgressCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'calculateGameTypeProgress' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":35,"suggestions":[{"messageId":"removeVar","data":{"varName":"calculateGameTypeProgress"},"fix":{"range":[170,257],"text":""},"desc":"Remove unused variable 'calculateGameTypeProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'debugData' is assigned a value but never used.","line":36,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":36,"endColumn":18,"suggestions":[{"messageId":"removeVar","data":{"varName":"debugData"},"fix":{"range":[1076,1618],"text":""},"desc":"Remove unused variable 'debugData'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// WordGamesProgress/index.js - VERSION CORRIGÉE AVEC useMemo\n\nimport React, { useMemo } from \"react\";\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\nimport { calculateGameTypeProgress } from \"../../../../utils/wordGames/wordGamesStats\";\nimport { getWordGamesData } from \"../../../../utils/wordGames/wordGamesDataHelper\";\n\n/**\n * 📊 WordGamesProgress - Version corrigée avec mémorisation\n * ✅ Évite les boucles infinies avec useMemo\n * ✅ Performance optimisée\n */\nconst WordGamesProgress = ({\n  currentGame = 1,\n  totalGames = 0,\n  gameTitle = \"\",\n  completedGames = 0,\n  levelColor = \"#3b82f6\",\n  gameResults = [],\n  level = \"A1\",\n}) => {\n  \n  // ✅ MÉMORISER le calcul de progression globale\n  const globalProgress = useMemo(() => {\n    return totalGames > 0 \n      ? Math.round((completedGames / totalGames) * 100)\n      : 0;\n  }, [completedGames, totalGames]);\n\n  // ✅ MÉMORISER les données Word Games\n  const wordGamesData = useMemo(() => {\n    return getWordGamesData(level);\n  }, [level]);\n\n  // ✅ MÉMORISER les données de debug (seulement en dev)\n  const debugData = useMemo(() => {\n    if (process.env.NODE_ENV !== 'development') return null;\n    \n    return {\n      currentGame,\n      totalGames,\n      completedGames,\n      globalProgress,\n      gameResultsLength: gameResults.length,\n      hasWordGamesData: !!wordGamesData,\n      wordGamesDataKeys: wordGamesData && typeof wordGamesData === 'object' ? Object.keys(wordGamesData) : \"not object or null\",\n      gameTitle\n    };\n  }, [currentGame, totalGames, completedGames, globalProgress, gameResults.length, wordGamesData, gameTitle]);\n\n  // ✅ CORRECTION FINALE : Pas de log dans le render !\n\n  return (\n    <ProgressCard\n      title=\"Progression\"\n      subtitle={`${gameTitle} • Jeu ${currentGame}/${totalGames}`}\n      progress={globalProgress}\n      completed={completedGames}\n      total={totalGames}\n      unit=\"jeux\"\n      levelColor={levelColor}\n      expandable={false}\n      expanded={false}\n      onToggleExpand={undefined}\n      categoryData={[]}\n      onCategoryPress={undefined}\n    />\n  );\n};\n\nexport default WordGamesProgress;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesResults\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[87,98],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[116,121],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ScrollView' is defined but never used.","line":4,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":26,"suggestions":[{"messageId":"removeVar","data":{"varName":"ScrollView"},"fix":{"range":[120,132],"text":""},"desc":"Remove unused variable 'ScrollView'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'HeroCard' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16,"suggestions":[{"messageId":"removeVar","data":{"varName":"HeroCard"},"fix":{"range":[163,177],"text":""},"desc":"Remove unused variable 'HeroCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ContentSection' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":22,"suggestions":[{"messageId":"removeVar","data":{"varName":"ContentSection"},"fix":{"range":[222,242],"text":""},"desc":"Remove unused variable 'ContentSection'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'NavigationButtons' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"NavigationButtons"},"fix":{"range":[293,316],"text":""},"desc":"Remove unused variable 'NavigationButtons'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// WordGamesResults/index.js - VERSION REFACTORISÉE avec composants génériques\n\nimport React from \"react\";\nimport { View, ScrollView } from \"react-native\";\nimport HeroCard from \"../../../../components/ui/HeroCard\";\nimport ContentSection from \"../../../../components/ui/ContentSection\";\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\nimport { getPerformanceLevel, generateFeedbackMessage, calculateGameTypeStats } from \"../../../../utils/wordGames/wordGamesStats\";\nimport createStyles from \"./style\";\n\n/**\n * 🏆 WordGamesResults - Version Refactorisée avec composants génériques\n * 150+ lignes → 70 lignes (-53% de code)\n * Utilise HeroCard + ContentSection + NavigationButtons\n * \n * @param {array} games - Liste des jeux joués\n * @param {array} gameResults - Résultats de chaque jeu\n * @param {object} finalScore - Score final {score, percentage, totalMaxScore}\n * @param {string} levelColor - Couleur du niveau\n * @param {function} onPlayAgain - Fonction pour rejouer\n * @param {function} onContinue - Fonction pour continuer\n */\nconst WordGamesResults = ({\n  games = [],\n  gameResults = [],\n  finalScore = { score: 0, percentage: 0, totalMaxScore: 0 },\n  levelColor = \"#3b82f6\",\n  onPlayAgain,\n  onContinue,\n}) => {\n  const styles = createStyles(levelColor);\n\n  // Fallback si pas de score\n  if (!finalScore || finalScore.totalMaxScore === 0) {\n    return (\n      <ScrollView style={styles.container} contentContainerStyle={styles.content}>\n        {/* 🎯 HERO - Titre simple */}\n        <HeroCard \n          content=\"Games Complete!\"\n          fontSize={24}\n          levelColor={levelColor}\n          showUnderline={true}\n          backgroundColor=\"white\"\n        />\n\n        {/* 📝 MESSAGE SIMPLE */}\n        <ContentSection\n          title=\"Word Games\"\n          content=\"All games completed! Thanks for playing!\"\n          levelColor={levelColor}\n          backgroundColor=\"#f8fafc\"\n        />\n\n        {/* 🚀 NAVIGATION */}\n        <View style={styles.navigationContainer}>\n          <NavigationButtons\n            onNext={onContinue}\n            disablePrevious={true}\n            disableNext={false}\n            primaryColor={levelColor}\n            isLast={true}\n            buttonLabels={{\n              next: \"Continue\",\n              finish: \"Continue\"\n            }}\n          />\n        </View>\n      </ScrollView>\n    );\n  }\n\n  // Calculs pour l'affichage\n  const performance = getPerformanceLevel(finalScore.percentage);\n  const gameTypeStats = calculateGameTypeStats({ games }, gameResults);\n  const feedbackMessage = generateFeedbackMessage(finalScore, gameTypeStats);\n\n  return (\n    <ScrollView \n      style={styles.container} \n      contentContainerStyle={styles.content}\n      showsVerticalScrollIndicator={false}\n    >\n      {/* 🎯 HERO - Score principal spectaculaire */}\n      <HeroCard \n        content={`${Math.round(finalScore.percentage)}%`}\n        fontSize={56}\n        levelColor={performance.color}\n        showUnderline={false}\n        backgroundColor={performance.color + '10'}\n        padding={32}\n        subtitle={`${finalScore.score}/${finalScore.totalMaxScore} points`}\n      />\n\n      {/* 🎭 MESSAGE DE PERFORMANCE */}\n      <ContentSection\n        title=\"Your Performance\"\n        content={performance.message + '\\n\\n' + performance.description}\n        levelColor={performance.color}\n        backgroundColor={performance.color + '08'}\n        icon={performance.message.split(' ')[0]} // Récupère l'emoji\n      />\n\n      {/* 📊 STATISTIQUES DÉTAILLÉES */}\n      {games.length > 0 && (\n        <ContentSection\n          title=\"Games Review\"\n          content={games.map((game, index) => {\n            const result = gameResults[index] || { score: 0, maxScore: 0 };\n            const gameType = game.type.charAt(0).toUpperCase() + game.type.slice(1);\n            return `${gameType}: ${result.score}/${result.maxScore}`;\n          }).join('\\n')}\n          levelColor=\"#6366f1\"\n          backgroundColor=\"white\"\n          isMonospace={true}\n        />\n      )}\n\n      {/* 📈 ANALYSE PAR TYPE DE JEU */}\n      {gameTypeStats.length > 1 && (\n        <ContentSection\n          title=\"Performance by Game Type\"\n          content={gameTypeStats.map(stat => \n            `${stat.type}: ${Math.round(stat.percentage)}% (${stat.completedCount}/${stat.gamesCount})`\n          ).join('\\n')}\n          levelColor=\"#8b5cf6\"\n          backgroundColor=\"#f8fafc\"\n          isItalic={true}\n        />\n      )}\n\n      {/* 💡 FEEDBACK PERSONNALISÉ */}\n      {feedbackMessage && (\n        <ContentSection\n          title=\"Feedback\"\n          content={feedbackMessage}\n          levelColor={performance.color}\n          backgroundColor={performance.color + '05'}\n        />\n      )}\n\n      {/* 🚀 NAVIGATION - Boutons d'action */}\n      <View style={styles.navigationContainer}>\n        {/* Bouton Play Again conditionnel */}\n        {onPlayAgain && finalScore.percentage < 80 && (\n          <View style={styles.playAgainContainer}>\n            <NavigationButtons\n              onNext={onPlayAgain}\n              disablePrevious={true}\n              disableNext={false}\n              primaryColor={performance.color}\n              isLast={false}\n              buttonLabels={{\n                next: \"Play Again\",\n              }}\n            />\n          </View>\n        )}\n\n        {/* Bouton principal Continue */}\n        <NavigationButtons\n          onNext={onContinue}\n          disablePrevious={true}\n          disableNext={false}\n          primaryColor={levelColor}\n          isLast={true}\n          buttonLabels={{\n            next: \"Continue\",\n            finish: \"Continue\"\n          }}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default WordGamesResults;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesResults\\style.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'levelColor' is assigned a value but never used.","line":10,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"levelColor"},"fix":{"range":[280,302],"text":""},"desc":"Remove unused variable 'levelColor'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// WordGamesResults/style.js - VERSION ÉPURÉE\n\nimport { StyleSheet } from \"react-native\";\n\n/**\n * 🎯 Styles ultra-simplifiés pour WordGamesResults\n * 150+ lignes → 25 lignes (-83% de code)\n * La majorité des styles est déléguée aux composants génériques\n */\nconst createStyles = (levelColor = \"#3b82f6\") =>\n  StyleSheet.create({\n    // =================== CONTAINER ===================\n    container: {\n      flex: 1,\n      backgroundColor: \"#f8fafc\",\n    },\n\n    content: {\n      padding: 20,\n      paddingBottom: 40,\n      gap: 16, // Espacement uniforme entre les sections\n    },\n\n    // =================== NAVIGATION ===================\n    navigationContainer: {\n      marginTop: 'auto',\n      paddingTop: 20,\n      gap: 12,\n    },\n\n    playAgainContainer: {\n      opacity: 0.9, // Légèrement moins visible que le bouton principal\n    },\n  });\n\nexport default createStyles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\hooks\\useGameAnimation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\hooks\\useWordGames.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Alert' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":15,"suggestions":[{"messageId":"removeVar","data":{"varName":"Alert"},"fix":{"range":[112,149],"text":""},"desc":"Remove unused variable 'Alert'."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'games' logical expression could make the dependencies of useEffect Hook (at line 118) change on every render. To fix this, wrap the initialization of 'games' in its own useMemo() Hook.","line":35,"column":9,"nodeType":"VariableDeclarator","endLine":35,"endColumn":43},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'games' logical expression could make the dependencies of useCallback Hook (at line 336) change on every render. To fix this, wrap the initialization of 'games' in its own useMemo() Hook.","line":35,"column":9,"nodeType":"VariableDeclarator","endLine":35,"endColumn":43},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'COMPLETED_KEY' and 'STORAGE_KEY'. Either include them or remove the dependency array.","line":76,"column":6,"nodeType":"ArrayExpression","endLine":76,"endColumn":27,"suggestions":[{"desc":"Update the dependencies array to be: [level, games.length, STORAGE_KEY, COMPLETED_KEY]","fix":{"range":[2850,2871],"text":"[level, games.length, STORAGE_KEY, COMPLETED_KEY]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has missing dependencies: 'handleCategorizationSelection' and 'handleMatchingSelection'. Either include them or remove the dependency array.","line":161,"column":6,"nodeType":"ArrayExpression","endLine":161,"endColumn":77,"suggestions":[{"desc":"Update the dependencies array to be: [showFeedback, animateBounce, currentGame.type, handleMatchingSelection, handleCategorizationSelection]","fix":{"range":[5483,5554],"text":"[showFeedback, animateBounce, currentGame.type, handleMatchingSelection, handleCategorizationSelection]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'updateGameResults'. Either include it or remove the dependency array.","line":244,"column":6,"nodeType":"ArrayExpression","endLine":244,"endColumn":65,"suggestions":[{"desc":"Update the dependencies array to be: [showFeedback, currentGame.type, currentGame.categories, currentGame.currentCategory, currentGame.maxScore, selectedItems, updateGameResults, animateFeedback]","fix":{"range":[8213,8272],"text":"[showFeedback, currentGame.type, currentGame.categories, currentGame.currentCategory, currentGame.maxScore, selectedItems, updateGameResults, animateFeedback]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'updateGameResults'. Either include it or remove the dependency array.","line":255,"column":6,"nodeType":"ArrayExpression","endLine":255,"endColumn":36,"suggestions":[{"desc":"Update the dependencies array to be: [currentGame.maxScore, updateGameResults, animateFeedback]","fix":{"range":[8646,8676],"text":"[currentGame.maxScore, updateGameResults, animateFeedback]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useWordGames.js - HOOK UNIFIÉ SIMPLE\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { Alert } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useGameAnimation from './useGameAnimation';\n\n/**\n * 🎯 Hook unifié pour Word Games\n * Remplace useWordGamesState + useWordGamesProgress\n * Simple, efficace, maintenable - pattern identique à useVocabulary et useAssessment\n */\nconst useWordGames = (wordGamesData = null, level = \"A1\") => {\n  \n  // =================== CORE STATE ===================\n  const [currentGameIndex, setCurrentGameIndex] = useState(0);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [matchedItems, setMatchedItems] = useState([]);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameResults, setGameResults] = useState([]);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const [completedGames, setCompletedGames] = useState({});\n  const [lastPosition, setLastPosition] = useState({ gameIndex: 0 });\n  const [loaded, setLoaded] = useState(false);\n\n  // =================== REFS ===================\n  const isInitialized = useRef(false);\n\n  // =================== ANIMATIONS ===================\n  const { fadeAnim, bounceAnim, animateFeedback, animateBounce } = useGameAnimation();\n\n  // =================== COMPUTED VALUES ===================\n  const games = wordGamesData?.games || [];\n  const currentGame = games[currentGameIndex] || null;\n  const totalGames = games.length;\n  \n  // =================== PERSISTENCE ===================\n  const STORAGE_KEY = `word_games_${level}`;\n  const COMPLETED_KEY = `word_games_completed_${level}`;\n  const SCORES_KEY = `word_games_scores_${level}`;\n\n  // Load data from storage\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Charger position\n        const savedPosition = await AsyncStorage.getItem(STORAGE_KEY);\n        if (savedPosition) {\n          const { gameIndex } = JSON.parse(savedPosition);\n          setLastPosition({ gameIndex });\n        }\n\n        // Charger jeux complétés\n        const savedCompleted = await AsyncStorage.getItem(COMPLETED_KEY);\n        if (savedCompleted) {\n          setCompletedGames(JSON.parse(savedCompleted));\n        }\n\n        // Initialiser gameResults selon le nombre de jeux\n        if (games.length > 0) {\n          setGameResults(Array(games.length).fill({\n            score: 0,\n            maxScore: 0,\n            completed: false,\n          }));\n        }\n      } catch (error) {\n        console.log('Error loading word games data:', error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    loadData();\n  }, [level, games.length]);\n\n  // Save data to storage\n  const saveData = useCallback(async () => {\n    try {\n      // Sauvegarder position\n      const dataToSave = {\n        gameIndex: currentGameIndex,\n        timestamp: Date.now()\n      };\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n\n      // Sauvegarder jeux complétés\n      await AsyncStorage.setItem(COMPLETED_KEY, JSON.stringify(completedGames));\n    } catch (error) {\n      console.log('Error saving word games data:', error);\n    }\n  }, [currentGameIndex, completedGames, STORAGE_KEY, COMPLETED_KEY]);\n\n  // Auto-save when data changes\n  useEffect(() => {\n    if (loaded) saveData();\n  }, [saveData, loaded]);\n\n  // Initialize game setup\n  useEffect(() => {\n    if (loaded && games.length > 0 && !isInitialized.current) {\n      // Restaurer position ou commencer au début\n      if (lastPosition && lastPosition.gameIndex < games.length) {\n        setCurrentGameIndex(lastPosition.gameIndex);\n      }\n      \n      // Initialiser progression si nécessaire\n      const newCompletedGames = { ...completedGames };\n      games.forEach((_, index) => {\n        if (!newCompletedGames[index]) {\n          newCompletedGames[index] = { completed: false };\n        }\n      });\n      setCompletedGames(newCompletedGames);\n      isInitialized.current = true;\n    }\n  }, [loaded, games, lastPosition, completedGames]);\n\n  // Setup current game\n  useEffect(() => {\n    if (currentGame) {\n      // Réinitialiser les états pour le jeu actuel\n      setSelectedItems([]);\n      setMatchedItems([]);\n      setShowFeedback(false);\n      setIsCorrect(false);\n\n      // Mélanger les options selon le type de jeu\n      shuffleGameOptions(currentGame);\n    }\n  }, [currentGameIndex, currentGame]);\n\n  // =================== GAME LOGIC ===================\n  \n  // Mélanger les options du jeu\n  const shuffleGameOptions = (game) => {\n    let optionsToShuffle = [];\n\n    if (game.type === \"matching\") {\n      const allItems = game.pairs.flatMap((pair) => [pair.word, pair.match]);\n      optionsToShuffle = allItems.sort(() => Math.random() - 0.5);\n    } else if (game.type === \"categorization\") {\n      optionsToShuffle = [...game.words].sort(() => Math.random() - 0.5);\n    }\n\n    setShuffledOptions(optionsToShuffle);\n  };\n\n  // Gérer la sélection d'un item\n  const handleSelectItem = useCallback((item, index) => {\n    if (showFeedback) return;\n\n    animateBounce();\n\n    if (currentGame.type === \"matching\") {\n      handleMatchingSelection(item, index);\n    } else if (currentGame.type === \"categorization\") {\n      handleCategorizationSelection(item, index);\n    }\n  }, [currentGame, selectedItems, matchedItems, showFeedback, animateBounce]);\n\n  // Gérer la sélection pour matching\n  const handleMatchingSelection = (item, index) => {\n    let newSelectedItems = [...selectedItems];\n\n    if (newSelectedItems.length < 2) {\n      if (matchedItems.includes(item)) return;\n\n      newSelectedItems.push({ value: item, index });\n      setSelectedItems(newSelectedItems);\n\n      if (newSelectedItems.length === 2) {\n        setTimeout(() => checkMatchingPair(newSelectedItems), 300);\n      }\n    }\n  };\n\n  // Gérer la sélection pour categorization\n  const handleCategorizationSelection = (item, index) => {\n    let newSelectedItems = [...selectedItems];\n    const itemIndex = newSelectedItems.findIndex((i) => i.value === item);\n\n    if (itemIndex !== -1) {\n      newSelectedItems.splice(itemIndex, 1);\n    } else {\n      newSelectedItems.push({ value: item, index });\n    }\n\n    setSelectedItems(newSelectedItems);\n  };\n\n  // Vérifier une paire dans matching\n  const checkMatchingPair = (items) => {\n    const isPair = currentGame.pairs.some(\n      (pair) =>\n        (items[0].value === pair.word && items[1].value === pair.match) ||\n        (items[0].value === pair.match && items[1].value === pair.word)\n    );\n\n    if (isPair) {\n      animateFeedback(true);\n      const newMatchedItems = [...matchedItems, items[0].value, items[1].value];\n      setMatchedItems(newMatchedItems);\n\n      const maxPossibleScore = currentGame.maxScore || 10;\n      const scorePerPair = Math.floor(maxPossibleScore / currentGame.pairs.length);\n      setScore(prev => prev + scorePerPair);\n\n      setSelectedItems([]);\n\n      if (newMatchedItems.length === currentGame.pairs.length * 2) {\n        setTimeout(() => handleGameComplete(true), 500);\n      }\n    } else {\n      animateFeedback(false);\n      setTimeout(() => setSelectedItems([]), 1000);\n    }\n  };\n\n  // Vérifier la réponse pour categorization\n  const checkAnswer = useCallback(() => {\n    if (showFeedback || currentGame.type !== \"categorization\") return;\n\n    const selectedWords = selectedItems.map((item) => item.value);\n    const expectedWords = currentGame.categories[currentGame.currentCategory];\n\n    const correct =\n      selectedWords.length === expectedWords.length &&\n      selectedWords.every((word) => expectedWords.includes(word)) &&\n      expectedWords.every((word) => selectedWords.includes(word));\n\n    const maxPossibleScore = currentGame.maxScore || 10;\n    const earnedScore = correct ? maxPossibleScore : 0;\n\n    if (earnedScore > 0) {\n      setScore(prevScore => prevScore + earnedScore);\n    }\n\n    updateGameResults(earnedScore, maxPossibleScore);\n    setIsCorrect(correct);\n    setShowFeedback(true);\n    animateFeedback(correct);\n  }, [currentGame, selectedItems, showFeedback, animateFeedback]);\n\n  // Gérer la fin d'un jeu\n  const handleGameComplete = useCallback((isSuccessful) => {\n    const earnedScore = isSuccessful ? currentGame.maxScore || 10 : 0;\n    const maxPossibleScore = currentGame.maxScore || 10;\n\n    updateGameResults(earnedScore, maxPossibleScore);\n    setIsCorrect(isSuccessful);\n    setShowFeedback(true);\n    animateFeedback(isSuccessful);\n  }, [currentGame, animateFeedback]);\n\n  // Mettre à jour les résultats d'un jeu\n  const updateGameResults = (earnedScore, maxScore) => {\n    const newGameResults = [...gameResults];\n    newGameResults[currentGameIndex] = {\n      score: earnedScore,\n      maxScore,\n      completed: true,\n    };\n    setGameResults(newGameResults);\n\n    // Marquer le jeu comme complété\n    markGameAsCompleted(currentGameIndex, earnedScore, maxScore);\n  };\n\n  // Marquer un jeu comme complété\n  const markGameAsCompleted = useCallback(async (gameIndex, score, maxScore) => {\n    try {\n      const updatedCompletedGames = { ...completedGames };\n      updatedCompletedGames[gameIndex] = {\n        completed: true,\n        completedAt: new Date().toISOString(),\n        score,\n        maxScore,\n      };\n      setCompletedGames(updatedCompletedGames);\n    } catch (error) {\n      console.log('Error marking game as completed:', error);\n    }\n  }, [completedGames]);\n\n  // =================== MAIN NAVIGATION ===================\n  \n  const handleNext = useCallback(() => {\n    if (currentGameIndex < games.length - 1) {\n      setCurrentGameIndex(prev => prev + 1);\n      setShowFeedback(false);\n      setIsCorrect(false);\n      return { completed: false };\n    } else {\n      setShowResults(true);\n      return { completed: true };\n    }\n  }, [currentGameIndex, games.length]);\n\n  const handlePrevious = useCallback(() => {\n    if (currentGameIndex > 0) {\n      setCurrentGameIndex(prev => prev - 1);\n      setShowFeedback(false);\n      setIsCorrect(false);\n      return true;\n    }\n    return false;\n  }, [currentGameIndex]);\n\n  const resetGames = useCallback(async () => {\n    try {\n      await AsyncStorage.multiRemove([STORAGE_KEY, COMPLETED_KEY, SCORES_KEY]);\n      \n      setCurrentGameIndex(0);\n      setSelectedItems([]);\n      setMatchedItems([]);\n      setShowFeedback(false);\n      setIsCorrect(false);\n      setShowResults(false);\n      setScore(0);\n      setCompletedGames({});\n      setLastPosition({ gameIndex: 0 });\n      \n      if (games.length > 0) {\n        setGameResults(Array(games.length).fill({\n          score: 0,\n          maxScore: 0,\n          completed: false,\n        }));\n        shuffleGameOptions(games[0]);\n      }\n    } catch (error) {\n      console.log('Error resetting word games:', error);\n    }\n  }, [STORAGE_KEY, COMPLETED_KEY, SCORES_KEY, games]);\n\n  // =================== COMPUTED STATS ===================\n  \n  const getStats = useCallback(() => {\n    const completedGamesCount = Object.values(completedGames).filter(\n      game => game.completed\n    ).length;\n    \n    const totalMaxScore = gameResults.reduce((sum, result) => sum + result.maxScore, 0);\n    const totalProgress = totalGames > 0 ? Math.round((completedGamesCount / totalGames) * 100) : 0;\n    const currentProgress = totalGames > 0 ? ((currentGameIndex + 1) / totalGames) * 100 : 0;\n\n    return {\n      totalGames,\n      completedGamesCount,\n      totalProgress,\n      currentProgress,\n      score,\n      totalMaxScore,\n      percentage: totalMaxScore > 0 ? Math.round((score / totalMaxScore) * 100) : 0\n    };\n  }, [totalGames, completedGames, gameResults, currentGameIndex, score]);\n\n  // =================== COMPUTED DISPLAY ===================\n  \n  const getDisplayData = useCallback(() => {\n    const gameCounter = `${currentGameIndex + 1} / ${totalGames}`;\n    const gameTitle = currentGame?.title || `Game ${currentGameIndex + 1}`;\n\n    return {\n      gameCounter,\n      gameTitle,\n      currentGame,\n      currentGameIndex: currentGameIndex + 1\n    };\n  }, [currentGameIndex, totalGames, currentGame]);\n\n  // =================== VALIDATION ===================\n  \n  const canGoToPrevious = currentGameIndex > 0;\n  const isLastGame = currentGameIndex === totalGames - 1;\n\n  return {\n    // State\n    currentGameIndex,\n    selectedItems,\n    matchedItems,\n    showFeedback,\n    isCorrect,\n    showResults,\n    score,\n    gameResults,\n    shuffledOptions,\n    completedGames,\n    loaded,\n    \n    // Data\n    games,\n    currentGame,\n    totalGames,\n    \n    // Animations\n    fadeAnim,\n    bounceAnim,\n    \n    // Actions\n    handleSelectItem,\n    checkAnswer,\n    handleNext,\n    handlePrevious,\n    resetGames,\n    setCurrentGameIndex,\n    \n    // Computed\n    canGoToPrevious,\n    isLastGame,\n    stats: getStats(),\n    display: getDisplayData(),\n  };\n};\n\nexport default useWordGames;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"React"},"fix":{"range":[70,76],"text":""},"desc":"Remove unused variable 'React'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'View' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14,"suggestions":[{"messageId":"removeVar","data":{"varName":"View"},"fix":{"range":[136,141],"text":""},"desc":"Remove unused variable 'View'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ActivityIndicator' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":33,"suggestions":[{"messageId":"removeVar","data":{"varName":"ActivityIndicator"},"fix":{"range":[140,159],"text":""},"desc":"Remove unused variable 'ActivityIndicator'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"Container"},"fix":{"range":[297,307],"text":""},"desc":"Remove unused variable 'Container'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'WordGamesHeader' is defined but never used.","line":11,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":23,"suggestions":[{"messageId":"removeVar","data":{"varName":"WordGamesHeader"},"fix":{"range":[400,421],"text":""},"desc":"Remove unused variable 'WordGamesHeader'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'WordGamesProgress' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"WordGamesProgress"},"fix":{"range":[449,472],"text":""},"desc":"Remove unused variable 'WordGamesProgress'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'WordGamesCard' is defined but never used.","line":13,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"WordGamesCard"},"fix":{"range":[502,521],"text":""},"desc":"Remove unused variable 'WordGamesCard'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'WordGamesNavigation' is defined but never used.","line":14,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"WordGamesNavigation"},"fix":{"range":[547,572],"text":""},"desc":"Remove unused variable 'WordGamesNavigation'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'WordGamesResults' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"WordGamesResults"},"fix":{"range":[604,626],"text":""},"desc":"Remove unused variable 'WordGamesResults'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'score' is assigned a value but never used.","line":46,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":46,"endColumn":10,"suggestions":[{"messageId":"removeVar","data":{"varName":"score"},"fix":{"range":[1469,1480],"text":""},"desc":"Remove unused variable 'score'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'result' is assigned a value but never used.","line":103,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":103,"endColumn":17,"suggestions":[{"messageId":"removeVar","data":{"varName":"result"},"fix":{"range":[2944,2972],"text":""},"desc":"Remove unused variable 'result'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/screens/exercises/wordGames/index.js - VERSION CORRIGÉE\nimport React, { useMemo, useEffect, useCallback } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\n\n// Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\n\n// Components\nimport WordGamesHeader from \"./WordGamesHeader\";\nimport WordGamesProgress from \"./WordGamesProgress\";\nimport WordGamesCard from \"./WordGamesCard\";\nimport WordGamesNavigation from \"./WordGamesNavigation\";\nimport WordGamesResults from \"./WordGamesResults\";\n\n// Hook & Utils\nimport useWordGames from \"./hooks/useWordGames\";\nimport useLastActivity from \"../../../hooks/useLastActivity\";\nimport { getWordGamesData, getLevelColor } from \"../../../utils/wordGames/wordGamesDataHelper\";\nimport createStyles from \"./style\";\n\n/**\n * 🎯 WordGamesExercise - VERSION CORRIGÉE\n */\nconst WordGamesExercise = ({ route }) => {\n  const navigation = useNavigation();\n  const { level = \"A1\" } = route?.params || {};\n  const styles = createStyles();\n\n  // Hook pour sauvegarder l'activité\n  const { saveActivity } = useLastActivity();\n\n  // Data\n  const levelColor = getLevelColor(level);\n  const wordGamesData = useMemo(() => getWordGamesData(level), [level]);\n\n  // Hook unifié\n  const {\n    currentGameIndex,\n    selectedItems,\n    matchedItems,\n    showFeedback,\n    isCorrect,\n    showResults,\n    score,\n    gameResults,\n    shuffledOptions,\n    loaded,\n    games,\n    currentGame,\n    totalGames,\n    fadeAnim,\n    bounceAnim,\n    handleSelectItem,\n    checkAnswer,\n    handleNext,\n    handlePrevious,\n    resetGames,\n    canGoToPrevious,\n    isLastGame,\n    stats,\n    display,\n  } = useWordGames(wordGamesData, level);\n\n  // ✅ CORRECTION : Mémoriser les métadonnées\n  const activityMetadata = useMemo(() => ({\n    game: currentGameIndex,\n    totalGames: totalGames,\n    gameType: currentGame?.type || \"matching\",\n    gameTitle: currentGame?.title || `Jeu ${currentGameIndex + 1}`,\n    score: stats?.score || 0\n  }), [currentGameIndex, totalGames, currentGame?.type, currentGame?.title, stats?.score]);\n\n  // ✅ CORRECTION : Callback mémorisé pour saveActivity\n  const handleSaveActivity = useCallback(() => {\n    if (loaded && games.length > 0 && currentGame && !showResults) {\n      saveActivity({\n        title: \"Jeux de mots\",\n        level: level,\n        type: \"wordGames\",\n        metadata: activityMetadata\n      });\n    }\n  }, [loaded, games.length, currentGame, showResults, level, saveActivity, activityMetadata]);\n\n  // ✅ CORRECTION : useEffect optimisé\n  useEffect(() => {\n    handleSaveActivity();\n  }, [handleSaveActivity]);\n\n  // Handlers\nconst handleBackPress = () => {\n  router.push({\n    pathname: \"/(tabs)/exerciseSelection\",\n    params: { level }\n  });\n};\n\n  const handleCheckAnswer = () => checkAnswer();\n\n  const handleNextGame = () => {\n    const result = handleNext();\n    // Navigation automatique quand tous les jeux sont terminés\n  };\n\n  const handlePreviousGame = () => handlePrevious();\n\n  const handleResetGames = () => resetGames();\n\n  const handleContinue = () => navigation.goBack();\n\n  // Loading state\n  if (!loaded || !currentGame) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <WordGamesHeader\n          level={level}\n          onBackPress={handleBackPress}\n        />\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} />\n        </View>\n      </Container>\n    );\n  }\n\n  // Empty games state\n  if (games.length === 0) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <WordGamesHeader\n          level={level}\n          onBackPress={handleBackPress}\n        />\n        <View style={styles.emptyContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} />\n        </View>\n      </Container>\n    );\n  }\n\n  // Results state\n  if (showResults) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <WordGamesResults\n          games={games}\n          gameResults={gameResults}\n          finalScore={stats}\n          levelColor={levelColor}\n          onPlayAgain={handleResetGames}\n          onContinue={handleContinue}\n        />\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      backgroundColor=\"#f8fafc\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n    >\n      {/* Header */}\n      <WordGamesHeader\n        level={level}\n        onBackPress={handleBackPress}\n      />\n\n      {/* Progress */}\n      <WordGamesProgress\n        currentGame={display.currentGameIndex}\n        totalGames={totalGames}\n        gameTitle={display.gameTitle}\n        completedGames={stats.completedGamesCount}\n        levelColor={levelColor}\n        gameResults={gameResults}\n        level={level}\n      />\n\n      {/* Game Card */}\n      <WordGamesCard\n        currentGame={currentGame}\n        selectedItems={selectedItems}\n        matchedItems={matchedItems}\n        shuffledOptions={shuffledOptions}\n        showFeedback={showFeedback}\n        isCorrect={isCorrect}\n        levelColor={levelColor}\n        fadeAnim={fadeAnim}\n        bounceAnim={bounceAnim}\n        onSelectItem={handleSelectItem}\n      />\n\n      {/* Navigation */}\n      <WordGamesNavigation\n        currentGame={currentGame}\n        showFeedback={showFeedback}\n        selectedItems={selectedItems}\n        isLastGame={isLastGame}\n        canGoPrevious={canGoToPrevious}\n        levelColor={levelColor}\n        onCheckAnswer={handleCheckAnswer}\n        onNext={handleNextGame}\n        onPrevious={handlePreviousGame}\n      />\n    </Container>\n  );\n};\n\nexport default WordGamesExercise;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\style.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\assessment\\assessmentDataHelper.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\assessment\\assessmentStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\constants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\conversation\\conversationDataHelper.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\conversation\\conversationStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\errorCorrection\\errorCorrectionDataHelper.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":184,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":184,"endColumn":17},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":184,"column":19,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":4,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5777,5781],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":390,"column":36,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":390,"endColumn":50,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[11294,11334],"text":"Object.prototype.hasOwnProperty.call(results.typeDistribution, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/utils/errorCorrection/errorCorrectionDataHelper.js\n\n// Import des données d'error correction par niveau\n// Niveau A1\nimport errorCorrectionA1 from \"../../data/errorCorrection/A1\";\n\n// Niveau A2\nimport errorCorrectionA2 from \"../../data/errorCorrection/A2\";\n\n// Niveau B1\nimport errorCorrectionB1 from \"../../data/errorCorrection/B1\";\n\n// Niveau B2\nimport errorCorrectionB2 from \"../../data/errorCorrection/B2\";\n\n// Niveau C1\nimport errorCorrectionC1 from \"../../data/errorCorrection/C1\";\n\n// Niveau C2\nimport errorCorrectionC2 from \"../../data/errorCorrection/C2\";\n\n/**\n * Récupère les données d'exercices d'error correction en fonction du niveau\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {Object} Les données d'exercices d'error correction pour le niveau spécifié\n */\nexport const getErrorsData = (level) => {\n  const dataMap = {\n    A1: errorCorrectionA1,\n    A2: errorCorrectionA2,\n    B1: errorCorrectionB1,\n    B2: errorCorrectionB2,\n    C1: errorCorrectionC1,\n    C2: errorCorrectionC2,\n  };\n\n  return dataMap[level] || errorCorrectionA1; // Fallback vers A1 si niveau non trouvé\n};\n\n/**\n * Récupère la couleur associée à un niveau de langue\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {string} Code couleur hexadécimal pour le niveau\n */\nexport const getLevelColor = (level) => {\n  const colors = {\n    A1: \"#3b82f6\", // Bleu\n    A2: \"#8b5cf6\", // Violet\n    B1: \"#10b981\", // Vert\n    B2: \"#f59e0b\", // Orange\n    C1: \"#ef4444\", // Rouge\n    C2: \"#6366f1\", // Indigo\n  };\n  return colors[level] || \"#4361EE\"; // Couleur par défaut\n};\n\n/**\n * Récupère les caractéristiques d'un niveau d'error correction\n * @param {string} level - Le niveau de langue\n * @returns {Object} Caractéristiques du niveau (difficulté, types d'erreurs, etc.)\n */\nexport const getLevelCharacteristics = (level) => {\n  const characteristics = {\n    A1: {\n      name: \"Débutant\",\n      textLength: \"1-2 phrases (50-100 caractères)\",\n      errorCount: \"1-2 erreurs par exercice\",\n      errorTypes: [\"Basic grammar\", \"Simple vocabulary\", \"Word order\"],\n      difficulty: \"Très facile\",\n      focus: \"Erreurs évidentes, correction directe\",\n    },\n    A2: {\n      name: \"Élémentaire\",\n      textLength: \"2-3 phrases (80-150 caractères)\",\n      errorCount: \"2-3 erreurs par exercice\",\n      errorTypes: [\"Intermediate grammar\", \"Tense usage\", \"Prepositions\"],\n      difficulty: \"Facile\",\n      focus: \"Erreurs communes, inférences simples\",\n    },\n    B1: {\n      name: \"Intermédiaire\",\n      textLength: \"3-4 phrases (120-200 caractères)\",\n      errorCount: \"3-4 erreurs par exercice\",\n      errorTypes: [\"Complex tenses\", \"Passive voice\", \"Reported speech\"],\n      difficulty: \"Modéré\",\n      focus: \"Erreurs subtiles, analyse requise\",\n    },\n    B2: {\n      name: \"Intermédiaire avancé\",\n      textLength: \"4-5 phrases (150-250 caractères)\",\n      errorCount: \"4-5 erreurs par exercice\",\n      errorTypes: [\"Advanced conditionals\", \"Register\", \"Discourse markers\"],\n      difficulty: \"Difficile\",\n      focus: \"Nuances grammaticales et stylistiques\",\n    },\n    C1: {\n      name: \"Autonome\",\n      textLength: \"5-6 phrases (200-300 caractères)\",\n      errorCount: \"5-6 erreurs par exercice\",\n      errorTypes: [\n        \"Sophisticated structures\",\n        \"Cultural references\",\n        \"Stylistic nuances\",\n      ],\n      difficulty: \"Très difficile\",\n      focus: \"Erreurs sophistiquées, analyse approfondie\",\n    },\n    C2: {\n      name: \"Maîtrise\",\n      textLength: \"6-8 phrases (250-400 caractères)\",\n      errorCount: \"6-8 erreurs par exercice\",\n      errorTypes: [\"Literary language\", \"Archaic forms\", \"Creative expression\"],\n      difficulty: \"Expert\",\n      focus: \"Subtilités linguistiques maximales\",\n    },\n  };\n\n  return characteristics[level] || characteristics.A1;\n};\n\n/**\n * Récupère les statistiques d'exercices pour un niveau donné\n * @param {string} level - Le niveau de langue\n * @returns {Object} Statistiques des exercices (nombre, types, catégories, etc.)\n */\nexport const getErrorCorrectionStats = (level) => {\n  const stats = {\n    exerciseCount: 0,\n    totalQuestions: 0,\n    categoryCount: 0,\n    typeDistribution: {\n      full: 0,\n      identify: 0,\n      multiple_choice: 0,\n    },\n    categories: [],\n    averageTextLength: 0,\n    totalErrorPositions: 0,\n  };\n\n  try {\n    const data = getErrorsData(level);\n\n    if (data?.exercises) {\n      stats.exerciseCount = data.exercises.length;\n      stats.totalQuestions = data.exercises.length; // Chaque exercice = 1 question\n      stats.categoryCount = data.categories ? data.categories.length : 0;\n\n      // Distribution par type\n      if (data.statistics) {\n        stats.typeDistribution = {\n          full: data.statistics.full || 0,\n          identify: data.statistics.identify || 0,\n          multiple_choice: data.statistics.multiple_choice || 0,\n        };\n      }\n\n      // Informations sur les catégories\n      if (data.categories) {\n        stats.categories = data.categories.map((cat) => ({\n          id: cat.id,\n          name: cat.name,\n          count: cat.exerciseCount || 0,\n          difficulty: cat.difficulty || \"Unknown\",\n        }));\n      }\n\n      // Calcul longueur moyenne des textes\n      const textLengths = data.exercises.map((ex) =>\n        ex.text ? ex.text.length : 0\n      );\n      stats.averageTextLength =\n        textLengths.length > 0\n          ? Math.round(\n              textLengths.reduce((a, b) => a + b, 0) / textLengths.length\n            )\n          : 0;\n\n      // Calcul total des positions d'erreurs\n      stats.totalErrorPositions = data.exercises\n        .filter((ex) => ex.errorPositions)\n        .reduce((total, ex) => total + ex.errorPositions.length, 0);\n    }\n  } catch (error) {\n\n  }\n\n  return stats;\n};\n\n/**\n * Récupère les statistiques globales pour tous les niveaux implémentés\n * @returns {Object} Statistiques complètes du programme d'error correction\n */\nexport const getGlobalErrorCorrectionStats = () => {\n  const levels = [\"A1\", \"A2\", \"B1\", \"B2\", \"C1\", \"C2\"];\n  const globalStats = {\n    totalExercises: 0,\n    totalQuestions: 0,\n    totalCategories: 0,\n    byLevel: {},\n    byType: {\n      full: 0,\n      identify: 0,\n      multiple_choice: 0,\n    },\n    implementedLevels: 6, // Maintenant tous les niveaux sont implémentés\n    progression: [],\n  };\n\n  levels.forEach((level) => {\n    const levelStats = getErrorCorrectionStats(level);\n    globalStats.byLevel[level] = levelStats;\n\n    if (levelStats.exerciseCount > 0) {\n      globalStats.totalExercises += levelStats.exerciseCount;\n      globalStats.totalQuestions += levelStats.totalQuestions;\n      globalStats.totalCategories += levelStats.categoryCount;\n\n      // Cumul par type\n      globalStats.byType.full += levelStats.typeDistribution.full;\n      globalStats.byType.identify += levelStats.typeDistribution.identify;\n      globalStats.byType.multiple_choice +=\n        levelStats.typeDistribution.multiple_choice;\n\n      // Progression des niveaux\n      globalStats.progression.push({\n        level: level,\n        exercises: levelStats.exerciseCount,\n        difficulty: getLevelCharacteristics(level).difficulty,\n      });\n    }\n  });\n\n  return globalStats;\n};\n\n/**\n * Récupère les exercices par catégorie pour un niveau donné\n * @param {string} level - Le niveau de langue\n * @param {number} categoryId - L'ID de la catégorie\n * @returns {Array} Liste des exercices de la catégorie\n */\nexport const getExercisesByCategory = (level, categoryId) => {\n  const data = getErrorsData(level);\n  if (data?.getExercisesByCategory) {\n    return data.getExercisesByCategory(categoryId);\n  }\n  return data?.exercises?.filter((ex) => ex.categoryId === categoryId) || [];\n};\n\n/**\n * Récupère les exercices par type pour un niveau donné\n * @param {string} level - Le niveau de langue\n * @param {string} type - Le type d'exercice (full, identify, multiple_choice)\n * @returns {Array} Liste des exercices du type spécifié\n */\nexport const getExercisesByType = (level, type) => {\n  const data = getErrorsData(level);\n  if (data?.getExercisesByType) {\n    return data.getExercisesByType(type);\n  }\n  return data?.exercises?.filter((ex) => ex.type === type) || [];\n};\n\n/**\n * Récupère les exercices par catégorie ET type\n * @param {string} level - Le niveau de langue\n * @param {number} categoryId - L'ID de la catégorie\n * @param {string} type - Le type d'exercice\n * @returns {Array} Liste des exercices filtrés\n */\nexport const getExercisesByCategoryAndType = (level, categoryId, type) => {\n  const data = getErrorsData(level);\n  if (data?.getExercisesByCategoryAndType) {\n    return data.getExercisesByCategoryAndType(categoryId, type);\n  }\n  return (\n    data?.exercises?.filter(\n      (ex) => ex.categoryId === categoryId && ex.type === type\n    ) || []\n  );\n};\n\n/**\n * Valide qu'un exercice d'error correction a la structure correcte\n * @param {Object} exercise - L'exercice à valider\n * @returns {boolean} True si l'exercice est valide\n */\nexport const validateErrorCorrectionExercise = (exercise) => {\n  if (!exercise || typeof exercise !== \"object\") {\n    return false;\n  }\n\n  // Champs requis pour tous les types\n  const requiredFields = [\n    \"categoryId\",\n    \"type\",\n    \"text\",\n    \"correctedText\",\n    \"hint\",\n    \"explanation\",\n  ];\n\n  for (const field of requiredFields) {\n    if (!exercise[field]) {\n\n      return false;\n    }\n  }\n\n  // Validation des types autorisés\n  const validTypes = [\"full\", \"identify\", \"multiple_choice\"];\n  if (!validTypes.includes(exercise.type)) {\n\n    return false;\n  }\n\n  // Validation spécifique par type\n  if (exercise.type === \"multiple_choice\") {\n    if (\n      !exercise.choices ||\n      !Array.isArray(exercise.choices) ||\n      exercise.choices.length < 2\n    ) {\n\n      return false;\n    }\n\n    if (\n      typeof exercise.correctChoiceIndex !== \"number\" ||\n      exercise.correctChoiceIndex < 0 ||\n      exercise.correctChoiceIndex >= exercise.choices.length\n    ) {\n\n      return false;\n    }\n  } else {\n    // Pour \"full\" et \"identify\", errorPositions est requis\n    if (!exercise.errorPositions || !Array.isArray(exercise.errorPositions)) {\n\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Valide toutes les données d'un niveau donné\n * @param {string} level - Le niveau à valider\n * @returns {Object} Résultat de la validation avec détails\n */\nexport const validateErrorCorrectionData = (level) => {\n  const data = getErrorsData(level);\n\n  if (!data || !data.exercises) {\n    return {\n      valid: false,\n      error: \"No error correction data found\",\n      exerciseCount: 0,\n    };\n  }\n\n  const results = {\n    valid: true,\n    exerciseCount: data.exercises.length,\n    invalidExercises: [],\n    errors: [],\n    categoryCount: data.categories ? data.categories.length : 0,\n    typeDistribution: {\n      full: 0,\n      identify: 0,\n      multiple_choice: 0,\n    },\n  };\n\n  // Validation des exercices\n  data.exercises.forEach((exercise, index) => {\n    if (!validateErrorCorrectionExercise(exercise)) {\n      results.valid = false;\n      results.invalidExercises.push(index);\n      results.errors.push(\n        `Exercise ${index + 1} (category ${\n          exercise.categoryId || \"unknown\"\n        }) is invalid`\n      );\n    } else {\n      // Comptage par type\n      if (results.typeDistribution.hasOwnProperty(exercise.type)) {\n        results.typeDistribution[exercise.type]++;\n      }\n    }\n  });\n\n  // Validation de la structure du niveau\n  if (data.validateStructure && !data.validateStructure()) {\n    results.valid = false;\n    results.errors.push(\"Level structure validation failed\");\n  }\n\n  return results;\n};\n\n/**\n * Récupère un exercice aléatoire d'un niveau et type donnés\n * @param {string} level - Le niveau de langue\n * @param {string} type - Le type d'exercice (optionnel)\n * @param {number} categoryId - L'ID de la catégorie (optionnel)\n * @returns {Object|null} Un exercice aléatoire ou null si aucun trouvé\n */\nexport const getRandomErrorCorrectionExercise = (\n  level,\n  type = null,\n  categoryId = null\n) => {\n  const data = getErrorsData(level);\n\n  if (!data || !data.exercises || data.exercises.length === 0) {\n    return null;\n  }\n\n  let filteredExercises = data.exercises;\n\n  // Filtrage par type si spécifié\n  if (type) {\n    filteredExercises = filteredExercises.filter((ex) => ex.type === type);\n  }\n\n  // Filtrage par catégorie si spécifiée\n  if (categoryId) {\n    filteredExercises = filteredExercises.filter(\n      (ex) => ex.categoryId === categoryId\n    );\n  }\n\n  if (filteredExercises.length === 0) {\n    return null;\n  }\n\n  const randomIndex = Math.floor(Math.random() * filteredExercises.length);\n  return {\n    ...filteredExercises[randomIndex],\n    index: randomIndex,\n    totalCount: filteredExercises.length,\n    level: level,\n  };\n};\n\n/**\n * Récupère les informations d'un mode d'exercice\n * @param {string} mode - Le mode (full, identify, multiple_choice)\n * @returns {Object} Informations sur le mode\n */\nexport const getModeInfo = (mode) => {\n  const modes = {\n    full: {\n      name: \"Full Correction\",\n      description: \"Rewrite the entire text correcting all errors\",\n      difficulty: \"Hard\",\n      icon: \"✏️\",\n      color: \"#ef4444\",\n    },\n    identify: {\n      name: \"Identify Errors\",\n      description: \"Click on words that contain errors\",\n      difficulty: \"Medium\",\n      icon: \"🔍\",\n      color: \"#f59e0b\",\n    },\n    multiple_choice: {\n      name: \"Multiple Choice\",\n      description: \"Choose the correct option from multiple choices\",\n      difficulty: \"Easy\",\n      icon: \"✅\",\n      color: \"#10b981\",\n    },\n  };\n\n  return modes[mode] || modes.full;\n};\n\n/**\n * Récupère des exercices recommandés basés sur les performances\n * @param {string} level - Le niveau actuel\n * @param {Array} completedExercises - Liste des exercices complétés\n * @param {Object} performance - Statistiques de performance\n * @returns {Array} Exercices recommandés\n */\nexport const getRecommendedExercises = (\n  level,\n  completedExercises = [],\n  performance = {}\n) => {\n  const data = getErrorsData(level);\n\n  if (!data || !data.exercises) {\n    return [];\n  }\n\n  // Filtrer les exercices non complétés\n  const availableExercises = data.exercises.filter(\n    (ex) => !completedExercises.includes(ex.categoryId + \"_\" + ex.type)\n  );\n\n  // Si pas de données de performance, retourner des exercices variés\n  if (!performance.weakCategories) {\n    return availableExercises.slice(0, 5);\n  }\n\n  // Prioriser les catégories faibles\n  const recommendedExercises = [];\n\n  performance.weakCategories.forEach((categoryId) => {\n    const categoryExercises = availableExercises.filter(\n      (ex) => ex.categoryId === categoryId\n    );\n    recommendedExercises.push(...categoryExercises.slice(0, 2));\n  });\n\n  return recommendedExercises.slice(0, 5);\n};\n\n/**\n * Export des niveaux disponibles avec leurs métadonnées\n */\nexport const getAvailableLevels = () => {\n  return [\n    {\n      level: \"A1\",\n      name: \"Débutant\",\n      exercises: getErrorCorrectionStats(\"A1\").exerciseCount,\n    },\n    {\n      level: \"A2\",\n      name: \"Élémentaire\",\n      exercises: getErrorCorrectionStats(\"A2\").exerciseCount,\n    },\n    {\n      level: \"B1\",\n      name: \"Intermédiaire\",\n      exercises: getErrorCorrectionStats(\"B1\").exerciseCount,\n    },\n    {\n      level: \"B2\",\n      name: \"Intermédiaire avancé\",\n      exercises: getErrorCorrectionStats(\"B2\").exerciseCount,\n    },\n    {\n      level: \"C1\",\n      name: \"Autonome\",\n      exercises: getErrorCorrectionStats(\"C1\").exerciseCount,\n    },\n    {\n      level: \"C2\",\n      name: \"Maîtrise\",\n      exercises: getErrorCorrectionStats(\"C2\").exerciseCount,\n    },\n  ];\n};\n\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\errorCorrection\\errorCorrectionStats.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'categories' is assigned a value but never used.","line":14,"column":41,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":51,"suggestions":[{"messageId":"removeVar","data":{"varName":"categories"},"fix":{"range":[432,448],"text":""},"desc":"Remove unused variable 'categories'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// utils/errorCorrection/errorCorrectionStats.js\n\n/**\n * 🎯 Utilitaires de calcul pour Error Correction Exercise\n * Pattern identique à vocabularyStats.js\n */\n\n/**\n * Calcule le nombre total d'exercices dans toutes les catégories\n * @param {Array} categories - Liste des catégories  \n * @param {Array} exercises - Liste de tous les exercices\n * @returns {number} Nombre total d'exercices\n */\nexport const calculateTotalExercises = (categories = [], exercises = []) => {\n  return exercises.length;\n};\n\n/**\n * Calcule le nombre total d'exercices dans une catégorie spécifique\n * @param {string} categoryId - ID de la catégorie\n * @param {Array} exercises - Liste de tous les exercices\n * @returns {number} Nombre d'exercices dans la catégorie\n */\nexport const calculateExercisesInCategory = (categoryId, exercises = []) => {\n  return exercises.filter(ex => ex.categoryId === categoryId).length;\n};\n\n/**\n * Calcule le nombre total d'exercices complétés\n * @param {Object} completedExercises - { categoryId: [0, 2, 4] }\n * @returns {number} Nombre total d'exercices complétés\n */\nexport const calculateCompletedExercisesCount = (completedExercises = {}) => {\n  return Object.keys(completedExercises).reduce(\n    (count, categoryId) => count + (completedExercises[categoryId]?.length || 0),\n    0\n  );\n};\n\n/**\n * Calcule la progression totale (tous exercices confondus)\n * @param {Array} categories - Liste des catégories\n * @param {Array} exercises - Liste de tous les exercices  \n * @param {Object} completedExercises - Exercices complétés par catégorie\n * @returns {number} Pourcentage de progression (0-100)\n */\nexport const calculateTotalProgress = (categories = [], exercises = [], completedExercises = {}) => {\n  const totalExercises = calculateTotalExercises(categories, exercises);\n  const totalCompleted = calculateCompletedExercisesCount(completedExercises);\n  \n  return totalExercises > 0\n    ? Math.min(100, Math.round((totalCompleted / totalExercises) * 100))\n    : 0;\n};\n\n/**\n * Calcule la progression par catégorie (pour ProgressCard)\n * @param {Array} categories - Liste des catégories\n * @param {Array} exercises - Liste de tous les exercices\n * @param {Object} completedExercises - Exercices complétés par catégorie\n * @returns {Array} Progression par catégorie\n */\nexport const calculateCategoryProgress = (categories = [], exercises = [], completedExercises = {}) => {\n  return categories.map((category) => {\n    const exercisesInCategory = calculateExercisesInCategory(category.id, exercises);\n    const completedInCategory = completedExercises[category.id]?.length || 0;\n    const progress = exercisesInCategory > 0 \n      ? Math.min(100, Math.round((completedInCategory / exercisesInCategory) * 100))\n      : 0;\n\n    return {\n      title: category.name || `Catégorie ${category.id}`,\n      totalExercises: exercisesInCategory,\n      completedExercises: completedInCategory,\n      progress: progress\n    };\n  });\n};\n\n/**\n * Calcule la progression dans une catégorie spécifique\n * @param {string} categoryId - ID de la catégorie\n * @param {Array} exercises - Liste de tous les exercices\n * @param {Object} completedExercises - Exercices complétés par catégorie\n * @returns {number} Pourcentage de progression dans la catégorie (0-100)\n */\nexport const calculateCategoryProgressById = (categoryId, exercises = [], completedExercises = {}) => {\n  const exercisesInCategory = calculateExercisesInCategory(categoryId, exercises);\n  const completedInCategory = completedExercises[categoryId]?.length || 0;\n  \n  return exercisesInCategory > 0\n    ? Math.min(100, Math.round((completedInCategory / exercisesInCategory) * 100))\n    : 0;\n};\n\n/**\n * Obtient les statistiques détaillées pour une catégorie\n * @param {string} categoryId - ID de la catégorie\n * @param {Array} categories - Liste des catégories\n * @param {Array} exercises - Liste de tous les exercices\n * @param {Object} completedExercises - Exercices complétés par catégorie\n * @returns {Object} Statistiques détaillées de la catégorie\n */\nexport const getCategoryStats = (categoryId, categories = [], exercises = [], completedExercises = {}) => {\n  const category = categories.find(cat => cat.id === categoryId);\n  const exercisesInCategory = calculateExercisesInCategory(categoryId, exercises);\n  const completedInCategory = completedExercises[categoryId]?.length || 0;\n  const progress = calculateCategoryProgressById(categoryId, exercises, completedExercises);\n  \n  return {\n    category,\n    totalExercises: exercisesInCategory,\n    completedExercises: completedInCategory,\n    remainingExercises: exercisesInCategory - completedInCategory,\n    progress,\n    isCompleted: completedInCategory >= exercisesInCategory\n  };\n};\n\n/**\n * Calcule les statistiques globales pour le dashboard\n * @param {Array} categories - Liste des catégories\n * @param {Array} exercises - Liste de tous les exercices\n * @param {Object} completedExercises - Exercices complétés par catégorie\n * @returns {Object} Statistiques globales\n */\nexport const calculateGlobalStats = (categories = [], exercises = [], completedExercises = {}) => {\n  const totalExercises = calculateTotalExercises(categories, exercises);\n  const completedExercisesCount = calculateCompletedExercisesCount(completedExercises);\n  const totalProgress = calculateTotalProgress(categories, exercises, completedExercises);\n  \n  // Calcul des exercices par type\n  const exercisesByType = exercises.reduce((acc, exercise) => {\n    const type = exercise.type || 'unknown';\n    acc[type] = (acc[type] || 0) + 1;\n    return acc;\n  }, {});\n  \n  // Catégories complétées\n  const completedCategories = categories.filter(category => {\n    const stats = getCategoryStats(category.id, categories, exercises, completedExercises);\n    return stats.isCompleted;\n  }).length;\n  \n  return {\n    totalExercises,\n    completedExercisesCount,\n    remainingExercises: totalExercises - completedExercisesCount,\n    totalProgress,\n    totalCategories: categories.length,\n    completedCategories,\n    exercisesByType,\n    averageProgressPerCategory: categories.length > 0 \n      ? Math.round(totalProgress / categories.length) \n      : 0\n  };\n};\n\n/**\n * Trouve la prochaine catégorie recommandée (non terminée avec le moins de progression)\n * @param {Array} categories - Liste des catégories\n * @param {Array} exercises - Liste de tous les exercices\n * @param {Object} completedExercises - Exercices complétés par catégorie\n * @returns {Object|null} Prochaine catégorie recommandée ou null\n */\nexport const getRecommendedCategory = (categories = [], exercises = [], completedExercises = {}) => {\n  const incompleteCategories = categories\n    .map(category => getCategoryStats(category.id, categories, exercises, completedExercises))\n    .filter(stats => !stats.isCompleted && stats.totalExercises > 0)\n    .sort((a, b) => a.progress - b.progress); // Trier par progression croissante\n  \n  return incompleteCategories.length > 0 ? incompleteCategories[0] : null;\n};\n\n/**\n * Vérifie si tous les exercices sont terminés\n * @param {Array} categories - Liste des catégories\n * @param {Array} exercises - Liste de tous les exercices\n * @param {Object} completedExercises - Exercices complétés par catégorie\n * @returns {boolean} True si tout est terminé\n */\nexport const isAllCompleted = (categories = [], exercises = [], completedExercises = {}) => {\n  const totalExercises = calculateTotalExercises(categories, exercises);\n  const completedExercisesCount = calculateCompletedExercisesCount(completedExercises);\n  \n  return totalExercises > 0 && completedExercisesCount >= totalExercises;\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\eventBus.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\grammar\\grammarDataHelper.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\grammar\\grammarStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\phrases\\phrasesDataHelper.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\phrases\\phrasesStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\reading\\readingDataHelper.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\reading\\readingStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\scaling.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\spelling\\spellingDataHelper.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\spelling\\spellingStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\storageUtils.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'STORAGE_SCHEMA' is assigned a value but never used.","line":14,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"STORAGE_SCHEMA"},"fix":{"range":[395,486],"text":""},"desc":"Remove unused variable 'STORAGE_SCHEMA'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/utils/storageUtils.js\n/**\n * Utilitaires unifiés pour la gestion du stockage AsyncStorage\n * Combine logique métier + utilitaires génériques\n */\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { STORAGE_CONFIG, DEFAULT_STATS } from './timeConstants.js';\nimport { sanitizeTimeStats } from './timeUtils.js';\n\n/**\n * Structure attendue des données stockées\n */\nconst STORAGE_SCHEMA = {\n  version: 'string',\n  data: 'object',\n  lastModified: 'number'\n};\n\n// =================== UTILITAIRES GÉNÉRIQUES ===================\n\n/**\n * Vérifie si AsyncStorage est disponible\n * @returns {Promise<boolean>} True si AsyncStorage est disponible\n */\nexport const isStorageAvailable = async () => {\n  try {\n    const test = '__storage_test__';\n    await AsyncStorage.setItem(test, test);\n    await AsyncStorage.removeItem(test);\n    return true;\n  } catch (e) {\n    console.warn('AsyncStorage not available:', e.message);\n    return false;\n  }\n};\n\n/**\n * Stocker des données génériques\n * @param {string} key - Clé de stockage\n * @param {any} value - Valeur à stocker (sera convertie en JSON)\n * @returns {Promise<boolean>} - true si succès, false si erreur\n */\nexport const storeData = async (key, value) => {\n  try {\n    const jsonValue = JSON.stringify(value);\n    await AsyncStorage.setItem(key, jsonValue);\n    return true;\n  } catch (error) {\n    console.error('Error storing data:', error);\n    return false;\n  }\n};\n\n/**\n * Récupérer des données génériques\n * @param {string} key - Clé de stockage\n * @returns {Promise<any>} - Données récupérées ou null si non trouvé/erreur\n */\nexport const getData = async (key) => {\n  try {\n    const jsonValue = await AsyncStorage.getItem(key);\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\n  } catch (error) {\n    console.error('Error getting data:', error);\n    return null;\n  }\n};\n\n/**\n * Supprimer des données\n * @param {string} key - Clé de stockage\n * @returns {Promise<boolean>} - true si succès, false si erreur\n */\nexport const removeData = async (key) => {\n  try {\n    await AsyncStorage.removeItem(key);\n    return true;\n  } catch (error) {\n    console.error('Error removing data:', error);\n    return false;\n  }\n};\n\n/**\n * Récupérer plusieurs données depuis AsyncStorage\n * @param {Array<string>} keys - Tableau de clés\n * @returns {Promise<Object>} - Objet avec les clés et les valeurs\n */\nexport const getMultipleData = async (keys) => {\n  try {\n    const items = await AsyncStorage.multiGet(keys);\n    return items.reduce((result, [key, value]) => {\n      result[key] = value != null ? JSON.parse(value) : null;\n      return result;\n    }, {});\n  } catch (error) {\n    console.error('Error getting multiple data:', error);\n    return {};\n  }\n};\n\n/**\n * Effacer toutes les données de l'application\n * @returns {Promise<boolean>} - true si succès, false si erreur\n */\nexport const clearAllData = async () => {\n  try {\n    await AsyncStorage.clear();\n    return true;\n  } catch (error) {\n    console.error('Error clearing all data:', error);\n    return false;\n  }\n};\n\n// =================== LOGIQUE MÉTIER SPÉCIFIQUE ===================\n\n/**\n * Valide la structure des données stockées\n */\nconst validateStorageStructure = (data) => {\n  if (!data || typeof data !== 'object') return false;\n  \n  const hasVersion = typeof data.version === 'string';\n  const hasData = typeof data.data === 'object' && data.data !== null;\n  const hasTimestamp = typeof data.lastModified === 'number';\n  \n  return hasVersion && hasData && hasTimestamp;\n};\n\n/**\n * Migre les anciennes données vers le nouveau format\n */\nconst migrateOldData = (oldData) => {\n  if (validateStorageStructure(oldData)) {\n    return oldData;\n  }\n  \n  let migratedData = { ...DEFAULT_STATS };\n  \n  if (oldData && typeof oldData === 'object') {\n    if (oldData.vocabulary_classic || oldData.vocabulary_fast) {\n      const classicTime = oldData.vocabulary_classic || 0;\n      const fastTime = oldData.vocabulary_fast || 0;\n      migratedData.vocabulary = classicTime + fastTime;\n    }\n    \n    Object.keys(DEFAULT_STATS).forEach(exerciseType => {\n      if (exerciseType !== 'vocabulary' && oldData[exerciseType]) {\n        migratedData[exerciseType] = oldData[exerciseType];\n      }\n    });\n  }\n  \n  return {\n    version: STORAGE_CONFIG.VERSION,\n    data: sanitizeTimeStats(migratedData),\n    lastModified: Date.now()\n  };\n};\n\n/**\n * Lit les données avec validation et migration\n */\nexport const readFromStorage = async (key = STORAGE_CONFIG.KEY) => {\n  const available = await isStorageAvailable();\n  if (!available) {\n    return null;\n  }\n  \n  try {\n    const rawData = await AsyncStorage.getItem(key);\n    if (!rawData) {\n      return null;\n    }\n    \n    const parsedData = JSON.parse(rawData);\n    const migratedData = migrateOldData(parsedData);\n    \n    if (!validateStorageStructure(parsedData)) {\n      await writeToStorage(key, migratedData.data);\n    }\n    \n    return migratedData;\n    \n  } catch (error) {\n    console.error(`Error reading from storage (${key}):`, error);\n    \n    if (key !== STORAGE_CONFIG.BACKUP_KEY) {\n      const backup = await readFromStorage(STORAGE_CONFIG.BACKUP_KEY);\n      if (backup) {\n        console.info('Restored from backup');\n        return backup;\n      }\n    }\n    \n    return null;\n  }\n};\n\n/**\n * Écrit les données avec validation\n */\nexport const writeToStorage = async (key = STORAGE_CONFIG.KEY, data) => {\n  const available = await isStorageAvailable();\n  if (!available) {\n    return false;\n  }\n  \n  try {\n    const sanitizedData = sanitizeTimeStats(data);\n    const storageData = {\n      version: STORAGE_CONFIG.VERSION,\n      data: sanitizedData,\n      lastModified: Date.now()\n    };\n    \n    const serialized = JSON.stringify(storageData);\n    \n    if (key === STORAGE_CONFIG.KEY) {\n      const existing = await AsyncStorage.getItem(key);\n      if (existing) {\n        await AsyncStorage.setItem(STORAGE_CONFIG.BACKUP_KEY, existing);\n      }\n    }\n    \n    await AsyncStorage.setItem(key, serialized);\n    return true;\n    \n  } catch (error) {\n    console.error(`Error writing to storage (${key}):`, error);\n    return false;\n  }\n};\n\n/**\n * Supprime les données du AsyncStorage\n */\nexport const removeFromStorage = async (key = STORAGE_CONFIG.KEY) => {\n  const available = await isStorageAvailable();\n  if (!available) {\n    return false;\n  }\n  \n  try {\n    await AsyncStorage.removeItem(key);\n    return true;\n  } catch (error) {\n    console.error(`Error removing from storage (${key}):`, error);\n    return false;\n  }\n};\n\n/**\n * Remet les données à zéro\n */\nexport const resetStorage = async () => {\n  return await writeToStorage(STORAGE_CONFIG.KEY, DEFAULT_STATS);\n};\n\n/**\n * Obtient les statistiques de stockage pour debug\n */\nexport const getStorageInfo = async () => {\n  const available = await isStorageAvailable();\n  if (!available) {\n    return { available: false };\n  }\n  \n  try {\n    const data = await readFromStorage();\n    const backupData = await AsyncStorage.getItem(STORAGE_CONFIG.BACKUP_KEY);\n    const hasBackup = !!backupData;\n    const mainData = await AsyncStorage.getItem(STORAGE_CONFIG.KEY);\n    \n    return {\n      available: true,\n      hasData: !!data,\n      hasBackup,\n      version: data?.version || 'unknown',\n      lastModified: data?.lastModified ? new Date(data.lastModified) : null,\n      dataSize: mainData?.length || 0\n    };\n  } catch (error) {\n    return {\n      available: true,\n      error: error.message\n    };\n  }\n};\n\n// =================== SERVICE MÉTIER POUR L'APP ===================\n\n/**\n * Service de stockage spécifique pour l'application\n */\nexport const storageService = {\n  // Clés de stockage\n  keys: {\n    USER_PROGRESS: 'userProgress',\n    USER_SETTINGS: 'userSettings',\n    LAST_ACTIVITY: 'lastActivity',\n    CURRENT_LEVEL: 'currentLevel',\n    STREAK_DATA: 'streakData',\n    COMPLETED_EXERCISES: 'completedExercises',\n  },\n\n  // Sauvegarder la progression\n  saveProgress: async (progressData) => {\n    return storeData(storageService.keys.USER_PROGRESS, progressData);\n  },\n\n  // Récupérer la progression\n  getProgress: async () => {\n    return getData(storageService.keys.USER_PROGRESS);\n  },\n\n  // Sauvegarder les paramètres\n  saveSettings: async (settings) => {\n    return storeData(storageService.keys.USER_SETTINGS, settings);\n  },\n\n  // Récupérer les paramètres\n  getSettings: async () => {\n    return getData(storageService.keys.USER_SETTINGS);\n  },\n\n  // Marquer un exercice comme complété\n  markExerciseCompleted: async (exerciseId, level, score) => {\n    try {\n      const completedExercises = await getData(storageService.keys.COMPLETED_EXERCISES) || {};\n\n      completedExercises[exerciseId] = {\n        level,\n        score,\n        completedAt: new Date().toISOString(),\n      };\n\n      await storeData(storageService.keys.COMPLETED_EXERCISES, completedExercises);\n      return true;\n    } catch (error) {\n      console.error('Error marking exercise completed:', error);\n      return false;\n    }\n  },\n\n  // Vérifier si un exercice a été complété\n  isExerciseCompleted: async (exerciseId) => {\n    const completedExercises = await getData(storageService.keys.COMPLETED_EXERCISES) || {};\n    return Boolean(completedExercises[exerciseId]);\n  },\n\n  // Mettre à jour la streak\n  updateStreak: async () => {\n    try {\n      const streakData = await getData(storageService.keys.STREAK_DATA) || {\n        currentStreak: 0,\n        lastLoginDate: null,\n        maxStreak: 0,\n      };\n\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate()).getTime();\n\n      if (!streakData.lastLoginDate) {\n        streakData.currentStreak = 1;\n        streakData.maxStreak = 1;\n        streakData.lastLoginDate = today;\n      } else {\n        const lastLogin = new Date(streakData.lastLoginDate).getTime();\n        const oneDayMs = 24 * 60 * 60 * 1000;\n\n        if (today - lastLogin === oneDayMs) {\n          streakData.currentStreak += 1;\n          streakData.maxStreak = Math.max(streakData.maxStreak, streakData.currentStreak);\n          streakData.lastLoginDate = today;\n        } else if (today === lastLogin) {\n          // Ne rien faire\n        } else {\n          streakData.currentStreak = 1;\n          streakData.lastLoginDate = today;\n        }\n      }\n\n      await storeData(storageService.keys.STREAK_DATA, streakData);\n      return streakData;\n    } catch (error) {\n      console.error('Error updating streak:', error);\n      return null;\n    }\n  },\n\n  // Récupérer les données de streak\n  getStreak: async () => {\n    return getData(storageService.keys.STREAK_DATA) || {\n      currentStreak: 0,\n      lastLoginDate: null,\n      maxStreak: 0,\n    };\n  },\n\n  // Réinitialiser toutes les données\n  resetAllData: async () => {\n    return clearAllData();\n  },\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\timeConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\timeUtils.js","messages":[{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":142,"column":11,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":142,"endColumn":25,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[3612,3633],"text":"Object.prototype.hasOwnProperty.call(stats, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// utils/timeUtils.js\n/**\n * Utilitaires pour la gestion et validation des temps\n */\n\nimport { DEFAULT_STATS, EXERCISE_TYPES } from './timeConstants.js';\n\n/**\n * Valide qu'une valeur de temps en secondes est correcte\n * @param {any} timeInSeconds - Valeur à valider\n * @returns {boolean} True si valide\n */\nexport const isValidTimeInSeconds = (timeInSeconds) => {\n  return (\n    typeof timeInSeconds === 'number' &&\n    !isNaN(timeInSeconds) &&\n    isFinite(timeInSeconds) &&\n    timeInSeconds >= 0 &&\n    timeInSeconds <= 86400 // Max 24h par session\n  );\n};\n\n/**\n * Sanitise les stats de temps pour éviter les valeurs invalides\n * @param {object} stats - Stats à sanitiser\n * @returns {object} Stats nettoyées\n */\nexport const sanitizeTimeStats = (stats) => {\n  if (!stats || typeof stats !== 'object') {\n    return { ...DEFAULT_STATS };\n  }\n\n  const sanitized = { ...DEFAULT_STATS };\n\n  // Valider chaque type d'exercice\n  Object.values(EXERCISE_TYPES).forEach(exerciseType => {\n    const timeValue = stats[exerciseType];\n    \n    if (isValidTimeInSeconds(timeValue)) {\n      sanitized[exerciseType] = Math.floor(timeValue); // Arrondir à l'entier\n    } else {\n      sanitized[exerciseType] = 0; // Valeur par défaut\n    }\n  });\n\n  return sanitized;\n};\n\n/**\n * Calcule le temps écoulé depuis un timestamp\n * @param {number} startTime - Timestamp de début\n * @returns {number} Temps écoulé en secondes\n */\nexport const getElapsedSeconds = (startTime) => {\n  if (!startTime || typeof startTime !== 'number') {\n    return 0;\n  }\n\n  const elapsed = Math.floor((Date.now() - startTime) / 1000);\n  return Math.max(0, elapsed);\n};\n\n/**\n * Convertit des secondes en minutes (arrondi)\n * @param {number} seconds - Secondes à convertir\n * @returns {number} Minutes arrondies\n */\nexport const secondsToMinutes = (seconds) => {\n  if (!isValidTimeInSeconds(seconds)) {\n    return 0;\n  }\n  \n  return Math.floor(seconds / 60);\n};\n\n/**\n * Convertit des minutes en secondes\n * @param {number} minutes - Minutes à convertir\n * @returns {number} Secondes\n */\nexport const minutesToSeconds = (minutes) => {\n  if (typeof minutes !== 'number' || isNaN(minutes) || minutes < 0) {\n    return 0;\n  }\n  \n  return minutes * 60;\n};\n\n/**\n * Formate un temps en secondes pour l'affichage\n * @param {number} seconds - Secondes à formater\n * @returns {string} Temps formaté (ex: \"5m 30s\")\n */\nexport const formatTime = (seconds) => {\n  if (!isValidTimeInSeconds(seconds)) {\n    return \"0s\";\n  }\n\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n\n  if (minutes === 0) {\n    return `${remainingSeconds}s`;\n  }\n\n  if (remainingSeconds === 0) {\n    return `${minutes}m`;\n  }\n\n  return `${minutes}m ${remainingSeconds}s`;\n};\n\n/**\n * Formate un temps en secondes pour l'affichage compact\n * @param {number} seconds - Secondes à formater\n * @returns {string} Temps formaté compact (ex: \"5:30\")\n */\nexport const formatTimeCompact = (seconds) => {\n  if (!isValidTimeInSeconds(seconds)) {\n    return \"0:00\";\n  }\n\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n};\n\n/**\n * Valide qu'un objet de stats a la bonne structure\n * @param {any} stats - Stats à valider\n * @returns {boolean} True si structure valide\n */\nexport const isValidStatsStructure = (stats) => {\n  if (!stats || typeof stats !== 'object') {\n    return false;\n  }\n\n  // Vérifier que tous les types d'exercices requis sont présents\n  const requiredTypes = Object.values(EXERCISE_TYPES);\n  const hasAllTypes = requiredTypes.every(type => \n    stats.hasOwnProperty(type) && isValidTimeInSeconds(stats[type])\n  );\n\n  return hasAllTypes;\n};\n\n/**\n * Calcule le temps total de toutes les stats\n * @param {object} stats - Stats à additionner\n * @returns {number} Temps total en secondes\n */\nexport const getTotalTimeFromStats = (stats) => {\n  if (!isValidStatsStructure(stats)) {\n    return 0;\n  }\n\n  return Object.values(stats).reduce((total, time) => total + time, 0);\n};\n\n/**\n * Obtient les stats triées par temps décroissant\n * @param {object} stats - Stats à trier\n * @returns {Array} Tableau d'objets {exerciseType, time} triés\n */\nexport const getSortedStatsByTime = (stats) => {\n  if (!isValidStatsStructure(stats)) {\n    return [];\n  }\n\n  return Object.entries(stats)\n    .map(([exerciseType, time]) => ({ exerciseType, time }))\n    .sort((a, b) => b.time - a.time);\n};\n\n/**\n * Vérifie si l'utilisateur a du temps sur un exercice spécifique\n * @param {object} stats - Stats de l'utilisateur\n * @param {string} exerciseType - Type d'exercice à vérifier\n * @param {number} minimumMinutes - Minimum en minutes (défaut: 1)\n * @returns {boolean} True si l'utilisateur a assez de temps\n */\nexport const hasMinimumTime = (stats, exerciseType, minimumMinutes = 1) => {\n  if (!isValidStatsStructure(stats) || !Object.values(EXERCISE_TYPES).includes(exerciseType)) {\n    return false;\n  }\n\n  const timeInSeconds = stats[exerciseType] || 0;\n  const minimumSeconds = minutesToSeconds(minimumMinutes);\n  \n  return timeInSeconds >= minimumSeconds;\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\vocabulary\\vocabularyDataHelper.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'mode' is assigned a value but never used.","line":92,"column":36,"nodeType":"Identifier","messageId":"unusedVar","endLine":92,"endColumn":40,"suggestions":[{"messageId":"removeVar","data":{"varName":"mode"},"fix":{"range":[3202,3218],"text":""},"desc":"Remove unused variable 'mode'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Formate une liste de mots pour garantir la présence des clés word et translation\n * @param {Array} data\n * @returns {Array}\n */\nexport const formatVocabularyList = (data = []) => {\n  return data.map(entry => ({\n    word: entry.word,\n    translation: entry.translation\n  }));\n};\n// src/utils/vocabulary/vocabularyDataHelper.js\n\n// Import des données de vocabulaire par niveau (6 niveaux + bonus)\nimport vocabulary1Data from \"../../data/vocabulary/1\";\nimport vocabulary2Data from \"../../data/vocabulary/2\";\nimport vocabulary3Data from \"../../data/vocabulary/3\";\nimport vocabulary4Data from \"../../data/vocabulary/4\";\nimport vocabulary5Data from \"../../data/vocabulary/5\";\nimport vocabulary6Data from \"../../data/vocabulary/6\";\nimport vocabularyBonusData from \"../../data/vocabulary/bonus\";\n\n// Import des données Fast Vocabulary (exports nommés, pas default)\nimport { vocab as fastVocab1 } from \"../../data/fastVocabulary/1\";\nimport { vocab as fastVocab2 } from \"../../data/fastVocabulary/2\";\nimport { vocab as fastVocab3 } from \"../../data/fastVocabulary/3\";\nimport { vocab as fastVocab4 } from \"../../data/fastVocabulary/4\";\nimport { vocab as fastVocab5 } from \"../../data/fastVocabulary/5\";\nimport { vocab as fastVocab6 } from \"../../data/fastVocabulary/6\";\nimport { vocab as fastVocabBonus } from \"../../data/fastVocabulary/bonus\";\n\n/**\n * Fonction pour convertir la structure Fast vers la structure attendue\n * @param {Object} fastVocab - Données fast vocabulary\n * @returns {Object} Structure convertie pour l'app\n */\nconst convertFastVocabToExercises = (fastVocab) => {\n  if (!fastVocab || !fastVocab.words) {\n    return { exercises: [] };\n  }\n\n  return {\n    exercises: [\n      {\n        title: fastVocab.title || \"Vocabulaire Fast\",\n        words: fastVocab.words,\n      },\n    ],\n  };\n};\n\n/**\n * Récupère les données de vocabulaire en fonction du niveau et du mode\n * @param {string} level - Le niveau de langue (1, 2, 3, 4, 5, 6, bonus)\n * @param {string} mode - Le mode ('classic' ou 'fast')\n * @returns {Object} Les données de vocabulaire pour le niveau et mode spécifiés\n */\nexport const getVocabularyData = (level, mode = \"classic\") => {\n  if (mode === \"fast\") {\n    const fastDataMap = {\n      \"1\": convertFastVocabToExercises(fastVocab1),\n      \"2\": convertFastVocabToExercises(fastVocab2),\n      \"3\": convertFastVocabToExercises(fastVocab3),\n      \"4\": convertFastVocabToExercises(fastVocab4),\n      \"5\": convertFastVocabToExercises(fastVocab5),\n      \"6\": convertFastVocabToExercises(fastVocab6),\n      \"bonus\": convertFastVocabToExercises(fastVocabBonus),\n    };\n\n    return fastDataMap[level] || convertFastVocabToExercises(fastVocab1);\n  }\n\n  // Mode classic (6 niveaux standards + bonus)\n  const classicDataMap = {\n    \"1\": vocabulary1Data,\n    \"2\": vocabulary2Data,\n    \"3\": vocabulary3Data,\n    \"4\": vocabulary4Data,\n    \"5\": vocabulary5Data,\n    \"6\": vocabulary6Data,\n    \"bonus\": vocabularyBonusData,\n  };\n\n  return classicDataMap[level] || vocabulary1Data;\n};\n\n/**\n * Récupère la liste des niveaux disponibles selon le mode\n * @param {string} mode - Le mode ('classic' ou 'fast')\n * @returns {Array} Liste des niveaux disponibles\n */\nexport const getAvailableLevels = (mode = \"classic\") => {\n  return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"bonus\"];\n};\n\n/**\n * Récupère la couleur associée à un niveau de langue\n * @param {string} level - Le niveau de langue (1, 2, 3, 4, 5, 6, bonus)\n * @returns {string} Code couleur hexadécimal pour le niveau\n */\nexport const getLevelColor = (level) => {\n  const colors = {\n    \"1\": \"#3b82f6\", // Bleu - Niveau 1\n    \"2\": \"#8b5cf6\", // Violet - Niveau 2\n    \"3\": \"#10b981\", // Vert - Niveau 3\n    \"4\": \"#f59e0b\", // Orange - Niveau 4\n    \"5\": \"#ef4444\", // Rouge - Niveau 5\n    \"6\": \"#6366f1\", // Indigo - Niveau 6\n    \"bonus\": \"#9333EA\", // Violet premium - Bonus\n  };\n  return colors[level] || \"#5E60CE\"; // Couleur par défaut\n};\n\n/**\n * Récupère le nom d'affichage d'un niveau\n * @param {string} level - Le niveau de langue\n * @returns {string} Nom d'affichage du niveau\n */\nexport const getLevelDisplayName = (level) => {\n  const displayNames = {\n    \"1\": \"Niveau 1\",\n    \"2\": \"Niveau 2\", \n    \"3\": \"Niveau 3\",\n    \"4\": \"Niveau 4\",\n    \"5\": \"Niveau 5\",\n    \"6\": \"Niveau 6\",\n    \"bonus\": \"Bonus\",\n  };\n  return displayNames[level] || `Niveau ${level}`;\n};\n\n/**\n * Récupère la description d'un niveau\n * @param {string} level - Le niveau de langue\n * @returns {string} Description du niveau\n */\nexport const getLevelDescription = (level) => {\n  const descriptions = {\n    \"1\": \"Communication basique, expressions simples du quotidien\",\n    \"2\": \"Expressions simples, conversations courantes\",\n    \"3\": \"Communication claire sur des sujets familiers\",\n    \"4\": \"Communication complexe, discussions techniques\",\n    \"5\": \"Expression fluide, sujets complexes\",\n    \"6\": \"Niveau proche du locuteur natif, maîtrise de la langue\",\n    \"bonus\": \"Contenu exclusif et avancé\",\n  };\n  return descriptions[level] || \"Niveau de langue\";\n};\n\n/**\n * Récupère l'icône associée à un niveau\n * @param {string} level - Le niveau de langue\n * @returns {string} Emoji icône pour le niveau\n */\nexport const getLevelIcon = (level) => {\n  const icons = {\n    \"1\": \"🌱\",\n    \"2\": \"🌿\",\n    \"3\": \"🌳\",\n    \"4\": \"🚀\",\n    \"5\": \"💎\",\n    \"6\": \"🏆\",\n    \"bonus\": \"🔥\",\n  };\n  return icons[level] || \"📚\";\n};\n\n/**\n * Vérifie si un niveau est un niveau bonus\n * @param {string} level - Le niveau à vérifier\n * @returns {boolean} True si c'est un niveau bonus\n */\nexport const isBonusLevel = (level) => {\n  return level === \"bonus\";\n};\n\n/**\n * Récupère les statistiques d'un niveau de vocabulaire\n * @param {string} level - Le niveau de langue\n * @param {string} mode - Le mode ('classic' ou 'fast')\n * @returns {Object} Statistiques du niveau\n */\nexport const getVocabularyStats = (level, mode = \"classic\") => {\n  const data = getVocabularyData(level, mode);\n  \n  if (!data || !data.exercises) {\n    return { totalWords: 0, totalExercises: 0 };\n  }\n\n  const totalExercises = data.exercises.length;\n  const totalWords = data.exercises.reduce((sum, exercise) => {\n    return sum + (exercise.words ? exercise.words.length : 0);\n  }, 0);\n\n  return {\n    totalWords,\n    totalExercises,\n    averageWordsPerExercise: totalExercises > 0 ? Math.round(totalWords / totalExercises) : 0,\n  };\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\vocabulary\\vocabularyStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\wordGames\\wordGamesDataHelper.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\wordGames\\wordGamesStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\vocabulary_analyzer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'readline' is assigned a value but never used.","line":3,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":15,"suggestions":[{"messageId":"removeVar","data":{"varName":"readline"},"fix":{"range":[56,93],"text":""},"desc":"Remove unused variable 'readline'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs');\nconst path = require('path');\nconst readline = require('readline');\n\n// Fonction pour extraire tous les mots d'un niveau\nasync function extractLevelVocabulary(level) {\n  const categoryDir = path.join(__dirname, 'src', 'data', 'vocabulary', level, 'categories');\n  \n  if (!fs.existsSync(categoryDir)) {\n    console.error(`Le dossier ${categoryDir} n'existe pas.`);\n    return { words: [], categories: [] };\n  }\n\n  const files = fs.readdirSync(categoryDir).filter(file => file.endsWith('.js'));\n  const allWords = [];\n  const categories = {};\n  \n  // Parcourir chaque fichier\n  for (const file of files) {\n    const filePath = path.join(categoryDir, file);\n    const fileContent = fs.readFileSync(filePath, 'utf8');\n    \n    // Regex pour extraire le tableau words\n    const wordsArrayMatch = fileContent.match(/words:\\s*\\[([\\s\\S]*?)\\]\\s*}/);\n    \n    if (!wordsArrayMatch) {\n      console.error(`Impossible de trouver le tableau \"words\" dans le fichier ${filePath}`);\n      continue;\n    }\n\n    // Extraire tous les mots et leurs traductions\n    const wordRegex = /{\\s*word:\\s*\"([^\"]+)\"(?:,\\s*translation:\\s*\"([^\"]+)\")?(?:,\\s*example:\\s*\"([^\"]+)\")?[^}]*}/g;\n    let wordMatch;\n    const wordsInFile = [];\n    \n    while ((wordMatch = wordRegex.exec(wordsArrayMatch[1])) !== null) {\n      const word = wordMatch[1];\n      const translation = wordMatch[2] || '';\n      const example = wordMatch[3] || '';\n      \n      allWords.push({\n        word,\n        translation,\n        example,\n        category: file.replace('.js', '')\n      });\n      \n      wordsInFile.push(word);\n    }\n    \n    // Stocker les mots par catégorie\n    const categoryName = file.replace('.js', '');\n    categories[categoryName] = wordsInFile;\n  }\n  \n  return { \n    words: allWords, \n    categories \n  };\n}\n\n// Fonction pour analyser la distribution du vocabulaire par catégorie\nasync function analyzeVocabularyDistribution(level) {\n  console.log(`Analyse de la distribution du vocabulaire pour le niveau ${level}...`);\n  \n  const { words, categories } = await extractLevelVocabulary(level);\n  \n  if (words.length === 0) {\n    console.error(`Aucun mot trouvé pour le niveau ${level}.`);\n    return;\n  }\n  \n  // Afficher le résumé\n  console.log('\\n='.repeat(80));\n  console.log(`DISTRIBUTION DU VOCABULAIRE - NIVEAU ${level}`);\n  console.log('='.repeat(80));\n  console.log(`\\nNombre total de mots: ${words.length}`);\n  console.log(`Nombre de catégories: ${Object.keys(categories).length}`);\n  \n  // Afficher la distribution par catégorie\n  console.log('\\nDistribution par catégorie:');\n  console.log('-'.repeat(80));\n  \n  // Trier les catégories par nombre de mots décroissant\n  const sortedCategories = Object.entries(categories)\n    .sort((a, b) => b[1].length - a[1].length)\n    .map(([category, words]) => ({ \n      category, \n      count: words.length,\n      percentage: (words.length / words.length * 100).toFixed(1)\n    }));\n  \n  // Calculer la moyenne de mots par catégorie\n  const averageWordsPerCategory = words.length / Object.keys(categories).length;\n  \n  // Afficher les catégories avec leur nombre de mots\n  sortedCategories.forEach(cat => {\n    const percentage = (cat.count / words.length * 100).toFixed(1);\n    const indicator = cat.count < averageWordsPerCategory * 0.7 ? '⚠️' : \n                     cat.count > averageWordsPerCategory * 1.3 ? '💪' : '✓';\n    const bar = '█'.repeat(Math.floor(percentage / 2));\n    \n    console.log(`${cat.category.padEnd(30, ' ')} : ${cat.count.toString().padEnd(3, ' ')} mots (${percentage}%) ${bar} ${indicator}`);\n  });\n  \n  // Identifier les catégories qui ont besoin d'être complétées\n  const categoriesToComplete = sortedCategories\n    .filter(cat => cat.count < averageWordsPerCategory * 0.7)\n    .map(cat => cat.category);\n  \n  if (categoriesToComplete.length > 0) {\n    console.log('\\nCatégories à compléter en priorité:');\n    console.log('-'.repeat(80));\n    categoriesToComplete.forEach(category => {\n      console.log(`- ${category}`);\n    });\n  }\n  \n  return {\n    level,\n    totalWords: words.length,\n    categories: sortedCategories,\n    categoriesToComplete\n  };\n}\n\n// Fonction pour comparer avec les références CECR\nasync function compareWithCEFRStandards(level) {\n  // Références approximatives du nombre de mots par niveau CECR\n  const cefrStandards = {\n    'A1': 1000,\n    'A2': 2000,\n    'B1': 3000,\n    'B2': 4500,\n    'C1': 8000,\n    'C2': 16000\n  };\n  \n  // Thèmes standards attendus par niveau\n  const expectedThemes = {\n    'A1': [\n      'identité', 'famille', 'nombres', 'temps', 'maison', 'nourriture',\n      'vêtements', 'activités quotidiennes', 'lieux', 'transports'\n    ],\n    'A2': [\n      'loisirs', 'achats', 'météo', 'voyages', 'travail', 'santé', \n      'école', 'animaux', 'services', 'communication'\n    ],\n    'B1': [\n      'médias', 'environnement', 'technologie', 'sentiments', 'émotions',\n      'professions', 'éducation', 'opinions', 'culture', 'sports'\n    ],\n    'B2': [\n      'politique', 'économie', 'société', 'arts', 'sciences',\n      'littérature', 'histoire', 'débats', 'problèmes sociaux', 'monde du travail'\n    ],\n    'C1': [\n      'abstractions', 'discussions académiques', 'nuances linguistiques',\n      'humour', 'expressions idiomatiques', 'droits', 'éthique', 'philosophie',\n      'recherche', 'systèmes'\n    ],\n    'C2': [\n      'spécialisations professionnelles', 'théories complexes',\n      'subtilités culturelles', 'discours spécialisés', 'légal', 'médical',\n      'scientifique', 'littérature avancée', 'analyse critique'\n    ]\n  };\n  \n  const { words, categories } = await extractLevelVocabulary(level);\n  \n  // Standard pour ce niveau\n  const standardWordCount = cefrStandards[level] || 0;\n  const expectedThemesForLevel = expectedThemes[level] || [];\n  \n  // Calcul du pourcentage de complétion\n  const completionPercentage = (words.length / standardWordCount * 100).toFixed(1);\n  \n  // Vérifier les thèmes manquants\n  const existingThemes = Object.keys(categories).map(cat => {\n    // Convertir la catégorie au format du fichier (01_identite.js) en thème (identité)\n    const themeName = cat.replace(/^\\d+_/, '').replace(/_/g, ' ');\n    return themeName;\n  });\n  \n  const missingThemes = expectedThemesForLevel.filter(theme => \n    !existingThemes.some(existing => \n      existing.includes(theme) || theme.includes(existing)\n    )\n  );\n  \n  // Afficher les résultats\n  console.log('\\n='.repeat(80));\n  console.log(`COMPARAISON AVEC LES STANDARDS CECR - NIVEAU ${level}`);\n  console.log('='.repeat(80));\n  \n  console.log(`\\nObjectif CECR pour ${level}: environ ${standardWordCount} mots`);\n  console.log(`Vocabulaire actuel: ${words.length} mots (${completionPercentage}% de l'objectif)`);\n  console.log(`Mots restants à ajouter: ${Math.max(0, standardWordCount - words.length)}`);\n  \n  if (missingThemes.length > 0) {\n    console.log('\\nThèmes potentiellement manquants:');\n    console.log('-'.repeat(80));\n    missingThemes.forEach(theme => {\n      console.log(`- ${theme}`);\n    });\n    console.log('\\nNote: Cette détection est approximative, vérifiez si ces thèmes sont couverts sous d\\'autres noms.');\n  }\n  \n  return {\n    level,\n    standardWordCount,\n    currentWordCount: words.length,\n    completionPercentage,\n    wordsToAdd: Math.max(0, standardWordCount - words.length),\n    missingThemes\n  };\n}\n\n// Fonction pour suggérer des mots à ajouter\nasync function suggestWordsToAdd(level, category) {\n  // Dans une version plus avancée, cette fonction pourrait:\n  // 1. Consulter une base de données de fréquence des mots en anglais\n  // 2. Récupérer les mots déjà présents dans le niveau\n  // 3. Suggérer des mots fréquents qui ne sont pas encore présents, adaptés au niveau\n  \n  console.log('\\n='.repeat(80));\n  console.log(`SUGGESTIONS DE MOTS À AJOUTER - NIVEAU ${level}, CATÉGORIE ${category}`);\n  console.log('='.repeat(80));\n  \n  console.log('\\nPour générer des suggestions pertinentes, nous aurions besoin:');\n  console.log('1. D\\'une base de données de fréquence des mots anglais');\n  console.log('2. D\\'une liste de vocabulaire standard par niveau CECR');\n  console.log('3. Des thèmes précis couverts par chaque catégorie');\n  \n  console.log('\\nDémarche recommandée:');\n  console.log('1. Analyser les mots manquants avec un linguiste ou enseignant');\n  console.log('2. Consulter des ressources de vocabulaire par niveau CECR (Cambridge, Oxford, etc.)');\n  console.log('3. Utiliser la commande suivante pour ajouter des mots sans créer de doublons:');\n  console.log(`   node vocabulary_manager.js add \"nouveau mot\" \"traduction\" ${level} ${category} \"exemple d'utilisation\"`);\n  \n  // Pseudo-exemple de suggestion (à remplacer par une vraie analyse)\n  console.log('\\nExemples de mots qui pourraient être ajoutés (selon le niveau et la catégorie):');\n  \n  // Simuler quelques suggestions selon le niveau\n  const suggestions = [];\n  if (level === 'A1') {\n    suggestions.push(\n      { word: \"apple\", translation: \"pomme\" },\n      { word: \"pen\", translation: \"stylo\" },\n      { word: \"friend\", translation: \"ami\" }\n    );\n  } else if (level === 'B1') {\n    suggestions.push(\n      { word: \"environment\", translation: \"environnement\" },\n      { word: \"opinion\", translation: \"opinion\" },\n      { word: \"achievement\", translation: \"réussite\" }\n    );\n  } else if (level === 'C1') {\n    suggestions.push(\n      { word: \"endeavor\", translation: \"entreprise, tentative\" },\n      { word: \"paradigm\", translation: \"paradigme\" },\n      { word: \"subsequent\", translation: \"ultérieur, subséquent\" }\n    );\n  }\n  \n  if (suggestions.length > 0) {\n    console.log('-'.repeat(80));\n    suggestions.forEach(sugg => {\n      console.log(`\"${sugg.word}\" - \"${sugg.translation}\" (vérifiez d'abord s'il existe déjà)`);\n    });\n  }\n}\n\n// Interface en ligne de commande\nasync function main() {\n  const args = process.argv.slice(2);\n  const command = args[0];\n  \n  if (command === 'analyze' || command === 'analyse') {\n    // Analyser la distribution du vocabulaire\n    if (args.length < 2) {\n      console.log('Usage: node vocabulary_analyzer.js analyze <A1|A2|B1|B2|C1|C2>');\n      return;\n    }\n    \n    const level = args[1].toUpperCase();\n    \n    // Valider le niveau\n    const validLevels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n    if (!validLevels.includes(level)) {\n      console.error(`Niveau invalide: ${level}. Utilisez un des niveaux suivants: ${validLevels.join(', ')}`);\n      return;\n    }\n    \n    await analyzeVocabularyDistribution(level);\n  } else if (command === 'compare') {\n    // Comparer avec les standards CECR\n    if (args.length < 2) {\n      console.log('Usage: node vocabulary_analyzer.js compare <A1|A2|B1|B2|C1|C2>');\n      return;\n    }\n    \n    const level = args[1].toUpperCase();\n    \n    // Valider le niveau\n    const validLevels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n    if (!validLevels.includes(level)) {\n      console.error(`Niveau invalide: ${level}. Utilisez un des niveaux suivants: ${validLevels.join(', ')}`);\n      return;\n    }\n    \n    await compareWithCEFRStandards(level);\n  } else if (command === 'suggest') {\n    // Suggérer des mots à ajouter\n    if (args.length < 3) {\n      console.log('Usage: node vocabulary_analyzer.js suggest <A1|A2|B1|B2|C1|C2> <category>');\n      console.log('Exemple: node vocabulary_analyzer.js suggest A1 01_identite');\n      return;\n    }\n    \n    const level = args[1].toUpperCase();\n    const category = args[2];\n    \n    // Valider le niveau\n    const validLevels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n    if (!validLevels.includes(level)) {\n      console.error(`Niveau invalide: ${level}. Utilisez un des niveaux suivants: ${validLevels.join(', ')}`);\n      return;\n    }\n    \n    await suggestWordsToAdd(level, category);\n  } else if (command === 'all') {\n    // Analyser tous les niveaux\n    console.log('Analyse de tous les niveaux...');\n    const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n    \n    for (const level of levels) {\n      await analyzeVocabularyDistribution(level);\n      await compareWithCEFRStandards(level);\n      console.log('\\n' + '-'.repeat(80));\n    }\n  } else {\n    // Afficher l'aide\n    console.log('ANALYSEUR DE VOCABULAIRE');\n    console.log('='.repeat(40));\n    console.log('\\nCommandes disponibles:');\n    console.log('  analyze <level>      - Analyser la distribution du vocabulaire');\n    console.log('  compare <level>      - Comparer avec les standards CECR');\n    console.log('  suggest <level> <cat> - Suggérer des mots à ajouter');\n    console.log('  all                  - Analyser tous les niveaux');\n    console.log('\\nExemples:');\n    console.log('  node vocabulary_analyzer.js analyze A1');\n    console.log('  node vocabulary_analyzer.js compare B2');\n    console.log('  node vocabulary_analyzer.js suggest A1 01_identite');\n    console.log('  node vocabulary_analyzer.js all');\n  }\n}\n\n// Lancer le programme\nif (require.main === module) {\n  main().catch(error => {\n    console.error('Erreur:', error);\n  });\n}\n\nmodule.exports = {\n  extractLevelVocabulary,\n  analyzeVocabularyDistribution,\n  compareWithCEFRStandards,\n  suggestWordsToAdd\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\vocabulary_manager.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'currentPos' is assigned a value but never used.","line":21,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":21,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"currentPos"},"fix":{"range":[735,754],"text":""},"desc":"Remove unused variable 'currentPos'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'fileInfo' is assigned a value but never used.","line":228,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":228,"endColumn":19},{"ruleId":"no-const-assign","severity":2,"message":"'startPos' is constant.","line":264,"column":13,"nodeType":"Identifier","messageId":"const","endLine":264,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'word' is defined but never used.","line":570,"column":37,"nodeType":"Identifier","messageId":"unusedVar","endLine":570,"endColumn":41,"suggestions":[{"messageId":"removeVar","data":{"varName":"word"},"fix":{"range":[18556,18562],"text":""},"desc":"Remove unused variable 'word'."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs');\nconst path = require('path');\nconst readline = require('readline');\n\n// Fonction pour extraire les mots d'un fichier JS\nfunction extractWordsFromFile(filePath) {\n  try {\n    const fileContent = fs.readFileSync(filePath, 'utf8');\n    \n    // Regex pour extraire le tableau words\n    const wordsArrayMatch = fileContent.match(/words:\\s*\\[([\\s\\S]*?)\\]\\s*}/);\n    \n    if (!wordsArrayMatch) {\n      console.error(`Impossible de trouver le tableau \"words\" dans le fichier ${filePath}`);\n      return { path: filePath, content: fileContent, wordsData: [] };\n    }\n    \n    // Extraire tous les objets de mots du fichier\n    // Cette regex capture l'objet complet avec ses propriétés\n    const wordObjects = [];\n    let currentPos = 0;\n    const wordsArrayContent = wordsArrayMatch[1];\n    \n    // Regex pour capturer chaque objet de mot complet\n    const regex = /\\{\\s*word:\\s*\"([^\"]+)\"[^}]*\\}/g;\n    let match;\n    \n    while ((match = regex.exec(wordsArrayContent)) !== null) {\n      // Capturer l'objet entier et le terme du mot\n      const fullObject = match[0];\n      const wordValue = match[1];\n      \n      // Extraire la position dans le fichier original\n      const position = wordsArrayMatch.index + wordsArrayMatch[0].indexOf('[') + 1 + match.index;\n      \n      wordObjects.push({\n        term: wordValue.toLowerCase().trim(),\n        originalWord: wordValue,\n        fullObject: fullObject,\n        position: position\n      });\n    }\n    \n    return { \n      path: filePath, \n      content: fileContent, \n      wordsData: wordObjects \n    };\n  } catch (error) {\n    console.error(`Erreur lors de la lecture du fichier ${filePath}:`, error.message);\n    return { path: filePath, content: \"\", wordsData: [] };\n  }\n}\n\n// Fonction pour obtenir tous les fichiers JS par niveau\nfunction getAllVocabularyFiles() {\n  const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n  const allFiles = [];\n  \n  for (const level of levels) {\n    const categoryDir = path.join(__dirname, 'src', 'data', 'vocabulary', level, 'categories');\n    \n    if (!fs.existsSync(categoryDir)) {\n      console.log(`Le dossier ${categoryDir} n'existe pas, niveau ${level} ignoré.`);\n      continue;\n    }\n    \n    const files = fs.readdirSync(categoryDir)\n      .filter(file => file.endsWith('.js'))\n      .map(file => ({\n        path: path.join(categoryDir, file),\n        level,\n        category: file\n      }));\n    \n    allFiles.push(...files);\n  }\n  \n  return allFiles;\n}\n\n// Fonction pour créer un index global de tous les mots existants\nasync function createGlobalWordIndex() {\n  const files = getAllVocabularyFiles();\n  const globalIndex = new Map(); // word -> [{level, category, filePath, fullObject}]\n  const allFileData = [];\n  \n  console.log(`Analyse de ${files.length} fichiers de vocabulaire...`);\n  \n  for (const fileInfo of files) {\n    const fileData = extractWordsFromFile(fileInfo.path);\n    fileData.level = fileInfo.level;\n    fileData.category = fileInfo.category;\n    allFileData.push(fileData);\n    \n    // Indexer chaque mot\n    for (const wordData of fileData.wordsData) {\n      const lowercaseWord = wordData.term;\n      \n      if (!globalIndex.has(lowercaseWord)) {\n        globalIndex.set(lowercaseWord, []);\n      }\n      \n      globalIndex.get(lowercaseWord).push({\n        level: fileInfo.level,\n        category: fileInfo.category,\n        filePath: fileInfo.path,\n        originalWord: wordData.originalWord,\n        fullObject: wordData.fullObject,\n        position: wordData.position\n      });\n    }\n  }\n  \n  return { globalIndex, allFileData };\n}\n\n// Fonction pour supprimer les doublons dans les fichiers\nasync function removeDuplicates() {\n  console.log('Création de l\\'index global des mots...');\n  const { globalIndex, allFileData } = await createGlobalWordIndex();\n  \n  console.log(`Index créé. ${globalIndex.size} mots uniques trouvés.`);\n  \n  // Trouver les doublons\n  const duplicates = [];\n  \n  globalIndex.forEach((occurrences, word) => {\n    if (occurrences.length > 1) {\n      duplicates.push({\n        word,\n        occurrences\n      });\n    }\n  });\n  \n  console.log(`${duplicates.length} mots en double trouvés.`);\n  \n  if (duplicates.length === 0) {\n    console.log('Aucun doublon à supprimer.');\n    return;\n  }\n  \n  // Organiser les doublons par fichier pour les supprimer\n  const duplicatesByFile = new Map(); // filePath -> [{word, originalWord, fullObject, keepIn}]\n  \n  for (const dup of duplicates) {\n    // Garder la première occurrence, supprimer les suivantes\n    const toKeep = dup.occurrences[0];\n    const toRemove = dup.occurrences.slice(1);\n    \n    for (const occurrence of toRemove) {\n      if (!duplicatesByFile.has(occurrence.filePath)) {\n        duplicatesByFile.set(occurrence.filePath, []);\n      }\n      \n      duplicatesByFile.get(occurrence.filePath).push({\n        word: dup.word,\n        originalWord: occurrence.originalWord,\n        fullObject: occurrence.fullObject,\n        keepIn: `${toKeep.level}/${toKeep.category}`\n      });\n    }\n  }\n  \n  // Compter les occurrences totales\n  let totalDuplicateOccurrences = 0;\n  duplicatesByFile.forEach(dups => {\n    totalDuplicateOccurrences += dups.length;\n  });\n  \n  // Créer un rapport de ce qui va être supprimé\n  let report = '='.repeat(80) + '\\n';\n  report += 'RAPPORT DE SUPPRESSION DES DOUBLONS\\n';\n  report += '='.repeat(80) + '\\n\\n';\n  \n  duplicatesByFile.forEach((dupsToRemove, filePath) => {\n    const relativePath = filePath.split('vocabulary')[1];\n    report += `${relativePath} : ${dupsToRemove.length} doublons à supprimer\\n`;\n    \n    dupsToRemove.forEach(dup => {\n      report += `  - \"${dup.originalWord}\" (conservé dans ${dup.keepIn})\\n`;\n    });\n    \n    report += '\\n';\n  });\n  \n  report += `Total: ${duplicates.length} mots en double, ${totalDuplicateOccurrences} occurrences à supprimer.\\n`;\n  \n  // Afficher le rapport et demander confirmation\n  console.log(report);\n  \n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n  \n  const proceed = await new Promise(resolve => {\n    rl.question('Voulez-vous procéder à la suppression des doublons ? (oui/non): ', answer => {\n      resolve(answer.toLowerCase() === 'oui' || answer.toLowerCase() === 'o' || answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes');\n    });\n  });\n  \n  if (!proceed) {\n    console.log('Opération annulée.');\n    rl.close();\n    return;\n  }\n  \n  // Procéder à la suppression\n  console.log('Suppression des doublons en cours...');\n  \n  // Créer un dossier de backup\n  const backupDir = path.join(__dirname, 'backup', `backup_${new Date().toISOString().replace(/:/g, '-')}`);\n  fs.mkdirSync(backupDir, { recursive: true });\n  \n  // Pour chaque fichier contenant des doublons\n  for (const filePath of duplicatesByFile.keys()) {\n    // Récupérer les données du fichier\n    const fileData = allFileData.find(data => data.path === filePath);\n    \n    if (!fileData) {\n      console.error(`Erreur: données du fichier ${filePath} introuvables.`);\n      continue;\n    }\n    \n    // Faire une sauvegarde du fichier original\n    const fileInfo = path.parse(filePath);\n    const backupPath = path.join(backupDir, `${fileData.level}_${fileData.category}`);\n    fs.writeFileSync(backupPath, fileData.content);\n    \n    // Récupérer les doublons à supprimer\n    const dupsToRemove = duplicatesByFile.get(filePath);\n    \n    // Créer un nouveau contenu de fichier en supprimant chaque objet doublon\n    let newContent = fileData.content;\n    \n    // Débutons par le deuxième élément (index 1) et descendons pour éviter des problèmes de décalage\n    const sortedDups = dupsToRemove\n      .map(dup => ({\n        ...dup,\n        match: newContent.indexOf(dup.fullObject)\n      }))\n      .filter(dup => dup.match !== -1)\n      .sort((a, b) => b.match - a.match); // Trier par position décroissante\n    \n    for (const dup of sortedDups) {\n      // Trouver la position de l'objet entier, y compris la virgule séparatrice le cas échéant\n      const startPos = dup.match;\n      let endPos = startPos + dup.fullObject.length;\n      \n      // Vérifier si l'objet est suivi d'une virgule\n      const afterObject = newContent.substring(endPos, endPos + 2);\n      if (afterObject.trim().startsWith(',')) {\n        endPos += 1; // Inclure la virgule dans la suppression\n      } \n      // Si c'est le dernier élément et qu'il y a une virgule avant\n      else {\n        const beforeObject = newContent.substring(Math.max(0, startPos - 2), startPos);\n        if (beforeObject.trim().endsWith(',')) {\n          // Ajuster la position de début pour inclure la virgule précédente\n          const commaPos = newContent.lastIndexOf(',', startPos);\n          if (commaPos !== -1 && commaPos > startPos - 10) { // Raisonnable pour une virgule proche\n            startPos = commaPos;\n          }\n        }\n      }\n      \n      // Supprimer l'objet du contenu\n      newContent = newContent.substring(0, startPos) + newContent.substring(endPos);\n    }\n    \n    // Nettoyer les potentielles virgules consécutives ou isolées\n    newContent = newContent.replace(/,\\s*,/g, ','); // Virgules consécutives\n    newContent = newContent.replace(/\\[\\s*,/g, '['); // Virgule après ouverture de tableau\n    newContent = newContent.replace(/,\\s*\\]/g, ']'); // Virgule avant fermeture de tableau\n    \n    // Écrire le fichier mis à jour\n    fs.writeFileSync(filePath, newContent);\n    \n    console.log(`Fichier mis à jour: ${fileData.level}/${fileData.category} (${sortedDups.length} doublons supprimés)`);\n  }\n  \n  // Enregistrer le rapport\n  const reportPath = path.join(backupDir, 'rapport_suppression.txt');\n  fs.writeFileSync(reportPath, report);\n  \n  console.log('\\nSuppression des doublons terminée!');\n  console.log(`Un rapport a été enregistré dans ${reportPath}`);\n  console.log(`Les fichiers originaux ont été sauvegardés dans ${backupDir}`);\n  \n  rl.close();\n}\n\n// Fonction pour vérifier si un mot existe déjà dans le vocabulaire\nasync function checkWordExists(word) {\n  const { globalIndex } = await createGlobalWordIndex();\n  const lowercaseWord = word.toLowerCase().trim();\n  \n  if (globalIndex.has(lowercaseWord)) {\n    const occurrences = globalIndex.get(lowercaseWord);\n    console.log(`\\n⚠️ Le mot \"${word}\" existe déjà dans:`);\n    \n    // Regrouper par niveau pour une meilleure lisibilité\n    const byLevel = {};\n    \n    occurrences.forEach(occ => {\n      if (!byLevel[occ.level]) {\n        byLevel[occ.level] = [];\n      }\n      byLevel[occ.level].push(occ.category);\n    });\n    \n    // Afficher les occurrences organisées par niveau\n    Object.keys(byLevel).sort().forEach(level => {\n      console.log(`  Niveau ${level}:`);\n      byLevel[level].sort().forEach(category => {\n        console.log(`    - ${category}`);\n      });\n    });\n    \n    return {\n      exists: true,\n      occurrences: occurrences\n    };\n  }\n  \n  console.log(`\\n✅ Le mot \"${word}\" n'existe pas encore dans le vocabulaire.`);\n  return {\n    exists: false,\n    occurrences: []\n  };\n}\n\n// Fonction pour ajouter un nouveau mot\nasync function addNewWord(word, translation, level, category, example = \"\") {\n  // Vérifier si le mot existe déjà\n  const result = await checkWordExists(word);\n  \n  if (result.exists) {\n    const rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout\n    });\n    \n    const proceed = await new Promise(resolve => {\n      rl.question('Le mot existe déjà. Voulez-vous quand même l\\'ajouter ? (oui/non): ', answer => {\n        resolve(answer.toLowerCase() === 'oui' || answer.toLowerCase() === 'o' || answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes');\n      });\n    });\n    \n    rl.close();\n    \n    if (!proceed) {\n      console.log('Ajout annulé.');\n      return false;\n    }\n  }\n  \n  // Vérifier que le niveau et la catégorie existent\n  const categoryDir = path.join(__dirname, 'src', 'data', 'vocabulary', level, 'categories');\n  \n  if (!fs.existsSync(categoryDir)) {\n    console.error(`Le dossier ${categoryDir} n'existe pas.`);\n    return false;\n  }\n  \n  const categoryFile = path.join(categoryDir, `${category}.js`);\n  \n  if (!fs.existsSync(categoryFile)) {\n    console.error(`Le fichier ${categoryFile} n'existe pas.`);\n    return false;\n  }\n  \n  // Lire le fichier de la catégorie\n  const fileContent = fs.readFileSync(categoryFile, 'utf8');\n  \n  // Trouver où insérer le nouveau mot\n  const wordsArrayMatch = fileContent.match(/words:\\s*\\[([\\s\\S]*?)\\]\\s*}/);\n  \n  if (!wordsArrayMatch) {\n    console.error(`Impossible de trouver le tableau \"words\" dans le fichier ${categoryFile}`);\n    return false;\n  }\n  \n  // Créer l'entrée du nouveau mot\n  let newWordEntry;\n  if (example) {\n    newWordEntry = `\\n    { word: \"${word}\", translation: \"${translation}\", example: \"${example}\" },`;\n  } else {\n    newWordEntry = `\\n    { word: \"${word}\", translation: \"${translation}\" },`;\n  }\n  \n  // Insérer le nouveau mot\n  let newContent = fileContent;\n  const insertPosition = wordsArrayMatch.index + wordsArrayMatch[0].indexOf('[') + 1;\n  \n  newContent = newContent.slice(0, insertPosition) + newWordEntry + newContent.slice(insertPosition);\n  \n  // Écrire le fichier mis à jour\n  fs.writeFileSync(categoryFile, newContent);\n  \n  console.log(`✅ Le mot \"${word}\" a été ajouté avec succès dans ${level}/${category}.js`);\n  \n  return true;\n}\n\n// Fonction pour afficher des exemples de doublons\nasync function showDuplicateExamples() {\n  console.log('Analyse en cours pour identifier des exemples de doublons...');\n  \n  const { globalIndex } = await createGlobalWordIndex();\n  \n  // Trouver des exemples de doublons\n  const internalDups = [];    // Doublons dans un même fichier\n  const sameLevelDups = [];   // Doublons entre fichiers d'un même niveau\n  const crossLevelDups = [];  // Doublons entre niveaux\n  \n  globalIndex.forEach((occurrences, word) => {\n    if (occurrences.length <= 1) return;\n    \n    // Regrouper par fichier et niveau\n    const byFile = {};\n    const byLevel = {};\n    \n    occurrences.forEach(occ => {\n      const fileKey = `${occ.level}/${occ.category}`;\n      \n      if (!byFile[fileKey]) byFile[fileKey] = 0;\n      byFile[fileKey]++;\n      \n      if (!byLevel[occ.level]) byLevel[occ.level] = new Set();\n      byLevel[occ.level].add(occ.category);\n    });\n    \n    // Vérifier les doublons internes (même fichier)\n    Object.entries(byFile).forEach(([fileKey, count]) => {\n      if (count > 1) {\n        internalDups.push({\n          word,\n          file: fileKey,\n          count\n        });\n      }\n    });\n    \n    // Vérifier les doublons entre fichiers d'un même niveau\n    Object.entries(byLevel).forEach(([level, categories]) => {\n      if (categories.size > 1) {\n        sameLevelDups.push({\n          word,\n          level,\n          files: Array.from(categories).sort()\n        });\n      }\n    });\n    \n    // Vérifier les doublons entre niveaux\n    if (Object.keys(byLevel).length > 1) {\n      crossLevelDups.push({\n        word,\n        levels: Object.keys(byLevel).sort()\n      });\n    }\n  });\n  \n  // Trier et limiter le nombre d'exemples\n  const limit = 10;\n  \n  internalDups.sort((a, b) => a.word.localeCompare(b.word));\n  sameLevelDups.sort((a, b) => a.word.localeCompare(b.word));\n  crossLevelDups.sort((a, b) => {\n    if (b.levels.length !== a.levels.length) {\n      return b.levels.length - a.levels.length;\n    }\n    return a.word.localeCompare(b.word);\n  });\n  \n  // Afficher les exemples\n  console.log('\\n='.repeat(80));\n  console.log('EXEMPLES DE DOUBLONS');\n  console.log('='.repeat(80));\n  \n  console.log('\\n1. DOUBLONS INTERNES AUX FICHIERS');\n  console.log('-'.repeat(80));\n  if (internalDups.length === 0) {\n    console.log('Aucun doublon interne trouvé.');\n  } else {\n    internalDups.slice(0, limit).forEach(dup => {\n      console.log(`\"${dup.word}\" apparaît ${dup.count} fois dans le fichier ${dup.file}`);\n    });\n    \n    if (internalDups.length > limit) {\n      console.log(`... et ${internalDups.length - limit} autres exemples.`);\n    }\n  }\n  \n  console.log('\\n2. DOUBLONS ENTRE FICHIERS D\\'UN MÊME NIVEAU');\n  console.log('-'.repeat(80));\n  if (sameLevelDups.length === 0) {\n    console.log('Aucun doublon entre fichiers d\\'un même niveau trouvé.');\n  } else {\n    sameLevelDups.slice(0, limit).forEach(dup => {\n      console.log(`\"${dup.word}\" apparaît dans plusieurs fichiers du niveau ${dup.level}:`);\n      dup.files.forEach(file => console.log(`  - ${file}`));\n    });\n    \n    if (sameLevelDups.length > limit) {\n      console.log(`... et ${sameLevelDups.length - limit} autres exemples.`);\n    }\n  }\n  \n  console.log('\\n3. DOUBLONS ENTRE DIFFÉRENTS NIVEAUX');\n  console.log('-'.repeat(80));\n  if (crossLevelDups.length === 0) {\n    console.log('Aucun doublon entre niveaux trouvé.');\n  } else {\n    crossLevelDups.slice(0, limit).forEach(dup => {\n      console.log(`\"${dup.word}\" apparaît dans ${dup.levels.length} niveaux: ${dup.levels.join(', ')}`);\n    });\n    \n    if (crossLevelDups.length > limit) {\n      console.log(`... et ${crossLevelDups.length - limit} autres exemples.`);\n    }\n  }\n  \n  return {\n    internalDups,\n    sameLevelDups,\n    crossLevelDups\n  };\n}\n\n// Fonction pour calculer les statistiques des doublons\nasync function calculateDuplicateStats() {\n  console.log('Analyse des doublons en cours...');\n  const { globalIndex, allFileData } = await createGlobalWordIndex();\n  \n  // Compter les doublons par type\n  const stats = {\n    totalUniqueWords: globalIndex.size,\n    internalDuplicates: 0,           // Doublons internes aux fichiers\n    sameLevelDuplicates: 0,          // Mots dupliqués entre fichiers d'un même niveau\n    crossLevelDuplicates: 0,         // Mots apparaissant dans plusieurs niveaux\n    totalDuplicateInstances: 0       // Nombre total d'instances de doublons à supprimer\n  };\n  \n  // Structure pour suivre les doublons par niveau et les fichiers\n  const duplicatesByLevel = {};\n  const levelCategories = {};\n  \n  // Initialiser les compteurs par niveau\n  const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n  levels.forEach(level => {\n    duplicatesByLevel[level] = {\n      internal: 0,        // Doublons internes\n      betweenFiles: 0     // Doublons entre fichiers\n    };\n    levelCategories[level] = new Set();\n  });\n  \n  // Compter d'abord tous les fichiers par niveau indépendamment des doublons\n  allFileData.forEach(fileData => {\n    if (fileData.level && levels.includes(fileData.level)) {\n      levelCategories[fileData.level].add(fileData.category);\n    }\n  });\n  \n  // Analyser chaque mot et ses occurrences\n  globalIndex.forEach((occurrences, word) => {\n    // Compter le nombre total d'occurrences à supprimer\n    if (occurrences.length > 1) {\n      stats.totalDuplicateInstances += occurrences.length - 1;\n      \n      // Regrouper par niveau et fichier\n      const byLevel = {};\n      const byFile = {};\n      \n      occurrences.forEach(occ => {\n        // Pour le suivi par niveau\n        if (!byLevel[occ.level]) {\n          byLevel[occ.level] = [];\n        }\n        byLevel[occ.level].push(occ);\n        \n        // Pour le suivi par fichier\n        const fileKey = `${occ.level}/${occ.category}`;\n        if (!byFile[fileKey]) {\n          byFile[fileKey] = 0;\n        }\n        byFile[fileKey]++;\n      });\n      \n      // Vérifier les doublons internes aux fichiers\n      Object.values(byFile).forEach(count => {\n        if (count > 1) {\n          stats.internalDuplicates += count - 1;\n          \n          // Ajouter au niveau correspondant\n          Object.keys(byLevel).forEach(level => {\n            const filesInLevel = byLevel[level].map(o => o.category);\n            const uniqueFiles = new Set(filesInLevel);\n            \n            // Si moins de fichiers uniques que d'occurrences, il y a des doublons internes\n            if (uniqueFiles.size < filesInLevel.length) {\n              duplicatesByLevel[level].internal += filesInLevel.length - uniqueFiles.size;\n            }\n          });\n        }\n      });\n      \n      // Vérifier les doublons entre fichiers du même niveau\n      Object.keys(byLevel).forEach(level => {\n        const filesWithOccurrence = byLevel[level].map(o => o.category);\n        const uniqueFiles = new Set(filesWithOccurrence);\n        \n        // S'il y a plusieurs fichiers différents avec ce mot dans le même niveau\n        if (uniqueFiles.size > 1) {\n          duplicatesByLevel[level].betweenFiles += 1; // Compter le mot, pas les occurrences\n          stats.sameLevelDuplicates += 1;\n        }\n      });\n      \n      // Vérifier les doublons entre niveaux\n      if (Object.keys(byLevel).length > 1) {\n        stats.crossLevelDuplicates += 1; // Compter le mot, pas les occurrences\n      }\n    }\n  });\n  \n  return {\n    stats,\n    duplicatesByLevel,\n    levelCategories,\n    levels\n  };\n}\n\n// Fonction pour afficher les statistiques\nasync function displayDuplicateStats() {\n  const { stats, duplicatesByLevel, levelCategories, levels } = await calculateDuplicateStats();\n  \n  // Afficher les résultats\n  console.log('\\n='.repeat(80));\n  console.log('STATISTIQUES DES DOUBLONS');\n  console.log('='.repeat(80));\n  console.log(`\\nNombre total de mots uniques: ${stats.totalUniqueWords}`);\n  console.log(`Nombre total d'occurrences de doublons: ${stats.totalDuplicateInstances}`);\n  console.log(\"\\nRépartition des doublons:\");\n  console.log(`- Doublons internes aux fichiers: ${stats.internalDuplicates}`);\n  console.log(`- Doublons entre fichiers d'un même niveau: ${stats.sameLevelDuplicates}`);\n  console.log(`- Mots apparaissant dans plusieurs niveaux: ${stats.crossLevelDuplicates}`);\n  \n  console.log('\\nDétail par niveau:');\n  console.log('-'.repeat(80));\n  \n  let totalCategories = 0;\n  \n  levels.forEach(level => {\n    const categoryCount = levelCategories[level].size;\n    totalCategories += categoryCount;\n    \n    console.log(`${level.padEnd(5, ' ')}: ${duplicatesByLevel[level].internal} doublons internes, ${duplicatesByLevel[level].betweenFiles} doublons entre fichiers (${categoryCount} fichiers)`);\n  });\n  \n  console.log('\\nNombre total de fichiers de vocabulaire: ' + totalCategories);\n  \n  return stats;\n}\n\n// Interface CLI\nasync function main() {\n  const args = process.argv.slice(2);\n  const command = args[0];\n  \n  if (command === 'clean' || command === 'clean-duplicates') {\n    // Supprimer les doublons\n    await removeDuplicates();\n  } else if (command === 'check') {\n    // Vérifier si un mot existe\n    if (args.length < 2) {\n      console.log('Usage: node vocabulary_manager.js check \"word\"');\n      return;\n    }\n    \n    const word = args[1];\n    await checkWordExists(word);\n  } else if (command === 'add') {\n    // Ajouter un nouveau mot\n    if (args.length < 5) {\n      console.log('Usage: node vocabulary_manager.js add \"word\" \"translation\" level category [example]');\n      console.log('Exemple: node vocabulary_manager.js add \"hello\" \"bonjour\" A1 01_basics \"Hello, how are you?\"');\n      return;\n    }\n    \n    const word = args[1];\n    const translation = args[2];\n    const level = args[3];\n    const category = args[4];\n    const example = args.length > 5 ? args[5] : \"\";\n    \n    await addNewWord(word, translation, level, category, example);\n  } else if (command === 'stats') {\n    // Afficher les statistiques sur les doublons\n    await displayDuplicateStats();\n  } else if (command === 'examples' || command === 'show-duplicates') {\n    // Afficher des exemples de doublons\n    await showDuplicateExamples();\n  } else {\n    // Afficher l'aide\n    console.log('GESTIONNAIRE DE VOCABULAIRE');\n    console.log('='.repeat(40));\n    console.log('\\nCommandes disponibles:');\n    console.log('  clean              - Supprimer tous les doublons');\n    console.log('  check \"word\"       - Vérifier si un mot existe déjà');\n    console.log('  stats              - Afficher les statistiques des doublons');\n    console.log('  examples           - Afficher des exemples de doublons');\n    console.log('  add \"word\" \"translation\" level category [example] - Ajouter un nouveau mot');\n    console.log('\\nExemples:');\n    console.log('  node vocabulary_manager.js clean');\n    console.log('  node vocabulary_manager.js check \"hello\"');\n    console.log('  node vocabulary_manager.js stats');\n    console.log('  node vocabulary_manager.js examples');\n    console.log('  node vocabulary_manager.js add \"hello\" \"bonjour\" A1 01_basics \"Hello, how are you?\"');\n  }\n}\n\n// Lancer le programme\nif (require.main === module) {\n  main().catch(error => {\n    console.error('Erreur:', error);\n  });\n}\n\nmodule.exports = {\n  checkWordExists,\n  addNewWord,\n  removeDuplicates,\n  displayDuplicateStats\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\word_counter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]