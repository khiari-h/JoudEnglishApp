{"version":3,"names":["_react","require","_reactNative","_expoRouter","_asyncStorage","_interopRequireDefault","_propTypes","_ThemeContext","_constants","_style","_jsxRuntime","QuickActions","_ref","_ref$currentLevel","currentLevel","themeContext","useContext","ThemeContext","colors","surface","text","textSecondary","_useState","useState","_useState2","_slicedToArray2","default","totalWords","setTotalWords","_useState3","_useState4","isLoading","setIsLoading","countWordsLearned","_ref2","_asyncToGenerator2","total","levels","level","storageKey","savedData","AsyncStorage","getItem","data","JSON","parse","completedWords","Object","values","reduce","sum","words","Array","isArray","length","levelError","console","warn","error","apply","arguments","useEffect","loadData","_ref3","count","navigateToVocabulary","router","push","pathname","EXERCISES","vocabulary","route","params","mode","navigateToRevision","Alert","alert","questionsCount","Math","min","source","navigateToTest","assessment","actions","id","icon","label","title","subtitle","action","color","disabled","jsxs","View","style","styles","container","children","jsx","Text","testID","sectionTitle","loadingText","actionsGrid","map","TouchableOpacity","actionButton","backgroundColor","actionButtonDisabled","onPress","activeOpacity","accessibilityRole","accessibilityLabel","accessibilityState","actionIcon","actionIconText","actionContent","actionLabel","actionSubtitle","arrow","propTypes","PropTypes","string","isRequired","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/screens/Dashboard/components/QuickActions/index.js - VERSION CORRIGÃ‰E\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport { View, Text, TouchableOpacity, Alert } from \"react-native\";\r\nimport { router } from \"expo-router\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport PropTypes from 'prop-types'; // âœ… Import de PropTypes\r\nimport { ThemeContext } from \"../../../../contexts/ThemeContext\";\r\nimport { EXERCISES } from \"../../../../utils/constants\";\r\nimport styles from \"./style\";\r\n\r\nconst QuickActions = ({ currentLevel = \"1\" }) => {\r\n  const themeContext = useContext(ThemeContext);\r\n  const colors = themeContext?.colors || {\r\n    surface: \"#FFFFFF\",\r\n    text: \"#1F2937\",\r\n    textSecondary: \"#6B7280\",\r\n  };\r\n\r\n  const [totalWords, setTotalWords] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // ========== COMPTAGE MOTS SIMPLES ==========\r\n  const countWordsLearned = async () => {\r\n    try {\r\n      let total = 0;\r\n      const levels = ['1', '2', '3', '4', '5', '6'];\r\n      \r\n      for (const level of levels) {\r\n        try {\r\n          const storageKey = `vocabulary_${level}_classic`;\r\n          const savedData = await AsyncStorage.getItem(storageKey);\r\n          \r\n          if (savedData) {\r\n            const data = JSON.parse(savedData);\r\n            const completedWords = data.completedWords || {};\r\n            \r\n            total += Object.values(completedWords).reduce((sum, words) => {\r\n              return sum + (Array.isArray(words) ? words.length : 0);\r\n            }, 0);\r\n          }\r\n        } catch (levelError) {\r\n          // âœ… Gestion d'erreur appropriÃ©e pour chaque niveau\r\n          console.warn(`Error counting words for level ${level}:`, levelError);\r\n          // Continue avec les autres niveaux\r\n        }\r\n      }\r\n      return total;\r\n    } catch (error) {\r\n      // âœ… Gestion d'erreur appropriÃ©e\r\n      console.error('Error counting total words learned:', error);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const count = await countWordsLearned();\r\n      setTotalWords(count);\r\n      setIsLoading(false);\r\n    };\r\n    loadData();\r\n  }, [currentLevel]);\r\n\r\n  // ========== NAVIGATION AVEC NOUVELLES CONSTANTES ==========\r\n  const navigateToVocabulary = () => {\r\n    router.push({\r\n      pathname: EXERCISES.vocabulary.route,\r\n      params: { level: currentLevel, mode: \"classic\" }\r\n    });\r\n  };\r\n\r\n  const navigateToRevision = () => {\r\n    if (totalWords < 10) {\r\n      Alert.alert(\"RÃ©vision\", \"Apprenez au moins 10 mots avant de rÃ©viser.\", [{ text: \"OK\" }]);\r\n      return;\r\n    }\r\n\r\n    router.push({\r\n      pathname: \"/tabs/vocabularyRevision\",\r\n      params: {\r\n        level: currentLevel,\r\n        questionsCount: Math.min(10, totalWords),\r\n        source: 'manual'\r\n      }\r\n    });\r\n  };\r\n\r\n  const navigateToTest = () => {\r\n    router.push({\r\n      pathname: EXERCISES.assessment.route,\r\n      params: { level: currentLevel }\r\n    });\r\n  };\r\n\r\n  // ========== ACTIONS AVEC NOUVELLES CONSTANTES ==========\r\n  const actions = [\r\n    {\r\n      id: 'vocabulary',\r\n      icon: EXERCISES.vocabulary.icon,\r\n      label: EXERCISES.vocabulary.title,\r\n      subtitle: 'Apprendre de nouveaux mots',\r\n      action: navigateToVocabulary,\r\n      color: EXERCISES.vocabulary.color\r\n    },\r\n    {\r\n      id: 'revision',\r\n      icon: 'ðŸ”„',\r\n      label: 'RÃ©vision',\r\n      subtitle: totalWords >= 10 ? `${totalWords} mots disponibles` : 'Apprenez plus de mots',\r\n      action: navigateToRevision,\r\n      color: totalWords >= 10 ? '#8B5CF6' : '#6B7280',\r\n      disabled: totalWords < 10\r\n    },\r\n    {\r\n      id: 'test',\r\n      icon: EXERCISES.assessment.icon,\r\n      label: EXERCISES.assessment.title,\r\n      subtitle: 'Ã‰valuer vos connaissances',\r\n      action: navigateToTest,\r\n      color: EXERCISES.assessment.color\r\n    }\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text testID=\"quick-actions-title\" style={[styles.sectionTitle, { color: colors.text }]}>\r\n          âš¡ Actions rapides\r\n        </Text>\r\n        <Text style={[styles.loadingText, { color: colors.textSecondary }]}>\r\n          Chargement...\r\n        </Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text testID=\"quick-actions-title\" style={[styles.sectionTitle, { color: colors.text }]}>\r\n        âš¡ Actions rapides\r\n      </Text>\r\n\r\n      <View style={styles.actionsGrid}>\r\n        {actions.map(action => (\r\n          <TouchableOpacity\r\n            key={action.id}\r\n            style={[\r\n              styles.actionButton,\r\n              { backgroundColor: colors.surface },\r\n              action.disabled && styles.actionButtonDisabled\r\n            ]}\r\n            onPress={action.action}\r\n            activeOpacity={0.7}\r\n            disabled={action.disabled}\r\n            accessibilityRole=\"button\"\r\n            accessibilityLabel={`${action.label} â€“ ${action.subtitle}`}\r\n            accessibilityState={{ disabled: !!action.disabled }}\r\n          >\r\n            <View style={[styles.actionIcon, { backgroundColor: `${action.color}15` }]}>\r\n              <Text style={styles.actionIconText}>{action.icon}</Text>\r\n            </View>\r\n            \r\n            <View style={styles.actionContent}>\r\n              <Text style={[styles.actionLabel, { color: colors.text }]}>\r\n                {action.label}\r\n              </Text>\r\n              <Text style={[styles.actionSubtitle, { color: colors.textSecondary }]}>\r\n                {action.subtitle}\r\n              </Text>\r\n            </View>\r\n\r\n            <Text style={[styles.arrow, { color: colors.textSecondary }]}>\r\n              â†’\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n// âœ… Ajout de la validation des props\r\nQuickActions.propTypes = {\r\n  currentLevel: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default QuickActions;"],"mappings":"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","ignoreList":[]}