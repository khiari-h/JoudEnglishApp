71e7d9d3f6e98d1a8aa081f65f8e587c
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
function cov_kcz69joke() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\index.js";
  var hash = "cbb85b89851f33f080b1b770da151042ea0ff0dc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\3\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 31,
          column: 18
        },
        end: {
          line: 56,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cbb85b89851f33f080b1b770da151042ea0ff0dc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_kcz69joke = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_kcz69joke();
import { CATEGORIES, DIFFICULTY, CATEGORY_DESCRIPTIONS, USAGE_NOTES, LEVEL_INFO, CONTENT_STATS, LEARNING_SEQUENCE } from './metadata.js';
import opinionsPreferences from './categories/opinions-preferences.js';
import pastExperiences from './categories/past-experiences.js';
import eventNarration from './categories/event-narration.js';
import adviceRecommendations from './categories/advice-recommendations.js';
import comparisonsContrasts from './categories/comparisons-contrasts.js';
import nuancedFeelings from './categories/nuanced-feelings.js';
import agreementsDisagreements from './categories/agreements-disagreements.js';
import formalRequests from './categories/formal-requests.js';
import professionalCommunication from './categories/professional-communication.js';
import cultureEntertainment from './categories/culture-entertainment.js';
import technology from './categories/technology.js';
import environmentSociety from './categories/environment-society.js';
var phrasesB1 = (cov_kcz69joke().s[0]++, {
  difficulty: DIFFICULTY,
  categoryDescriptions: CATEGORY_DESCRIPTIONS,
  usageNotes: USAGE_NOTES,
  levelInfo: LEVEL_INFO,
  contentStats: CONTENT_STATS,
  learningSequence: LEARNING_SEQUENCE,
  categories: CATEGORIES,
  phrases: [].concat(_toConsumableArray(opinionsPreferences), _toConsumableArray(pastExperiences), _toConsumableArray(eventNarration), _toConsumableArray(adviceRecommendations), _toConsumableArray(comparisonsContrasts), _toConsumableArray(nuancedFeelings), _toConsumableArray(agreementsDisagreements), _toConsumableArray(formalRequests), _toConsumableArray(professionalCommunication), _toConsumableArray(cultureEntertainment), _toConsumableArray(technology), _toConsumableArray(environmentSociety))
});
export default phrasesB1;
export { opinionsPreferences, pastExperiences, eventNarration, adviceRecommendations, comparisonsContrasts, nuancedFeelings, agreementsDisagreements, formalRequests, professionalCommunication, cultureEntertainment, technology, environmentSociety, CATEGORIES, DIFFICULTY, CATEGORY_DESCRIPTIONS, USAGE_NOTES, LEVEL_INFO, CONTENT_STATS, LEARNING_SEQUENCE };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDQVRFR09SSUVTIiwiRElGRklDVUxUWSIsIkNBVEVHT1JZX0RFU0NSSVBUSU9OUyIsIlVTQUdFX05PVEVTIiwiTEVWRUxfSU5GTyIsIkNPTlRFTlRfU1RBVFMiLCJMRUFSTklOR19TRVFVRU5DRSIsIm9waW5pb25zUHJlZmVyZW5jZXMiLCJwYXN0RXhwZXJpZW5jZXMiLCJldmVudE5hcnJhdGlvbiIsImFkdmljZVJlY29tbWVuZGF0aW9ucyIsImNvbXBhcmlzb25zQ29udHJhc3RzIiwibnVhbmNlZEZlZWxpbmdzIiwiYWdyZWVtZW50c0Rpc2FncmVlbWVudHMiLCJmb3JtYWxSZXF1ZXN0cyIsInByb2Zlc3Npb25hbENvbW11bmljYXRpb24iLCJjdWx0dXJlRW50ZXJ0YWlubWVudCIsInRlY2hub2xvZ3kiLCJlbnZpcm9ubWVudFNvY2lldHkiLCJwaHJhc2VzQjEiLCJjb3Zfa2N6Njlqb2tlIiwicyIsImRpZmZpY3VsdHkiLCJjYXRlZ29yeURlc2NyaXB0aW9ucyIsInVzYWdlTm90ZXMiLCJsZXZlbEluZm8iLCJjb250ZW50U3RhdHMiLCJsZWFybmluZ1NlcXVlbmNlIiwiY2F0ZWdvcmllcyIsInBocmFzZXMiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZGF0YS9leGVyY2lzZXMvcGhyYXNlcy9iMS9pbmRleC5qc1xuLy8gRmljaGllciBpbmRleCBwb3VyIGxlIG5pdmVhdSBCMVxuLy8gSW1wb3J0ZSB0b3V0ZXMgbGVzIGNhdMOpZ29yaWVzIGV0IGxlcyBleHBvcnRlIGNvbW1lIHVuIHNldWwgb2JqZXRcblxuaW1wb3J0IHsgQ0FURUdPUklFUywgRElGRklDVUxUWSwgQ0FURUdPUllfREVTQ1JJUFRJT05TLCBVU0FHRV9OT1RFUywgTEVWRUxfSU5GTywgQ09OVEVOVF9TVEFUUywgTEVBUk5JTkdfU0VRVUVOQ0UgfSBmcm9tICcuL21ldGFkYXRhLmpzJztcbmltcG9ydCBvcGluaW9uc1ByZWZlcmVuY2VzIGZyb20gJy4vY2F0ZWdvcmllcy9vcGluaW9ucy1wcmVmZXJlbmNlcy5qcyc7XG5pbXBvcnQgcGFzdEV4cGVyaWVuY2VzIGZyb20gJy4vY2F0ZWdvcmllcy9wYXN0LWV4cGVyaWVuY2VzLmpzJztcbmltcG9ydCBldmVudE5hcnJhdGlvbiBmcm9tICcuL2NhdGVnb3JpZXMvZXZlbnQtbmFycmF0aW9uLmpzJztcbmltcG9ydCBhZHZpY2VSZWNvbW1lbmRhdGlvbnMgZnJvbSAnLi9jYXRlZ29yaWVzL2FkdmljZS1yZWNvbW1lbmRhdGlvbnMuanMnO1xuaW1wb3J0IGNvbXBhcmlzb25zQ29udHJhc3RzIGZyb20gJy4vY2F0ZWdvcmllcy9jb21wYXJpc29ucy1jb250cmFzdHMuanMnO1xuaW1wb3J0IG51YW5jZWRGZWVsaW5ncyBmcm9tICcuL2NhdGVnb3JpZXMvbnVhbmNlZC1mZWVsaW5ncy5qcyc7XG5pbXBvcnQgYWdyZWVtZW50c0Rpc2FncmVlbWVudHMgZnJvbSAnLi9jYXRlZ29yaWVzL2FncmVlbWVudHMtZGlzYWdyZWVtZW50cy5qcyc7XG5pbXBvcnQgZm9ybWFsUmVxdWVzdHMgZnJvbSAnLi9jYXRlZ29yaWVzL2Zvcm1hbC1yZXF1ZXN0cy5qcyc7XG5pbXBvcnQgcHJvZmVzc2lvbmFsQ29tbXVuaWNhdGlvbiBmcm9tICcuL2NhdGVnb3JpZXMvcHJvZmVzc2lvbmFsLWNvbW11bmljYXRpb24uanMnO1xuaW1wb3J0IGN1bHR1cmVFbnRlcnRhaW5tZW50IGZyb20gJy4vY2F0ZWdvcmllcy9jdWx0dXJlLWVudGVydGFpbm1lbnQuanMnO1xuaW1wb3J0IHRlY2hub2xvZ3kgZnJvbSAnLi9jYXRlZ29yaWVzL3RlY2hub2xvZ3kuanMnO1xuaW1wb3J0IGVudmlyb25tZW50U29jaWV0eSBmcm9tICcuL2NhdGVnb3JpZXMvZW52aXJvbm1lbnQtc29jaWV0eS5qcyc7XG5cbi8qKlxuICogQ29udGllbnQgdG91dGVzIGxlcyBkb25uw6llcyBwb3VyIGxlcyBwaHJhc2VzIGRlIG5pdmVhdSBCMVxuICogQHR5cGVkZWYge09iamVjdH0gUGhyYXNlc0IxXG4gKiBAcHJvcGVydHkge0FycmF5PE9iamVjdD59IGNhdGVnb3JpZXMgLSBMaXN0ZSBkZXMgY2F0w6lnb3JpZXNcbiAqIEBwcm9wZXJ0eSB7QXJyYXk8T2JqZWN0Pn0gcGhyYXNlcyAtIExpc3RlIGNvbXBsw6h0ZSBkZXMgcGhyYXNlcyBkZSB0b3V0ZXMgbGVzIGNhdMOpZ29yaWVzXG4gKiBAcHJvcGVydHkge3N0cmluZ30gZGlmZmljdWx0eSAtIE5pdmVhdSBkZSBkaWZmaWN1bHTDqSBDRUNSXG4gKiBAcHJvcGVydHkge09iamVjdH0gY2F0ZWdvcnlEZXNjcmlwdGlvbnMgLSBEZXNjcmlwdGlvbnMgZMOpdGFpbGzDqWVzIGRlIGNoYXF1ZSBjYXTDqWdvcmllXG4gKiBAcHJvcGVydHkge09iamVjdH0gdXNhZ2VOb3RlcyAtIE5vdGVzIHN1ciBsJ3V0aWxpc2F0aW9uIGZvcm1lbGxlL2luZm9ybWVsbGVcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBsZXZlbEluZm8gLSBJbmZvcm1hdGlvbnMgc3VyIGxlIG5pdmVhdSBCMVxuICogQHByb3BlcnR5IHtPYmplY3R9IGNvbnRlbnRTdGF0cyAtIFN0YXRpc3RpcXVlcyBzdXIgbGUgY29udGVudVxuICogQHByb3BlcnR5IHtBcnJheTxzdHJpbmc+fSBsZWFybmluZ1NlcXVlbmNlIC0gU8OpcXVlbmNlIGQnYXBwcmVudGlzc2FnZSByZWNvbW1hbmTDqWVcbiAqL1xuY29uc3QgcGhyYXNlc0IxID0ge1xuICAvLyBNw6l0YWRvbm7DqWVzXG4gIGRpZmZpY3VsdHk6IERJRkZJQ1VMVFksXG4gIGNhdGVnb3J5RGVzY3JpcHRpb25zOiBDQVRFR09SWV9ERVNDUklQVElPTlMsXG4gIHVzYWdlTm90ZXM6IFVTQUdFX05PVEVTLFxuICBsZXZlbEluZm86IExFVkVMX0lORk8sXG4gIGNvbnRlbnRTdGF0czogQ09OVEVOVF9TVEFUUyxcbiAgbGVhcm5pbmdTZXF1ZW5jZTogTEVBUk5JTkdfU0VRVUVOQ0UsXG5cbiAgLy8gRG9ubsOpZXMgcHJpbmNpcGFsZXNcbiAgY2F0ZWdvcmllczogQ0FURUdPUklFUyxcbiAgcGhyYXNlczogW1xuICAgIC4uLm9waW5pb25zUHJlZmVyZW5jZXMsXG4gICAgLi4ucGFzdEV4cGVyaWVuY2VzLFxuICAgIC4uLmV2ZW50TmFycmF0aW9uLFxuICAgIC4uLmFkdmljZVJlY29tbWVuZGF0aW9ucyxcbiAgICAuLi5jb21wYXJpc29uc0NvbnRyYXN0cyxcbiAgICAuLi5udWFuY2VkRmVlbGluZ3MsXG4gICAgLi4uYWdyZWVtZW50c0Rpc2FncmVlbWVudHMsXG4gICAgLi4uZm9ybWFsUmVxdWVzdHMsXG4gICAgLi4ucHJvZmVzc2lvbmFsQ29tbXVuaWNhdGlvbixcbiAgICAuLi5jdWx0dXJlRW50ZXJ0YWlubWVudCxcbiAgICAuLi50ZWNobm9sb2d5LFxuICAgIC4uLmVudmlyb25tZW50U29jaWV0eVxuICBdXG59O1xuXG4vLyBFeHBvcnQgcHJpbmNpcGFsIChwb3VyIGltcG9ydCBkZWZhdWx0KVxuZXhwb3J0IGRlZmF1bHQgcGhyYXNlc0IxO1xuXG4vLyBFeHBvcnRzIG5vbW3DqXMgcG91ciBwZXJtZXR0cmUgZCdpbXBvcnRlciBkZXMgY2F0w6lnb3JpZXMgc3DDqWNpZmlxdWVzXG5leHBvcnQgeyBcbiAgb3BpbmlvbnNQcmVmZXJlbmNlcyxcbiAgcGFzdEV4cGVyaWVuY2VzLFxuICBldmVudE5hcnJhdGlvbixcbiAgYWR2aWNlUmVjb21tZW5kYXRpb25zLFxuICBjb21wYXJpc29uc0NvbnRyYXN0cyxcbiAgbnVhbmNlZEZlZWxpbmdzLFxuICBhZ3JlZW1lbnRzRGlzYWdyZWVtZW50cyxcbiAgZm9ybWFsUmVxdWVzdHMsXG4gIHByb2Zlc3Npb25hbENvbW11bmljYXRpb24sXG4gIGN1bHR1cmVFbnRlcnRhaW5tZW50LFxuICB0ZWNobm9sb2d5LFxuICBlbnZpcm9ubWVudFNvY2lldHksXG4gIENBVEVHT1JJRVMsXG4gIERJRkZJQ1VMVFksXG4gIENBVEVHT1JZX0RFU0NSSVBUSU9OUyxcbiAgVVNBR0VfTk9URVMsXG4gIExFVkVMX0lORk8sXG4gIENPTlRFTlRfU1RBVFMsXG4gIExFQVJOSU5HX1NFUVVFTkNFXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSUEsU0FBU0EsVUFBVSxFQUFFQyxVQUFVLEVBQUVDLHFCQUFxQixFQUFFQyxXQUFXLEVBQUVDLFVBQVUsRUFBRUMsYUFBYSxFQUFFQyxpQkFBaUIsUUFBUSxlQUFlO0FBQ3hJLE9BQU9DLG1CQUFtQixNQUFNLHNDQUFzQztBQUN0RSxPQUFPQyxlQUFlLE1BQU0sa0NBQWtDO0FBQzlELE9BQU9DLGNBQWMsTUFBTSxpQ0FBaUM7QUFDNUQsT0FBT0MscUJBQXFCLE1BQU0sd0NBQXdDO0FBQzFFLE9BQU9DLG9CQUFvQixNQUFNLHVDQUF1QztBQUN4RSxPQUFPQyxlQUFlLE1BQU0sa0NBQWtDO0FBQzlELE9BQU9DLHVCQUF1QixNQUFNLDBDQUEwQztBQUM5RSxPQUFPQyxjQUFjLE1BQU0saUNBQWlDO0FBQzVELE9BQU9DLHlCQUF5QixNQUFNLDRDQUE0QztBQUNsRixPQUFPQyxvQkFBb0IsTUFBTSx1Q0FBdUM7QUFDeEUsT0FBT0MsVUFBVSxNQUFNLDRCQUE0QjtBQUNuRCxPQUFPQyxrQkFBa0IsTUFBTSxxQ0FBcUM7QUFjcEUsSUFBTUMsU0FBUyxJQUFBQyxhQUFBLEdBQUFDLENBQUEsT0FBRztFQUVoQkMsVUFBVSxFQUFFckIsVUFBVTtFQUN0QnNCLG9CQUFvQixFQUFFckIscUJBQXFCO0VBQzNDc0IsVUFBVSxFQUFFckIsV0FBVztFQUN2QnNCLFNBQVMsRUFBRXJCLFVBQVU7RUFDckJzQixZQUFZLEVBQUVyQixhQUFhO0VBQzNCc0IsZ0JBQWdCLEVBQUVyQixpQkFBaUI7RUFHbkNzQixVQUFVLEVBQUU1QixVQUFVO0VBQ3RCNkIsT0FBTyxLQUFBQyxNQUFBLENBQUFDLGtCQUFBLENBQ0Z4QixtQkFBbUIsR0FBQXdCLGtCQUFBLENBQ25CdkIsZUFBZSxHQUFBdUIsa0JBQUEsQ0FDZnRCLGNBQWMsR0FBQXNCLGtCQUFBLENBQ2RyQixxQkFBcUIsR0FBQXFCLGtCQUFBLENBQ3JCcEIsb0JBQW9CLEdBQUFvQixrQkFBQSxDQUNwQm5CLGVBQWUsR0FBQW1CLGtCQUFBLENBQ2ZsQix1QkFBdUIsR0FBQWtCLGtCQUFBLENBQ3ZCakIsY0FBYyxHQUFBaUIsa0JBQUEsQ0FDZGhCLHlCQUF5QixHQUFBZ0Isa0JBQUEsQ0FDekJmLG9CQUFvQixHQUFBZSxrQkFBQSxDQUNwQmQsVUFBVSxHQUFBYyxrQkFBQSxDQUNWYixrQkFBa0I7QUFFekIsQ0FBQztBQUdELGVBQWVDLFNBQVM7QUFHeEIsU0FDRVosbUJBQW1CLEVBQ25CQyxlQUFlLEVBQ2ZDLGNBQWMsRUFDZEMscUJBQXFCLEVBQ3JCQyxvQkFBb0IsRUFDcEJDLGVBQWUsRUFDZkMsdUJBQXVCLEVBQ3ZCQyxjQUFjLEVBQ2RDLHlCQUF5QixFQUN6QkMsb0JBQW9CLEVBQ3BCQyxVQUFVLEVBQ1ZDLGtCQUFrQixFQUNsQmxCLFVBQVUsRUFDVkMsVUFBVSxFQUNWQyxxQkFBcUIsRUFDckJDLFdBQVcsRUFDWEMsVUFBVSxFQUNWQyxhQUFhLEVBQ2JDLGlCQUFpQiIsImlnbm9yZUxpc3QiOltdfQ==