41c97dc08dcb0137510ba1de0f4e4436
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _useButtonStyles = _interopRequireDefault(require("../../../src/components/ui/Button/useButtonStyles"));
describe('useButtonStyles', function () {
  describe('getSizeStyles', function () {
    it('should return small size styles', function () {
      var result = (0, _useButtonStyles.default)({
        size: 'small'
      });
      expect(result.sizeStyles).toEqual({
        button: expect.any(Object),
        text: expect.any(Object),
        iconSize: 16,
        loaderSize: 'small'
      });
    });
    it('should return medium size styles (default)', function () {
      var result = (0, _useButtonStyles.default)({});
      expect(result.sizeStyles).toEqual({
        button: expect.any(Object),
        text: expect.any(Object),
        iconSize: 20,
        loaderSize: 'small'
      });
    });
    it('should return large size styles', function () {
      var result = (0, _useButtonStyles.default)({
        size: 'large'
      });
      expect(result.sizeStyles).toEqual({
        button: expect.any(Object),
        text: expect.any(Object),
        iconSize: 24,
        loaderSize: 'large'
      });
    });
    it('should fallback to medium for invalid size', function () {
      var result = (0, _useButtonStyles.default)({
        size: 'invalid'
      });
      expect(result.sizeStyles.iconSize).toBe(20);
    });
  });
  describe('getVariantStyles - filled (default)', function () {
    it('should return filled styles for enabled state', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'filled',
        color: 'primary'
      });
      expect(result.variantStyles.button.backgroundColor).toBe('#5E60CE');
      expect(result.variantStyles.text.color).toBe('white');
      expect(result.variantStyles.icon).toBe('white');
    });
    it('should return filled styles for disabled state', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'filled',
        color: 'primary',
        disabled: true
      });
      expect(result.variantStyles.button.backgroundColor).toBe('#E5E7EB');
      expect(result.variantStyles.pressed.backgroundColor).toBe('#E5E7EB');
    });
  });
  describe('getVariantStyles - outlined', function () {
    it('should return outlined styles for enabled state', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'outlined',
        color: 'primary'
      });
      expect(result.variantStyles.button.backgroundColor).toBe('transparent');
      expect(result.variantStyles.button.borderWidth).toBe(1);
      expect(result.variantStyles.button.borderColor).toBe('#5E60CE');
      expect(result.variantStyles.text.color).toBe('#5E60CE');
      expect(result.variantStyles.icon).toBe('#5E60CE');
    });
    it('should return outlined styles for disabled state', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'outlined',
        color: 'primary',
        disabled: true
      });
      expect(result.variantStyles.button.borderColor).toBe('#D1D5DB');
      expect(result.variantStyles.text.color).toBe('#9CA3AF');
      expect(result.variantStyles.icon).toBe('#9CA3AF');
    });
  });
  describe('getVariantStyles - text', function () {
    it('should return text styles for enabled state', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'text',
        color: 'primary'
      });
      expect(result.variantStyles.button.backgroundColor).toBe('transparent');
      expect(result.variantStyles.button.borderWidth).toBe(0);
      expect(result.variantStyles.button.paddingHorizontal).toBe(12);
      expect(result.variantStyles.text.color).toBe('#5E60CE');
      expect(result.variantStyles.icon).toBe('#5E60CE');
    });
    it('should return text styles for disabled state', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'text',
        color: 'primary',
        disabled: true
      });
      expect(result.variantStyles.text.color).toBe('#9CA3AF');
      expect(result.variantStyles.icon).toBe('#9CA3AF');
    });
  });
  describe('getVariantStyles - tonal', function () {
    it('should return tonal styles for enabled state', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'tonal',
        color: 'primary'
      });
      expect(result.variantStyles.button.backgroundColor).toBe('#5E60CE15');
      expect(result.variantStyles.button.borderWidth).toBe(0);
      expect(result.variantStyles.text.color).toBe('#5E60CE');
      expect(result.variantStyles.icon).toBe('#5E60CE');
    });
    it('should return tonal styles for disabled state', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'tonal',
        color: 'primary',
        disabled: true
      });
      expect(result.variantStyles.button.backgroundColor).toBe('#F3F4F6');
      expect(result.variantStyles.text.color).toBe('#9CA3AF');
      expect(result.variantStyles.icon).toBe('#9CA3AF');
    });
  });
  describe('getVariantStyles - icon', function () {
    it('should return icon styles for enabled state', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'icon',
        color: 'primary',
        size: 'large'
      });
      expect(result.variantStyles.button.backgroundColor).toBe('transparent');
      expect(result.variantStyles.button.borderWidth).toBe(0);
      expect(result.variantStyles.button.padding).toBe(0);
      expect(result.variantStyles.button.minWidth).toBe(0);
      expect(result.variantStyles.button.minHeight).toBe(0);
      expect(result.variantStyles.icon.fontSize).toBe(24);
      expect(result.variantStyles.icon.color).toBe('primary');
    });
    it('should return icon styles for disabled state', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'icon',
        color: 'primary',
        disabled: true
      });
      expect(result.variantStyles.button.backgroundColor).toBe('#F3F4F6');
      expect(result.variantStyles.icon.color).toBe('#A1A1AA');
    });
    it('should use correct icon size based on button size', function () {
      var smallResult = (0, _useButtonStyles.default)({
        variant: 'icon',
        size: 'small'
      });
      var mediumResult = (0, _useButtonStyles.default)({
        variant: 'icon',
        size: 'medium'
      });
      var largeResult = (0, _useButtonStyles.default)({
        variant: 'icon',
        size: 'large'
      });
      expect(smallResult.variantStyles.icon.fontSize).toBe(16);
      expect(mediumResult.variantStyles.icon.fontSize).toBe(20);
      expect(largeResult.variantStyles.icon.fontSize).toBe(24);
    });
  });
  describe('color handling', function () {
    it('should handle all color variants', function () {
      var colors = ['primary', 'secondary', 'success', 'warning', 'danger', 'info'];
      colors.forEach(function (color) {
        var result = (0, _useButtonStyles.default)({
          color: color,
          variant: 'filled'
        });
        expect(result.baseColor).toBeTruthy();
        expect(typeof result.baseColor).toBe('string');
      });
    });
    it('should fallback to primary for invalid color', function () {
      var result = (0, _useButtonStyles.default)({
        color: 'invalid',
        variant: 'filled'
      });
      expect(result.baseColor).toBe('#5E60CE');
    });
  });
  describe('elevation and rounded', function () {
    it('should apply elevation only for filled variant when enabled', function () {
      var withElevation = (0, _useButtonStyles.default)({
        elevation: true,
        variant: 'filled'
      });
      var withoutElevation = (0, _useButtonStyles.default)({
        elevation: false,
        variant: 'filled'
      });
      var outlinedWithElevation = (0, _useButtonStyles.default)({
        elevation: true,
        variant: 'outlined'
      });
      var disabledWithElevation = (0, _useButtonStyles.default)({
        elevation: true,
        variant: 'filled',
        disabled: true
      });
      expect(withElevation.elevationStyle).toBeTruthy();
      expect(withoutElevation.elevationStyle).toEqual({});
      expect(outlinedWithElevation.elevationStyle).toEqual({});
      expect(disabledWithElevation.elevationStyle).toEqual({});
    });
    it('should apply rounded styles when requested', function () {
      var rounded = (0, _useButtonStyles.default)({
        rounded: true
      });
      var notRounded = (0, _useButtonStyles.default)({
        rounded: false
      });
      expect(rounded.radiusStyle).toBeTruthy();
      expect(notRounded.radiusStyle).toEqual({});
    });
  });
  describe('fullWidth', function () {
    it('should apply fullWidth styles when requested', function () {
      var fullWidth = (0, _useButtonStyles.default)({
        fullWidth: true
      });
      var notFullWidth = (0, _useButtonStyles.default)({
        fullWidth: false
      });
      expect(fullWidth.fullWidthStyle).toBeTruthy();
      expect(notFullWidth.fullWidthStyle).toBeNull();
    });
  });
  describe('integration - all props together', function () {
    it('should handle complex configuration correctly', function () {
      var result = (0, _useButtonStyles.default)({
        variant: 'outlined',
        size: 'large',
        color: 'success',
        disabled: false,
        elevation: true,
        rounded: true,
        fullWidth: true
      });
      expect(result.baseColor).toBe('#10B981');
      expect(result.sizeStyles.iconSize).toBe(24);
      expect(result.variantStyles.button.backgroundColor).toBe('transparent');
      expect(result.variantStyles.button.borderColor).toBe('#10B981');
      expect(result.elevationStyle).toEqual({});
      expect(result.radiusStyle).toBeTruthy();
      expect(result.fullWidthStyle).toBeTruthy();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,