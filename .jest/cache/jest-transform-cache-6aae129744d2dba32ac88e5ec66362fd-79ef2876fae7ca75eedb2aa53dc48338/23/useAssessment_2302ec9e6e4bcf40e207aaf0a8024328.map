{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","_assessmentDataHelper","useAssessment","_currentSectionData$q","_currentSectionData$q2","level","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray2","default","currentSection","setCurrentSection","_useState3","_useState4","currentQuestionIndex","setCurrentQuestionIndex","_useState5","_useState6","selectedAnswer","setSelectedAnswer","_useState7","_useState8","showFeedback","setShowFeedback","_useState9","_useState0","testCompleted","setTestCompleted","_useState1","_useState10","userAnswers","setUserAnswers","_useState11","_useState12","assessmentResults","setAssessmentResults","_useState13","sectionIndex","questionIndex","_useState14","lastPosition","setLastPosition","_useState15","_useState16","loaded","setLoaded","isInitialized","useRef","assessmentData","getAssessmentData","sections","getAssessmentSections","currentSectionData","title","questions","currentQuestion","text","options","correctAnswer","totalSections","totalQuestionsInSection","STORAGE_KEY","RESULTS_KEY","ANSWERS_KEY","useEffect","loadData","_ref","_asyncToGenerator2","savedPosition","AsyncStorage","getItem","_JSON$parse","JSON","parse","savedAnswers","savedResults","results","completedAt","error","apply","saveData","useCallback","dataToSave","indexOf","timestamp","Date","now","setItem","stringify","current","changeSection","sectionKey","includes","changeQuestion","handleSelectAnswer","answerIndex","validateAnswer","isCorrect","prev","Object","assign","_defineProperty2","tryAgain","handleNext","currentSectionIndex","isLastSection","isLastQuestion","completed","nextSectionIndex","handlePrevious","_prevSectionData$ques","prevSection","prevSectionData","lastQuestionIndex","saveAssessmentResults","_ref3","resultsWithTimestamp","toISOString","_x","resetAssessment","multiRemove","getStats","totalQuestions","reduce","sum","_assessmentData$secti","correctAnswers","answeredQuestions","values","forEach","section","answer","answeredInCurrentSection","keys","percentage","getDisplayData","sectionTitle","questionNumber","canGoToPrevious","isLastQuestionInSection","stats","display","_default","exports"],"sources":["useAssessment.js"],"sourcesContent":["// hooks/useAssessment.js - HOOK UNIFI√â SIMPLE\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { getAssessmentData, getAssessmentSections } from '../../../../utils/assessment/assessmentDataHelper';\r\n\r\n/**\r\n * üéØ Hook unifi√© pour Level Assessment\r\n * Remplace useAssessmentState + useAssessmentProgress\r\n * Simple, efficace, maintenable - pattern identique √† useVocabulary\r\n */\r\nconst useAssessment = (level = \"A1\") => {\r\n  \r\n  // =================== CORE STATE ===================\r\n  const [currentSection, setCurrentSection] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [testCompleted, setTestCompleted] = useState(false);\r\n  const [userAnswers, setUserAnswers] = useState({});\r\n  const [assessmentResults, setAssessmentResults] = useState({});\r\n  const [lastPosition, setLastPosition] = useState({ sectionIndex: 0, questionIndex: 0 });\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  // =================== REFS ===================\r\n  const isInitialized = useRef(false);\r\n\r\n  // =================== COMPUTED VALUES ===================\r\n  const assessmentData = getAssessmentData(level);\r\n  const sections = getAssessmentSections();\r\n  const currentSectionData = assessmentData[currentSection] || { title: \"\", questions: [] };\r\n  const currentQuestion = currentSectionData.questions?.[currentQuestionIndex] || { text: \"\", options: [], correctAnswer: 0 };\r\n  const totalSections = sections.length;\r\n  const totalQuestionsInSection = currentSectionData.questions?.length || 0;\r\n  \r\n  // =================== PERSISTENCE ===================\r\n  const STORAGE_KEY = `assessment_${level}`;\r\n  const RESULTS_KEY = `assessment_results_${level}`;\r\n  const ANSWERS_KEY = `assessment_answers_${level}`;\r\n\r\n  // Load data from storage\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        // Charger position\r\n        const savedPosition = await AsyncStorage.getItem(STORAGE_KEY);\r\n        if (savedPosition) {\r\n          const { sectionIndex, questionIndex } = JSON.parse(savedPosition);\r\n          setLastPosition({ sectionIndex, questionIndex });\r\n        }\r\n\r\n        // Charger r√©ponses\r\n        const savedAnswers = await AsyncStorage.getItem(ANSWERS_KEY);\r\n        if (savedAnswers) {\r\n          setUserAnswers(JSON.parse(savedAnswers));\r\n        }\r\n\r\n        // Charger r√©sultats\r\n        const savedResults = await AsyncStorage.getItem(RESULTS_KEY);\r\n        if (savedResults) {\r\n          const results = JSON.parse(savedResults);\r\n          setAssessmentResults(results);\r\n          if (results.completedAt) {\r\n            setTestCompleted(true);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // Ignored on purpose\r\n      } finally {\r\n        setLoaded(true);\r\n      }\r\n    };\r\n    loadData();\r\n  }, [level]);\r\n\r\n  // Save data to storage\r\n  const saveData = useCallback(async () => {\r\n    try {\r\n      // Sauvegarder position\r\n      const dataToSave = {\r\n        sectionIndex: sections.indexOf(currentSection),\r\n        questionIndex: currentQuestionIndex,\r\n        timestamp: Date.now()\r\n      };\r\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\r\n\r\n      // Sauvegarder r√©ponses\r\n      await AsyncStorage.setItem(ANSWERS_KEY, JSON.stringify(userAnswers));\r\n    } catch (error) {\r\n      // Ignored on purpose\r\n    }\r\n  }, [currentSection, currentQuestionIndex, userAnswers, sections, STORAGE_KEY, ANSWERS_KEY]);\r\n\r\n  // Auto-save when data changes\r\n  useEffect(() => {\r\n    if (loaded && currentSection) saveData();\r\n  }, [saveData, loaded, currentSection]);\r\n\r\n  // Initialize first section\r\n  useEffect(() => {\r\n    if (loaded && !currentSection && sections.length > 0 && !isInitialized.current) {\r\n      // Restaurer position ou commencer au d√©but\r\n      if (lastPosition && sections[lastPosition.sectionIndex]) {\r\n        setCurrentSection(sections[lastPosition.sectionIndex]);\r\n        setCurrentQuestionIndex(lastPosition.questionIndex);\r\n      } else {\r\n        setCurrentSection(sections[0]);\r\n        setCurrentQuestionIndex(0);\r\n      }\r\n      isInitialized.current = true;\r\n    }\r\n  }, [loaded, currentSection, sections, lastPosition]);\r\n\r\n  // =================== NAVIGATION ACTIONS ===================\r\n  const changeSection = useCallback((sectionKey) => {\r\n    if (sections.includes(sectionKey)) {\r\n      setCurrentSection(sectionKey);\r\n      setCurrentQuestionIndex(0);\r\n      setSelectedAnswer(null);\r\n      setShowFeedback(false);\r\n    }\r\n  }, [sections]);\r\n\r\n  const changeQuestion = useCallback((questionIndex) => {\r\n    if (questionIndex >= 0 && questionIndex < totalQuestionsInSection) {\r\n      setCurrentQuestionIndex(questionIndex);\r\n      setSelectedAnswer(null);\r\n      setShowFeedback(false);\r\n    }\r\n  }, [totalQuestionsInSection]);\r\n\r\n  const handleSelectAnswer = useCallback((answerIndex) => {\r\n    if (!showFeedback) {\r\n      setSelectedAnswer(answerIndex);\r\n    }\r\n  }, [showFeedback]);\r\n\r\n  const validateAnswer = useCallback(() => {\r\n    if (selectedAnswer !== null && !showFeedback) {\r\n      setShowFeedback(true);\r\n      \r\n      // Sauvegarder la r√©ponse\r\n      const isCorrect = selectedAnswer === currentQuestion.correctAnswer;\r\n      setUserAnswers(prev => ({\r\n        ...prev,\r\n        [currentSection]: {\r\n          ...prev[currentSection],\r\n          [currentQuestionIndex]: {\r\n            selectedAnswer,\r\n            isCorrect,\r\n            timestamp: Date.now()\r\n          }\r\n        }\r\n      }));\r\n    }\r\n  }, [selectedAnswer, showFeedback, currentQuestion, currentSection, currentQuestionIndex]);\r\n\r\n  const tryAgain = useCallback(() => {\r\n    setSelectedAnswer(null);\r\n    setShowFeedback(false);\r\n  }, []);\r\n\r\n  // =================== MAIN NAVIGATION ===================\r\n  const handleNext = useCallback(() => {\r\n    // V√©rifier si fin de l'√©valuation\r\n    const currentSectionIndex = sections.indexOf(currentSection);\r\n    const isLastSection = currentSectionIndex === sections.length - 1;\r\n    const isLastQuestion = currentQuestionIndex === totalQuestionsInSection - 1;\r\n\r\n    if (isLastSection && isLastQuestion) {\r\n      // Calculer et sauvegarder r√©sultats finaux\r\n      setTestCompleted(true);\r\n      return { completed: true };\r\n    }\r\n\r\n    // Navigation normale\r\n    if (currentQuestionIndex < totalQuestionsInSection - 1) {\r\n      // Question suivante dans la section\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    } else {\r\n      // Section suivante\r\n      const nextSectionIndex = currentSectionIndex + 1;\r\n      if (nextSectionIndex < sections.length) {\r\n        setCurrentSection(sections[nextSectionIndex]);\r\n        setCurrentQuestionIndex(0);\r\n      }\r\n    }\r\n    \r\n    setSelectedAnswer(null);\r\n    setShowFeedback(false);\r\n    return { completed: false };\r\n  }, [sections, currentSection, currentQuestionIndex, totalQuestionsInSection]);\r\n\r\n  const handlePrevious = useCallback(() => {\r\n    if (currentQuestionIndex > 0) {\r\n      // Question pr√©c√©dente dans la section\r\n      setCurrentQuestionIndex(prev => prev - 1);\r\n    } else {\r\n      // Section pr√©c√©dente\r\n      const currentSectionIndex = sections.indexOf(currentSection);\r\n      if (currentSectionIndex > 0) {\r\n        const prevSection = sections[currentSectionIndex - 1];\r\n        const prevSectionData = assessmentData[prevSection];\r\n        const lastQuestionIndex = (prevSectionData.questions?.length || 1) - 1;\r\n        \r\n        setCurrentSection(prevSection);\r\n        setCurrentQuestionIndex(lastQuestionIndex);\r\n      }\r\n    }\r\n    \r\n    setSelectedAnswer(null);\r\n    setShowFeedback(false);\r\n  }, [currentQuestionIndex, sections, currentSection, assessmentData]);\r\n\r\n  // =================== COMPLETION LOGIC ===================\r\n  const saveAssessmentResults = useCallback(async (results) => {\r\n    try {\r\n      const resultsWithTimestamp = {\r\n        ...results,\r\n        completedAt: new Date().toISOString(),\r\n        timestamp: Date.now(),\r\n      };\r\n      setAssessmentResults(resultsWithTimestamp);\r\n      await AsyncStorage.setItem(RESULTS_KEY, JSON.stringify(resultsWithTimestamp));\r\n    } catch (error) {\r\n      // Ignored on purpose\r\n    }\r\n  }, [RESULTS_KEY]);\r\n\r\n  const resetAssessment = useCallback(async () => {\r\n    try {\r\n      await AsyncStorage.multiRemove([STORAGE_KEY, RESULTS_KEY, ANSWERS_KEY]);\r\n      setCurrentSection(sections[0]);\r\n      setCurrentQuestionIndex(0);\r\n      setSelectedAnswer(null);\r\n      setShowFeedback(false);\r\n      setTestCompleted(false);\r\n      setUserAnswers({});\r\n      setAssessmentResults({});\r\n      setLastPosition({ sectionIndex: 0, questionIndex: 0 });\r\n    } catch (error) {\r\n      // Ignored on purpose\r\n    }\r\n  }, [STORAGE_KEY, RESULTS_KEY, ANSWERS_KEY, sections]);\r\n\r\n  // =================== COMPUTED STATS ===================\r\n  const getStats = useCallback(() => {\r\n    const totalQuestions = sections.reduce((sum, sectionKey) => {\r\n      return sum + (assessmentData[sectionKey]?.questions?.length || 0);\r\n    }, 0);\r\n\r\n    let correctAnswers = 0;\r\n    let answeredQuestions = 0;\r\n\r\n    Object.values(userAnswers).forEach(section => {\r\n      Object.values(section).forEach(answer => {\r\n        answeredQuestions++;\r\n        if (answer.isCorrect) {\r\n          correctAnswers++;\r\n        }\r\n      });\r\n    });\r\n\r\n    const currentSectionIndex = sections.indexOf(currentSection) + 1;\r\n    const answeredInCurrentSection = Object.keys(userAnswers[currentSection] || {}).length;\r\n\r\n    return {\r\n      totalQuestions,\r\n      answeredQuestions,\r\n      correctAnswers,\r\n      totalSections,\r\n      currentSectionIndex,\r\n      totalQuestionsInSection,\r\n      answeredInCurrentSection,\r\n      percentage: answeredQuestions > 0 ? (correctAnswers / answeredQuestions) * 100 : 0\r\n    };\r\n  }, [sections, assessmentData, userAnswers, currentSection, totalQuestionsInSection]);\r\n\r\n  // =================== COMPUTED DISPLAY ===================\r\n  const getDisplayData = useCallback(() => {\r\n    const currentSectionIndex = sections.indexOf(currentSection) + 1;\r\n    const sectionTitle = currentSectionData.title || `Section ${currentSectionIndex}`;\r\n    const questionNumber = currentQuestionIndex + 1;\r\n\r\n    return {\r\n      currentSectionIndex,\r\n      sectionTitle,\r\n      questionNumber,\r\n      currentQuestion,\r\n      currentSectionData\r\n    };\r\n  }, [sections, currentSection, currentSectionData, currentQuestionIndex, currentQuestion]);\r\n\r\n  // =================== VALIDATION ===================\r\n  const canGoToPrevious = useCallback(() => {\r\n    if (currentQuestionIndex > 0) return true;\r\n    return sections.indexOf(currentSection) > 0;\r\n  }, [currentQuestionIndex, sections, currentSection]);\r\n\r\n  const isLastQuestionInSection = currentQuestionIndex === totalQuestionsInSection - 1;\r\n  const isLastSection = sections.indexOf(currentSection) === sections.length - 1;\r\n\r\n  return {\r\n    // State\r\n    currentSection,\r\n    currentQuestionIndex,\r\n    selectedAnswer,\r\n    showFeedback,\r\n    testCompleted,\r\n    userAnswers,\r\n    assessmentResults,\r\n    loaded,\r\n    \r\n    // Data\r\n    currentQuestion,\r\n    currentSectionData,\r\n    totalSections,\r\n    totalQuestionsInSection,\r\n    \r\n    // Actions\r\n    changeSection,\r\n    changeQuestion,\r\n    handleSelectAnswer,\r\n    validateAnswer,\r\n    tryAgain,\r\n    handleNext,\r\n    handlePrevious,\r\n    saveAssessmentResults,\r\n    resetAssessment,\r\n    setTestCompleted,\r\n    \r\n    // Computed\r\n    canGoToPrevious: canGoToPrevious(),\r\n    isLastQuestionInSection,\r\n    isLastSection,\r\n    stats: getStats(),\r\n    display: getDisplayData(),\r\n  };\r\n};\r\n\r\nexport default useAssessment;"],"mappings":"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","ignoreList":[]}