dfca9b3e6ad07921ceaa1ce8b101cc2f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useProgressAnimation;
var _react = require("react");
var _reactNative = require("react-native");
function cov_1verctetzu() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ProgressBar\\useProgressAnimation.js";
  var hash = "ce209cf70a6d38bcf0a4e4a102ab0469dac363a7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ProgressBar\\useProgressAnimation.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 18
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "1": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 11,
          column: 61
        }
      },
      "2": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "3": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "4": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 19,
          column: 17
        }
      },
      "5": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 21,
          column: 38
        }
      },
      "6": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 28,
          column: 4
        }
      },
      "7": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 30,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "useProgressAnimation",
        decl: {
          start: {
            line: 5,
            column: 24
          },
          end: {
            line: 5,
            column: 44
          }
        },
        loc: {
          start: {
            line: 9,
            column: 3
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 13
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 23,
            column: 3
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 6,
            column: 14
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 6,
            column: 13
          },
          end: {
            line: 6,
            column: 14
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 7,
            column: 13
          },
          end: {
            line: 7,
            column: 17
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 13
          },
          end: {
            line: 8,
            column: 16
          }
        }],
        line: 8
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        }, {
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 22,
            column: 5
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ce209cf70a6d38bcf0a4e4a102ab0469dac363a7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1verctetzu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1verctetzu();
function useProgressAnimation(_ref) {
  var _ref$progress = _ref.progress,
    progress = _ref$progress === void 0 ? (cov_1verctetzu().b[0][0]++, 0) : _ref$progress,
    _ref$animated = _ref.animated,
    animated = _ref$animated === void 0 ? (cov_1verctetzu().b[1][0]++, true) : _ref$animated,
    _ref$duration = _ref.duration,
    duration = _ref$duration === void 0 ? (cov_1verctetzu().b[2][0]++, 600) : _ref$duration;
  cov_1verctetzu().f[0]++;
  var clamped = (cov_1verctetzu().s[0]++, Math.min(Math.max(progress, 0), 100));
  var animatedValue = (cov_1verctetzu().s[1]++, (0, _react.useRef)(new _reactNative.Animated.Value(0)).current);
  cov_1verctetzu().s[2]++;
  (0, _react.useEffect)(function () {
    cov_1verctetzu().f[1]++;
    cov_1verctetzu().s[3]++;
    if (animated) {
      cov_1verctetzu().b[3][0]++;
      cov_1verctetzu().s[4]++;
      _reactNative.Animated.timing(animatedValue, {
        toValue: clamped,
        duration: duration,
        useNativeDriver: false
      }).start();
    } else {
      cov_1verctetzu().b[3][1]++;
      cov_1verctetzu().s[5]++;
      animatedValue.setValue(clamped);
    }
  }, [clamped, animated, duration, animatedValue]);
  var width = (cov_1verctetzu().s[6]++, animatedValue.interpolate({
    inputRange: [0, 100],
    outputRange: ["0%", "100%"]
  }));
  cov_1verctetzu().s[7]++;
  return {
    width: width
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0TmF0aXZlIiwiY292XzF2ZXJjdGV0enUiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInR5cGUiLCJsb2NhdGlvbnMiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwidXNlUHJvZ3Jlc3NBbmltYXRpb24iLCJfcmVmIiwiX3JlZiRwcm9ncmVzcyIsInByb2dyZXNzIiwiX3JlZiRhbmltYXRlZCIsImFuaW1hdGVkIiwiX3JlZiRkdXJhdGlvbiIsImR1cmF0aW9uIiwiY2xhbXBlZCIsIk1hdGgiLCJtaW4iLCJtYXgiLCJhbmltYXRlZFZhbHVlIiwidXNlUmVmIiwiQW5pbWF0ZWQiLCJWYWx1ZSIsImN1cnJlbnQiLCJ1c2VFZmZlY3QiLCJ0aW1pbmciLCJ0b1ZhbHVlIiwidXNlTmF0aXZlRHJpdmVyIiwic2V0VmFsdWUiLCJ3aWR0aCIsImludGVycG9sYXRlIiwiaW5wdXRSYW5nZSIsIm91dHB1dFJhbmdlIl0sInNvdXJjZXMiOlsidXNlUHJvZ3Jlc3NBbmltYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NvbXBvbmVudHMvdWkvUHJvZ3Jlc3NCYXIvdXNlUHJvZ3Jlc3NBbmltYXRpb24uanNcclxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgQW5pbWF0ZWQgfSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VQcm9ncmVzc0FuaW1hdGlvbih7XHJcbiAgcHJvZ3Jlc3MgPSAwLFxyXG4gIGFuaW1hdGVkID0gdHJ1ZSxcclxuICBkdXJhdGlvbiA9IDYwMCxcclxufSkge1xyXG4gIGNvbnN0IGNsYW1wZWQgPSBNYXRoLm1pbihNYXRoLm1heChwcm9ncmVzcywgMCksIDEwMCk7XHJcbiAgY29uc3QgYW5pbWF0ZWRWYWx1ZSA9IHVzZVJlZihuZXcgQW5pbWF0ZWQuVmFsdWUoMCkpLmN1cnJlbnQ7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAoYW5pbWF0ZWQpIHtcclxuICAgICAgQW5pbWF0ZWQudGltaW5nKGFuaW1hdGVkVmFsdWUsIHtcclxuICAgICAgICB0b1ZhbHVlOiBjbGFtcGVkLFxyXG4gICAgICAgIGR1cmF0aW9uLFxyXG4gICAgICAgIHVzZU5hdGl2ZURyaXZlcjogZmFsc2UsXHJcbiAgICAgIH0pLnN0YXJ0KCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhbmltYXRlZFZhbHVlLnNldFZhbHVlKGNsYW1wZWQpO1xyXG4gICAgfVxyXG4gIH0sIFtjbGFtcGVkLCBhbmltYXRlZCwgZHVyYXRpb24sIGFuaW1hdGVkVmFsdWVdKTtcclxuXHJcbiAgY29uc3Qgd2lkdGggPSBhbmltYXRlZFZhbHVlLmludGVycG9sYXRlKHtcclxuICAgIGlucHV0UmFuZ2U6IFswLCAxMDBdLFxyXG4gICAgb3V0cHV0UmFuZ2U6IFtcIjAlXCIsIFwiMTAwJVwiXSxcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHsgd2lkdGggfTtcclxufVxyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUF3QyxTQUFBRSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBVSxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBcEIsSUFBQTtFQUFBO0VBQUEsSUFBQXFCLFFBQUEsR0FBQXBCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBa0IsUUFBQSxDQUFBdEIsSUFBQSxLQUFBc0IsUUFBQSxDQUFBdEIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQXFCLFFBQUEsQ0FBQXRCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQWtCLGNBQUEsR0FBQUQsUUFBQSxDQUFBdEIsSUFBQTtFQUFBO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUF3QixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBeEIsY0FBQTtBQUV6QixTQUFTeUIsb0JBQW9CQSxDQUFBQyxJQUFBLEVBSXpDO0VBQUEsSUFBQUMsYUFBQSxHQUFBRCxJQUFBLENBSERFLFFBQVE7SUFBUkEsUUFBUSxHQUFBRCxhQUFBLGVBQUEzQixjQUFBLEdBQUFxQixDQUFBLFVBQUcsQ0FBQyxJQUFBTSxhQUFBO0lBQUFFLGFBQUEsR0FBQUgsSUFBQSxDQUNaSSxRQUFRO0lBQVJBLFFBQVEsR0FBQUQsYUFBQSxlQUFBN0IsY0FBQSxHQUFBcUIsQ0FBQSxVQUFHLElBQUksSUFBQVEsYUFBQTtJQUFBRSxhQUFBLEdBQUFMLElBQUEsQ0FDZk0sUUFBUTtJQUFSQSxRQUFRLEdBQUFELGFBQUEsZUFBQS9CLGNBQUEsR0FBQXFCLENBQUEsVUFBRyxHQUFHLElBQUFVLGFBQUE7RUFBQS9CLGNBQUEsR0FBQW9CLENBQUE7RUFFZCxJQUFNYSxPQUFPLElBQUFqQyxjQUFBLEdBQUFtQixDQUFBLE9BQUdlLElBQUksQ0FBQ0MsR0FBRyxDQUFDRCxJQUFJLENBQUNFLEdBQUcsQ0FBQ1IsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztFQUNwRCxJQUFNUyxhQUFhLElBQUFyQyxjQUFBLEdBQUFtQixDQUFBLE9BQUcsSUFBQW1CLGFBQU0sRUFBQyxJQUFJQyxxQkFBUSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsT0FBTztFQUFDekMsY0FBQSxHQUFBbUIsQ0FBQTtFQUU1RCxJQUFBdUIsZ0JBQVMsRUFBQyxZQUFNO0lBQUExQyxjQUFBLEdBQUFvQixDQUFBO0lBQUFwQixjQUFBLEdBQUFtQixDQUFBO0lBQ2QsSUFBSVcsUUFBUSxFQUFFO01BQUE5QixjQUFBLEdBQUFxQixDQUFBO01BQUFyQixjQUFBLEdBQUFtQixDQUFBO01BQ1pvQixxQkFBUSxDQUFDSSxNQUFNLENBQUNOLGFBQWEsRUFBRTtRQUM3Qk8sT0FBTyxFQUFFWCxPQUFPO1FBQ2hCRCxRQUFRLEVBQVJBLFFBQVE7UUFDUmEsZUFBZSxFQUFFO01BQ25CLENBQUMsQ0FBQyxDQUFDckMsS0FBSyxDQUFDLENBQUM7SUFDWixDQUFDLE1BQU07TUFBQVIsY0FBQSxHQUFBcUIsQ0FBQTtNQUFBckIsY0FBQSxHQUFBbUIsQ0FBQTtNQUNMa0IsYUFBYSxDQUFDUyxRQUFRLENBQUNiLE9BQU8sQ0FBQztJQUNqQztFQUNGLENBQUMsRUFBRSxDQUFDQSxPQUFPLEVBQUVILFFBQVEsRUFBRUUsUUFBUSxFQUFFSyxhQUFhLENBQUMsQ0FBQztFQUVoRCxJQUFNVSxLQUFLLElBQUEvQyxjQUFBLEdBQUFtQixDQUFBLE9BQUdrQixhQUFhLENBQUNXLFdBQVcsQ0FBQztJQUN0Q0MsVUFBVSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztJQUNwQkMsV0FBVyxFQUFFLENBQUMsSUFBSSxFQUFFLE1BQU07RUFDNUIsQ0FBQyxDQUFDO0VBQUNsRCxjQUFBLEdBQUFtQixDQUFBO0VBRUgsT0FBTztJQUFFNEIsS0FBSyxFQUFMQTtFQUFNLENBQUM7QUFDbEIiLCJpZ25vcmVMaXN0IjpbXX0=