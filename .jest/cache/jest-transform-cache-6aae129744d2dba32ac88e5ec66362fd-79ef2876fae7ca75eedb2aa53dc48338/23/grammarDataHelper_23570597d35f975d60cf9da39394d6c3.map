{"version":3,"names":["_A","_interopRequireDefault","require","_A2","_B","_B2","_C","_C2","getGrammarData","exports","level","dataMap","A1","grammarA1","A2","grammarA2","B1","grammarB1","B2","grammarB2","C1","grammarC1","C2","grammarC2","loadGrammarData","_ref","_asyncToGenerator2","default","loaders","load","mod","error","console","warn","_x","apply","arguments","getLevelColor","colors","getGrammarRulesCount","data","length","getTotalExercisesCount","reduce","total","rule","exercises","getLevelStats","rules","averageExercisesPerRule","totalRules","totalExercises"],"sources":["grammarDataHelper.js"],"sourcesContent":["// utils/grammar/grammarDataHelper.js\n\n// Import des données de grammaire par niveau\n// Imports statiques conservés pour compat internes/tests si besoin\nimport grammarA1 from \"../../data/grammar/A1\";\nimport grammarA2 from \"../../data/grammar/A2\";\nimport grammarB1 from \"../../data/grammar/B1\";\nimport grammarB2 from \"../../data/grammar/B2\";\nimport grammarC1 from \"../../data/grammar/C1\";\nimport grammarC2 from \"../../data/grammar/C2\";\n\n/**\n * Récupère les données de grammaire en fonction du niveau\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {Object} Les données de grammaire pour le niveau spécifié\n */\nexport const getGrammarData = (level) => {\n  const dataMap = {\n    A1: grammarA1,\n    A2: grammarA2,\n    B1: grammarB1,\n    B2: grammarB2,\n    C1: grammarC1,\n    C2: grammarC2\n  };\n  // Retourne A1 par défaut si le niveau n'est pas reconnu\n  return dataMap[level] || grammarA1;\n};\n\n// Chargement dynamique pour réduire le bundle initial\nexport const loadGrammarData = async (level) => {\n  try {\n    const loaders = {\n      A1: () => import(\"../../data/grammar/A1\"),\n      A2: () => import(\"../../data/grammar/A2\"),\n      B1: () => import(\"../../data/grammar/B1\"),\n      B2: () => import(\"../../data/grammar/B2\"),\n      C1: () => import(\"../../data/grammar/C1\"),\n      C2: () => import(\"../../data/grammar/C2\"),\n    };\n    const load = loaders[level] || loaders.A1;\n    const mod = await load();\n    return mod.default || mod;\n  } catch (error) {\n    // ✅ Gestion d'erreur appropriée\n    console.warn(`Error loading grammar data for level ${level}:`, error);\n    // Fallback: retourner les données A1 par défaut\n    return getGrammarData(\"A1\");\n  }\n};\n\n/**\n * Récupère la couleur associée à un niveau de langue\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {string} Code couleur hexadécimal pour le niveau\n */\nexport const getLevelColor = (level) => {\n  const colors = {\n    A1: \"#3b82f6\", // Bleu\n    A2: \"#8b5cf6\", // Violet\n    B1: \"#10b981\", // Vert\n    B2: \"#f59e0b\", // Orange\n    C1: \"#ef4444\", // Rouge\n    C2: \"#6366f1\", // Indigo\n  };\n  return colors[level] || \"#3b82f6\"; // Bleu par défaut\n};\n\n/**\n * Récupère le nombre total de règles de grammaire pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {number} Nombre total de règles\n */\nexport const getGrammarRulesCount = (level) => {\n  const data = getGrammarData(level);\n  return data ? data.length : 0;\n};\n\n/**\n * Récupère le nombre total d'exercices pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {number} Nombre total d'exercices\n */\nexport const getTotalExercisesCount = (level) => {\n  const data = getGrammarData(level);\n  if (!data) return 0;\n\n  return data.reduce((total, rule) => {\n    return total + (rule.exercises ? rule.exercises.length : 0);\n  }, 0);\n};\n\n/**\n * Récupère les statistiques complètes pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {Object} Statistiques du niveau\n */\nexport const getLevelStats = (level) => {\n  const data = getGrammarData(level);\n\n  if (!data) return {\n    rules: 0,\n    exercises: 0,\n    averageExercisesPerRule: 0\n  };\n\n  const totalRules = data.length;\n  const totalExercises = getTotalExercisesCount(level);\n\n  return {\n    rules: totalRules,\n    exercises: totalExercises,\n    averageExercisesPerRule: totalRules > 0 ? totalExercises / totalRules : 0\n  };\n};\n"],"mappings":"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","ignoreList":[]}