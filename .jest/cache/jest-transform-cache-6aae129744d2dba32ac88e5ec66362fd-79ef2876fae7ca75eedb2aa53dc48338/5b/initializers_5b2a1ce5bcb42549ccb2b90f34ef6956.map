{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","callGuardDEV","initializeUIRuntime","setupConsole","setupCallGuard","_slicedToArray2","_errors","_PlatformChecker","_threads","_mockedRequestAnimationFrame","_logger","IS_JEST","isJest","SHOULD_BE_USE_WEB","shouldBeUseWeb","IS_CHROME_DEBUGGER","isChromeDebugger","_worklet_11058218612285_init_data","code","location","sourceMap","version","_worklet_11999747359509_init_data","overrideLogFunctionImplementation","_e","global","Error","replaceLoggerImplementation","initializersTs2","data","runOnJS","logToLogBoxAndConsole","__closure","__workletHash","__initData","__stackDetails","registerLoggerConfig","DEFAULT_LOGGER_CONFIG","_WORKLET","_log","console","log","_getAnimationTimestamp","performance","now","executeOnUIRuntimeSync","registerReanimatedError","_worklet_11064855674442_init_data","fn","_len","arguments","length","args","Array","_key","apply","e","__ErrorUtils","reportFatalError","_worklet_8689977933756_init_data","__callGuardDEV","error","reportFatalErrorOnJS","message","stack","createMemorySafeCapturableConsole","consoleCopy","fromEntries","entries","map","_ref","_ref2","default","methodName","method","methodWrapper","name","writable","capturableConsole","_worklet_5303065199952_init_data","assert","debug","warn","info","_worklet_3255663687300_init_data","setupRequestAnimationFrame","nativeRequestAnimationFrame","requestAnimationFrame","animationFrameCallbacks","flushRequested","__flushAnimationFrame","frameTimestamp","currentCallbacks","forEach","f","callMicrotasks","callback","push","timestamp","__frameTimestamp","undefined","_worklet_14702258885038_init_data","globalThis","mockedRequestAnimationFrame","runOnUIImmediately","initializersTs7","setupMicrotasks"],"sources":["initializers.ts"],"sourcesContent":["'use strict';\nimport { registerReanimatedError, reportFatalErrorOnJS } from './errors';\nimport { isChromeDebugger, isJest, shouldBeUseWeb } from './PlatformChecker';\nimport {\n  runOnJS,\n  setupMicrotasks,\n  callMicrotasks,\n  runOnUIImmediately,\n  executeOnUIRuntimeSync,\n} from './threads';\nimport { mockedRequestAnimationFrame } from './mockedRequestAnimationFrame';\nimport {\n  DEFAULT_LOGGER_CONFIG,\n  logToLogBoxAndConsole,\n  registerLoggerConfig,\n  replaceLoggerImplementation,\n} from './logger';\n\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\nconst IS_CHROME_DEBUGGER = isChromeDebugger();\n\n// Override the logFunction implementation with the one that adds logs\n// with better stack traces to the LogBox (need to override it after `runOnJS`\n// is defined).\nfunction overrideLogFunctionImplementation() {\n  'worklet';\n  replaceLoggerImplementation((data) => {\n    'worklet';\n    runOnJS(logToLogBoxAndConsole)(data);\n  });\n}\n\n// Register logger config and replace the log function implementation in\n// the React runtime global scope\nregisterLoggerConfig(DEFAULT_LOGGER_CONFIG);\noverrideLogFunctionImplementation();\n\n// this is for web implementation\nif (SHOULD_BE_USE_WEB) {\n  global._WORKLET = false;\n  global._log = console.log;\n  global._getAnimationTimestamp = () => performance.now();\n} else {\n  // Register ReanimatedError and logger config in the UI runtime global scope.\n  // (we are using `executeOnUIRuntimeSync` here to make sure that the changes\n  // are applied before any async operations are executed on the UI runtime)\n  executeOnUIRuntimeSync(registerReanimatedError)();\n  executeOnUIRuntimeSync(registerLoggerConfig)(DEFAULT_LOGGER_CONFIG);\n  executeOnUIRuntimeSync(overrideLogFunctionImplementation)();\n}\n\n// callGuard is only used with debug builds\nexport function callGuardDEV<Args extends unknown[], ReturnValue>(\n  fn: (...args: Args) => ReturnValue,\n  ...args: Args\n): ReturnValue | void {\n  'worklet';\n  try {\n    return fn(...args);\n  } catch (e) {\n    if (global.__ErrorUtils) {\n      global.__ErrorUtils.reportFatalError(e as Error);\n    } else {\n      throw e;\n    }\n  }\n}\n\nexport function setupCallGuard() {\n  'worklet';\n  global.__callGuardDEV = callGuardDEV;\n  global.__ErrorUtils = {\n    reportFatalError: (error: Error) => {\n      runOnJS(reportFatalErrorOnJS)({\n        message: error.message,\n        stack: error.stack,\n      });\n    },\n  };\n}\n\n/**\n * Currently there seems to be a bug in the JSI layer which causes a crash when\n * we try to copy some of the console methods, i.e. `clear` or `dirxml`.\n *\n * The crash happens only in React Native 0.75. It's not reproducible in neither\n * 0.76 nor 0.74. It also happens only in the configuration of a debug app and\n * production bundle.\n *\n * I haven't yet discovered what exactly causes the crash. It's tied to the\n * console methods sometimes being `HostFunction`s. Therefore, as a workaround\n * we don't copy the methods as they are in the original console object, we copy\n * JavaScript wrappers instead.\n */\nfunction createMemorySafeCapturableConsole(): typeof console {\n  const consoleCopy = Object.fromEntries(\n    Object.entries(console).map(([methodName, method]) => {\n      const methodWrapper = function methodWrapper(...args: unknown[]) {\n        return method(...args);\n      };\n      if (method.name) {\n        /**\n         * Set the original method name as the wrapper name if available.\n         *\n         * It might be unnecessary but if we want to fully mimic the console\n         * object we should take into the account the fact some code might rely\n         * on the method name.\n         */\n        Object.defineProperty(methodWrapper, 'name', {\n          value: method.name,\n          writable: false,\n        });\n      }\n      return [methodName, methodWrapper];\n    })\n  );\n\n  return consoleCopy as unknown as typeof console;\n}\n\n// We really have to create a copy of console here. Function runOnJS we use on elements inside\n// this object makes it not configurable\nconst capturableConsole = createMemorySafeCapturableConsole();\n\nexport function setupConsole() {\n  'worklet';\n  if (!IS_CHROME_DEBUGGER) {\n    // @ts-ignore TypeScript doesn't like that there are missing methods in console object, but we don't provide all the methods for the UI runtime console version\n    global.console = {\n      /* eslint-disable @typescript-eslint/unbound-method */\n      assert: runOnJS(capturableConsole.assert),\n      debug: runOnJS(capturableConsole.debug),\n      log: runOnJS(capturableConsole.log),\n      warn: runOnJS(capturableConsole.warn),\n      error: runOnJS(capturableConsole.error),\n      info: runOnJS(capturableConsole.info),\n      /* eslint-enable @typescript-eslint/unbound-method */\n    };\n  }\n}\n\nfunction setupRequestAnimationFrame() {\n  'worklet';\n\n  // Jest mocks requestAnimationFrame API and it does not like if that mock gets overridden\n  // so we avoid doing requestAnimationFrame batching in Jest environment.\n  const nativeRequestAnimationFrame = global.requestAnimationFrame;\n\n  let animationFrameCallbacks: Array<(timestamp: number) => void> = [];\n  let flushRequested = false;\n\n  global.__flushAnimationFrame = (frameTimestamp: number) => {\n    const currentCallbacks = animationFrameCallbacks;\n    animationFrameCallbacks = [];\n    currentCallbacks.forEach((f) => f(frameTimestamp));\n    callMicrotasks();\n  };\n\n  global.requestAnimationFrame = (\n    callback: (timestamp: number) => void\n  ): number => {\n    animationFrameCallbacks.push(callback);\n    if (!flushRequested) {\n      flushRequested = true;\n      nativeRequestAnimationFrame((timestamp) => {\n        flushRequested = false;\n        global.__frameTimestamp = timestamp;\n        global.__flushAnimationFrame(timestamp);\n        global.__frameTimestamp = undefined;\n      });\n    }\n    // Reanimated currently does not support cancelling callbacks requested with\n    // requestAnimationFrame. We return -1 as identifier which isn't in line\n    // with the spec but it should give users better clue in case they actually\n    // attempt to store the value returned from rAF and use it for cancelling.\n    return -1;\n  };\n}\n\nexport function initializeUIRuntime() {\n  if (IS_JEST) {\n    // requestAnimationFrame react-native jest's setup is incorrect as it polyfills\n    // the method directly using setTimeout, therefore the callback doesn't get the\n    // expected timestamp as the only argument: https://github.com/facebook/react-native/blob/main/packages/react-native/jest/setup.js#L28\n    // We override this setup here to make sure that callbacks get the proper timestamps\n    // when executed. For non-jest environments we define requestAnimationFrame in setupRequestAnimationFrame\n    // @ts-ignore TypeScript uses Node definition for rAF, setTimeout, etc which returns a Timeout object rather than a number\n    globalThis.requestAnimationFrame = mockedRequestAnimationFrame;\n  }\n\n  runOnUIImmediately(() => {\n    'worklet';\n    setupCallGuard();\n    setupConsole();\n    if (!SHOULD_BE_USE_WEB) {\n      setupMicrotasks();\n      setupRequestAnimationFrame();\n    }\n  })();\n}\n"],"mappings":"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","ignoreList":[]}