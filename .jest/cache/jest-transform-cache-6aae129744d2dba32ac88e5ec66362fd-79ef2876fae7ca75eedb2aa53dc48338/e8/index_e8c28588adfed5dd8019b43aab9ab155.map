{"version":3,"names":["_reactNative","require","_react","_HeroCard","_interopRequireDefault","_style","_jsxRuntime","HomophoneChoices","_ref","sentence","_ref$choices","choices","selectedChoice","onSelectChoice","_ref$disabled","disabled","_ref$levelColor","levelColor","styles","createStyles","handleSelectChoice","useCallback","choice","jsxs","View","style","container","children","jsx","default","content","fontSize","showUnderline","heroCard","Text","choicesLabel","choicesGrid","map","index","isSelected","TouchableOpacity","choiceButton","borderColor","backgroundColor","disabledChoice","onPress","choiceContent","choiceIndicator","choiceIndicatorText","color","String","fromCharCode","choiceText","fontWeight","_default","exports"],"sources":["index.js"],"sourcesContent":["// HomophoneChoices/index.js - VERSION NETTOYÃ‰E (logique simplifiÃ©e)\r\n\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { useCallback } from \"react\";\r\nimport HeroCard from \"../../../../components/ui/HeroCard\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ðŸ‘‚ HomophoneChoices - Version NettoyÃ©e\r\n * Logique simplifiÃ©e + design cohÃ©rent\r\n * \r\n * @param {string} sentence - La phrase avec le blanc Ã  complÃ©ter\r\n * @param {Array} choices - Les choix possibles\r\n * @param {string} selectedChoice - Le choix actuellement sÃ©lectionnÃ©\r\n * @param {function} onSelectChoice - Fonction appelÃ©e lors de la sÃ©lection\r\n * @param {boolean} disabled - Si les choix sont dÃ©sactivÃ©s\r\n * @param {string} levelColor - Couleur du niveau\r\n */\r\nconst HomophoneChoices = ({\r\n  sentence,\r\n  choices = [],\r\n  selectedChoice,\r\n  onSelectChoice,\r\n  disabled = false,\r\n  levelColor = \"#3b82f6\",\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n\r\n  // Handler stable pour la sÃ©lection d'un choix\r\n  const handleSelectChoice = useCallback(\r\n    (choice) => () => {\r\n      if (!disabled) {\r\n        onSelectChoice(choice);\r\n      }\r\n    },\r\n    [onSelectChoice, disabled]\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* ðŸŽ¯ HERO SECTION - Phrase avec blanc */}\r\n      <HeroCard \r\n        content={sentence}\r\n        fontSize={20}\r\n        levelColor={levelColor}\r\n        showUnderline={false}\r\n        style={styles.heroCard}\r\n      />\r\n\r\n      {/* âœ… CHOIX MULTIPLES */}\r\n      <Text style={styles.choicesLabel}>Choisissez le mot correct :</Text>\r\n\r\n      <View style={styles.choicesGrid}>\r\n        {choices.map((choice, index) => {\r\n          const isSelected = selectedChoice === choice;\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              key={choice}\r\n              style={[\r\n                styles.choiceButton,\r\n                isSelected && {\r\n                  borderColor: levelColor,\r\n                  backgroundColor: `${levelColor}15`,\r\n                },\r\n                disabled && styles.disabledChoice\r\n              ]}\r\n              onPress={handleSelectChoice(choice)}\r\n              disabled={disabled}\r\n            >\r\n              <View style={styles.choiceContent}>\r\n                <View style={[\r\n                  styles.choiceIndicator,\r\n                  isSelected && { backgroundColor: levelColor }\r\n                ]}>\r\n                  <Text style={[\r\n                    styles.choiceIndicatorText,\r\n                    isSelected && { color: 'white' }\r\n                  ]}>\r\n                    {String.fromCharCode(65 + index)} {/* A, B, C, D */}\r\n                  </Text>\r\n                </View>\r\n                \r\n                <Text style={[\r\n                  styles.choiceText,\r\n                  isSelected && { \r\n                    color: levelColor, \r\n                    fontWeight: '700' \r\n                  }\r\n                ]}>\r\n                  {choice}\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HomophoneChoices;"],"mappings":"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","ignoreList":[]}