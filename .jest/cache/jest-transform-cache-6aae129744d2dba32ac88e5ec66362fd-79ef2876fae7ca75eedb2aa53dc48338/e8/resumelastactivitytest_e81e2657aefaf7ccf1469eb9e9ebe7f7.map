{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","router","push","fn","useFocusEffect","callback","getLevelProgress","refresh","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_expoRouter","_Dashboard","LastActivity","_interopRequireWildcard","_ProgressContext","_ThemeContext","_CurrentLevelContext","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","defineProperty","getOwnPropertyDescriptor","_require","mockLastActivityData","type","level","title","timestamp","Date","now","metadata","categoryIndex","word","totalWords","renderDashboard","render","jsx","ThemeProvider","children","ProgressProvider","CurrentLevelProvider","describe","beforeEach","clearAllMocks","it","mockReturnValue","lastActivity","isLoading","saveActivity","clearActivity","reload","_renderDashboard","getByTestId","getByText","waitFor","expect","toBeTruthy","continueButton","fireEvent","press","toHaveBeenCalledWith","pathname","params","_renderDashboard2","startButton"],"sources":["resume-last-activity.test.js"],"sourcesContent":["// __tests__/integration/resume-last-activity.test.js\nimport React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport { router } from 'expo-router';\nimport Dashboard from '../../src/screens/Dashboard';\nimport * as LastActivity from '../../src/hooks/useLastActivity';\nimport { ProgressProvider } from '../../src/contexts/ProgressContext';\nimport { ThemeProvider } from '../../src/contexts/ThemeContext';\nimport { CurrentLevelProvider } from '../../src/contexts/CurrentLevelContext';\n\n// Mock de expo-router\njest.mock('expo-router', () => ({\n  ...jest.requireActual('expo-router'),\n  router: {\n    push: jest.fn(),\n  },\n  useFocusEffect: jest.fn(callback => callback()),\n}));\n\n// Mock des hooks et contextes\njest.mock('../../src/hooks/useLastActivity');\njest.mock('../../src/hooks/useRealTimeProgress', () => () => ({\n  getLevelProgress: jest.fn(() => 50),\n  refresh: jest.fn(),\n}));\n\nconst mockLastActivityData = {\n  type: 'grammar',\n  level: 'A1',\n  title: 'Grammaire de base',\n  timestamp: Date.now(),\n  metadata: {\n    categoryIndex: 1,\n    word: 5,\n    totalWords: 15,\n  },\n};\n\nconst renderDashboard = () => {\n  return render(\n    <ThemeProvider>\n      <ProgressProvider>\n        <CurrentLevelProvider>\n          <Dashboard />\n        </CurrentLevelProvider>\n      </ProgressProvider>\n    </ThemeProvider>\n  );\n};\n\ndescribe('Scénario 2: Reprise de la dernière activité', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('devrait afficher la section \"Continuer\" et naviguer correctement', async () => {\n    // 1. Simuler une activité existante\n    LastActivity.default.mockReturnValue({\n      lastActivity: mockLastActivityData,\n      isLoading: false,\n      saveActivity: jest.fn(),\n      clearActivity: jest.fn(),\n      reload: jest.fn(),\n    });\n\n    const { getByTestId, getByText } = renderDashboard();\n\n    // 2. Vérifier que la section \"Continuer\" est affichée avec les bonnes informations\n    await waitFor(() => {\n      expect(getByTestId('hero-continue-section')).toBeTruthy();\n    });\n\n    expect(getByText('Grammaire de base')).toBeTruthy();\n    expect(getByText(/Niv A1/)).toBeTruthy();\n    expect(getByText(/Mot 6\\/15/)).toBeTruthy(); // 5+1 / 15\n\n    // 3. Simuler un clic sur le bouton \"Continuer\"\n    const continueButton = getByTestId('continue-activity-button');\n    fireEvent.press(continueButton);\n\n    // 4. Vérifier que la navigation a été appelée avec les bons paramètres\n    await waitFor(() => {\n      expect(router.push).toHaveBeenCalledWith({\n        pathname: '/tabs/grammarExercise',\n        params: {\n          level: 'A1',\n        },\n      });\n    });\n  });\n\n  it('devrait afficher la section vide s\\'il n\\'y a pas de dernière activité', async () => {\n    // 1. Simuler aucune activité\n    LastActivity.default.mockReturnValue({\n      lastActivity: null,\n      isLoading: false,\n      saveActivity: jest.fn(),\n      clearActivity: jest.fn(),\n      reload: jest.fn(),\n    });\n\n    const { getByTestId, getByText } = renderDashboard();\n\n    // 2. Vérifier que la section vide est affichée\n    await waitFor(() => {\n      expect(getByTestId('hero-empty-section')).toBeTruthy();\n    });\n\n    expect(getByText(\"Commencer l'apprentissage\")).toBeTruthy();\n\n    // 3. Simuler un clic sur le bouton pour commencer\n    const startButton = getByTestId('level-selection-button');\n    fireEvent.press(startButton);\n\n    // 4. Vérifier la navigation vers la sélection de niveau\n    await waitFor(() => {\n      expect(router.push).toHaveBeenCalledWith('/tabs/levelSelection');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}