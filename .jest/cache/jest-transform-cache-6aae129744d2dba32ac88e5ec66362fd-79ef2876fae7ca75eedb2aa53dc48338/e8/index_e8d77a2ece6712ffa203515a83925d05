4dc3f14c23e27ec3d5206e43e53a5643
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _style = _interopRequireDefault(require("./style"));
var _react = require("react");
var _jsxRuntime = require("react/jsx-runtime");
var ConversationInput = function ConversationInput(_ref) {
  var message = _ref.message,
    onChangeMessage = _ref.onChangeMessage,
    onSendMessage = _ref.onSendMessage,
    levelColor = _ref.levelColor;
  var isButtonEnabled = message.trim() !== '';
  var handleSend = (0, _react.useCallback)(function () {
    if (isButtonEnabled) {
      onSendMessage();
    }
  }, [isButtonEnabled, onSendMessage]);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: _style.default.container,
    children: [(0, _jsxRuntime.jsx)(_reactNative.TextInput, {
      style: _style.default.textInput,
      value: message,
      onChangeText: onChangeMessage,
      placeholder: "Type your message...",
      placeholderTextColor: "#9ca3af",
      multiline: true
    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      style: [_style.default.sendButton, isButtonEnabled ? {
        backgroundColor: levelColor
      } : _style.default.disabledButton],
      onPress: handleSend,
      disabled: !isButtonEnabled,
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: _style.default.sendButtonText,
        children: "\u2191"
      })
    })]
  });
};
var _default = exports.default = ConversationInput;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3N0eWxlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9yZWFjdCIsIl9qc3hSdW50aW1lIiwiQ29udmVyc2F0aW9uSW5wdXQiLCJfcmVmIiwibWVzc2FnZSIsIm9uQ2hhbmdlTWVzc2FnZSIsIm9uU2VuZE1lc3NhZ2UiLCJsZXZlbENvbG9yIiwiaXNCdXR0b25FbmFibGVkIiwidHJpbSIsImhhbmRsZVNlbmQiLCJ1c2VDYWxsYmFjayIsImpzeHMiLCJWaWV3Iiwic3R5bGUiLCJzdHlsZXMiLCJjb250YWluZXIiLCJjaGlsZHJlbiIsImpzeCIsIlRleHRJbnB1dCIsInRleHRJbnB1dCIsInZhbHVlIiwib25DaGFuZ2VUZXh0IiwicGxhY2Vob2xkZXIiLCJwbGFjZWhvbGRlclRleHRDb2xvciIsIm11bHRpbGluZSIsIlRvdWNoYWJsZU9wYWNpdHkiLCJzZW5kQnV0dG9uIiwiYmFja2dyb3VuZENvbG9yIiwiZGlzYWJsZWRCdXR0b24iLCJvblByZXNzIiwiZGlzYWJsZWQiLCJUZXh0Iiwic2VuZEJ1dHRvblRleHQiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmlldywgVGV4dElucHV0LCBUb3VjaGFibGVPcGFjaXR5LCBUZXh0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlJztcclxuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XHJcblxyXG4vKipcclxuICogQ29tcG9zYW50IHBvdXIgbGEgc2Fpc2llIGRlIG1lc3NhZ2VzIGRhbnMgbGUgQ29udmVyc2F0aW9uXHJcbiAqIFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSAtIFRleHRlIGFjdHVlbGxlbWVudCBkYW5zIGwnaW5wdXRcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gb25DaGFuZ2VNZXNzYWdlIC0gRm9uY3Rpb24gYXBwZWzDqWUgcXVhbmQgbGUgdGV4dGUgY2hhbmdlXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IG9uU2VuZE1lc3NhZ2UgLSBGb25jdGlvbiBhcHBlbMOpZSBxdWFuZCBsZSBtZXNzYWdlIGVzdCBlbnZvecOpXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbENvbG9yIC0gQ291bGV1ciBhc3NvY2nDqWUgYXUgbml2ZWF1IGNvdXJhbnRcclxuICovXHJcbmNvbnN0IENvbnZlcnNhdGlvbklucHV0ID0gKHsgbWVzc2FnZSwgb25DaGFuZ2VNZXNzYWdlLCBvblNlbmRNZXNzYWdlLCBsZXZlbENvbG9yIH0pID0+IHtcclxuICAvLyBWw6lyaWZpZXIgc2kgbGUgYm91dG9uIGQnZW52b2kgZG9pdCDDqnRyZSBhY3RpdsOpXHJcbiAgY29uc3QgaXNCdXR0b25FbmFibGVkID0gbWVzc2FnZS50cmltKCkgIT09ICcnO1xyXG5cclxuICAvLyBHw6lyZXIgbCdlbnZvaSBkdSBtZXNzYWdlXHJcbiAgY29uc3QgaGFuZGxlU2VuZCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIGlmIChpc0J1dHRvbkVuYWJsZWQpIHtcclxuICAgICAgb25TZW5kTWVzc2FnZSgpO1xyXG4gICAgfVxyXG4gIH0sIFtpc0J1dHRvbkVuYWJsZWQsIG9uU2VuZE1lc3NhZ2VdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cclxuICAgICAgPFRleHRJbnB1dFxyXG4gICAgICAgIHN0eWxlPXtzdHlsZXMudGV4dElucHV0fVxyXG4gICAgICAgIHZhbHVlPXttZXNzYWdlfVxyXG4gICAgICAgIG9uQ2hhbmdlVGV4dD17b25DaGFuZ2VNZXNzYWdlfVxyXG4gICAgICAgIHBsYWNlaG9sZGVyPVwiVHlwZSB5b3VyIG1lc3NhZ2UuLi5cIlxyXG4gICAgICAgIHBsYWNlaG9sZGVyVGV4dENvbG9yPVwiIzljYTNhZlwiXHJcbiAgICAgICAgbXVsdGlsaW5lXHJcbiAgICAgIC8+XHJcbiAgICAgIDxUb3VjaGFibGVPcGFjaXR5XHJcbiAgICAgICAgc3R5bGU9e1tcclxuICAgICAgICAgIHN0eWxlcy5zZW5kQnV0dG9uLFxyXG4gICAgICAgICAgaXNCdXR0b25FbmFibGVkXHJcbiAgICAgICAgICAgID8geyBiYWNrZ3JvdW5kQ29sb3I6IGxldmVsQ29sb3IgfVxyXG4gICAgICAgICAgICA6IHN0eWxlcy5kaXNhYmxlZEJ1dHRvblxyXG4gICAgICAgIF19XHJcbiAgICAgICAgb25QcmVzcz17aGFuZGxlU2VuZH1cclxuICAgICAgICBkaXNhYmxlZD17IWlzQnV0dG9uRW5hYmxlZH1cclxuICAgICAgPlxyXG4gICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuc2VuZEJ1dHRvblRleHR9PuKGkTwvVGV4dD5cclxuICAgICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxyXG4gICAgPC9WaWV3PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb252ZXJzYXRpb25JbnB1dDtcclxuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLE1BQUEsR0FBQUgsT0FBQTtBQUFvQyxJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFVcEMsSUFBTUssaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFpQkEsQ0FBQUMsSUFBQSxFQUFnRTtFQUFBLElBQTFEQyxPQUFPLEdBQUFELElBQUEsQ0FBUEMsT0FBTztJQUFFQyxlQUFlLEdBQUFGLElBQUEsQ0FBZkUsZUFBZTtJQUFFQyxhQUFhLEdBQUFILElBQUEsQ0FBYkcsYUFBYTtJQUFFQyxVQUFVLEdBQUFKLElBQUEsQ0FBVkksVUFBVTtFQUU5RSxJQUFNQyxlQUFlLEdBQUdKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDLENBQUMsS0FBSyxFQUFFO0VBRzdDLElBQU1DLFVBQVUsR0FBRyxJQUFBQyxrQkFBVyxFQUFDLFlBQU07SUFDbkMsSUFBSUgsZUFBZSxFQUFFO01BQ25CRixhQUFhLENBQUMsQ0FBQztJQUNqQjtFQUNGLENBQUMsRUFBRSxDQUFDRSxlQUFlLEVBQUVGLGFBQWEsQ0FBQyxDQUFDO0VBRXBDLE9BQ0UsSUFBQUwsV0FBQSxDQUFBVyxJQUFBLEVBQUNoQixZQUFBLENBQUFpQixJQUFJO0lBQUNDLEtBQUssRUFBRUMsY0FBTSxDQUFDQyxTQUFVO0lBQUFDLFFBQUEsR0FDNUIsSUFBQWhCLFdBQUEsQ0FBQWlCLEdBQUEsRUFBQ3RCLFlBQUEsQ0FBQXVCLFNBQVM7TUFDUkwsS0FBSyxFQUFFQyxjQUFNLENBQUNLLFNBQVU7TUFDeEJDLEtBQUssRUFBRWpCLE9BQVE7TUFDZmtCLFlBQVksRUFBRWpCLGVBQWdCO01BQzlCa0IsV0FBVyxFQUFDLHNCQUFzQjtNQUNsQ0Msb0JBQW9CLEVBQUMsU0FBUztNQUM5QkMsU0FBUztJQUFBLENBQ1YsQ0FBQyxFQUNGLElBQUF4QixXQUFBLENBQUFpQixHQUFBLEVBQUN0QixZQUFBLENBQUE4QixnQkFBZ0I7TUFDZlosS0FBSyxFQUFFLENBQ0xDLGNBQU0sQ0FBQ1ksVUFBVSxFQUNqQm5CLGVBQWUsR0FDWDtRQUFFb0IsZUFBZSxFQUFFckI7TUFBVyxDQUFDLEdBQy9CUSxjQUFNLENBQUNjLGNBQWMsQ0FDekI7TUFDRkMsT0FBTyxFQUFFcEIsVUFBVztNQUNwQnFCLFFBQVEsRUFBRSxDQUFDdkIsZUFBZ0I7TUFBQVMsUUFBQSxFQUUzQixJQUFBaEIsV0FBQSxDQUFBaUIsR0FBQSxFQUFDdEIsWUFBQSxDQUFBb0MsSUFBSTtRQUFDbEIsS0FBSyxFQUFFQyxjQUFNLENBQUNrQixjQUFlO1FBQUFoQixRQUFBLEVBQUM7TUFBQyxDQUFNO0lBQUMsQ0FDNUIsQ0FBQztFQUFBLENBQ2YsQ0FBQztBQUVYLENBQUM7QUFBQyxJQUFBaUIsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FFYWxDLGlCQUFpQiIsImlnbm9yZUxpc3QiOltdfQ==