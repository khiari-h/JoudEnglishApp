c1d4bb7c131ce7072f1c1c8594a4faf8
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _Dimensions$get = _reactNative.Dimensions.get('window'),
  width = _Dimensions$get.width,
  height = _Dimensions$get.height;
var _default = exports.default = _reactNative.StyleSheet.create({
  overlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.6)',
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 20
  },
  popupContainer: Object.assign({
    width: width * 0.9,
    maxWidth: 380,
    borderRadius: 24,
    backgroundColor: '#FFFFFF',
    overflow: 'hidden'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 20
      },
      shadowOpacity: 0.25,
      shadowRadius: 25
    },
    android: {
      elevation: 20
    }
  })),
  header: {
    alignItems: 'center',
    padding: 24,
    paddingBottom: 20
  },
  celebration: {
    fontSize: 40,
    marginBottom: 16
  },
  mainTitle: {
    fontSize: 24,
    fontWeight: '800',
    textAlign: 'center',
    marginBottom: 8,
    color: '#1F2937'
  },
  wordsCounter: {
    fontSize: 16,
    fontWeight: '600',
    textAlign: 'center',
    color: '#4B5563'
  },
  body: {
    paddingHorizontal: 24,
    paddingBottom: 24
  },
  choicesContainer: {},
  choiceButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#F9FAFB',
    borderRadius: 12,
    padding: 16,
    borderWidth: 1,
    borderColor: '#F3F4F6',
    marginBottom: 14,
    minHeight: 60
  },
  primaryChoiceModifier: Object.assign({
    borderWidth: 2,
    borderColor: '#10B981',
    backgroundColor: '#ECFDF5'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#10B981',
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.2,
      shadowRadius: 8
    },
    android: {
      elevation: 6
    }
  }), {
    transform: [{
      scale: 1.02
    }]
  }),
  choiceIconContainer: {
    width: 36,
    height: 36,
    borderRadius: 18,
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 12
  },
  choiceTextContainer: {
    flex: 1
  },
  choiceLabel: {
    fontSize: 15,
    fontWeight: '600',
    color: '#374151'
  },
  primaryChoiceLabel: {
    fontWeight: '700',
    fontSize: 16,
    color: '#065F46'
  },
  choiceSubtitle: {
    fontSize: 13,
    fontWeight: '500',
    color: '#6B7280',
    marginTop: 2
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,