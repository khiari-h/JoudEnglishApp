{"version":3,"names":["_getJestObj","mock","LANGUAGE_LEVELS","title","color","icon","_reactNative","require","_useDashboardData","_constants","_require","jest","describe","mockProgressContext","progress","level1","level2","calculateGlobalProgress","fn","calculateLevelProgress","level","progressMap","beforeEach","clearAllMocks","it","_renderHook","renderHook","useDashboardData","result","expect","current","toEqual","globalProgress","toBe","levelProgress","_renderHook2","lastActivity","currentStreak","_renderHook3","_ref","currentLevel","initialProps","rerender","initialLevels","allLevels","toHaveLength","id","isActive","not","_renderHook4","learningLevels","getAllLearningLevels","find","l","toHaveBeenCalledTimes","toHaveBeenCalledWith","_renderHook5","_ref2","incompleteContext","_renderHook6"],"sources":["useDashboardData.test.js"],"sourcesContent":["// __tests__/screens/Dashboard/hooks/useDashboardData.test.js\nimport { renderHook } from '@testing-library/react-native';\nimport { useDashboardData } from '../../../../src/screens/Dashboard/hooks/useDashboardData';\nimport { LANGUAGE_LEVELS } from '../../../../src/utils/constants';\n\n// Mock des constantes\njest.mock('../../../../src/utils/constants', () => ({\n  LANGUAGE_LEVELS: {\n    '1': { title: 'Débutant', color: '#10B981', icon: '🌱' },\n    '2': { title: 'Élémentaire', color: '#3B82F6', icon: '📚' },\n    '3': { title: 'Intermédiaire', color: '#8B5CF6', icon: '🎯' },\n    '4': { title: 'Intermédiaire+', color: '#F59E0B', icon: '🚀' },\n    '5': { title: 'Avancé', color: '#EF4444', icon: '⭐' },\n    '6': { title: 'Expert', color: '#EC4899', icon: '👑' },\n    'bonus': { title: 'Bonus', color: '#6366F1', icon: '🎁' }\n  }\n}));\n\ndescribe('useDashboardData', () => {\n  const mockProgressContext = {\n    progress: { level1: 50, level2: 30 },\n    calculateGlobalProgress: jest.fn(() => 65),\n    calculateLevelProgress: jest.fn((level) => {\n      const progressMap = { '1': 50, '2': 30, '3': 0 };\n      return progressMap[level] || 0;\n    })\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('devrait retourner les données par défaut quand progressContext est null', () => {\n    const { result } = renderHook(() => \n      useDashboardData(null, '1', null, 0)\n    );\n\n    expect(result.current.progress).toEqual({});\n    expect(result.current.globalProgress).toBe(0);\n    expect(result.current.levelProgress).toBe(0);\n  });\n\n  it('devrait calculer correctement les données avec un contexte valide', () => {\n    const { result } = renderHook(() => \n      useDashboardData(mockProgressContext, '1', 'vocabulary', 5)\n    );\n\n    expect(result.current.progress).toEqual(mockProgressContext.progress);\n    expect(result.current.globalProgress).toBe(65);\n    expect(result.current.levelProgress).toBe(50);\n    expect(result.current.lastActivity).toBe('vocabulary');\n    expect(result.current.currentStreak).toBe(5);\n  });\n\n  it('devrait mémoriser la liste de tous les niveaux', () => {\n    const { result, rerender } = renderHook(\n      ({ currentLevel }) => useDashboardData(mockProgressContext, currentLevel, null, 0),\n      { initialProps: { currentLevel: '1' } }\n    );\n\n    const initialLevels = result.current.allLevels;\n    expect(initialLevels).toHaveLength(7);\n    expect(initialLevels[0]).toEqual({\n      id: '1',\n      color: '#10B981',\n      isActive: true\n    });\n\n    // Rerender avec le même niveau - devrait retourner la même référence\n    rerender({ currentLevel: '1' });\n    expect(result.current.allLevels).toBe(initialLevels);\n\n    // Rerender avec un niveau différent - devrait recalculer\n    rerender({ currentLevel: '2' });\n    expect(result.current.allLevels).not.toBe(initialLevels);\n    expect(result.current.allLevels[1].isActive).toBe(true);\n  });\n\n  it('devrait mémoriser la liste des niveaux d\\'apprentissage avec progression', () => {\n    const { result } = renderHook(() => \n      useDashboardData(mockProgressContext, '2', null, 0)\n    );\n\n    const learningLevels = result.current.getAllLearningLevels;\n    expect(learningLevels).toHaveLength(7);\n    \n    const level1 = learningLevels.find(l => l.id === '1');\n    expect(level1).toEqual({\n      id: '1',\n      title: 'Débutant',\n      color: '#10B981',\n      progress: 50,\n      isActive: false\n    });\n\n    const level2 = learningLevels.find(l => l.id === '2');\n    expect(level2).toEqual({\n      id: '2',\n      title: 'Élémentaire',\n      color: '#3B82F6',\n      progress: 30,\n      isActive: true\n    });\n  });\n\n  it('devrait appeler calculateGlobalProgress une seule fois', () => {\n    renderHook(() => \n      useDashboardData(mockProgressContext, '1', null, 0)\n    );\n\n    expect(mockProgressContext.calculateGlobalProgress).toHaveBeenCalledTimes(1);\n  });\n\n  it('devrait appeler calculateLevelProgress pour le niveau courant', () => {\n    renderHook(() => \n      useDashboardData(mockProgressContext, '3', null, 0)\n    );\n\n    expect(mockProgressContext.calculateLevelProgress).toHaveBeenCalledWith('3');\n  });\n\n  it('devrait recalculer quand le niveau courant change', () => {\n    const { rerender } = renderHook(\n      ({ currentLevel }) => useDashboardData(mockProgressContext, currentLevel, null, 0),\n      { initialProps: { currentLevel: '1' } }\n    );\n\n    expect(mockProgressContext.calculateLevelProgress).toHaveBeenCalledWith('1');\n\n    rerender({ currentLevel: '2' });\n    expect(mockProgressContext.calculateLevelProgress).toHaveBeenCalledWith('2');\n  });\n\n  it('devrait gérer les fonctions manquantes dans progressContext', () => {\n    const incompleteContext = {\n      progress: { level1: 25 }\n      // calculateGlobalProgress et calculateLevelProgress manquantes\n    };\n\n    const { result } = renderHook(() => \n      useDashboardData(incompleteContext, '1', null, 0)\n    );\n\n    expect(result.current.globalProgress).toBe(0);\n    expect(result.current.levelProgress).toBe(0);\n    expect(result.current.progress).toEqual({ level1: 25 });\n  });\n});"],"mappings":"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","ignoreList":[]}