{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","WorkletEventHandler","_classCallCheck2","_createClass2","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_core","_PlatformChecker","SHOULD_BE_USE_WEB","shouldBeUseWeb","jsListener","eventName","handler","evt","assign","nativeEvent","_viewTags","default","_registrations","WorkletEventHandlerNative","worklet","eventNames","writable","Set","Map","key","updateEventHandler","newWorklet","newEvents","_this","forEach","registrationIDs","id","unregisterEventHandler","Array","from","tag","newRegistrations","map","registerEventHandler","set","registerForEvents","viewTag","fallbackEventName","_this2","add","length","newRegistration","unregisterFromEvents","_classPrivateFieldLoo","delete","get","WorkletEventHandlerWeb","arguments","undefined","listeners","setupWebListeners","_this3","_viewTag","_fallbackEventName"],"sources":["WorkletEventHandler.ts"],"sourcesContent":["'use strict';\nimport type { NativeSyntheticEvent } from 'react-native';\nimport { registerEventHandler, unregisterEventHandler } from './core';\nimport type {\n  EventPayload,\n  ReanimatedEvent,\n  IWorkletEventHandler,\n} from './hook/commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\ntype JSEvent<Event extends object> = NativeSyntheticEvent<EventPayload<Event>>;\n\n// In JS implementation (e.g. for web) we don't use Reanimated's\n// event emitter, therefore we have to handle here\n// the event that came from React Native and convert it.\nfunction jsListener<Event extends object>(\n  eventName: string,\n  handler: (event: ReanimatedEvent<Event>) => void\n) {\n  return (evt: JSEvent<Event>) => {\n    handler({ ...evt.nativeEvent, eventName } as ReanimatedEvent<Event>);\n  };\n}\n\nclass WorkletEventHandlerNative<Event extends object>\n  implements IWorkletEventHandler<Event>\n{\n  eventNames: string[];\n  worklet: (event: ReanimatedEvent<Event>) => void;\n  #viewTags: Set<number>;\n  #registrations: Map<number, number[]>; // keys are viewTags, values are arrays of registration ID's for each viewTag\n  constructor(\n    worklet: (event: ReanimatedEvent<Event>) => void,\n    eventNames: string[]\n  ) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.#viewTags = new Set<number>();\n    this.#registrations = new Map<number, number[]>();\n  }\n\n  updateEventHandler(\n    newWorklet: (event: ReanimatedEvent<Event>) => void,\n    newEvents: string[]\n  ): void {\n    // Update worklet and event names\n    this.worklet = newWorklet;\n    this.eventNames = newEvents;\n\n    // Detach all events\n    this.#registrations.forEach((registrationIDs) => {\n      registrationIDs.forEach((id) => unregisterEventHandler(id));\n      // No need to remove registrationIDs from map, since it gets overwritten when attaching\n    });\n\n    // Attach new events with new worklet\n    Array.from(this.#viewTags).forEach((tag) => {\n      const newRegistrations = this.eventNames.map((eventName) =>\n        registerEventHandler(this.worklet, eventName, tag)\n      );\n      this.#registrations.set(tag, newRegistrations);\n    });\n  }\n\n  registerForEvents(viewTag: number, fallbackEventName?: string): void {\n    this.#viewTags.add(viewTag);\n\n    const newRegistrations = this.eventNames.map((eventName) =>\n      registerEventHandler(this.worklet, eventName, viewTag)\n    );\n    this.#registrations.set(viewTag, newRegistrations);\n\n    if (this.eventNames.length === 0 && fallbackEventName) {\n      const newRegistration = registerEventHandler(\n        this.worklet,\n        fallbackEventName,\n        viewTag\n      );\n      this.#registrations.set(viewTag, [newRegistration]);\n    }\n  }\n\n  unregisterFromEvents(viewTag: number): void {\n    this.#viewTags.delete(viewTag);\n    this.#registrations.get(viewTag)?.forEach((id) => {\n      unregisterEventHandler(id);\n    });\n    this.#registrations.delete(viewTag);\n  }\n}\n\nclass WorkletEventHandlerWeb<Event extends object>\n  implements IWorkletEventHandler<Event>\n{\n  eventNames: string[];\n  listeners:\n    | Record<string, (event: ReanimatedEvent<ReanimatedEvent<Event>>) => void>\n    | Record<string, (event: JSEvent<Event>) => void>;\n\n  worklet: (event: ReanimatedEvent<Event>) => void;\n\n  constructor(\n    worklet: (event: ReanimatedEvent<Event>) => void,\n    eventNames: string[] = []\n  ) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.listeners = {};\n    this.setupWebListeners();\n  }\n\n  setupWebListeners() {\n    this.listeners = {};\n    this.eventNames.forEach((eventName) => {\n      this.listeners[eventName] = jsListener(eventName, this.worklet);\n    });\n  }\n\n  updateEventHandler(\n    newWorklet: (event: ReanimatedEvent<Event>) => void,\n    newEvents: string[]\n  ): void {\n    // Update worklet and event names\n    this.worklet = newWorklet;\n    this.eventNames = newEvents;\n    this.setupWebListeners();\n  }\n\n  registerForEvents(_viewTag: number, _fallbackEventName?: string): void {\n    // noop\n  }\n\n  unregisterFromEvents(_viewTag: number): void {\n    // noop\n  }\n}\n\nexport const WorkletEventHandler = SHOULD_BE_USE_WEB\n  ? WorkletEventHandlerWeb\n  : WorkletEventHandlerNative;\n"],"mappings":"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","ignoreList":[]}