e7025c32991c40868d84b30165adb350
_getJestObj().mock('@expo/vector-icons');
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _Header = _interopRequireDefault(require("../../../src/components/layout/Header"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('Header', function () {
  it('affiche le titre passé en prop', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Accueil"
      })),
      getByText = _render.getByText;
    expect(getByText('Accueil')).toBeTruthy();
  });
  it('n’affiche pas le bouton retour si withBack est false ou non défini', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Sans Retour"
      })),
      queryByTestId = _render2.queryByTestId;
    expect(queryByTestId('back-button')).toBeNull();
  });
  it('affiche le bouton retour si withBack est true', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Avec Retour",
        withBack: true
      })),
      getByTestId = _render3.getByTestId;
    expect(getByTestId('back-button')).toBeTruthy();
  });
  it('exécute une action au clic sur le bouton retour si onBackPress est défini', function () {
    var mockFn = jest.fn();
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Retour",
        withBack: true,
        onBackPress: mockFn
      })),
      getByTestId = _render4.getByTestId;
    _reactNative.fireEvent.press(getByTestId('back-button'));
    expect(mockFn).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl9yZWFjdE5hdGl2ZSIsIl9IZWFkZXIiLCJfanN4UnVudGltZSIsIl9yZXF1aXJlIiwiamVzdCIsImRlc2NyaWJlIiwiaXQiLCJfcmVuZGVyIiwicmVuZGVyIiwianN4IiwiZGVmYXVsdCIsInRpdGxlIiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsIl9yZW5kZXIyIiwicXVlcnlCeVRlc3RJZCIsInRvQmVOdWxsIiwiX3JlbmRlcjMiLCJ3aXRoQmFjayIsImdldEJ5VGVzdElkIiwibW9ja0ZuIiwiZm4iLCJfcmVuZGVyNCIsIm9uQmFja1ByZXNzIiwiZmlyZUV2ZW50IiwicHJlc3MiLCJ0b0hhdmVCZWVuQ2FsbGVkIl0sInNvdXJjZXMiOlsiSGVhZGVyLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gX190ZXN0c19fL2NvbXBvbmVudHMvbGF5b3V0L0hlYWRlci50ZXN0LmpzXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIsIGZpcmVFdmVudCB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvbGF5b3V0L0hlYWRlcic7XG5cbmplc3QubW9jaygnQGV4cG8vdmVjdG9yLWljb25zJyk7IC8vIEltcG9ydGFudCBwb3VyIMOpdml0ZXIgbCdlcnJldXIgRVNNXG5cbmRlc2NyaWJlKCdIZWFkZXInLCAoKSA9PiB7XG4gIGl0KCdhZmZpY2hlIGxlIHRpdHJlIHBhc3PDqSBlbiBwcm9wJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSByZW5kZXIoPEhlYWRlciB0aXRsZT1cIkFjY3VlaWxcIiAvPik7XG4gICAgZXhwZWN0KGdldEJ5VGV4dCgnQWNjdWVpbCcpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIGl0KCdu4oCZYWZmaWNoZSBwYXMgbGUgYm91dG9uIHJldG91ciBzaSB3aXRoQmFjayBlc3QgZmFsc2Ugb3Ugbm9uIGTDqWZpbmknLCAoKSA9PiB7XG4gICAgY29uc3QgeyBxdWVyeUJ5VGVzdElkIH0gPSByZW5kZXIoPEhlYWRlciB0aXRsZT1cIlNhbnMgUmV0b3VyXCIgLz4pO1xuICAgIGV4cGVjdChxdWVyeUJ5VGVzdElkKCdiYWNrLWJ1dHRvbicpKS50b0JlTnVsbCgpO1xuICB9KTtcblxuICBpdCgnYWZmaWNoZSBsZSBib3V0b24gcmV0b3VyIHNpIHdpdGhCYWNrIGVzdCB0cnVlJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcig8SGVhZGVyIHRpdGxlPVwiQXZlYyBSZXRvdXJcIiB3aXRoQmFjayAvPik7XG4gICAgZXhwZWN0KGdldEJ5VGVzdElkKCdiYWNrLWJ1dHRvbicpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIGl0KCdleMOpY3V0ZSB1bmUgYWN0aW9uIGF1IGNsaWMgc3VyIGxlIGJvdXRvbiByZXRvdXIgc2kgb25CYWNrUHJlc3MgZXN0IGTDqWZpbmknLCAoKSA9PiB7XG4gICAgY29uc3QgbW9ja0ZuID0gamVzdC5mbigpO1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcig8SGVhZGVyIHRpdGxlPVwiUmV0b3VyXCIgd2l0aEJhY2sgb25CYWNrUHJlc3M9e21vY2tGbn0gLz4pO1xuICAgIGZpcmVFdmVudC5wcmVzcyhnZXRCeVRlc3RJZCgnYmFjay1idXR0b24nKSk7XG4gICAgZXhwZWN0KG1vY2tGbikudG9IYXZlQmVlbkNhbGxlZCgpO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFNQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsb0JBQW9CLENBQUM7QUFBQyxJQUFBQyxzQkFBQSxHQUFBQyxPQUFBO0FBSmhDLElBQUFDLE1BQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElB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