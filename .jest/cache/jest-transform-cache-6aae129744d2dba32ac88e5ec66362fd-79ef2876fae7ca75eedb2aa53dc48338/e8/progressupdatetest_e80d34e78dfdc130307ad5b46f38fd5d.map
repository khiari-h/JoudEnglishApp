{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","router","push","fn","useFocusEffect","_require","require","View","_jsxRuntime","jsx","testID","_interopRequireDefault","_asyncToGenerator2","_react","_reactNative","_Dashboard","_AppProvider","_require2","describe","it","default","_render","render","AppProvider","children","getByText","findByText","expect","toBeTruthy"],"sources":["progress-update.test.js"],"sourcesContent":["\nimport React from 'react';\nimport { render, act } from '@testing-library/react-native';\nimport Dashboard from '../../src/screens/Dashboard';\nimport { AppProvider } from '../../src/contexts/AppProvider';\n\n// Mock de Expo Router\njest.mock('expo-router', () => ({\n  ...jest.requireActual('expo-router'),\n  router: {\n    push: jest.fn(),\n  },\n  useFocusEffect: jest.fn(),\n}));\n\n// Mock pour la section de révision qui pourrait être complexe à gérer\njest.mock('../../src/screens/VocabularyRevision/RevisionOrchestrator', () => {\n  const { View } = require('react-native');\n  return () => <View testID=\"revision-orchestrator-mock\" />;\n});\n\ndescribe('Integration: Progress Update', () => {\n  it('should update progress on Dashboard after completing an exercise', async () => {\n    // 1. ARRANGE: Rendre le Dashboard avec les providers nécessaires\n    // AppProvider est un bon candidat car il devrait contenir tous les contextes\n    const { getByText, findByText } = render(\n      <AppProvider>\n        <Dashboard />\n      </AppProvider>\n    );\n\n    // Attendre que le chargement initial soit terminé\n    await findByText('Continue'); \n\n    // Vérifier l'état initial (par exemple, la progression d'un niveau)\n    // NOTE: Ce sera adapté en fonction de l'implémentation réelle\n    // Pour l'instant, on suppose qu'on peut trouver le texte \"0%\"\n    expect(getByText(/0%/i)).toBeTruthy();\n\n    // 2. ACT: Simuler la fin d'un exercice et la mise à jour du progrès\n    // Dans un vrai test, on appellerait ici une fonction qui simule\n    // la logique de `useQuizEngine` et met à jour le `ProgressContext`.\n    // Pour ce premier jet, nous allons simuler cela conceptuellement.\n    // L'étape suivante sera de rendre cela fonctionnel.\n    \n    // --- SIMULATION (à remplacer par une vraie interaction) ---\n    // Imaginons que nous avons une fonction `completeExercise` qui met à jour le contexte.\n    // await act(async () => {\n    //   progressContext.updateProgress('1', 'vocabulary', 10);\n    // });\n    // --- FIN SIMULATION ---\n\n    // 3. ASSERT: Vérifier que le Dashboard reflète la nouvelle progression\n    // On s'attendrait à voir la progression mise à jour.\n    // Par exemple, si on a ajouté 10% de progression :\n    // const updatedProgress = await findByText(/10%/i);\n    // expect(updatedProgress).toBeTruthy();\n\n    // NOTE: Ce test est un squelette. La prochaine étape sera de le connecter\n    // aux vrais mécanismes de mise à jour du ProgressContext pour le rendre fonctionnel.\n  });\n});\n"],"mappings":"AAOAA,WAAA,GAAKC,IAAI,CAAC,aAAa,EAAE;EAAA,OAAAC,MAAA,CAAAC,MAAA,KACpBC,IAAI,CAACC,aAAa,CAAC,aAAa,CAAC;IACpCC,MAAM,EAAE;MACNC,IAAI,EAAEH,IAAI,CAACI,EAAE,CAAC;IAChB,CAAC;IACDC,cAAc,EAAEL,IAAI,CAACI,EAAE,CAAC;EAAC;AAAA,CACzB,CAAC;AAGHR,WAAA,GAAKC,IAAI,CAAC,2DAA2D,EAAE,YAAM;EAC3E,IAAAS,QAAA,GAAiBC,OAAO,CAAC,cAAc,CAAC;IAAhCC,IAAI,GAAAF,QAAA,CAAJE,IAAI;EACZ,OAAO;IAAA,OAAM,IAAAC,WAAA,CAAAC,GAAA,EAACF,IAAI;MAACG,MAAM,EAAC;IAA4B,CAAE,CAAC;EAAA;AAC3D,CAAC,CAAC;AAAC,IAAAC,sBAAA,GAAAL,OAAA;AAAA,IAAAM,kBAAA,GAAAD,sBAAA,CAAAL,OAAA;AAlBH,IAAAO,MAAA,GAAAF,sBAAA,CAAAL,OAAA;AACA,IAAAQ,YAAA,GAAAR,OAAA;AACA,IAAAS,UAAA,GAAAJ,sBAAA,CAAAL,OAAA;AACA,IAAAU,YAAA,GAAAV,OAAA;AAA6D,IAAAE,WAAA,GAAAF,OAAA;AAAA,SAAAX,YAAA;EAAA,IAAAsB,SAAA,GAAAX,OAAA;IAAAP,IAAA,GAAAkB,SAAA,CAAAlB,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAiB7DmB,QAAQ,CAAC,8BAA8B,EAAE,YAAM;EAC7CC,EAAE,CAAC,kEAAkE,MAAAP,kBAAA,CAAAQ,OAAA,EAAE,aAAY;IAGjF,IAAAC,OAAA,GAAkC,IAAAC,mBAAM,EACtC,IAAAd,WAAA,CAAAC,GAAA,EAACO,YAAA,CAAAO,WAAW;QAAAC,QAAA,EACV,IAAAhB,WAAA,CAAAC,GAAA,EAACM,UAAA,CAAAK,OAAS,IAAE;MAAC,CACF,CACf,CAAC;MAJOK,SAAS,GAAAJ,OAAA,CAATI,SAAS;MAAEC,UAAU,GAAAL,OAAA,CAAVK,UAAU;IAO7B,MAAMA,UAAU,CAAC,UAAU,CAAC;IAK5BC,MAAM,CAACF,SAAS,CAAC,KAAK,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;EAuBvC,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}