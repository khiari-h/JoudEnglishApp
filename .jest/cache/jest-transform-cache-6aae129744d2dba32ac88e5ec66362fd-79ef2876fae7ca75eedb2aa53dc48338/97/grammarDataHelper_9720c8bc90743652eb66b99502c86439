08f213eb984a5705ca1f3142d8d7f994
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadGrammarData = exports.getTotalExercisesCount = exports.getLevelStats = exports.getLevelColor = exports.getGrammarRulesCount = exports.getGrammarData = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _A = _interopRequireDefault(require("../../data/grammar/A1"));
var _A2 = _interopRequireDefault(require("../../data/grammar/A2"));
var _B = _interopRequireDefault(require("../../data/grammar/B1"));
var _B2 = _interopRequireDefault(require("../../data/grammar/B2"));
var _C = _interopRequireDefault(require("../../data/grammar/C1"));
var _C2 = _interopRequireDefault(require("../../data/grammar/C2"));
var getGrammarData = exports.getGrammarData = function getGrammarData(level) {
  var dataMap = {
    A1: _A.default,
    A2: _A2.default,
    B1: _B.default,
    B2: _B2.default,
    C1: _C.default,
    C2: _C2.default
  };
  return dataMap[level] || _A.default;
};
var loadGrammarData = exports.loadGrammarData = function () {
  var _ref = (0, _asyncToGenerator2.default)(function* (level) {
    try {
      var loaders = {
        A1: function A1() {
          return import("../../data/grammar/A1");
        },
        A2: function A2() {
          return import("../../data/grammar/A2");
        },
        B1: function B1() {
          return import("../../data/grammar/B1");
        },
        B2: function B2() {
          return import("../../data/grammar/B2");
        },
        C1: function C1() {
          return import("../../data/grammar/C1");
        },
        C2: function C2() {
          return import("../../data/grammar/C2");
        }
      };
      var load = loaders[level] || loaders.A1;
      var mod = yield load();
      return mod.default || mod;
    } catch (e) {
      return getGrammarData("A1");
    }
  });
  return function loadGrammarData(_x) {
    return _ref.apply(this, arguments);
  };
}();
var getLevelColor = exports.getLevelColor = function getLevelColor(level) {
  var colors = {
    A1: "#3b82f6",
    A2: "#8b5cf6",
    B1: "#10b981",
    B2: "#f59e0b",
    C1: "#ef4444",
    C2: "#6366f1"
  };
  return colors[level] || "#3b82f6";
};
var getGrammarRulesCount = exports.getGrammarRulesCount = function getGrammarRulesCount(level) {
  var data = getGrammarData(level);
  return data ? data.length : 0;
};
var getTotalExercisesCount = exports.getTotalExercisesCount = function getTotalExercisesCount(level) {
  var data = getGrammarData(level);
  if (!data) return 0;
  return data.reduce(function (total, rule) {
    return total + (rule.exercises ? rule.exercises.length : 0);
  }, 0);
};
var getLevelStats = exports.getLevelStats = function getLevelStats(level) {
  var data = getGrammarData(level);
  if (!data) return {
    rules: 0,
    exercises: 0,
    averageExercisesPerRule: 0
  };
  var totalRules = data.length;
  var totalExercises = getTotalExercisesCount(level);
  return {
    rules: totalRules,
    exercises: totalExercises,
    averageExercisesPerRule: totalRules > 0 ? totalExercises / totalRules : 0
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,