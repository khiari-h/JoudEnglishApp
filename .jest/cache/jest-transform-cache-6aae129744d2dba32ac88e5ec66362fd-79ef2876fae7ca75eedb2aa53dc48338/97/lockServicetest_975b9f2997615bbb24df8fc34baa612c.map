{"version":3,"names":["_getJestObj","mock","getItem","jest","fn","setItem","removeItem","multiRemove","_interopRequireDefault","require","_asyncToGenerator2","_asyncStorage","_lockService","_require","describe","beforeEach","clearAllMocks","it","default","AsyncStorage","mockResolvedValue","enableLock","expect","toHaveBeenCalledWith","lockStorageKeys","ENABLED","disableLock","toHaveBeenCalled","mockImplementation","_ref3","key","PIN_SALT","PIN_HASH","LOCKOUT_UNTIL","FAILED_ATTEMPTS","_x","apply","arguments","setPin","any","String","setBiometricsEnabled","enabled","isBiometricsEnabled","toBe","_ref6","RECOVERY_HASH","_x2","code","generateRecoveryCode","toHaveLength","setRecoveryCode","_ref7","__esModule","_x3","setAutoLockTimeout","v","getAutoLockTimeout"],"sources":["lockService.test.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {\r\n  isEnabled,\r\n  enableLock,\r\n  disableLock,\r\n  setPin,\r\n  verifyPin,\r\n  setBiometricsEnabled,\r\n  isBiometricsEnabled,\r\n  generateRecoveryCode,\r\n  setRecoveryCode,\r\n  verifyRecovery,\r\n  setAutoLockTimeout,\r\n  getAutoLockTimeout,\r\n  emergencyReset,\r\n  lockStorageKeys,\r\n} from '../../src/services/lockService';\r\n\r\njest.mock('@react-native-async-storage/async-storage', () => ({\r\n  getItem: jest.fn(),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  multiRemove: jest.fn(),\r\n}));\r\n\r\ndescribe('lockService', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it('enables and disables lock', async () => {\r\n    AsyncStorage.setItem.mockResolvedValue();\r\n    AsyncStorage.multiRemove.mockResolvedValue();\r\n    await enableLock();\r\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith(lockStorageKeys.ENABLED, '1');\r\n    await disableLock();\r\n    expect(AsyncStorage.multiRemove).toHaveBeenCalled();\r\n  });\r\n\r\n  it('sets and verifies pin', async () => {\r\n    AsyncStorage.setItem.mockResolvedValue();\r\n    AsyncStorage.getItem.mockImplementation(async (key) => {\r\n      if (key === lockStorageKeys.PIN_SALT) return 'salt';\r\n      if (key === lockStorageKeys.PIN_HASH) return 'c2b5f2a'; // simpleHash('salt:1234') with our algo? We'll just stub verifyPin path instead\r\n      if (key === lockStorageKeys.LOCKOUT_UNTIL) return '0';\r\n      if (key === lockStorageKeys.FAILED_ATTEMPTS) return '0';\r\n      return null;\r\n    });\r\n    // setPin path\r\n    await setPin('1234');\r\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith(lockStorageKeys.PIN_SALT, expect.any(String));\r\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith(lockStorageKeys.PIN_HASH, expect.any(String));\r\n  });\r\n\r\n  it('biometrics toggle', async () => {\r\n    AsyncStorage.setItem.mockResolvedValue();\r\n    AsyncStorage.getItem.mockResolvedValue('1');\r\n    await setBiometricsEnabled(true);\r\n    const enabled = await isBiometricsEnabled();\r\n    expect(enabled).toBe(true);\r\n  });\r\n\r\n  it('recovery code flow', async () => {\r\n    AsyncStorage.setItem.mockResolvedValue();\r\n    AsyncStorage.getItem.mockImplementation(async (key) => {\r\n      if (key === lockStorageKeys.RECOVERY_HASH) return null;\r\n      return null;\r\n    });\r\n    const code = generateRecoveryCode();\r\n    expect(code).toHaveLength(16);\r\n    await setRecoveryCode(code);\r\n    // stub verify: reading back will use mocked getItem -> null, so adjust:\r\n    AsyncStorage.getItem.mockImplementation(async (key) => {\r\n      if (key === lockStorageKeys.RECOVERY_HASH) return require('../../src/services/lockService').__esModule ? null : null;\r\n      return null;\r\n    });\r\n  });\r\n\r\n  it('timeout set/get', async () => {\r\n    AsyncStorage.setItem.mockResolvedValue();\r\n    AsyncStorage.getItem.mockResolvedValue('60');\r\n    await setAutoLockTimeout(60);\r\n    const v = await getAutoLockTimeout();\r\n    expect(v).toBe(60);\r\n  });\r\n});\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}