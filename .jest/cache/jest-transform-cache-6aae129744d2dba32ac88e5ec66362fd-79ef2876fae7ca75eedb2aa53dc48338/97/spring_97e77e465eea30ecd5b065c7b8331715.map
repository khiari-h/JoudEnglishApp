{"version":3,"names":["Object","defineProperty","exports","value","withSpring","_util","require","_springUtils","_worklet_9548974791787_init_data","code","location","sourceMap","version","_worklet_2450794862484_init_data","_e","global","Error","springTs1","toValue","userConfig","callback","defineAnimation","springTs2","defaultConfig","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","velocity","duration","dampingRatio","reduceMotion","undefined","clamp","config","assign","useDuration","skipAnimation","checkIfConfigIsValid","springOnFrame","animation","now","startTimestamp","current","timeFromStart","lastTimestamp","deltaTime","Math","min","t","v0","x0","zeta","omega0","omega1","_ref","underDampedSpringCalculations","criticallyDampedSpringCalculations","newPosition","position","newVelocity","_isAnimationTerminati","isAnimationTerminatingCalculation","isOvershooting","isVelocity","isDisplacement","springIsNotInMove","isTriggeredTwice","previousAnimation","onStart","startValue","triggeredTwice","Number","actualDuration","calculateNewMassToMatchDuration","_initialCalculations","initialCalculations","scaleZetaToMatchClamps","onFrame","getReduceMotionForAnimation","__closure","__workletHash","__initData","__stackDetails"],"sources":["spring.ts"],"sourcesContent":["'use strict';\nimport { defineAnimation, getReduceMotionForAnimation } from './util';\nimport type {\n  Animation,\n  AnimationCallback,\n  AnimatableValue,\n  Timestamp,\n} from '../commonTypes';\nimport type {\n  SpringConfig,\n  SpringAnimation,\n  InnerSpringAnimation,\n  SpringConfigInner,\n  DefaultSpringConfig,\n} from './springUtils';\nimport {\n  initialCalculations,\n  calculateNewMassToMatchDuration,\n  underDampedSpringCalculations,\n  criticallyDampedSpringCalculations,\n  isAnimationTerminatingCalculation,\n  scaleZetaToMatchClamps,\n  checkIfConfigIsValid,\n} from './springUtils';\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ntype withSpringType = <T extends AnimatableValue>(\n  toValue: T,\n  userConfig?: SpringConfig,\n  callback?: AnimationCallback\n) => T;\n\n/**\n * Lets you create spring-based animations.\n *\n * @param toValue - The value at which the animation will come to rest -\n *   {@link AnimatableValue}\n * @param config - The spring animation configuration - {@link SpringConfig}\n * @param callback - A function called on animation complete -\n *   {@link AnimationCallback}\n * @returns An [animation\n *   object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object)\n *   which holds the current state of the animation\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withSpring\n */\nexport const withSpring = ((\n  toValue: AnimatableValue,\n  userConfig?: SpringConfig,\n  callback?: AnimationCallback\n): Animation<SpringAnimation> => {\n  'worklet';\n\n  return defineAnimation<SpringAnimation>(toValue, () => {\n    'worklet';\n    const defaultConfig: DefaultSpringConfig = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n      velocity: 0,\n      duration: 2000,\n      dampingRatio: 0.5,\n      reduceMotion: undefined,\n      clamp: undefined,\n    } as const;\n\n    const config: DefaultSpringConfig & SpringConfigInner = {\n      ...defaultConfig,\n      ...userConfig,\n      useDuration: !!(userConfig?.duration || userConfig?.dampingRatio),\n      skipAnimation: false,\n    };\n\n    config.skipAnimation = !checkIfConfigIsValid(config);\n\n    if (config.duration === 0) {\n      config.skipAnimation = true;\n    }\n\n    function springOnFrame(\n      animation: InnerSpringAnimation,\n      now: Timestamp\n    ): boolean {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { toValue, startTimestamp, current } = animation;\n\n      const timeFromStart = now - startTimestamp;\n\n      if (config.useDuration && timeFromStart >= config.duration) {\n        animation.current = toValue;\n        // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n        animation.lastTimestamp = 0;\n        return true;\n      }\n\n      if (config.skipAnimation) {\n        animation.current = toValue;\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      const { lastTimestamp, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const t = deltaTime / 1000;\n      const v0 = -velocity;\n      const x0 = toValue - current;\n\n      const { zeta, omega0, omega1 } = animation;\n\n      const { position: newPosition, velocity: newVelocity } =\n        zeta < 1\n          ? underDampedSpringCalculations(animation, {\n              zeta,\n              v0,\n              x0,\n              omega0,\n              omega1,\n              t,\n            })\n          : criticallyDampedSpringCalculations(animation, {\n              v0,\n              x0,\n              omega0,\n              t,\n            });\n\n      animation.current = newPosition;\n      animation.velocity = newVelocity;\n\n      const { isOvershooting, isVelocity, isDisplacement } =\n        isAnimationTerminatingCalculation(animation, config);\n\n      const springIsNotInMove =\n        isOvershooting || (isVelocity && isDisplacement);\n\n      if (!config.useDuration && springIsNotInMove) {\n        animation.velocity = 0;\n        animation.current = toValue;\n        // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n        animation.lastTimestamp = 0;\n        return true;\n      }\n\n      return false;\n    }\n\n    function isTriggeredTwice(\n      previousAnimation: SpringAnimation | undefined,\n      animation: SpringAnimation\n    ) {\n      return (\n        previousAnimation?.lastTimestamp &&\n        previousAnimation?.startTimestamp &&\n        previousAnimation?.toValue === animation.toValue &&\n        previousAnimation?.duration === animation.duration &&\n        previousAnimation?.dampingRatio === animation.dampingRatio\n      );\n    }\n\n    function onStart(\n      animation: SpringAnimation,\n      value: number,\n      now: Timestamp,\n      previousAnimation: SpringAnimation | undefined\n    ): void {\n      animation.current = value;\n      animation.startValue = value;\n\n      let mass = config.mass;\n      const triggeredTwice = isTriggeredTwice(previousAnimation, animation);\n\n      const duration = config.duration;\n\n      const x0 = triggeredTwice\n        ? // If animation is triggered twice we want to continue the previous animation\n          // form the previous starting point\n          previousAnimation?.startValue\n        : Number(animation.toValue) - value;\n\n      if (previousAnimation) {\n        animation.velocity =\n          (triggeredTwice\n            ? previousAnimation?.velocity\n            : previousAnimation?.velocity + config.velocity) || 0;\n      } else {\n        animation.velocity = config.velocity || 0;\n      }\n\n      if (triggeredTwice) {\n        animation.zeta = previousAnimation?.zeta || 0;\n        animation.omega0 = previousAnimation?.omega0 || 0;\n        animation.omega1 = previousAnimation?.omega1 || 0;\n      } else {\n        if (config.useDuration) {\n          const actualDuration = triggeredTwice\n            ? // If animation is triggered twice we want to continue the previous animation\n              // so we need to include the time that already elapsed\n              duration -\n              ((previousAnimation?.lastTimestamp || 0) -\n                (previousAnimation?.startTimestamp || 0))\n            : duration;\n\n          config.duration = actualDuration;\n          mass = calculateNewMassToMatchDuration(\n            x0 as number,\n            config,\n            animation.velocity\n          );\n        }\n\n        const { zeta, omega0, omega1 } = initialCalculations(mass, config);\n        animation.zeta = zeta;\n        animation.omega0 = omega0;\n        animation.omega1 = omega1;\n\n        if (config.clamp !== undefined) {\n          animation.zeta = scaleZetaToMatchClamps(animation, config.clamp);\n        }\n      }\n\n      animation.lastTimestamp = previousAnimation?.lastTimestamp || now;\n\n      animation.startTimestamp = triggeredTwice\n        ? previousAnimation?.startTimestamp || now\n        : now;\n    }\n\n    return {\n      onFrame: springOnFrame,\n      onStart,\n      toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      startValue: 0,\n      callback,\n      lastTimestamp: 0,\n      startTimestamp: 0,\n      zeta: 0,\n      omega0: 0,\n      omega1: 0,\n      reduceMotion: getReduceMotionForAnimation(config.reduceMotion),\n    } as SpringAnimation;\n  });\n}) as withSpringType;\n"],"mappings":"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","ignoreList":[]}