{"version":3,"names":["reading1Data","reading2Data","reading3Data","reading4Data","reading5Data","reading6Data","readingBonusData","cov_2kw704j10p","s","getReadingData","level","f","dataMap","b","loadReadingData","_ref","_asyncToGenerator","loaders","_","bonus","load","mod","default","e","_x","apply","arguments","getLevelColor","colors","getLevelDisplayName","displayNames","getLevelDescription","descriptions","getLevelIcon","icons","getLevelTitle","displayName","description","isBonusLevel","getAvailableLevels","getReadingStats","_data$metadata","data","exercises","totalTexts","totalQuestions","averageWordCount","averageQuestionsPerText","length","reduce","sum","exercise","questions","totalWords","wordCount","Math","round","metadata","getReadingExerciseById","textId","find","id","getReadingExercisesByDifficulty","difficulty","filter","getReadingExercisesByTopic","topic","_exercise$topics","topics","includes","getAvailableTopics","allTopics","flatMap","_toConsumableArray","Set","sort","a","localeCompare","getReadingMetadata","difficulties","getRandomReadingExercise","randomIndex","floor","random"],"sources":["readingDataHelper.js"],"sourcesContent":["// src/utils/reading/readingDataHelper.js\r\n\r\n// Import de tous les index des niveaux de lecture (6 niveaux + bonus)\r\n// Imports statiques conserv√©s pour compat internes/tests si besoin\r\nimport reading1Data from \"../../data/reading/1\";\r\nimport reading2Data from \"../../data/reading/2\";\r\nimport reading3Data from \"../../data/reading/3\";\r\nimport reading4Data from \"../../data/reading/4\";\r\nimport reading5Data from \"../../data/reading/5\";\r\nimport reading6Data from \"../../data/reading/6\";\r\nimport readingBonusData from \"../../data/reading/bonus\";\r\n\r\n/**\r\n * R√©cup√®re les donn√©es de lecture en fonction du niveau\r\n * @param {string} level - Le niveau de langue (1, 2, 3, 4, 5, 6, bonus)\r\n * @returns {Object} Les donn√©es de lecture pour le niveau sp√©cifi√©\r\n */\r\nexport const getReadingData = (level) => {\r\n  const dataMap = {\r\n    \"1\": reading1Data,\r\n    \"2\": reading2Data,\r\n    \"3\": reading3Data,\r\n    \"4\": reading4Data,\r\n    \"5\": reading5Data,\r\n    \"6\": reading6Data,\r\n    \"bonus\": readingBonusData,\r\n  };\r\n  \r\n  // Si le niveau demand√© n'existe pas, on retourne le niveau 1 par d√©faut\r\n  return dataMap[level] || reading1Data;\r\n};\r\n\r\n// Chargement dynamique pour r√©duire le bundle initial\r\nexport const loadReadingData = async (level) => {\r\n  try {\r\n    const loaders = {\r\n      \"1\": () => import(\"../../data/reading/1\"),\r\n      \"2\": () => import(\"../../data/reading/2\"),\r\n      \"3\": () => import(\"../../data/reading/3\"),\r\n      \"4\": () => import(\"../../data/reading/4\"),\r\n      \"5\": () => import(\"../../data/reading/5\"),\r\n      \"6\": () => import(\"../../data/reading/6\"),\r\n      bonus: () => import(\"../../data/reading/bonus\"),\r\n    };\r\n    const load = loaders[level] || loaders[\"1\"];\r\n    const mod = await load();\r\n    return mod.default || mod;\r\n  } catch (e) {\r\n    return getReadingData(\"1\");\r\n  }\r\n};\r\n\r\n/**\r\n * R√©cup√®re la couleur associ√©e √† un niveau de langue\r\n * @param {string} level - Le niveau de langue (1, 2, 3, 4, 5, 6, bonus)\r\n * @returns {string} Code couleur hexad√©cimal pour le niveau\r\n */\r\nexport const getLevelColor = (level) => {\r\n  const colors = {\r\n    \"1\": \"#3b82f6\", // Bleu - Niveau 1\r\n    \"2\": \"#8b5cf6\", // Violet - Niveau 2\r\n    \"3\": \"#10b981\", // Vert - Niveau 3\r\n    \"4\": \"#f59e0b\", // Orange - Niveau 4\r\n    \"5\": \"#ef4444\", // Rouge - Niveau 5\r\n    \"6\": \"#6366f1\", // Indigo - Niveau 6\r\n    \"bonus\": \"#9333EA\", // Violet premium - Bonus\r\n  };\r\n  return colors[level] || \"#3b82f6\"; // Bleu par d√©faut (niveau 1)\r\n};\r\n\r\n/**\r\n * R√©cup√®re le nom d'affichage d'un niveau\r\n * @param {string} level - Le niveau de langue (1, 2, 3, 4, 5, 6, bonus)\r\n * @returns {string} Nom d'affichage du niveau\r\n */\r\nexport const getLevelDisplayName = (level) => {\r\n  const displayNames = {\r\n    \"1\": \"Niveau 1\",\r\n    \"2\": \"Niveau 2\",\r\n    \"3\": \"Niveau 3\",\r\n    \"4\": \"Niveau 4\", \r\n    \"5\": \"Niveau 5\",\r\n    \"6\": \"Niveau 6\",\r\n    \"bonus\": \"Bonus\",\r\n  };\r\n  return displayNames[level] || `Niveau ${level}`;\r\n};\r\n\r\n/**\r\n * R√©cup√®re la description d'un niveau\r\n * @param {string} level - Le niveau de langue (1, 2, 3, 4, 5, 6, bonus)\r\n * @returns {string} Description du niveau\r\n */\r\nexport const getLevelDescription = (level) => {\r\n  const descriptions = {\r\n    \"1\": \"Communication basique, expressions simples du quotidien\",\r\n    \"2\": \"Expressions simples, conversations courantes\",\r\n    \"3\": \"Communication claire sur des sujets familiers\", \r\n    \"4\": \"Communication complexe, discussions techniques\",\r\n    \"5\": \"Expression fluide, sujets complexes\",\r\n    \"6\": \"Niveau proche du locuteur natif, ma√Ætrise de la langue\",\r\n    \"bonus\": \"Contenu exclusif et avanc√©\",\r\n  };\r\n  return descriptions[level] || \"Niveau de langue\";\r\n};\r\n\r\n/**\r\n * R√©cup√®re l'ic√¥ne associ√©e √† un niveau\r\n * @param {string} level - Le niveau de langue\r\n * @returns {string} Emoji ic√¥ne pour le niveau\r\n */\r\nexport const getLevelIcon = (level) => {\r\n  const icons = {\r\n    \"1\": \"üå±\",\r\n    \"2\": \"üåø\",\r\n    \"3\": \"üå≥\", \r\n    \"4\": \"üöÄ\",\r\n    \"5\": \"üíé\",\r\n    \"6\": \"üèÜ\",\r\n    \"bonus\": \"üî•\",\r\n  };\r\n  return icons[level] || \"üìñ\";\r\n};\r\n\r\n/**\r\n * R√©cup√®re le titre complet d'un niveau\r\n * @param {string} level - Le niveau de langue (1, 2, 3, 4, 5, 6, bonus)\r\n * @returns {string} Titre complet du niveau\r\n */\r\nexport const getLevelTitle = (level) => {\r\n  const displayName = getLevelDisplayName(level);\r\n  const description = getLevelDescription(level);\r\n  return `${displayName} - ${description}`;\r\n};\r\n\r\n/**\r\n * V√©rifie si un niveau est un niveau bonus\r\n * @param {string} level - Le niveau √† v√©rifier\r\n * @returns {boolean} True si c'est un niveau bonus\r\n */\r\nexport const isBonusLevel = (level) => {\r\n  return level === \"bonus\";\r\n};\r\n\r\n/**\r\n * R√©cup√®re la liste des niveaux disponibles\r\n * @returns {Array} Liste des niveaux disponibles\r\n */\r\nexport const getAvailableLevels = () => {\r\n  return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"bonus\"];\r\n};\r\n\r\n/**\r\n * R√©cup√®re les statistiques d'un niveau de lecture\r\n * @param {string} level - Le niveau de langue\r\n * @returns {Object} Statistiques du niveau\r\n */\r\nexport const getReadingStats = (level) => {\r\n  const data = getReadingData(level);\r\n  \r\n  if (!data || !data.exercises) {\r\n    return { \r\n      totalTexts: 0, \r\n      totalQuestions: 0,\r\n      averageWordCount: 0,\r\n      averageQuestionsPerText: 0\r\n    };\r\n  }\r\n\r\n  const totalTexts = data.exercises.length;\r\n  const totalQuestions = data.exercises.reduce((sum, exercise) => {\r\n    return sum + (exercise.questions ? exercise.questions.length : 0);\r\n  }, 0);\r\n  \r\n  const totalWords = data.exercises.reduce((sum, exercise) => {\r\n    return sum + (exercise.wordCount || 0);\r\n  }, 0);\r\n\r\n  return {\r\n    totalTexts,\r\n    totalQuestions,\r\n    averageWordCount: totalTexts > 0 ? Math.round(totalWords / totalTexts) : 0,\r\n    averageQuestionsPerText: totalTexts > 0 ? Math.round(totalQuestions / totalTexts) : 0,\r\n    level: data.metadata?.level || level,\r\n  };\r\n};\r\n\r\n/**\r\n * R√©cup√®re un exercice de lecture par ID\r\n * @param {string} level - Le niveau de langue\r\n * @param {string} textId - L'ID du texte\r\n * @returns {Object|null} L'exercice trouv√© ou null\r\n */\r\nexport const getReadingExerciseById = (level, textId) => {\r\n  const data = getReadingData(level);\r\n  if (!data.exercises) return null;\r\n  \r\n  return data.exercises.find(exercise => exercise.id === textId) || null;\r\n};\r\n\r\n/**\r\n * R√©cup√®re les exercices par difficult√©\r\n * @param {string} level - Le niveau de langue\r\n * @param {number} difficulty - La difficult√© (1, 2, 3...)\r\n * @returns {Array} Liste des exercices de cette difficult√©\r\n */\r\nexport const getReadingExercisesByDifficulty = (level, difficulty) => {\r\n  const data = getReadingData(level);\r\n  if (!data.exercises) return [];\r\n  \r\n  return data.exercises.filter(exercise => exercise.difficulty === difficulty);\r\n};\r\n\r\n/**\r\n * R√©cup√®re les exercices par sujet/topic\r\n * @param {string} level - Le niveau de langue\r\n * @param {string} topic - Le sujet recherch√©\r\n * @returns {Array} Liste des exercices sur ce sujet\r\n */\r\nexport const getReadingExercisesByTopic = (level, topic) => {\r\n  const data = getReadingData(level);\r\n  if (!data.exercises) return [];\r\n  \r\n  return data.exercises.filter(exercise => \r\n    exercise.topics?.includes(topic)\r\n  );\r\n};\r\n\r\n/**\r\n * R√©cup√®re tous les sujets disponibles pour un niveau\r\n * @param {string} level - Le niveau de langue\r\n * @returns {Array} Liste unique des sujets disponibles\r\n */\r\nexport const getAvailableTopics = (level) => {\r\n  const data = getReadingData(level);\r\n  if (!data.exercises) return [];\r\n  \r\n  const allTopics = data.exercises.flatMap(exercise => exercise.topics || []);\r\n  return [...new Set(allTopics)].sort((a, b) => a.localeCompare(b));\r\n};\r\n\r\n/**\r\n * R√©cup√®re les m√©tadonn√©es d'un niveau de lecture\r\n * @param {string} level - Le niveau de langue\r\n * @returns {Object} M√©tadonn√©es du niveau\r\n */\r\nexport const getReadingMetadata = (level) => {\r\n  const data = getReadingData(level);\r\n  return data.metadata || {\r\n    level,\r\n    totalTexts: 0,\r\n    totalQuestions: 0,\r\n    averageWordCount: 0,\r\n    difficulties: [],\r\n    topics: [],\r\n    description: \"Exercices de compr√©hension √©crite\"\r\n  };\r\n};\r\n\r\n/**\r\n * R√©cup√®re un exercice al√©atoire pour un niveau\r\n * @param {string} level - Le niveau de langue\r\n * @returns {Object|null} Un exercice al√©atoire ou null\r\n */\r\nexport const getRandomReadingExercise = (level) => {\r\n  const data = getReadingData(level);\r\n  if (!data.exercises || data.exercises.length === 0) return null;\r\n  \r\n  const randomIndex = Math.floor(Math.random() * data.exercises.length);\r\n  return data.exercises[randomIndex];\r\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}