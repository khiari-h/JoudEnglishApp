1c85514a664647a595cb3f1b4f9ca6fb
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1uo5fk957b() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseCard\\index.js";
  var hash = "821c6a81c5d9e46f4efc4381e6c235c609469f9a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseCard\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "1": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "2": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "3": {
        start: {
          line: 32,
          column: 30
        },
        end: {
          line: 61,
          column: 3
        }
      },
      "4": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "5": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 47,
          column: 8
        }
      },
      "6": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "7": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 57,
          column: 8
        }
      },
      "8": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 16
        }
      },
      "9": {
        start: {
          line: 63,
          column: 2
        },
        end: {
          line: 91,
          column: 4
        }
      },
      "10": {
        start: {
          line: 95,
          column: 0
        },
        end: {
          line: 103,
          column: 2
        }
      },
      "11": {
        start: {
          line: 106,
          column: 0
        },
        end: {
          line: 109,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 22
          }
        },
        loc: {
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 32,
            column: 31
          }
        },
        loc: {
          start: {
            line: 32,
            column: 36
          },
          end: {
            line: 61,
            column: 3
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 23,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 10
          },
          end: {
            line: 23,
            column: 19
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 15
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 15
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 48
          }
        }, {
          start: {
            line: 29,
            column: 52
          },
          end: {
            line: 29,
            column: 57
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 68
          },
          end: {
            line: 40,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 68
          },
          end: {
            line: 40,
            column: 84
          }
        }, {
          start: {
            line: 40,
            column: 88
          },
          end: {
            line: 40,
            column: 89
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "821c6a81c5d9e46f4efc4381e6c235c609469f9a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1uo5fk957b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uo5fk957b();
cov_1uo5fk957b().s[0]++;
var ExerciseCard = function ExerciseCard(_ref) {
  var title = _ref.title,
    description = _ref.description,
    icon = _ref.icon,
    progress = _ref.progress,
    _ref$color = _ref.color,
    color = _ref$color === void 0 ? (cov_1uo5fk957b().b[0][0]++, "#5E60CE") : _ref$color,
    onPress = _ref.onPress,
    _ref$isNew = _ref.isNew,
    isNew = _ref$isNew === void 0 ? (cov_1uo5fk957b().b[1][0]++, false) : _ref$isNew;
  cov_1uo5fk957b().f[0]++;
  var shouldShowProgress = (cov_1uo5fk957b().s[1]++, progress > 0);
  var shouldShowNewBadge = (cov_1uo5fk957b().s[2]++, (cov_1uo5fk957b().b[2][0]++, !shouldShowProgress) && (cov_1uo5fk957b().b[2][1]++, isNew));
  cov_1uo5fk957b().s[3]++;
  var renderBottomContent = function renderBottomContent() {
    cov_1uo5fk957b().f[1]++;
    cov_1uo5fk957b().s[4]++;
    if (shouldShowProgress) {
      cov_1uo5fk957b().b[3][0]++;
      cov_1uo5fk957b().s[5]++;
      return (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: _style.default.progressSection,
        children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: _style.default.progressContainer,
          children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
            style: _style.default.progressBar,
            children: (0, _jsxRuntime.jsx)(_reactNative.View, {
              style: [_style.default.progressFill, {
                width: `${Math.round((cov_1uo5fk957b().b[4][0]++, Number(progress)) || (cov_1uo5fk957b().b[4][1]++, 0))}%`,
                backgroundColor: color
              }],
              testID: "progress-fill"
            })
          }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
            style: [_style.default.progressText, {
              color: color
            }],
            children: [progress, "%"]
          })]
        })
      });
    } else {
      cov_1uo5fk957b().b[3][1]++;
    }
    cov_1uo5fk957b().s[6]++;
    if (shouldShowNewBadge) {
      cov_1uo5fk957b().b[5][0]++;
      cov_1uo5fk957b().s[7]++;
      return (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: _style.default.badgeContainer,
        children: (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: [_style.default.badge, {
            backgroundColor: `${color}15`
          }],
          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: [_style.default.badgeText, {
              color: color
            }],
            children: "Nouveau"
          })
        })
      });
    } else {
      cov_1uo5fk957b().b[5][1]++;
    }
    cov_1uo5fk957b().s[8]++;
    return null;
  };
  cov_1uo5fk957b().s[9]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
    style: [_style.default.card, {
      borderLeftColor: color,
      borderLeftWidth: 4
    }],
    onPress: onPress,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: _style.default.topSection,
      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
        style: [_style.default.iconContainer, {
          backgroundColor: `${color}15`
        }],
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _style.default.icon,
          children: icon
        })
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: _style.default.infoContainer,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _style.default.title,
          children: title
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _style.default.description,
          children: description
        })]
      })]
    }), renderBottomContent(), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: _style.default.buttonContainer,
      children: (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: [_style.default.startButton, {
          backgroundColor: color
        }],
        onPress: onPress,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _style.default.buttonText,
          children: "Commencer"
        })
      })
    })]
  });
};
cov_1uo5fk957b().s[10]++;
ExerciseCard.propTypes = {
  title: _propTypes.default.string.isRequired,
  description: _propTypes.default.string.isRequired,
  icon: _propTypes.default.string.isRequired,
  progress: _propTypes.default.number.isRequired,
  color: _propTypes.default.string,
  onPress: _propTypes.default.func.isRequired,
  isNew: _propTypes.default.bool
};
cov_1uo5fk957b().s[11]++;
ExerciseCard.defaultProps = {
  color: "#5E60CE",
  isNew: false
};
var _default = exports.default = (0, _react.memo)(ExerciseCard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,