{"version":3,"names":["_reactHooks","require","_useQuizEngine","_interopRequireDefault","describe","mockQuestions","word","choices","correctAnswer","it","_renderHook","renderHook","useQuizEngine","result","expect","current","currentQuestionIndex","toBe","score","selectedChoice","toBeNull","showResult","isFinished","userAnswers","toEqual","totalQuestions","currentQuestion","progress","_renderHook2","_renderHook3","resultNull","_renderHook4","undefined","resultUndefined","_renderHook5","act","isCorrect","handleAnswer","toHaveLength","question","choice","_renderHook6","_renderHook7","secondAnswer","_renderHook8","result_answer","_renderHook9","goToNextQuestion","_renderHook0","_renderHook1","_renderHook10","handleRestart","_renderHook11","every","answer","_renderHook12","singleQuestion","_renderHook13","_renderHook14","_ref","questions","initialProps","rerender","newQuestions","invalidQuestions","_renderHook15","incompleteQuestions","_renderHook16","toBeUndefined"],"sources":["useQuizEngine.test.js"],"sourcesContent":["// __tests__/hooks/useQuizEngine.test.js\nimport { renderHook, act } from '@testing-library/react-hooks';\nimport useQuizEngine from '../../src/hooks/useQuizEngine';\n\ndescribe('useQuizEngine', () => {\n  const mockQuestions = [\n    {\n      word: 'hello',\n      choices: ['bonjour', 'au revoir', 'merci', 'salut'],\n      correctAnswer: 'bonjour'\n    },\n    {\n      word: 'goodbye',\n      choices: ['au revoir', 'bonjour', 'merci', 'salut'],\n      correctAnswer: 'au revoir'\n    },\n    {\n      word: 'thank you',\n      choices: ['merci', 'bonjour', 'au revoir', 'salut'],\n      correctAnswer: 'merci'\n    }\n  ];\n\n  describe('Initialisation', () => {\n    it('devrait initialiser avec les bonnes valeurs par défaut', () => {\n      const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n      expect(result.current.currentQuestionIndex).toBe(0);\n      expect(result.current.score).toBe(0);\n      expect(result.current.selectedChoice).toBeNull();\n      expect(result.current.showResult).toBe(false);\n      expect(result.current.isFinished).toBe(false);\n      expect(result.current.userAnswers).toEqual([]);\n      expect(result.current.totalQuestions).toBe(3);\n      expect(result.current.currentQuestion).toEqual(mockQuestions[0]);\n      expect(result.current.progress).toBe(0);\n    });\n\n    it('devrait gérer un tableau de questions vide', () => {\n      const { result } = renderHook(() => useQuizEngine([]));\n\n      expect(result.current.totalQuestions).toBe(0);\n      expect(result.current.currentQuestion).toBeNull();\n      expect(result.current.progress).toBe(0);\n    });\n\n    it('devrait gérer des questions nulles ou undefined', () => {\n      const { result: resultNull } = renderHook(() => useQuizEngine(null));\n      const { result: resultUndefined } = renderHook(() => useQuizEngine(undefined));\n\n      expect(resultNull.current.totalQuestions).toBe(0);\n      expect(resultNull.current.currentQuestion).toBeNull();\n      \n      expect(resultUndefined.current.totalQuestions).toBe(0);\n      expect(resultUndefined.current.currentQuestion).toBeNull();\n    });\n  });\n\n  describe('Gestion des réponses', () => {\n    it('devrait traiter une réponse correcte', () => {\n      const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n      act(() => {\n        const isCorrect = result.current.handleAnswer('bonjour');\n        expect(isCorrect).toBe(true);\n      });\n\n      expect(result.current.score).toBe(1);\n      expect(result.current.selectedChoice).toBe('bonjour');\n      expect(result.current.showResult).toBe(true);\n      expect(result.current.userAnswers).toHaveLength(1);\n      expect(result.current.userAnswers[0]).toEqual({\n        question: 'hello',\n        choice: 'bonjour',\n        isCorrect: true\n      });\n    });\n\n    it('devrait traiter une réponse incorrecte', () => {\n      const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n      act(() => {\n        const isCorrect = result.current.handleAnswer('au revoir');\n        expect(isCorrect).toBe(false);\n      });\n\n      expect(result.current.score).toBe(0);\n      expect(result.current.selectedChoice).toBe('au revoir');\n      expect(result.current.showResult).toBe(true);\n      expect(result.current.userAnswers[0]).toEqual({\n        question: 'hello',\n        choice: 'au revoir',\n        isCorrect: false\n      });\n    });\n\n    it('ne devrait pas permettre de répondre deux fois à la même question', () => {\n      const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n      act(() => {\n        result.current.handleAnswer('bonjour');\n      });\n\n      act(() => {\n        const secondAnswer = result.current.handleAnswer('au revoir');\n        expect(secondAnswer).toBe(false);\n      });\n\n      expect(result.current.score).toBe(1); // Score inchangé\n      expect(result.current.selectedChoice).toBe('bonjour'); // Choix inchangé\n      expect(result.current.userAnswers).toHaveLength(1); // Une seule réponse\n    });\n\n    it('devrait retourner false si aucune question courante', () => {\n      const { result } = renderHook(() => useQuizEngine([]));\n\n      act(() => {\n        const result_answer = result.current.handleAnswer('test');\n        expect(result_answer).toBe(false);\n      });\n    });\n  });\n\n  describe('Navigation entre questions', () => {\n    it('devrait passer à la question suivante', () => {\n      const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n      // Répondre à la première question\n      act(() => {\n        result.current.handleAnswer('bonjour');\n      });\n\n      // Passer à la suivante\n      act(() => {\n        result.current.goToNextQuestion();\n      });\n\n      expect(result.current.currentQuestionIndex).toBe(1);\n      expect(result.current.currentQuestion).toEqual(mockQuestions[1]);\n      expect(result.current.selectedChoice).toBeNull();\n      expect(result.current.showResult).toBe(false);\n      expect(result.current.progress).toBe(33.33333333333333); // 1/3 * 100\n    });\n\n    it('devrait finir le quiz à la dernière question', () => {\n      const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n      // Aller à la dernière question\n      act(() => {\n        result.current.handleAnswer('bonjour');\n        result.current.goToNextQuestion();\n        result.current.handleAnswer('au revoir');\n        result.current.goToNextQuestion();\n        result.current.handleAnswer('merci');\n        result.current.goToNextQuestion();\n      });\n\n      expect(result.current.isFinished).toBe(true);\n      expect(result.current.progress).toBe(100);\n    });\n\n    it('devrait calculer la progression correctement', () => {\n      const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n      expect(result.current.progress).toBe(0); // 0/3\n\n      act(() => {\n        result.current.handleAnswer('bonjour');\n        result.current.goToNextQuestion();\n      });\n\n      expect(result.current.progress).toBe(33.33333333333333); // 1/3\n\n      act(() => {\n        result.current.handleAnswer('au revoir');\n        result.current.goToNextQuestion();\n      });\n\n      expect(result.current.progress).toBe(66.66666666666666); // 2/3\n    });\n  });\n\n  describe('Redémarrage du quiz', () => {\n    it('devrait réinitialiser tous les états', () => {\n      const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n      // Progresser dans le quiz\n      act(() => {\n        result.current.handleAnswer('bonjour');\n        result.current.goToNextQuestion();\n        result.current.handleAnswer('wrong answer');\n        result.current.goToNextQuestion();\n      });\n\n      expect(result.current.currentQuestionIndex).toBe(2);\n      expect(result.current.score).toBe(1);\n      expect(result.current.userAnswers).toHaveLength(2);\n\n      // Redémarrer\n      act(() => {\n        result.current.handleRestart();\n      });\n\n      expect(result.current.currentQuestionIndex).toBe(0);\n      expect(result.current.score).toBe(0);\n      expect(result.current.selectedChoice).toBeNull();\n      expect(result.current.showResult).toBe(false);\n      expect(result.current.isFinished).toBe(false);\n      expect(result.current.userAnswers).toEqual([]);\n      expect(result.current.currentQuestion).toEqual(mockQuestions[0]);\n      expect(result.current.progress).toBe(0);\n    });\n  });\n\n  describe('Scénarios complets', () => {\n    it('devrait gérer un quiz complet avec toutes bonnes réponses', () => {\n      const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n      // Question 1\n      act(() => {\n        result.current.handleAnswer('bonjour');\n        result.current.goToNextQuestion();\n      });\n\n      // Question 2\n      act(() => {\n        result.current.handleAnswer('au revoir');\n        result.current.goToNextQuestion();\n      });\n\n      // Question 3\n      act(() => {\n        result.current.handleAnswer('merci');\n        result.current.goToNextQuestion();\n      });\n\n      expect(result.current.isFinished).toBe(true);\n      expect(result.current.score).toBe(3);\n      expect(result.current.userAnswers).toHaveLength(3);\n      expect(result.current.userAnswers.every(answer => answer.isCorrect)).toBe(true);\n    });\n\n    it('devrait gérer un quiz complet avec toutes mauvaises réponses', () => {\n      const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n      // Question 1\n      act(() => {\n        result.current.handleAnswer('wrong1');\n        result.current.goToNextQuestion();\n      });\n\n      // Question 2\n      act(() => {\n        result.current.handleAnswer('wrong2');\n        result.current.goToNextQuestion();\n      });\n\n      // Question 3\n      act(() => {\n        result.current.handleAnswer('wrong3');\n        result.current.goToNextQuestion();\n      });\n\n      expect(result.current.isFinished).toBe(true);\n      expect(result.current.score).toBe(0);\n      expect(result.current.userAnswers).toHaveLength(3);\n      expect(result.current.userAnswers.every(answer => !answer.isCorrect)).toBe(true);\n    });\n\n    it('devrait gérer un quiz avec une seule question', () => {\n      const singleQuestion = [mockQuestions[0]];\n      const { result } = renderHook(() => useQuizEngine(singleQuestion));\n\n      expect(result.current.totalQuestions).toBe(1);\n      expect(result.current.progress).toBe(0);\n\n      act(() => {\n        result.current.handleAnswer('bonjour');\n        result.current.goToNextQuestion();\n      });\n\n      expect(result.current.isFinished).toBe(true);\n      expect(result.current.progress).toBe(100);\n    });\n  });\n\n  describe('Changement de questions en cours de route', () => {\n    it('devrait s\\'adapter aux nouvelles questions', () => {\n      const { result, rerender } = renderHook(\n        ({ questions }) => useQuizEngine(questions),\n        { initialProps: { questions: mockQuestions } }\n      );\n\n      expect(result.current.totalQuestions).toBe(3);\n\n      const newQuestions = [mockQuestions[0], mockQuestions[1]];\n      rerender({ questions: newQuestions });\n\n      expect(result.current.totalQuestions).toBe(2);\n    });\n  });\n\n  describe('Cas limites', () => {\n    it('devrait gérer des questions sans correctAnswer', () => {\n      const invalidQuestions = [\n        {\n          word: 'test',\n          choices: ['a', 'b', 'c', 'd']\n          // Pas de correctAnswer\n        }\n      ];\n\n      const { result } = renderHook(() => useQuizEngine(invalidQuestions));\n\n      act(() => {\n        const isCorrect = result.current.handleAnswer('a');\n        expect(isCorrect).toBe(false); // undefined !== 'a'\n      });\n    });\n\n    it('devrait gérer des questions avec des données manquantes', () => {\n      const incompleteQuestions = [\n        {\n          // Pas de word\n          choices: ['a', 'b'],\n          correctAnswer: 'a'\n        }\n      ];\n\n      const { result } = renderHook(() => useQuizEngine(incompleteQuestions));\n\n      expect(result.current.currentQuestion).toEqual(incompleteQuestions[0]);\n      \n      act(() => {\n        result.current.handleAnswer('a');\n      });\n\n      expect(result.current.userAnswers[0].question).toBeUndefined();\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}