a28d551a696ec197cc1906956af9805e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BasePressable;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["style", "onPress", "onLongPress", "disabled", "androidRipple", "children"];
function cov_o013o7alv() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\Button\\BasePressable.js";
  var hash = "303ea5589202beb9b1dd94871a3892bb20bc2d64";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\Button\\BasePressable.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 27,
          column: 4
        }
      },
      "1": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 37,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "BasePressable",
        decl: {
          start: {
            line: 5,
            column: 24
          },
          end: {
            line: 5,
            column: 37
          }
        },
        loc: {
          start: {
            line: 13,
            column: 3
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "303ea5589202beb9b1dd94871a3892bb20bc2d64"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_o013o7alv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_o013o7alv();
function BasePressable(_ref) {
  var style = _ref.style,
    onPress = _ref.onPress,
    onLongPress = _ref.onLongPress,
    disabled = _ref.disabled,
    androidRipple = _ref.androidRipple,
    children = _ref.children,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  cov_o013o7alv().f[0]++;
  cov_o013o7alv().s[0]++;
  return (0, _jsxRuntime.jsx)(_reactNative.Pressable, Object.assign({
    style: style,
    onPress: onPress,
    onLongPress: onLongPress,
    disabled: disabled,
    android_ripple: androidRipple,
    accessibilityRole: "button",
    accessible: true
  }, props, {
    children: children
  }));
}
cov_o013o7alv().s[1]++;
BasePressable.propTypes = {
  style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
  onPress: _propTypes.default.func,
  onLongPress: _propTypes.default.func,
  disabled: _propTypes.default.bool,
  androidRipple: _propTypes.default.object,
  children: _propTypes.default.node
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3Byb3BUeXBlcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfanN4UnVudGltZSIsIl9leGNsdWRlZCIsImNvdl9vMDEzbzdhbHYiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJCYXNlUHJlc3NhYmxlIiwiX3JlZiIsInN0eWxlIiwib25QcmVzcyIsIm9uTG9uZ1ByZXNzIiwiZGlzYWJsZWQiLCJhbmRyb2lkUmlwcGxlIiwiY2hpbGRyZW4iLCJwcm9wcyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJkZWZhdWx0IiwianN4IiwiUHJlc3NhYmxlIiwiT2JqZWN0IiwiYXNzaWduIiwiYW5kcm9pZF9yaXBwbGUiLCJhY2Nlc3NpYmlsaXR5Um9sZSIsImFjY2Vzc2libGUiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJvYmplY3QiLCJhcnJheSIsImZ1bmMiLCJib29sIiwibm9kZSJdLCJzb3VyY2VzIjpbIkJhc2VQcmVzc2FibGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NvbXBvbmVudHMvdWkvQnV0dG9uL0Jhc2VQcmVzc2FibGUuanNcclxuaW1wb3J0IHsgUHJlc3NhYmxlIH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmFzZVByZXNzYWJsZSh7XHJcbiAgc3R5bGUsXHJcbiAgb25QcmVzcyxcclxuICBvbkxvbmdQcmVzcyxcclxuICBkaXNhYmxlZCxcclxuICBhbmRyb2lkUmlwcGxlLFxyXG4gIGNoaWxkcmVuLFxyXG4gIC4uLnByb3BzXHJcbn0pIHtcclxuICByZXR1cm4gKFxyXG4gICAgPFByZXNzYWJsZVxyXG4gICAgICBzdHlsZT17c3R5bGV9XHJcbiAgICAgIG9uUHJlc3M9e29uUHJlc3N9XHJcbiAgICAgIG9uTG9uZ1ByZXNzPXtvbkxvbmdQcmVzc31cclxuICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxyXG4gICAgICBhbmRyb2lkX3JpcHBsZT17YW5kcm9pZFJpcHBsZX1cclxuICAgICAgYWNjZXNzaWJpbGl0eVJvbGU9XCJidXR0b25cIlxyXG4gICAgICBhY2Nlc3NpYmxlXHJcbiAgICAgIHsuLi5wcm9wc31cclxuICAgID5cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgPC9QcmVzc2FibGU+XHJcbiAgKTtcclxufVxyXG5cclxuQmFzZVByZXNzYWJsZS5wcm9wVHlwZXMgPSB7XHJcbiAgc3R5bGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5hcnJheV0pLFxyXG4gIG9uUHJlc3M6IFByb3BUeXBlcy5mdW5jLFxyXG4gIG9uTG9uZ1ByZXNzOiBQcm9wVHlwZXMuZnVuYyxcclxuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgYW5kcm9pZFJpcHBsZTogUHJvcFR5cGVzLm9iamVjdCxcclxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXHJcbn07XHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxVQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFBbUMsSUFBQUcsV0FBQSxHQUFBSCxPQUFBO0FBQUEsSUFBQUksU0FBQTtBQUFBLFNBQUFDLGNBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdB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