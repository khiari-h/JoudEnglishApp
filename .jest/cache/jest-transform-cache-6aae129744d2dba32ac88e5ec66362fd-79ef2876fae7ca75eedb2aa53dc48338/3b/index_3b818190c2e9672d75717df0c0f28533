98fed249cade8442907718ae524f96e4
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _NavigationButtons = _interopRequireDefault(require("../../../../components/exercise-common/NavigationButtons"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_21arux0nd4() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesNavigation\\index.js";
  var hash = "f3f373ffeddfa92ba86ce5ba24f3c5aee580e199";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesNavigation\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "1": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 36,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 12,
            column: 27
          }
        },
        loc: {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 2
          },
          end: {
            line: 15,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 15,
            column: 25
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 21
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 24
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 16
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f3f373ffeddfa92ba86ce5ba24f3c5aee580e199"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_21arux0nd4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21arux0nd4();
cov_21arux0nd4().s[0]++;
var PhrasesNavigation = function PhrasesNavigation(_ref) {
  var onPrevious = _ref.onPrevious,
    onNext = _ref.onNext,
    _ref$disablePrevious = _ref.disablePrevious,
    disablePrevious = _ref$disablePrevious === void 0 ? (cov_21arux0nd4().b[0][0]++, false) : _ref$disablePrevious,
    _ref$disableNext = _ref.disableNext,
    disableNext = _ref$disableNext === void 0 ? (cov_21arux0nd4().b[1][0]++, false) : _ref$disableNext,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_21arux0nd4().b[2][0]++, "#5E60CE") : _ref$levelColor,
    _ref$isLast = _ref.isLast,
    isLast = _ref$isLast === void 0 ? (cov_21arux0nd4().b[3][0]++, false) : _ref$isLast;
  cov_21arux0nd4().f[0]++;
  cov_21arux0nd4().s[1]++;
  return (0, _jsxRuntime.jsx)(_NavigationButtons.default, {
    onNext: onNext,
    onPrevious: onPrevious,
    disablePrevious: disablePrevious,
    disableNext: disableNext,
    primaryColor: levelColor,
    isLast: isLast,
    buttonLabels: {
      next: "Suivant",
      previous: "Précédent",
      finish: "Terminer"
    }
  });
};
var _default = exports.default = PhrasesNavigation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfTmF2aWdhdGlvbkJ1dHRvbnMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9qc3hSdW50aW1lIiwiY292XzIxYXJ1eDBuZDQiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInR5cGUiLCJsb2NhdGlvbnMiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiUGhyYXNlc05hdmlnYXRpb24iLCJfcmVmIiwib25QcmV2aW91cyIsIm9uTmV4dCIsIl9yZWYkZGlzYWJsZVByZXZpb3VzIiwiZGlzYWJsZVByZXZpb3VzIiwiX3JlZiRkaXNhYmxlTmV4dCIsImRpc2FibGVOZXh0IiwiX3JlZiRsZXZlbENvbG9yIiwibGV2ZWxDb2xvciIsIl9yZWYkaXNMYXN0IiwiaXNMYXN0IiwianN4IiwiZGVmYXVsdCIsInByaW1hcnlDb2xvciIsImJ1dHRvbkxhYmVscyIsIm5leHQiLCJwcmV2aW91cyIsImZpbmlzaCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFBocmFzZXNOYXZpZ2F0aW9uL2luZGV4LmpzIC0gVkVSU0lPTiBPUFRJTUlTw4lFIChwbHVzIGRlIFwiMS8yXCIgcmVkb25kYW50KVxyXG5cclxuaW1wb3J0IE5hdmlnYXRpb25CdXR0b25zIGZyb20gXCIuLi8uLi8uLi8uLi9jb21wb25lbnRzL2V4ZXJjaXNlLWNvbW1vbi9OYXZpZ2F0aW9uQnV0dG9uc1wiO1xyXG5cclxuLyoqXHJcbiAqIOKPre+4jyBQaHJhc2VzTmF2aWdhdGlvbiAtIFZlcnNpb24gT3B0aW1pc8OpZVxyXG4gKiAtIFBsdXMgZCdpbmRpY2F0ZXVyIFwiMS8yXCIgcmVkb25kYW50IFxyXG4gKiAtIFV0aWxpc2UgbGUgTmF2aWdhdGlvbkJ1dHRvbnMgb3B0aW1pc8OpXHJcbiAqIC0gSW50ZXJmYWNlIGNvaMOpcmVudGUgYXZlYyBWb2NhYnVsYXJ5TmF2aWdhdGlvbiBldCBHcmFtbWFyTmF2aWdhdGlvblxyXG4gKiAtIFByb3BzIHNpbXBsaWZpw6llc1xyXG4gKi9cclxuY29uc3QgUGhyYXNlc05hdmlnYXRpb24gPSAoeyBcclxuICBvblByZXZpb3VzLCBcclxuICBvbk5leHQsIFxyXG4gIGRpc2FibGVQcmV2aW91cyA9IGZhbHNlLCBcclxuICBkaXNhYmxlTmV4dCA9IGZhbHNlLFxyXG4gIGxldmVsQ29sb3IgPSBcIiM1RTYwQ0VcIixcclxuICBpc0xhc3QgPSBmYWxzZSwgLy8gTm91dmVhdSBwcm9wIHNpbXBsZSBwb3VyIFwiVGVybWluZXJcIlxyXG59KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxOYXZpZ2F0aW9uQnV0dG9uc1xyXG4gICAgICBvbk5leHQ9e29uTmV4dH1cclxuICAgICAgb25QcmV2aW91cz17b25QcmV2aW91c31cclxuICAgICAgZGlzYWJsZVByZXZpb3VzPXtkaXNhYmxlUHJldmlvdXN9XHJcbiAgICAgIGRpc2FibGVOZXh0PXtkaXNhYmxlTmV4dH1cclxuICAgICAgcHJpbWFyeUNvbG9yPXtsZXZlbENvbG9yfVxyXG4gICAgICBpc0xhc3Q9e2lzTGFzdH1cclxuICAgICAgYnV0dG9uTGFiZWxzPXt7XHJcbiAgICAgICAgbmV4dDogXCJTdWl2YW50XCIsXHJcbiAgICAgICAgcHJldmlvdXM6IFwiUHLDqWPDqWRlbnRcIiwgXHJcbiAgICAgICAgZmluaXNoOiBcIlRlcm1pbmVyXCJcclxuICAgICAgfX1cclxuICAgICAgLy8g8J+nuSBTVVBQUklNw4kgOiBjdXJyZW50SW5kZXgsIHRvdGFsQ291bnQsIHNob3dTa2lwLCB2YXJpYW50LCB3cmFwcGVyIFZpZXdcclxuICAgICAgLy8gUGx1cyBkZSBcIjEvMlwiIHJlZG9uZGFudCAhXHJcbiAgICAvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQaHJhc2VzTmF2aWdhdGlvbjsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUEsSUFBQUEsa0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUF5RixJQUFBQyxXQUFBLEdBQUFELE9BQUE7QUFBQSxTQUFBRSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBVSxDQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLGVBQUE7SUFBQXBCLElBQUE7RUFBQTtFQUFBLElBQUFxQixRQUFBLEdBQUFwQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWtCLFFBQUEsQ0FBQXRCLElBQUEsS0FBQXNCLFFBQUEsQ0FBQXRCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFxQixRQUFBLENBQUF0QixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFrQixjQUFBLEdBQUFELFFBQUEsQ0FBQXRCLElBQUE7RUFBQTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBd0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXhCLGNBQUE7QUFBQUEsY0FBQSxHQUFBbUIsQ0FBQTtBQVN6RixJQUFNTSxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQWlCQSxDQUFBQyxJQUFBLEVBT2pCO0VBQUEsSUFOSkMsVUFBVSxHQUFBRCxJQUFBLENBQVZDLFVBQVU7SUFDVkMsTUFBTSxHQUFBRixJQUFBLENBQU5FLE1BQU07SUFBQUMsb0JBQUEsR0FBQUgsSUFBQSxDQUNOSSxlQUFlO0lBQWZBLGVBQWUsR0FBQUQsb0JBQUEsZUFBQTdCLGNBQUEsR0FBQXFCLENBQUEsVUFBRyxLQUFLLElBQUFRLG9CQUFBO0lBQUFFLGdCQUFBLEdBQUFMLElBQUEsQ0FDdkJNLFdBQVc7SUFBWEEsV0FBVyxHQUFBRCxnQkFBQSxlQUFBL0IsY0FBQSxHQUFBcUIsQ0FBQSxVQUFHLEtBQUssSUFBQVUsZ0JBQUE7SUFBQUUsZUFBQSxHQUFBUCxJQUFBLENBQ25CUSxVQUFVO0lBQVZBLFVBQVUsR0FBQUQsZUFBQSxlQUFBakMsY0FBQSxHQUFBcUIsQ0FBQSxVQUFHLFNBQVMsSUFBQVksZUFBQTtJQUFBRSxXQUFBLEdBQUFULElBQUEsQ0FDdEJVLE1BQU07SUFBTkEsTUFBTSxHQUFBRCxXQUFBLGVBQUFuQyxjQUFBLEdBQUFxQixDQUFBLFVBQUcsS0FBSyxJQUFBYyxXQUFBO0VBQUFuQyxjQUFBLEdBQUFvQixDQUFBO0VBQUFwQixjQUFBLEdBQUFtQixDQUFBO0VBRWQsT0FDRSxJQUFBcEIsV0FBQSxDQUFBc0MsR0FBQSxFQUFDekMsa0JBQUEsQ0FBQTBDLE9BQWlCO0lBQ2hCVixNQUFNLEVBQUVBLE1BQU87SUFDZkQsVUFBVSxFQUFFQSxVQUFXO0lBQ3ZCRyxlQUFlLEVBQUVBLGVBQWdCO0lBQ2pDRSxXQUFXLEVBQUVBLFdBQVk7SUFDekJPLFlBQVksRUFBRUwsVUFBVztJQUN6QkUsTUFBTSxFQUFFQSxNQUFPO0lBQ2ZJLFlBQVksRUFBRTtNQUNaQyxJQUFJLEVBQUUsU0FBUztNQUNmQyxRQUFRLEVBQUUsV0FBVztNQUNyQkMsTUFBTSxFQUFFO0lBQ1Y7RUFBRSxDQUdILENBQUM7QUFFTixDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFQLE9BQUEsR0FFYWIsaUJBQWlCIiwiaWdub3JlTGlzdCI6W119