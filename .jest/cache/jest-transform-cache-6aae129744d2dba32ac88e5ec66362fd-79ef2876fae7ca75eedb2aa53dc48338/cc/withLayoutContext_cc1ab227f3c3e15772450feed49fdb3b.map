{"version":3,"names":["react_1","__importStar","require","Route_1","useScreens_1","Screen_1","useFilterScreenChildren","children","_ref","arguments","length","undefined","isCustomNavigator","contextKey","useMemo","customChildren","screens","Children","map","child","isValidElement","type","Screen","props","name","Error","process","env","NODE_ENV","some","key","push","console","warn","names","screen","Set","size","exports","withLayoutContext","Nav","processor","Object","assign","forwardRef","_ref2","ref","userDefinedChildren","_objectWithoutProperties2","default","_excluded","useContextKey","_useFilterScreenChild","processed","sorted","useSortedScreens","_jsxRuntime","jsx","id"],"sources":["../../src/layouts/withLayoutContext.tsx"],"sourcesContent":["import { EventMapBase, NavigationState } from '@react-navigation/native';\nimport React, {\n  Children,\n  forwardRef,\n  ComponentProps,\n  ComponentType,\n  ForwardRefExoticComponent,\n  PropsWithoutRef,\n  ReactNode,\n  RefAttributes,\n  isValidElement,\n  useMemo,\n} from 'react';\n\nimport { useContextKey } from '../Route';\nimport { PickPartial } from '../types';\nimport { useSortedScreens, ScreenProps } from '../useScreens';\nimport { Screen } from '../views/Screen';\n\nexport function useFilterScreenChildren(\n  children: ReactNode,\n  {\n    isCustomNavigator,\n    contextKey,\n  }: {\n    isCustomNavigator?: boolean;\n    /** Used for sending developer hints */\n    contextKey?: string;\n  } = {}\n) {\n  return useMemo(() => {\n    const customChildren: any[] = [];\n    const screens = Children.map(children, (child) => {\n      if (isValidElement(child) && child && child.type === Screen) {\n        if (!child.props.name) {\n          throw new Error(\n            `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`\n          );\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (['children', 'component', 'getComponent'].some((key) => key in child.props)) {\n            throw new Error(\n              `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`\n            );\n          }\n        }\n        return child.props;\n      } else {\n        if (isCustomNavigator) {\n          customChildren.push(child);\n        } else {\n          console.warn(\n            `Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`\n          );\n        }\n      }\n    });\n\n    // Add an assertion for development\n    if (process.env.NODE_ENV !== 'production') {\n      // Assert if names are not unique\n      const names = screens?.map((screen) => screen.name);\n      if (names && new Set(names).size !== names.length) {\n        throw new Error('Screen names must be unique: ' + names);\n      }\n    }\n\n    return {\n      screens,\n      children: customChildren,\n    };\n  }, [children]);\n}\n\n/**\n * Returns a navigator that automatically injects matched routes and renders nothing when there are no children.\n * Return type with `children` prop optional.\n */\nexport function withLayoutContext<\n  TOptions extends object,\n  T extends ComponentType<any>,\n  TState extends NavigationState,\n  TEventMap extends EventMapBase,\n>(\n  Nav: T,\n  processor?: (\n    options: ScreenProps<TOptions, TState, TEventMap>[]\n  ) => ScreenProps<TOptions, TState, TEventMap>[]\n) {\n  return Object.assign(\n    forwardRef(({ children: userDefinedChildren, ...props }: any, ref) => {\n      const contextKey = useContextKey();\n\n      const { screens } = useFilterScreenChildren(userDefinedChildren, {\n        contextKey,\n      });\n\n      const processed = processor ? processor(screens ?? []) : screens;\n\n      const sorted = useSortedScreens(processed ?? []);\n\n      // Prevent throwing an error when there are no screens.\n      if (!sorted.length) {\n        return null;\n      }\n\n      return <Nav {...props} id={contextKey} ref={ref} children={sorted} />;\n    }),\n    {\n      Screen,\n    }\n  ) as ForwardRefExoticComponent<\n    PropsWithoutRef<PickPartial<ComponentProps<T>, 'children'>> & RefAttributes<unknown>\n  > & {\n    Screen: (props: ScreenProps<TOptions, TState, TEventMap>) => null;\n  };\n}\n"],"mappings":"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","ignoreList":[]}