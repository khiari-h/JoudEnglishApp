{"version":3,"names":["_errorCorrectionA2Full","_interopRequireDefault","require","_errorCorrectionA2Identify","_errorCorrectionA2MultipleChoice","allExercises","concat","_toConsumableArray2","default","errorCorrectionA2Full","errorCorrectionA2Identify","errorCorrectionA2MultipleChoice","sort","a","b","categoryId","typeOrder","type","errorCorrectionA2","level","totalExercises","length","statistics","full","identify","multiple_choice","byCategory","name","count","categories","id","description","exerciseCount","difficulty","color","topics","exercises","getExercisesByCategory","filter","exercise","getExercisesByType","getExercisesByCategoryAndType","getExercisesByTopic","topic","category","find","cat","includes","validateStructure","requiredFields","validTypes","every","hasRequiredFields","field","Object","prototype","hasOwnProperty","call","undefined","hasValidType","hasValidCategory","hasTypeSpecificFields","choices","Array","isArray","correctChoiceIndex","errorPositions","getSummary","progression","distribution","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/data/exercises/errorCorrection/A2/index.js\r\n\r\nimport errorCorrectionA2Full from './categories/errorCorrectionA2Full';\r\nimport errorCorrectionA2Identify from './categories/errorCorrectionA2Identify';\r\nimport errorCorrectionA2MultipleChoice from './categories/errorCorrectionA2MultipleChoice';\r\n\r\n// Combine all exercises from the 3 files\r\nconst allExercises = [\r\n  ...errorCorrectionA2Full,\r\n  ...errorCorrectionA2Identify,\r\n  ...errorCorrectionA2MultipleChoice\r\n];\r\n\r\n// Sort exercises by categoryId to maintain logical order\r\nallExercises.sort((a, b) => {\r\n  if (a.categoryId !== b.categoryId) {\r\n    return a.categoryId - b.categoryId;\r\n  }\r\n  // Within same category, order by type: full, identify, multiple_choice\r\n  const typeOrder = { 'full': 1, 'identify': 2, 'multiple_choice': 3 };\r\n  return typeOrder[a.type] - typeOrder[b.type];\r\n});\r\n\r\nconst errorCorrectionA2 = {\r\n  level: \"A2\",\r\n  totalExercises: allExercises.length,\r\n\r\n  // Statistics by type\r\n  statistics: {\r\n    full: errorCorrectionA2Full.length,\r\n    identify: errorCorrectionA2Identify.length,\r\n    multiple_choice: errorCorrectionA2MultipleChoice.length,\r\n    byCategory: {\r\n      1: { name: \"Past Tense\", count: 7 },           // 2 full + 3 identify + 2 multiple_choice\r\n      2: { name: \"Future Forms\", count: 6 },         // 2 full + 2 identify + 2 multiple_choice\r\n      3: { name: \"Comparative & Superlative\", count: 5 }, // 2 full + 2 identify + 1 multiple_choice\r\n      4: { name: \"Prepositions\", count: 7 },         // 2 full + 3 identify + 2 multiple_choice\r\n      5: { name: \"Modal Verbs\", count: 5 }           // 2 full + 2 identify + 1 multiple_choice\r\n    }\r\n  },\r\n\r\n  // Categories metadata for A2 intermediate level\r\n  categories: [\r\n    {\r\n      id: 1,\r\n      name: \"Past Tense\",\r\n      description: \"Past simple, past continuous, and irregular verbs\",\r\n      exerciseCount: 7,\r\n      difficulty: \"Intermediate\",\r\n      color: \"#3b82f6\",\r\n      topics: [\"past simple\", \"past continuous\", \"irregular verbs\", \"past negatives\"]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Future Forms\",\r\n      description: \"Will, going to, and present continuous for future\",\r\n      exerciseCount: 6,\r\n      difficulty: \"Intermediate\", \r\n      color: \"#10b981\",\r\n      topics: [\"will\", \"going to\", \"future plans\", \"predictions\"]\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Comparative & Superlative\",\r\n      description: \"Comparative and superlative adjectives\",\r\n      exerciseCount: 5,\r\n      difficulty: \"Intermediate\",\r\n      color: \"#f59e0b\",\r\n      topics: [\"comparative adjectives\", \"superlative adjectives\", \"irregular forms\"]\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Prepositions\",\r\n      description: \"Prepositions of time, place, and movement\",\r\n      exerciseCount: 7,\r\n      difficulty: \"Intermediate\",\r\n      color: \"#8b5cf6\",\r\n      topics: [\"time prepositions\", \"place prepositions\", \"verb + preposition\"]\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Modal Verbs\",\r\n      description: \"Can, could, should, must, and have to\",\r\n      exerciseCount: 5,\r\n      difficulty: \"Intermediate\",\r\n      color: \"#ef4444\",\r\n      topics: [\"ability\", \"obligation\", \"advice\", \"permission\"]\r\n    },\r\n  ],\r\n\r\n  // All exercises combined and sorted\r\n  exercises: allExercises,\r\n\r\n  // Helper methods for filtering exercises\r\n  getExercisesByCategory: (categoryId) => {\r\n    return allExercises.filter(exercise => exercise.categoryId === categoryId);\r\n  },\r\n\r\n  getExercisesByType: (type) => {\r\n    return allExercises.filter(exercise => exercise.type === type);\r\n  },\r\n\r\n  getExercisesByCategoryAndType: (categoryId, type) => {\r\n    return allExercises.filter(exercise => \r\n      exercise.categoryId === categoryId && exercise.type === type\r\n    );\r\n  },\r\n\r\n  // Get exercises by difficulty or topic\r\n  getExercisesByTopic: (topic) => {\r\n    return allExercises.filter(exercise => {\r\n      const category = errorCorrectionA2.categories.find(cat => cat.id === exercise.categoryId);\r\n      return category?.topics.includes(topic);\r\n    });\r\n  },\r\n\r\n  // Validation\r\n  validateStructure: () => {\r\n    const requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];\r\n    const validTypes = ['full', 'identify', 'multiple_choice'];\r\n\r\n    return allExercises.every(exercise => {\r\n      // Check required fields\r\n      const hasRequiredFields = requiredFields.every(field => \r\n        Object.prototype.hasOwnProperty.call(exercise, field) && exercise[field] !== undefined\r\n      );\r\n\r\n      // Check valid type\r\n      const hasValidType = validTypes.includes(exercise.type);\r\n\r\n      // Check valid category (1-5 for A2)\r\n      const hasValidCategory = exercise.categoryId >= 1 && exercise.categoryId <= 5;\r\n\r\n      // Check type-specific fields\r\n      let hasTypeSpecificFields = true;\r\n      if (exercise.type === 'multiple_choice') {\r\n        hasTypeSpecificFields = exercise.choices && \r\n                               Array.isArray(exercise.choices) &&\r\n                               exercise.choices.length >= 2 &&\r\n                               exercise.correctChoiceIndex !== undefined &&\r\n                               exercise.correctChoiceIndex >= 0 &&\r\n                               exercise.correctChoiceIndex < exercise.choices.length;\r\n      } else {\r\n        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);\r\n      }\r\n\r\n      return hasRequiredFields && hasValidType && hasValidCategory && hasTypeSpecificFields;\r\n    });\r\n  },\r\n\r\n  // Get summary statistics\r\n  getSummary: () => {\r\n    return {\r\n      level: \"A2\",\r\n      totalExercises: allExercises.length,\r\n      categories: errorCorrectionA2.categories.length,\r\n      difficulty: \"Intermediate\",\r\n      progression: \"Builds on A1 with past/future tenses, comparatives, prepositions, and modals\",\r\n      distribution: {\r\n        full: errorCorrectionA2Full.length,\r\n        identify: errorCorrectionA2Identify.length,\r\n        multiple_choice: errorCorrectionA2MultipleChoice.length\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n// Validate structure on export\r\nif (!errorCorrectionA2.validateStructure()) {\r\n  // empty: structure invalid, handle if needed\r\n} else {\r\n  // empty: structure valid, nothing to do\r\n}\r\n\r\nexport default errorCorrectionA2;\r\n"],"mappings":"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","ignoreList":[]}