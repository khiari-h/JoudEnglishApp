e2240e5e1f4c6694c6a88b8dae6da69c
_getJestObj().mock('@expo/vector-icons');
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _Header = _interopRequireDefault(require("../../../src/components/layout/Header"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('Header', function () {
  it('affiche le titre passé en prop', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Accueil"
      })),
      getByText = _render.getByText;
    expect(getByText('Accueil')).toBeTruthy();
  });
  it('n’affiche pas le bouton retour si showBackButton est false ou non défini', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Sans Retour",
        showBackButton: false
      })),
      queryByTestId = _render2.queryByTestId;
    expect(queryByTestId('back-button')).toBeNull();
  });
  it('affiche le bouton retour si showBackButton est true', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Avec Retour",
        showBackButton: true
      })),
      getByTestId = _render3.getByTestId;
    expect(getByTestId('back-button')).toBeTruthy();
  });
  it('exécute une action au clic sur le bouton retour si onBackPress est défini', function () {
    var mockFn = jest.fn();
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Retour",
        showBackButton: true,
        onBackPress: mockFn
      })),
      getByTestId = _render4.getByTestId;
    _reactNative.fireEvent.press(getByTestId('back-button'));
    expect(mockFn).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl9yZWFjdE5hdGl2ZSIsIl9IZWFkZXIiLCJfanN4UnVudGltZSIsIl9yZXF1aXJlIiwiamVzdCIsImRlc2NyaWJlIiwiaXQiLCJfcmVuZGVyIiwicmVuZGVyIiwianN4IiwiZGVmYXVsdCIsInRpdGxlIiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsIl9yZW5kZXIyIiwic2hvd0JhY2tCdXR0b24iLCJxdWVyeUJ5VGVzdElkIiwidG9CZU51bGwiLCJfcmVuZGVyMyIsImdldEJ5VGVzdElkIiwibW9ja0ZuIiwiZm4iLCJfcmVuZGVyNCIsIm9uQmFja1ByZXNzIiwiZmlyZUV2ZW50IiwicHJlc3MiLCJ0b0hhdmVCZWVuQ2FsbGVkIl0sInNvdXJjZXMiOlsiSGVhZGVyLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gX190ZXN0c19fL2NvbXBvbmVudHMvbGF5b3V0L0hlYWRlci50ZXN0LmpzXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIsIGZpcmVFdmVudCB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvbGF5b3V0L0hlYWRlcic7XG5cbmplc3QubW9jaygnQGV4cG8vdmVjdG9yLWljb25zJyk7IC8vIEltcG9ydGFudCBwb3VyIMOpdml0ZXIgbCdlcnJldXIgRVNNXG5cbmRlc2NyaWJlKCdIZWFkZXInLCAoKSA9PiB7XG4gIGl0KCdhZmZpY2hlIGxlIHRpdHJlIHBhc3PDqSBlbiBwcm9wJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSByZW5kZXIoPEhlYWRlciB0aXRsZT1cIkFjY3VlaWxcIiAvPik7XG4gICAgZXhwZWN0KGdldEJ5VGV4dCgnQWNjdWVpbCcpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIGl0KCdu4oCZYWZmaWNoZSBwYXMgbGUgYm91dG9uIHJldG91ciBzaSBzaG93QmFja0J1dHRvbiBlc3QgZmFsc2Ugb3Ugbm9uIGTDqWZpbmknLCAoKSA9PiB7XG4gICAgY29uc3QgeyBxdWVyeUJ5VGVzdElkIH0gPSByZW5kZXIoPEhlYWRlciB0aXRsZT1cIlNhbnMgUmV0b3VyXCIgc2hvd0JhY2tCdXR0b249e2ZhbHNlfSAvPik7XG4gICAgZXhwZWN0KHF1ZXJ5QnlUZXN0SWQoJ2JhY2stYnV0dG9uJykpLnRvQmVOdWxsKCk7XG4gIH0pO1xuXG4gIGl0KCdhZmZpY2hlIGxlIGJvdXRvbiByZXRvdXIgc2kgc2hvd0JhY2tCdXR0b24gZXN0IHRydWUnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKDxIZWFkZXIgdGl0bGU9XCJBdmVjIFJldG91clwiIHNob3dCYWNrQnV0dG9uPXt0cnVlfSAvPik7XG4gICAgZXhwZWN0KGdldEJ5VGVzdElkKCdiYWNrLWJ1dHRvbicpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIGl0KCdleMOpY3V0ZSB1bmUgYWN0aW9uIGF1IGNsaWMgc3VyIGxlIGJvdXRvbiByZXRvdXIgc2kgb25CYWNrUHJlc3MgZXN0IGTDqWZpbmknLCAoKSA9PiB7XG4gICAgY29uc3QgbW9ja0ZuID0gamVzdC5mbigpO1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcig8SGVhZGVyIHRpdGxlPVwiUmV0b3VyXCIgc2hvd0JhY2tCdXR0b249e3RydWV9IG9uQmFja1ByZXNzPXttb2NrRm59IC8+KTtcbiAgICBmaXJlRXZlbnQucHJlc3MoZ2V0QnlUZXN0SWQoJ2JhY2stYnV0dG9uJykpO1xuICAgIGV4cGVjdChtb2NrRm4pLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBTUFBLFdBQUEsR0FBS0MsSUFBSSxDQUFDLG9CQUFvQixDQUFDO0FBQUMsSUFB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