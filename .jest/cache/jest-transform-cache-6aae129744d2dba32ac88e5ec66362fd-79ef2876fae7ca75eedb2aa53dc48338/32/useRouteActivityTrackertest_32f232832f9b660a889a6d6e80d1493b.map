{"version":3,"names":["_getJestObj","mock","useSegments","jest","fn","usePathname","__esModule","default","startSession","endSession","updateStreak","_interopRequireDefault","require","_reactNative","_useRouteActivityTracker","_require6","describe","beforeEach","clearAllMocks","it","_require","mockReturnValue","expect","renderHook","useRouteActivityTracker","not","toThrow","mockStartSession","useActivityMetrics","_require2","toHaveBeenCalledWith","_require3","_require4","toHaveBeenCalled","_require5"],"sources":["useRouteActivityTracker.test.js"],"sourcesContent":["// __tests__/hooks/useRouteActivityTracker.test.js\nimport { renderHook } from '@testing-library/react-native';\nimport useRouteActivityTracker from '../../src/hooks/useRouteActivityTracker';\n\njest.mock('expo-router', () => ({\n  useSegments: jest.fn(() => []),\n  usePathname: jest.fn(() => '/'),\n}));\n\njest.mock('../../src/hooks/useActivityMetrics', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    startSession: jest.fn(),\n    endSession: jest.fn(),\n    updateStreak: jest.fn(),\n  })),\n}));\n\ndescribe('useRouteActivityTracker', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('devrait s\\'initialiser sans erreur', () => {\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['home']);\n    usePathname.mockReturnValue('/home');\n\n    expect(() => {\n      renderHook(() => useRouteActivityTracker());\n    }).not.toThrow();\n  });\n\n  it('devrait détecter un exercice de vocabulaire', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n    usePathname.mockReturnValue('/level/VocabularyExercise');\n\n    renderHook(() => useRouteActivityTracker());\n\n    expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n  });\n\n  it('devrait détecter un assessment', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['level', 'Assessment']);\n    usePathname.mockReturnValue('/level/Assessment');\n\n    renderHook(() => useRouteActivityTracker());\n\n    expect(mockStartSession).toHaveBeenCalledWith('Assessment');\n  });\n\n  it('ne devrait pas démarrer de session pour une page normale', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['home', 'dashboard']);\n    usePathname.mockReturnValue('/home/dashboard');\n\n    renderHook(() => useRouteActivityTracker());\n\n    expect(mockStartSession).not.toHaveBeenCalled();\n  });\n\n  it('devrait gérer les segments vides', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue([]);\n    usePathname.mockReturnValue('/');\n\n    expect(() => {\n      renderHook(() => useRouteActivityTracker());\n    }).not.toThrow();\n\n    expect(mockStartSession).not.toHaveBeenCalled();\n  });\n});"],"mappings":"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","ignoreList":[]}