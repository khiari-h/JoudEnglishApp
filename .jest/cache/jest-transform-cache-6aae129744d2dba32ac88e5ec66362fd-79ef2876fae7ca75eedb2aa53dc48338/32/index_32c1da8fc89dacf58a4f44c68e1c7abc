bdb80ad30c9890bae8bfe875e2423d59
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _errorCorrectionA2Full = _interopRequireDefault(require("./categories/errorCorrectionA2Full"));
var _errorCorrectionA2Identify = _interopRequireDefault(require("./categories/errorCorrectionA2Identify"));
var _errorCorrectionA2MultipleChoice = _interopRequireDefault(require("./categories/errorCorrectionA2MultipleChoice"));
var allExercises = [].concat((0, _toConsumableArray2.default)(_errorCorrectionA2Full.default), (0, _toConsumableArray2.default)(_errorCorrectionA2Identify.default), (0, _toConsumableArray2.default)(_errorCorrectionA2MultipleChoice.default));
allExercises.sort(function (a, b) {
  if (a.categoryId !== b.categoryId) {
    return a.categoryId - b.categoryId;
  }
  var typeOrder = {
    'full': 1,
    'identify': 2,
    'multiple_choice': 3
  };
  return typeOrder[a.type] - typeOrder[b.type];
});
var errorCorrectionA2 = {
  level: "A2",
  totalExercises: allExercises.length,
  statistics: {
    full: _errorCorrectionA2Full.default.length,
    identify: _errorCorrectionA2Identify.default.length,
    multiple_choice: _errorCorrectionA2MultipleChoice.default.length,
    byCategory: {
      1: {
        name: "Past Tense",
        count: 7
      },
      2: {
        name: "Future Forms",
        count: 6
      },
      3: {
        name: "Comparative & Superlative",
        count: 5
      },
      4: {
        name: "Prepositions",
        count: 7
      },
      5: {
        name: "Modal Verbs",
        count: 5
      }
    }
  },
  categories: [{
    id: 1,
    name: "Past Tense",
    description: "Past simple, past continuous, and irregular verbs",
    exerciseCount: 7,
    difficulty: "Intermediate",
    color: "#3b82f6",
    topics: ["past simple", "past continuous", "irregular verbs", "past negatives"]
  }, {
    id: 2,
    name: "Future Forms",
    description: "Will, going to, and present continuous for future",
    exerciseCount: 6,
    difficulty: "Intermediate",
    color: "#10b981",
    topics: ["will", "going to", "future plans", "predictions"]
  }, {
    id: 3,
    name: "Comparative & Superlative",
    description: "Comparative and superlative adjectives",
    exerciseCount: 5,
    difficulty: "Intermediate",
    color: "#f59e0b",
    topics: ["comparative adjectives", "superlative adjectives", "irregular forms"]
  }, {
    id: 4,
    name: "Prepositions",
    description: "Prepositions of time, place, and movement",
    exerciseCount: 7,
    difficulty: "Intermediate",
    color: "#8b5cf6",
    topics: ["time prepositions", "place prepositions", "verb + preposition"]
  }, {
    id: 5,
    name: "Modal Verbs",
    description: "Can, could, should, must, and have to",
    exerciseCount: 5,
    difficulty: "Intermediate",
    color: "#ef4444",
    topics: ["ability", "obligation", "advice", "permission"]
  }],
  exercises: allExercises,
  getExercisesByCategory: function getExercisesByCategory(categoryId) {
    return allExercises.filter(function (exercise) {
      return exercise.categoryId === categoryId;
    });
  },
  getExercisesByType: function getExercisesByType(type) {
    return allExercises.filter(function (exercise) {
      return exercise.type === type;
    });
  },
  getExercisesByCategoryAndType: function getExercisesByCategoryAndType(categoryId, type) {
    return allExercises.filter(function (exercise) {
      return exercise.categoryId === categoryId && exercise.type === type;
    });
  },
  getExercisesByTopic: function getExercisesByTopic(topic) {
    return allExercises.filter(function (exercise) {
      var category = errorCorrectionA2.categories.find(function (cat) {
        return cat.id === exercise.categoryId;
      });
      return category == null ? void 0 : category.topics.includes(topic);
    });
  },
  validateStructure: function validateStructure() {
    var requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];
    var validTypes = ['full', 'identify', 'multiple_choice'];
    return allExercises.every(function (exercise) {
      var hasRequiredFields = requiredFields.every(function (field) {
        return Object.prototype.hasOwnProperty.call(exercise, field) && exercise[field] !== undefined;
      });
      var hasValidType = validTypes.includes(exercise.type);
      var hasValidCategory = exercise.categoryId >= 1 && exercise.categoryId <= 5;
      var hasTypeSpecificFields = true;
      if (exercise.type === 'multiple_choice') {
        hasTypeSpecificFields = exercise.choices && Array.isArray(exercise.choices) && exercise.choices.length >= 2 && exercise.correctChoiceIndex !== undefined && exercise.correctChoiceIndex >= 0 && exercise.correctChoiceIndex < exercise.choices.length;
      } else {
        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);
      }
      return hasRequiredFields && hasValidType && hasValidCategory && hasTypeSpecificFields;
    });
  },
  getSummary: function getSummary() {
    return {
      level: "A2",
      totalExercises: allExercises.length,
      categories: errorCorrectionA2.categories.length,
      difficulty: "Intermediate",
      progression: "Builds on A1 with past/future tenses, comparatives, prepositions, and modals",
      distribution: {
        full: _errorCorrectionA2Full.default.length,
        identify: _errorCorrectionA2Identify.default.length,
        multiple_choice: _errorCorrectionA2MultipleChoice.default.length
      }
    };
  }
};
if (!errorCorrectionA2.validateStructure()) {} else {}
var _default = exports.default = errorCorrectionA2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,