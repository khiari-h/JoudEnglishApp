f19cca6fe91c582ed4d925398d5a445d
_getJestObj().mock('@expo/vector-icons', function () {
  return {
    Ionicons: function Ionicons(_ref) {
      var name = _ref.name,
        size = _ref.size,
        color = _ref.color;
      var _require = require('react-native'),
        Text = _require.Text;
      return (0, _jsxRuntime.jsx)(Text, {
        testID: `icon-${name}`,
        name: name,
        size: size,
        color: color,
        children: name
      });
    }
  };
});
var _reactNative = require("@testing-library/react-native");
var _ButtonIcon = require("../../../../src/components/ui/Button/ButtonIcon");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require2 = require("@jest/globals"),
    jest = _require2.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('ButtonIcon', function () {
  it('devrait rendre une icône à gauche si un nom est fourni', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.LeftIcon, {
        name: "arrow-back",
        size: 24,
        color: "blue"
      })),
      getByTestId = _render.getByTestId;
    var icon = getByTestId('icon-arrow-back');
    expect(icon).toBeTruthy();
    expect(icon.props.size).toBe(24);
    expect(icon.props.color).toBe('blue');
  });
  it('ne devrait pas rendre d\'icône à gauche si le nom n\'est pas fourni', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.LeftIcon, {})),
      queryByTestId = _render2.queryByTestId;
    expect(queryByTestId('icon-arrow-back')).toBeNull();
  });
  it('devrait rendre une icône à droite si un nom est fourni', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.RightIcon, {
        name: "arrow-forward",
        size: 20,
        color: "red"
      })),
      getByTestId = _render3.getByTestId;
    var icon = getByTestId('icon-arrow-forward');
    expect(icon).toBeTruthy();
    expect(icon.props.size).toBe(20);
    expect(icon.props.color).toBe('red');
  });
  it('ne devrait pas rendre d\'icône à droite si le nom n\'est pas fourni', function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.RightIcon, {})),
      queryByTestId = _render4.queryByTestId;
    expect(queryByTestId('icon-arrow-forward')).toBeNull();
  });
  it('devrait rendre une icône seule si un nom est fourni', function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.IconOnly, {
        name: "close",
        size: 30,
        color: "black"
      })),
      getByTestId = _render5.getByTestId;
    var icon = getByTestId('icon-close');
    expect(icon).toBeTruthy();
    expect(icon.props.size).toBe(30);
    expect(icon.props.color).toBe('black');
  });
  it('ne devrait pas rendre d\'icône seule si le nom n\'est pas fourni', function () {
    var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.IconOnly, {})),
      queryByTestId = _render6.queryByTestId;
    expect(queryByTestId('icon-close')).toBeNull();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJJb25pY29ucyIsIl9yZWYiLCJuYW1lIiwic2l6ZSIsImNvbG9yIiwiX3JlcXVpcmUiLCJyZXF1aXJlIiwiVGV4dCIsIl9qc3hSdW50aW1lIiwianN4IiwidGVzdElEIiwiY2hpbGRyZW4iLCJfcmVhY3ROYXRpdmUiLCJfQnV0dG9uSWNvbiIsIl9yZXF1aXJlMiIsImplc3QiLCJkZXNjcmliZSIsIml0IiwiX3JlbmRlciIsInJlbmRlciIsIkxlZnRJY29uIiwiZ2V0QnlUZXN0SWQiLCJpY29uIiwiZXhwZWN0IiwidG9CZVRydXRoeSIsInByb3BzIiwidG9CZSIsIl9yZW5kZXIyIiwicXVlcnlCeVRlc3RJZCIsInRvQmVOdWxsIiwiX3JlbmRlcjMiLCJSaWdodEljb24iLCJfcmVuZGVyNCIsIl9yZW5kZXI1IiwiSWNvbk9ubHkiLCJfcmVuZGVyNiJdLCJzb3VyY2VzIjpbIkJ1dHRvbkljb24udGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCB7IExlZnRJY29uLCBSaWdodEljb24sIEljb25Pbmx5IH0gZnJvbSAnLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdWkvQnV0dG9uL0J1dHRvbkljb24nO1xyXG5cclxuLy8gTW9jayBkZXMgaWPDtG5lcyBJb25pY29ucyBwb3VyIHNpbXVsZXIgbGV1ciByZW5kdSBkYW5zIGwnZW52aXJvbm5lbWVudCBkZSB0ZXN0LlxyXG5qZXN0Lm1vY2soJ0BleHBvL3ZlY3Rvci1pY29ucycsICgpID0+ICh7XHJcbiAgSW9uaWNvbnM6ICh7IG5hbWUsIHNpemUsIGNvbG9yIH0pID0+IHtcclxuICAgIGNvbnN0IHsgVGV4dCB9ID0gcmVxdWlyZSgncmVhY3QtbmF0aXZlJyk7XHJcbiAgICByZXR1cm4gPFRleHQgdGVzdElEPXtgaWNvbi0ke25hbWV9YH0gbmFtZT17bmFtZX0gc2l6ZT17c2l6ZX0gY29sb3I9e2NvbG9yfT57bmFtZX08L1RleHQ+O1xyXG4gIH0sXHJcbn0pKTtcclxuXHJcbmRlc2NyaWJlKCdCdXR0b25JY29uJywgKCkgPT4ge1xyXG4gIC8vIFRlc3QgcG91ciBsZSBjb21wb3NhbnQgTGVmdEljb25cclxuICBpdCgnZGV2cmFpdCByZW5kcmUgdW5lIGljw7RuZSDDoCBnYXVjaGUgc2kgdW4gbm9tIGVzdCBmb3VybmknLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoPExlZnRJY29uIG5hbWU9XCJhcnJvdy1iYWNrXCIgc2l6ZT17MjR9IGNvbG9yPVwiYmx1ZVwiIC8+KTtcclxuICAgIGNvbnN0IGljb24gPSBnZXRCeVRlc3RJZCgnaWNvbi1hcnJvdy1iYWNrJyk7XHJcbiAgICBleHBlY3QoaWNvbikudG9CZVRydXRoeSgpO1xyXG4gICAgZXhwZWN0KGljb24ucHJvcHMuc2l6ZSkudG9CZSgyNCk7XHJcbiAgICBleHBlY3QoaWNvbi5wcm9wcy5jb2xvcikudG9CZSgnYmx1ZScpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnbmUgZGV2cmFpdCBwYXMgcmVuZHJlIGRcXCdpY8O0bmUgw6AgZ2F1Y2hlIHNpIGxlIG5vbSBuXFwnZXN0IHBhcyBmb3VybmknLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IHF1ZXJ5QnlUZXN0SWQgfSA9IHJlbmRlcig8TGVmdEljb24gLz4pO1xyXG4gICAgZXhwZWN0KHF1ZXJ5QnlUZXN0SWQoJ2ljb24tYXJyb3ctYmFjaycpKS50b0JlTnVsbCgpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBUZXN0IHBvdXIgbGUgY29tcG9zYW50IFJpZ2h0SWNvblxyXG4gIGl0KCdkZXZyYWl0IHJlbmRyZSB1bmUgaWPDtG5lIMOgIGRyb2l0ZSBzaSB1biBub20gZXN0IGZvdXJuaScsICgpID0+IHtcclxuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcig8UmlnaHRJY29uIG5hbWU9XCJhcnJvdy1mb3J3YXJkXCIgc2l6ZT17MjB9IGNvbG9yPVwicmVkXCIgLz4pO1xyXG4gICAgY29uc3QgaWNvbiA9IGdldEJ5VGVzdElkKCdpY29uLWFycm93LWZvcndhcmQnKTtcclxuICAgIGV4cGVjdChpY29uKS50b0JlVHJ1dGh5KCk7XHJcbiAgICBleHBlY3QoaWNvbi5wcm9wcy5zaXplKS50b0JlKDIwKTtcclxuICAgIGV4cGVjdChpY29uLnByb3BzLmNvbG9yKS50b0JlKCdyZWQnKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ25lIGRldnJhaXQgcGFzIHJlbmRyZSBkXFwnaWPDtG5lIMOgIGRyb2l0ZSBzaSBsZSBub20gblxcJ2VzdCBwYXMgZm91cm5pJywgKCkgPT4ge1xyXG4gICAgY29uc3QgeyBxdWVyeUJ5VGVzdElkIH0gPSByZW5kZXIoPFJpZ2h0SWNvbiAvPik7XHJcbiAgICBleHBlY3QocXVlcnlCeVRlc3RJZCgnaWNvbi1hcnJvdy1mb3J3YXJkJykpLnRvQmVOdWxsKCk7XHJcbiAgfSk7XHJcblxyXG4gIC8vIFRlc3QgcG91ciBsZSBjb21wb3NhbnQgSWNvbk9ubHlcclxuICBpdCgnZGV2cmFpdCByZW5kcmUgdW5lIGljw7RuZSBzZXVsZSBzaSB1biBub20gZXN0IGZvdXJuaScsICgpID0+IHtcclxuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcig8SWNvbk9ubHkgbmFtZT1cImNsb3NlXCIgc2l6ZT17MzB9IGNvbG9yPVwiYmxhY2tcIiAvPik7XHJcbiAgICBjb25zdCBpY29uID0gZ2V0QnlUZXN0SWQoJ2ljb24tY2xvc2UnKTtcclxuICAgIGV4cGVjdChpY29uKS50b0JlVHJ1dGh5KCk7XHJcbiAgICBleHBlY3QoaWNvbi5wcm9wcy5zaXplKS50b0JlKDMwKTtcclxuICAgIGV4cGVjdChpY29uLnByb3BzLmNvbG9yKS50b0JlKCdibGFjaycpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnbmUgZGV2cmFpdCBwYXMgcmVuZHJlIGRcXCdpY8O0bmUgc2V1bGUgc2kgbGUgbm9tIG5cXCdlc3QgcGFzIGZvdXJuaScsICgpID0+IHtcclxuICAgIGNvbnN0IHsgcXVlcnlCeVRlc3RJZCB9ID0gcmVuZGVyKDxJY29uT25seSAvPik7XHJcbiAgICBleHBlY3QocXVlcnlCeVRlc3RJZCgnaWNvbi1jbG9zZScpKS50b0JlTnVsbCgpO1xyXG4gIH0pO1xyXG59KTsiXSwibWFwcGluZ3MiOiJBQUlBQSxXQUFBLEdBQUtDLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtFQUFBLE9BQU87SUFDckNDLFFBQVEsRUFBRSxTQUFWQSxRQUFRQSxDQUFBQyxJQUFBLEVBQTZCO01BQUEsSUFBeEJDLElBQUksR0FBQUQsSUFBQSxDQUFKQyxJQUFJO1FBQUVDLElBQUksR0FBQUYsSUFBQSxDQUFKRSxJQUFJO1FBQUVDLEtBQUssR0FBQUgsSUFBQSxDQUFMRyxLQUFLO01BQzVCLElBQUFDLFFBQUEsR0FBaUJDLE9BQU8sQ0FBQyxjQUFjLENBQUM7UUFBaENDLElBQUksR0FBQUYsUUFBQSxDQUFKRSxJQUFJO01BQ1osT0FBTyxJQUFBQyxXQUFBLENBQUFDLEdBQUEsRUFBQ0YsSUFBSTtRQUFDRyxNQUFNLEVBQUUsUUFBUVIsSUFBSSxFQUFHO1FBQUNBLElBQUksRUFBRUEsSUFBSztRQUFDQyxJQUFJLEVBQUVBLElBQUs7UUFBQ0MsS0FBSyxFQUFFQSxLQUFNO1FBQUFPLFFBQUEsRUFBRVQ7TUFBSSxDQUFPLENBQUM7SUFDMUY7RUFDRixDQUFDO0FBQUEsQ0FBQyxDQUFDO0FBVEgsSUFBQVUsWUFBQSxHQUFBTixPQUFBO0FBQ0EsSUFBQU8sV0FBQSxHQUFBUCxPQUFBO0FBQWdHLElBQUFFLFdBQUEsR0FBQUYsT0FBQTtBQUFBLFNBQUFSLFlBQUE7RUFBQSxJQUFBZ0IsU0FBQSxHQUFBUixPQUFBO0lBQUFTLElBQUEsR0FBQUQsU0FBQSxDQUFBQyxJQUFBO0VBQUFqQixXQUFBLFlBQUFBLFlBQUE7SUFBQSxPQUFBaUIsSUFBQTtFQUFBO0VBQUEsT0FBQUEsSUFBQTtBQUFBO0FBVWhHQyxRQUFRLENBQUMsWUFBWSxFQUFFLFlBQU07RUFF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