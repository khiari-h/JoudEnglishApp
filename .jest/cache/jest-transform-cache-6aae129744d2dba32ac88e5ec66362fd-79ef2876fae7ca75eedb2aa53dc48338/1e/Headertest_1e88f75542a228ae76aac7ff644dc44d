b1e64790e675df46e2ae0951071f6f72
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _Header = _interopRequireDefault(require("@/components/layout/Header"));
var _jsxRuntime = require("react/jsx-runtime");
describe('Header', function () {
  it('affiche le titre', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Mon titre"
      })),
      getByText = _render.getByText;
    expect(getByText('Mon titre')).toBeTruthy();
  });
  it('appelle onBackPress quand on clique sur le bouton retour', function () {
    var mockBack = jest.fn();
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Retour",
        onBackPress: mockBack
      })),
      getByRole = _render2.getByRole;
    var backButton = getByRole('button');
    _reactNative.fireEvent.press(backButton);
    expect(mockBack).toHaveBeenCalled();
  });
  it('affiche l’icône à droite et appelle onRightPress', function () {
    var mockRight = jest.fn();
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Test",
        rightIcon: "settings",
        onRightPress: mockRight
      })),
      getByRole = _render3.getByRole;
    var rightButton = getByRole('button', {
      name: ''
    });
    var allButtons = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Header.default, {
      title: "Test",
      rightIcon: "settings",
      onRightPress: mockRight
    })).UNSAFE_getAllByRole('button');
    _reactNative.fireEvent.press(allButtons[1]);
    expect(mockRight).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9IZWFkZXIiLCJfanN4UnVudGltZSIsImRlc2NyaWJlIiwiaXQiLCJfcmVuZGVyIiwicmVuZGVyIiwianN4IiwiZGVmYXVsdCIsInRpdGxlIiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsIm1vY2tCYWNrIiwiamVzdCIsImZuIiwiX3JlbmRlcjIiLCJvbkJhY2tQcmVzcyIsImdldEJ5Um9sZSIsImJhY2tCdXR0b24iLCJmaXJlRXZlbnQiLCJwcmVzcyIsInRvSGF2ZUJlZW5DYWxsZWQiLCJtb2NrUmlnaHQiLCJfcmVuZGVyMyIsInJpZ2h0SWNvbiIsIm9uUmlnaHRQcmVzcyIsInJpZ2h0QnV0dG9uIiwibmFtZSIsImFsbEJ1dHRvbnMiLCJVTlNBRkVfZ2V0QWxsQnlSb2xlIl0sInNvdXJjZXMiOlsiSGVhZGVyLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gX190ZXN0c19fL0hlYWRlci50ZXN0LmpzXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyLCBmaXJlRXZlbnQgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgSGVhZGVyIGZyb20gJ0AvY29tcG9uZW50cy9sYXlvdXQvSGVhZGVyJztcblxuZGVzY3JpYmUoJ0hlYWRlcicsICgpID0+IHtcbiAgaXQoJ2FmZmljaGUgbGUgdGl0cmUnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRleHQgfSA9IHJlbmRlcig8SGVhZGVyIHRpdGxlPVwiTW9uIHRpdHJlXCIgLz4pO1xuICAgIGV4cGVjdChnZXRCeVRleHQoJ01vbiB0aXRyZScpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIGl0KCdhcHBlbGxlIG9uQmFja1ByZXNzIHF1YW5kIG9uIGNsaXF1ZSBzdXIgbGUgYm91dG9uIHJldG91cicsICgpID0+IHtcbiAgICBjb25zdCBtb2NrQmFjayA9IGplc3QuZm4oKTtcbiAgICBjb25zdCB7IGdldEJ5Um9sZSB9ID0gcmVuZGVyKDxIZWFkZXIgdGl0bGU9XCJSZXRvdXJcIiBvbkJhY2tQcmVzcz17bW9ja0JhY2t9IC8+KTtcbiAgICBjb25zdCBiYWNrQnV0dG9uID0gZ2V0QnlSb2xlKCdidXR0b24nKTtcbiAgICBmaXJlRXZlbnQucHJlc3MoYmFja0J1dHRvbik7XG4gICAgZXhwZWN0KG1vY2tCYWNrKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gIH0pO1xuXG4gIGl0KCdhZmZpY2hlIGzigJlpY8O0bmUgw6AgZHJvaXRlIGV0IGFwcGVsbGUgb25SaWdodFByZXNzJywgKCkgPT4ge1xuICAgIGNvbnN0IG1vY2tSaWdodCA9IGplc3QuZm4oKTtcbiAgICBjb25zdCB7IGdldEJ5Um9sZSB9ID0gcmVuZGVyKFxuICAgICAgPEhlYWRlciB0aXRsZT1cIlRlc3RcIiByaWdodEljb249XCJzZXR0aW5nc1wiIG9uUmlnaHRQcmVzcz17bW9ja1JpZ2h0fSAvPlxuICAgICk7XG4gICAgY29uc3QgcmlnaHRCdXR0b24gPSBnZXRCeVJvbGUoJ2J1dHRvbicsIHsgbmFtZTogJycgfSk7IC8vIElsIHkgYSAyIGJvdXRvbnMgZG9uYyBsZSBwcmVtaWVyIGVzdCBsZSBiYWNrXG4gICAgY29uc3QgYWxsQnV0dG9ucyA9IHJlbmRlcihcbiAgICAgIDxIZWFkZXIgdGl0bGU9XCJUZXN0XCIgcmlnaHRJY29uPVwic2V0dGluZ3NcIiBvblJpZ2h0UHJlc3M9e21vY2tSaWdodH0gLz5cbiAgICApLlVOU0FGRV9nZXRBbGxCeVJvbGUoJ2J1dHRvbicpO1xuICAgIGZpcmVFdmVudC5wcmVzcyhhbGxCdXR0b25zWzFdKTsgLy8gY2xpYyBzdXIgbGUgYm91dG9uIGRlIGRyb2l0ZVxuICAgIGV4cGVjdChtb2NrUmlnaHQpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IjtBQUNBLElBQUFBLE1BQUEsR0FB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