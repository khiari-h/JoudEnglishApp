7c66c94b994cc3445cb4e22311c01f2c
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeMutableUI = exports.makeMutable = void 0;
var _PlatformChecker = require("./PlatformChecker");
var _errors = require("./errors");
var _logger = require("./logger");
var _reactUtils = require("./reactUtils");
var _shareableMappingCache = require("./shareableMappingCache");
var _shareables = require("./shareables");
var _threads = require("./threads");
var _valueSetter = require("./valueSetter");
var SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();
function shouldWarnAboutAccessDuringRender() {
  return __DEV__ && (0, _reactUtils.isReactRendering)() && !(0, _reactUtils.isFirstReactRender)();
}
function checkInvalidReadDuringRender() {
  if (shouldWarnAboutAccessDuringRender()) {
    _logger.logger.warn('Reading from `value` during component render. Please ensure that you do not access the `value` property or use `get` method of a shared value while React is rendering a component.', {
      strict: true
    });
  }
}
function checkInvalidWriteDuringRender() {
  if (shouldWarnAboutAccessDuringRender()) {
    _logger.logger.warn('Writing to `value` during component render. Please ensure that you do not access the `value` property or use `set` method of a shared value while React is rendering a component.', {
      strict: true
    });
  }
}
var _worklet_7577286896107_init_data = {
  code: "function addCompilerSafeGetAndSet_mutablesTs1(mutable){Object.defineProperties(mutable,{get:{value:function(){return mutable.value;},configurable:false,enumerable:false},set:{value:function(newValue){if(typeof newValue==='function'&&!newValue.__isAnimationDefinition){mutable.value=newValue(mutable.value);}else{mutable.value=newValue;}},configurable:false,enumerable:false}});}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\mutables.ts",
  sourceMap: "{\"version\":3,\"names\":[\"addCompilerSafeGetAndSet_mutablesTs1\",\"mutable\",\"Object\",\"defineProperties\",\"get\",\"value\",\"configurable\",\"enumerable\",\"set\",\"newValue\",\"__isAnimationDefinition\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/mutables.ts\"],\"mappings\":\"AAuCA,SAAAA,qCAAAC,OAAA,EAAAC,MAAA,CAAAC,gBAAA,CAAAF,OAAA,EACAG,GAAA,EACAC,KAAA,SAAAA,CAAA,EACA,OAAAJ,OAAA,CAAAI,KAAA,CACA,EACAC,YAAA,OACAC,UAAA,MACA,EACAC,GAAA,EACAH,KAAS,SAAAA,CAAAI,QAAA,CAAwB,CAEzB,GAAC,OAAAA,QAAiB,aAAS,EAE7B,CAAAA,QAAK,CAAAC,uBAAG,EACNT,OAAO,CAAAI,KAAQ,CAAAI,QAAK,CAAAR,OAAA,CAAAI,KAAA,EACrB,MACDJ,OAAA,CAAYI,KAAE,CAAKI,QAAA,CACnB,CACD,EACDH,YAAK,OACHC,UAAK,M\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var addCompilerSafeGetAndSet = function () {
  var _e = [new global.Error(), 1, -27];
  var addCompilerSafeGetAndSet = function addCompilerSafeGetAndSet(mutable) {
    Object.defineProperties(mutable, {
      get: {
        value: function value() {
          return mutable.value;
        },
        configurable: false,
        enumerable: false
      },
      set: {
        value: function (_value) {
          function value(_x) {
            return _value.apply(this, arguments);
          }
          value.toString = function () {
            return _value.toString();
          };
          return value;
        }(function (newValue) {
          if (typeof newValue === 'function' && !newValue.__isAnimationDefinition) {
            mutable.value = newValue(mutable.value);
          } else {
            mutable.value = newValue;
          }
        }),
        configurable: false,
        enumerable: false
      }
    });
  };
  addCompilerSafeGetAndSet.__closure = {};
  addCompilerSafeGetAndSet.__workletHash = 7577286896107;
  addCompilerSafeGetAndSet.__initData = _worklet_7577286896107_init_data;
  addCompilerSafeGetAndSet.__stackDetails = _e;
  return addCompilerSafeGetAndSet;
}();
var _worklet_12520546980376_init_data = {
  code: "function hideInternalValueProp_mutablesTs2(mutable){Object.defineProperty(mutable,'_value',{configurable:false,enumerable:false});}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\mutables.ts",
  sourceMap: "{\"version\":3,\"names\":[\"hideInternalValueProp_mutablesTs2\",\"mutable\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/mutables.ts\"],\"mappings\":\"AA2EA,SAAAA,kCAAAC,OAAA,EAAAC,MAAA,CAAAC,cAAA,CAAAF,OAAA,WACAG,YAAA,OACAC,UAAA,MACA,GACA\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var hideInternalValueProp = function () {
  var _e = [new global.Error(), 1, -27];
  var hideInternalValueProp = function hideInternalValueProp(mutable) {
    Object.defineProperty(mutable, '_value', {
      configurable: false,
      enumerable: false
    });
  };
  hideInternalValueProp.__closure = {};
  hideInternalValueProp.__workletHash = 12520546980376;
  hideInternalValueProp.__initData = _worklet_12520546980376_init_data;
  hideInternalValueProp.__stackDetails = _e;
  return hideInternalValueProp;
}();
var _worklet_3490228900074_init_data = {
  code: "function makeMutableUI_mutablesTs3(initial){const{valueSetter,hideInternalValueProp,addCompilerSafeGetAndSet}=this.__closure;const listeners=new Map();let value=initial;const mutable={get value(){return value;},set value(newValue){valueSetter(mutable,newValue);},get _value(){return value;},set _value(newValue){value=newValue;listeners.forEach(function(listener){listener(newValue);});},modify:function(modifier,forceUpdate=true){valueSetter(mutable,modifier!==undefined?modifier(value):value,forceUpdate);},addListener:function(id,listener){listeners.set(id,listener);},removeListener:function(id){listeners.delete(id);},_animation:null,_isReanimatedSharedValue:true};hideInternalValueProp(mutable);addCompilerSafeGetAndSet(mutable);return mutable;}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\mutables.ts",
  sourceMap: "{\"version\":3,\"names\":[\"makeMutableUI_mutablesTs3\",\"initial\",\"valueSetter\",\"hideInternalValueProp\",\"addCompilerSafeGetAndSet\",\"__closure\",\"listeners\",\"Map\",\"value\",\"mutable\",\"newValue\",\"_value\",\"forEach\",\"listener\",\"modify\",\"modifier\",\"forceUpdate\",\"undefined\",\"addListener\",\"id\",\"set\",\"removeListener\",\"delete\",\"_animation\",\"_isReanimatedSharedValue\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/mutables.ts\"],\"mappings\":\"AAgGO,SAAAA,yBAA8DA,CAAAC,OAAA,QAAAC,WAAA,CAAAC,qBAAA,CAAAC,wBAAA,OAAAC,SAAA,CAEnE,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,GAAG,CAA0B,CAAC,CACpD,GAAI,CAAAC,KAAK,CAAGP,OAAO,CAEnB,KAAM,CAAAQ,OAA8B,CAAG,CACrC,GAAI,CAAAD,KAAKA,CAAA,CAAG,CACV,MAAO,CAAAA,KAAK,CACd,CAAC,CACD,GAAI,CAAAA,KAAKA,CAACE,QAAQ,CAAE,CAClBR,WAAW,CAACO,OAAO,CAAoBC,QAAQ,CAAC,CAClD,CAAC,CACD,GAAI,CAAAC,MAAMA,CAAA,CAAU,CAClB,MAAO,CAAAH,KAAK,CACd,CAAC,CACD,GAAI,CAAAG,MAAMA,CAACD,QAAe,CAAE,CAC1BF,KAAK,CAAGE,QAAQ,CAChBJ,SAAS,CAACM,OAAO,CAAE,SAAAC,QAAQ,CAAK,CAC9BA,QAAQ,CAACH,QAAQ,CAAC,CACpB,CAAC,CAAC,CACJ,CAAC,CACDI,MAAM,CAAE,QAAAA,CAACC,QAAQ,CAAEC,WAAW,CAAG,IAAI,CAAK,CACxCd,WAAW,CACTO,OAAO,CACPM,QAAQ,GAAKE,SAAS,CAAGF,QAAQ,CAACP,KAAK,CAAC,CAAGA,KAAK,CAChDQ,WACF,CAAC,CACH,CAAC,CACDE,WAAW,CAAE,QAAAA,CAACC,EAAU,CAAEN,QAAyB,CAAK,CACtDP,SAAS,CAACc,GAAG,CAACD,EAAE,CAAEN,QAAQ,CAAC,CAC7B,CAAC,CACDQ,cAAc,CAAE,QAAAA,CAACF,EAAU,CAAK,CAC9Bb,SAAS,CAACgB,MAAM,CAACH,EAAE,CAAC,CACtB,CAAC,CAEDI,UAAU,CAAE,IAAI,CAChBC,wBAAwB,CAAE,IAC5B,CAAC,CAEDrB,qBAAqB,CAACM,OAAO,CAAC,CAC9BL,wBAAwB,CAACK,OAAO,CAAC,CAEjC,MAAO,CAAAA,OAAO,CAChB\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var makeMutableUI = exports.makeMutableUI = function () {
  var _e = [new global.Error(), -4, -27];
  var makeMutableUI = function makeMutableUI(initial) {
    var listeners = new Map();
    var value = initial;
    var mutable = {
      get value() {
        return value;
      },
      set value(newValue) {
        (0, _valueSetter.valueSetter)(mutable, newValue);
      },
      get _value() {
        return value;
      },
      set _value(newValue) {
        value = newValue;
        listeners.forEach(function (listener) {
          listener(newValue);
        });
      },
      modify: function modify(modifier) {
        var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        (0, _valueSetter.valueSetter)(mutable, modifier !== undefined ? modifier(value) : value, forceUpdate);
      },
      addListener: function addListener(id, listener) {
        listeners.set(id, listener);
      },
      removeListener: function removeListener(id) {
        listeners.delete(id);
      },
      _animation: null,
      _isReanimatedSharedValue: true
    };
    hideInternalValueProp(mutable);
    addCompilerSafeGetAndSet(mutable);
    return mutable;
  };
  makeMutableUI.__closure = {
    valueSetter: _valueSetter.valueSetter,
    hideInternalValueProp: hideInternalValueProp,
    addCompilerSafeGetAndSet: addCompilerSafeGetAndSet
  };
  makeMutableUI.__workletHash = 3490228900074;
  makeMutableUI.__initData = _worklet_3490228900074_init_data;
  makeMutableUI.__stackDetails = _e;
  return makeMutableUI;
}();
var _worklet_2662348200644_init_data = {
  code: "function mutablesTs4(){const{makeMutableUI,initial}=this.__closure;return makeMutableUI(initial);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\mutables.ts",
  sourceMap: "{\"version\":3,\"names\":[\"mutablesTs4\",\"makeMutableUI\",\"initial\",\"__closure\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/mutables.ts\"],\"mappings\":\"AA+IY,SAAAA,WAAMA,CAAA,QAAAC,aAAA,CAAAC,OAAA,OAAAC,SAAA,CAEZ,MAAO,CAAAF,aAAa,CAACC,OAAO,CAAC,CAC/B\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_9616099880145_init_data = {
  code: "function mutablesTs5(sv){return sv.value;}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\mutables.ts",
  sourceMap: "{\"version\":3,\"names\":[\"mutablesTs5\",\"sv\",\"value\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/mutables.ts\"],\"mappings\":\"AAwJmD,QAAC,CAAAA,WAAuBA,CAAAC,EAAA,EACnE,MAAO,CAAAA,EAAE,CAACC,KAAK,CACjB\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_16360772742581_init_data = {
  code: "function mutablesTs6(){const{mutable,newValue}=this.__closure;mutable.value=newValue;}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\mutables.ts",
  sourceMap: "{\"version\":3,\"names\":[\"mutablesTs6\",\"mutable\",\"newValue\",\"__closure\",\"value\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/mutables.ts\"],\"mappings\":\"AA+Jc,SAAAA,WAAMA,CAAA,QAAAC,OAAA,CAAAC,QAAA,OAAAC,SAAA,CACZF,OAAO,CAACG,KAAK,CAAGF,QAAQ,CAC1B\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_1667173883347_init_data = {
  code: "function mutablesTs7(){const{mutable,modifier,forceUpdate}=this.__closure;mutable.modify(modifier,forceUpdate);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\mutables.ts",
  sourceMap: "{\"version\":3,\"names\":[\"mutablesTs7\",\"mutable\",\"modifier\",\"forceUpdate\",\"__closure\",\"modify\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/mutables.ts\"],\"mappings\":\"AAgLc,SAAAA,WAAMA,CAAA,QAAAC,OAAA,CAAAC,QAAA,CAAAC,WAAA,OAAAC,SAAA,CACZH,OAAO,CAACI,MAAM,CAACH,QAAQ,CAAEC,WAAW,CAAC,CACvC\",\"ignoreList\":[]}",
  version: "3.16.7"
};
function makeMutableNative(initial) {
  var handle = (0, _shareables.makeShareableCloneRecursive)({
    __init: function () {
      var _e = [new global.Error(), -3, -27];
      var mutablesTs4 = function mutablesTs4() {
        return makeMutableUI(initial);
      };
      mutablesTs4.__closure = {
        makeMutableUI: makeMutableUI,
        initial: initial
      };
      mutablesTs4.__workletHash = 2662348200644;
      mutablesTs4.__initData = _worklet_2662348200644_init_data;
      mutablesTs4.__stackDetails = _e;
      return mutablesTs4;
    }()
  });
  var mutable = {
    get value() {
      checkInvalidReadDuringRender();
      var uiValueGetter = (0, _threads.executeOnUIRuntimeSync)(function () {
        var _e = [new global.Error(), 1, -27];
        var mutablesTs5 = function mutablesTs5(sv) {
          return sv.value;
        };
        mutablesTs5.__closure = {};
        mutablesTs5.__workletHash = 9616099880145;
        mutablesTs5.__initData = _worklet_9616099880145_init_data;
        mutablesTs5.__stackDetails = _e;
        return mutablesTs5;
      }());
      return uiValueGetter(mutable);
    },
    set value(newValue) {
      checkInvalidWriteDuringRender();
      (0, _threads.runOnUI)(function () {
        var _e = [new global.Error(), -3, -27];
        var mutablesTs6 = function mutablesTs6() {
          mutable.value = newValue;
        };
        mutablesTs6.__closure = {
          mutable: mutable,
          newValue: newValue
        };
        mutablesTs6.__workletHash = 16360772742581;
        mutablesTs6.__initData = _worklet_16360772742581_init_data;
        mutablesTs6.__stackDetails = _e;
        return mutablesTs6;
      }())();
    },
    get _value() {
      throw new _errors.ReanimatedError('Reading from `_value` directly is only possible on the UI runtime. Perhaps you passed an Animated Style to a non-animated component?');
    },
    set _value(_newValue) {
      throw new _errors.ReanimatedError('Setting `_value` directly is only possible on the UI runtime. Perhaps you want to assign to `value` instead?');
    },
    modify: function modify(modifier) {
      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      (0, _threads.runOnUI)(function () {
        var _e = [new global.Error(), -4, -27];
        var mutablesTs7 = function mutablesTs7() {
          mutable.modify(modifier, forceUpdate);
        };
        mutablesTs7.__closure = {
          mutable: mutable,
          modifier: modifier,
          forceUpdate: forceUpdate
        };
        mutablesTs7.__workletHash = 1667173883347;
        mutablesTs7.__initData = _worklet_1667173883347_init_data;
        mutablesTs7.__stackDetails = _e;
        return mutablesTs7;
      }())();
    },
    addListener: function addListener() {
      throw new _errors.ReanimatedError('Adding listeners is only possible on the UI runtime.');
    },
    removeListener: function removeListener() {
      throw new _errors.ReanimatedError('Removing listeners is only possible on the UI runtime.');
    },
    _isReanimatedSharedValue: true
  };
  hideInternalValueProp(mutable);
  addCompilerSafeGetAndSet(mutable);
  _shareableMappingCache.shareableMappingCache.set(mutable, handle);
  return mutable;
}
function makeMutableWeb(initial) {
  var value = initial;
  var listeners = new Map();
  var mutable = {
    get value() {
      checkInvalidReadDuringRender();
      return value;
    },
    set value(newValue) {
      checkInvalidWriteDuringRender();
      (0, _valueSetter.valueSetter)(mutable, newValue);
    },
    get _value() {
      return value;
    },
    set _value(newValue) {
      value = newValue;
      listeners.forEach(function (listener) {
        listener(newValue);
      });
    },
    modify: function modify(modifier) {
      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      (0, _valueSetter.valueSetter)(mutable, modifier !== undefined ? modifier(mutable.value) : mutable.value, forceUpdate);
    },
    addListener: function addListener(id, listener) {
      listeners.set(id, listener);
    },
    removeListener: function removeListener(id) {
      listeners.delete(id);
    },
    _isReanimatedSharedValue: true
  };
  hideInternalValueProp(mutable);
  addCompilerSafeGetAndSet(mutable);
  return mutable;
}
var makeMutable = exports.makeMutable = SHOULD_BE_USE_WEB ? makeMutableWeb : makeMutableNative;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,