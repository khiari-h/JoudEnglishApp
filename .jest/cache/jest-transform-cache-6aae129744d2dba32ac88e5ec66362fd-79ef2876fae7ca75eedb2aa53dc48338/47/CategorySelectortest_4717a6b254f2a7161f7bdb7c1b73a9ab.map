{"version":3,"names":["_getJestObj","mock","_jest$requireActual","jest","requireActual","StyleSheet","create","container","backgroundGradient","scrollView","scrollContent","categoryItemWrapper","categoryTouchable","selectedCategoryItem","selectedInner","selectedCategoryText","color","sparkleContainer","sparkle","categoryItem","categoryInner","categoryText","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_reactNative2","_CategorySelector","_interopRequireWildcard","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_require","describe","categories","id","name","onSelectCategoryMock","fn","beforeEach","useFakeTimers","clearAllMocks","afterEach","useRealTimers","it","_render","render","jsx","selectedCategory","onSelectCategory","getByText","queryByText","expect","toBeTruthy","fireEvent","press","toHaveBeenCalledWith","not","mockTiming","spyOn","Animated","_render2","rerender","act","advanceTimersByTime","toHaveBeenCalledTimes","anything","objectContaining","toValue","duration","_render3","getByTestId","newCategories","concat","allAnimations","CategorySelector","animationsRef","current","toBeInstanceOf","Value","_render4","mockScrollTo","scrollViewRef","scrollTo","nativeEvent","layout","x","y","width","height","runAllTimers","animated","prevProps","nextPropsSame","nextPropsDifferentCat","nextPropsDifferentSel","areEqual","toBe"],"sources":["CategorySelector.test.js"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, act, waitFor } from '@testing-library/react-native';\nimport { Animated } from 'react-native';\nimport CategorySelector, { areEqual } from '../../../src/components/exercise-common/CategorySelector';\n\n// Mock du style pour éviter les erreurs\njest.mock('../../../src/components/exercise-common/CategorySelector/style', () => {\n  const { StyleSheet } = jest.requireActual('react-native');\n  return () => StyleSheet.create({\n    container: {},\n    backgroundGradient: {},\n    scrollView: {},\n    scrollContent: {},\n    categoryItemWrapper: {},\n    categoryTouchable: {},\n    selectedCategoryItem: {},\n    selectedInner: {},\n    selectedCategoryText: { color: '#FFFFFF' },\n    sparkleContainer: {},\n    sparkle: {},\n    categoryItem: {},\n    categoryInner: {},\n    categoryText: {},\n  });\n});\n\ndescribe('CategorySelector', () => {\n  const categories = [\n    { id: '1', name: 'Grammar' },\n    { id: '2', name: 'Vocabulary' },\n    { id: '3', name: 'Reading' },\n  ];\n  const onSelectCategoryMock = jest.fn();\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n    jest.clearAllMocks();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  // --- Tests de rendu et d'interaction de base ---\n  it('should render all categories correctly and call onSelectCategory on press', () => {\n    const { getByText, queryByText } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory=\"2\"\n        onSelectCategory={onSelectCategoryMock}\n      />\n    );\n    \n    // Test 1: Rendu initial et état sélectionné\n    expect(getByText('Grammar')).toBeTruthy();\n    expect(getByText('Vocabulary')).toBeTruthy();\n    expect(getByText('Reading')).toBeTruthy();\n    expect(getByText('✨')).toBeTruthy();\n\n    // Test 2: Appel de la fonction sur le clic d'une autre catégorie\n    fireEvent.press(getByText('Grammar'));\n    expect(onSelectCategoryMock).toHaveBeenCalledWith('1');\n\n    // Test 3: Ne pas appeler la fonction si la catégorie est déjà sélectionnée\n    fireEvent.press(getByText('Vocabulary'));\n    expect(onSelectCategoryMock).not.toHaveBeenCalledWith('2');\n  });\n\n  // --- Tests de la logique d'animation ---\n  it('should trigger animation when selectedCategory changes', async () => {\n    const mockTiming = jest.spyOn(Animated, 'timing');\n    const { rerender } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory=\"1\"\n        onSelectCategory={onSelectCategoryMock}\n      />\n    );\n    \n    // Rerender avec une nouvelle sélection\n    await act(async () => {\n      rerender(\n        <CategorySelector\n          categories={categories}\n          selectedCategory=\"2\"\n          onSelectCategory={onSelectCategoryMock}\n        />\n      );\n      jest.advanceTimersByTime(300);\n    });\n\n    expect(mockTiming).toHaveBeenCalledTimes(2);\n    expect(mockTiming).toHaveBeenCalledWith(\n      expect.anything(),\n      expect.objectContaining({ toValue: 0, duration: 200 })\n    );\n    expect(mockTiming).toHaveBeenCalledWith(\n      expect.anything(),\n      expect.objectContaining({ toValue: 1, duration: 300 })\n    );\n  });\n  \n  // --- Nouveaux tests pour une couverture complète ---\n\n  // Couvre les lignes 117 et 134\n  it('should handle new categories correctly and initialize new animations', () => {\n    const { rerender, getByText, getByTestId } = render(\n      <CategorySelector categories={categories} selectedCategory=\"1\" />\n    );\n\n    // Ajouter de nouvelles catégories pour tester la synchronisation\n    const newCategories = [{ id: '4', name: 'Writing' }, ...categories];\n    rerender(<CategorySelector categories={newCategories} selectedCategory=\"1\" />);\n    \n    // Vérifier que la nouvelle catégorie est rendue\n    expect(getByText('Writing')).toBeTruthy();\n    \n    // S'assurer que les animations pour les nouvelles catégories sont initialisées\n    const allAnimations = CategorySelector.animationsRef.current; // ou une prop si vous la testez\n    expect(allAnimations['4']).toBeInstanceOf(Animated.Value);\n  });\n  \n  // Couvre la ligne 183\n  it('should scroll to the selected category on layout', async () => {\n    const { getByText, rerender } = render(\n      <CategorySelector categories={categories} selectedCategory=\"1\" />\n    );\n\n    const mockScrollTo = jest.fn();\n    const scrollViewRef = { current: { scrollTo: mockScrollTo } };\n    \n    // Rendre le composant avec une référence de ScrollView\n    rerender(\n      <CategorySelector \n        categories={categories} \n        selectedCategory=\"2\"\n        scrollViewRef={scrollViewRef} // Passer la ref pour le test\n      />\n    );\n\n    // Simuler l'événement onLayout pour la catégorie 2\n    fireEvent(getByText('Vocabulary'), 'layout', {\n      nativeEvent: {\n        layout: { x: 100, y: 0, width: 80, height: 30 },\n      },\n    });\n\n    await act(async () => {\n        jest.runAllTimers();\n    });\n\n    // Vérifier que la fonction scrollTo a été appelée\n    expect(mockScrollTo).toHaveBeenCalledWith({ x: 60, y: 0, animated: true });\n  });\n\n  // Test de la fonction de mémorisation areEqual pour une couverture complète\n  it('should correctly memoize the component based on prop changes', () => {\n    const prevProps = { categories: [{ id: '1', name: 'Grammar' }], selectedCategory: '1' };\n    const nextPropsSame = { categories: [{ id: '1', name: 'Grammar' }], selectedCategory: '1' };\n    const nextPropsDifferentCat = { categories: [{ id: '2', name: 'Vocabulary' }], selectedCategory: '1' };\n    const nextPropsDifferentSel = { categories: [{ id: '1', name: 'Grammar' }], selectedCategory: '2' };\n    \n    // Les props sont les mêmes\n    expect(areEqual(prevProps, nextPropsSame)).toBe(true);\n    \n    // Les catégories sont différentes\n    expect(areEqual(prevProps, nextPropsDifferentCat)).toBe(false);\n    \n    // La sélection est différente\n    expect(areEqual(prevProps, nextPropsDifferentSel)).toBe(false);\n  });\n});"],"mappings":"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","ignoreList":[]}