{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ProgressCard","_jsxRuntime","describe","beforeEach","jest","useFakeTimers","afterEach","act","runOnlyPendingTimers","useRealTimers","it","_asyncToGenerator2","default","render","jsx","expect","screen","getByText","toBeOnTheScreen","title","subtitle","progress","completed","total","handleToggleExpand","fn","expandable","expanded","onToggleExpand","categoryData","id","queryByText","toBeNull","fireEvent","press","toHaveBeenCalledTimes","handleCategoryPress","onCategoryPress","toHaveBeenCalledWith","not","toHaveBeenCalled"],"sources":["ProgressCard.test.js"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, act } from '@testing-library/react-native';\nimport ProgressCard from '../../../src/components/ui/ProgressCard';\n\ndescribe('ProgressCard', () => {\n  // Utiliser fake timers pour éviter les warnings d'animations\n  beforeEach(() => {\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    act(() => {\n      jest.runOnlyPendingTimers();\n    });\n    jest.useRealTimers();\n  });\n\n  it('renders correctly with default props', async () => {\n    await act(async () => {\n      render(<ProgressCard />);\n    });\n    \n    expect(screen.getByText('Progression')).toBeOnTheScreen();\n    \n    // Chercher les textes séparément car ils sont dans des <Text> différents\n    expect(screen.getByText('0')).toBeOnTheScreen();\n    expect(screen.getByText('/')).toBeOnTheScreen();\n    expect(screen.getByText('0')).toBeOnTheScreen();\n    expect(screen.getByText('0%')).toBeOnTheScreen();\n  });\n\n  it('renders with custom title and subtitle', async () => {\n    await act(async () => {\n      render(<ProgressCard title=\"My Progress\" subtitle=\"Daily Goals\" />);\n    });\n    \n    expect(screen.getByText('My Progress')).toBeOnTheScreen();\n    expect(screen.getByText('Daily Goals')).toBeOnTheScreen();\n  });\n\n  it('displays correct progress values', async () => {\n    await act(async () => {\n      render(<ProgressCard progress={50} completed={5} total={10} />);\n    });\n    \n    // Les valeurs sont dans des <Text> séparés selon le render tree\n    expect(screen.getByText('5')).toBeOnTheScreen();\n    expect(screen.getByText('/')).toBeOnTheScreen();\n    expect(screen.getByText('10')).toBeOnTheScreen();\n    expect(screen.getByText('50%')).toBeOnTheScreen();\n  });\n\n  it('expands and collapses when expandable and onToggleExpand are provided', async () => {\n    const handleToggleExpand = jest.fn();\n    \n    await act(async () => {\n      render(\n        <ProgressCard\n          expandable={true}\n          expanded={false}\n          onToggleExpand={handleToggleExpand}\n          categoryData={[{ id: '1', title: 'Category 1', completed: 1, total: 2, progress: 50 }]}\n        />\n      );\n    });\n\n    // Initially collapsed, category data should not be visible\n    expect(screen.queryByText('Par catégorie')).toBeNull();\n\n    // Tap to expand\n    await act(async () => {\n      fireEvent.press(screen.getByText('Progression'));\n    });\n    \n    expect(handleToggleExpand).toHaveBeenCalledTimes(1);\n\n    // Re-render with expanded state\n    await act(async () => {\n      render(\n        <ProgressCard\n          expandable={true}\n          expanded={true}\n          onToggleExpand={handleToggleExpand}\n          categoryData={[{ id: '1', title: 'Category 1', completed: 1, total: 2, progress: 50 }]}\n        />\n      );\n    });\n    \n    expect(screen.getByText('Par catégorie')).toBeOnTheScreen();\n    expect(screen.getByText('Category 1')).toBeOnTheScreen();\n  });\n\n  it('calls onCategoryPress when a category is pressed', async () => {\n    const handleCategoryPress = jest.fn();\n    const categoryData = [{ id: '1', title: 'Category 1', completed: 1, total: 2, progress: 50 }];\n    \n    await act(async () => {\n      render(\n        <ProgressCard\n          expandable={true}\n          expanded={true}\n          categoryData={categoryData}\n          onCategoryPress={handleCategoryPress}\n        />\n      );\n    });\n\n    await act(async () => {\n      fireEvent.press(screen.getByText('Category 1'));\n    });\n    \n    expect(handleCategoryPress).toHaveBeenCalledWith(0);\n  });\n\n  it('does not expand when expandable is false', async () => {\n    const handleToggleExpand = jest.fn();\n    \n    await act(async () => {\n      render(\n        <ProgressCard\n          expandable={false}\n          onToggleExpand={handleToggleExpand}\n          categoryData={[{ id: '1', title: 'Category 1', completed: 1, total: 2, progress: 50 }]}\n        />\n      );\n    });\n\n    await act(async () => {\n      fireEvent.press(screen.getByText('Progression'));\n    });\n    \n    expect(handleToggleExpand).not.toHaveBeenCalled();\n  });\n});"],"mappings":"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","ignoreList":[]}