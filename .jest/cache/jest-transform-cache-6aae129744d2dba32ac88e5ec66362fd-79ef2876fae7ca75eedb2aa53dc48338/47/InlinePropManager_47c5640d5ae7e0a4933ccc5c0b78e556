370fb849617e6f4574b889a729caaedb
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InlinePropManager = void 0;
exports.getInlineStyle = getInlineStyle;
exports.hasInlineStyles = hasInlineStyles;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _utils = require("./utils");
var _ViewDescriptorsSet = require("../ViewDescriptorsSet");
var _ConfigHelper = require("../ConfigHelper");
var _UpdateProps = _interopRequireDefault(require("../UpdateProps"));
var _mappers = require("../mappers");
var _isSharedValue = require("../isSharedValue");
function isInlineStyleTransform(transform) {
  if (!Array.isArray(transform)) {
    return false;
  }
  return transform.some(function (t) {
    return hasInlineStyles(t);
  });
}
function inlinePropsHasChanged(styles1, styles2) {
  if (Object.keys(styles1).length !== Object.keys(styles2).length) {
    return true;
  }
  for (var key of Object.keys(styles1)) {
    if (styles1[key] !== styles2[key]) {
      return true;
    }
  }
  return false;
}
var _worklet_4079464443542_init_data = {
  code: "function getInlinePropsUpdate_InlinePropManagerTs1(inlineProps){const getInlinePropsUpdate_InlinePropManagerTs1=this._recur;const{isSharedValue}=this.__closure;const update={};for(const[key,styleValue]of Object.entries(inlineProps)){if(isSharedValue(styleValue)){update[key]=styleValue.value;}else if(Array.isArray(styleValue)){update[key]=styleValue.map(function(item){return getInlinePropsUpdate_InlinePropManagerTs1(item);});}else if(typeof styleValue==='object'){update[key]=getInlinePropsUpdate_InlinePropManagerTs1(styleValue);}else{update[key]=styleValue;}}return update;}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\createAnimatedComponent\\InlinePropManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"getInlinePropsUpdate_InlinePropManagerTs1\",\"inlineProps\",\"_recur\",\"isSharedValue\",\"__closure\",\"update\",\"key\",\"styleValue\",\"Object\",\"entries\",\"value\",\"Array\",\"isArray\",\"map\",\"item\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/createAnimatedComponent/InlinePropManager.ts\"],\"mappings\":\"AAyCA,SAAAA,yCAAoEA,CAAAC,WAAA,QAAAD,yCAAA,MAAAE,MAAA,OAAAC,aAAA,OAAAC,SAAA,CAElE,KAAM,CAAAC,MAA+B,CAAG,CAAC,CAAC,CAC1C,IAAK,KAAM,CAACC,GAAG,CAAEC,UAAU,CAAC,EAAI,CAAAC,MAAM,CAACC,OAAO,CAACR,WAAW,CAAC,CAAE,CAC3D,GAAIE,aAAa,CAACI,UAAU,CAAC,CAAE,CAC7BF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAACG,KAAK,CAChC,CAAC,IAAM,IAAIC,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,CAAE,CACpCF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAACM,GAAG,CAAE,SAAAC,IAAI,CAAK,CACrC,MAAO,CAAAd,yCAA0B,CAAAc,IAAA,EACnC,CAAC,CAAC,CACJ,CAAC,IAAM,IAAI,MAAO,CAAAP,UAAU,GAAK,QAAQ,CAAE,CACzCF,MAAM,CAACC,GAAG,CAAC,CAAGN,yCAA2D,CAAAO,UAAA,EAC3E,CAAC,IAAM,CACLF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAC1B,CACF,CACA,MAAO,CAAAF,MAAM,CACf\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var getInlinePropsUpdate = function () {
  var _e = [new global.Error(), -2, -27];
  var _getInlinePropsUpdate = function getInlinePropsUpdate(inlineProps) {
    var update = {};
    for (var _ref of Object.entries(inlineProps)) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 2);
      var key = _ref2[0];
      var styleValue = _ref2[1];
      if ((0, _isSharedValue.isSharedValue)(styleValue)) {
        update[key] = styleValue.value;
      } else if (Array.isArray(styleValue)) {
        update[key] = styleValue.map(function (item) {
          return _getInlinePropsUpdate(item);
        });
      } else if (typeof styleValue === 'object') {
        update[key] = _getInlinePropsUpdate(styleValue);
      } else {
        update[key] = styleValue;
      }
    }
    return update;
  };
  _getInlinePropsUpdate.__closure = {
    isSharedValue: _isSharedValue.isSharedValue
  };
  _getInlinePropsUpdate.__workletHash = 4079464443542;
  _getInlinePropsUpdate.__initData = _worklet_4079464443542_init_data;
  _getInlinePropsUpdate.__stackDetails = _e;
  return _getInlinePropsUpdate;
}();
function extractSharedValuesMapFromProps(props) {
  var inlineProps = {};
  for (var key in props) {
    var value = props[key];
    if (key === 'style') {
      var _props$style;
      var styles = (0, _utils.flattenArray)((_props$style = props.style) != null ? _props$style : []);
      styles.forEach(function (style) {
        if (!style) {
          return;
        }
        for (var _ref3 of Object.entries(style)) {
          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2);
          var styleKey = _ref4[0];
          var styleValue = _ref4[1];
          if ((0, _isSharedValue.isSharedValue)(styleValue)) {
            inlineProps[styleKey] = styleValue;
          } else if (styleKey === 'transform' && isInlineStyleTransform(styleValue)) {
            inlineProps[styleKey] = styleValue;
          }
        }
      });
    } else if ((0, _isSharedValue.isSharedValue)(value)) {
      inlineProps[key] = value;
    }
  }
  return inlineProps;
}
function hasInlineStyles(style) {
  if (!style) {
    return false;
  }
  return Object.keys(style).some(function (key) {
    var styleValue = style[key];
    return (0, _isSharedValue.isSharedValue)(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);
  });
}
function getInlineStyle(style, isFirstRender) {
  if (isFirstRender) {
    return getInlinePropsUpdate(style);
  }
  var newStyle = {};
  for (var _ref5 of Object.entries(style)) {
    var _ref6 = (0, _slicedToArray2.default)(_ref5, 2);
    var key = _ref6[0];
    var styleValue = _ref6[1];
    if (!(0, _isSharedValue.isSharedValue)(styleValue) && !(key === 'transform' && isInlineStyleTransform(styleValue))) {
      newStyle[key] = styleValue;
    }
  }
  return newStyle;
}
var _worklet_8214641554132_init_data = {
  code: "function InlinePropManagerTs2(){const{getInlinePropsUpdate,newInlineProps,updateProps,shareableViewDescriptors}=this.__closure;const update=getInlinePropsUpdate(newInlineProps);updateProps(shareableViewDescriptors,update);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\createAnimatedComponent\\InlinePropManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"InlinePropManagerTs2\",\"getInlinePropsUpdate\",\"newInlineProps\",\"updateProps\",\"shareableViewDescriptors\",\"__closure\",\"update\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/createAnimatedComponent/InlinePropManager.ts\"],\"mappings\":\"AA+J8B,SAAAA,oBAAMA,CAAA,QAAAC,oBAAA,CAAAC,cAAA,CAAAC,WAAA,CAAAC,wBAAA,OAAAC,SAAA,CAE5B,KAAM,CAAAC,MAAM,CAAGL,oBAAoB,CAACC,cAAc,CAAC,CACnDC,WAAW,CAACC,wBAAwB,CAAEE,MAAM,CAAC,CAC/C\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var InlinePropManager = exports.InlinePropManager = function () {
  function InlinePropManager() {
    (0, _classCallCheck2.default)(this, InlinePropManager);
    this._inlinePropsViewDescriptors = null;
    this._inlinePropsMapperId = null;
    this._inlineProps = {};
  }
  return (0, _createClass2.default)(InlinePropManager, [{
    key: "attachInlineProps",
    value: function attachInlineProps(animatedComponent, viewInfo) {
      var newInlineProps = extractSharedValuesMapFromProps(animatedComponent.props);
      var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);
      if (hasChanged) {
        if (!this._inlinePropsViewDescriptors) {
          this._inlinePropsViewDescriptors = (0, _ViewDescriptorsSet.makeViewDescriptorsSet)();
          var viewTag = viewInfo.viewTag,
            viewName = viewInfo.viewName,
            shadowNodeWrapper = viewInfo.shadowNodeWrapper,
            viewConfig = viewInfo.viewConfig;
          if (Object.keys(newInlineProps).length && viewConfig) {
            (0, _ConfigHelper.adaptViewConfig)(viewConfig);
          }
          this._inlinePropsViewDescriptors.add({
            tag: viewTag,
            name: viewName,
            shadowNodeWrapper: shadowNodeWrapper
          });
        }
        var shareableViewDescriptors = this._inlinePropsViewDescriptors.shareableViewDescriptors;
        var updaterFunction = function () {
          var _e = [new global.Error(), -5, -27];
          var InlinePropManagerTs2 = function InlinePropManagerTs2() {
            var update = getInlinePropsUpdate(newInlineProps);
            (0, _UpdateProps.default)(shareableViewDescriptors, update);
          };
          InlinePropManagerTs2.__closure = {
            getInlinePropsUpdate: getInlinePropsUpdate,
            newInlineProps: newInlineProps,
            updateProps: _UpdateProps.default,
            shareableViewDescriptors: shareableViewDescriptors
          };
          InlinePropManagerTs2.__workletHash = 8214641554132;
          InlinePropManagerTs2.__initData = _worklet_8214641554132_init_data;
          InlinePropManagerTs2.__stackDetails = _e;
          return InlinePropManagerTs2;
        }();
        this._inlineProps = newInlineProps;
        if (this._inlinePropsMapperId) {
          (0, _mappers.stopMapper)(this._inlinePropsMapperId);
        }
        this._inlinePropsMapperId = null;
        if (Object.keys(newInlineProps).length) {
          this._inlinePropsMapperId = (0, _mappers.startMapper)(updaterFunction, Object.values(newInlineProps));
        }
      }
    }
  }, {
    key: "detachInlineProps",
    value: function detachInlineProps() {
      if (this._inlinePropsMapperId) {
        (0, _mappers.stopMapper)(this._inlinePropsMapperId);
      }
    }
  }]);
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,