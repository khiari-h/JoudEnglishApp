b741ddfca967af7780f11176ef91b16f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var createStyles = function createStyles() {
  var primaryColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#5E60CE";
  return _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: 16,
      marginVertical: 16
    },
    buttonsRow: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      paddingHorizontal: 4
    },
    previousButton: Object.assign({
      flexDirection: 'row',
      alignItems: 'center',
      paddingVertical: 14,
      paddingHorizontal: 20,
      backgroundColor: 'white',
      borderRadius: 16,
      borderWidth: 1.5,
      borderColor: `${primaryColor}25`
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#000',
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowOpacity: 0.08,
        shadowRadius: 8
      },
      android: {
        elevation: 3
      }
    })),
    previousText: {
      fontSize: 15,
      fontWeight: '600',
      letterSpacing: 0.2,
      marginLeft: 8
    },
    nextButtonContainer: Object.assign({
      borderRadius: 16,
      overflow: 'hidden'
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: primaryColor,
        shadowOffset: {
          width: 0,
          height: 4
        },
        shadowOpacity: 0.2,
        shadowRadius: 12
      },
      android: {
        elevation: 6
      }
    })),
    nextButton: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      paddingVertical: 16,
      paddingHorizontal: 28,
      borderRadius: 16
    },
    nextText: {
      fontSize: 16,
      fontWeight: '700',
      color: 'white',
      letterSpacing: 0.3
    },
    nextIcon: {
      marginLeft: 8
    },
    disabled: {
      opacity: 0.6
    }
  });
};
var _default = exports.default = createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY3JlYXRlU3R5bGVzIiwicHJpbWFyeUNvbG9yIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImNvbnRhaW5lciIsIm1hcmdpbkhvcml6b250YWwiLCJtYXJnaW5WZXJ0aWNhbCIsImJ1dHRvbnNSb3ciLCJmbGV4RGlyZWN0aW9uIiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwicGFkZGluZ0hvcml6b250YWwiLCJwcmV2aW91c0J1dHRvbiIsIk9iamVjdCIsImFzc2lnbiIsInBhZGRpbmdWZXJ0aWNhbCIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsImJvcmRlcldpZHRoIiwiYm9yZGVyQ29sb3IiLCJQbGF0Zm9ybSIsInNlbGVjdCIsImlvcyIsInNoYWRvd0NvbG9yIiwic2hhZG93T2Zmc2V0Iiwid2lkdGgiLCJoZWlnaHQiLCJzaGFkb3dPcGFjaXR5Iiwic2hhZG93UmFkaXVzIiwiYW5kcm9pZCIsImVsZXZhdGlvbiIsInByZXZpb3VzVGV4dCIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImxldHRlclNwYWNpbmciLCJtYXJnaW5MZWZ0IiwibmV4dEJ1dHRvbkNvbnRhaW5lciIsIm92ZXJmbG93IiwibmV4dEJ1dHRvbiIsIm5leHRUZXh0IiwiY29sb3IiLCJuZXh0SWNvbiIsImRpc2FibGVkIiwib3BhY2l0eSIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJzdHlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBOYXZpZ2F0aW9uQnV0dG9ucy9zdHlsZS5qcyAtIFBST1BSRSAmIEVGRklDQUNFIPCfjq9cblxuaW1wb3J0IHsgU3R5bGVTaGVldCwgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG4vKipcbiAqIPCfjq8gU3R5bGVzIE5hdmlnYXRpb24gLSBTaW1wbGUgbWFpcyBsw6ljaMOpXG4gKiAtIFBhcyBkZSBkw6lsaXJlIGdsYXNzbW9ycGhpc20gXG4gKiAtIEp1c3RlIHByb3ByZSBldCBtb2Rlcm5lXG4gKiAtIENvaMOpcmVudCBhdmVjIGxlcyBjYXJ0ZXMgZXhpc3RhbnRlc1xuICovXG5jb25zdCBjcmVhdGVTdHlsZXMgPSAocHJpbWFyeUNvbG9yID0gXCIjNUU2MENFXCIpID0+XG4gIFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgICBcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IENPTlRBSU5FUiBTSU1QTEUgPT09PT09PT09PT09PT09PT09PVxuICAgIGNvbnRhaW5lcjoge1xuICAgICAgbWFyZ2luSG9yaXpvbnRhbDogMTYsXG4gICAgICBtYXJnaW5WZXJ0aWNhbDogMTYsXG4gICAgfSxcblxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gUk9XIEJPVVRPTlMgPT09PT09PT09PT09PT09PT09PVxuICAgIGJ1dHRvbnNSb3c6IHtcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgcGFkZGluZ0hvcml6b250YWw6IDQsIC8vIFBldGl0IHBhZGRpbmcgcG91ciDDqXZpdGVyIGxlcyBib3Jkc1xuICAgIH0sXG5cbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IEJPVVRPTiBQUsOJQ8OJREVOVCAtIEdIT1NUIFBST1BSRSA9PT09PT09PT09PT09PT09PT09XG4gICAgcHJldmlvdXNCdXR0b246IHtcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBwYWRkaW5nVmVydGljYWw6IDE0LFxuICAgICAgcGFkZGluZ0hvcml6b250YWw6IDIwLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxuICAgICAgYm9yZGVyUmFkaXVzOiAxNixcbiAgICAgIGJvcmRlcldpZHRoOiAxLjUsXG4gICAgICBib3JkZXJDb2xvcjogYCR7cHJpbWFyeUNvbG9yfTI1YCxcbiAgICAgIFxuICAgICAgLy8gT21icmUgc3VidGlsZSBtYWlzIHByw6lzZW50ZVxuICAgICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcbiAgICAgICAgaW9zOiB7XG4gICAgICAgICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcbiAgICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogMiB9LFxuICAgICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMDgsXG4gICAgICAgICAgc2hhZG93UmFkaXVzOiA4LFxuICAgICAgICB9LFxuICAgICAgICBhbmRyb2lkOiB7XG4gICAgICAgICAgZWxldmF0aW9uOiAzLFxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgfSxcblxuICAgIHByZXZpb3VzVGV4dDoge1xuICAgICAgZm9udFNpemU6IDE1LFxuICAgICAgZm9udFdlaWdodDogJzYwMCcsXG4gICAgICBsZXR0ZXJTcGFjaW5nOiAwLjIsXG4gICAgICBtYXJnaW5MZWZ0OiA4LFxuICAgIH0sXG5cbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IEJPVVRPTiBTVUlWQU5UIC0gR1JBRElFTlQgUFJPUFJFID09PT09PT09PT09PT09PT09PT1cbiAgICBuZXh0QnV0dG9uQ29udGFpbmVyOiB7XG4gICAgICBib3JkZXJSYWRpdXM6IDE2LFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgXG4gICAgICAvLyBPbWJyZSBjb2xvcsOpZSBwb3VyIGxlIENUQVxuICAgICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcbiAgICAgICAgaW9zOiB7XG4gICAgICAgICAgc2hhZG93Q29sb3I6IHByaW1hcnlDb2xvcixcbiAgICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogNCB9LFxuICAgICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMixcbiAgICAgICAgICBzaGFkb3dSYWRpdXM6IDEyLFxuICAgICAgICB9LFxuICAgICAgICBhbmRyb2lkOiB7XG4gICAgICAgICAgZWxldmF0aW9uOiA2LFxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgfSxcblxuICAgIG5leHRCdXR0b246IHtcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICBwYWRkaW5nVmVydGljYWw6IDE2LFxuICAgICAgcGFkZGluZ0hvcml6b250YWw6IDI4LFxuICAgICAgYm9yZGVyUmFkaXVzOiAxNixcbiAgICB9LFxuXG4gICAgbmV4dFRleHQ6IHtcbiAgICAgIGZvbnRTaXplOiAxNixcbiAgICAgIGZvbnRXZWlnaHQ6ICc3MDAnLFxuICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICBsZXR0ZXJTcGFjaW5nOiAwLjMsXG4gICAgfSxcblxuICAgIG5leHRJY29uOiB7XG4gICAgICBtYXJnaW5MZWZ0OiA4LFxuICAgIH0sXG5cbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IMOJVEFUUyBESVNBQkxFRCA9PT09PT09PT09PT09PT09PT09XG4gICAgZGlzYWJsZWQ6IHtcbiAgICAgIG9wYWNpdHk6IDAuNixcbiAgICB9LFxuICB9KTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlU3R5bGVzOyJdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQVFBLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFZQSxDQUFBO0VBQUEsSUFBSUMsWUFBWSxHQUFBQyxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFBRyxTQUFTO0VBQUEsT0FDNUNHLHVCQUFVLENBQUNDLE1BQU0sQ0FBQztJQUdoQkMsU0FBUyxFQUFFO01BQ1RDLGdCQUFnQixFQUFFLEVBQUU7TUFDcEJDLGNBQWMsRUFBRTtJQUNsQixDQUFDO0lBR0RDLFVBQVUsRUFBRTtNQUNWQyxhQUFhLEVBQUUsS0FBSztNQUNwQkMsY0FBYyxFQUFFLGVBQWU7TUFDL0JDLFVBQVUsRUFBRSxRQUFRO01BQ3BCQyxpQkFBaUIsRUFBRTtJQUNyQixDQUFDO0lBR0RDLGNBQWMsRUFBQUMsTUFBQSxDQUFBQyxNQUFBO01BQ1pOLGFBQWEsRUFBRSxLQUFLO01BQ3BCRSxVQUFVLEVBQUUsUUFBUTtNQUNwQkssZUFBZSxFQUFFLEVBQUU7TUFDbkJKLGlCQUFpQixFQUFFLEVBQUU7TUFDckJLLGVBQWUsRUFBRSxPQUFPO01BQ3hCQyxZQUFZLEVBQUUsRUFBRTtNQUNoQkMsV0FBVyxFQUFFLEdBQUc7TUFDaEJDLFdBQVcsRUFBRSxHQUFHckIsWUFBWTtJQUFJLEdBRzdCc0IscUJBQVEsQ0FBQ0MsTUFBTSxDQUFDO01BQ2pCQyxHQUFHLEVBQUU7UUFDSEMsV0FBVyxFQUFFLE1BQU07UUFDbkJDLFlBQVksRUFBRTtVQUFFQyxLQUFLLEVBQUUsQ0FBQztVQUFFQyxNQUFNLEVBQUU7UUFBRSxDQUFDO1FBQ3JDQyxhQUFhLEVBQUUsSUFBSTtRQUNuQkMsWUFBWSxFQUFFO01BQ2hCLENBQUM7TUFDREMsT0FBTyxFQUFFO1FBQ1BDLFNBQVMsRUFBRTtNQUNiO0lBQ0YsQ0FBQyxDQUFDLENBQ0g7SUFFREMsWUFBWSxFQUFFO01BQ1pDLFFBQVEsRUFBRSxFQUFFO01BQ1pDLFVBQVUsRUFBRSxLQUFLO01BQ2pCQyxhQUFhLEVBQUUsR0FBRztNQUNsQkMsVUFBVSxFQUFFO0lBQ2QsQ0FBQztJQUdEQyxtQkFBbUIsRUFBQXZCLE1BQUEsQ0FBQUMsTUFBQTtNQUNqQkcsWUFBWSxFQUFFLEVBQUU7TUFDaEJvQixRQUFRLEVBQUU7SUFBUSxHQUdmakIscUJBQVEsQ0FBQ0MsTUFBTSxDQUFDO01BQ2pCQyxHQUFHLEVBQUU7UUFDSEMsV0FBVyxFQUFFekIsWUFBWTtRQUN6QjBCLFlBQVksRUFBRTtVQUFFQyxLQUFLLEVBQUUsQ0FBQztVQUFFQyxNQUFNLEVBQUU7UUFBRSxDQUFDO1FBQ3JDQyxhQUFhLEVBQUUsR0FBRztRQUNsQkMsWUFBWSxFQUFFO01BQ2hCLENBQUM7TUFDREMsT0FBTyxFQUFFO1FBQ1BDLFNBQVMsRUFBRTtNQUNiO0lBQ0YsQ0FBQyxDQUFDLENBQ0g7SUFFRFEsVUFBVSxFQUFFO01BQ1Y5QixhQUFhLEVBQUUsS0FBSztNQUNwQkUsVUFBVSxFQUFFLFFBQVE7TUFDcEJELGNBQWMsRUFBRSxRQUFRO01BQ3hCTSxlQUFlLEVBQUUsRUFBRTtNQUNuQkosaUJBQWlCLEVBQUUsRUFBRTtNQUNyQk0sWUFBWSxFQUFFO0lBQ2hCLENBQUM7SUFFRHNCLFFBQVEsRUFBRTtNQUNSUCxRQUFRLEVBQUUsRUFBRTtNQUNaQyxVQUFVLEVBQUUsS0FBSztNQUNqQk8sS0FBSyxFQUFFLE9BQU87TUFDZE4sYUFBYSxFQUFFO0lBQ2pCLENBQUM7SUFFRE8sUUFBUSxFQUFFO01BQ1JOLFVBQVUsRUFBRTtJQUNkLENBQUM7SUFHRE8sUUFBUSxFQUFFO01BQ1JDLE9BQU8sRUFBRTtJQUNYO0VBQ0YsQ0FBQyxDQUFDO0FBQUE7QUFBQyxJQUFBQyxRQUFBLEdBQUFDLE9BQUEsQ0FBQUMsT0FBQSxHQUVVakQsWUFBWSIsImlnbm9yZUxpc3QiOltdfQ==