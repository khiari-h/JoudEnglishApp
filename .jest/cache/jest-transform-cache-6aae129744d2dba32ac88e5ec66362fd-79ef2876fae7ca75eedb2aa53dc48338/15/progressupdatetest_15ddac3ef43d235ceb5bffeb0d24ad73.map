{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","useFocusEffect","fn","callback","useDashboardState","showLevelProgress","setShowLevelProgress","openLevelProgressModal","closeLevelProgressModal","refreshing","activeTab","setActiveTab","onRefresh","mockResolvedValue","lastActivity","isLoading","reload","getLevelProgress","refresh","React","require","MockProgressProvider","_ref","children","createElement","Fragment","ProgressProvider","useProgress","progress","overall","levels","updateProgress","mockUpdateProgress","getProgressForLevel","_interopRequireDefault","_asyncToGenerator2","_react","_reactNative","_expoRouter","_Dashboard","_ProgressContext","_ThemeContext","_CurrentLevelContext","_jsxRuntime","_require","describe","beforeEach","clearAllMocks","mockClear","router","push","it","default","_render","render","jsx","ThemeProvider","CurrentLevelProvider","getByTestId","waitFor","expect","toBeTruthy","timeout","startButton","fireEvent","press","toHaveBeenCalledWith","level","exerciseType","score","toHaveBeenCalledTimes"],"sources":["progress-update.test.js"],"sourcesContent":["// __tests__/integration/progress-update.test.js\nimport React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport { router } from 'expo-router';\nimport Dashboard from '../../src/screens/Dashboard';\nimport { ProgressProvider } from '../../src/contexts/ProgressContext';\nimport { ThemeProvider } from '../../src/contexts/ThemeContext';\nimport { CurrentLevelProvider } from '../../src/contexts/CurrentLevelContext';\n\n// ✅ AJOUT SIMPLE du mock useFocusEffect\njest.mock('expo-router', () => ({\n  ...jest.requireActual('expo-router'),\n  useFocusEffect: jest.fn((callback) => {\n    if (typeof callback === 'function') {\n      callback();\n    }\n  }),\n}));\n\n// Reste de vos mocks existants...\njest.mock('../../src/screens/Dashboard/hooks/useDashboardState', () => ({\n  useDashboardState: jest.fn(() => ({\n    showLevelProgress: false,\n    setShowLevelProgress: jest.fn(),\n    openLevelProgressModal: jest.fn(),\n    closeLevelProgressModal: jest.fn(),\n    refreshing: false,\n    activeTab: \"home\",\n    setActiveTab: jest.fn(),\n    onRefresh: jest.fn().mockResolvedValue(),\n  })),\n}));\n\njest.mock('../../src/hooks/useLastActivity', () => () => ({\n  lastActivity: null,\n  isLoading: false,\n  reload: jest.fn(),\n}));\n\njest.mock('../../src/hooks/useRealTimeProgress', () => () => ({\n  getLevelProgress: jest.fn(() => 0),\n  refresh: jest.fn(),\n}));\n\nconst mockUpdateProgress = jest.fn();\n\njest.mock('../../src/contexts/ProgressContext', () => {\n  const React = require('react');\n  \n  const MockProgressProvider = ({ children }) => {\n    return React.createElement(React.Fragment, {}, children);\n  };\n\n  return {\n    ProgressProvider: MockProgressProvider,\n    useProgress: () => ({\n      progress: { overall: 0, levels: {} },\n      isLoading: false,\n      updateProgress: mockUpdateProgress,\n      getProgressForLevel: () => 0,\n    }),\n  };\n});\n\ndescribe('Scénario 1: Mise à jour de la progression', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockUpdateProgress.mockClear();\n    router.push.mockClear();\n  });\n\n  it('devrait mettre à jour la progression après avoir terminé un exercice', async () => {\n    const { getByTestId } = render(\n      <ThemeProvider>\n        <ProgressProvider>\n          <CurrentLevelProvider>\n            <Dashboard />\n          </CurrentLevelProvider>\n        </ProgressProvider>\n      </ThemeProvider>\n    );\n\n    await waitFor(() => {\n      expect(getByTestId('level-selection-button')).toBeTruthy();\n    }, { timeout: 5000 });\n\n    const startButton = getByTestId('level-selection-button');\n    fireEvent.press(startButton);\n\n    await waitFor(() => {\n      expect(router.push).toHaveBeenCalledWith('/tabs/levelSelection');\n    });\n\n    const level = 'A1';\n    const exerciseType = 'vocabulary';\n    const score = 80;\n\n    mockUpdateProgress(level, exerciseType, score);\n\n    expect(mockUpdateProgress).toHaveBeenCalledWith(level, exerciseType, 80);\n    expect(mockUpdateProgress).toHaveBeenCalledTimes(1);\n  });\n});"],"mappings":"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","ignoreList":[]}