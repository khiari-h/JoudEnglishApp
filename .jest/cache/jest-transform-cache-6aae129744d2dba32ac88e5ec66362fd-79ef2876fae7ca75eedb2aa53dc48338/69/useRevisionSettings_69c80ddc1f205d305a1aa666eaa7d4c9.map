{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","REVISION_STORAGE_KEY","useRevisionSettings","exports","_useState","useState","isDisabled","nextRevisionAt","frequency","questionsCount","_useState2","_slicedToArray2","default","preferences","setPreferences","_useState3","_useState4","isLoading","setIsLoading","handleStorageError","error","operation","fallback","arguments","length","undefined","console","warn","loadPreferences","_ref","_asyncToGenerator2","saved","AsyncStorage","getItem","prefs","JSON","parse","apply","useEffect","updatePreferences","_ref2","newPrefs","updatedPrefs","Object","assign","lastUpdate","Date","now","setItem","stringify","emit","eventBusError","_x","enableRevisions","disableRevisions","updateFrequency","newFrequency","resetToNextTarget","wordsLearned","newTarget"],"sources":["useRevisionSettings.js"],"sourcesContent":["// src/hooks/useRevisionSettings.js - VERSION CORRIGÉE AVEC GESTION D'ERREUR\n\nimport { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst REVISION_STORAGE_KEY = 'revision_preferences';\n\nexport const useRevisionSettings = () => {\n  const [preferences, setPreferences] = useState({\n    isDisabled: false,\n    nextRevisionAt: 50,\n    frequency: 50, // Tous les X mots\n    questionsCount: 10\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  // =================== ERROR HANDLING HELPER ===================\n  const handleStorageError = (error, operation, fallback = null) => {\n    console.warn(`Storage error in ${operation}:`, error);\n    return fallback;\n  };\n\n  const loadPreferences = async () => {\n    try {\n      const saved = await AsyncStorage.getItem(REVISION_STORAGE_KEY);\n      if (saved) {\n        const prefs = JSON.parse(saved);\n        setPreferences({\n          isDisabled: prefs.isDisabled || false,\n          nextRevisionAt: prefs.nextRevisionAt || 50,\n          frequency: prefs.frequency || 50,\n          questionsCount: prefs.questionsCount || 10\n        });\n      }\n    } catch (error) {\n      // ✅ Gestion d'erreur appropriée\n      handleStorageError(error, 'loadPreferences');\n      // Fallback: utiliser les valeurs par défaut déjà définies dans useState\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // ========== CHARGEMENT ==========\n  useEffect(() => {\n    loadPreferences();\n  }, []);\n\n  // ========== SAUVEGARDE ==========\n  const updatePreferences = async (newPrefs) => {\n    try {\n      const updatedPrefs = { ...preferences, ...newPrefs, lastUpdate: Date.now() };\n      await AsyncStorage.setItem(REVISION_STORAGE_KEY, JSON.stringify(updatedPrefs));\n      setPreferences(updatedPrefs);\n      \n      // Événement de mise à jour des settings\n      try { \n        require('../utils/eventBus').emit('settings-updated', updatedPrefs); \n      } catch(eventBusError) { \n        // ✅ Gestion d'erreur appropriée\n        console.warn('Event bus error (non-critical):', eventBusError);\n      }\n      return true;\n    } catch (error) {\n      // ✅ Gestion d'erreur appropriée\n      return handleStorageError(error, 'updatePreferences', false);\n    }\n  };\n\n  // ========== ACTIONS SPÉCIFIQUES ==========\n  const enableRevisions = (frequency = 50, questionsCount = 10) => {\n    return updatePreferences({\n      isDisabled: false,\n      frequency,\n      questionsCount,\n      nextRevisionAt: frequency // Reset target\n    });\n  };\n\n  const disableRevisions = () => {\n    return updatePreferences({ isDisabled: true });\n  };\n\n  const updateFrequency = (newFrequency) => {\n    return updatePreferences({ \n      frequency: newFrequency,\n      nextRevisionAt: newFrequency // Reset target\n    });\n  };\n\n  const resetToNextTarget = (wordsLearned) => {\n    const newTarget = wordsLearned + preferences.frequency;\n    return updatePreferences({ nextRevisionAt: newTarget });\n  };\n\n  return {\n    preferences,\n    isLoading,\n    enableRevisions,\n    disableRevisions,\n    updateFrequency,\n    updatePreferences,\n    resetToNextTarget\n  };\n};\n"],"mappings":"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","ignoreList":[]}