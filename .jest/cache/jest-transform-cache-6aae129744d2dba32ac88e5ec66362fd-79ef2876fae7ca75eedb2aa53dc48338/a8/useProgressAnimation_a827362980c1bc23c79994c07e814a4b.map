{"version":3,"names":["_react","require","_reactNative","useProgressAnimation","_ref","_ref$progress","progress","_ref$animated","animated","_ref$duration","duration","clamped","Math","min","max","animatedValue","useRef","Animated","Value","current","animateProgress","timing","toValue","useNativeDriver","start","setProgressDirectly","setValue","useEffect","width","interpolate","inputRange","outputRange"],"sources":["useProgressAnimation.js"],"sourcesContent":["// src/components/ui/ProgressBar/useProgressAnimation.js\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Animated } from \"react-native\";\r\n\r\nexport default function useProgressAnimation({\r\n  progress = 0,\r\n  animated = true,\r\n  duration = 600,\r\n}) {\r\n  const clamped = Math.min(Math.max(progress, 0), 100);\r\n  const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n  // Méthode pour animer la progression\r\n  const animateProgress = () => {\r\n    Animated.timing(animatedValue, {\r\n      toValue: clamped,\r\n      duration,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  };\r\n\r\n  // Méthode pour définir la valeur directement\r\n  const setProgressDirectly = () => {\r\n    animatedValue.setValue(clamped);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (animated) {\r\n      animateProgress();\r\n    } else {\r\n      setProgressDirectly();\r\n    }\r\n  }, [clamped, animated, duration, animatedValue]);\r\n\r\n  const width = animatedValue.interpolate({\r\n    inputRange: [0, 100],\r\n    outputRange: [\"0%\", \"100%\"],\r\n  });\r\n\r\n  return { width };\r\n}\r\n\r\n\r\n"],"mappings":";;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEe,SAASE,oBAAoBA,CAAAC,IAAA,EAIzC;EAAA,IAAAC,aAAA,GAAAD,IAAA,CAHDE,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,CAAC,GAAAA,aAAA;IAAAE,aAAA,GAAAH,IAAA,CACZI,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,IAAI,GAAAA,aAAA;IAAAE,aAAA,GAAAL,IAAA,CACfM,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,GAAG,GAAAA,aAAA;EAEd,IAAME,OAAO,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACR,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;EACpD,IAAMS,aAAa,GAAG,IAAAC,aAAM,EAAC,IAAIC,qBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAG3D,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BH,qBAAQ,CAACI,MAAM,CAACN,aAAa,EAAE;MAC7BO,OAAO,EAAEX,OAAO;MAChBD,QAAQ,EAARA,QAAQ;MACRa,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACZ,CAAC;EAGD,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChCV,aAAa,CAACW,QAAQ,CAACf,OAAO,CAAC;EACjC,CAAC;EAED,IAAAgB,gBAAS,EAAC,YAAM;IACd,IAAInB,QAAQ,EAAE;MACZY,eAAe,CAAC,CAAC;IACnB,CAAC,MAAM;MACLK,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACd,OAAO,EAAEH,QAAQ,EAAEE,QAAQ,EAAEK,aAAa,CAAC,CAAC;EAEhD,IAAMa,KAAK,GAAGb,aAAa,CAACc,WAAW,CAAC;IACtCC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IACpBC,WAAW,EAAE,CAAC,IAAI,EAAE,MAAM;EAC5B,CAAC,CAAC;EAEF,OAAO;IAAEH,KAAK,EAALA;EAAM,CAAC;AAClB","ignoreList":[]}