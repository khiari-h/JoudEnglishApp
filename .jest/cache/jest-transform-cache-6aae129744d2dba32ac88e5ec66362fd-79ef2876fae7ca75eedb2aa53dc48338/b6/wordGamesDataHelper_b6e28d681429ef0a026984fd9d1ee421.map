{"version":3,"names":["wordGamesA1Data","wordGamesA2Data","wordGamesB1Data","wordGamesB2Data","wordGamesC1Data","wordGamesC2Data","cov_jubo0b2vk","s","getWordGamesData","level","f","dataMap","A1","A2","B1","B2","C1","C2","b","getLevelColor","colors"],"sources":["wordGamesDataHelper.js"],"sourcesContent":["// src/utils/wordGames/wordGamesHelper.js\n\n// Import des données de jeux de mots par niveau\nimport wordGamesA1Data from \"../../data/word-games/wordGamesA1\";\nimport wordGamesA2Data from \"../../data/word-games/wordGamesA2\";\nimport wordGamesB1Data from \"../../data/word-games/wordGamesB1\";\nimport wordGamesB2Data from \"../../data/word-games/wordGamesB2\";\nimport wordGamesC1Data from \"../../data/word-games/wordGamesC1\";\nimport wordGamesC2Data from \"../../data/word-games/wordGamesC2\";\n\n/**\n * Récupère les données des jeux de mots en fonction du niveau\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {Object} Les données des jeux de mots pour le niveau spécifié\n */\nexport const getWordGamesData = (level) => {\n  const dataMap = {\n    A1: wordGamesA1Data,\n    A2: wordGamesA2Data,\n    B1: wordGamesB1Data,\n    B2: wordGamesB2Data,\n    C1: wordGamesC1Data,\n    C2: wordGamesC2Data,\n  };\n  return dataMap[level] || wordGamesA1Data; // A1 par défaut\n};\n\n/**\n * Récupère la couleur associée à un niveau de langue\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {string} Code couleur hexadécimal pour le niveau\n */\nexport const getLevelColor = (level) => {\n  const colors = {\n    A1: \"#3b82f6\", // Bleu\n    A2: \"#8b5cf6\", // Violet\n    B1: \"#10b981\", // Vert\n    B2: \"#f59e0b\", // Orange\n    C1: \"#ef4444\", // Rouge\n    C2: \"#6366f1\", // Indigo\n  };\n  return colors[level] || \"#3b82f6\"; // Bleu par défaut\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,OAAOA,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,eAAe,MAAM,mCAAmC;AAACC,aAAA,GAAAC,CAAA;AAOhE,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAK,EAAK;EAAAH,aAAA,GAAAI,CAAA;EACzC,IAAMC,OAAO,IAAAL,aAAA,GAAAC,CAAA,OAAG;IACdK,EAAE,EAAEZ,eAAe;IACnBa,EAAE,EAAEZ,eAAe;IACnBa,EAAE,EAAEZ,eAAe;IACnBa,EAAE,EAAEZ,eAAe;IACnBa,EAAE,EAAEZ,eAAe;IACnBa,EAAE,EAAEZ;EACN,CAAC;EAACC,aAAA,GAAAC,CAAA;EACF,OAAO,CAAAD,aAAA,GAAAY,CAAA,UAAAP,OAAO,CAACF,KAAK,CAAC,MAAAH,aAAA,GAAAY,CAAA,UAAIlB,eAAe;AAC1C,CAAC;AAACM,aAAA,GAAAC,CAAA;AAOF,OAAO,IAAMY,aAAa,GAAG,SAAhBA,aAAaA,CAAIV,KAAK,EAAK;EAAAH,aAAA,GAAAI,CAAA;EACtC,IAAMU,MAAM,IAAAd,aAAA,GAAAC,CAAA,OAAG;IACbK,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE;EACN,CAAC;EAACX,aAAA,GAAAC,CAAA;EACF,OAAO,CAAAD,aAAA,GAAAY,CAAA,UAAAE,MAAM,CAACX,KAAK,CAAC,MAAAH,aAAA,GAAAY,CAAA,UAAI,SAAS;AACnC,CAAC","ignoreList":[]}