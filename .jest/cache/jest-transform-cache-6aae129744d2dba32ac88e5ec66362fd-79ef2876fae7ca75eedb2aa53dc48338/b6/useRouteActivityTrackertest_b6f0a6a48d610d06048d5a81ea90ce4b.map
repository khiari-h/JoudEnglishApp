{"version":3,"names":["_getJestObj","mock","useSegments","jest","fn","usePathname","__esModule","default","startSession","endSession","updateStreak","_interopRequireDefault","require","_reactNative","_useRouteActivityTracker","_require10","describe","beforeEach","clearAllMocks","it","mockStartSession","useActivityMetrics","mockReturnValue","_require","renderHook","useRouteActivityTracker","expect","toHaveBeenCalledWith","mockEndSession","mockUpdateStreak","_require2","toHaveBeenCalledTimes","mockImplementation","Error","_require3","not","toThrow","_require4","hook","rerender","_require5","toHaveBeenCalled","unmount","_require6","console","log","calls","length","warn","_require7","_require8","_require9","_require0","_require1"],"sources":["useRouteActivityTracker.test.js"],"sourcesContent":["// __tests__/hooks/useRouteActivityTracker.test.js\nimport { renderHook } from '@testing-library/react-native';\nimport useRouteActivityTracker from '../../src/hooks/useRouteActivityTracker';\n\njest.mock('expo-router', () => ({\n  useSegments: jest.fn(() => []),\n  usePathname: jest.fn(() => '/'),\n}));\n\njest.mock('../../src/hooks/useActivityMetrics', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    startSession: jest.fn(),\n    endSession: jest.fn(),\n    updateStreak: jest.fn(),\n  })),\n}));\n\ndescribe('useRouteActivityTracker', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Fonctions utilitaires extraites', () => {\n    it('devrait détecter correctement les exercices', () => {\n      const mockStartSession = jest.fn();\n      const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n      useActivityMetrics.mockReturnValue({\n        startSession: mockStartSession,\n        endSession: jest.fn(),\n        updateStreak: jest.fn(),\n      });\n\n      const { useSegments } = require('expo-router');\n      \n      // Test avec différents types d'exercices\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      renderHook(() => useRouteActivityTracker());\n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n\n      jest.clearAllMocks();\n      \n      useSegments.mockReturnValue(['level', 'GrammarExercise']);\n      renderHook(() => useRouteActivityTracker());\n      expect(mockStartSession).toHaveBeenCalledWith('GrammarExercise');\n\n      jest.clearAllMocks();\n      \n      useSegments.mockReturnValue(['level', 'Assessment']);\n      renderHook(() => useRouteActivityTracker());\n      expect(mockStartSession).toHaveBeenCalledWith('Assessment');\n    });\n\n    it('devrait gérer les transitions entre exercices', () => {\n      const mockStartSession = jest.fn();\n      const mockEndSession = jest.fn();\n      const mockUpdateStreak = jest.fn();\n      \n      const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n      useActivityMetrics.mockReturnValue({\n        startSession: mockStartSession,\n        endSession: mockEndSession,\n        updateStreak: mockUpdateStreak,\n      });\n\n      const { useSegments, usePathname } = require('expo-router');\n      \n      // Premier exercice\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n      renderHook(() => useRouteActivityTracker());\n      \n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      // Nettoyer les mocks pour le test suivant\n      jest.clearAllMocks();\n      \n      // Deuxième exercice (nouveau hook, nouvelle instance)\n      useSegments.mockReturnValue(['level', 'GrammarExercise']);\n      usePathname.mockReturnValue('/level/GrammarExercise');\n      renderHook(() => useRouteActivityTracker());\n      \n      expect(mockStartSession).toHaveBeenCalledWith('GrammarExercise');\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n    });\n\n    it('devrait gérer les erreurs de session gracieusement', () => {\n      const mockStartSession = jest.fn().mockImplementation(() => {\n        throw new Error('Erreur de session');\n      });\n      const mockEndSession = jest.fn();\n      const mockUpdateStreak = jest.fn();\n      \n      const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n      useActivityMetrics.mockReturnValue({\n        startSession: mockStartSession,\n        endSession: mockEndSession,\n        updateStreak: mockUpdateStreak,\n      });\n\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      // Ne devrait pas planter malgré l'erreur\n      expect(() => {\n        renderHook(() => useRouteActivityTracker());\n      }).not.toThrow();\n    });\n\n    it('devrait éviter les re-déclenchements inutiles', () => {\n      const mockStartSession = jest.fn();\n      const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n      useActivityMetrics.mockReturnValue({\n        startSession: mockStartSession,\n        endSession: jest.fn(),\n        updateStreak: jest.fn(),\n      });\n\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      // Premier rendu\n      const hook = renderHook(() => useRouteActivityTracker());\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      // Même pathname, ne devrait pas redémarrer (même instance)\n      // Simuler un changement de segments mais même pathname\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n      \n      // Forcer un re-render\n      hook.rerender();\n      \n      // Devrait toujours être 1 car même pathname\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n    });\n\n// Test corrigé pour le nettoyage lors du démontage\nit('devrait nettoyer correctement lors du démontage', () => {\n  const mockStartSession = jest.fn();\n  const mockEndSession = jest.fn();\n  const mockUpdateStreak = jest.fn();\n  \n  const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n  useActivityMetrics.mockReturnValue({\n    startSession: mockStartSession,\n    endSession: mockEndSession,\n    updateStreak: mockUpdateStreak,\n  });\n\n  const { useSegments, usePathname } = require('expo-router');\n  useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n  usePathname.mockReturnValue('/level/VocabularyExercise');\n\n  // Démarrer une session\n  const hook = renderHook(() => useRouteActivityTracker());\n  \n  // Vérifier que startSession a été appelé (pour s'assurer qu'une session est active)\n  expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n  expect(mockStartSession).toHaveBeenCalledTimes(1);\n  \n  // Vérifier que endSession n'a pas encore été appelé\n  expect(mockEndSession).not.toHaveBeenCalled();\n  \n  // Simuler le démontage\n  hook.unmount();\n  \n  // Vérifier que endSession a été appelé lors du démontage\n  expect(mockEndSession).toHaveBeenCalledTimes(1);\n});\n\n// Test alternatif pour diagnostiquer le problème\nit('devrait diagnostiquer le comportement de nettoyage', () => {\n  const mockStartSession = jest.fn();\n  const mockEndSession = jest.fn();\n  const mockUpdateStreak = jest.fn();\n  \n  const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n  useActivityMetrics.mockReturnValue({\n    startSession: mockStartSession,\n    endSession: mockEndSession,\n    updateStreak: mockUpdateStreak,\n  });\n\n  const { useSegments, usePathname } = require('expo-router');\n  useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n  usePathname.mockReturnValue('/level/VocabularyExercise');\n\n  console.log('Avant renderHook');\n  const hook = renderHook(() => useRouteActivityTracker());\n  console.log('Après renderHook - startSession appelé:', mockStartSession.mock.calls.length);\n  console.log('endSession appelé avant unmount:', mockEndSession.mock.calls.length);\n  \n  hook.unmount();\n  console.log('Après unmount - endSession appelé:', mockEndSession.mock.calls.length);\n  \n  // Si endSession n'est toujours pas appelé, le problème est dans l'implémentation du hook\n  if (mockEndSession.mock.calls.length === 0) {\n    console.warn('DIAGNOSTIC: endSession n\\'est pas appelé lors du démontage. Vérifiez l\\'implémentation du hook useRouteActivityTracker.');\n  }\n});\n  });\n\n  it('devrait s\\'initialiser sans erreur', () => {\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['home']);\n    usePathname.mockReturnValue('/home');\n\n    expect(() => {\n      renderHook(() => useRouteActivityTracker());\n    }).not.toThrow();\n  });\n\n  it('devrait détecter un exercice de vocabulaire', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n    usePathname.mockReturnValue('/level/VocabularyExercise');\n\n    renderHook(() => useRouteActivityTracker());\n\n    expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n  });\n\n  it('devrait détecter un assessment', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['level', 'Assessment']);\n    usePathname.mockReturnValue('/level/Assessment');\n\n    renderHook(() => useRouteActivityTracker());\n\n    expect(mockStartSession).toHaveBeenCalledWith('Assessment');\n  });\n\n  it('ne devrait pas démarrer de session pour une page normale', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['home', 'dashboard']);\n    usePathname.mockReturnValue('/home/dashboard');\n\n    renderHook(() => useRouteActivityTracker());\n\n    expect(mockStartSession).not.toHaveBeenCalled();\n  });\n\n  it('devrait gérer les segments vides', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue([]);\n    usePathname.mockReturnValue('/');\n\n    expect(() => {\n      renderHook(() => useRouteActivityTracker());\n    }).not.toThrow();\n\n    expect(mockStartSession).not.toHaveBeenCalled();\n  });\n});"],"mappings":"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","ignoreList":[]}