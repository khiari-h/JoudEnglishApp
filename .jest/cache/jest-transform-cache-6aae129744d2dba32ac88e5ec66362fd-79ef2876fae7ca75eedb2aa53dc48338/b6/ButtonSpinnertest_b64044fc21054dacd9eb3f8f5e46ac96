c0bbf7c8186ec2b6583eebe0d5f8c283
_getJestObj().mock('react-native', function () {
  var RN = jest.requireActual('react-native');
  return Object.assign({}, RN, {
    ActivityIndicator: jest.fn(RN.ActivityIndicator)
  });
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _ButtonSpinner = _interopRequireDefault(require("../../../../src/components/ui/Button/ButtonSpinner"));
var _reactNative2 = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('ButtonSpinner', function () {
  beforeEach(function () {
    jest.clearAllMocks();
  });
  it('devrait rendre un ActivityIndicator avec les props size et color', function () {
    var mockSize = 'large';
    var mockColor = '#FF0000';
    (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonSpinner.default, {
      size: mockSize,
      color: mockColor
    }));
    expect(_reactNative2.ActivityIndicator).toHaveBeenCalledWith(expect.objectContaining({
      size: mockSize,
      color: mockColor,
      testID: 'button-loader'
    }), {});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJSTiIsImplc3QiLCJyZXF1aXJlQWN0dWFsIiwiT2JqZWN0IiwiYXNzaWduIiwiQWN0aXZpdHlJbmRpY2F0b3IiLCJmbiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX3JlYWN0TmF0aXZlIiwiX0J1dHRvblNwaW5uZXIiLCJfcmVhY3ROYXRpdmUyIiwiX2pzeFJ1bnRpbWUiLCJfcmVxdWlyZSIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsImNsZWFyQWxsTW9ja3MiLCJpdCIsIm1vY2tTaXplIiwibW9ja0NvbG9yIiwicmVuZGVyIiwianN4IiwiZGVmYXVsdCIsInNpemUiLCJjb2xvciIsImV4cGVjdCIsInRvSGF2ZUJlZW5DYWxsZWRXaXRoIiwib2JqZWN0Q29udGFpbmluZyIsInRlc3RJRCJdLCJzb3VyY2VzIjpbIkJ1dHRvblNwaW5uZXIudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCBCdXR0b25TcGlubmVyIGZyb20gJy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3VpL0J1dHRvbi9CdXR0b25TcGlubmVyJztcclxuaW1wb3J0IHsgQWN0aXZpdHlJbmRpY2F0b3IgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5cclxuLy8gT24gbW9ja2UgZGlyZWN0ZW1lbnQgbGUgY29tcG9zYW50IEFjdGl2aXR5SW5kaWNhdG9yXHJcbmplc3QubW9jaygncmVhY3QtbmF0aXZlJywgKCkgPT4ge1xyXG4gIGNvbnN0IFJOID0gamVzdC5yZXF1aXJlQWN0dWFsKCdyZWFjdC1uYXRpdmUnKTtcclxuICByZXR1cm4ge1xyXG4gICAgLi4uUk4sXHJcbiAgICBBY3Rpdml0eUluZGljYXRvcjogamVzdC5mbihSTi5BY3Rpdml0eUluZGljYXRvciksXHJcbiAgfTtcclxufSk7XHJcblxyXG5kZXNjcmliZSgnQnV0dG9uU3Bpbm5lcicsICgpID0+IHtcclxuICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgIGplc3QuY2xlYXJBbGxNb2NrcygpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnZGV2cmFpdCByZW5kcmUgdW4gQWN0aXZpdHlJbmRpY2F0b3IgYXZlYyBsZXMgcHJvcHMgc2l6ZSBldCBjb2xvcicsICgpID0+IHtcclxuICAgIGNvbnN0IG1vY2tTaXplID0gJ2xhcmdlJztcclxuICAgIGNvbnN0IG1vY2tDb2xvciA9ICcjRkYwMDAwJztcclxuICAgIHJlbmRlcig8QnV0dG9uU3Bpbm5lciBzaXplPXttb2NrU2l6ZX0gY29sb3I9e21vY2tDb2xvcn0gLz4pO1xyXG4gICAgXHJcbiAgICBleHBlY3QoQWN0aXZpdHlJbmRpY2F0b3IpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKFxyXG4gICAgICBleHBlY3Qub2JqZWN0Q29udGFpbmluZyh7XHJcbiAgICAgICAgc2l6ZTogbW9ja1NpemUsXHJcbiAgICAgICAgY29sb3I6IG1vY2tDb2xvcixcclxuICAgICAgICB0ZXN0SUQ6ICdidXR0b24tbG9hZGVyJyxcclxuICAgICAgfSksXHJcbiAgICAgIHt9XHJcbiAgICApO1xyXG4gIH0pO1xyXG59KTsiXSwibWFwcGluZ3MiOiJBQU1BQSxXQUFBLEdBQUtDLElBQUksQ0FBQyxjQUFjLEVBQUUsWUFBTTtFQUM5QixJQUFNQyxFQUFFLEdBQUdDLElBQUksQ0FBQ0MsYUFBYSxDQUFDLGNBQWMsQ0FBQztFQUM3QyxPQUFBQyxNQUFBLENBQUFDLE1BQUEsS0FDS0osRUFBRTtJQUNMSyxpQkFBaUIsRUFBRUosSUFBSSxDQUFDSyxFQUFFLENBQUNOLEVBQUUsQ0FBQ0ssaUJBQWlCO0VBQUM7QUFFcEQsQ0FBQyxDQUFDO0FBQUMsSUFBQUUsc0JBQUEsR0FBQUMsT0FBQTtBQVpILElBQUFDLE1BQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFFLFlBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLGNBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFJLGFBQUEsR0FBQUosT0FBQTtBQUFpRCxJQUFBSyxXQUFBLEdBQUFMLE9BQUE7QUFBQSxTQUFBVixZQUFBO0VBQUEsSUFBQWdCLFFBQUEsR0FBQU4sT0FBQTtJQUFBUCxJQUFBLEdBQUFhLFFBQUEsQ0FBQWIsSUFBQTtFQUFBSCxXQUFBLFlBQUFBLFlBQUE7SUFBQSxPQUFBRyxJQUFBO0VBQUE7RUFBQSxPQUFBQSxJQUFBO0FBQUE7QUFXakRjLFFBQVEsQ0FBQyxlQUFlLEVBQUUsWUFBTTtFQUM5QkMsVUFBVSxDQUFDLFlBQU07SUFDZmYsSUFBSSxDQUFDZ0IsYUFBYSxDQUFDLENBQUM7RUFDdEIsQ0FBQyxDQUFDO0VBRUZDLEVBQUUsQ0FBQyxrRUFBa0UsRUFBRSxZQUFNO0lBQzNFLElBQU1DLFFBQVEsR0FBRyxPQUFPO0lBQ3hCLElBQU1DLFNBQVMsR0FBRyxTQUFTO0lBQzNCLElBQUFDLG1CQUFNLEVBQUMsSUFBQVIsV0FBQSxDQUFBUyxHQUFBLEVBQUNYLGNBQUEsQ0FBQVksT0FBYTtNQUFDQyxJQUFJLEVBQUVMLFFBQVM7TUFBQ00sS0FBSyxFQUFFTDtJQUFVLENBQUUsQ0FBQyxDQUFDO0lBRTNETSxNQUFNLENBQUNyQiwrQkFBaUIsQ0FBQyxDQUFDc0Isb0JBQW9CLENBQzVDRCxNQUFNLENBQUNFLGdCQUFnQixDQUFDO01BQ3RCSixJQUFJLEVBQUVMLFFBQVE7TUFDZE0sS0FBSyxFQUFFTCxTQUFTO01BQ2hCUyxNQUFNLEVBQUU7SUFDVixDQUFDLENBQUMsRUFDRixDQUFDLENBQ0gsQ0FBQztFQUNILENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==