{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ButtonSpinner","ReactNative","_interopRequireWildcard","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","mockActivityIndicator","jest","fn","spyOn","mockReturnValue","describe","it","mockSize","mockColor","render","jsx","size","color","expect","toHaveBeenCalledWith","objectContaining"],"sources":["ButtonSpinner.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport ButtonSpinner from '../../../../src/components/ui/Button/ButtonSpinner';\r\nimport * as ReactNative from 'react-native';\r\n\r\n// Create a spyable mock for ActivityIndicator\r\nconst mockActivityIndicator = jest.fn(() => null);\r\njest.spyOn(ReactNative, 'ActivityIndicator', 'get').mockReturnValue(mockActivityIndicator);\r\n\r\ndescribe('ButtonSpinner', () => {\r\n  it('devrait rendre un ActivityIndicator avec les props size et color', () => {\r\n    const mockSize = 'large';\r\n    const mockColor = '#FF0000';\r\n    render(<ButtonSpinner size={mockSize} color={mockColor} />);\r\n    \r\n    // We get the spyable mock and assert on its calls\r\n    expect(mockActivityIndicator).toHaveBeenCalledWith(\r\n      expect.objectContaining({\r\n        size: mockSize,\r\n        color: mockColor,\r\n      }),\r\n      {}\r\n    );\r\n  });\r\n});"],"mappings":";AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,WAAA,GAAAC,uBAAA,CAAAJ,OAAA;AAA4C,IAAAK,WAAA,GAAAL,OAAA;AAAA,SAAAI,wBAAAE,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAJ,uBAAA,YAAAA,wBAAAE,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAG5C,IAAMmB,qBAAqB,GAAGC,IAAI,CAACC,EAAE,CAAC;EAAA,OAAM,IAAI;AAAA,EAAC;AACjDD,IAAI,CAACE,KAAK,CAAC1B,WAAW,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC2B,eAAe,CAACJ,qBAAqB,CAAC;AAE1FK,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,EAAE,CAAC,kEAAkE,EAAE,YAAM;IAC3E,IAAMC,QAAQ,GAAG,OAAO;IACxB,IAAMC,SAAS,GAAG,SAAS;IAC3B,IAAAC,mBAAM,EAAC,IAAA9B,WAAA,CAAA+B,GAAA,EAAClC,cAAA,CAAAc,OAAa;MAACqB,IAAI,EAAEJ,QAAS;MAACK,KAAK,EAAEJ;IAAU,CAAE,CAAC,CAAC;IAG3DK,MAAM,CAACb,qBAAqB,CAAC,CAACc,oBAAoB,CAChDD,MAAM,CAACE,gBAAgB,CAAC;MACtBJ,IAAI,EAAEJ,QAAQ;MACdK,KAAK,EAAEJ;IACT,CAAC,CAAC,EACF,CAAC,CACH,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}