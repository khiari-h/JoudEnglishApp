{"version":3,"names":["Object","defineProperty","exports","value","updatePropsJestWrapper","default","_Colors","require","_jsReanimated","_PlatformChecker","_threads","_errors","updateProps","_worklet_202918310415_init_data","code","location","sourceMap","version","_worklet_12370645755904_init_data","shouldBeUseWeb","_e","global","Error","UpdatePropsTs1","viewDescriptors","updates","isAnimatedProps","_viewDescriptors$valu","forEach","viewDescriptor","component","tag","_updatePropsJS","__closure","__workletHash","__initData","__stackDetails","UpdatePropsTs2","processColorsInProps","UpdatePropsManager","update","animatedStyle","adapters","adapter","current","assign","_default","_worklet_2123555983047_init_data","_worklet_1793535194789_init_data","createUpdatePropsManager","isFabric","UpdatePropsTs3","operations","_this","push","shadowNodeWrapper","length","queueMicrotask","flush","_updatePropsFabric","UpdatePropsTs4","_this2","name","_updatePropsPaper","_worklet_7938014472957_init_data","maybeThrowError","isJest","ReanimatedError","Proxy","get","set","runOnUIImmediately","UpdatePropsTs5"],"sources":["UpdateProps.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-redundant-type-constituents */\n'use strict';\nimport type { MutableRefObject } from 'react';\nimport { processColorsInProps } from './Colors';\nimport type {\n  ShadowNodeWrapper,\n  StyleProps,\n  AnimatedStyle,\n} from './commonTypes';\nimport type { Descriptor } from './hook/commonTypes';\nimport type { ReanimatedHTMLElement } from './js-reanimated';\nimport { _updatePropsJS } from './js-reanimated';\nimport { isFabric, isJest, shouldBeUseWeb } from './PlatformChecker';\nimport { runOnUIImmediately } from './threads';\nimport { ReanimatedError } from './errors';\n\nlet updateProps: (\n  viewDescriptors: ViewDescriptorsWrapper,\n  updates: StyleProps | AnimatedStyle<any>,\n  isAnimatedProps?: boolean\n) => void;\n\nif (shouldBeUseWeb()) {\n  updateProps = (viewDescriptors, updates, isAnimatedProps) => {\n    'worklet';\n    viewDescriptors.value?.forEach((viewDescriptor) => {\n      const component = viewDescriptor.tag as ReanimatedHTMLElement;\n      _updatePropsJS(updates, component, isAnimatedProps);\n    });\n  };\n} else {\n  updateProps = (viewDescriptors, updates) => {\n    'worklet';\n    processColorsInProps(updates);\n    global.UpdatePropsManager.update(viewDescriptors, updates);\n  };\n}\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: ViewDescriptorsWrapper,\n  updates: AnimatedStyle<any>,\n  animatedStyle: MutableRefObject<AnimatedStyle<any>>,\n  adapters: ((updates: AnimatedStyle<any>) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedStyle.current.value = {\n    ...animatedStyle.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates);\n};\n\nexport default updateProps;\n\nconst createUpdatePropsManager = isFabric()\n  ? () => {\n      'worklet';\n      // Fabric\n      const operations: {\n        shadowNodeWrapper: ShadowNodeWrapper;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: ViewDescriptorsWrapper,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              shadowNodeWrapper: viewDescriptor.shadowNodeWrapper,\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush(this: void) {\n          global._updatePropsFabric!(operations);\n          operations.length = 0;\n        },\n      };\n    }\n  : () => {\n      'worklet';\n      // Paper\n      const operations: {\n        tag: number;\n        name: string;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: ViewDescriptorsWrapper,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              tag: viewDescriptor.tag as number,\n              name: viewDescriptor.name || 'RCTView',\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush(this: void) {\n          global._updatePropsPaper!(operations);\n          operations.length = 0;\n        },\n      };\n    };\n\nif (shouldBeUseWeb()) {\n  const maybeThrowError = () => {\n    // Jest attempts to access a property of this object to check if it is a Jest mock\n    // so we can't throw an error in the getter.\n    if (!isJest()) {\n      throw new ReanimatedError(\n        '`UpdatePropsManager` is not available on non-native platform.'\n      );\n    }\n  };\n  global.UpdatePropsManager = new Proxy({} as UpdatePropsManager, {\n    get: maybeThrowError,\n    set: () => {\n      maybeThrowError();\n      return false;\n    },\n  });\n} else {\n  runOnUIImmediately(() => {\n    'worklet';\n    global.UpdatePropsManager = createUpdatePropsManager();\n  })();\n}\n\nexport interface UpdatePropsManager {\n  update(\n    viewDescriptors: ViewDescriptorsWrapper,\n    updates: StyleProps | AnimatedStyle<any>\n  ): void;\n  flush(): void;\n}\n\n/**\n * This used to be `SharedValue<Descriptors[]>` but objects holding just a\n * single `value` prop are fine too.\n */\ninterface ViewDescriptorsWrapper {\n  value: Readonly<Descriptor[]>;\n}\n"],"mappings":"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","ignoreList":[]}