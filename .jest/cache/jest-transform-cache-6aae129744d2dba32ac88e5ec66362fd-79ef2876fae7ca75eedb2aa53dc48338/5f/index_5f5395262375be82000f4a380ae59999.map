{"version":3,"names":["_propTypes","_interopRequireDefault","require","_ProgressCard","_phrasesStats","_jsxRuntime","cov_2r967td18q","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","PhrasesProgress","_ref","levelColor","phrasesData","completedPhrases","expanded","onToggleExpand","onCategoryPress","categories","phrases","totalPhrasesCount","calculateTotalPhrases","completedPhrasesCount","calculateCompletedPhrasesCount","totalProgress","calculateTotalPhrasesProgress","categoryProgressData","calculateCategoryPhrasesProgress","formattedCategoryData","map","category","title","completed","total","totalPhrases","progress","jsx","default","unit","expandable","length","categoryData","propTypes","PropTypes","string","shape","array","object","bool","func","defaultProps","_default","exports"],"sources":["index.js"],"sourcesContent":["// PhrasesProgress/index.js - VERSION CORRIGÃ‰E AVEC PHRASESTATS\n\nimport PropTypes from 'prop-types';\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\nimport {\n  calculateTotalPhrases,\n  calculateCompletedPhrasesCount,\n  calculateTotalPhrasesProgress,\n  calculateCategoryPhrasesProgress,\n} from \"../../../../utils/phrases/phrasesStats\";\n\n/**\n * ðŸ“Š PhrasesProgress - Version CorrigÃ©e avec phrasesStats\n * âœ… Utilise les vraies fonctions de calcul\n * âœ… GÃ¨re correctement la structure des donnÃ©es phrases\n * \n * @param {number} progress - Pourcentage de progression (0-100) [IGNORÃ‰ - recalculÃ©]\n * @param {number} currentPhrase - Phrase actuelle (1-based) [IGNORÃ‰ - recalculÃ©]\n * @param {number} totalPhrases - Nombre total de phrases [IGNORÃ‰ - recalculÃ©]\n * @param {number} completedCount - Nombre de phrases complÃ©tÃ©es [IGNORÃ‰ - recalculÃ©]\n * @param {string} levelColor - Couleur du niveau\n * @param {object} phrasesData - DonnÃ©es des phrases\n * @param {object} completedPhrases - Phrases complÃ©tÃ©es par catÃ©gorie\n * @param {boolean} expanded - Ã‰tat d'expansion\n * @param {function} onToggleExpand - Fonction pour toggle expansion\n * @param {function} onCategoryPress - Fonction appelÃ©e lors du clic sur catÃ©gorie\n */\nconst PhrasesProgress = ({\n  levelColor,\n  phrasesData,\n  completedPhrases,\n  expanded,\n  onToggleExpand,\n  onCategoryPress,\n}) => {\n  \n  // âœ… CORRECTION : Utilise les vraies fonctions de calcul\n  const categories = phrasesData?.categories || [];\n  const phrases = phrasesData?.phrases || [];\n  \n  const totalPhrasesCount = calculateTotalPhrases(categories, phrases);\n  const completedPhrasesCount = calculateCompletedPhrasesCount(completedPhrases);\n  const totalProgress = calculateTotalPhrasesProgress(categories, phrases, completedPhrases);\n  const categoryProgressData = calculateCategoryPhrasesProgress(categories, phrases, completedPhrases);\n\n  // Transformation pour le format ProgressCard\n  const formattedCategoryData = categoryProgressData.map((category) => ({\n    title: category.title,\n    completed: category.completedPhrases,\n    total: category.totalPhrases,\n    progress: category.progress,\n  }));\n\n  return (\n    <ProgressCard\n      title=\"Progression\"\n      progress={totalProgress} // âœ… Utilise le calcul correct\n      completed={completedPhrasesCount} // âœ… Utilise le calcul correct\n      total={totalPhrasesCount} // âœ… Utilise le calcul correct\n      unit=\"phrases\"\n      levelColor={levelColor}\n      expandable={categoryProgressData.length > 0}\n      expanded={expanded}\n      onToggleExpand={onToggleExpand}\n      categoryData={formattedCategoryData}\n      onCategoryPress={onCategoryPress}\n    />\n  );\n};\n\n// âœ… Ajout des validations PropTypes\nPhrasesProgress.propTypes = {\n  levelColor: PropTypes.string,\n  phrasesData: PropTypes.shape({\n    categories: PropTypes.array,\n    phrases: PropTypes.array,\n  }),\n  completedPhrases: PropTypes.object,\n  expanded: PropTypes.bool,\n  onToggleExpand: PropTypes.func,\n  onCategoryPress: PropTypes.func,\n};\n\n// âœ… Ajout des valeurs par dÃ©faut pour la robustesse\nPhrasesProgress.defaultProps = {\n  levelColor: '#5E60CE',\n  phrasesData: { categories: [], phrases: [] },\n  completedPhrases: {},\n  expanded: false,\n  onToggleExpand: () => {},\n  onCategoryPress: () => {},\n};\n\n\nexport default PhrasesProgress;"],"mappings":"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","ignoreList":[]}