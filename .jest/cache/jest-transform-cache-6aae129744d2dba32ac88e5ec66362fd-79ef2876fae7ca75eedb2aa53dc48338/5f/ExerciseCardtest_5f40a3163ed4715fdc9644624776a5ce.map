{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ExerciseCard","_jsxRuntime","describe","defaultProps","title","description","icon","onPress","jest","fn","afterEach","clearAllMocks","it","_render","render","jsx","default","Object","assign","getByText","expect","toBeTruthy","_render2","fireEvent","press","toHaveBeenCalledTimes","_render3","_render4","progress","getByTestId","progressFill","props","style","toContainEqual","width","_render5","queryByText","queryByTestId","toBeNull","_render6","isNew","_render7","_render8"],"sources":["ExerciseCard.test.js"],"sourcesContent":["\n// __tests__/components/exercise-common/ExerciseCard.test.js\nimport React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport ExerciseCard from '../../../src/components/exercise-common/ExerciseCard';\n\ndescribe('ExerciseCard', () => {\n  const defaultProps = {\n    title: 'Vocabulary Practice',\n    description: 'Expand your word knowledge',\n    icon: 'ðŸ“š',\n    onPress: jest.fn(),\n  };\n\n  // Nettoyer les mocks aprÃ¨s chaque test\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('renders the basic card information correctly', () => {\n    const { getByText } = render(<ExerciseCard {...defaultProps} />);\n\n    expect(getByText('Vocabulary Practice')).toBeTruthy();\n    expect(getByText('Expand your word knowledge')).toBeTruthy();\n    expect(getByText('ðŸ“š')).toBeTruthy();\n  });\n\n  it('calls onPress when the card is pressed', () => {\n    const { getByText } = render(<ExerciseCard {...defaultProps} />);\n    fireEvent.press(getByText('Vocabulary Practice'));\n    expect(defaultProps.onPress).toHaveBeenCalledTimes(1);\n  });\n\n  it('calls onPress when the \"Commencer\" button is pressed', () => {\n    const { getByText } = render(<ExerciseCard {...defaultProps} />);\n    fireEvent.press(getByText('Commencer'));\n    expect(defaultProps.onPress).toHaveBeenCalledTimes(1);\n  });\n\n  it('displays the progress bar when progress is greater than 0', () => {\n    const { getByText, getByTestId } = render(\n      <ExerciseCard {...defaultProps} progress={50} />\n    );\n\n    expect(getByText('50%')).toBeTruthy();\n    const progressFill = getByTestId('progress-fill');\n    expect(progressFill.props.style).toContainEqual({ width: '50%' });\n  });\n\n  it('does not display the progress bar when progress is 0', () => {\n    const { queryByText, queryByTestId } = render(\n      <ExerciseCard {...defaultProps} progress={0} />\n    );\n\n    expect(queryByText('50%')).toBeNull();\n    expect(queryByTestId('progress-fill')).toBeNull();\n  });\n\n  it('displays the \"Nouveau\" badge when isNew is true and progress is 0', () => {\n    const { getByText } = render(\n      <ExerciseCard {...defaultProps} isNew={true} progress={0} />\n    );\n\n    expect(getByText('Nouveau')).toBeTruthy();\n  });\n\n  it('does not display the \"Nouveau\" badge when progress is greater than 0', () => {\n    const { queryByText } = render(\n      <ExerciseCard {...defaultProps} isNew={true} progress={50} />\n    );\n\n    expect(queryByText('Nouveau')).toBeNull();\n  });\n\n  it('does not display the \"Nouveau\" badge when isNew is false', () => {\n    const { queryByText } = render(<ExerciseCard {...defaultProps} isNew={false} />);\n\n    expect(queryByText('Nouveau')).toBeNull();\n  });\n});\n"],"mappings":"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","ignoreList":[]}