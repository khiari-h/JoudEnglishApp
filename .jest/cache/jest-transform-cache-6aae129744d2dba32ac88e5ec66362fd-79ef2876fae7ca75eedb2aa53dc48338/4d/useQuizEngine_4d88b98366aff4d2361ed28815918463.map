{"version":3,"names":["_react","require","useQuizEngine","questions","_useState","useState","_useState2","_slicedToArray2","default","currentQuestionIndex","setCurrentQuestionIndex","_useState3","_useState4","score","setScore","_useState5","_useState6","selectedChoice","setSelectedChoice","_useState7","_useState8","showResult","setShowResult","_useState9","_useState0","isFinished","setIsFinished","_useState1","_useState10","userAnswers","setUserAnswers","totalQuestions","useMemo","Array","isArray","length","currentQuestion","progress","handleAnswer","useCallback","choice","isCorrect","correctAnswer","prev","concat","_toConsumableArray2","question","word","goToNextQuestion","nextIndex","handleRestart","_default","exports"],"sources":["useQuizEngine.js"],"sourcesContent":["// src/hooks/useQuizEngine.js\r\nimport { useState, useMemo, useCallback } from 'react';\r\n\r\nconst useQuizEngine = (questions) => {\r\n  // États internes\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [selectedChoice, setSelectedChoice] = useState(null);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n\r\n  // Calcul du nombre total de questions\r\n  const totalQuestions = useMemo(() => {\r\n    return Array.isArray(questions) ? questions.length : 0;\r\n  }, [questions]);\r\n\r\n  // Récupération de la question actuelle\r\n  const currentQuestion = useMemo(() => {\r\n    if (!Array.isArray(questions) || questions.length === 0 || currentQuestionIndex >= totalQuestions) {\r\n      return null;\r\n    }\r\n    return questions[currentQuestionIndex];\r\n  }, [questions, currentQuestionIndex, totalQuestions]);\r\n\r\n  // Calcul de la progression en pourcentage\r\n  const progress = useMemo(() => {\r\n    if (totalQuestions === 0) return 0;\r\n    return (currentQuestionIndex / totalQuestions) * 100;\r\n  }, [currentQuestionIndex, totalQuestions]);\r\n\r\n  // Gestion des réponses\r\n  const handleAnswer = useCallback((choice) => {\r\n    // Bloque les réponses si le résultat est déjà affiché ou s'il n'y a pas de question\r\n    if (showResult || !currentQuestion) {\r\n      return false;\r\n    }\r\n\r\n    const isCorrect = choice === currentQuestion.correctAnswer;\r\n    if (isCorrect) {\r\n      setScore(prev => prev + 1);\r\n    }\r\n\r\n    // Met à jour les états uniquement si la réponse est autorisée\r\n    setSelectedChoice(choice);\r\n    setUserAnswers(prev => [...prev, {\r\n      question: currentQuestion.word,\r\n      choice,\r\n      isCorrect\r\n    }]);\r\n    setShowResult(true);\r\n\r\n    return isCorrect;\r\n  }, [currentQuestion, showResult]);\r\n\r\n  // Passage à la question suivante\r\n  const goToNextQuestion = useCallback(() => {\r\n    const nextIndex = currentQuestionIndex + 1;\r\n    if (nextIndex < totalQuestions) {\r\n      setCurrentQuestionIndex(nextIndex);\r\n      setSelectedChoice(null);\r\n      setShowResult(false);\r\n    } else {\r\n      setIsFinished(true);\r\n    }\r\n  }, [currentQuestionIndex, totalQuestions]);\r\n\r\n  // Redémarrage du quiz\r\n  const handleRestart = useCallback(() => {\r\n    setCurrentQuestionIndex(0);\r\n    setScore(0);\r\n    setSelectedChoice(null);\r\n    setShowResult(false);\r\n    setIsFinished(false);\r\n    setUserAnswers([]);\r\n  }, []);\r\n\r\n  return {\r\n    currentQuestionIndex,\r\n    totalQuestions,\r\n    score,\r\n    progress,\r\n    currentQuestion,\r\n    selectedChoice,\r\n    showResult,\r\n    isFinished,\r\n    userAnswers,\r\n    handleAnswer,\r\n    goToNextQuestion,\r\n    handleRestart,\r\n  };\r\n};\r\n\r\nexport default useQuizEngine;\r\n"],"mappings":"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","ignoreList":[]}