{"version":3,"names":["_getJestObj","mock","_require","require","View","LinearGradient","props","_jsxRuntime","jsx","Object","assign","_require2","Text","Ionicons","testID","name","children","_require3","StyleSheet","Platform","createStyles","primaryColor","create","container","buttonsRow","previousButton","select","ios","shadowColor","android","elevation","previousText","nextButtonContainer","nextButton","nextText","nextIcon","disabled","_interopRequireDefault","_react","_reactNative","_NavigationButtons","_require4","jest","describe","onNextMock","fn","onPreviousMock","beforeAll","useFakeTimers","afterAll","useRealTimers","afterEach","clearAllMocks","it","_render","render","default","onNext","onPrevious","getByText","expect","toBeTruthy","_render2","disablePrevious","queryByText","toBeNull","_render3","fireEvent","press","act","runAllTimers","toHaveBeenCalledTimes","_render4","_render5","disableNext","not","toHaveBeenCalled","_render6","isLast","getByTestId","OS","_render7","parent","style","toHaveProperty","_render8"],"sources":["NavigationButtons.test.js"],"sourcesContent":["// __tests__/components/exercise-common/NavigationButtons.test.js\nimport React from 'react';\nimport { render, fireEvent, act } from '@testing-library/react-native';\nimport NavigationButtons from '../../../src/components/exercise-common/NavigationButtons';\n\n// Mock des dépendances pour un fonctionnement stable\njest.mock('expo-linear-gradient', () => {\n    const { View } = require('react-native');\n    return {\n        LinearGradient: (props) => <View {...props} />,\n    };\n});\n\njest.mock('@expo/vector-icons', () => {\n    const { Text } = require('react-native');\n    return {\n        Ionicons: (props) => <Text testID={`icon-${props.name}`}>{props.name}</Text>,\n    };\n});\n\n// Mock le fichier de style pour simuler correctement les styles de plateforme\njest.mock('../../../src/components/exercise-common/NavigationButtons/style', () => {\n    // Importez Platform à l'intérieur du mock\n    const { StyleSheet, Platform } = require('react-native'); \n    \n    const createStyles = (primaryColor) =>\n        StyleSheet.create({\n            container: {},\n            buttonsRow: {},\n            previousButton: {\n                ...Platform.select({\n                    ios: { shadowColor: 'mock-shadow-ios' },\n                    android: { elevation: 3 },\n                }),\n            },\n            previousText: {},\n            nextButtonContainer: {\n                ...Platform.select({\n                    ios: { shadowColor: 'mock-shadow-ios' },\n                    android: { elevation: 6 },\n                }),\n            },\n            nextButton: {},\n            nextText: {},\n            nextIcon: {},\n            disabled: {},\n        });\n    return createStyles;\n});\n\ndescribe('NavigationButtons', () => {\n    const onNextMock = jest.fn();\n    const onPreviousMock = jest.fn();\n\n    beforeAll(() => {\n        jest.useFakeTimers();\n    });\n\n    afterAll(() => {\n        jest.useRealTimers();\n    });\n\n    afterEach(() => {\n        jest.clearAllMocks();\n    });\n\n    it('renders both previous and next buttons by default', () => {\n        const { getByText } = render(<NavigationButtons onNext={onNextMock} onPrevious={onPreviousMock} />);\n        expect(getByText('Précédent')).toBeTruthy();\n        expect(getByText('Suivant')).toBeTruthy();\n    });\n\n    it('hides the previous button when disablePrevious is true', () => {\n        const { queryByText } = render(<NavigationButtons disablePrevious={true} />);\n        expect(queryByText('Précédent')).toBeNull();\n    });\n\n    it('calls onPrevious when the previous button is pressed', () => {\n        const { getByText } = render(<NavigationButtons onPrevious={onPreviousMock} />);\n        fireEvent.press(getByText('Précédent'));\n        act(() => jest.runAllTimers());\n        expect(onPreviousMock).toHaveBeenCalledTimes(1);\n    });\n\n    it('calls onNext when the next button is pressed', () => {\n        const { getByText } = render(<NavigationButtons onNext={onNextMock} />);\n        fireEvent.press(getByText('Suivant'));\n        act(() => jest.runAllTimers());\n        expect(onNextMock).toHaveBeenCalledTimes(1);\n    });\n\n    it('does not call onNext when the next button is disabled', () => {\n        const { getByText } = render(<NavigationButtons onNext={onNextMock} disableNext={true} />);\n        fireEvent.press(getByText('Suivant'));\n        expect(onNextMock).not.toHaveBeenCalled();\n    });\n\n    it('displays \"Terminer\" and a checkmark icon on the next button when isLast is true', () => {\n        const { getByText, getByTestId } = render(<NavigationButtons isLast={true} />);\n        expect(getByText('Terminer')).toBeTruthy();\n        expect(getByTestId('icon-checkmark')).toBeTruthy();\n    });\n\n    it('applies iOS styles correctly', () => {\n        // Simuler la plateforme comme iOS\n        Platform.OS = 'ios';\n        const { getByText } = render(<NavigationButtons />);\n        const previousButton = getByText('Précédent').parent;\n        const nextButton = getByText('Suivant').parent.parent;\n\n        expect(previousButton.props.style).toHaveProperty('shadowColor');\n        expect(nextButton.props.style).toHaveProperty('shadowColor');\n        expect(previousButton.props.style).not.toHaveProperty('elevation');\n        expect(nextButton.props.style).not.toHaveProperty('elevation');\n    });\n\n    it('applies Android styles correctly', () => {\n        // Simuler la plateforme comme Android\n        Platform.OS = 'android';\n        const { getByText } = render(<NavigationButtons />);\n        const previousButton = getByText('Précédent').parent;\n        const nextButton = getByText('Suivant').parent.parent;\n\n        expect(previousButton.props.style).toHaveProperty('elevation');\n        expect(nextButton.props.style).toHaveProperty('elevation');\n        expect(previousButton.props.style).not.toHaveProperty('shadowColor');\n        expect(nextButton.props.style).not.toHaveProperty('shadowColor');\n    });\n});"],"mappings":"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","ignoreList":[]}