6efbdf534d5ec034af83428f2327803f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ModalBody;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_14uz4r6okh() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\Modal\\ModalBody.js";
  var hash = "695e493bd5f7344967bb6b528696469095c0a681";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\Modal\\ModalBody.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "2": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "3": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 27,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "ModalBody",
        decl: {
          start: {
            line: 7,
            column: 24
          },
          end: {
            line: 7,
            column: 33
          }
        },
        loc: {
          start: {
            line: 7,
            column: 71
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "695e493bd5f7344967bb6b528696469095c0a681"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_14uz4r6okh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14uz4r6okh();
function ModalBody(_ref) {
  var children = _ref.children,
    scrollable = _ref.scrollable,
    bodyStyle = _ref.bodyStyle;
  cov_14uz4r6okh().f[0]++;
  cov_14uz4r6okh().s[0]++;
  if (scrollable) {
    cov_14uz4r6okh().b[0][0]++;
    cov_14uz4r6okh().s[1]++;
    return (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {
      style: [_style.default.scrollableBody, bodyStyle],
      contentContainerStyle: _style.default.scrollableContent,
      showsVerticalScrollIndicator: true,
      children: children
    });
  } else {
    cov_14uz4r6okh().b[0][1]++;
  }
  cov_14uz4r6okh().s[2]++;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: [_style.default.body, bodyStyle],
    children: children
  });
}
cov_14uz4r6okh().s[3]++;
ModalBody.propTypes = {
  children: _propTypes.default.node.isRequired,
  scrollable: _propTypes.default.bool,
  bodyStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array])
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9wcm9wVHlwZXMiLCJfc3R5bGUiLCJfanN4UnVudGltZSIsImNvdl8xNHV6NHI2b2toIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIk1vZGFsQm9keSIsIl9yZWYiLCJjaGlsZHJlbiIsInNjcm9sbGFibGUiLCJib2R5U3R5bGUiLCJqc3giLCJTY3JvbGxWaWV3Iiwic3R5bGUiLCJzdHlsZXMiLCJzY3JvbGxhYmxlQm9keSIsImNvbnRlbnRDb250YWluZXJTdHlsZSIsInNjcm9sbGFibGVDb250ZW50Iiwic2hvd3NWZXJ0aWNhbFNjcm9sbEluZGljYXRvciIsIlZpZXciLCJib2R5IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwibm9kZSIsImlzUmVxdWlyZWQiLCJib29sIiwib25lT2ZUeXBlIiwib2JqZWN0IiwiYXJyYXkiXSwic291cmNlcyI6WyJNb2RhbEJvZHkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NvbXBvbmVudHMvdWkvTW9kYWwvTW9kYWxCb2R5LmpzXHJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgVmlldywgU2Nyb2xsVmlldyB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi9zdHlsZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTW9kYWxCb2R5KHsgY2hpbGRyZW4sIHNjcm9sbGFibGUsIGJvZHlTdHlsZSB9KSB7XHJcbiAgaWYgKHNjcm9sbGFibGUpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxTY3JvbGxWaWV3XHJcbiAgICAgICAgc3R5bGU9e1tzdHlsZXMuc2Nyb2xsYWJsZUJvZHksIGJvZHlTdHlsZV19XHJcbiAgICAgICAgY29udGVudENvbnRhaW5lclN0eWxlPXtzdHlsZXMuc2Nyb2xsYWJsZUNvbnRlbnR9XHJcbiAgICAgICAgc2hvd3NWZXJ0aWNhbFNjcm9sbEluZGljYXRvclxyXG4gICAgICA+XHJcbiAgICAgICAge2NoaWxkcmVufVxyXG4gICAgICA8L1Njcm9sbFZpZXc+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIDxWaWV3IHN0eWxlPXtbc3R5bGVzLmJvZHksIGJvZHlTdHlsZV19PntjaGlsZHJlbn08L1ZpZXc+O1xyXG59XHJcblxyXG5Nb2RhbEJvZHkucHJvcFR5cGVzID0ge1xyXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxyXG4gIHNjcm9sbGFibGU6IFByb3BUeXBlcy5ib29sLFxyXG4gIGJvZHlTdHlsZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmFycmF5XSksXHJcbn07XHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUNBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLFVBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFHLE1BQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUE2QixJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFBQSxTQUFBSyxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLGVBQUE7SUFBQXJCLElBQUE7RUFBQTtFQUFBLElBQUFzQixRQUFBLEdBQUFyQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQW1CLFFBQUEsQ0FBQXZCLElBQUEsS0FBQXVCLFFBQUEsQ0FBQXZCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFzQixRQUFBLENBQUF2QixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFtQixjQUFBLEdBQUFELFFBQUEsQ0FBQXZCLElBQUE7RUFBQTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBeUIsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXpCLGNBQUE7QUFFZCxTQUFTMEIsU0FBU0EsQ0FBQUMsSUFBQSxFQUFzQztFQUFBLElBQW5DQyxRQUFRLEdBQUFELElBQUEsQ0FBUkMsUUFBUTtJQUFFQyxVQUFVLEdBQUFGLElBQUEsQ0FBVkUsVUFBVTtJQUFFQyxTQUFTLEdBQUFILElBQUEsQ0FBVEcsU0FBUztFQUFBOUIsY0FBQSxHQUFBcUIsQ0FBQTtFQUFBckIsY0FBQSxHQUFBb0IsQ0FBQTtFQUNqRSxJQUFJUyxVQUFVLEVBQUU7SUFBQTdCLGNBQUEsR0FBQXNCLENBQUE7SUFBQXRCLGNBQUEsR0FBQW9CLENBQUE7SUFDZCxPQUNFLElBQUFyQixXQUFBLENBQUFnQyxHQUFBLEVBQUNuQyxZQUFBLENBQUFvQyxVQUFVO01BQ1RDLEtBQUssRUFBRSxDQUFDQyxjQUFNLENBQUNDLGNBQWMsRUFBRUwsU0FBUyxDQUFFO01BQzFDTSxxQkFBcUIsRUFBRUYsY0FBTSxDQUFDRyxpQkFBa0I7TUFDaERDLDRCQUE0QjtNQUFBVixRQUFBLEVBRTNCQTtJQUFRLENBQ0MsQ0FBQztFQUVqQixDQUFDO0lBQUE1QixjQUFBLEdBQUFzQixDQUFBO0VBQUE7RUFBQXRCLGNBQUEsR0FBQW9CLENBQUE7RUFFRCxPQUFPLElBQUFyQixXQUFBLENBQUFnQyxHQUFBLEVBQUNuQyxZQUFBLENBQUEyQyxJQUFJO0lBQUNOLEtBQUssRUFBRSxDQUFDQyxjQUFNLENBQUNNLElBQUksRUFBRVYsU0FBUyxDQUFFO0lBQUFGLFFBQUEsRUFBRUE7RUFBUSxDQUFPLENBQUM7QUFDakU7QUFBQzVCLGNBQUEsR0FBQW9CLENBQUE7QUFFRE0sU0FBUyxDQUFDZSxTQUFTLEdBQUc7RUFDcEJiLFFBQVEsRUFBRWMsa0JBQVMsQ0FBQ0MsSUFBSSxDQUFDQyxVQUFVO0VBQ25DZixVQUFVLEVBQUVhLGtCQUFTLENBQUNHLElBQUk7RUFDMUJmLFNBQVMsRUFBRVksa0JBQVMsQ0FBQ0ksU0FBUyxDQUFDLENBQUNKLGtCQUFTLENBQUNLLE1BQU0sRUFBRUwsa0JBQVMsQ0FBQ00sS0FBSyxDQUFDO0FBQ3BFLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=