{"version":3,"names":["_reactNative","require","_useQuizEngine","_interopRequireDefault","describe","mockQuestions","word","choices","correctAnswer","it","_renderHook","renderHook","useQuizEngine","result","expect","current","currentQuestionIndex","toBe","score","selectedChoice","toBeNull","showResult","isFinished","totalQuestions","currentQuestion","toEqual","progress","_renderHook2","_renderHook3","act","isCorrect","handleAnswer","userAnswers","toHaveLength","_renderHook4","_renderHook5","goToNextQuestion","_renderHook6","handleRestart","_renderHook7","_renderHook8"],"sources":["useQuizEngine.test.js"],"sourcesContent":["// __tests__/hooks/useQuizEngine.test.js\nimport { renderHook, act } from '@testing-library/react-native';\nimport useQuizEngine from '../../src/hooks/useQuizEngine';\n\ndescribe('useQuizEngine', () => {\n  const mockQuestions = [\n    {\n      word: 'hello',\n      choices: ['bonjour', 'au revoir', 'merci', 'salut'],\n      correctAnswer: 'bonjour'\n    },\n    {\n      word: 'goodbye',\n      choices: ['au revoir', 'bonjour', 'merci', 'salut'],\n      correctAnswer: 'au revoir'\n    }\n  ];\n\n  it('devrait initialiser correctement', () => {\n    const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n    expect(result.current.currentQuestionIndex).toBe(0);\n    expect(result.current.score).toBe(0);\n    expect(result.current.selectedChoice).toBeNull();\n    expect(result.current.showResult).toBe(false);\n    expect(result.current.isFinished).toBe(false);\n    expect(result.current.totalQuestions).toBe(2);\n    expect(result.current.currentQuestion).toEqual(mockQuestions[0]);\n    expect(result.current.progress).toBe(0);\n  });\n\n  it('devrait gérer les questions vides', () => {\n    const { result } = renderHook(() => useQuizEngine([]));\n\n    expect(result.current.totalQuestions).toBe(0);\n    expect(result.current.currentQuestion).toBeNull();\n    expect(result.current.progress).toBe(0);\n  });\n\n  it('devrait traiter une réponse correcte', () => {\n    const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n    act(() => {\n      const isCorrect = result.current.handleAnswer('bonjour');\n      expect(isCorrect).toBe(true);\n    });\n\n    expect(result.current.score).toBe(1);\n    expect(result.current.selectedChoice).toBe('bonjour');\n    expect(result.current.showResult).toBe(true);\n    expect(result.current.userAnswers).toHaveLength(1);\n  });\n\n  it('devrait traiter une réponse incorrecte', () => {\n    const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n    act(() => {\n      const isCorrect = result.current.handleAnswer('au revoir');\n      expect(isCorrect).toBe(false);\n    });\n\n    expect(result.current.score).toBe(0);\n    expect(result.current.selectedChoice).toBe('au revoir');\n    expect(result.current.showResult).toBe(true);\n  });\n\n  it('devrait passer à la question suivante', () => {\n    const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n    act(() => {\n      result.current.handleAnswer('bonjour');\n      result.current.goToNextQuestion();\n    });\n\n    expect(result.current.currentQuestionIndex).toBe(1);\n    expect(result.current.currentQuestion).toEqual(mockQuestions[1]);\n    expect(result.current.selectedChoice).toBeNull();\n    expect(result.current.showResult).toBe(false);\n  });\n\n  it('devrait redémarrer le quiz', () => {\n    const { result } = renderHook(() => useQuizEngine(mockQuestions));\n\n    act(() => {\n      result.current.handleAnswer('bonjour');\n      result.current.goToNextQuestion();\n      result.current.handleRestart();\n    });\n\n    expect(result.current.currentQuestionIndex).toBe(0);\n    expect(result.current.score).toBe(0);\n    expect(result.current.selectedChoice).toBeNull();\n    expect(result.current.showResult).toBe(false);\n    expect(result.current.isFinished).toBe(false);\n    expect(result.current.userAnswers).toEqual([]);\n  });\n  // ... (tes tests existants)\nit('devrait retourner false si handleAnswer est appelé sans question actuelle (quiz vide)', () => {\n  const { result } = renderHook(() => useQuizEngine([]));\n  const isCorrect = result.current.handleAnswer('bonjour');\n  expect(isCorrect).toBe(false);\n});\n\nit('devrait retourner false si handleAnswer est appelé après la dernière question', () => {\n  const { result } = renderHook(() => useQuizEngine(mockQuestions));\n  act(() => {\n    result.current.handleAnswer('bonjour');\n    result.current.goToNextQuestion();\n    result.current.handleAnswer('au revoir');\n    result.current.goToNextQuestion(); // currentQuestionIndex = 2 (hors limites)\n  });\n  const isCorrect = result.current.handleAnswer('merci');\n  expect(isCorrect).toBe(false);\n});\n\n});"],"mappings":"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","ignoreList":[]}