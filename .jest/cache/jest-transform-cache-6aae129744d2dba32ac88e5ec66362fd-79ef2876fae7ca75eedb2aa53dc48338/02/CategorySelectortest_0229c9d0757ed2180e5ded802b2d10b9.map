{"version":3,"names":["_getJestObj","mock","React","require","scrollToSpy","jest","fn","MockScrollView","forwardRef","props","ref","useImperativeHandle","scrollTo","childrenWithLayouts","Children","map","children","child","index","cloneElement","onLayout","event","nativeEvent","layout","x","y","width","height","_jsxRuntime","jsx","Fragment","_interopRequireDefault","_asyncToGenerator2","_react","_reactNative","_reactNative2","_CategorySelector","_require","useFakeTimers","spyOn","Animated","mockImplementation","start","callback","setTimeout","act","finished","stop","describe","mockCategories","id","name","stableProps","categories","selectedCategory","onSelectCategory","renderCategorySelector","arguments","length","undefined","render","default","Object","assign","beforeEach","clearAllMocks","ScrollView","mockClear","afterEach","useRealTimers","it","expect","toBeTruthy","_renderCategorySelect","getByText","forEach","category","_renderCategorySelect2","getAllByRole","categoryNames","element","accessibilityLabel","toEqual","cat","_renderCategorySelect3","queryByText","toBeNull","_renderCategorySelect4","getByRole","selectedPill","toHaveAccessibilityState","selected","mockOnSelect","_renderCategorySelect5","fireEvent","press","toHaveBeenCalledTimes","toHaveBeenCalledWith","_renderCategorySelect6","not","toHaveBeenCalled","_renderCategorySelect7","categoriesToTest","filter","_renderCategorySelect8","categoryPill","_renderCategorySelect9","_renderCategorySelect0","runAllTimers","waitFor","_renderCategorySelect1","rerender","_renderCategorySelect10","_renderCategorySelect11","_renderCategorySelect12","_renderCategorySelect13","toThrow","specialCategories","_renderCategorySelect14","longNameCategories","_renderCategorySelect15","renderSpy","TestWrapper","_render","manyCategories","Array","from","_","i","startTime","Date","now","_renderCategorySelect16","queryAllByText","endTime","toBeLessThan","categoryElements","toHaveLength","_renderCategorySelect17","getByLabelText","_renderCategorySelect18","buttons"],"sources":["CategorySelector.test.js"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, act, waitFor, getByText } from '@testing-library/react-native';\nimport { Animated, ScrollView } from 'react-native';\nimport '@testing-library/jest-native';\n\nimport CategorySelector from '../../../src/components/exercise-common/CategorySelector';\n\njest.useFakeTimers();\n\n// Mocker Animated.timing pour simuler un délai\njest.spyOn(Animated, 'timing').mockImplementation(() => {\n  return {\n    start: (callback) => {\n      // Simuler l'animation qui se termine après 500ms\n      setTimeout(() => {\n        act(() => {\n          if (callback) {\n            callback({ finished: true });\n          }\n        });\n      }, 500);\n    },\n    stop: jest.fn(),\n  };\n});\n\n// Mocker ScrollView pour gérer la ref et la fonction scrollTo\njest.mock('react-native/Libraries/Components/ScrollView/ScrollView', () => {\n  const React = require('react');\n  const scrollToSpy = jest.fn();\n  const MockScrollView = React.forwardRef((props, ref) => {\n    React.useImperativeHandle(ref, () => ({\n      scrollTo: scrollToSpy,\n    }));\n\n    // Simuler l'événement onLayout de manière synchrone pour que les tests de scrolling fonctionnent.\n    // Cette partie est cruciale pour que le `useEffect` du composant puisse trouver les layouts.\n    const childrenWithLayouts = React.Children.map(props.children, (child, index) => {\n      if (!child) return null;\n      return React.cloneElement(child, {\n        onLayout: (event) => {\n          child.props.onLayout?.({\n            nativeEvent: {\n              layout: {\n                x: index * 100, // Position arbitraire pour le test\n                y: 0,\n                width: 80,\n                height: 40,\n              },\n            },\n          });\n        },\n      });\n    });\n\n    return <React.Fragment>{childrenWithLayouts}</React.Fragment>;\n  });\n\n  MockScrollView.scrollToSpy = scrollToSpy;\n  return MockScrollView;\n});\n\ndescribe('CategorySelector Component', () => {\n  // Déclarer les props une seule fois pour garantir la stabilité des références\n  const mockCategories = [\n    { id: '1', name: 'Fruits' },\n    { id: '2', name: 'Vegetables' },\n    { id: '3', name: 'Dairy Products' },\n    { id: '4', name: 'Meat & Fish' },\n    { id: '5', name: 'Beverages' },\n  ];\n\n  const stableProps = {\n    categories: mockCategories,\n    selectedCategory: '1',\n    onSelectCategory: jest.fn(),\n  };\n\n  const renderCategorySelector = (props = {}) => {\n    return render(<CategorySelector {...stableProps} {...props} />);\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    jest.useFakeTimers();\n    ScrollView.scrollToSpy.mockClear();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  // --- RENDERING ---\n  describe('Rendering', () => {\n    it('should render without crashing', () => {\n      expect(renderCategorySelector()).toBeTruthy();\n    });\n    it('should render all categories correctly', () => {\n      const { getByText } = renderCategorySelector();\n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n    it('should render categories in the correct order', () => {\n      const { getAllByRole } = renderCategorySelector();\n      const categoryNames = getAllByRole('button').map(element => element.props.accessibilityLabel);\n      expect(categoryNames).toEqual(mockCategories.map(cat => cat.name));\n    });\n    it('should handle empty categories array gracefully', () => {\n      const { queryByText } = renderCategorySelector({ categories: [] });\n      mockCategories.forEach(category => {\n        expect(queryByText(category.name)).toBeNull();\n      });\n    });\n    it('should highlight the selected category visually', () => {\n      const { getByRole } = renderCategorySelector({ selectedCategory: '2' });\n      const selectedPill = getByRole('button', { name: 'Vegetables' });\n      expect(selectedPill).toHaveAccessibilityState({ selected: true });\n    });\n  });\n\n  // --- USER INTERACTIONS ---\n  describe('User Interactions', () => {\n    it('should call onSelectCategory when a different category is pressed', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({\n        selectedCategory: '1',\n        onSelectCategory: mockOnSelect\n      });\n      fireEvent.press(getByText('Vegetables'));\n      expect(mockOnSelect).toHaveBeenCalledTimes(1);\n      expect(mockOnSelect).toHaveBeenCalledWith('2');\n    });\n    it('should not call onSelectCategory when the same category is pressed', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({\n        selectedCategory: '1',\n        onSelectCategory: mockOnSelect\n      });\n      fireEvent.press(getByText('Fruits'));\n      expect(mockOnSelect).not.toHaveBeenCalled();\n    });\n    it('should call onSelectCategory with correct category id for each category', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({\n        selectedCategory: '1',\n        onSelectCategory: mockOnSelect\n      });\n      const categoriesToTest = mockCategories.filter(cat => cat.id !== '1');\n      categoriesToTest.forEach(category => {\n        fireEvent.press(getByText(category.name));\n        expect(mockOnSelect).toHaveBeenCalledWith(category.id);\n      });\n      expect(mockOnSelect).toHaveBeenCalledTimes(categoriesToTest.length);\n    });\n  });\n\n  // --- ANIMATIONS ---\n  describe('Animations', () => {\n    it('should trigger press animations correctly', () => {\n      const { getByText } = renderCategorySelector();\n      const categoryPill = getByText('Vegetables');\n      act(() => {\n        fireEvent(categoryPill, 'pressIn');\n        fireEvent(categoryPill, 'pressOut');\n      });\n      expect(categoryPill).toBeTruthy();\n    });\n    it('should handle rapid press interactions without crashing', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({ onSelectCategory: mockOnSelect });\n      const categoryPill = getByText('Vegetables');\n      act(() => {\n        fireEvent(categoryPill, 'pressIn');\n        fireEvent(categoryPill, 'pressOut');\n        fireEvent.press(categoryPill);\n        fireEvent(categoryPill, 'pressIn');\n        fireEvent(categoryPill, 'pressOut');\n      });\n      expect(mockOnSelect).toHaveBeenCalledWith('2');\n      expect(categoryPill).toBeTruthy();\n    });\nit('should not trigger new animation if one is already in progress', () => {\n  const mockOnSelect = jest.fn();\n  const { getByText } = renderCategorySelector({ onSelectCategory: mockOnSelect });\n  fireEvent.press(getByText('Vegetables'));\n  \n  // Simule l'écoulement du temps et l'exécution de la logique asynchrone du composant\n  act(() => {\n    jest.runAllTimers();\n  });\n  \n  fireEvent.press(getByText('Dairy Products'));\n  \n  expect(mockOnSelect).toHaveBeenCalledTimes(2);\n});\n  });\n\n  // --- SCROLLING BEHAVIOR ---\n  describe('Scrolling Behavior', () => {\n    it('should scroll to selected category on mount', async () => {\n      renderCategorySelector({ selectedCategory: '4' });\n      \n      // Permettre aux onLayouts de se déclencher et aux effets de s'exécuter\n      act(() => {\n        jest.runAllTimers();\n      });\n      \n      await waitFor(() => {\n        expect(ScrollView.scrollToSpy).toHaveBeenCalled();\n      });\n    });\n    it('should handle scrolling when selectedCategory changes', async () => {\n      const { rerender } = renderCategorySelector({ selectedCategory: '1' });\n      \n      rerender(\n        <CategorySelector \n          {...stableProps} \n          selectedCategory=\"5\" \n        />\n      );\n      \n      act(() => {\n        jest.runAllTimers();\n      });\n      \n      await waitFor(() => {\n        expect(ScrollView.scrollToSpy).toHaveBeenCalledTimes(1);\n      });\n    });\n  });\n\n  // --- EDGE CASES ---\n  describe('Edge Cases', () => {\n    it('should handle undefined selectedCategory gracefully', () => {\n      const { getByText } = renderCategorySelector({ selectedCategory: undefined });\n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n    it('should handle null selectedCategory gracefully', () => {\n      const { getByText } = renderCategorySelector({ selectedCategory: null });\n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n    it('should handle non-existent selectedCategory id', () => {\n      const { getByText } = renderCategorySelector({ selectedCategory: 'non-existent' });\n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n    it('should handle missing onSelectCategory prop gracefully', () => {\n      const { getByText } = renderCategorySelector({ onSelectCategory: undefined });\n      expect(() => {\n        fireEvent.press(getByText('Vegetables'));\n      }).not.toThrow();\n    });\n    it('should handle categories with special characters in names', () => {\n      const specialCategories = [\n        { id: '1', name: 'Café & Thé' },\n        { id: '2', name: 'Fruits & Légumes' },\n        { id: '3', name: 'Viande/Poisson' },\n      ];\n      const { getByText } = renderCategorySelector({ categories: specialCategories });\n      specialCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n    it('should handle very long category names', () => {\n      const longNameCategories = [\n        { id: '1', name: 'This is a very long category name that might cause layout issues' },\n        { id: '2', name: 'Short' },\n      ];\n      const { getByText } = renderCategorySelector({ categories: longNameCategories });\n      longNameCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n  });\n\n  // --- PERFORMANCE ---\n  describe('Performance', () => {\n    it('should not re-render unnecessarily when props do not change', () => {\n      const renderSpy = jest.fn();\n      const TestWrapper = (props) => {\n        renderSpy();\n        return <CategorySelector {...props} />;\n      };\n      \n      const { rerender } = render(<TestWrapper {...stableProps} />);\n      \n      expect(renderSpy).toHaveBeenCalledTimes(1);\n      renderSpy.mockClear();\n      \n      rerender(<TestWrapper {...stableProps} />);\n      \n      expect(renderSpy).toHaveBeenCalledTimes(0);\n    });\n    it('should handle large number of categories efficiently', () => {\n      const manyCategories = Array.from({ length: 100 }, (_, i) => ({\n        id: `${i + 1}`,\n        name: `Category ${i + 1}`,\n      }));\n      const startTime = Date.now();\n      const { queryAllByText } = renderCategorySelector({ categories: manyCategories });\n      const endTime = Date.now();\n      expect(endTime - startTime).toBeLessThan(1000);\n      const categoryElements = queryAllByText(/^Category/);\n      expect(categoryElements).toHaveLength(100);\n    });\n  });\n\n  // --- ACCESSIBILITY ---\n  describe('Accessibility', () => {\n    it('should have proper accessibility labels', () => {\n      const { getByLabelText } = renderCategorySelector();\n      mockCategories.forEach(category => {\n        const element = getByLabelText(category.name);\n        expect(element).toBeTruthy();\n      });\n    });\n    it('should support screen reader navigation', () => {\n      const { getAllByRole } = renderCategorySelector();\n      const buttons = getAllByRole('button');\n      expect(buttons).toHaveLength(mockCategories.length);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}