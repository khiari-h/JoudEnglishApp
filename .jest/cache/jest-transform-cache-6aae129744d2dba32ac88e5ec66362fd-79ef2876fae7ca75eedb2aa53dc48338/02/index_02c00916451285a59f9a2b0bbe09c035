df4b158a4b3de6ca857334518617352b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _ContentSection = _interopRequireDefault(require("../../../../components/ui/ContentSection"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var SpellingFeedback = function SpellingFeedback(_ref) {
  var isCorrect = _ref.isCorrect,
    correctAnswer = _ref.correctAnswer,
    explanation = _ref.explanation,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? "#3b82f6" : _ref$levelColor;
  var styles = (0, _style.default)(levelColor);
  var feedbackColor = isCorrect ? "#10b981" : "#ef4444";
  var backgroundColor = isCorrect ? "#f0fdf4" : "#fef2f2";
  var resultTitle = isCorrect ? "Correct !" : "Incorrect !";
  var feedbackContent = "";
  if (!isCorrect && correctAnswer) {
    feedbackContent = `La bonne réponse est : "${correctAnswer}"`;
    if (explanation) {
      feedbackContent += `\n\n${explanation}`;
    }
  } else if (explanation) {
    feedbackContent = explanation;
  }
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: styles.container,
    children: (0, _jsxRuntime.jsx)(_ContentSection.default, {
      title: resultTitle,
      content: feedbackContent || (isCorrect ? "Bien joué !" : "Réessayez !"),
      levelColor: feedbackColor,
      backgroundColor: backgroundColor,
      style: styles.feedbackSection,
      isHighlighted: true
    })
  });
};
var _default = exports.default = SpellingFeedback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX0NvbnRlbnRTZWN0aW9uIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9zdHlsZSIsIl9qc3hSdW50aW1lIiwiU3BlbGxpbmdGZWVkYmFjayIsIl9yZWYiLCJpc0NvcnJlY3QiLCJjb3JyZWN0QW5zd2VyIiwiZXhwbGFuYXRpb24iLCJfcmVmJGxldmVsQ29sb3IiLCJsZXZlbENvbG9yIiwic3R5bGVzIiwiY3JlYXRlU3R5bGVzIiwiZmVlZGJhY2tDb2xvciIsImJhY2tncm91bmRDb2xvciIsInJlc3VsdFRpdGxlIiwiZmVlZGJhY2tDb250ZW50IiwianN4IiwiVmlldyIsInN0eWxlIiwiY29udGFpbmVyIiwiY2hpbGRyZW4iLCJkZWZhdWx0IiwidGl0bGUiLCJjb250ZW50IiwiZmVlZGJhY2tTZWN0aW9uIiwiaXNIaWdobGlnaHRlZCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNwZWxsaW5nRmVlZGJhY2svaW5kZXguanMgLSBWRVJTSU9OIFJFRkFDVE9SSVPDiUUgKENvbnRlbnRTZWN0aW9uIGF2ZWMgY291bGV1cnMpXHJcblxyXG5pbXBvcnQgeyBWaWV3IH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xyXG5pbXBvcnQgQ29udGVudFNlY3Rpb24gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvdWkvQ29udGVudFNlY3Rpb25cIjtcclxuaW1wb3J0IGNyZWF0ZVN0eWxlcyBmcm9tIFwiLi9zdHlsZVwiO1xyXG5cclxuLyoqXHJcbiAqIPCfkqwgU3BlbGxpbmdGZWVkYmFjayAtIFZlcnNpb24gUmVmYWN0b3Jpc8OpZSBhdmVjIENvbnRlbnRTZWN0aW9uXHJcbiAqIFJlbXBsYWNlIGxlIGZlZWRiYWNrIGN1c3RvbSBwYXIgQ29udGVudFNlY3Rpb24gYXZlYyBjb3VsZXVycyBkeW5hbWlxdWVzXHJcbiAqIFxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzQ29ycmVjdCAtIEluZGlxdWUgc2kgbGEgcsOpcG9uc2UgZXN0IGNvcnJlY3RlXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb3JyZWN0QW5zd2VyIC0gTGEgcsOpcG9uc2UgY29ycmVjdGVcclxuICogQHBhcmFtIHtzdHJpbmd9IGV4cGxhbmF0aW9uIC0gRXhwbGljYXRpb24gc3VwcGzDqW1lbnRhaXJlXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbENvbG9yIC0gQ291bGV1ciBhc3NvY2nDqWUgYXUgbml2ZWF1XHJcbiAqL1xyXG5jb25zdCBTcGVsbGluZ0ZlZWRiYWNrID0gKHsgXHJcbiAgaXNDb3JyZWN0LCBcclxuICBjb3JyZWN0QW5zd2VyLCBcclxuICBleHBsYW5hdGlvbixcclxuICBsZXZlbENvbG9yID0gXCIjM2I4MmY2XCIgXHJcbn0pID0+IHtcclxuICBjb25zdCBzdHlsZXMgPSBjcmVhdGVTdHlsZXMobGV2ZWxDb2xvcik7XHJcblxyXG4gIGNvbnN0IGZlZWRiYWNrQ29sb3IgPSBpc0NvcnJlY3QgPyBcIiMxMGI5ODFcIiA6IFwiI2VmNDQ0NFwiO1xyXG4gIGNvbnN0IGJhY2tncm91bmRDb2xvciA9IGlzQ29ycmVjdCA/IFwiI2YwZmRmNFwiIDogXCIjZmVmMmYyXCI7XHJcbiAgY29uc3QgcmVzdWx0VGl0bGUgPSBpc0NvcnJlY3QgPyBcIkNvcnJlY3QgIVwiIDogXCJJbmNvcnJlY3QgIVwiO1xyXG5cclxuICAvLyBDb25zdHJ1aXJlIGxlIGNvbnRlbnUgZHUgZmVlZGJhY2tcclxuICBsZXQgZmVlZGJhY2tDb250ZW50ID0gXCJcIjtcclxuICBcclxuICBpZiAoIWlzQ29ycmVjdCAmJiBjb3JyZWN0QW5zd2VyKSB7XHJcbiAgICBmZWVkYmFja0NvbnRlbnQgPSBgTGEgYm9ubmUgcsOpcG9uc2UgZXN0IDogXCIke2NvcnJlY3RBbnN3ZXJ9XCJgO1xyXG4gICAgaWYgKGV4cGxhbmF0aW9uKSB7XHJcbiAgICAgIGZlZWRiYWNrQ29udGVudCArPSBgXFxuXFxuJHtleHBsYW5hdGlvbn1gO1xyXG4gICAgfVxyXG4gIH0gZWxzZSBpZiAoZXhwbGFuYXRpb24pIHtcclxuICAgIGZlZWRiYWNrQ29udGVudCA9IGV4cGxhbmF0aW9uO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cclxuICAgICAgPENvbnRlbnRTZWN0aW9uXHJcbiAgICAgICAgdGl0bGU9e3Jlc3VsdFRpdGxlfVxyXG4gICAgICAgIGNvbnRlbnQ9e2ZlZWRiYWNrQ29udGVudCB8fCAoaXNDb3JyZWN0ID8gXCJCaWVuIGpvdcOpICFcIiA6IFwiUsOpZXNzYXlleiAhXCIpfVxyXG4gICAgICAgIGxldmVsQ29sb3I9e2ZlZWRiYWNrQ29sb3J9XHJcbiAgICAgICAgYmFja2dyb3VuZENvbG9yPXtiYWNrZ3JvdW5kQ29sb3J9XHJcbiAgICAgICAgc3R5bGU9e3N0eWxlcy5mZWVkYmFja1NlY3Rpb259XHJcbiAgICAgICAgaXNIaWdobGlnaHRlZFxyXG4gICAgICAvPlxyXG4gICAgPC9WaWV3PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTcGVsbGluZ0ZlZWRiYWNrOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxlQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxNQUFBLEdBQUFELHNCQUFBLENBQUFGLE9BQUE7QUFBbUMsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBV25DLElBQU1LLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBZ0JBLENBQUFDLElBQUEsRUFLaEI7RUFBQSxJQUpKQyxTQUFTLEdBQUFELElBQUEsQ0FBVEMsU0FBUztJQUNUQyxhQUFhLEdBQUFGLElBQUEsQ0FBYkUsYUFBYTtJQUNiQyxXQUFXLEdBQUFILElBQUEsQ0FBWEcsV0FBVztJQUFBQyxlQUFBLEdBQUFKLElBQUEsQ0FDWEssVUFBVTtJQUFWQSxVQUFVLEdBQUFELGVBQUEsY0FBRyxTQUFTLEdBQUFBLGVBQUE7RUFFdEIsSUFBTUUsTUFBTSxHQUFHLElBQUFDLGNBQVksRUFBQ0YsVUFBVSxDQUFDO0VBRXZDLElBQU1HLGFBQWEsR0FBR1AsU0FBUyxHQUFHLFNBQVMsR0FBRyxTQUFTO0VBQ3ZELElBQU1RLGVBQWUsR0FBR1IsU0FBUyxHQUFHLFNBQVMsR0FBRyxTQUFTO0VBQ3pELElBQU1TLFdBQVcsR0FBR1QsU0FBUyxHQUFHLFdBQVcsR0FBRyxhQUFhO0VBRzNELElBQUlVLGVBQWUsR0FBRyxFQUFFO0VBRXhCLElBQUksQ0FBQ1YsU0FBUyxJQUFJQyxhQUFhLEVBQUU7SUFDL0JTLGVBQWUsR0FBRywyQkFBMkJULGFBQWEsR0FBRztJQUM3RCxJQUFJQyxXQUFXLEVBQUU7TUFDZlEsZUFBZSxJQUFJLE9BQU9SLFdBQVcsRUFBRTtJQUN6QztFQUNGLENBQUMsTUFBTSxJQUFJQSxXQUFXLEVBQUU7SUFDdEJRLGVBQWUsR0FBR1IsV0FBVztFQUMvQjtFQUVBLE9BQ0UsSUFBQUwsV0FBQSxDQUFBYyxHQUFBLEVBQUNuQixZQUFBLENBQUFvQixJQUFJO0lBQUNDLEtBQUssRUFBRVIsTUFBTSxDQUFDUyxTQUFVO0lBQUFDLFFBQUEsRUFDNUIsSUFBQWxCLFdBQUEsQ0FBQWMsR0FBQSxFQUFDakIsZUFBQSxDQUFBc0IsT0FBYztNQUNiQyxLQUFLLEVBQUVSLFdBQVk7TUFDbkJTLE9BQU8sRUFBRVIsZUFBZSxLQUFLVixTQUFTLEdBQUcsYUFBYSxHQUFHLGFBQWEsQ0FBRTtNQUN4RUksVUFBVSxFQUFFRyxhQUFjO01BQzFCQyxlQUFlLEVBQUVBLGVBQWdCO01BQ2pDSyxLQUFLLEVBQUVSLE1BQU0sQ0FBQ2MsZUFBZ0I7TUFDOUJDLGFBQWE7SUFBQSxDQUNkO0VBQUMsQ0FDRSxDQUFDO0FBRVgsQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxDQUFBTixPQUFBLEdBRWFsQixnQkFBZ0IiLCJpZ25vcmVMaXN0IjpbXX0=