{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_CategorySelector","_jsxRuntime","describe","mockCategories","id","name","defaultProps","categories","selectedCategory","onSelectCategory","jest","fn","renderCategorySelector","props","arguments","length","undefined","render","jsx","default","Object","assign","beforeEach","clearAllMocks","it","_renderCategorySelect","getByTestId","expect","toBeTruthy","_renderCategorySelect2","getByText","forEach","category","_renderCategorySelect3","getAllByTestId","categoryElements","toHaveLength","element","index","toHaveTextContent","_renderCategorySelect4","queryByTestId","selector","toBeNull","_renderCategorySelect5","selectedPill","mockOnSelect","_renderCategorySelect6","fireEvent","press","toHaveBeenCalledTimes","toHaveBeenCalledWith","_renderCategorySelect7","not","toHaveBeenCalled","_renderCategorySelect8","categoriesToTest","filter","cat","_asyncToGenerator2","_renderCategorySelect9","categoryPill","act","_renderCategorySelect0","mockScrollTo","originalRef","React","useRef","spyOn","mockReturnValue","current","scrollTo","waitFor","toBe","mockRestore","_renderCategorySelect1","rerender","_renderCategorySelect10","_renderCategorySelect11","_renderCategorySelect12","_renderCategorySelect13","toThrow","specialCategories","_renderCategorySelect14","longNameCategories","_renderCategorySelect15","renderSpy","TestWrapper","_render","manyCategories","Array","from","_","i","startTime","Date","now","_renderCategorySelect16","endTime","toBeLessThan","_renderCategorySelect17","getByLabelText","_renderCategorySelect18","getAllByRole","buttons"],"sources":["CategorySelector.test.js"],"sourcesContent":["// __tests__/CategorySelector.test.js\nimport React from 'react';\nimport { render, fireEvent, act, waitFor } from '@testing-library/react-native';\nimport { Animated } from 'react-native';\nimport CategorySelector from '../../src/components/exercise-common/CategorySelector';\n\ndescribe('CategorySelector Component', () => {\n  // Mock data\n  const mockCategories = [\n    { id: '1', name: 'Fruits' },\n    { id: '2', name: 'Vegetables' },\n    { id: '3', name: 'Dairy Products' },\n    { id: '4', name: 'Meat & Fish' },\n    { id: '5', name: 'Beverages' },\n  ];\n\n  const defaultProps = {\n    categories: mockCategories,\n    selectedCategory: '1',\n    onSelectCategory: jest.fn(),\n  };\n\n  // Helper function pour créer le composant avec props\n  const renderCategorySelector = (props = {}) => {\n    return render(<CategorySelector {...defaultProps} {...props} />);\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Rendering', () => {\n    it('should render without crashing', () => {\n      const { getByTestId } = renderCategorySelector();\n      expect(getByTestId('category-selector')).toBeTruthy();\n    });\n\n    it('should render all categories correctly', () => {\n      const { getByText } = renderCategorySelector();\n      \n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n\n    it('should render categories in the correct order', () => {\n      const { getAllByTestId } = renderCategorySelector();\n      const categoryElements = getAllByTestId(/^category-pill-/);\n      \n      expect(categoryElements).toHaveLength(mockCategories.length);\n      \n      // Vérifier l'ordre\n      categoryElements.forEach((element, index) => {\n        expect(element).toHaveTextContent(mockCategories[index].name);\n      });\n    });\n\n    it('should handle empty categories array gracefully', () => {\n      const { queryByTestId } = renderCategorySelector({ categories: [] });\n      const selector = queryByTestId('category-selector');\n      \n      expect(selector).toBeTruthy();\n      // Vérifier qu'aucune catégorie n'est rendue\n      expect(queryByTestId(/^category-pill-/)).toBeNull();\n    });\n\n    it('should highlight the selected category visually', () => {\n      const { getByTestId } = renderCategorySelector({ selectedCategory: '2' });\n      const selectedPill = getByTestId('category-pill-2');\n      \n      // Vérifier que le style \"selected\" est appliqué\n      // Note: Ceci dépend de votre implémentation, adaptez selon vos styles\n      expect(selectedPill).toBeTruthy();\n    });\n  });\n\n  describe('User Interactions', () => {\n    it('should call onSelectCategory when a different category is pressed', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({ \n        selectedCategory: '1', \n        onSelectCategory: mockOnSelect \n      });\n\n      fireEvent.press(getByText('Vegetables'));\n      \n      expect(mockOnSelect).toHaveBeenCalledTimes(1);\n      expect(mockOnSelect).toHaveBeenCalledWith('2');\n    });\n\n    it('should not call onSelectCategory when the same category is pressed', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({ \n        selectedCategory: '1', \n        onSelectCategory: mockOnSelect \n      });\n\n      fireEvent.press(getByText('Fruits'));\n      \n      expect(mockOnSelect).not.toHaveBeenCalled();\n    });\n\n    it('should call onSelectCategory with correct category id for each category', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({ \n        selectedCategory: '1', \n        onSelectCategory: mockOnSelect \n      });\n\n      // Tester chaque catégorie (sauf la sélectionnée)\n      const categoriesToTest = mockCategories.filter(cat => cat.id !== '1');\n      \n      categoriesToTest.forEach(category => {\n        fireEvent.press(getByText(category.name));\n        expect(mockOnSelect).toHaveBeenCalledWith(category.id);\n      });\n\n      expect(mockOnSelect).toHaveBeenCalledTimes(categoriesToTest.length);\n    });\n  });\n\n  describe('Animations', () => {\n    it('should trigger press animations correctly', async () => {\n      const { getByText } = renderCategorySelector();\n      const categoryPill = getByText('Vegetables');\n\n      // Test pressIn animation\n      act(() => {\n        fireEvent(categoryPill, 'pressIn');\n      });\n\n      // Test pressOut animation\n      act(() => {\n        fireEvent(categoryPill, 'pressOut');\n      });\n\n      // Pas de crash = animation fonctionne\n      expect(categoryPill).toBeTruthy();\n    });\n\n    it('should handle rapid press interactions without crashing', async () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({ onSelectCategory: mockOnSelect });\n      const categoryPill = getByText('Vegetables');\n\n      // Simuler des pressions rapides\n      act(() => {\n        fireEvent(categoryPill, 'pressIn');\n        fireEvent(categoryPill, 'pressOut');\n        fireEvent.press(categoryPill);\n        fireEvent(categoryPill, 'pressIn');\n        fireEvent(categoryPill, 'pressOut');\n      });\n\n      expect(mockOnSelect).toHaveBeenCalledWith('2');\n      expect(categoryPill).toBeTruthy();\n    });\n  });\n\n  describe('Scrolling Behavior', () => {\n    it('should scroll to selected category on mount', async () => {\n      // Mock ScrollView ref et scrollTo\n      const mockScrollTo = jest.fn();\n      const originalRef = React.useRef;\n      \n      jest.spyOn(React, 'useRef').mockReturnValue({\n        current: {\n          scrollTo: mockScrollTo,\n        }\n      });\n\n      renderCategorySelector({ selectedCategory: '4' });\n\n      // Attendre que l'effet s'exécute\n      await waitFor(() => {\n        // Vérifier que scrollTo a été appelé\n        // Note: Ceci dépend de votre implémentation\n        expect(true).toBe(true); // Placeholder\n      });\n\n      React.useRef.mockRestore?.();\n    });\n\n    it('should handle scrolling when selectedCategory changes', async () => {\n      const { rerender } = renderCategorySelector({ selectedCategory: '1' });\n      \n      // Changer la catégorie sélectionnée\n      rerender(\n        <CategorySelector \n          {...defaultProps} \n          selectedCategory=\"5\" \n        />\n      );\n\n      // Vérifier que le composant se re-rend correctement\n      await waitFor(() => {\n        expect(true).toBe(true); // Le composant ne crash pas\n      });\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('should handle undefined selectedCategory gracefully', () => {\n      const { getByText } = renderCategorySelector({ selectedCategory: undefined });\n      \n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n\n    it('should handle null selectedCategory gracefully', () => {\n      const { getByText } = renderCategorySelector({ selectedCategory: null });\n      \n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n\n    it('should handle non-existent selectedCategory id', () => {\n      const { getByText } = renderCategorySelector({ selectedCategory: 'non-existent' });\n      \n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n\n    it('should handle missing onSelectCategory prop gracefully', () => {\n      const { getByText } = renderCategorySelector({ onSelectCategory: undefined });\n      \n      // Vérifier que presser une catégorie ne cause pas de crash\n      expect(() => {\n        fireEvent.press(getByText('Vegetables'));\n      }).not.toThrow();\n    });\n\n    it('should handle categories with special characters in names', () => {\n      const specialCategories = [\n        { id: '1', name: 'Café & Thé' },\n        { id: '2', name: 'Fruits & Légumes' },\n        { id: '3', name: 'Viande/Poisson' },\n      ];\n      \n      const { getByText } = renderCategorySelector({ categories: specialCategories });\n      \n      specialCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n\n    it('should handle very long category names', () => {\n      const longNameCategories = [\n        { id: '1', name: 'This is a very long category name that might cause layout issues' },\n        { id: '2', name: 'Short' },\n      ];\n      \n      const { getByText } = renderCategorySelector({ categories: longNameCategories });\n      \n      longNameCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n  });\n\n  describe('Performance', () => {\n    it('should not re-render unnecessarily when props do not change', () => {\n      const renderSpy = jest.fn();\n      \n      // Mock du composant pour compter les rendus\n      const TestWrapper = (props) => {\n        renderSpy();\n        return <CategorySelector {...props} />;\n      };\n\n      const { rerender } = render(<TestWrapper {...defaultProps} />);\n      \n      // Re-render avec les mêmes props\n      rerender(<TestWrapper {...defaultProps} />);\n      \n      // Note: Ceci dépend de si votre composant utilise React.memo ou pas\n      expect(renderSpy).toHaveBeenCalled();\n    });\n\n    it('should handle large number of categories efficiently', () => {\n      const manyCategories = Array.from({ length: 100 }, (_, i) => ({\n        id: `${i + 1}`,\n        name: `Category ${i + 1}`,\n      }));\n\n      const startTime = Date.now();\n      const { getAllByTestId } = renderCategorySelector({ categories: manyCategories });\n      const endTime = Date.now();\n\n      // Vérifier que le rendu est rapide (moins d'1 seconde)\n      expect(endTime - startTime).toBeLessThan(1000);\n      \n      // Vérifier que toutes les catégories sont rendues\n      const categoryElements = getAllByTestId(/^category-pill-/);\n      expect(categoryElements).toHaveLength(100);\n    });\n  });\n\n  describe('Accessibility', () => {\n    it('should have proper accessibility labels', () => {\n      const { getByLabelText } = renderCategorySelector();\n      \n      // Vérifier que les labels d'accessibilité sont présents\n      // Note: Adaptez selon votre implémentation d'accessibilité\n      mockCategories.forEach(category => {\n        const element = getByLabelText(`Category ${category.name}`);\n        expect(element).toBeTruthy();\n      });\n    });\n\n    it('should support screen reader navigation', () => {\n      const { getAllByRole } = renderCategorySelector();\n      \n      // Vérifier que les éléments ont le bon rôle\n      const buttons = getAllByRole('button');\n      expect(buttons).toHaveLength(mockCategories.length);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}