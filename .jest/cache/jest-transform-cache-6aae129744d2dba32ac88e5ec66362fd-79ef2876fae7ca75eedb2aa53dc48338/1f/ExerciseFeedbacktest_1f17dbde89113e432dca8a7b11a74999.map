{"version":3,"names":["_getJestObj","mock","_require","require","Text","Ionicons","props","_jsxRuntime","jsx","testID","name","children","RN","jest","requireActual","Object","assign","Animated","timing","mockTiming","_interopRequireDefault","_react","_reactNative","_ExerciseFeedback","_require2","fn","start","callback","finished","describe","onDismissMock","beforeAll","useFakeTimers","afterAll","useRealTimers","afterEach","mockClear","clearAllMocks","it","_render","render","default","message","getByText","expect","toBeTruthy","_render2","explanation","_render3","queryByText","toBeNull","_render4","type","getByTestId","_render5","_render6","rerender","_render7","onDismiss","showDismissButton","fireEvent","press","toHaveBeenCalledTimes","_render8","queryByTestId","autoHide","autoHideDuration","act","runAllTimers"],"sources":["ExerciseFeedback.test.js"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, act } from '@testing-library/react-native';\nimport ExerciseFeedback from '../../../src/components/exercise-common/ExerciseFeedback';\n\n// Mock des icônes pour l'environnement de test\njest.mock('@expo/vector-icons', () => {\n  const { Text } = require('react-native');\n  return {\n    Ionicons: (props) => <Text testID={`icon-${props.name}`}>{props.name}</Text>,\n  };\n});\n\n// Mock de Animated.timing pour simuler les animations\nconst mockTiming = jest.fn(() => ({\n  start: (callback) => {\n    // Dans les tests, on simule la fin de l'animation pour déclencher le callback\n    if (callback) {\n      callback({ finished: true });\n    }\n  },\n}));\n\n// On remplace la vraie implémentation par notre mock\njest.mock('react-native', () => {\n  const RN = jest.requireActual('react-native');\n  return {\n    ...RN,\n    Animated: {\n      ...RN.Animated,\n      timing: mockTiming,\n    },\n  };\n});\n\ndescribe('ExerciseFeedback', () => {\n  const onDismissMock = jest.fn();\n\n  // Utilisation des fake timers pour contrôler setTimeout\n  beforeAll(() => {\n    jest.useFakeTimers();\n  });\n\n  afterAll(() => {\n    jest.useRealTimers();\n  });\n\n  afterEach(() => {\n    onDismissMock.mockClear();\n    jest.clearAllMocks();\n  });\n\n  // --- Rendu et Contenu ---\n  describe('Rendering and Content', () => {\n    it('renders the message correctly', () => {\n      const { getByText } = render(<ExerciseFeedback message=\"Correct!\" />);\n      expect(getByText('Correct!')).toBeTruthy();\n    });\n\n    it('renders the explanation when provided', () => {\n      const { getByText } = render(\n        <ExerciseFeedback message=\"Incorrect\" explanation=\"The answer was X.\" />\n      );\n      expect(getByText('The answer was X.')).toBeTruthy();\n    });\n\n    it('does not render the explanation when not provided', () => {\n      const { queryByText } = render(<ExerciseFeedback message=\"Correct!\" />);\n      expect(queryByText('The answer was X.')).toBeNull();\n    });\n  });\n\n  // --- Comportement des icônes et du bouton ---\n  describe('Icons and Button Behavior', () => {\n    it('shows a success icon for type \"success\"', () => {\n      const { getByTestId } = render(<ExerciseFeedback message=\"Success\" type=\"success\" />);\n      expect(getByTestId('icon-checkmark-circle')).toBeTruthy();\n    });\n\n    it('shows an error icon for type \"error\"', () => {\n      const { getByTestId } = render(<ExerciseFeedback message=\"Error\" type=\"error\" />);\n      expect(getByTestId('icon-close-circle')).toBeTruthy();\n    });\n\n    it('shows an info icon for type \"info\" and for unknown type', () => {\n      const { getByTestId, rerender } = render(<ExerciseFeedback message=\"Info\" type=\"info\" />);\n      expect(getByTestId('icon-information-circle')).toBeTruthy();\n\n      rerender(<ExerciseFeedback message=\"Test\" type=\"unknown\" />);\n      expect(getByTestId('icon-information-circle')).toBeTruthy();\n    });\n\n    it('calls onDismiss when the dismiss button is pressed', () => {\n      const { getByTestId } = render(\n        <ExerciseFeedback message=\"Test\" onDismiss={onDismissMock} showDismissButton={true} />\n      );\n      \n      fireEvent.press(getByTestId('icon-close'));\n      \n      // NOTE : Dans l'environnement de test (NODE_ENV='test'),\n      // la logique d'animation est ignorée pour simplifier le test.\n      // Le onDismiss est appelé directement, donc on le teste.\n      expect(onDismissMock).toHaveBeenCalledTimes(1);\n    });\n\n    it('does not show the dismiss button if showDismissButton is false', () => {\n      const { queryByTestId } = render(\n        <ExerciseFeedback message=\"Test\" showDismissButton={false} />\n      );\n      expect(queryByTestId('icon-close')).toBeNull();\n    });\n  });\n\n  // --- Comportement de masquage ---\n  describe('Dismissal Behavior', () => {\n    it('calls onDismiss automatically when autoHide is true', () => {\n      render(\n        <ExerciseFeedback\n          message=\"Hiding soon...\"\n          onDismiss={onDismissMock}\n          autoHide={true}\n          autoHideDuration={5000}\n        />\n      );\n\n      // Fait avancer le temps de l'horloge simulée\n      act(() => {\n        jest.runAllTimers();\n      });\n\n      // Le callback devrait avoir été appelé\n      expect(onDismissMock).toHaveBeenCalledTimes(1);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}