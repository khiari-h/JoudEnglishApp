{"version":3,"names":["_A","_interopRequireDefault","require","_A2","_B","_B2","_C","_C2","cov_18611760vw","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","getGrammarData","exports","level","dataMap","A1","grammarA1","A2","grammarA2","B1","grammarB1","B2","grammarB2","C1","grammarC1","C2","grammarC2","loadGrammarData","_ref","_asyncToGenerator2","default","loaders","load","mod","error","console","warn","_x","apply","arguments","getLevelColor","colors","getGrammarRulesCount","data","length","getTotalExercisesCount","reduce","total","rule","exercises","getLevelStats","rules","averageExercisesPerRule","totalRules","totalExercises"],"sources":["grammarDataHelper.js"],"sourcesContent":["// utils/grammar/grammarDataHelper.js\n\n// Import des données de grammaire par niveau\n// Imports statiques conservés pour compat internes/tests si besoin\nimport grammarA1 from \"../../data/grammar/A1\";\nimport grammarA2 from \"../../data/grammar/A2\";\nimport grammarB1 from \"../../data/grammar/B1\";\nimport grammarB2 from \"../../data/grammar/B2\";\nimport grammarC1 from \"../../data/grammar/C1\";\nimport grammarC2 from \"../../data/grammar/C2\";\n\n/**\n * Récupère les données de grammaire en fonction du niveau\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {Object} Les données de grammaire pour le niveau spécifié\n */\nexport const getGrammarData = (level) => {\n  const dataMap = {\n    A1: grammarA1,\n    A2: grammarA2,\n    B1: grammarB1,\n    B2: grammarB2,\n    C1: grammarC1,\n    C2: grammarC2\n  };\n  // Retourne A1 par défaut si le niveau n'est pas reconnu\n  return dataMap[level] || grammarA1;\n};\n\n// Chargement dynamique pour réduire le bundle initial\nexport const loadGrammarData = async (level) => {\n  try {\n    const loaders = {\n      A1: () => import(\"../../data/grammar/A1\"),\n      A2: () => import(\"../../data/grammar/A2\"),\n      B1: () => import(\"../../data/grammar/B1\"),\n      B2: () => import(\"../../data/grammar/B2\"),\n      C1: () => import(\"../../data/grammar/C1\"),\n      C2: () => import(\"../../data/grammar/C2\"),\n    };\n    const load = loaders[level] || loaders.A1;\n    const mod = await load();\n    return mod.default || mod;\n  } catch (error) {\n    // ✅ Gestion d'erreur appropriée\n    console.warn(`Error loading grammar data for level ${level}:`, error);\n    // Fallback: retourner les données A1 par défaut\n    return getGrammarData(\"A1\");\n  }\n};\n\n/**\n * Récupère la couleur associée à un niveau de langue\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {string} Code couleur hexadécimal pour le niveau\n */\nexport const getLevelColor = (level) => {\n  const colors = {\n    A1: \"#3b82f6\", // Bleu\n    A2: \"#8b5cf6\", // Violet\n    B1: \"#10b981\", // Vert\n    B2: \"#f59e0b\", // Orange\n    C1: \"#ef4444\", // Rouge\n    C2: \"#6366f1\", // Indigo\n  };\n  return colors[level] || \"#3b82f6\"; // Bleu par défaut\n};\n\n/**\n * Récupère le nombre total de règles de grammaire pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {number} Nombre total de règles\n */\nexport const getGrammarRulesCount = (level) => {\n  const data = getGrammarData(level);\n  return data ? data.length : 0;\n};\n\n/**\n * Récupère le nombre total d'exercices pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {number} Nombre total d'exercices\n */\nexport const getTotalExercisesCount = (level) => {\n  const data = getGrammarData(level);\n  if (!data) return 0;\n\n  return data.reduce((total, rule) => {\n    return total + (rule.exercises ? rule.exercises.length : 0);\n  }, 0);\n};\n\n/**\n * Récupère les statistiques complètes pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {Object} Statistiques du niveau\n */\nexport const getLevelStats = (level) => {\n  const data = getGrammarData(level);\n\n  if (!data) return {\n    rules: 0,\n    exercises: 0,\n    averageExercisesPerRule: 0\n  };\n\n  const totalRules = data.length;\n  const totalExercises = getTotalExercisesCount(level);\n\n  return {\n    rules: totalRules,\n    exercises: totalExercises,\n    averageExercisesPerRule: totalRules > 0 ? totalExercises / totalRules : 0\n  };\n};\n"],"mappings":";;;;;;AAIA,IAAAA,EAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,GAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,EAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,GAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,EAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,GAAA,GAAAN,sBAAA,CAAAC,OAAA;AAA8C,SAAAM,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAA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","ignoreList":[]}