{"version":3,"names":["_getJestObj","mock","setItem","jest","fn","Promise","resolve","getItem","removeItem","_interopRequireDefault","require","_asyncToGenerator2","_react","_asyncStorage","_useActivityMetrics","_require","describe","MOCK_DATE","Date","TODAY","toDateString","YESTERDAY","getTime","TWO_DAYS_AGO","beforeEach","useFakeTimers","setSystemTime","clearAllMocks","afterEach","runOnlyPendingTimers","useRealTimers","clearAllTimers","it","default","AsyncStorage","mockResolvedValueOnce","JSON","stringify","someMetric","_renderHook","renderHook","useActivityMetrics","result","waitFor","current","isLoading","expect","metrics","toEqual","todayMinutes","toBe","formattedTime","currentStreak","_renderHook2","act","startSession","advanceTimersByTime","endSession","toHaveBeenCalledWith","_renderHook3","updateStreak","_renderHook4","_renderHook5","not","any","String","_renderHook6","streakTrend","toBeNull","_renderHook7"],"sources":["useActivityMetrics.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { renderHook, act, waitFor } from '@testing-library/react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useActivityMetrics from '../../src/hooks/useActivityMetrics';\n\n// Mocks\njest.mock('@react-native-async-storage/async-storage', () => ({\n  setItem: jest.fn(() => Promise.resolve()),\n  getItem: jest.fn(() => Promise.resolve(null)),\n  removeItem: jest.fn(() => Promise.resolve()),\n}));\n\ndescribe('useActivityMetrics', () => {\n  const MOCK_DATE = new Date('2025-01-01T12:00:00.000Z');\n  const TODAY = MOCK_DATE.toDateString();\n  const YESTERDAY = new Date(MOCK_DATE.getTime() - 86400000).toDateString();\n  const TWO_DAYS_AGO = new Date(MOCK_DATE.getTime() - 2 * 86400000).toDateString();\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n    jest.setSystemTime(MOCK_DATE);\n    jest.clearAllMocks();\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n    jest.clearAllTimers();\n  });\n\n  it('loads metrics and initializes default state', async () => {\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify({ someMetric: 123 }));\n\n    const { result } = renderHook(() => useActivityMetrics());\n\n    await waitFor(() => !result.current.isLoading);\n\n    expect(result.current.metrics).toEqual({ someMetric: 123 });\n    expect(result.current.todayMinutes).toBe(0);\n    expect(result.current.formattedTime).toBe('0min');\n    expect(result.current.currentStreak).toBe(0);\n  });\n\n  it('calculates session duration and saves it', async () => {\n    const { result } = renderHook(() => useActivityMetrics());\n    await waitFor(() => !result.current.isLoading);\n\n    act(() => result.current.startSession());\n    act(() => jest.advanceTimersByTime(2 * 60000));\n\n    await act(async () => {\n      await result.current.endSession();\n    });\n\n    expect(result.current.todayMinutes).toBe(2);\n    expect(result.current.formattedTime).toBe('2min');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('today_minutes', '2');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('last_time_date', TODAY);\n  });\n\n  it('increments streak if yesterday was last activity', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(JSON.stringify({ someMetric: 123 })) // metrics\n      .mockResolvedValueOnce(YESTERDAY); // last_activity_date\n\n    const { result } = renderHook(() => useActivityMetrics());\n    await waitFor(() => !result.current.isLoading);\n\n    act(() => result.current.updateStreak());\n\n    await waitFor(() => expect(result.current.currentStreak).toBe(1));\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('current_streak', '1');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('last_activity_date', TODAY);\n  });\n\n  it('resets streak if last activity was 2 days ago', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(JSON.stringify({ someMetric: 123 })) // metrics\n      .mockResolvedValueOnce(TWO_DAYS_AGO); // last_activity_date\n\n    const { result } = renderHook(() => useActivityMetrics());\n    await waitFor(() => !result.current.isLoading);\n\n    act(() => result.current.updateStreak());\n\n    await waitFor(() => expect(result.current.currentStreak).toBe(1));\n  });\n\n  it('keeps streak unchanged if already updated today', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(JSON.stringify({ someMetric: 123 })) // metrics\n      .mockResolvedValueOnce(TODAY); // last_activity_date\n\n    const { result } = renderHook(() => useActivityMetrics());\n    await waitFor(() => !result.current.isLoading);\n\n    act(() => result.current.updateStreak());\n\n    await waitFor(() => expect(result.current.currentStreak).toBe(0));\n    expect(AsyncStorage.setItem).not.toHaveBeenCalledWith('current_streak', expect.any(String));\n  });\n\n  it('returns correct streak trend', async () => {\n    const { result } = renderHook(() => useActivityMetrics());\n    await waitFor(() => !result.current.isLoading);\n\n    act(() => { result.current.currentStreak = 1; });\n    expect(result.current.streakTrend).toBe('🔥 Continue!');\n\n    act(() => { result.current.currentStreak = 3; });\n    expect(result.current.streakTrend).toBe('💪 En forme!');\n\n    act(() => { result.current.currentStreak = 7; });\n    expect(result.current.streakTrend).toBe('🏆 Incroyable!');\n\n    act(() => { result.current.currentStreak = 0; });\n    expect(result.current.streakTrend).toBeNull();\n  });\n\n  it('returns correct formatted time across multiple sessions', async () => {\n    const { result } = renderHook(() => useActivityMetrics());\n    await waitFor(() => !result.current.isLoading);\n\n    act(() => result.current.startSession());\n    act(() => jest.advanceTimersByTime(30 * 60000));\n    await act(async () => result.current.endSession());\n    expect(result.current.formattedTime).toBe('30min');\n\n    act(() => result.current.startSession());\n    act(() => jest.advanceTimersByTime(60 * 60000));\n    await act(async () => result.current.endSession());\n    expect(result.current.formattedTime).toBe('1h');\n\n    act(() => result.current.startSession());\n    act(() => jest.advanceTimersByTime(75 * 60000));\n    await act(async () => result.current.endSession());\n    expect(result.current.formattedTime).toBe('2h15min');\n  });\n});"],"mappings":"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","ignoreList":[]}