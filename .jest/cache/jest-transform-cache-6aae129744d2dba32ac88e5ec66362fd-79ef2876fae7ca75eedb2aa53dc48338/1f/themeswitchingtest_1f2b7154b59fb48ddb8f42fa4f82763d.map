{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","useNavigation","navigate","fn","goBack","useRoute","params","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_layout","_AppProvider","_ThemeContext","_jsxRuntime","_require","describe","it","default","_render","render","jsx","AppProvider","children","ThemeProvider","getByText","findByTestId","dashboardContainer","initialStyle","props","style","fireEvent","press","themeSwitch","navigation","updatedDashboardContainer","updatedStyle"],"sources":["theme-switching.test.js"],"sourcesContent":["\nimport React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport App from '../../app/_layout';\nimport { AppProvider } from '../../src/contexts/AppProvider';\nimport { ThemeContext, ThemeProvider } from '../../src/contexts/ThemeContext';\n\njest.mock('@react-navigation/native', () => ({\n  ...jest.requireActual('@react-navigation/native'),\n  useNavigation: () => ({\n    navigate: jest.fn(),\n    goBack: jest.fn(),\n  }),\n  useRoute: () => ({ params: {} }),\n}));\n\ndescribe('Theme Switching Integration Test', () => {\n  it('should apply theme changes across different screens', async () => {\n    const { getByText, findByTestId } = render(\n      <AppProvider>\n        <ThemeProvider>\n          <App />\n        </ThemeProvider>\n      </AppProvider>\n    );\n\n    // 1. Vérifier le thème initial sur le Dashboard\n    const dashboardContainer = await findByTestId('dashboard-container'); // Ajoutez ce testID à votre Dashboard\n    const initialStyle = dashboardContainer.props.style;\n    // expect(initialStyle.backgroundColor).toBe('#FFFFFF'); // Exemple pour le thème clair\n\n    // 2. Naviguer vers les paramètres et changer le thème\n    fireEvent.press(getByText(/Paramètres/i));\n    const themeSwitch = await findByTestId('theme-switch'); // Ajoutez ce testID à votre interrupteur de thème\n    fireEvent.press(themeSwitch);\n\n    // 3. Revenir au Dashboard\n    const navigation = require('@react-navigation/native');\n    fireEvent.press(navigation.useNavigation().goBack());\n\n    // 4. Vérifier que le nouveau thème est appliqué\n    const updatedDashboardContainer = await findByTestId('dashboard-container');\n    const updatedStyle = updatedDashboardContainer.props.style;\n    // expect(updatedStyle.backgroundColor).toBe('#000000'); // Exemple pour le thème sombre\n  });\n});\n"],"mappings":"AAOAA,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE;EAAA,OAAAC,MAAA,CAAAC,MAAA,KACjCC,IAAI,CAACC,aAAa,CAAC,0BAA0B,CAAC;IACjDC,aAAa,EAAE,SAAfA,aAAaA,CAAA;MAAA,OAAS;QACpBC,QAAQ,EAAEH,IAAI,CAACI,EAAE,CAAC,CAAC;QACnBC,MAAM,EAAEL,IAAI,CAACI,EAAE,CAAC;MAClB,CAAC;IAAA,CAAC;IACFE,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAS;QAAEC,MAAM,EAAE,CAAC;MAAE,CAAC;IAAA;EAAC;AAAA,CAChC,CAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAbJ,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,OAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,YAAA,GAAAL,OAAA;AACA,IAAAM,aAAA,GAAAN,OAAA;AAA8E,IAAAO,WAAA,GAAAP,OAAA;AAAA,SAAAb,YAAA;EAAA,IAAAqB,QAAA,GAAAR,OAAA;IAAAT,IAAA,GAAAiB,QAAA,CAAAjB,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAW9EkB,QAAQ,CAAC,kCAAkC,EAAE,YAAM;EACjDC,EAAE,CAAC,qDAAqD,MAAAT,kBAAA,CAAAU,OAAA,EAAE,aAAY;IACpE,IAAAC,OAAA,GAAoC,IAAAC,mBAAM,EACxC,IAAAN,WAAA,CAAAO,GAAA,EAACT,YAAA,CAAAU,WAAW;QAAAC,QAAA,EACV,IAAAT,WAAA,CAAAO,GAAA,EAACR,aAAA,CAAAW,aAAa;UAAAD,QAAA,EACZ,IAAAT,WAAA,CAAAO,GAAA,EAACV,OAAA,CAAAO,OAAG,IAAE;QAAC,CACM;MAAC,CACL,CACf,CAAC;MANOO,SAAS,GAAAN,OAAA,CAATM,SAAS;MAAEC,YAAY,GAAAP,OAAA,CAAZO,YAAY;IAS/B,IAAMC,kBAAkB,SAASD,YAAY,CAAC,qBAAqB,CAAC;IACpE,IAAME,YAAY,GAAGD,kBAAkB,CAACE,KAAK,CAACC,KAAK;IAInDC,sBAAS,CAACC,KAAK,CAACP,SAAS,CAAC,aAAa,CAAC,CAAC;IACzC,IAAMQ,WAAW,SAASP,YAAY,CAAC,cAAc,CAAC;IACtDK,sBAAS,CAACC,KAAK,CAACC,WAAW,CAAC;IAG5B,IAAMC,UAAU,GAAG3B,OAAO,CAAC,0BAA0B,CAAC;IACtDwB,sBAAS,CAACC,KAAK,CAACE,UAAU,CAAClC,aAAa,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC;IAGpD,IAAMgC,yBAAyB,SAAST,YAAY,CAAC,qBAAqB,CAAC;IAC3E,IAAMU,YAAY,GAAGD,yBAAyB,CAACN,KAAK,CAACC,KAAK;EAE5D,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}