{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","useFocusEffect","fn","callback","router","push","useDashboardState","showLevelProgress","setShowLevelProgress","openLevelProgressModal","closeLevelProgressModal","refreshing","activeTab","setActiveTab","onRefresh","mockResolvedValue","getLevelProgress","refresh","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_expoRouter","_Dashboard","LastActivity","_interopRequireWildcard","_ProgressContext","_ThemeContext","_CurrentLevelContext","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","defineProperty","getOwnPropertyDescriptor","_require","useLastActivitySpy","spyOn","mockLastActivityData","type","level","title","timestamp","Date","now","metadata","categoryIndex","word","totalWords","describe","beforeEach","clearAllMocks","mockClear","it","mockReturnValue","lastActivity","isLoading","saveActivity","clearActivity","reload","_render","render","jsx","ThemeProvider","children","ProgressProvider","CurrentLevelProvider","getByTestId","getByText","waitFor","expect","toBeTruthy","continueButton","fireEvent","press","toHaveBeenCalledWith","pathname","params","_render2","startButton"],"sources":["resume-last-activity.test.js"],"sourcesContent":["// __tests__/integration/resume-last-activity.test.js  \nimport React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport { router } from 'expo-router';\nimport Dashboard from '../../src/screens/Dashboard';\nimport * as LastActivity from '../../src/hooks/useLastActivity';\nimport { ProgressProvider } from '../../src/contexts/ProgressContext';\nimport { ThemeProvider } from '../../src/contexts/ThemeContext';\nimport { CurrentLevelProvider } from '../../src/contexts/CurrentLevelContext';\n\n// Mock de expo-router\njest.mock('expo-router', () => ({\n  ...jest.requireActual('expo-router'),\n  useFocusEffect: jest.fn(callback => callback()),\n  router: {\n    push: jest.fn(),\n  },\n}));\n\n// Mocks des hooks et composants\njest.mock('../../src/screens/Dashboard/hooks/useDashboardState', () => ({\n  useDashboardState: jest.fn(() => ({\n    showLevelProgress: false,\n    setShowLevelProgress: jest.fn(),\n    openLevelProgressModal: jest.fn(),\n    closeLevelProgressModal: jest.fn(),\n    refreshing: false,\n    activeTab: \"home\",\n    setActiveTab: jest.fn(),\n    onRefresh: jest.fn().mockResolvedValue(),\n  })),\n}));\n\nconst useLastActivitySpy = jest.spyOn(LastActivity, 'default');\n\njest.mock('../../src/hooks/useRealTimeProgress', () => () => ({\n  getLevelProgress: jest.fn(() => 50),\n  refresh: jest.fn(),\n}));\n\nconst mockLastActivityData = {\n  type: 'grammar',\n  level: 'A1',\n  title: 'Grammaire de base',\n  timestamp: Date.now(),\n  metadata: {\n    categoryIndex: 1,\n    word: 5, // L'utilisateur a terminé le mot 5\n    totalWords: 15,\n  },\n};\n\ndescribe('Scénario 2: Reprise de la dernière activité', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    useLastActivitySpy.mockClear();\n  });\n\n  it('devrait afficher la section \"Continuer\" et naviguer correctement', async () => {\n    useLastActivitySpy.mockReturnValue({\n      lastActivity: mockLastActivityData,\n      isLoading: false,\n      saveActivity: jest.fn(),\n      clearActivity: jest.fn(),\n      reload: jest.fn(),\n    });\n\n    const { getByTestId, getByText } = render(\n      <ThemeProvider>\n        <ProgressProvider>\n          <CurrentLevelProvider>\n            <Dashboard />\n          </CurrentLevelProvider>\n        </ProgressProvider>\n      </ThemeProvider>\n    );\n\n    await waitFor(() => {\n      expect(getByTestId('hero-continue-section')).toBeTruthy();\n    });\n\n    expect(getByText('Grammaire de base')).toBeTruthy();\n    expect(getByText(/Niv A1/)).toBeTruthy();\n    // L'utilisateur a terminé le mot 5, donc on lui présente le mot 6.\n    expect(getByText(/Mot 6\\/15/)).toBeTruthy();\n\n    const continueButton = getByTestId('continue-activity-button');\n    fireEvent.press(continueButton);\n\n    await waitFor(() => {\n      expect(router.push).toHaveBeenCalledWith({\n        pathname: '/tabs/grammarExercise',\n        params: {\n          level: 'A1',\n        },\n      });\n    });\n  });\n\n  it('devrait afficher la section vide s\\'il n\\'y a pas de dernière activité', async () => {\n    useLastActivitySpy.mockReturnValue({\n      lastActivity: null,\n      isLoading: false,\n      saveActivity: jest.fn(),\n      clearActivity: jest.fn(),\n      reload: jest.fn(),\n    });\n\n    const { getByTestId, getByText } = render(\n      <ThemeProvider>\n        <ProgressProvider>\n          <CurrentLevelProvider>\n            <Dashboard />\n          </CurrentLevelProvider>\n        </ProgressProvider>\n      </ThemeProvider>\n    );\n\n    await waitFor(() => {\n      expect(getByTestId('hero-empty-section')).toBeTruthy();\n    });\n\n    expect(getByText(\"Commencer l'apprentissage\")).toBeTruthy();\n\n    const startButton = getByTestId('level-selection-button');\n    fireEvent.press(startButton);\n\n    await waitFor(() => {\n      expect(router.push).toHaveBeenCalledWith('/tabs/levelSelection');\n    });\n  });\n});"],"mappings":"AAWAA,WAAA,GAAKC,IAAI,CAAC,aAAa,EAAE;EAAA,OAAAC,MAAA,CAAAC,MAAA,KACpBC,IAAI,CAACC,aAAa,CAAC,aAAa,CAAC;IACpCC,cAAc,EAAEF,IAAI,CAACG,EAAE,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAAC,CAAC;IAAA,EAAC;IAC/CC,MAAM,EAAE;MACNC,IAAI,EAAEN,IAAI,CAACG,EAAE,CAAC;IAChB;EAAC;AAAA,CACD,CAAC;AAGHP,WAAA,GAAKC,IAAI,CAAC,qDAAqD,EAAE;EAAA,OAAO;IACtEU,iBAAiB,EAAEP,IAAI,CAACG,EAAE,CAAC;MAAA,OAAO;QAChCK,iBAAiB,EAAE,KAAK;QACxBC,oBAAoB,EAAET,IAAI,CAACG,EAAE,CAAC,CAAC;QAC/BO,sBAAsB,EAAEV,IAAI,CAACG,EAAE,CAAC,CAAC;QACjCQ,uBAAuB,EAAEX,IAAI,CAACG,EAAE,CAAC,CAAC;QAClCS,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAE,MAAM;QACjBC,YAAY,EAAEd,IAAI,CAACG,EAAE,CAAC,CAAC;QACvBY,SAAS,EAAEf,IAAI,CAACG,EAAE,CAAC,CAAC,CAACa,iBAAiB,CAAC;MACzC,CAAC;IAAA,CAAC;EACJ,CAAC;AAAA,CAAC,CAAC;AAIHpB,WAAA,GAAKC,IAAI,CAAC,qCAAqC,EAAE;EAAA,OAAM;IAAA,OAAO;MAC5DoB,gBAAgB,EAAEjB,IAAI,CAACG,EAAE,CAAC;QAAA,OAAM,EAAE;MAAA,EAAC;MACnCe,OAAO,EAAElB,IAAI,CAACG,EAAE,CAAC;IACnB,CAAC;EAAA,CAAC;AAAA,EAAC;AAAC,IAAAgB,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AArCJ,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,WAAA,GAAAJ,OAAA;AACA,IAAAK,UAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,YAAA,GAAAC,uBAAA,CAAAP,OAAA;AACA,IAAAQ,gBAAA,GAAAR,OAAA;AACA,IAAAS,aAAA,GAAAT,OAAA;AACA,IAAAU,oBAAA,GAAAV,OAAA;AAA8E,IAAAW,WAAA,GAAAX,OAAA;AAAA,SAAAO,wBAAAK,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAP,uBAAA,YAAAA,wBAAAK,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAxC,MAAA,CAAAmD,cAAA,KAAAnD,MAAA,CAAAoD,wBAAA,CAAAlB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAAA,SAAArC,YAAA;EAAA,IAAAuD,QAAA,GAAA/B,OAAA;IAAApB,IAAA,GAAAmD,QAAA,CAAAnD,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAyB9E,IAAMoD,kBAAkB,GAAGpD,IAAI,CAACqD,KAAK,CAAC3B,YAAY,EAAE,SAAS,CAAC;AAO9D,IAAM4B,oBAAoB,GAAG;EAC3BC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,mBAAmB;EAC1BC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;EACrBC,QAAQ,EAAE;IACRC,aAAa,EAAE,CAAC;IAChBC,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE;EACd;AACF,CAAC;AAEDC,QAAQ,CAAC,6CAA6C,EAAE,YAAM;EAC5DC,UAAU,CAAC,YAAM;IACflE,IAAI,CAACmE,aAAa,CAAC,CAAC;IACpBf,kBAAkB,CAACgB,SAAS,CAAC,CAAC;EAChC,CAAC,CAAC;EAEFC,EAAE,CAAC,kEAAkE,MAAAhD,kBAAA,CAAAqB,OAAA,EAAE,aAAY;IACjFU,kBAAkB,CAACkB,eAAe,CAAC;MACjCC,YAAY,EAAEjB,oBAAoB;MAClCkB,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAEzE,IAAI,CAACG,EAAE,CAAC,CAAC;MACvBuE,aAAa,EAAE1E,IAAI,CAACG,EAAE,CAAC,CAAC;MACxBwE,MAAM,EAAE3E,IAAI,CAACG,EAAE,CAAC;IAClB,CAAC,CAAC;IAEF,IAAAyE,OAAA,GAAmC,IAAAC,mBAAM,EACvC,IAAA9C,WAAA,CAAA+C,GAAA,EAACjD,aAAA,CAAAkD,aAAa;QAAAC,QAAA,EACZ,IAAAjD,WAAA,CAAA+C,GAAA,EAAClD,gBAAA,CAAAqD,gBAAgB;UAAAD,QAAA,EACf,IAAAjD,WAAA,CAAA+C,GAAA,EAAChD,oBAAA,CAAAoD,oBAAoB;YAAAF,QAAA,EACnB,IAAAjD,WAAA,CAAA+C,GAAA,EAACrD,UAAA,CAAAiB,OAAS,IAAE;UAAC,CACO;QAAC,CACP;MAAC,CACN,CACjB,CAAC;MAROyC,WAAW,GAAAP,OAAA,CAAXO,WAAW;MAAEC,SAAS,GAAAR,OAAA,CAATQ,SAAS;IAU9B,MAAM,IAAAC,oBAAO,EAAC,YAAM;MAClBC,MAAM,CAACH,WAAW,CAAC,uBAAuB,CAAC,CAAC,CAACI,UAAU,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEFD,MAAM,CAACF,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IACnDD,MAAM,CAACF,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IAExCD,MAAM,CAACF,SAAS,CAAC,WAAW,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IAE3C,IAAMC,cAAc,GAAGL,WAAW,CAAC,0BAA0B,CAAC;IAC9DM,sBAAS,CAACC,KAAK,CAACF,cAAc,CAAC;IAE/B,MAAM,IAAAH,oBAAO,EAAC,YAAM;MAClBC,MAAM,CAACjF,kBAAM,CAACC,IAAI,CAAC,CAACqF,oBAAoB,CAAC;QACvCC,QAAQ,EAAE,uBAAuB;QACjCC,MAAM,EAAE;UACNrC,KAAK,EAAE;QACT;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAC;EAEFa,EAAE,CAAC,wEAAwE,MAAAhD,kBAAA,CAAAqB,OAAA,EAAE,aAAY;IACvFU,kBAAkB,CAACkB,eAAe,CAAC;MACjCC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAEzE,IAAI,CAACG,EAAE,CAAC,CAAC;MACvBuE,aAAa,EAAE1E,IAAI,CAACG,EAAE,CAAC,CAAC;MACxBwE,MAAM,EAAE3E,IAAI,CAACG,EAAE,CAAC;IAClB,CAAC,CAAC;IAEF,IAAA2F,QAAA,GAAmC,IAAAjB,mBAAM,EACvC,IAAA9C,WAAA,CAAA+C,GAAA,EAACjD,aAAA,CAAAkD,aAAa;QAAAC,QAAA,EACZ,IAAAjD,WAAA,CAAA+C,GAAA,EAAClD,gBAAA,CAAAqD,gBAAgB;UAAAD,QAAA,EACf,IAAAjD,WAAA,CAAA+C,GAAA,EAAChD,oBAAA,CAAAoD,oBAAoB;YAAAF,QAAA,EACnB,IAAAjD,WAAA,CAAA+C,GAAA,EAACrD,UAAA,CAAAiB,OAAS,IAAE;UAAC,CACO;QAAC,CACP;MAAC,CACN,CACjB,CAAC;MAROyC,WAAW,GAAAW,QAAA,CAAXX,WAAW;MAAEC,SAAS,GAAAU,QAAA,CAATV,SAAS;IAU9B,MAAM,IAAAC,oBAAO,EAAC,YAAM;MAClBC,MAAM,CAACH,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAACI,UAAU,CAAC,CAAC;IACxD,CAAC,CAAC;IAEFD,MAAM,CAACF,SAAS,CAAC,2BAA2B,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IAE3D,IAAMQ,WAAW,GAAGZ,WAAW,CAAC,wBAAwB,CAAC;IACzDM,sBAAS,CAACC,KAAK,CAACK,WAAW,CAAC;IAE5B,MAAM,IAAAV,oBAAO,EAAC,YAAM;MAClBC,MAAM,CAACjF,kBAAM,CAACC,IAAI,CAAC,CAACqF,oBAAoB,CAAC,sBAAsB,CAAC;IAClE,CAAC,CAAC;EACJ,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}