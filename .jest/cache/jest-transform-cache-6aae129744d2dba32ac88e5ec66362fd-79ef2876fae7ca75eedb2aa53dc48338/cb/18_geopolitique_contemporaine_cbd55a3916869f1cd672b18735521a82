52c695d681ca8138fd95859b1c62c463
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vocab = void 0;
function cov_2nfqhzcatn() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\18_geopolitique_contemporaine.js";
  var hash = "9d268d6ef1cc365c5d9451b8bf10350ac75b3eab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\18_geopolitique_contemporaine.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 21
        },
        end: {
          line: 171,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9d268d6ef1cc365c5d9451b8bf10350ac75b3eab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2nfqhzcatn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2nfqhzcatn();
var vocab = exports.vocab = (cov_2nfqhzcatn().s[0]++, {
  title: "Géopolitique Contemporaine",
  words: [{
    word: "multipolarity",
    translation: "multipolarité",
    example: "The emerging multipolarity challenges the post-Cold War international order established in the 1990s."
  }, {
    word: "hegemonic decline",
    translation: "déclin hégémonique",
    example: "Scholars debate whether current global tensions reflect American hegemonic decline or strategic retrenchment."
  }, {
    word: "spheres of influence",
    translation: "sphères d'influence",
    example: "Major powers increasingly assert spheres of influence in their geographical proximity."
  }, {
    word: "rules-based order",
    translation: "ordre fondé sur des règles",
    example: "Democratic nations advocate for preserving the rules-based order against authoritarian challenges."
  }, {
    word: "revisionist power",
    translation: "puissance révisionniste",
    example: "Revisionist powers seek to reshape international norms and institutions to better serve their interests."
  }, {
    word: "status quo power",
    translation: "puissance du statu quo",
    example: "Status quo powers typically defend existing international arrangements that benefit their position."
  }, {
    word: "unilateralism",
    translation: "unilatéralisme",
    example: "The country's unilateralism undermined coalition-building efforts for the regional initiative."
  }, {
    word: "institutional architecture",
    translation: "architecture institutionnelle",
    example: "The post-war institutional architecture requires modernization to address contemporary challenges."
  }, {
    word: "deterrence",
    translation: "dissuasion",
    example: "Nuclear deterrence remains a cornerstone of strategic doctrine despite non-proliferation efforts."
  }, {
    word: "sharp power",
    translation: "puissance incisive",
    example: "Authoritarian regimes employ sharp power to manipulate information environments in democratic societies."
  }, {
    word: "proxy conflict",
    translation: "conflit par procuration",
    example: "Regional powers wage proxy conflicts to advance interests without direct military confrontation."
  }, {
    word: "gray zone operations",
    translation: "opérations en zone grise",
    example: "Gray zone operations remain deliberately below the threshold of open warfare while advancing strategic objectives."
  }, {
    word: "asymmetric threat",
    translation: "menace asymétrique",
    example: "Non-state actors pose asymmetric threats that conventional military doctrines struggle to address."
  }, {
    word: "defensive realism",
    translation: "réalisme défensif",
    example: "Defensive realism suggests states prioritize security rather than power maximization in foreign policy."
  }, {
    word: "offensive realism",
    translation: "réalisme offensif",
    example: "Offensive realism posits that uncertainty compels states to maximize power for survival."
  }, {
    word: "constructivist approach",
    translation: "approche constructiviste",
    example: "Constructivist approaches emphasize how shared ideas and identities shape international relations."
  }, {
    word: "institutional liberalism",
    translation: "libéralisme institutionnel",
    example: "Institutional liberalism highlights how international organizations constrain state behavior through rules-based cooperation."
  }, {
    word: "polarity",
    translation: "polarité",
    example: "Analysts debate whether current international polarity is best described as bipolar, multipolar, or nonpolar."
  }, {
    word: "grand strategy",
    translation: "grande stratégie",
    example: "The nation's grand strategy coordinates diplomatic, economic, and military instruments toward long-term objectives."
  }, {
    word: "strategic culture",
    translation: "culture stratégique",
    example: "Strategic culture shapes how political leaders perceive threats and appropriate responses based on historical experience."
  }, {
    word: "zero-sum perspective",
    translation: "perspective à somme nulle",
    example: "Zero-sum perspectives in international relations view one state's gain as necessarily another's loss."
  }, {
    word: "geopolitical forecasting",
    translation: "prospective géopolitique",
    example: "Geopolitical forecasting employs scenario planning to anticipate future international developments."
  }, {
    word: "rapprochement",
    translation: "rapprochement",
    example: "The rapprochement between former adversaries altered regional security calculations."
  }, {
    word: "territorial dispute",
    translation: "différend territorial",
    example: "Overlapping maritime claims fuel the territorial dispute despite international arbitration efforts."
  }, {
    word: "contested sovereignty",
    translation: "souveraineté contestée",
    example: "The region's contested sovereignty complicates international recognition and development assistance."
  }, {
    word: "secessionist movement",
    translation: "mouvement sécessionniste",
    example: "The secessionist movement gained momentum following the government's centralization policies."
  }, {
    word: "irredentism",
    translation: "irrédentisme",
    example: "Historical irredentism continues to influence nationalist rhetoric and territorial claims."
  }, {
    word: "strategic chokepoint",
    translation: "point d'étranglement stratégique",
    example: "Control over the strategic chokepoint provides leverage over international shipping routes."
  }, {
    word: "buffer state",
    translation: "État tampon",
    example: "The small nation has historically functioned as a buffer state between competing regional powers."
  }, {
    word: "frozen conflict",
    translation: "conflit gelé",
    example: "The frozen conflict persists without active hostilities but without formal resolution."
  }, {
    word: "regional hegemony",
    translation: "hégémonie régionale",
    example: "The country's pursuit of regional hegemony alarms smaller neighbors and external powers."
  }, {
    word: "strategic depth",
    translation: "profondeur stratégique",
    example: "Mountainous terrain provides strategic depth against potential invaders despite limited territorial size."
  }, {
    word: "anti-access/area denial",
    translation: "déni d'accès et interdiction de zone",
    example: "Anti-access/area denial capabilities aim to prevent adversaries from operating freely in contested regions."
  }, {
    word: "freedom of navigation",
    translation: "liberté de navigation",
    example: "Naval patrols assert freedom of navigation rights in disputed maritime zones."
  }, {
    word: "exclusive economic zone",
    translation: "zone économique exclusive",
    example: "Overlapping claims to exclusive economic zones generate tensions over resource exploitation rights."
  }, {
    word: "insurgency",
    translation: "insurrection",
    example: "The rural insurgency exploits government weaknesses and local grievances to mobilize support."
  }, {
    word: "counterinsurgency",
    translation: "contre-insurrection",
    example: "Effective counterinsurgency combines security operations with political and economic development."
  }, {
    word: "humanitarian intervention",
    translation: "intervention humanitaire",
    example: "Debates over humanitarian intervention balance sovereignty concerns against protection responsibilities."
  }, {
    word: "responsibility to protect",
    translation: "responsabilité de protéger",
    example: "The responsibility to protect doctrine justifies international action to prevent mass atrocities."
  }, {
    word: "nation-building",
    translation: "construction nationale",
    example: "Post-conflict nation-building requires coordinated security, governance, and economic development."
  }, {
    word: "state-building",
    translation: "consolidation de l'État",
    example: "State-building efforts focus on developing effective institutions and legitimate governance."
  }, {
    word: "failed state",
    translation: "État défaillant",
    example: "The failed state lacks effective governmental control over significant portions of its territory."
  }, {
    word: "fragile state",
    translation: "État fragile",
    example: "International engagement with the fragile state prioritizes institutional capacity building."
  }, {
    word: "ungoverned space",
    translation: "espace non gouverné",
    example: "Terrorist groups exploit ungoverned spaces beyond effective state control for training and organization."
  }, {
    word: "political transition",
    translation: "transition politique",
    example: "The political transition from authoritarian rule faces institutional and societal obstacles."
  }, {
    word: "democratic backsliding",
    translation: "recul démocratique",
    example: "Democratic backsliding involves gradual erosion of institutions and norms rather than dramatic regime change."
  }, {
    word: "authoritarian consolidation",
    translation: "consolidation autoritaire",
    example: "Authoritarian consolidation occurs as regimes eliminate remaining democratic constraints on power."
  }, {
    word: "competitive authoritarianism",
    translation: "autoritarisme compétitif",
    example: "Competitive authoritarianism maintains democratic façades while ensuring ruling party dominance."
  }, {
    word: "regime stability",
    translation: "stabilité du régime",
    example: "International actors prioritize regime stability over democratic reform in volatile regions."
  }, {
    word: "political legitimacy",
    translation: "légitimité politique",
    example: "The government's political legitimacy eroded following disputed elections and corruption scandals."
  }, {
    word: "power vacuum",
    translation: "vide de pouvoir",
    example: "The power vacuum following regime collapse enabled non-state armed groups to seize territory."
  }, {
    word: "strategic realignment",
    translation: "réalignement stratégique",
    example: "Changing threat perceptions prompted strategic realignment between former adversaries."
  }, {
    word: "ethno-religious conflict",
    translation: "conflit ethno-religieux",
    example: "Ethno-religious conflict complicates political solutions that ensure minority rights protection."
  }, {
    word: "cross-border militancy",
    translation: "militantisme transfrontalier",
    example: "Cross-border militancy necessitates coordinated responses from affected states."
  }, {
    word: "transnational terrorism",
    translation: "terrorisme transnational",
    example: "Transnational terrorism exploits governance gaps and ideological grievances across multiple countries."
  }, {
    word: "extremist ideology",
    translation: "idéologie extrémiste",
    example: "Countering extremist ideology requires addressing both security threats and underlying socioeconomic factors."
  }, {
    word: "radicalization",
    translation: "radicalisation",
    example: "Online radicalization accelerates through social media echo chambers and targeted recruitment."
  }, {
    word: "deradicalization",
    translation: "déradicalisation",
    example: "Deradicalization programs combine religious counseling with psychological support and socioeconomic reintegration."
  }, {
    word: "counterterrorism",
    translation: "contre-terrorisme",
    example: "Effective counterterrorism balances security measures with addressing root causes of violent extremism."
  }, {
    word: "sectarian tension",
    translation: "tension sectaire",
    example: "Sectarian tensions increase vulnerability to external manipulation by regional powers."
  }, {
    word: "political Islam",
    translation: "islam politique",
    example: "Political Islam encompasses diverse movements with varying positions on democracy and violence."
  }, {
    word: "ethnic polarization",
    translation: "polarisation ethnique",
    example: "Ethnic polarization intensified following political entrepreneurs' exploitation of historical grievances."
  }, {
    word: "geoeconomics",
    translation: "géoéconomie",
    example: "Geoeconomics increasingly shapes international relations as states weaponize economic interdependence."
  }, {
    word: "sanctions regime",
    translation: "régime de sanctions",
    example: "The multilateral sanctions regime restricts access to international financial systems and key technologies."
  }, {
    word: "secondary sanctions",
    translation: "sanctions secondaires",
    example: "Secondary sanctions target third parties conducting business with sanctioned entities."
  }, {
    word: "strategic interdependence",
    translation: "interdépendance stratégique",
    example: "Energy relationships create strategic interdependence between supplier and consumer nations."
  }, {
    word: "rentier state",
    translation: "État rentier",
    example: "The rentier state derives most government revenue from external resource rents rather than domestic taxation."
  }, {
    word: "supply chain vulnerability",
    translation: "vulnérabilité des chaînes d'approvisionnement",
    example: "The pandemic exposed supply chain vulnerabilities in critical sectors including medical supplies."
  }, {
    word: "economic resilience",
    translation: "résilience économique",
    example: "Strategic industries pursue economic resilience through diversified sourcing and domestic capacity."
  }, {
    word: "strategic decoupling",
    translation: "découplage stratégique",
    example: "Technological competition drives strategic decoupling in sensitive sectors like semiconductors."
  }, {
    word: "reshoring",
    translation: "relocalisation",
    example: "National security concerns accelerate reshoring of critical manufacturing capabilities."
  }, {
    word: "nearshoring",
    translation: "délocalisation de proximité",
    example: "Companies pursue nearshoring to balance efficiency with reduced geopolitical and supply chain risks."
  }, {
    word: "friend-shoring",
    translation: "délocalisation amicale",
    example: "Friend-shoring relocates production to geopolitically aligned countries rather than potential adversaries."
  }, {
    word: "geo-economic fragmentation",
    translation: "fragmentation géoéconomique",
    example: "Geo-economic fragmentation creates parallel systems for trade, finance, and technology standards."
  }, {
    word: "debt-trap diplomacy",
    translation: "diplomatie du piège de la dette",
    example: "Critics allege debt-trap diplomacy uses unsustainable financing to acquire strategic assets in developing nations."
  }, {
    word: "strategic infrastructure",
    translation: "infrastructure stratégique",
    example: "Port facilities constitute strategic infrastructure with both commercial and military applications."
  }, {
    word: "economic nationalism",
    translation: "nationalisme économique",
    example: "Economic nationalism prioritizes domestic interests over multilateral cooperation and free trade principles."
  }, {
    word: "critical minerals",
    translation: "minéraux critiques",
    example: "Competition for critical minerals intensifies as clean energy technologies increase demand."
  }, {
    word: "resource security",
    translation: "sécurité des ressources",
    example: "National strategies prioritize resource security through diversification and strategic reserves."
  }, {
    word: "energy weaponization",
    translation: "armement énergétique",
    example: "Energy weaponization uses supply manipulation to extract political concessions from dependent consumers."
  }, {
    word: "maritime trade route",
    translation: "route commerciale maritime",
    example: "Naval deployments secure maritime trade routes against piracy and potential blockades."
  }, {
    word: "choke point",
    translation: "point d'étranglement",
    example: "The narrow strait constitutes a strategic choke point for global energy transportation."
  }, {
    word: "sea lane of communication",
    translation: "voie maritime de communication",
    example: "Naval strategy prioritizes protecting sea lanes of communication essential to international commerce."
  }, {
    word: "flag of convenience",
    translation: "pavillon de complaisance",
    example: "Ships registered under flags of convenience evade regulatory oversight and taxation."
  }, {
    word: "intellectual property theft",
    translation: "vol de propriété intellectuelle",
    example: "Intellectual property theft through cyber espionage targets high-value commercial technologies."
  }, {
    word: "indigenous innovation",
    translation: "innovation indigène",
    example: "The national strategy emphasizes indigenous innovation to reduce dependence on foreign technology."
  }, {
    word: "technology decoupling",
    translation: "découplage technologique",
    example: "Technology decoupling creates parallel standards and supply chains in strategic sectors."
  }, {
    word: "data colonialism",
    translation: "colonialisme des données",
    example: "Critics characterize data colonialism as resource extraction from developing nations without appropriate compensation."
  }, {
    word: "digital authoritarianism",
    translation: "autoritarisme numérique",
    example: "Digital authoritarianism employs advanced surveillance technologies to monitor and control populations."
  }, {
    word: "non-traditional security",
    translation: "sécurité non traditionnelle",
    example: "Non-traditional security concerns include environmental degradation, pandemic disease, and food insecurity."
  }, {
    word: "human security",
    translation: "sécurité humaine",
    example: "Human security frameworks prioritize individual welfare over traditional state-centric approaches."
  }, {
    word: "climate security",
    translation: "sécurité climatique",
    example: "Climate security assesses how global warming impacts political stability and military operations."
  }, {
    word: "anthropocene",
    translation: "anthropocène",
    example: "The anthropocene concept recognizes humanity's dominant influence on Earth's geological and ecological systems."
  }, {
    word: "biosecurity",
    translation: "biosécurité",
    example: "Advanced biosecurity protocols protect against both natural outbreaks and deliberate biological threats."
  }, {
    word: "forced displacement",
    translation: "déplacement forcé",
    example: "Conflict-induced forced displacement creates humanitarian challenges and regional instability."
  }, {
    word: "irregular migration",
    translation: "migration irrégulière",
    example: "Irregular migration flows respond to both push factors in origin countries and pull factors in destinations."
  }, {
    word: "organized crime",
    translation: "crime organisé",
    example: "Organized crime groups exploit governance gaps and establish parallel power structures."
  }, {
    word: "illicit financial flows",
    translation: "flux financiers illicites",
    example: "Illicit financial flows undermine development by diverting resources from legitimate economic activity."
  }, {
    word: "threat convergence",
    translation: "convergence des menaces",
    example: "Threat convergence occurs when terrorist groups, criminal organizations, and corrupt officials develop symbiotic relationships."
  }, {
    word: "corruption",
    translation: "corruption",
    example: "Systemic corruption undermines institutional legitimacy and enables transnational criminal activities."
  }, {
    word: "kleptocracy",
    translation: "kleptocratie",
    example: "Kleptocratic governance structures systematically extract public resources for private gain."
  }, {
    word: "narco-state",
    translation: "narco-État",
    example: "The territory exhibits narco-state characteristics with drug trafficking organizations influencing political processes."
  }, {
    word: "transnational advocacy network",
    translation: "réseau transnational de plaidoyer",
    example: "Transnational advocacy networks mobilize across borders to promote normative change."
  }, {
    word: "international regime",
    translation: "régime international",
    example: "The environmental protection international regime includes both binding treaties and voluntary standards."
  }, {
    word: "norm entrepreneur",
    translation: "entrepreneur de normes",
    example: "Norm entrepreneurs advocate emerging principles like environmental justice and corporate responsibility."
  }, {
    word: "norm diffusion",
    translation: "diffusion des normes",
    example: "Norm diffusion occurs through international organizations, advocacy networks, and state socialization."
  }, {
    word: "legal sovereignty",
    translation: "souveraineté juridique",
    example: "Legal sovereignty remains the foundational principle of international relations despite practical limitations."
  }, {
    word: "sovereignty gap",
    translation: "déficit de souveraineté",
    example: "The sovereignty gap between formal authority and effective governance capacity grows in fragile states."
  }, {
    word: "sovereignty pooling",
    translation: "mise en commun de la souveraineté",
    example: "European integration demonstrates sovereignty pooling to address shared challenges."
  }, {
    word: "universal jurisdiction",
    translation: "compétence universelle",
    example: "Universal jurisdiction principles allow prosecution of certain crimes regardless of where they occurred."
  }, {
    word: "transboundary governance",
    translation: "gouvernance transfrontalière",
    example: "Transboundary governance mechanisms manage shared resources like river basins and marine environments."
  }, {
    word: "global public good",
    translation: "bien public mondial",
    example: "Climate stability constitutes a global public good requiring collective action to maintain."
  }, {
    word: "global commons",
    translation: "biens communs mondiaux",
    example: "Governance regimes for global commons include oceans, atmosphere, and outer space."
  }, {
    word: "tragedy of the commons",
    translation: "tragédie des biens communs",
    example: "Overfishing exemplifies the tragedy of the commons when individual interests deplete shared resources."
  }, {
    word: "race to the bottom",
    translation: "nivellement par le bas",
    example: "Environmental standards face race to the bottom pressures from international competition."
  }, {
    word: "negative externality",
    translation: "externalité négative",
    example: "Carbon emissions create negative externalities affecting all countries regardless of source."
  }, {
    word: "international public finance",
    translation: "finance publique internationale",
    example: "International public finance mobilizes resources for development and climate adaptation."
  }]
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,