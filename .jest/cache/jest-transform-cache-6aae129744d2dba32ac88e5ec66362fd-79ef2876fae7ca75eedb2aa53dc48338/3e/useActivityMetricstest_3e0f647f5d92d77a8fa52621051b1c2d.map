{"version":3,"names":["_getJestObj","mock","setItem","jest","fn","Promise","resolve","getItem","removeItem","_interopRequireDefault","require","_asyncToGenerator2","_react","_asyncStorage","_useActivityMetrics","_require","describe","MOCK_DATE","Date","MOCK_TODAY","toDateString","ONE_DAY","TWO_DAYS","beforeEach","useFakeTimers","setSystemTime","clearAllMocks","afterEach","runOnlyPendingTimers","useRealTimers","clearAllTimers","it","default","AsyncStorage","mockResolvedValueOnce","JSON","stringify","totalMinutes","lastActivityDate","_renderHook","renderHook","useActivityMetrics","result","waitForNextUpdate","expect","current","isLoading","toBe","metrics","toEqual","todayMinutes","formattedTime","currentStreak","toHaveBeenCalledWith","_renderHook2","getTime","_renderHook3","_renderHook4","act","startSession","advanceTimersByTime","endSession","_renderHook5","_renderHook6","updateStreak","_renderHook7","_renderHook8","not","any","String","_renderHook9","rerender","streakTrend","toBeNull","_renderHook0"],"sources":["useActivityMetrics.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { renderHook, act } from '@testing-library/react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useActivityMetrics from '../../src/hooks/useActivityMetrics';\n\n// 🧪 Mock AsyncStorage\njest.mock('@react-native-async-storage/async-storage', () => ({\n  setItem: jest.fn(() => Promise.resolve()),\n  getItem: jest.fn(() => Promise.resolve(null)),\n  removeItem: jest.fn(() => Promise.resolve()),\n}));\n\ndescribe('useActivityMetrics', () => {\n  const MOCK_DATE = new Date('2025-01-01T12:00:00.000Z');\n  const MOCK_TODAY = MOCK_DATE.toDateString();\n  const ONE_DAY = 24 * 60 * 60 * 1000;\n  const TWO_DAYS = 2 * ONE_DAY;\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n    jest.setSystemTime(MOCK_DATE);\n    jest.clearAllMocks();\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n    jest.clearAllTimers();\n  });\n\n  it('loads metrics and initializes default state', async () => {\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify({ totalMinutes: 100, lastActivityDate: MOCK_TODAY }));\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    expect(result.current.isLoading).toBe(true);\n\n    await waitForNextUpdate();\n\n    expect(result.current.isLoading).toBe(false);\n    expect(result.current.metrics).toEqual({ totalMinutes: 100, lastActivityDate: MOCK_TODAY });\n    expect(result.current.todayMinutes).toBe(0); // Should be 0 initially for a new day\n    expect(result.current.formattedTime).toBe('0min');\n    expect(result.current.currentStreak).toBe(0);\n    expect(AsyncStorage.getItem).toHaveBeenCalledWith('activity_metrics');\n    expect(AsyncStorage.getItem).toHaveBeenCalledWith('today_minutes');\n    expect(AsyncStorage.getItem).toHaveBeenCalledWith('last_time_date');\n    expect(AsyncStorage.getItem).toHaveBeenCalledWith('current_streak');\n    expect(AsyncStorage.getItem).toHaveBeenCalledWith('last_activity_date');\n  });\n\n  it('loads existing today_minutes and last_time_date', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(null) // activity_metrics\n      .mockResolvedValueOnce('15') // today_minutes\n      .mockResolvedValueOnce(MOCK_TODAY); // last_time_date\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate();\n\n    expect(result.current.todayMinutes).toBe(15);\n    expect(result.current.formattedTime).toBe('15min');\n  });\n\n  it('resets today_minutes if last_time_date is not today', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(null) // activity_metrics\n      .mockResolvedValueOnce('20') // today_minutes\n      .mockResolvedValueOnce(new Date(MOCK_DATE.getTime() - ONE_DAY).toDateString()); // last_time_date (yesterday)\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate();\n\n    expect(result.current.todayMinutes).toBe(0);\n    expect(result.current.formattedTime).toBe('0min');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('today_minutes', '0');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('last_time_date', MOCK_TODAY);\n  });\n\n  it('tracks session duration and stores minutes', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate();\n\n    act(() => result.current.startSession());\n    act(() => jest.advanceTimersByTime(2 * 60 * 1000)); // 2min\n\n    await act(async () => result.current.endSession());\n\n    expect(result.current.todayMinutes).toBe(2);\n    expect(result.current.formattedTime).toBe('2min');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('today_minutes', '2');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('last_time_date', MOCK_TODAY);\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('activity_metrics', JSON.stringify({\n      totalMinutes: 2,\n      lastActivityDate: MOCK_TODAY,\n    }));\n  });\n\n  it('updates totalMinutes in metrics when session ends', async () => {\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify({ totalMinutes: 10 }));\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate();\n\n    act(() => result.current.startSession());\n    act(() => jest.advanceTimersByTime(5 * 60 * 1000)); // 5min\n    await act(async () => result.current.endSession());\n\n    expect(result.current.metrics.totalMinutes).toBe(15);\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('activity_metrics', JSON.stringify({\n      totalMinutes: 15,\n      lastActivityDate: MOCK_TODAY,\n    }));\n  });\n\n  it('increments streak if last activity was yesterday', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(null)\n      .mockResolvedValueOnce(JSON.stringify({ currentStreak: 1 }))\n      .mockResolvedValueOnce(new Date(MOCK_DATE.getTime() - ONE_DAY).toDateString());\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate();\n\n    act(() => result.current.updateStreak());\n    await waitForNextUpdate();\n\n    expect(result.current.currentStreak).toBe(2);\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('current_streak', '2');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('last_activity_date', MOCK_TODAY);\n  });\n\n  it('resets streak if last activity was more than a day ago', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(null)\n      .mockResolvedValueOnce(JSON.stringify({ currentStreak: 5 }))\n      .mockResolvedValueOnce(new Date(MOCK_DATE.getTime() - TWO_DAYS).toDateString());\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate();\n\n    act(() => result.current.updateStreak());\n    await waitForNextUpdate();\n\n    expect(result.current.currentStreak).toBe(1);\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('current_streak', '1');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('last_activity_date', MOCK_TODAY);\n  });\n\n  it('does not update streak if already updated today', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(null)\n      .mockResolvedValueOnce(JSON.stringify({ currentStreak: 3 }))\n      .mockResolvedValueOnce(MOCK_TODAY);\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate();\n\n    act(() => result.current.updateStreak());\n    await waitForNextUpdate();\n\n    expect(result.current.currentStreak).toBe(3);\n    expect(AsyncStorage.setItem).not.toHaveBeenCalledWith('current_streak', expect.any(String));\n  });\n\n  it('returns correct streakTrend according to streak value', async () => {\n    const { result, waitForNextUpdate, rerender } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate();\n\n    // Set and rerender for various streaks\n    act(() => { result.current.currentStreak = 1; });\n    rerender();\n    expect(result.current.streakTrend).toBe('🔥 Continue!');\n\n    act(() => { result.current.currentStreak = 3; });\n    rerender();\n    expect(result.current.streakTrend).toBe('💪 En forme!');\n\n    act(() => { result.current.currentStreak = 7; });\n    rerender();\n    expect(result.current.streakTrend).toBe('🏆 Incroyable!');\n\n    act(() => { result.current.currentStreak = 0; });\n    rerender();\n    expect(result.current.streakTrend).toBeNull();\n  });\n\n  it('returns formattedTime correctly for long durations', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate();\n\n    act(() => result.current.startSession());\n    act(() => jest.advanceTimersByTime(30 * 60 * 1000));\n    await act(async () => result.current.endSession());\n    expect(result.current.formattedTime).toBe('30min');\n\n    act(() => result.current.startSession());\n    act(() => jest.advanceTimersByTime(60 * 60 * 1000));\n    await act(async () => result.current.endSession());\n    expect(result.current.formattedTime).toBe('1h');\n\n    act(() => result.current.startSession());\n    act(() => jest.advanceTimersByTime(75 * 60 * 1000));\n    await act(async () => result.current.endSession());\n    expect(result.current.formattedTime).toBe('2h15min');\n  });\n});"],"mappings":"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","ignoreList":[]}