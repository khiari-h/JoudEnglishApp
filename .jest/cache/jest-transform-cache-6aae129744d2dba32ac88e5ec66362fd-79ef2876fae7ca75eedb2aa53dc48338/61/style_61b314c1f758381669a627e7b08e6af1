68cccb925a6844cacdab18598ae68f8b
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_1v5k1aq1nm() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\CategorySelector\\style.js";
  var hash = "ffa05ca4fbf6eae61961cb3ff5968f6e5390967d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\CategorySelector\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 142,
          column: 4
        }
      },
      "1": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 142,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 12,
            column: 22
          }
        },
        loc: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 142,
            column: 4
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 12,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 46
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ffa05ca4fbf6eae61961cb3ff5968f6e5390967d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1v5k1aq1nm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1v5k1aq1nm();
cov_1v5k1aq1nm().s[0]++;
var createStyles = function createStyles() {
  var primaryColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1v5k1aq1nm().b[0][0]++, "#5E60CE");
  cov_1v5k1aq1nm().f[0]++;
  cov_1v5k1aq1nm().s[1]++;
  return _reactNative.StyleSheet.create({
    container: {
      marginVertical: 16,
      height: 60
    },
    backgroundGradient: {
      flex: 1,
      justifyContent: 'center'
    },
    scrollView: {
      flexGrow: 0
    },
    scrollContent: {
      paddingHorizontal: 20,
      paddingVertical: 8,
      alignItems: 'center'
    },
    categoryItemWrapper: Object.assign({
      marginRight: 12
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: primaryColor,
        shadowOffset: {
          width: 0,
          height: 4
        },
        shadowRadius: 8
      },
      android: {
        elevation: 4
      }
    })),
    categoryTouchable: {
      borderRadius: 24,
      overflow: 'hidden'
    },
    selectedCategoryItem: Object.assign({
      borderRadius: 24,
      overflow: 'hidden'
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: primaryColor,
        shadowOffset: {
          width: 0,
          height: 6
        },
        shadowOpacity: 0.3,
        shadowRadius: 12
      },
      android: {
        elevation: 8
      }
    })),
    selectedInner: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: 20,
      paddingVertical: 12,
      backgroundColor: 'rgba(255, 255, 255, 0.15)',
      borderWidth: 1,
      borderColor: 'rgba(255, 255, 255, 0.3)',
      minHeight: 44
    },
    selectedCategoryText: Object.assign({
      fontSize: 15,
      fontWeight: '700',
      color: 'white',
      letterSpacing: 0.3
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#000',
        shadowOffset: {
          width: 0,
          height: 1
        },
        shadowOpacity: 0.3,
        shadowRadius: 2
      }
    })),
    sparkleContainer: {
      marginLeft: 8,
      opacity: 0.9
    },
    sparkle: {
      fontSize: 12
    },
    categoryItem: Object.assign({
      borderRadius: 24,
      backgroundColor: 'rgba(255, 255, 255, 0.9)',
      overflow: 'hidden'
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#000',
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowOpacity: 0.08,
        shadowRadius: 6
      },
      android: {
        elevation: 2
      }
    })),
    categoryInner: {
      paddingHorizontal: 18,
      paddingVertical: 10,
      borderRadius: 24,
      borderWidth: 1,
      borderColor: 'rgba(255, 255, 255, 0.4)',
      minHeight: 40,
      justifyContent: 'center',
      alignItems: 'center'
    },
    categoryText: {
      fontSize: 14,
      fontWeight: '600',
      letterSpacing: 0.2,
      textAlign: 'center'
    }
  });
};
var _default = exports.default = createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,