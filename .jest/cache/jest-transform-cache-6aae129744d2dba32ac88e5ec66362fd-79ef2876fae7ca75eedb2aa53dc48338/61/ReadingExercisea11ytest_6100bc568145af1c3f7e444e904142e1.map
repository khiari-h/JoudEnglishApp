{"version":3,"names":["_getJestObj","mock","router","push","jest","fn","useFocusEffect","getLevelColor","getReadingData","exercises","id","title","questions","text","options","correctAnswer","loadReadingData","_asyncToGenerator2","default","__esModule","selectedExerciseIndex","currentQuestionIndex","selectedAnswer","showFeedback","textExpanded","attempts","completedQuestions","loaded","showDetailedProgress","currentExercise","currentQuestion","totalQuestions","isCorrect","changeExercise","changeQuestion","selectAnswer","submitAnswer","nextQuestion","previousQuestion","retryQuestion","toggleTextExpansion","toggleDetailedProgress","scrollViewRef","current","textsScrollViewRef","fadeAnim","slideAnim","_interopRequireDefault","require","_react","_reactNative","_reading","_jsxRuntime","_require","describe","it","params","level","_render","render","jsx","route","getAllByRole","buttons","expect","length","toBeGreaterThan"],"sources":["ReadingExercise.a11y.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport ReadingExercise from '../../src/screens/exercises/reading';\r\n\r\njest.mock('expo-router', () => ({ router: { push: jest.fn() }, useFocusEffect: jest.fn(() => {}) }));\r\n\r\njest.mock('../../src/utils/reading/readingDataHelper', () => ({\r\n  getLevelColor: jest.fn(() => '#007AFF'),\r\n  getReadingData: jest.fn(() => ({\r\n    exercises: [{ id: 't1', title: 'The Weather', questions: [ { text: 'Q1', options: ['a','b'], correctAnswer: 0 } ] }]\r\n  })),\r\n  loadReadingData: jest.fn(async () => ({\r\n    exercises: [{ id: 't1', title: 'The Weather', questions: [ { text: 'Q1', options: ['a','b'], correctAnswer: 0 } ] }]\r\n  })),\r\n}));\r\n\r\njest.mock('../../src/screens/exercises/reading/hooks/useReading', () => ({\r\n  __esModule: true,\r\n  default: jest.fn(() => ({\r\n    selectedExerciseIndex: 0,\r\n    currentQuestionIndex: 0,\r\n    selectedAnswer: null,\r\n    showFeedback: false,\r\n    textExpanded: false,\r\n    attempts: 0,\r\n    completedQuestions: {},\r\n    loaded: true,\r\n    showDetailedProgress: false,\r\n    currentExercise: { title: 'The Weather', questions: [{ text: 'Q1', options: ['a','b'], correctAnswer: 0 }] },\r\n    currentQuestion: { text: 'Q1', options: ['a','b'], correctAnswer: 0 },\r\n    totalQuestions: 1,\r\n    isCorrect: false,\r\n    changeExercise: jest.fn(),\r\n    changeQuestion: jest.fn(),\r\n    selectAnswer: jest.fn(),\r\n    submitAnswer: jest.fn(),\r\n    nextQuestion: jest.fn(),\r\n    previousQuestion: jest.fn(),\r\n    retryQuestion: jest.fn(),\r\n    toggleTextExpansion: jest.fn(),\r\n    toggleDetailedProgress: jest.fn(),\r\n    scrollViewRef: { current: null },\r\n    textsScrollViewRef: { current: null },\r\n    fadeAnim: {},\r\n    slideAnim: {},\r\n  })),\r\n}));\r\n\r\ndescribe('ReadingExercise accessibility', () => {\r\n  it('should render navigation buttons with role button', () => {\r\n    const params = { level: '1' };\r\n    const { getAllByRole } = render(<ReadingExercise route={{ params }} />);\r\n    const buttons = getAllByRole('button');\r\n    expect(buttons.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}