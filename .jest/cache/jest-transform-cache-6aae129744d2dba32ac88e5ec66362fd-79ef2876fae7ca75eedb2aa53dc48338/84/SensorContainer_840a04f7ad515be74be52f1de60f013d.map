{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","SensorContainer","_classCallCheck2","_createClass2","_Sensor","default","nativeSensors","Map","key","getSensorId","sensorType","config","iosReferenceFrame","Number","adjustToInterfaceOrientation","initializeSensor","sensorId","has","newSensor","Sensor","set","sensor","get","getSharedValue","registerSensor","handler","isAvailable","isRunning","register","listenersNumber","unregisterSensor","unregister"],"sources":["SensorContainer.ts"],"sourcesContent":["'use strict';\nimport type {\n  SensorType,\n  SensorConfig,\n  Value3D,\n  ValueRotation,\n  ShareableRef,\n  SharedValue,\n} from './commonTypes';\nimport Sensor from './Sensor';\n\nexport class SensorContainer {\n  private nativeSensors: Map<number, Sensor> = new Map();\n\n  getSensorId(sensorType: SensorType, config: SensorConfig) {\n    return (\n      sensorType * 100 +\n      config.iosReferenceFrame * 10 +\n      Number(config.adjustToInterfaceOrientation)\n    );\n  }\n\n  initializeSensor(\n    sensorType: SensorType,\n    config: SensorConfig\n  ): SharedValue<Value3D | ValueRotation> {\n    const sensorId = this.getSensorId(sensorType, config);\n\n    if (!this.nativeSensors.has(sensorId)) {\n      const newSensor = new Sensor(sensorType, config);\n      this.nativeSensors.set(sensorId, newSensor);\n    }\n\n    const sensor = this.nativeSensors.get(sensorId);\n    return sensor!.getSharedValue();\n  }\n\n  registerSensor(\n    sensorType: SensorType,\n    config: SensorConfig,\n    handler: ShareableRef<(data: Value3D | ValueRotation) => void>\n  ): number {\n    const sensorId = this.getSensorId(sensorType, config);\n\n    if (!this.nativeSensors.has(sensorId)) {\n      return -1;\n    }\n\n    const sensor = this.nativeSensors.get(sensorId);\n    if (\n      sensor &&\n      sensor.isAvailable() &&\n      (sensor.isRunning() || sensor.register(handler))\n    ) {\n      sensor.listenersNumber++;\n      return sensorId;\n    }\n    return -1;\n  }\n\n  unregisterSensor(sensorId: number) {\n    if (this.nativeSensors.has(sensorId)) {\n      const sensor = this.nativeSensors.get(sensorId);\n      if (sensor && sensor.isRunning()) {\n        sensor.listenersNumber--;\n        if (sensor.listenersNumber === 0) {\n          sensor.unregister();\n        }\n      }\n    }\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,eAAA;AAAA,IAAAC,gBAAA,GAAAP,sBAAA,CAAAC,OAAA;AAAA,IAAAO,aAAA,GAAAR,sBAAA,CAAAC,OAAA;AASb,IAAAQ,OAAA,GAAAT,sBAAA,CAAAC,OAAA;AAA8B,IAEjBK,eAAe,GAAAF,OAAA,CAAAE,eAAA;EAAA,SAAAA,gBAAA;IAAA,IAAAC,gBAAA,CAAAG,OAAA,QAAAJ,eAAA;IAAA,KAClBK,aAAa,GAAwB,IAAIC,GAAG,CAAC,CAAC;EAAA;EAAA,WAAAJ,aAAA,CAAAE,OAAA,EAAAJ,eAAA;IAAAO,GAAA;IAAAR,KAAA,EAEtD,SAAAS,WAAWA,CAACC,UAAsB,EAAEC,MAAoB,EAAE;MACxD,OACED,UAAU,GAAG,GAAG,GAChBC,MAAM,CAACC,iBAAiB,GAAG,EAAE,GAC7BC,MAAM,CAACF,MAAM,CAACG,4BAA4B,CAAC;IAE/C;EAAC;IAAAN,GAAA;IAAAR,KAAA,EAED,SAAAe,gBAAgBA,CACdL,UAAsB,EACtBC,MAAoB,EACkB;MACtC,IAAMK,QAAQ,GAAG,IAAI,CAACP,WAAW,CAACC,UAAU,EAAEC,MAAM,CAAC;MAErD,IAAI,CAAC,IAAI,CAACL,aAAa,CAACW,GAAG,CAACD,QAAQ,CAAC,EAAE;QACrC,IAAME,SAAS,GAAG,IAAIC,eAAM,CAACT,UAAU,EAAEC,MAAM,CAAC;QAChD,IAAI,CAACL,aAAa,CAACc,GAAG,CAACJ,QAAQ,EAAEE,SAAS,CAAC;MAC7C;MAEA,IAAMG,MAAM,GAAG,IAAI,CAACf,aAAa,CAACgB,GAAG,CAACN,QAAQ,CAAC;MAC/C,OAAOK,MAAM,CAAEE,cAAc,CAAC,CAAC;IACjC;EAAC;IAAAf,GAAA;IAAAR,KAAA,EAED,SAAAwB,cAAcA,CACZd,UAAsB,EACtBC,MAAoB,EACpBc,OAA8D,EACtD;MACR,IAAMT,QAAQ,GAAG,IAAI,CAACP,WAAW,CAACC,UAAU,EAAEC,MAAM,CAAC;MAErD,IAAI,CAAC,IAAI,CAACL,aAAa,CAACW,GAAG,CAACD,QAAQ,CAAC,EAAE;QACrC,OAAO,CAAC,CAAC;MACX;MAEA,IAAMK,MAAM,GAAG,IAAI,CAACf,aAAa,CAACgB,GAAG,CAACN,QAAQ,CAAC;MAC/C,IACEK,MAAM,IACNA,MAAM,CAACK,WAAW,CAAC,CAAC,KACnBL,MAAM,CAACM,SAAS,CAAC,CAAC,IAAIN,MAAM,CAACO,QAAQ,CAACH,OAAO,CAAC,CAAC,EAChD;QACAJ,MAAM,CAACQ,eAAe,EAAE;QACxB,OAAOb,QAAQ;MACjB;MACA,OAAO,CAAC,CAAC;IACX;EAAC;IAAAR,GAAA;IAAAR,KAAA,EAED,SAAA8B,gBAAgBA,CAACd,QAAgB,EAAE;MACjC,IAAI,IAAI,CAACV,aAAa,CAACW,GAAG,CAACD,QAAQ,CAAC,EAAE;QACpC,IAAMK,MAAM,GAAG,IAAI,CAACf,aAAa,CAACgB,GAAG,CAACN,QAAQ,CAAC;QAC/C,IAAIK,MAAM,IAAIA,MAAM,CAACM,SAAS,CAAC,CAAC,EAAE;UAChCN,MAAM,CAACQ,eAAe,EAAE;UACxB,IAAIR,MAAM,CAACQ,eAAe,KAAK,CAAC,EAAE;YAChCR,MAAM,CAACU,UAAU,CAAC,CAAC;UACrB;QACF;MACF;IACF;EAAC;AAAA","ignoreList":[]}