{"version":3,"names":["_reactNative","require","_react","_GameInstructions","_interopRequireDefault","_style","_jsxRuntime","CategorizationGame","_ref","game","selectedItems","shuffledOptions","showFeedback","levelColor","onSelectItem","handleSelectItem","useCallback","word","index","jsxs","View","style","styles","gameContainer","children","jsx","default","instructions","categoryContainer","Text","categoryTitle","color","currentCategory","categorySubtitle","wordsContainer","map","isSelected","some","item","value","TouchableOpacity","wordTile","selectedWordTile","backgroundColor","borderColor","onPress","disabled","wordTileText","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/screens/exercises/wordGames/games/CategorizationGame/index.js\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport { useCallback } from \"react\";\nimport GameInstructions from \"../GameInstructions\";\nimport styles from \"./style\";\n\n/**\n * Composant pour le jeu de catégorisation\n *\n * @param {Object} game - Données du jeu\n * @param {Array} selectedItems - Items sélectionnés par l'utilisateur\n * @param {Array} shuffledOptions - Options mélangées\n * @param {boolean} showFeedback - Indique si le feedback est affiché\n * @param {string} levelColor - Couleur associée au niveau\n * @param {Function} onSelectItem - Fonction appelée lors de la sélection d'un mot\n */\nconst CategorizationGame = ({\n  game,\n  selectedItems,\n  shuffledOptions,\n  showFeedback,\n  levelColor,\n  onSelectItem,\n}) => {\n  // Handler stable pour la sélection d'un mot\n  const handleSelectItem = useCallback(\n    (word, index) => () => {\n      if (!showFeedback) {\n        onSelectItem(word, index);\n      }\n    },\n    [onSelectItem, showFeedback]\n  );\n\n  return (\n    <View style={styles.gameContainer}>\n      <GameInstructions instructions={game.instructions} />\n\n      <View style={styles.categoryContainer}>\n        <Text style={styles.categoryTitle}>\n          Category:{\" \"}\n          <Text style={{ color: levelColor }}>{game.currentCategory}</Text>\n        </Text>\n        <Text style={styles.categorySubtitle}>\n          Select all words that belong to this category:\n        </Text>\n      </View>\n\n      <View style={styles.wordsContainer}>\n        {shuffledOptions.map((word, index) => {\n          const isSelected = selectedItems.some((item) => item.value === word);\n\n          return (\n            <TouchableOpacity\n              key={word}\n              style={[\n                styles.wordTile,\n                isSelected && [\n                  styles.selectedWordTile,\n                  {\n                    backgroundColor: `${levelColor}30`,\n                    borderColor: levelColor,\n                  },\n                ],\n              ]}\n              onPress={handleSelectItem(word, index)}\n              disabled={showFeedback}\n            >\n              <Text\n                style={[\n                  styles.wordTileText,\n                  isSelected && { color: levelColor },\n                ]}\n              >\n                {word}\n              </Text>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </View>\n  );\n};\n\nexport default CategorizationGame;\n\n"],"mappings":"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","ignoreList":[]}