674dcf218fafb56d566433b2d8b50c68
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var createStyles = function createStyles() {
  return _reactNative.StyleSheet.create({
    container: {
      marginVertical: 16
    },
    heroCard: {
      marginBottom: 20
    },
    choicesLabel: {
      fontSize: 16,
      fontWeight: "600",
      color: "#374151",
      marginBottom: 16,
      textAlign: "center"
    },
    choicesGrid: {
      gap: 12
    },
    choiceButton: Object.assign({
      backgroundColor: "white",
      borderWidth: 2,
      borderColor: "#e2e8f0",
      borderRadius: 12,
      marginBottom: 8
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#64748b',
        shadowOffset: {
          width: 0,
          height: 1
        },
        shadowOpacity: 0.1,
        shadowRadius: 2
      },
      android: {
        elevation: 2
      }
    })),
    disabledChoice: {
      opacity: 0.6
    },
    choiceContent: {
      flexDirection: 'row',
      alignItems: 'center',
      padding: 16
    },
    choiceIndicator: {
      width: 32,
      height: 32,
      borderRadius: 16,
      backgroundColor: '#f1f5f9',
      justifyContent: 'center',
      alignItems: 'center',
      marginRight: 16
    },
    choiceIndicatorText: {
      fontSize: 16,
      fontWeight: '700',
      color: '#64748b'
    },
    choiceText: {
      flex: 1,
      fontSize: 16,
      fontWeight: "500",
      color: "#374151"
    }
  });
};
var _default = exports.default = createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY3JlYXRlU3R5bGVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImNvbnRhaW5lciIsIm1hcmdpblZlcnRpY2FsIiwiaGVyb0NhcmQiLCJtYXJnaW5Cb3R0b20iLCJjaG9pY2VzTGFiZWwiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJjb2xvciIsInRleHRBbGlnbiIsImNob2ljZXNHcmlkIiwiZ2FwIiwiY2hvaWNlQnV0dG9uIiwiT2JqZWN0IiwiYXNzaWduIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImJvcmRlclJhZGl1cyIsIlBsYXRmb3JtIiwic2VsZWN0IiwiaW9zIiwic2hhZG93Q29sb3IiLCJzaGFkb3dPZmZzZXQiLCJ3aWR0aCIsImhlaWdodCIsInNoYWRvd09wYWNpdHkiLCJzaGFkb3dSYWRpdXMiLCJhbmRyb2lkIiwiZWxldmF0aW9uIiwiZGlzYWJsZWRDaG9pY2UiLCJvcGFjaXR5IiwiY2hvaWNlQ29udGVudCIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwicGFkZGluZyIsImNob2ljZUluZGljYXRvciIsImp1c3RpZnlDb250ZW50IiwibWFyZ2luUmlnaHQiLCJjaG9pY2VJbmRpY2F0b3JUZXh0IiwiY2hvaWNlVGV4dCIsImZsZXgiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsic3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSG9tb3Bob25lQ2hvaWNlcy9zdHlsZS5qcyAtIFZFUlNJT04gTkVUVE9Zw4lFIChzdHlsZXMgc2ltcGxpZmnDqXMpXHJcblxyXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBQbGF0Zm9ybSB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcclxuXHJcbi8qKlxyXG4gKiDwn46vIFN0eWxlcyBuZXR0b3nDqXMgcG91ciBIb21vcGhvbmVDaG9pY2VzXHJcbiAqIERlc2lnbiBjb2jDqXJlbnQgYXZlYyBsZXMgYXV0cmVzIGNvbXBvc2FudHNcclxuICovXHJcbmNvbnN0IGNyZWF0ZVN0eWxlcyA9ICgpID0+XHJcbiAgU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBDT05UQUlORVIgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgY29udGFpbmVyOiB7XHJcbiAgICAgIG1hcmdpblZlcnRpY2FsOiAxNixcclxuICAgIH0sXHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBIRVJPIENBUkQgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgaGVyb0NhcmQ6IHtcclxuICAgICAgbWFyZ2luQm90dG9tOiAyMCxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBDSE9JQ0VTIFNFQ1RJT04gPT09PT09PT09PT09PT09PT09PVxyXG4gICAgY2hvaWNlc0xhYmVsOiB7XHJcbiAgICAgIGZvbnRTaXplOiAxNixcclxuICAgICAgZm9udFdlaWdodDogXCI2MDBcIixcclxuICAgICAgY29sb3I6IFwiIzM3NDE1MVwiLFxyXG4gICAgICBtYXJnaW5Cb3R0b206IDE2LFxyXG4gICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXHJcbiAgICB9LFxyXG5cclxuICAgIGNob2ljZXNHcmlkOiB7XHJcbiAgICAgIGdhcDogMTIsXHJcbiAgICB9LFxyXG5cclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gQ0hPSUNFIEJVVFRPTlMgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgY2hvaWNlQnV0dG9uOiB7XHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ3aGl0ZVwiLFxyXG4gICAgICBib3JkZXJXaWR0aDogMixcclxuICAgICAgYm9yZGVyQ29sb3I6IFwiI2UyZThmMFwiLFxyXG4gICAgICBib3JkZXJSYWRpdXM6IDEyLFxyXG4gICAgICBtYXJnaW5Cb3R0b206IDgsXHJcbiAgICAgIC4uLlBsYXRmb3JtLnNlbGVjdCh7XHJcbiAgICAgICAgaW9zOiB7XHJcbiAgICAgICAgICBzaGFkb3dDb2xvcjogJyM2NDc0OGInLFxyXG4gICAgICAgICAgc2hhZG93T2Zmc2V0OiB7IHdpZHRoOiAwLCBoZWlnaHQ6IDEgfSxcclxuICAgICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMSxcclxuICAgICAgICAgIHNoYWRvd1JhZGl1czogMixcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFuZHJvaWQ6IHtcclxuICAgICAgICAgIGVsZXZhdGlvbjogMixcclxuICAgICAgICB9LFxyXG4gICAgICB9KSxcclxuICAgIH0sXHJcblxyXG4gICAgZGlzYWJsZWRDaG9pY2U6IHtcclxuICAgICAgb3BhY2l0eTogMC42LFxyXG4gICAgfSxcclxuXHJcbiAgICBjaG9pY2VDb250ZW50OiB7XHJcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxyXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgICAgcGFkZGluZzogMTYsXHJcbiAgICB9LFxyXG5cclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gQ0hPSUNFIElORElDQVRPUlMgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgY2hvaWNlSW5kaWNhdG9yOiB7XHJcbiAgICAgIHdpZHRoOiAzMixcclxuICAgICAgaGVpZ2h0OiAzMixcclxuICAgICAgYm9yZGVyUmFkaXVzOiAxNixcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2YxZjVmOScsXHJcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcclxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICAgIG1hcmdpblJpZ2h0OiAxNixcclxuICAgIH0sXHJcblxyXG4gICAgY2hvaWNlSW5kaWNhdG9yVGV4dDoge1xyXG4gICAgICBmb250U2l6ZTogMTYsXHJcbiAgICAgIGZvbnRXZWlnaHQ6ICc3MDAnLFxyXG4gICAgICBjb2xvcjogJyM2NDc0OGInLFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IENIT0lDRSBURVhUID09PT09PT09PT09PT09PT09PT1cclxuICAgIGNob2ljZVRleHQ6IHtcclxuICAgICAgZmxleDogMSxcclxuICAgICAgZm9udFNpemU6IDE2LFxyXG4gICAgICBmb250V2VpZ2h0OiBcIjUwMFwiLFxyXG4gICAgICBjb2xvcjogXCIjMzc0MTUxXCIsXHJcbiAgICB9LFxyXG4gIH0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlU3R5bGVzOyJdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQU1BLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFZQSxDQUFBO0VBQUEsT0FDaEJDLHVCQUFVLENBQUNDLE1BQU0sQ0FBQztJQUVoQkMsU0FBUyxFQUFFO01BQ1RDLGNBQWMsRUFBRTtJQUNsQixDQUFDO0lBR0RDLFFBQVEsRUFBRTtNQUNSQyxZQUFZLEVBQUU7SUFDaEIsQ0FBQztJQUdEQyxZQUFZLEVBQUU7TUFDWkMsUUFBUSxFQUFFLEVBQUU7TUFDWkMsVUFBVSxFQUFFLEtBQUs7TUFDakJDLEtBQUssRUFBRSxTQUFTO01BQ2hCSixZQUFZLEVBQUUsRUFBRTtNQUNoQkssU0FBUyxFQUFFO0lBQ2IsQ0FBQztJQUVEQyxXQUFXLEVBQUU7TUFDWEMsR0FBRyxFQUFFO0lBQ1AsQ0FBQztJQUdEQyxZQUFZLEVBQUFDLE1BQUEsQ0FBQUMsTUFBQTtNQUNWQyxlQUFlLEVBQUUsT0FBTztNQUN4QkMsV0FBVyxFQUFFLENBQUM7TUFDZEMsV0FBVyxFQUFFLFNBQVM7TUFDdEJDLFlBQVksRUFBRSxFQUFFO01BQ2hCZCxZQUFZLEVBQUU7SUFBQyxHQUNaZSxxQkFBUSxDQUFDQyxNQUFNLENBQUM7TUFDakJDLEdBQUcsRUFBRTtRQUNIQyxXQUFXLEVBQUUsU0FBUztRQUN0QkMsWUFBWSxFQUFFO1VBQUVDLEtBQUssRUFBRSxDQUFDO1VBQUVDLE1BQU0sRUFBRTtRQUFFLENBQUM7UUFDckNDLGFBQWEsRUFBRSxHQUFHO1FBQ2xCQyxZQUFZLEVBQUU7TUFDaEIsQ0FBQztNQUNEQyxPQUFPLEVBQUU7UUFDUEMsU0FBUyxFQUFFO01BQ2I7SUFDRixDQUFDLENBQUMsQ0FDSDtJQUVEQyxjQUFjLEVBQUU7TUFDZEMsT0FBTyxFQUFFO0lBQ1gsQ0FBQztJQUVEQyxhQUFhLEVBQUU7TUFDYkMsYUFBYSxFQUFFLEtBQUs7TUFDcEJDLFVBQVUsRUFBRSxRQUFRO01BQ3BCQyxPQUFPLEVBQUU7SUFDWCxDQUFDO0lBR0RDLGVBQWUsRUFBRTtNQUNmWixLQUFLLEVBQUUsRUFBRTtNQUNUQyxNQUFNLEVBQUUsRUFBRTtNQUNWUCxZQUFZLEVBQUUsRUFBRTtNQUNoQkgsZUFBZSxFQUFFLFNBQVM7TUFDMUJzQixjQUFjLEVBQUUsUUFBUTtNQUN4QkgsVUFBVSxFQUFFLFFBQVE7TUFDcEJJLFdBQVcsRUFBRTtJQUNmLENBQUM7SUFFREMsbUJBQW1CLEVBQUU7TUFDbkJqQyxRQUFRLEVBQUUsRUFBRTtNQUNaQyxVQUFVLEVBQUUsS0FBSztNQUNqQkMsS0FBSyxFQUFFO0lBQ1QsQ0FBQztJQUdEZ0MsVUFBVSxFQUFFO01BQ1ZDLElBQUksRUFBRSxDQUFDO01BQ1BuQyxRQUFRLEVBQUUsRUFBRTtNQUNaQyxVQUFVLEVBQUUsS0FBSztNQUNqQkMsS0FBSyxFQUFFO0lBQ1Q7RUFDRixDQUFDLENBQUM7QUFBQTtBQUFDLElBQUFrQyxRQUFBLEdBQUFDLE9BQUEsQ0FBQUMsT0FBQSxHQUVVOUMsWUFBWSIsImlnbm9yZUxpc3QiOltdfQ==