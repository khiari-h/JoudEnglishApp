82990f99c40f4a7e7d344e69be6c92da
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _react = require("react");
var _GameInstructions = _interopRequireDefault(require("../GameInstructions"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var CategorizationGame = function CategorizationGame(_ref) {
  var game = _ref.game,
    selectedItems = _ref.selectedItems,
    shuffledOptions = _ref.shuffledOptions,
    showFeedback = _ref.showFeedback,
    levelColor = _ref.levelColor,
    onSelectItem = _ref.onSelectItem;
  var handleSelectItem = (0, _react.useCallback)(function (word, index) {
    return function () {
      if (!showFeedback) {
        onSelectItem(word, index);
      }
    };
  }, [onSelectItem, showFeedback]);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: _style.default.gameContainer,
    children: [(0, _jsxRuntime.jsx)(_GameInstructions.default, {
      instructions: game.instructions
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: _style.default.categoryContainer,
      children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {
        style: _style.default.categoryTitle,
        children: ["Category:", " ", (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: {
            color: levelColor
          },
          children: game.currentCategory
        })]
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: _style.default.categorySubtitle,
        children: "Select all words that belong to this category:"
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: _style.default.wordsContainer,
      children: shuffledOptions.map(function (word, index) {
        var isSelected = selectedItems.some(function (item) {
          return item.value === word;
        });
        return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
          style: [_style.default.wordTile, isSelected && [_style.default.selectedWordTile, {
            backgroundColor: `${levelColor}30`,
            borderColor: levelColor
          }]],
          onPress: handleSelectItem(word, index),
          disabled: showFeedback,
          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: [_style.default.wordTileText, isSelected && {
              color: levelColor
            }],
            children: word
          })
        }, word);
      })
    })]
  });
};
var _default = exports.default = CategorizationGame;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX0dhbWVJbnN0cnVjdGlvbnMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3N0eWxlIiwiX2pzeFJ1bnRpbWUiLCJDYXRlZ29yaXphdGlvbkdhbWUiLCJfcmVmIiwiZ2FtZSIsInNlbGVjdGVkSXRlbXMiLCJzaHVmZmxlZE9wdGlvbnMiLCJzaG93RmVlZGJhY2siLCJsZXZlbENvbG9yIiwib25TZWxlY3RJdGVtIiwiaGFuZGxlU2VsZWN0SXRlbSIsInVzZUNhbGxiYWNrIiwid29yZCIsImluZGV4IiwianN4cyIsIlZpZXciLCJzdHlsZSIsInN0eWxlcyIsImdhbWVDb250YWluZXIiLCJjaGlsZHJlbiIsImpzeCIsImRlZmF1bHQiLCJpbnN0cnVjdGlvbnMiLCJjYXRlZ29yeUNvbnRhaW5lciIsIlRleHQiLCJjYXRlZ29yeVRpdGxlIiwiY29sb3IiLCJjdXJyZW50Q2F0ZWdvcnkiLCJjYXRlZ29yeVN1YnRpdGxlIiwid29yZHNDb250YWluZXIiLCJtYXAiLCJpc1NlbGVjdGVkIiwic29tZSIsIml0ZW0iLCJ2YWx1ZSIsIlRvdWNoYWJsZU9wYWNpdHkiLCJ3b3JkVGlsZSIsInNlbGVjdGVkV29yZFRpbGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJDb2xvciIsIm9uUHJlc3MiLCJkaXNhYmxlZCIsIndvcmRUaWxlVGV4dCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zY3JlZW5zL2V4ZXJjaXNlcy93b3JkR2FtZXMvZ2FtZXMvQ2F0ZWdvcml6YXRpb25HYW1lL2luZGV4LmpzXG5pbXBvcnQgeyBWaWV3LCBUZXh0LCBUb3VjaGFibGVPcGFjaXR5IH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBHYW1lSW5zdHJ1Y3Rpb25zIGZyb20gXCIuLi9HYW1lSW5zdHJ1Y3Rpb25zXCI7XG5pbXBvcnQgc3R5bGVzIGZyb20gXCIuL3N0eWxlXCI7XG5cbi8qKlxuICogQ29tcG9zYW50IHBvdXIgbGUgamV1IGRlIGNhdMOpZ29yaXNhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBnYW1lIC0gRG9ubsOpZXMgZHUgamV1XG4gKiBAcGFyYW0ge0FycmF5fSBzZWxlY3RlZEl0ZW1zIC0gSXRlbXMgc8OpbGVjdGlvbm7DqXMgcGFyIGwndXRpbGlzYXRldXJcbiAqIEBwYXJhbSB7QXJyYXl9IHNodWZmbGVkT3B0aW9ucyAtIE9wdGlvbnMgbcOpbGFuZ8OpZXNcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gc2hvd0ZlZWRiYWNrIC0gSW5kaXF1ZSBzaSBsZSBmZWVkYmFjayBlc3QgYWZmaWNow6lcbiAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbENvbG9yIC0gQ291bGV1ciBhc3NvY2nDqWUgYXUgbml2ZWF1XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBvblNlbGVjdEl0ZW0gLSBGb25jdGlvbiBhcHBlbMOpZSBsb3JzIGRlIGxhIHPDqWxlY3Rpb24gZCd1biBtb3RcbiAqL1xuY29uc3QgQ2F0ZWdvcml6YXRpb25HYW1lID0gKHtcbiAgZ2FtZSxcbiAgc2VsZWN0ZWRJdGVtcyxcbiAgc2h1ZmZsZWRPcHRpb25zLFxuICBzaG93RmVlZGJhY2ssXG4gIGxldmVsQ29sb3IsXG4gIG9uU2VsZWN0SXRlbSxcbn0pID0+IHtcbiAgLy8gSGFuZGxlciBzdGFibGUgcG91ciBsYSBzw6lsZWN0aW9uIGQndW4gbW90XG4gIGNvbnN0IGhhbmRsZVNlbGVjdEl0ZW0gPSB1c2VDYWxsYmFjayhcbiAgICAod29yZCwgaW5kZXgpID0+ICgpID0+IHtcbiAgICAgIGlmICghc2hvd0ZlZWRiYWNrKSB7XG4gICAgICAgIG9uU2VsZWN0SXRlbSh3b3JkLCBpbmRleCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbb25TZWxlY3RJdGVtLCBzaG93RmVlZGJhY2tdXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLmdhbWVDb250YWluZXJ9PlxuICAgICAgPEdhbWVJbnN0cnVjdGlvbnMgaW5zdHJ1Y3Rpb25zPXtnYW1lLmluc3RydWN0aW9uc30gLz5cblxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jYXRlZ29yeUNvbnRhaW5lcn0+XG4gICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuY2F0ZWdvcnlUaXRsZX0+XG4gICAgICAgICAgQ2F0ZWdvcnk6e1wiIFwifVxuICAgICAgICAgIDxUZXh0IHN0eWxlPXt7IGNvbG9yOiBsZXZlbENvbG9yIH19PntnYW1lLmN1cnJlbnRDYXRlZ29yeX08L1RleHQ+XG4gICAgICAgIDwvVGV4dD5cbiAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5jYXRlZ29yeVN1YnRpdGxlfT5cbiAgICAgICAgICBTZWxlY3QgYWxsIHdvcmRzIHRoYXQgYmVsb25nIHRvIHRoaXMgY2F0ZWdvcnk6XG4gICAgICAgIDwvVGV4dD5cbiAgICAgIDwvVmlldz5cblxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy53b3Jkc0NvbnRhaW5lcn0+XG4gICAgICAgIHtzaHVmZmxlZE9wdGlvbnMubWFwKCh3b3JkLCBpbmRleCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGlzU2VsZWN0ZWQgPSBzZWxlY3RlZEl0ZW1zLnNvbWUoKGl0ZW0pID0+IGl0ZW0udmFsdWUgPT09IHdvcmQpO1xuXG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxUb3VjaGFibGVPcGFjaXR5XG4gICAgICAgICAgICAgIGtleT17d29yZH1cbiAgICAgICAgICAgICAgc3R5bGU9e1tcbiAgICAgICAgICAgICAgICBzdHlsZXMud29yZFRpbGUsXG4gICAgICAgICAgICAgICAgaXNTZWxlY3RlZCAmJiBbXG4gICAgICAgICAgICAgICAgICBzdHlsZXMuc2VsZWN0ZWRXb3JkVGlsZSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBgJHtsZXZlbENvbG9yfTMwYCxcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6IGxldmVsQ29sb3IsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgIG9uUHJlc3M9e2hhbmRsZVNlbGVjdEl0ZW0od29yZCwgaW5kZXgpfVxuICAgICAgICAgICAgICBkaXNhYmxlZD17c2hvd0ZlZWRiYWNrfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgIHN0eWxlPXtbXG4gICAgICAgICAgICAgICAgICBzdHlsZXMud29yZFRpbGVUZXh0LFxuICAgICAgICAgICAgICAgICAgaXNTZWxlY3RlZCAmJiB7IGNvbG9yOiBsZXZlbENvbG9yIH0sXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHt3b3JkfVxuICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8L1RvdWNoYWJsZU9wYWNpdHk+XG4gICAgICAgICAgKTtcbiAgICAgICAgfSl9XG4gICAgICA8L1ZpZXc+XG4gICAgPC9WaWV3PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2F0ZWdvcml6YXRpb25HYW1lO1xuXG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsaUJBQUEsR0FBQUMsc0JBQUEsQ0FBQUgsT0FBQTtBQUNBLElBQUFJLE1BQUEsR0FBQUQsc0JBQUEsQ0FBQUgsT0FBQTtBQUE2QixJQUFBSyxXQUFBLEdBQUFMLE9BQUE7QUFZN0IsSUFBTU0sa0JBQWtCLEdBQUcsU0FBckJBLGtCQUFrQkEsQ0FBQUMsSUFBQSxFQU9sQjtFQUFBLElBTkpDLElBQUksR0FBQUQsSUFBQSxDQUFKQyxJQUFJO0lBQ0pDLGFBQWEsR0FBQUYsSUFBQSxDQUFiRSxhQUFhO0lBQ2JDLGVBQWUsR0FBQUgsSUFBQSxDQUFmRyxlQUFlO0lBQ2ZDLFlBQVksR0FBQUosSUFBQSxDQUFaSSxZQUFZO0lBQ1pDLFVBQVUsR0FBQUwsSUFBQSxDQUFWSyxVQUFVO0lBQ1ZDLFlBQVksR0FBQU4sSUFBQSxDQUFaTSxZQUFZO0VBR1osSUFBTUMsZ0JBQWdCLEdBQUcsSUFBQUMsa0JBQVcsRUFDbEMsVUFBQ0MsSUFBSSxFQUFFQyxLQUFLO0lBQUEsT0FBSyxZQUFNO01BQ3JCLElBQUksQ0FBQ04sWUFBWSxFQUFFO1FBQ2pCRSxZQUFZLENBQUNHLElBQUksRUFBRUMsS0FBSyxDQUFDO01BQzNCO0lBQ0YsQ0FBQztFQUFBLEdBQ0QsQ0FBQ0osWUFBWSxFQUFFRixZQUFZLENBQzdCLENBQUM7RUFFRCxPQUNFLElBQUFOLFdBQUEsQ0FBQWEsSUFBQSxFQUFDbkIsWUFBQSxDQUFBb0IsSUFBSTtJQUFDQyxLQUFLLEVBQUVDLGNBQU0sQ0FBQ0MsYUFBYztJQUFBQyxRQUFBLEdBQ2hDLElBQUFsQixXQUFBLENBQUFtQixHQUFBLEVBQUN0QixpQkFBQSxDQUFBdUIsT0FBZ0I7TUFBQ0MsWUFBWSxFQUFFbEIsSUFBSSxDQUFDa0I7SUFBYSxDQUFFLENBQUMsRUFFckQsSUFBQXJCLFdBQUEsQ0FBQWEsSUFBQSxFQUFDbkIsWUFBQSxDQUFBb0IsSUFBSTtNQUFDQyxLQUFLLEVBQUVDLGNBQU0sQ0FBQ00saUJBQWtCO01BQUFKLFFBQUEsR0FDcEMsSUFBQWxCLFdBQUEsQ0FBQWEsSUFBQSxFQUFDbkIsWUFBQSxDQUFBNkIsSUFBSTtRQUFDUixLQUFLLEVBQUVDLGNBQU0sQ0FBQ1EsYUFBYztRQUFBTixRQUFBLEdBQUMsV0FDeEIsRUFBQyxHQUFHLEVBQ2IsSUFBQWxCLFdBQUEsQ0FBQW1CLEdBQUEsRUFBQ3pCLFlBQUEsQ0FBQTZCLElBQUk7VUFBQ1IsS0FBSyxFQUFFO1lBQUVVLEtBQUssRUFBRWxCO1VBQVcsQ0FBRTtVQUFBVyxRQUFBLEVBQUVmLElBQUksQ0FBQ3VCO1FBQWUsQ0FBTyxDQUFDO01BQUEsQ0FDN0QsQ0FBQyxFQUNQLElBQUExQixXQUFBLENBQUFtQixHQUFBLEVBQUN6QixZQUFBLENBQUE2QixJQUFJO1FBQUNSLEtBQUssRUFBRUMsY0FBTSxDQUFDVyxnQkFBaUI7UUFBQVQsUUFBQSxFQUFDO01BRXRDLENBQU0sQ0FBQztJQUFBLENBQ0gsQ0FBQyxFQUVQLElBQUFsQixXQUFBLENBQUFtQixHQUFBLEVBQUN6QixZQUFBLENBQUFvQixJQUFJO01BQUNDLEtBQUssRUFBRUMsY0FBTSxDQUFDWSxjQUFlO01BQUFWLFFBQUEsRUFDaENiLGVBQWUsQ0FBQ3dCLEdBQUcsQ0FBQyxVQUFDbEIsSUFBSSxFQUFFQyxLQUFLLEVBQUs7UUFDcEMsSUFBTWtCLFVBQVUsR0FBRzFCLGFBQWEsQ0FBQzJCLElBQUksQ0FBQyxVQUFDQyxJQUFJO1VBQUEsT0FBS0EsSUFBSSxDQUFDQyxLQUFLLEtBQUt0QixJQUFJO1FBQUEsRUFBQztRQUVwRSxPQUNFLElBQUFYLFdBQUEsQ0FBQW1CLEdBQUEsRUFBQ3pCLFlBQUEsQ0FBQXdDLGdCQUFnQjtVQUVmbkIsS0FBSyxFQUFFLENBQ0xDLGNBQU0sQ0FBQ21CLFFBQVEsRUFDZkwsVUFBVSxJQUFJLENBQ1pkLGNBQU0sQ0FBQ29CLGdCQUFnQixFQUN2QjtZQUNFQyxlQUFlLEVBQUUsR0FBRzlCLFVBQVUsSUFBSTtZQUNsQytCLFdBQVcsRUFBRS9CO1VBQ2YsQ0FBQyxDQUNGLENBQ0Q7VUFDRmdDLE9BQU8sRUFBRTlCLGdCQUFnQixDQUFDRSxJQUFJLEVBQUVDLEtBQUssQ0FBRTtVQUN2QzRCLFFBQVEsRUFBRWxDLFlBQWE7VUFBQVksUUFBQSxFQUV2QixJQUFBbEIsV0FBQSxDQUFBbUIsR0FBQSxFQUFDekIsWUFBQSxDQUFBNkIsSUFBSTtZQUNIUixLQUFLLEVBQUUsQ0FDTEMsY0FBTSxDQUFDeUIsWUFBWSxFQUNuQlgsVUFBVSxJQUFJO2NBQUVMLEtBQUssRUFBRWxCO1lBQVcsQ0FBQyxDQUNuQztZQUFBVyxRQUFBLEVBRURQO1VBQUksQ0FDRDtRQUFDLEdBckJGQSxJQXNCVyxDQUFDO01BRXZCLENBQUM7SUFBQyxDQUNFLENBQUM7RUFBQSxDQUNILENBQUM7QUFFWCxDQUFDO0FBQUMsSUFBQStCLFFBQUEsR0FBQUMsT0FBQSxDQUFBdkIsT0FBQSxHQUVhbkIsa0JBQWtCIiwiaWdub3JlTGlzdCI6W119