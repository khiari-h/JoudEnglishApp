8eddb069b1cd275c93d9c228f9251c21
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = exports.default = {
  title: "B2 Professional Spelling Rules & Academic Patterns",
  description: "Master advanced spelling rules and professional terminology at B2 upper-intermediate level",
  exercises: [{
    type: "spelling_rule",
    rule: "Greek root 'chron-': Means 'time'",
    instruction: "Apply the rule: Combine 'chron-' with 'logical' (in time order)",
    correctAnswer: "chronological",
    hasHint: true,
    hint: "'Chron-' (time) + 'logical' = arranged by time.",
    explanation: "Greek 'chronos' (time): chronological, chronic, synchronize, chronicle, chronometer."
  }, {
    type: "spelling_rule",
    rule: "Greek root 'dem-': Means 'people'",
    instruction: "Apply the rule: Combine 'dem-' with 'graphic' (about people)",
    correctAnswer: "demographic",
    hasHint: true,
    hint: "'Dem-' (people) + 'graphic' = data about populations.",
    explanation: "Greek 'demos' (people): demographic, democracy, epidemic, pandemic, demagogue."
  }, {
    type: "spelling_rule",
    rule: "Latin root 'corp-': Means 'body'",
    instruction: "Apply the rule: Add prefix to 'corporate' to mean 'include into a body'",
    correctAnswer: "incorporate",
    hasHint: true,
    hint: "Add 'in-' to mean bringing into the corporate body.",
    explanation: "Latin 'corpus' (body): incorporate, corporation, corporal, corps, corpse."
  }, {
    type: "spelling_rule",
    rule: "Greek root 'techn-': Means 'skill' or 'art'",
    instruction: "Apply the rule: Combine 'techn-' with 'ician' (skilled person)",
    correctAnswer: "technician",
    hasHint: true,
    hint: "'Techn-' (skill) + 'ician' = skilled person.",
    explanation: "Greek 'techne' (art/skill): technician, technical, technique, technology."
  }, {
    type: "spelling_rule",
    rule: "Latin root 'struct-': Means 'to build'",
    instruction: "Apply the rule: Add prefix to 'structure' to mean 'build below'",
    correctAnswer: "infrastructure",
    hasHint: true,
    hint: "'Infra-' means below or beneath.",
    explanation: "Latin 'struere' (build): infrastructure, construct, instruct, destructive, obstruct."
  }, {
    type: "spelling_rule",
    rule: "Greek root 'log-': Means 'word' or 'study'",
    instruction: "Apply the rule: Combine 'psych-' + 'log-' + 'ist' (mind study person)",
    correctAnswer: "psychologist",
    hasHint: true,
    hint: "'Psych-' (mind) + 'log-' (study) + 'ist' (person).",
    explanation: "Greek 'logos' (word/study): psychologist, biologist, geologist, anthropologist."
  }, {
    type: "spelling_rule",
    rule: "Latin root 'miss/mit-': Means 'to send'",
    instruction: "Apply the rule: Add prefix to 'mission' to mean 'send across'",
    correctAnswer: "transmission",
    hasHint: true,
    hint: "'Trans-' (across) + 'mission' = sending across.",
    explanation: "Latin 'mittere' (send): transmission, admission, commission, permission, submission."
  }, {
    type: "spelling_rule",
    rule: "Greek root 'path-': Means 'feeling' or 'disease'",
    instruction: "Apply the rule: Combine 'sym-' + 'path-' + 'y' (feeling with)",
    correctAnswer: "sympathy",
    hasHint: true,
    hint: "'Sym-' (with) + 'path-' (feeling) = feeling with someone.",
    explanation: "Greek 'pathos' (feeling): sympathy, empathy, pathology, apathy, telepathy."
  }, {
    type: "spelling_rule",
    rule: "Latin root 'vert/vers-': Means 'to turn'",
    instruction: "Apply the rule: Add prefix to 'verse' to mean 'turn against'",
    correctAnswer: "adverse",
    hasHint: true,
    hint: "'Ad-' becomes 'ad-' + 'verse' = turned against.",
    explanation: "Latin 'vertere' (turn): adverse, reverse, diverse, convert, invert, universe."
  }, {
    type: "spelling_rule",
    rule: "Greek root 'morph-': Means 'shape' or 'form'",
    instruction: "Apply the rule: Add prefix to 'morph' to mean 'change shape'",
    correctAnswer: "metamorphosis",
    hasHint: true,
    hint: "'Meta-' (change) + 'morph-' (shape) + 'osis' (process).",
    explanation: "Greek 'morphe' (form): metamorphosis, morphology, anthropomorphic, amorphous."
  }, {
    type: "spelling_rule",
    rule: "Latin root 'cred-': Means 'to believe'",
    instruction: "Apply the rule: Add suffix to 'cred' to mean 'able to be believed'",
    correctAnswer: "credible",
    hasHint: true,
    hint: "'Cred-' (believe) + 'ible' (able to be).",
    explanation: "Latin 'credere' (believe): credible, incredible, credit, credentials, creed."
  }, {
    type: "spelling_rule",
    rule: "Greek root 'phon-': Means 'sound'",
    instruction: "Apply the rule: Combine 'sym-' + 'phon-' + 'y' (sounds together)",
    correctAnswer: "symphony",
    hasHint: true,
    hint: "'Sym-' (together) + 'phon-' (sound) = sounds together.",
    explanation: "Greek 'phone' (sound): symphony, telephone, phonics, microphone, saxophone."
  }, {
    type: "spelling_rule",
    rule: "Latin root 'scrib/script-': Means 'to write'",
    instruction: "Apply the rule: Add prefix to 'script' to mean 'write under'",
    correctAnswer: "subscription",
    hasHint: true,
    hint: "'Sub-' (under) + 'script' (write) = writing under/signing.",
    explanation: "Latin 'scribere' (write): subscription, prescription, manuscript, description."
  }, {
    type: "spelling_rule",
    rule: "Greek root 'soph-': Means 'wisdom'",
    instruction: "Apply the rule: Combine 'phil-' + 'soph-' + 'y' (love of wisdom)",
    correctAnswer: "philosophy",
    hasHint: true,
    hint: "'Phil-' (love) + 'soph-' (wisdom) = love of wisdom.",
    explanation: "Greek 'sophia' (wisdom): philosophy, sophisticated, sophomore, sophistry."
  }, {
    type: "spelling_rule",
    rule: "Latin root 'voc/vok-': Means 'to call'",
    instruction: "Apply the rule: Add prefix to 'vocate' to mean 'call forth'",
    correctAnswer: "evocative",
    hasHint: true,
    hint: "'E-' (out) + 'voc-' (call) + 'ative' (tending to).",
    explanation: "Latin 'vocare' (call): evocative, vocabulary, vocation, advocate, revoke."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'analyze': Verb to noun transformation",
    instruction: "Apply the rule: Change 'analyze' to the noun form",
    correctAnswer: "analysis",
    hasHint: true,
    hint: "Greek origin changes '-yze' to '-ysis' for the noun.",
    explanation: "Greek pattern: analyze → analysis, paralyze → paralysis, catalyze → catalysis."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'hypothesis': Singular to plural",
    instruction: "Apply the rule: Form the plural of 'hypothesis'",
    correctAnswer: "hypotheses",
    hasHint: true,
    hint: "Greek words ending '-is' change to '-es' in plural.",
    explanation: "Greek plurals: hypothesis → hypotheses, thesis → theses, crisis → crises."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'criterion': Singular to plural",
    instruction: "Apply the rule: Form the plural of 'criterion'",
    correctAnswer: "criteria",
    hasHint: true,
    hint: "Greek words ending '-on' change to '-a' in plural.",
    explanation: "Greek plurals: criterion → criteria, phenomenon → phenomena, automaton → automata."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'synthesis': Related adjective",
    instruction: "Apply the rule: Form the adjective from 'synthesis'",
    correctAnswer: "synthetic",
    hasHint: true,
    hint: "Replace '-sis' with '-tic' for the adjective form.",
    explanation: "Greek adjectives: synthesis → synthetic, analysis → analytic, diagnosis → diagnostic."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'economy': Related adjective",
    instruction: "Apply the rule: Form the adjective meaning 'relating to economy'",
    correctAnswer: "economic",
    hasHint: true,
    hint: "Add '-ic' to form adjectives from nouns ending in '-y'.",
    explanation: "Adjective formation: economy → economic, democracy → democratic, autonomy → autonomic."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'establish': Noun form",
    instruction: "Apply the rule: Form the noun from 'establish'",
    correctAnswer: "establishment",
    hasHint: true,
    hint: "Add '-ment' to verbs to form action nouns.",
    explanation: "Verb to noun: establish → establishment, accomplish → accomplishment, astonish → astonishment."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'significant': Noun form",
    instruction: "Apply the rule: Form the noun from 'significant'",
    correctAnswer: "significance",
    hasHint: true,
    hint: "Change '-ant' to '-ance' for the noun form.",
    explanation: "Adjective to noun: significant → significance, relevant → relevance, elegant → elegance."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'maintain': Related adjective",
    instruction: "Apply the rule: Form the adjective meaning 'able to be maintained'",
    correctAnswer: "maintainable",
    hasHint: true,
    hint: "Add '-able' to verbs to mean 'capable of being'.",
    explanation: "Verb to adjective: maintain → maintainable, sustain → sustainable, obtain → obtainable."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'distribute': Noun form",
    instruction: "Apply the rule: Form the noun from 'distribute'",
    correctAnswer: "distribution",
    hasHint: true,
    hint: "Change '-ute' to '-ution' for the noun form.",
    explanation: "Verb to noun: distribute → distribution, contribute → contribution, substitute → substitution."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'constitute': Related adjective",
    instruction: "Apply the rule: Form the adjective from 'constitute'",
    correctAnswer: "constitutional",
    hasHint: true,
    hint: "Add '-ional' to form adjectives from verbs ending '-ute'.",
    explanation: "Verb to adjective: constitute → constitutional, institute → institutional."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'emphasize': Noun form",
    instruction: "Apply the rule: Form the noun from 'emphasize'",
    correctAnswer: "emphasis",
    hasHint: true,
    hint: "Remove '-ize' and add '-is' for Greek origin words.",
    explanation: "Verb to noun: emphasize → emphasis, criticize → crisis (different root), optimize → optimum."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'comprehensive': Noun form",
    instruction: "Apply the rule: Form the noun from 'comprehensive'",
    correctAnswer: "comprehension",
    hasHint: true,
    hint: "Change '-ive' to '-ion' for the action noun.",
    explanation: "Adjective to noun: comprehensive → comprehension, extensive → extension, intensive → intension."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'evaluate': Related adjective",
    instruction: "Apply the rule: Form the adjective meaning 'relating to evaluation'",
    correctAnswer: "evaluative",
    hasHint: true,
    hint: "Add '-ive' to form adjectives from verbs ending '-ate'.",
    explanation: "Verb to adjective: evaluate → evaluative, demonstrate → demonstrative, illustrate → illustrative."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'concept': Related adjective",
    instruction: "Apply the rule: Form the adjective from 'concept'",
    correctAnswer: "conceptual",
    hasHint: true,
    hint: "Add '-ual' to form adjectives from nouns.",
    explanation: "Noun to adjective: concept → conceptual, context → contextual, text → textual."
  }, {
    type: "spelling_rule",
    rule: "Academic family 'acknowledge': Noun form",
    instruction: "Apply the rule: Form the noun from 'acknowledge'",
    correctAnswer: "acknowledgement",
    hasHint: true,
    hint: "Add '-ment' but keep the 'e' in British spelling.",
    explanation: "British: acknowledgement (keeps 'e'). American: acknowledgment (drops 'e')."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'circum-': Means 'around'",
    instruction: "Apply the rule: Add 'circum-' to 'stance' (standing around)",
    correctAnswer: "circumstance",
    hasHint: true,
    hint: "'Circum-' (around) + 'stance' (standing) = conditions around.",
    explanation: "Latin 'circum' (around): circumstance, circumference, circumvent, circumnavigate."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'inter-': Means 'between' or 'among'",
    instruction: "Apply the rule: Add 'inter-' to 'national' (between nations)",
    correctAnswer: "international",
    hasHint: true,
    hint: "'Inter-' (between) + 'national' = between nations.",
    explanation: "Latin 'inter' (between): international, interrupt, interpret, intervene, interview."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'intra-': Means 'within'",
    instruction: "Apply the rule: Add 'intra-' to 'venous' (within veins)",
    correctAnswer: "intravenous",
    hasHint: true,
    hint: "'Intra-' (within) + 'venous' (relating to veins).",
    explanation: "Latin 'intra' (within): intravenous, intramural, intranet, intracellular."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'extra-': Means 'beyond' or 'outside'",
    instruction: "Apply the rule: Add 'extra-' to 'ordinary' (beyond ordinary)",
    correctAnswer: "extraordinary",
    hasHint: true,
    hint: "'Extra-' (beyond) + 'ordinary' = beyond ordinary.",
    explanation: "Latin 'extra' (beyond): extraordinary, extracurricular, extraterrestrial, extract."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-ology': Means 'study of'",
    instruction: "Apply the rule: Add prefix to 'ology' to mean 'study of life'",
    correctAnswer: "biology",
    hasHint: true,
    hint: "'Bio-' (life) + 'ology' (study of) = study of life.",
    explanation: "Greek 'logos' (study): biology, psychology, sociology, geology, technology."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-phobia': Means 'fear of'",
    instruction: "Apply the rule: Combine 'claus-' + 'phobia' (fear of enclosed spaces)",
    correctAnswer: "claustrophobia",
    hasHint: true,
    hint: "'Claustr-' (closed) + 'phobia' (fear) = fear of enclosed spaces.",
    explanation: "Greek 'phobos' (fear): claustrophobia, agoraphobia, xenophobia, arachnophobia."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-cracy': Means 'rule by'",
    instruction: "Apply the rule: Add prefix to 'cracy' to mean 'rule by the people'",
    correctAnswer: "democracy",
    hasHint: true,
    hint: "'Dem-' (people) + 'cracy' (rule) = rule by people.",
    explanation: "Greek 'kratia' (rule): democracy, aristocracy, bureaucracy, autocracy."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-ism': Means 'belief system' or 'practice'",
    instruction: "Apply the rule: Add 'ism' to 'capital' (economic system)",
    correctAnswer: "capitalism",
    hasHint: true,
    hint: "'Capital' + 'ism' = economic system based on capital.",
    explanation: "Belief/system suffix: capitalism, socialism, nationalism, journalism, tourism."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-ist': Means 'person who practices'",
    instruction: "Apply the rule: Add 'ist' to 'journal' (person who writes news)",
    correctAnswer: "journalist",
    hasHint: true,
    hint: "'Journal' + 'ist' = person who writes for journals/news.",
    explanation: "Person suffix: journalist, scientist, economist, therapist, specialist."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'multi-': Means 'many'",
    instruction: "Apply the rule: Add 'multi-' to 'cultural' (many cultures)",
    correctAnswer: "multicultural",
    hasHint: true,
    hint: "'Multi-' (many) + 'cultural' = involving many cultures.",
    explanation: "Latin 'multus' (many): multicultural, multimedia, multinational, multitask."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'mono-': Means 'one' or 'single'",
    instruction: "Apply the rule: Add 'mono-' to 'logue' (speech by one person)",
    correctAnswer: "monologue",
    hasHint: true,
    hint: "'Mono-' (one) + 'logue' (speech) = speech by one person.",
    explanation: "Greek 'monos' (one): monologue, monopoly, monotone, monarchy, monogamy."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'poly-': Means 'many'",
    instruction: "Apply the rule: Add 'poly-' to 'gon' (many-sided figure)",
    correctAnswer: "polygon",
    hasHint: true,
    hint: "'Poly-' (many) + 'gon' (angle) = many-angled figure.",
    explanation: "Greek 'polys' (many): polygon, polyglot, polynomial, polymer, polygamy."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-ward': Means 'in the direction of'",
    instruction: "Apply the rule: Add suffix to 'back' to mean 'toward the back'",
    correctAnswer: "backward",
    hasHint: true,
    hint: "'Back' + 'ward' = in the direction of the back.",
    explanation: "Direction suffix: backward, forward, upward, downward, inward, outward."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'super-': Means 'above' or 'beyond'",
    instruction: "Apply the rule: Add 'super-' to 'natural' (beyond natural)",
    correctAnswer: "supernatural",
    hasHint: true,
    hint: "'Super-' (beyond) + 'natural' = beyond natural laws.",
    explanation: "Latin 'super' (above): supernatural, supervisor, superior, supersonic, supermarket."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'ultra-': Means 'beyond' or 'extremely'",
    instruction: "Apply the rule: Add 'ultra-' to 'modern' (extremely modern)",
    correctAnswer: "ultramodern",
    hasHint: true,
    hint: "'Ultra-' (extremely) + 'modern' = extremely modern.",
    explanation: "Latin 'ultra' (beyond): ultramodern, ultrasound, ultraviolet, ultimate."
  }, {
    type: "spelling_rule",
    rule: "Medical terminology: '-ology' for medical specialties",
    instruction: "Apply the rule: Combine 'cardi-' + 'ology' (heart study)",
    correctAnswer: "cardiology",
    hasHint: true,
    hint: "'Cardi-' (heart) + 'ology' (study) = study of the heart.",
    explanation: "Medical specialties: cardiology, neurology, dermatology, ophthalmology, psychology."
  }, {
    type: "spelling_rule",
    rule: "Legal terminology: '-tion' for legal processes",
    instruction: "Apply the rule: Form the noun from 'prosecute' (legal action)",
    correctAnswer: "prosecution",
    hasHint: true,
    hint: "Change '-ute' to '-ution' for legal process nouns.",
    explanation: "Legal processes: prosecution, litigation, arbitration, jurisdiction, legislation."
  }, {
    type: "spelling_rule",
    rule: "Business terminology: '-ment' for business processes",
    instruction: "Apply the rule: Form the noun from 'invest' (business action)",
    correctAnswer: "investment",
    hasHint: true,
    hint: "Add '-ment' to form business process nouns.",
    explanation: "Business processes: investment, management, development, assessment, agreement."
  }, {
    type: "spelling_rule",
    rule: "Technical terminology: '-ification' for technical processes",
    instruction: "Apply the rule: Combine 'class' + 'ification' (process of classifying)",
    correctAnswer: "classification",
    hasHint: true,
    hint: "Add '-ification' to show the process of making something.",
    explanation: "Technical processes: classification, specification, certification, qualification, modification."
  }, {
    type: "spelling_rule",
    rule: "Academic terminology: '-ization' for academic processes",
    instruction: "Apply the rule: Form the noun from 'standard' (making standard)",
    correctAnswer: "standardization",
    hasHint: true,
    hint: "Add '-ization' to show the process of making something standard.",
    explanation: "Academic processes: standardization, organization, specialization, categorization."
  }, {
    type: "spelling_rule",
    rule: "Scientific terminology: '-ic' for scientific adjectives",
    instruction: "Apply the rule: Form the adjective from 'atom' (relating to atoms)",
    correctAnswer: "atomic",
    hasHint: true,
    hint: "Add '-ic' to form scientific adjectives.",
    explanation: "Scientific adjectives: atomic, genetic, organic, magnetic, electronic, hydraulic."
  }, {
    type: "spelling_rule",
    rule: "Engineering terminology: 'hydro-' for water-related terms",
    instruction: "Apply the rule: Combine 'hydro-' + 'electric' (water-powered electricity)",
    correctAnswer: "hydroelectric",
    hasHint: true,
    hint: "'Hydro-' (water) + 'electric' = powered by water.",
    explanation: "Water-related terms: hydroelectric, hydraulic, hydrogen, hydrology, dehydrate."
  }, {
    type: "spelling_rule",
    rule: "Financial terminology: '-ity' for financial qualities",
    instruction: "Apply the rule: Form the noun from 'liquid' (financial quality)",
    correctAnswer: "liquidity",
    hasHint: true,
    hint: "Add '-ity' to form financial quality nouns.",
    explanation: "Financial qualities: liquidity, profitability, viability, liability, equity."
  }, {
    type: "spelling_rule",
    rule: "IT terminology: 'cyber-' for internet-related terms",
    instruction: "Apply the rule: Combine 'cyber-' + 'security' (internet security)",
    correctAnswer: "cybersecurity",
    hasHint: true,
    hint: "'Cyber-' (internet) + 'security' = internet security.",
    explanation: "Internet-related: cybersecurity, cybercrime, cyberspace, cyberbullying."
  }, {
    type: "spelling_rule",
    rule: "Environmental terminology: 'eco-' for ecology-related terms",
    instruction: "Apply the rule: Combine 'eco-' + 'system' (ecological system)",
    correctAnswer: "ecosystem",
    hasHint: true,
    hint: "'Eco-' (ecology) + 'system' = ecological system.",
    explanation: "Environmental terms: ecosystem, ecology, economy, ecofriendly, ecological."
  }, {
    type: "spelling_rule",
    rule: "Pharmaceutical terminology: '-ine' for chemical compounds",
    instruction: "Apply the rule: Form a chemical name from 'caffeine' pattern using 'nicot-'",
    correctAnswer: "nicotine",
    hasHint: true,
    hint: "Chemical compounds often end in '-ine'.",
    explanation: "Chemical compounds: nicotine, caffeine, morphine, adrenaline, penicillin."
  }, {
    type: "spelling_rule",
    rule: "Psychological terminology: '-therapy' for treatment methods",
    instruction: "Apply the rule: Combine 'psycho-' + 'therapy' (mind treatment)",
    correctAnswer: "psychotherapy",
    hasHint: true,
    hint: "'Psycho-' (mind) + 'therapy' (treatment) = mind treatment.",
    explanation: "Treatment methods: psychotherapy, physiotherapy, chemotherapy, radiotherapy."
  }, {
    type: "spelling_rule",
    rule: "Architectural terminology: '-ture' for structural elements",
    instruction: "Apply the rule: Form the noun from 'architect' (building design)",
    correctAnswer: "architecture",
    hasHint: true,
    hint: "Add '-ure' to form structural nouns.",
    explanation: "Structural terms: architecture, structure, infrastructure, furniture, agriculture."
  }, {
    type: "spelling_rule",
    rule: "Educational terminology: '-al' for educational adjectives",
    instruction: "Apply the rule: Form the adjective from 'education' (relating to education)",
    correctAnswer: "educational",
    hasHint: true,
    hint: "Add '-al' to form educational adjectives.",
    explanation: "Educational adjectives: educational, instructional, institutional, professional."
  }, {
    type: "spelling_rule",
    rule: "Research terminology: '-ical' for research-related adjectives",
    instruction: "Apply the rule: Form the adjective from 'statistic' (relating to statistics)",
    correctAnswer: "statistical",
    hasHint: true,
    hint: "Add '-al' to adjectives ending in '-ic' for emphasis.",
    explanation: "Research adjectives: statistical, analytical, theoretical, empirical, methodical."
  }, {
    type: "spelling_rule",
    rule: "Silent letter pattern: 'mb' combinations at word ends",
    instruction: "Apply the rule: Spell the word meaning 'young sheep' with silent 'b'",
    correctAnswer: "lamb",
    hasHint: true,
    hint: "The 'b' after 'm' at word endings is usually silent.",
    explanation: "Silent 'b' after 'm': lamb, bomb, comb, climb, thumb, tomb, womb."
  }, {
    type: "spelling_rule",
    rule: "Silent letter pattern: 'kn' combinations at word beginnings",
    instruction: "Apply the rule: Spell the word meaning 'sharp cutting tool' with silent 'k'",
    correctAnswer: "knife",
    hasHint: true,
    hint: "The 'k' before 'n' at word beginnings is usually silent.",
    explanation: "Silent 'k' before 'n': knife, knee, know, knock, knight, knot, knit."
  }, {
    type: "spelling_rule",
    rule: "Silent letter pattern: 'wr' combinations",
    instruction: "Apply the rule: Spell the word meaning 'compose text' with silent 'w'",
    correctAnswer: "write",
    hasHint: true,
    hint: "The 'w' before 'r' at word beginnings is usually silent.",
    explanation: "Silent 'w' before 'r': write, wrong, wrap, wrist, wreck, wrinkle, wrath."
  }, {
    type: "spelling_rule",
    rule: "Complex vowel pattern: 'ei' after 'c' making long 'e' sound",
    instruction: "Apply the rule: Spell the word meaning 'upper limit' using 'ei' after 'c'",
    correctAnswer: "ceiling",
    hasHint: true,
    hint: "After 'c', use 'ei' for the long 'e' sound.",
    explanation: "Long 'e' with 'ei' after 'c': ceiling, receive, deceive, perceive, conceive."
  }, {
    type: "spelling_rule",
    rule: "Complex vowel pattern: 'ie' making long 'e' sound (not after 'c')",
    instruction: "Apply the rule: Spell the word meaning 'accomplish' using 'ie'",
    correctAnswer: "achieve",
    hasHint: true,
    hint: "When not after 'c', use 'ie' for the long 'e' sound.",
    explanation: "Long 'e' with 'ie': achieve, believe, relief, field, yield, shield."
  }, {
    type: "spelling_rule",
    rule: "Exception pattern: 'ei' making long 'a' sound",
    instruction: "Apply the rule: Spell the word meaning 'rule by one person' using 'ei'",
    correctAnswer: "reign",
    hasHint: true,
    hint: "Some words use 'ei' to make the long 'a' sound.",
    explanation: "Long 'a' with 'ei': reign, vein, rein, feign, deign, skein."
  }, {
    type: "spelling_rule",
    rule: "Double letter pattern: Words with double consonants from compounding",
    instruction: "Apply the rule: Combine 'room' + 'mate' (person sharing room)",
    correctAnswer: "roommate",
    hasHint: true,
    hint: "Keep both consonants when combining words.",
    explanation: "Double consonants in compounds: roommate, teammate, classmate, bookkeeper."
  }, {
    type: "spelling_rule",
    rule: "Stress-based spelling: Unstressed vowels become schwa",
    instruction: "Apply the rule: Spell the word meaning 'divide' with correct unstressed vowels",
    correctAnswer: "separate",
    hasHint: true,
    hint: "Unstressed syllables often use 'a' even when they sound like 'uh'.",
    explanation: "Schwa in unstressed syllables: separate, chocolate, comfortable, vegetable."
  }, {
    type: "spelling_rule",
    rule: "Borrowed word pattern: French words keeping original spelling",
    instruction: "Apply the rule: Spell the French borrowing meaning 'enthusiasm' keeping 'ou'",
    correctAnswer: "boutique",
    hasHint: true,
    hint: "French words often keep 'ou' pronunciation patterns.",
    explanation: "French borrowings with 'ou': boutique, route, soup, group, troupe."
  }, {
    type: "spelling_rule",
    rule: "Academic spelling pattern: Latin plurals in formal writing",
    instruction: "Apply the rule: Form the plural of 'alumnus' (male graduate)",
    correctAnswer: "alumni",
    hasHint: true,
    hint: "Latin masculine words ending '-us' become '-i' in plural.",
    explanation: "Latin masculine plurals: alumnus → alumni, focus → foci, stimulus → stimuli."
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,