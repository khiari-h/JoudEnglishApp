f506d8660df154415f5f11077229ad53
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _HeroCard = _interopRequireDefault(require("../../../../components/ui/HeroCard"));
var _RevealButton = _interopRequireDefault(require("../../../../components/ui/RevealButton"));
var _ContentSection = _interopRequireDefault(require("../../../../components/ui/ContentSection"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_nbzph7gv6() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyWordCard\\index.js";
  var hash = "65cb5b58ef0add427c11cf849c2fc4fba95562fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyWordCard\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 76,
          column: 1
        }
      },
      "1": {
        start: {
          line: 32,
          column: 17
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "2": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 75,
          column: 4
        }
      },
      "3": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 87,
          column: 2
        }
      },
      "4": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 94,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 28
          }
        },
        loc: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 31
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 24
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 7
          },
          end: {
            line: 63,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 7
          },
          end: {
            line: 55,
            column: 14
          }
        }, {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 62,
            column: 10
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 66,
            column: 7
          },
          end: {
            line: 73,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 7
          },
          end: {
            line: 66,
            column: 17
          }
        }, {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 72,
            column: 10
          }
        }],
        line: 66
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "65cb5b58ef0add427c11cf849c2fc4fba95562fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_nbzph7gv6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nbzph7gv6();
cov_nbzph7gv6().s[0]++;
var VocabularyWordCard = function VocabularyWordCard(_ref) {
  var word = _ref.word,
    translation = _ref.translation,
    definition = _ref.definition,
    example = _ref.example,
    showTranslation = _ref.showTranslation,
    onToggleTranslation = _ref.onToggleTranslation,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_nbzph7gv6().b[0][0]++, "#5E60CE") : _ref$levelColor;
  cov_nbzph7gv6().f[0]++;
  var styles = (cov_nbzph7gv6().s[1]++, (0, _style.default)(levelColor));
  cov_nbzph7gv6().s[2]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_HeroCard.default, {
      content: word,
      fontSize: 42,
      levelColor: levelColor,
      showUnderline: true
    }), (0, _jsxRuntime.jsx)(_RevealButton.default, {
      isRevealed: showTranslation,
      revealedContent: translation,
      revealText: "Reveal Translation",
      hideText: "Hide Translation",
      onToggle: onToggleTranslation,
      levelColor: levelColor
    }), (cov_nbzph7gv6().b[1][0]++, example) && (cov_nbzph7gv6().b[1][1]++, (0, _jsxRuntime.jsx)(_ContentSection.default, {
      title: "Example",
      content: example,
      levelColor: levelColor,
      isItalic: true,
      backgroundColor: "#FAFBFC"
    })), (cov_nbzph7gv6().b[2][0]++, definition) && (cov_nbzph7gv6().b[2][1]++, (0, _jsxRuntime.jsx)(_ContentSection.default, {
      title: "Definition",
      content: definition,
      levelColor: levelColor,
      backgroundColor: "#F8F9FA"
    }))]
  });
};
cov_nbzph7gv6().s[3]++;
VocabularyWordCard.propTypes = {
  word: _propTypes.default.string.isRequired,
  translation: _propTypes.default.string.isRequired,
  definition: _propTypes.default.string,
  example: _propTypes.default.string,
  showTranslation: _propTypes.default.bool.isRequired,
  onToggleTranslation: _propTypes.default.func.isRequired,
  levelColor: _propTypes.default.string
};
cov_nbzph7gv6().s[4]++;
VocabularyWordCard.defaultProps = {
  definition: null,
  example: null,
  levelColor: "#5E60CE"
};
var _default = exports.default = VocabularyWordCard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,