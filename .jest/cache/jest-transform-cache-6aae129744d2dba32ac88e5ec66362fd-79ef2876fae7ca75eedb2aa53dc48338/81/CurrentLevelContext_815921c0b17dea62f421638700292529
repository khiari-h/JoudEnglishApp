8819ab7280289982a1efae4303c9a6ed
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CurrentLevelProvider = CurrentLevelProvider;
exports.useCurrentLevel = useCurrentLevel;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _jsxRuntime = require("react/jsx-runtime");
var CurrentLevelContext = (0, _react.createContext)();
function CurrentLevelProvider(_ref) {
  var children = _ref.children,
    _ref$initialLevel = _ref.initialLevel,
    initialLevel = _ref$initialLevel === void 0 ? "1" : _ref$initialLevel;
  var _useState = (0, _react.useState)(initialLevel),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    currentLevel = _useState2[0],
    setCurrentLevel = _useState2[1];
  return (0, _jsxRuntime.jsx)(CurrentLevelContext.Provider, {
    value: {
      currentLevel: currentLevel,
      setCurrentLevel: setCurrentLevel
    },
    children: children
  });
}
function useCurrentLevel() {
  var context = (0, _react.useContext)(CurrentLevelContext);
  if (!context) {
    throw new Error("useCurrentLevel doit être utilisé dans CurrentLevelProvider");
  }
  return context;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX2pzeFJ1bnRpbWUiLCJDdXJyZW50TGV2ZWxDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIkN1cnJlbnRMZXZlbFByb3ZpZGVyIiwiX3JlZiIsImNoaWxkcmVuIiwiX3JlZiRpbml0aWFsTGV2ZWwiLCJpbml0aWFsTGV2ZWwiLCJfdXNlU3RhdGUiLCJ1c2VTdGF0ZSIsIl91c2VTdGF0ZTIiLCJfc2xpY2VkVG9BcnJheTIiLCJkZWZhdWx0IiwiY3VycmVudExldmVsIiwic2V0Q3VycmVudExldmVsIiwianN4IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInVzZUN1cnJlbnRMZXZlbCIsImNvbnRleHQiLCJ1c2VDb250ZXh0IiwiRXJyb3IiXSwic291cmNlcyI6WyJDdXJyZW50TGV2ZWxDb250ZXh0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG4vLyBDcsOpZSBsZSBjb250ZXh0ZVxyXG5jb25zdCBDdXJyZW50TGV2ZWxDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xyXG5cclxuLy8gUHJvdmlkZXIgcG91ciBlbmdsb2JlciBs4oCZYXBwXHJcbmV4cG9ydCBmdW5jdGlvbiBDdXJyZW50TGV2ZWxQcm92aWRlcih7IGNoaWxkcmVuLCBpbml0aWFsTGV2ZWwgPSBcIjFcIiB9KSB7XHJcbiAgY29uc3QgW2N1cnJlbnRMZXZlbCwgc2V0Q3VycmVudExldmVsXSA9IHVzZVN0YXRlKGluaXRpYWxMZXZlbCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8Q3VycmVudExldmVsQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBjdXJyZW50TGV2ZWwsIHNldEN1cnJlbnRMZXZlbCB9fT5cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgPC9DdXJyZW50TGV2ZWxDb250ZXh0LlByb3ZpZGVyPlxyXG4gICk7XHJcbn1cclxuXHJcbi8vIEhvb2sgZOKAmWFjY8OocyBwcmF0aXF1ZVxyXG5leHBvcnQgZnVuY3Rpb24gdXNlQ3VycmVudExldmVsKCkge1xyXG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KEN1cnJlbnRMZXZlbENvbnRleHQpO1xyXG4gIGlmICghY29udGV4dCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFwidXNlQ3VycmVudExldmVsIGRvaXQgw6p0cmUgdXRpbGlzw6kgZGFucyBDdXJyZW50TGV2ZWxQcm92aWRlclwiKTtcclxuICB9XHJcbiAgcmV0dXJuIGNvbnRleHQ7XHJcbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQTRELElBQUFDLFdBQUEsR0FBQUQsT0FBQTtBQUc1RCxJQUFNRSxtQkFBbUIsR0FBRyxJQUFBQyxvQkFBYSxFQUFDLENBQUM7QUFHcEMsU0FBU0Msb0JBQW9CQSxDQUFBQyxJQUFBLEVBQW1DO0VBQUEsSUFBaENDLFFBQVEsR0FBQUQsSUFBQSxDQUFSQyxRQUFRO0lBQUFDLGlCQUFBLEdBQUFGLElBQUEsQ0FBRUcsWUFBWTtJQUFaQSxZQUFZLEdBQUFELGlCQUFBLGNBQUcsR0FBRyxHQUFBQSxpQkFBQTtFQUNqRSxJQUFBRSxTQUFBLEdBQXdDLElBQUFDLGVBQVEsRUFBQ0YsWUFBWSxDQUFDO0lBQUFHLFVBQUEsT0FBQUMsZUFBQSxDQUFBQyxPQUFBLEVBQUFKLFNBQUE7SUFBdkRLLFlBQVksR0FBQUgsVUFBQTtJQUFFSSxlQUFlLEdBQUFKLFVBQUE7RUFFcEMsT0FDRSxJQUFBVixXQUFBLENBQUFlLEdBQUEsRUFBQ2QsbUJBQW1CLENBQUNlLFFBQVE7SUFBQ0MsS0FBSyxFQUFFO01BQUVKLFlBQVksRUFBWkEsWUFBWTtNQUFFQyxlQUFlLEVBQWZBO0lBQWdCLENBQUU7SUFBQVQsUUFBQSxFQUNwRUE7RUFBUSxDQUNtQixDQUFDO0FBRW5DO0FBR08sU0FBU2EsZUFBZUEsQ0FBQSxFQUFHO0VBQ2hDLElBQU1DLE9BQU8sR0FBRyxJQUFBQyxpQkFBVSxFQUFDbkIsbUJBQW1CLENBQUM7RUFDL0MsSUFBSSxDQUFDa0IsT0FBTyxFQUFFO0lBQ1osTUFBTSxJQUFJRSxLQUFLLENBQUMsNkRBQTZELENBQUM7RUFDaEY7RUFDQSxPQUFPRixPQUFPO0FBQ2hCIiwiaWdub3JlTGlzdCI6W119