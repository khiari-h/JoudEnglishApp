cddd1787e5e5a77bc67dc5efddaa4db3
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var ExerciseCard = function ExerciseCard(_ref) {
  var title = _ref.title,
    description = _ref.description,
    icon = _ref.icon,
    progress = _ref.progress,
    _ref$color = _ref.color,
    color = _ref$color === void 0 ? "#5E60CE" : _ref$color,
    onPress = _ref.onPress,
    _ref$isNew = _ref.isNew,
    isNew = _ref$isNew === void 0 ? false : _ref$isNew;
  var shouldShowProgress = progress > 0;
  var shouldShowNewBadge = !shouldShowProgress && isNew;
  var renderBottomContent = function renderBottomContent() {
    if (shouldShowProgress) {
      return (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: _style.default.progressSection,
        children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: _style.default.progressContainer,
          children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
            style: _style.default.progressBar,
            children: (0, _jsxRuntime.jsx)(_reactNative.View, {
              style: [_style.default.progressFill, {
                width: `${Math.round(Number(progress) || 0)}%`,
                backgroundColor: color
              }],
              testID: "progress-fill"
            })
          }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
            style: [_style.default.progressText, {
              color: color
            }],
            children: [progress, "%"]
          })]
        })
      });
    }
    if (shouldShowNewBadge) {
      return (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: _style.default.badgeContainer,
        children: (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: [_style.default.badge, {
            backgroundColor: `${color}15`
          }],
          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: [_style.default.badgeText, {
              color: color
            }],
            children: "Nouveau"
          })
        })
      });
    }
    return null;
  };
  return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
    style: [_style.default.card, {
      borderLeftColor: color,
      borderLeftWidth: 4
    }],
    onPress: onPress,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: _style.default.topSection,
      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
        style: [_style.default.iconContainer, {
          backgroundColor: `${color}15`
        }],
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _style.default.icon,
          children: icon
        })
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: _style.default.infoContainer,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _style.default.title,
          children: title
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _style.default.description,
          children: description
        })]
      })]
    }), renderBottomContent(), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: _style.default.buttonContainer,
      children: (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: [_style.default.startButton, {
          backgroundColor: color
        }],
        onPress: onPress,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _style.default.buttonText,
          children: "Commencer"
        })
      })
    })]
  });
};
ExerciseCard.propTypes = {
  title: _propTypes.default.string.isRequired,
  description: _propTypes.default.string.isRequired,
  icon: _propTypes.default.string.isRequired,
  progress: _propTypes.default.number.isRequired,
  color: _propTypes.default.string,
  onPress: _propTypes.default.func.isRequired,
  isNew: _propTypes.default.bool
};
ExerciseCard.defaultProps = {
  color: "#5E60CE",
  isNew: false
};
var _default = exports.default = (0, _react.memo)(ExerciseCard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0TmF0aXZlIiwiX3Byb3BUeXBlcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfc3R5bGUiLCJfanN4UnVudGltZSIsIkV4ZXJjaXNlQ2FyZCIsIl9yZWYiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiaWNvbiIsInByb2dyZXNzIiwiX3JlZiRjb2xvciIsImNvbG9yIiwib25QcmVzcyIsIl9yZWYkaXNOZXciLCJpc05ldyIsInNob3VsZFNob3dQcm9ncmVzcyIsInNob3VsZFNob3dOZXdCYWRnZSIsInJlbmRlckJvdHRvbUNvbnRlbnQiLCJqc3giLCJWaWV3Iiwic3R5bGUiLCJzdHlsZXMiLCJwcm9ncmVzc1NlY3Rpb24iLCJjaGlsZHJlbiIsImpzeHMiLCJwcm9ncmVzc0NvbnRhaW5lciIsInByb2dyZXNzQmFyIiwicHJvZ3Jlc3NGaWxsIiwid2lkdGgiLCJNYXRoIiwicm91bmQiLCJOdW1iZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0ZXN0SUQiLCJUZXh0IiwicHJvZ3Jlc3NUZXh0IiwiYmFkZ2VDb250YWluZXIiLCJiYWRnZSIsImJhZGdlVGV4dCIsIlRvdWNoYWJsZU9wYWNpdHkiLCJjYXJkIiwiYm9yZGVyTGVmdENvbG9yIiwiYm9yZGVyTGVmdFdpZHRoIiwidG9wU2VjdGlvbiIsImljb25Db250YWluZXIiLCJpbmZvQ29udGFpbmVyIiwiYnV0dG9uQ29udGFpbmVyIiwic3RhcnRCdXR0b24iLCJidXR0b25UZXh0IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIm51bWJlciIsImZ1bmMiLCJib29sIiwiZGVmYXVsdFByb3BzIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCIsIm1lbW8iXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy9leGVyY2lzZS1jb21tb24vRXhlcmNpc2VDYXJkL2luZGV4LmpzXHJcbmltcG9ydCB7IG1lbW8gfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgVmlldywgVGV4dCwgVG91Y2hhYmxlT3BhY2l0eSB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gXCIuL3N0eWxlXCI7XHJcblxyXG4vKipcclxuICogQ2FydGUgcmVwcsOpc2VudGFudCB1biB0eXBlIGQnZXhlcmNpY2UgZGFucyBsYSBzw6lsZWN0aW9uIGRlcyBleGVyY2ljZXNcclxuICogXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0aXRsZSAtIFRpdHJlIGRlIGwnZXhlcmNpY2VcclxuICogQHBhcmFtIHtzdHJpbmd9IGRlc2NyaXB0aW9uIC0gRGVzY3JpcHRpb24gY291cnRlIGRlIGwnZXhlcmNpY2VcclxuICogQHBhcmFtIHtzdHJpbmd9IGljb24gLSBJY8O0bmUgb3UgZW1vamkgcmVwcsOpc2VudGFudCBsJ2V4ZXJjaWNlXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcm9ncmVzcyAtIFBvdXJjZW50YWdlIGRlIHByb2dyZXNzaW9uICgwLTEwMClcclxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gQ291bGV1ciBwcmluY2lwYWxlIGRlIGxhIGNhcnRlXHJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IG9uUHJlc3MgLSBDYWxsYmFjayBhcHBlbMOpIGF1IGNsaWMgc3VyIGxhIGNhcnRlXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNOZXcgLSBJbmRpcXVlIHNpIGwnZXhlcmNpY2UgZXN0IG5vdXZlYXUgKGJhZGdlIFwiTm91dmVhdVwiKVxyXG4gKi9cclxuY29uc3QgRXhlcmNpc2VDYXJkID0gKHtcclxuICB0aXRsZSxcclxuICBkZXNjcmlwdGlvbixcclxuICBpY29uLFxyXG4gIHByb2dyZXNzLFxyXG4gIGNvbG9yID0gXCIjNUU2MENFXCIsXHJcbiAgb25QcmVzcyxcclxuICBpc05ldyA9IGZhbHNlLFxyXG59KSA9PiB7XHJcbiAgLy8g4pyFIEV4dHJhY3Rpb24gZGUgbGEgbG9naXF1ZSBjb25kaXRpb25uZWxsZSBwb3VyIGFtw6lsaW9yZXIgbGEgbGlzaWJpbGl0w6lcclxuICBjb25zdCBzaG91bGRTaG93UHJvZ3Jlc3MgPSBwcm9ncmVzcyA+IDA7XHJcbiAgY29uc3Qgc2hvdWxkU2hvd05ld0JhZGdlID0gIXNob3VsZFNob3dQcm9ncmVzcyAmJiBpc05ldztcclxuICBcclxuICAvLyDinIUgRMOpdGVybWluYXRpb24gZHUgY29udGVudSDDoCBhZmZpY2hlclxyXG4gIGNvbnN0IHJlbmRlckJvdHRvbUNvbnRlbnQgPSAoKSA9PiB7XHJcbiAgICBpZiAoc2hvdWxkU2hvd1Byb2dyZXNzKSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5wcm9ncmVzc1NlY3Rpb259PlxyXG4gICAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5wcm9ncmVzc0NvbnRhaW5lcn0+XHJcbiAgICAgICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMucHJvZ3Jlc3NCYXJ9PlxyXG4gICAgICAgICAgICAgIHsvKiB0ZXN0SUQgdXRpbGUgcG91ciB2w6lyaWZpZXIgbGEgbGFyZ2V1ciBkeW5hbWlxdWUgZGUgbGEgYmFycmUgZGUgcHJvZ3Jlc3Npb24gZGFucyBsZXMgdGVzdHMgdW5pdGFpcmVzICovfVxyXG4gICAgICAgICAgICAgIDxWaWV3XHJcbiAgICAgICAgICAgICAgICBzdHlsZT17W3N0eWxlcy5wcm9ncmVzc0ZpbGwsIHsgd2lkdGg6IGAke01hdGgucm91bmQoTnVtYmVyKHByb2dyZXNzKSB8fCAwKX0lYCwgYmFja2dyb3VuZENvbG9yOiBjb2xvciB9XX1cclxuICAgICAgICAgICAgICAgIHRlc3RJRD1cInByb2dyZXNzLWZpbGxcIlxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDwvVmlldz5cclxuICAgICAgICAgICAgPFRleHQgc3R5bGU9e1tzdHlsZXMucHJvZ3Jlc3NUZXh0LCB7IGNvbG9yIH1dfT57cHJvZ3Jlc3N9JTwvVGV4dD5cclxuICAgICAgICAgIDwvVmlldz5cclxuICAgICAgICA8L1ZpZXc+XHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmIChzaG91bGRTaG93TmV3QmFkZ2UpIHtcclxuICAgICAgcmV0dXJuIChcclxuICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmJhZGdlQ29udGFpbmVyfT5cclxuICAgICAgICAgIDxWaWV3IHN0eWxlPXtbc3R5bGVzLmJhZGdlLCB7IGJhY2tncm91bmRDb2xvcjogYCR7Y29sb3J9MTVgIH1dfT5cclxuICAgICAgICAgICAgPFRleHQgc3R5bGU9e1tzdHlsZXMuYmFkZ2VUZXh0LCB7IGNvbG9yIH1dfT5Ob3V2ZWF1PC9UZXh0PlxyXG4gICAgICAgICAgPC9WaWV3PlxyXG4gICAgICAgIDwvVmlldz5cclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxUb3VjaGFibGVPcGFjaXR5XHJcbiAgICAgIHN0eWxlPXtbc3R5bGVzLmNhcmQsIHsgYm9yZGVyTGVmdENvbG9yOiBjb2xvciwgYm9yZGVyTGVmdFdpZHRoOiA0IH1dfVxyXG4gICAgICBvblByZXNzPXtvblByZXNzfVxyXG4gICAgPlxyXG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLnRvcFNlY3Rpb259PlxyXG4gICAgICAgIDxWaWV3IHN0eWxlPXtbc3R5bGVzLmljb25Db250YWluZXIsIHsgYmFja2dyb3VuZENvbG9yOiBgJHtjb2xvcn0xNWAgfV19PlxyXG4gICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5pY29ufT57aWNvbn08L1RleHQ+XHJcbiAgICAgICAgPC9WaWV3PlxyXG5cclxuICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmluZm9Db250YWluZXJ9PlxyXG4gICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy50aXRsZX0+e3RpdGxlfTwvVGV4dD5cclxuICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuZGVzY3JpcHRpb259PntkZXNjcmlwdGlvbn08L1RleHQ+XHJcbiAgICAgICAgPC9WaWV3PlxyXG4gICAgICA8L1ZpZXc+XHJcblxyXG4gICAgICB7Lyog4pyFIENvbnRlbnUgY29uZGl0aW9ubmVsIGV4dHJhaXQgZGFucyB1bmUgZm9uY3Rpb24gKi99XHJcbiAgICAgIHtyZW5kZXJCb3R0b21Db250ZW50KCl9XHJcblxyXG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmJ1dHRvbkNvbnRhaW5lcn0+XHJcbiAgICAgICAgPFRvdWNoYWJsZU9wYWNpdHlcclxuICAgICAgICAgIHN0eWxlPXtbc3R5bGVzLnN0YXJ0QnV0dG9uLCB7IGJhY2tncm91bmRDb2xvcjogY29sb3IgfV19XHJcbiAgICAgICAgICBvblByZXNzPXtvblByZXNzfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuYnV0dG9uVGV4dH0+Q29tbWVuY2VyPC9UZXh0PlxyXG4gICAgICAgIDwvVG91Y2hhYmxlT3BhY2l0eT5cclxuICAgICAgPC9WaWV3PlxyXG4gICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxyXG4gICk7XHJcbn07XHJcblxyXG4vLyBQcm9wVHlwZXMgcG91ciBsYSB2YWxpZGF0aW9uIGRlcyBwcm9wc1xyXG5FeGVyY2lzZUNhcmQucHJvcFR5cGVzID0ge1xyXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgZGVzY3JpcHRpb246IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICBpY29uOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgcHJvZ3Jlc3M6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcclxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcclxuICBvblByZXNzOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG4gIGlzTmV3OiBQcm9wVHlwZXMuYm9vbCxcclxufTtcclxuXHJcbi8vIFZhbGV1cnMgcGFyIGTDqWZhdXRcclxuRXhlcmNpc2VDYXJkLmRlZmF1bHRQcm9wcyA9IHtcclxuICBjb2xvcjogXCIjNUU2MENFXCIsXHJcbiAgaXNOZXc6IGZhbHNlLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbWVtbyhFeGVyY2lzZUNhcmQpOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxJQUFBQSxNQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxVQUFBLEdBQUFDLHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBSSxNQUFBLEdBQUFELHNCQUFBLENBQUFILE9BQUE7QUFBNkIsSUFBQUssV0FBQSxHQUFBTCxPQUFBO0FBYTdCLElBQU1NLFlBQVksR0FBRyxTQUFmQSxZQUFZQSxDQUFBQyxJQUFBLEVBUVo7RUFBQSxJQVBKQyxLQUFLLEdBQUFELElBQUEsQ0FBTEMsS0FBSztJQUNMQyxXQUFXLEdBQUFGLElBQUEsQ0FBWEUsV0FBVztJQUNYQyxJQUFJLEdBQUFILElBQUEsQ0FBSkcsSUFBSTtJQUNKQyxRQUFRLEdBQUFKLElBQUEsQ0FBUkksUUFBUTtJQUFBQyxVQUFBLEdBQUFMLElBQUEsQ0FDUk0sS0FBSztJQUFMQSxLQUFLLEdBQUFELFVBQUEsY0FBRyxTQUFTLEdBQUFBLFVBQUE7SUFDakJFLE9BQU8sR0FBQVAsSUFBQSxDQUFQTyxPQUFPO0lBQUFDLFVBQUEsR0FBQVIsSUFBQSxDQUNQUyxLQUFLO0lBQUxBLEtBQUssR0FBQUQsVUFBQSxjQUFHLEtBQUssR0FBQUEsVUFBQTtFQUdiLElBQU1FLGtCQUFrQixHQUFHTixRQUFRLEdBQUcsQ0FBQztFQUN2QyxJQUFNTyxrQkFBa0IsR0FBRyxDQUFDRCxrQkFBa0IsSUFBSUQsS0FBSztFQUd2RCxJQUFNRyxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQW1CQSxDQUFBLEVBQVM7SUFDaEMsSUFBSUYsa0JBQWtCLEVBQUU7TUFD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