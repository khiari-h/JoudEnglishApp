{"version":3,"names":["_ProgressCard","_interopRequireDefault","require","_readingStats","_jsxRuntime","ReadingProgress","_ref","readingData","completedQuestions","levelColor","_ref$expanded","expanded","onToggleExpand","onExercisePress","getDataArray","Array","isArray","exercises","texts","passages","readings","items","dataArray","totalQuestionsCount","calculateTotalQuestions","completedQuestionsCount","calculateCompletedQuestionsCount","totalProgress","calculateTotalProgress","exerciseProgressData","calculateExerciseProgress","formattedExerciseData","map","exercise","title","completed","total","totalQuestions","progress","jsx","default","unit","expandable","categoryData","onCategoryPress","_default","exports"],"sources":["index.js"],"sourcesContent":["// ReadingProgress/index.js - VERSION CORRIGÃ‰E AVEC DÃ‰TECTION AUTO\r\n\r\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\r\nimport {\r\n  calculateTotalQuestions,\r\n  calculateCompletedQuestionsCount,\r\n  calculateTotalProgress,\r\n  calculateExerciseProgress,\r\n} from \"../../../../utils/reading/readingStats.js\";\r\n\r\n/**\r\n * ðŸ“Š ReadingProgress - Version CorrigÃ©e avec dÃ©tection automatique\r\n * âœ… DÃ©tecte automatiquement la structure des donnÃ©es\r\n * âœ… GÃ¨re exercises, texts, passages, etc.\r\n */\r\nconst ReadingProgress = ({\r\n  readingData,\r\n  completedQuestions,\r\n  levelColor,\r\n  expanded = false,\r\n  onToggleExpand,\r\n  onExercisePress,\r\n}) => {\r\n  \r\n  // âœ… DÃ‰TECTION AUTOMATIQUE de la structure\r\n  const getDataArray = () => {\r\n    if (!readingData) return [];\r\n    \r\n    // Si c'est dÃ©jÃ  un tableau directement\r\n    if (Array.isArray(readingData)) {\r\n      return readingData;\r\n    }\r\n    \r\n    // Si c'est un objet avec diffÃ©rentes propriÃ©tÃ©s possibles\r\n    if (typeof readingData === 'object') {\r\n      return readingData.exercises || \r\n             readingData.texts || \r\n             readingData.passages || \r\n             readingData.readings || \r\n             readingData.items || \r\n             [];\r\n    }\r\n    \r\n    return [];\r\n  };\r\n\r\n  const dataArray = getDataArray();\r\n  \r\n  // âœ… UTILISE la vraie structure dÃ©tectÃ©e\r\n  const totalQuestionsCount = calculateTotalQuestions(dataArray);\r\n  const completedQuestionsCount = calculateCompletedQuestionsCount(completedQuestions);\r\n  const totalProgress = calculateTotalProgress(dataArray, completedQuestions);\r\n  const exerciseProgressData = calculateExerciseProgress(dataArray, completedQuestions);\r\n\r\n  // Transformation pour le format ProgressCard\r\n  const formattedExerciseData = exerciseProgressData.map((exercise) => ({\r\n    title: exercise.title,\r\n    completed: exercise.completedQuestions,\r\n    total: exercise.totalQuestions,\r\n    progress: exercise.progress,\r\n  }));\r\n\r\n  return (\r\n    <ProgressCard\r\n      title=\"Progression\" // âœ… Titre uniforme\r\n      progress={totalProgress}\r\n      completed={completedQuestionsCount}\r\n      total={totalQuestionsCount}\r\n      unit=\"questions\"\r\n      levelColor={levelColor}\r\n      expandable\r\n      expanded={expanded}\r\n      onToggleExpand={onToggleExpand}\r\n      categoryData={formattedExerciseData}\r\n      onCategoryPress={onExercisePress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReadingProgress;"],"mappings":";;;;;AAEA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AAKmD,IAAAE,WAAA,GAAAF,OAAA;AAOnD,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAOf;EAAA,IANJC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IACXC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;IAClBC,UAAU,GAAAH,IAAA,CAAVG,UAAU;IAAAC,aAAA,GAAAJ,IAAA,CACVK,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAChBE,cAAc,GAAAN,IAAA,CAAdM,cAAc;IACdC,eAAe,GAAAP,IAAA,CAAfO,eAAe;EAIf,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAI,CAACP,WAAW,EAAE,OAAO,EAAE;IAG3B,IAAIQ,KAAK,CAACC,OAAO,CAACT,WAAW,CAAC,EAAE;MAC9B,OAAOA,WAAW;IACpB;IAGA,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;MACnC,OAAOA,WAAW,CAACU,SAAS,IACrBV,WAAW,CAACW,KAAK,IACjBX,WAAW,CAACY,QAAQ,IACpBZ,WAAW,CAACa,QAAQ,IACpBb,WAAW,CAACc,KAAK,IACjB,EAAE;IACX;IAEA,OAAO,EAAE;EACX,CAAC;EAED,IAAMC,SAAS,GAAGR,YAAY,CAAC,CAAC;EAGhC,IAAMS,mBAAmB,GAAG,IAAAC,qCAAuB,EAACF,SAAS,CAAC;EAC9D,IAAMG,uBAAuB,GAAG,IAAAC,8CAAgC,EAAClB,kBAAkB,CAAC;EACpF,IAAMmB,aAAa,GAAG,IAAAC,oCAAsB,EAACN,SAAS,EAAEd,kBAAkB,CAAC;EAC3E,IAAMqB,oBAAoB,GAAG,IAAAC,uCAAyB,EAACR,SAAS,EAAEd,kBAAkB,CAAC;EAGrF,IAAMuB,qBAAqB,GAAGF,oBAAoB,CAACG,GAAG,CAAC,UAACC,QAAQ;IAAA,OAAM;MACpEC,KAAK,EAAED,QAAQ,CAACC,KAAK;MACrBC,SAAS,EAAEF,QAAQ,CAACzB,kBAAkB;MACtC4B,KAAK,EAAEH,QAAQ,CAACI,cAAc;MAC9BC,QAAQ,EAAEL,QAAQ,CAACK;IACrB,CAAC;EAAA,CAAC,CAAC;EAEH,OACE,IAAAlC,WAAA,CAAAmC,GAAA,EAACvC,aAAA,CAAAwC,OAAY;IACXN,KAAK,EAAC,aAAa;IACnBI,QAAQ,EAAEX,aAAc;IACxBQ,SAAS,EAAEV,uBAAwB;IACnCW,KAAK,EAAEb,mBAAoB;IAC3BkB,IAAI,EAAC,WAAW;IAChBhC,UAAU,EAAEA,UAAW;IACvBiC,UAAU;IACV/B,QAAQ,EAAEA,QAAS;IACnBC,cAAc,EAAEA,cAAe;IAC/B+B,YAAY,EAAEZ,qBAAsB;IACpCa,eAAe,EAAE/B;EAAgB,CAClC,CAAC;AAEN,CAAC;AAAC,IAAAgC,QAAA,GAAAC,OAAA,CAAAN,OAAA,GAEanC,eAAe","ignoreList":[]}