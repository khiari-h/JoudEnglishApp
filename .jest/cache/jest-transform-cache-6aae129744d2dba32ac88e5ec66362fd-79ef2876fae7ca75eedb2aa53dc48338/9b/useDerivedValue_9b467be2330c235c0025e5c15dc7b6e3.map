{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useDerivedValue","_toConsumableArray2","_react","_animation","_core","_PlatformChecker","_worklet_7329842932899_init_data","code","location","sourceMap","version","updater","dependencies","_updater$__closure","initRef","useRef","inputs","values","__closure","shouldBeUseWeb","_dependencies","length","undefined","concat","default","__workletHash","push","current","makeMutable","initialUpdaterRun","sharedValue","useEffect","fun","_e","global","Error","useDerivedValueTs1","__initData","__stackDetails","mapperId","startMapper","stopMapper"],"sources":["useDerivedValue.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport type { SharedValue, WorkletFunction } from '../commonTypes';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\nexport interface DerivedValue<Value = unknown>\n  extends Readonly<Omit<SharedValue<Value>, 'set'>> {\n  /**\n   * @deprecated Derived values are readonly, don't use this method. It's here\n   *   only to prevent breaking changes in TypeScript types. It will be removed\n   *   in the future.\n   */\n  set: SharedValue<Value>['set'];\n}\n\n/**\n * Lets you create new shared values based on existing ones while keeping them\n * reactive.\n *\n * @param updater - A function called whenever at least one of the shared values\n *   or state used in the function body changes.\n * @param dependencies - An optional array of dependencies. Only relevant when\n *   using Reanimated without the Babel plugin on the Web.\n * @returns A new readonly shared value based on a value returned from the\n *   updater function\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useDerivedValue\n */\n// @ts-expect-error This overload is required by our API.\nexport function useDerivedValue<Value>(\n  updater: () => Value,\n  dependencies?: DependencyList\n): DerivedValue<Value>;\n\nexport function useDerivedValue<Value>(\n  updater: WorkletFunction<[], Value>,\n  dependencies?: DependencyList\n): DerivedValue<Value> {\n  const initRef = useRef<SharedValue<Value> | null>(null);\n  let inputs = Object.values(updater.__closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n  }\n\n  // build dependencies\n  if (dependencies === undefined) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(updater));\n  }\n\n  const sharedValue: SharedValue<Value> = initRef.current;\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      sharedValue.value = updater();\n    };\n    const mapperId = startMapper(fun, inputs, [\n      sharedValue as SharedValue<unknown>,\n    ]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  return sharedValue;\n}\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,eAAA,GAAAA,eAAA;AAAA,IAAAC,mBAAA,GAAAP,sBAAA,CAAAC,OAAA;AACb,IAAAO,MAAA,GAAAP,OAAA;AACA,IAAAQ,UAAA,GAAAR,OAAA;AAEA,IAAAS,KAAA,GAAAT,OAAA;AAEA,IAAAU,gBAAA,GAAAV,OAAA;AAAoD,IAAAW,gCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AA8B7C,SAASV,eAAeA,CAC7BW,OAAmC,EACnCC,YAA6B,EACR;EAAA,IAAAC,kBAAA;EACrB,IAAMC,OAAO,GAAG,IAAAC,aAAM,EAA4B,IAAI,CAAC;EACvD,IAAIC,MAAM,GAAGpB,MAAM,CAACqB,MAAM,EAAAJ,kBAAA,GAACF,OAAO,CAACO,SAAS,YAAAL,kBAAA,GAAI,CAAC,CAAC,CAAC;EACnD,IAAI,IAAAM,+BAAc,EAAC,CAAC,EAAE;IAAA,IAAAC,aAAA;IACpB,IAAI,CAACJ,MAAM,CAACK,MAAM,KAAAD,aAAA,GAAIR,YAAY,aAAZQ,aAAA,CAAcC,MAAM,EAAE;MAE1CL,MAAM,GAAGJ,YAAY;IACvB;EACF;EAGA,IAAIA,YAAY,KAAKU,SAAS,EAAE;IAC9BV,YAAY,MAAAW,MAAA,KAAAtB,mBAAA,CAAAuB,OAAA,EAAOR,MAAM,IAAEL,OAAO,CAACc,aAAa,EAAC;EACnD,CAAC,MAAM;IACLb,YAAY,CAACc,IAAI,CAACf,OAAO,CAACc,aAAa,CAAC;EAC1C;EAEA,IAAIX,OAAO,CAACa,OAAO,KAAK,IAAI,EAAE;IAC5Bb,OAAO,CAACa,OAAO,GAAG,IAAAC,iBAAW,EAAC,IAAAC,4BAAiB,EAAClB,OAAO,CAAC,CAAC;EAC3D;EAEA,IAAMmB,WAA+B,GAAGhB,OAAO,CAACa,OAAO;EAEvD,IAAAI,gBAAS,EAAC,YAAM;IACd,IAAMC,GAAG,GAAG;MAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;MAAA,IAAAC,kBAAA,YAAAA,mBAAA,EAAM;QAEhBN,WAAW,CAAC/B,KAAK,GAAGY,OAAO,CAAC,CAAC;MAC/B,CAAC;MAAAyB,kBAAA,CAAAlB,SAAA;QAAAY,WAAA,EADCA,WAAW;QAAAnB,OAAA,EAASA;MAAO;MAAAyB,kBAAA,CAAAX,aAAA;MAAAW,kBAAA,CAAAC,UAAA,GAAA/B,gCAAA;MAAA8B,kBAAA,CAAAE,cAAA,GAAAL,EAAA;MAAA,OAAAG,kBAAA;IAAA,CAFjB,EAGX;IACD,IAAMG,QAAQ,GAAG,IAAAC,iBAAW,EAACR,GAAG,EAAEhB,MAAM,EAAE,CACxCc,WAAW,CACZ,CAAC;IACF,OAAO,YAAM;MACX,IAAAW,gBAAU,EAACF,QAAQ,CAAC;IACtB,CAAC;EACH,CAAC,EAAE3B,YAAY,CAAC;EAEhB,OAAOkB,WAAW;AACpB","ignoreList":[]}