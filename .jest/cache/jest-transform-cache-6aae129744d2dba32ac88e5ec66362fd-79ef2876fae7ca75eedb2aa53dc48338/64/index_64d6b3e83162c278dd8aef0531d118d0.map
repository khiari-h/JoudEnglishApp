{"version":3,"names":["_reactNative","require","_propTypes","_interopRequireDefault","_HeroCard","_RevealButton","_style","_jsxRuntime","cov_bw36uwtyo","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","PhraseCard","_ref","phraseData","showTranslation","onToggleTranslation","_ref$levelColor","levelColor","styles","createStyles","jsx","View","style","container","children","default","content","fontSize","showUnderline","phrase","english","translation","jsxs","lineHeight","isRevealed","revealedContent","revealText","hideText","onToggle","propTypes","PropTypes","shape","string","isRequired","bool","func","defaultProps","_default","exports"],"sources":["index.js"],"sourcesContent":["// PhraseCard/index.js - VERSION ULTRA-NETTOYÃ‰E avec PropTypes\r\nimport { View } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport HeroCard from \"../../../../components/ui/HeroCard\";\r\nimport RevealButton from \"../../../../components/ui/RevealButton\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ðŸŽ¯ PhraseCard - Version Ultra-Simple avec PropTypes\r\n * Phrase anglaise + Reveal traduction franÃ§aise\r\n * SUPPRIMÃ‰ : Example et Context (inutiles)\r\n * \r\n * @param {Object} phraseData - DonnÃ©es de la phrase (english, translation)\r\n * @param {boolean} showTranslation - Ã‰tat d'affichage de la traduction\r\n * @param {function} onToggleTranslation - Fonction pour toggle traduction\r\n * @param {string} levelColor - Couleur du niveau\r\n */\r\nconst PhraseCard = ({\r\n  phraseData,\r\n  showTranslation,\r\n  onToggleTranslation,\r\n  levelColor = \"#5E60CE\",\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n\r\n  // Validation des donnÃ©es\r\n  if (!phraseData) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <HeroCard \r\n          content=\"Loading phrase...\"\r\n          fontSize={24}\r\n          levelColor={levelColor}\r\n          showUnderline={false}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // ðŸŽ¯ DONNÃ‰ES ESSENTIELLES SEULEMENT\r\n  const phrase = phraseData.english;\r\n  const translation = phraseData.translation;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* ðŸŽ¯ PHRASE ANGLAISE - Hero Section */}\r\n      <HeroCard \r\n        content={phrase}\r\n        fontSize={28} // AdaptÃ© pour phrases (plus longues que mots)\r\n        levelColor={levelColor}\r\n        showUnderline\r\n        lineHeight={36} // Pour phrases multi-lignes\r\n      />\r\n      \r\n      {/* ðŸ”˜ BOUTON REVEAL TRADUCTION */}\r\n      <RevealButton\r\n        isRevealed={showTranslation}\r\n        revealedContent={translation}\r\n        revealText=\"Reveal Translation\"\r\n        hideText=\"Hide Translation\"\r\n        onToggle={onToggleTranslation}\r\n        levelColor={levelColor}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n// âœ… PropTypes pour PhraseCard - Corrige toutes les erreurs\r\nPhraseCard.propTypes = {\r\n  phraseData: PropTypes.shape({\r\n    english: PropTypes.string.isRequired,\r\n    translation: PropTypes.string.isRequired,\r\n  }),\r\n  showTranslation: PropTypes.bool.isRequired,\r\n  onToggleTranslation: PropTypes.func.isRequired,\r\n  levelColor: PropTypes.string,\r\n};\r\n\r\n// âœ… Valeurs par dÃ©faut pour PhraseCard\r\nPhraseCard.defaultProps = {\r\n  phraseData: null,\r\n  levelColor: \"#5E60CE\",\r\n};\r\n\r\nexport default PhraseCard;\r\n"],"mappings":"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","ignoreList":[]}