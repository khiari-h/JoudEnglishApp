{"version":3,"names":["_getJestObj","mock","RN","jest","requireActual","Object","assign","ActivityIndicator","fn","_interopRequireDefault","require","_react","_reactNative","_ButtonSpinner","_jsxRuntime","_require3","describe","beforeEach","_require","mockClear","it","mockSize","mockColor","render","jsx","default","size","color","_require2","expect","toHaveBeenCalledTimes","toHaveBeenCalledWith","objectContaining"],"sources":["ButtonSpinner.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport ButtonSpinner from '../../../../src/components/ui/Button/ButtonSpinner';\r\n\r\n// Mock ActivityIndicator comme un composant React mockable\r\njest.mock('react-native', () => {\r\n  const RN = jest.requireActual('react-native');\r\n  return {\r\n    ...RN,\r\n    ActivityIndicator: jest.fn(() => null),\r\n  };\r\n});\r\n\r\ndescribe('ButtonSpinner', () => {\r\n  beforeEach(() => {\r\n    // On récupère le mock et on le nettoie avant chaque test\r\n    const { ActivityIndicator } = require('react-native');\r\n    if (ActivityIndicator.mockClear) {\r\n      ActivityIndicator.mockClear();\r\n    }\r\n  });\r\n\r\n  it('devrait rendre un ActivityIndicator avec les props size et color', () => {\r\n    const mockSize = 'large';\r\n    const mockColor = '#FF0000';\r\n    \r\n    render(<ButtonSpinner size={mockSize} color={mockColor} />);\r\n    \r\n    const { ActivityIndicator } = require('react-native');\r\n    \r\n    expect(ActivityIndicator).toHaveBeenCalledTimes(1);\r\n    expect(ActivityIndicator).toHaveBeenCalledWith(\r\n      expect.objectContaining({\r\n        size: mockSize,\r\n        color: mockColor,\r\n      }),\r\n      {}\r\n    );\r\n  });\r\n});"],"mappings":"AAKAA,WAAA,GAAKC,IAAI,CAAC,cAAc,EAAE,YAAM;EAC9B,IAAMC,EAAE,GAAGC,IAAI,CAACC,aAAa,CAAC,cAAc,CAAC;EAC7C,OAAAC,MAAA,CAAAC,MAAA,KACKJ,EAAE;IACLK,iBAAiB,EAAEJ,IAAI,CAACK,EAAE,CAAC;MAAA,OAAM,IAAI;IAAA;EAAC;AAE1C,CAAC,CAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AAXH,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,cAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA+E,IAAAI,WAAA,GAAAJ,OAAA;AAAA,SAAAV,YAAA;EAAA,IAAAe,SAAA,GAAAL,OAAA;IAAAP,IAAA,GAAAY,SAAA,CAAAZ,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAW/Ea,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,UAAU,CAAC,YAAM;IAEf,IAAAC,QAAA,GAA8BR,OAAO,CAAC,cAAc,CAAC;MAA7CH,iBAAiB,GAAAW,QAAA,CAAjBX,iBAAiB;IACzB,IAAIA,iBAAiB,CAACY,SAAS,EAAE;MAC/BZ,iBAAiB,CAACY,SAAS,CAAC,CAAC;IAC/B;EACF,CAAC,CAAC;EAEFC,EAAE,CAAC,kEAAkE,EAAE,YAAM;IAC3E,IAAMC,QAAQ,GAAG,OAAO;IACxB,IAAMC,SAAS,GAAG,SAAS;IAE3B,IAAAC,mBAAM,EAAC,IAAAT,WAAA,CAAAU,GAAA,EAACX,cAAA,CAAAY,OAAa;MAACC,IAAI,EAAEL,QAAS;MAACM,KAAK,EAAEL;IAAU,CAAE,CAAC,CAAC;IAE3D,IAAAM,SAAA,GAA8BlB,OAAO,CAAC,cAAc,CAAC;MAA7CH,iBAAiB,GAAAqB,SAAA,CAAjBrB,iBAAiB;IAEzBsB,MAAM,CAACtB,iBAAiB,CAAC,CAACuB,qBAAqB,CAAC,CAAC,CAAC;IAClDD,MAAM,CAACtB,iBAAiB,CAAC,CAACwB,oBAAoB,CAC5CF,MAAM,CAACG,gBAAgB,CAAC;MACtBN,IAAI,EAAEL,QAAQ;MACdM,KAAK,EAAEL;IACT,CAAC,CAAC,EACF,CAAC,CACH,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}