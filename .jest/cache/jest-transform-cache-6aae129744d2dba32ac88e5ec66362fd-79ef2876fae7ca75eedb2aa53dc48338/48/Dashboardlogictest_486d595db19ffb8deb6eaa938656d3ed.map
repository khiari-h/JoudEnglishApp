{"version":3,"names":["describe","it","calculateProgress","current","total","Math","min","round","expect","toBe","isValidLevel","level","validLevels","includes","getValidLevel","undefined","formatActivityMetadata","activity","_activity$metadata","_activity$metadata2","title","progress","metadata","word","totalWords","type","formatted","_activity$metadata3","_activity$metadata4","incompleteActivity","getLevelColor","colors","isLoading","states","Object","values","some","state"],"sources":["Dashboard.logic.test.js"],"sourcesContent":["// __tests__/screens/Dashboard/Dashboard.logic.test.js\n\n// Tests de la logique métier du Dashboard sans rendu complet\ndescribe('Dashboard - Logique métier', () => {\n  \n  describe('Calcul de progression', () => {\n    it('devrait calculer correctement le pourcentage de progression', () => {\n      const calculateProgress = (current, total) => {\n        if (!total || total === 0) return 0;\n        return Math.min(Math.round((current / total) * 100), 100);\n      };\n\n      expect(calculateProgress(5, 10)).toBe(50);\n      expect(calculateProgress(10, 10)).toBe(100);\n      expect(calculateProgress(15, 10)).toBe(100); // Limité à 100%\n      expect(calculateProgress(0, 10)).toBe(0);\n      expect(calculateProgress(5, 0)).toBe(0);\n    });\n  });\n\n  describe('Gestion des niveaux', () => {\n    it('devrait valider les niveaux correctement', () => {\n      const isValidLevel = (level) => {\n        const validLevels = ['1', '2', '3', '4', '5', '6', 'bonus'];\n        return validLevels.includes(level);\n      };\n\n      expect(isValidLevel('1')).toBe(true);\n      expect(isValidLevel('6')).toBe(true);\n      expect(isValidLevel('bonus')).toBe(true);\n      expect(isValidLevel('7')).toBe(false);\n      expect(isValidLevel('')).toBe(false);\n      expect(isValidLevel(null)).toBe(false);\n    });\n\n    it('devrait retourner le niveau par défaut si invalide', () => {\n      const getValidLevel = (level) => {\n        const validLevels = ['1', '2', '3', '4', '5', '6', 'bonus'];\n        return validLevels.includes(level) ? level : '1';\n      };\n\n      expect(getValidLevel('3')).toBe('3');\n      expect(getValidLevel('invalid')).toBe('1');\n      expect(getValidLevel(null)).toBe('1');\n      expect(getValidLevel(undefined)).toBe('1');\n    });\n  });\n\n  describe('Formatage des données', () => {\n    it('devrait formater les métadonnées d\\'activité', () => {\n      const formatActivityMetadata = (activity) => {\n        if (!activity) return null;\n        \n        return {\n          title: activity.title || 'Activité inconnue',\n          level: activity.level || '1',\n          progress: activity.metadata?.word || 0,\n          total: activity.metadata?.totalWords || 15,\n          type: activity.type || 'unknown'\n        };\n      };\n\n      const activity = {\n        title: 'Vocabulaire',\n        level: '2',\n        metadata: { word: 5, totalWords: 20 },\n        type: 'vocabulary'\n      };\n\n      const formatted = formatActivityMetadata(activity);\n      expect(formatted.title).toBe('Vocabulaire');\n      expect(formatted.level).toBe('2');\n      expect(formatted.progress).toBe(5);\n      expect(formatted.total).toBe(20);\n      expect(formatted.type).toBe('vocabulary');\n    });\n\n    it('devrait gérer les activités incomplètes', () => {\n      const formatActivityMetadata = (activity) => {\n        if (!activity) return null;\n        \n        return {\n          title: activity.title || 'Activité inconnue',\n          level: activity.level || '1',\n          progress: activity.metadata?.word || 0,\n          total: activity.metadata?.totalWords || 15,\n          type: activity.type || 'unknown'\n        };\n      };\n\n      const incompleteActivity = { title: 'Test' };\n      const formatted = formatActivityMetadata(incompleteActivity);\n      \n      expect(formatted.title).toBe('Test');\n      expect(formatted.level).toBe('1');\n      expect(formatted.progress).toBe(0);\n      expect(formatted.total).toBe(15);\n      expect(formatted.type).toBe('unknown');\n    });\n  });\n\n  describe('Utilitaires Dashboard', () => {\n    it('devrait générer les couleurs de niveau', () => {\n      const getLevelColor = (level) => {\n        const colors = {\n          '1': '#10B981',\n          '2': '#3B82F6', \n          '3': '#8B5CF6',\n          '4': '#F59E0B',\n          '5': '#EF4444',\n          '6': '#EC4899',\n          'bonus': '#6366F1'\n        };\n        return colors[level] || colors['1'];\n      };\n\n      expect(getLevelColor('1')).toBe('#10B981');\n      expect(getLevelColor('3')).toBe('#8B5CF6');\n      expect(getLevelColor('bonus')).toBe('#6366F1');\n      expect(getLevelColor('invalid')).toBe('#10B981');\n    });\n\n    it('devrait valider les états de chargement', () => {\n      const isLoading = (states) => {\n        return Object.values(states).some(state => state === true);\n      };\n\n      expect(isLoading({ progress: false, activity: false })).toBe(false);\n      expect(isLoading({ progress: true, activity: false })).toBe(true);\n      expect(isLoading({ progress: false, activity: true })).toBe(true);\n      expect(isLoading({})).toBe(false);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}