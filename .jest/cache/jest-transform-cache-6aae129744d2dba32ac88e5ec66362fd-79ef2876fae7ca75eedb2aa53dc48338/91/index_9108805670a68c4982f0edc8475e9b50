96ff6c21d8007d59e419eaa9d8dbd1f0
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _react = require("react");
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var QuestionIndicators = function QuestionIndicators(_ref) {
  var totalQuestions = _ref.totalQuestions,
    currentQuestionIndex = _ref.currentQuestionIndex,
    _ref$completedQuestio = _ref.completedQuestions,
    completedQuestions = _ref$completedQuestio === void 0 ? [] : _ref$completedQuestio,
    onSelectQuestion = _ref.onSelectQuestion,
    levelColor = _ref.levelColor;
  var handleSelectQuestion = (0, _react.useCallback)(function (index) {
    return function () {
      onSelectQuestion(index);
    };
  }, [onSelectQuestion]);
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: _style.default.container,
    children: Array.from({
      length: totalQuestions
    }).map(function (_, index) {
      return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        onPress: handleSelectQuestion(index),
        children: (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: [_style.default.indicator, {
            backgroundColor: currentQuestionIndex === index ? levelColor : completedQuestions.includes(index) ? `${levelColor}50` : "#e5e7eb",
            width: currentQuestionIndex === index ? 12 : 8,
            height: currentQuestionIndex === index ? 12 : 8
          }]
        })
      }, `indicator-${index}`);
    })
  });
};
var _default = exports.default = QuestionIndicators;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX3N0eWxlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9qc3hSdW50aW1lIiwiUXVlc3Rpb25JbmRpY2F0b3JzIiwiX3JlZiIsInRvdGFsUXVlc3Rpb25zIiwiY3VycmVudFF1ZXN0aW9uSW5kZXgiLCJfcmVmJGNvbXBsZXRlZFF1ZXN0aW8iLCJjb21wbGV0ZWRRdWVzdGlvbnMiLCJvblNlbGVjdFF1ZXN0aW9uIiwibGV2ZWxDb2xvciIsImhhbmRsZVNlbGVjdFF1ZXN0aW9uIiwidXNlQ2FsbGJhY2siLCJpbmRleCIsImpzeCIsIlZpZXciLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsImNoaWxkcmVuIiwiQXJyYXkiLCJmcm9tIiwibGVuZ3RoIiwibWFwIiwiXyIsIlRvdWNoYWJsZU9wYWNpdHkiLCJvblByZXNzIiwiaW5kaWNhdG9yIiwiYmFja2dyb3VuZENvbG9yIiwiaW5jbHVkZXMiLCJ3aWR0aCIsImhlaWdodCIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy9zY3JlZW5zL2V4ZXJjaXNlcy9yZWFkaW5nL1F1ZXN0aW9uSW5kaWNhdG9ycy9pbmRleC5qc1xyXG5pbXBvcnQgeyBWaWV3LCBUb3VjaGFibGVPcGFjaXR5IH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xyXG5pbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gXCIuL3N0eWxlXCI7XHJcblxyXG4vKipcclxuICogSW5kaWNhdGV1cnMgdmlzdWVscyBwb3VyIG5hdmlndWVyIGVudHJlIGxlcyBxdWVzdGlvbnNcclxuICovXHJcbmNvbnN0IFF1ZXN0aW9uSW5kaWNhdG9ycyA9ICh7XHJcbiAgdG90YWxRdWVzdGlvbnMsXHJcbiAgY3VycmVudFF1ZXN0aW9uSW5kZXgsXHJcbiAgY29tcGxldGVkUXVlc3Rpb25zID0gW10sXHJcbiAgb25TZWxlY3RRdWVzdGlvbixcclxuICBsZXZlbENvbG9yLFxyXG59KSA9PiB7XHJcbiAgLy8gSGFuZGxlciBzdGFibGUgcG91ciBsYSBzw6lsZWN0aW9uIGQndW5lIHF1ZXN0aW9uXHJcbiAgY29uc3QgaGFuZGxlU2VsZWN0UXVlc3Rpb24gPSB1c2VDYWxsYmFjayhcclxuICAgIChpbmRleCkgPT4gKCkgPT4ge1xyXG4gICAgICBvblNlbGVjdFF1ZXN0aW9uKGluZGV4KTtcclxuICAgIH0sXHJcbiAgICBbb25TZWxlY3RRdWVzdGlvbl1cclxuICApO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxyXG4gICAgICB7QXJyYXkuZnJvbSh7IGxlbmd0aDogdG90YWxRdWVzdGlvbnMgfSkubWFwKChfLCBpbmRleCkgPT4gKFxyXG4gICAgICAgIDxUb3VjaGFibGVPcGFjaXR5XHJcbiAgICAgICAgICBrZXk9e2BpbmRpY2F0b3ItJHtpbmRleH1gfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3Qvbm8tYXJyYXktaW5kZXgta2V5XHJcbiAgICAgICAgICBvblByZXNzPXtoYW5kbGVTZWxlY3RRdWVzdGlvbihpbmRleCl9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPFZpZXdcclxuICAgICAgICAgICAgc3R5bGU9e1tcclxuICAgICAgICAgICAgICBzdHlsZXMuaW5kaWNhdG9yLFxyXG4gICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjpcclxuICAgICAgICAgICAgICAgICAgY3VycmVudFF1ZXN0aW9uSW5kZXggPT09IGluZGV4XHJcbiAgICAgICAgICAgICAgICAgICAgPyBsZXZlbENvbG9yXHJcbiAgICAgICAgICAgICAgICAgICAgOiBjb21wbGV0ZWRRdWVzdGlvbnMuaW5jbHVkZXMoaW5kZXgpXHJcbiAgICAgICAgICAgICAgICAgICAgPyBgJHtsZXZlbENvbG9yfTUwYFxyXG4gICAgICAgICAgICAgICAgICAgIDogXCIjZTVlN2ViXCIsXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogY3VycmVudFF1ZXN0aW9uSW5kZXggPT09IGluZGV4ID8gMTIgOiA4LFxyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBjdXJyZW50UXVlc3Rpb25JbmRleCA9PT0gaW5kZXggPyAxMiA6IDgsXHJcbiAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXX1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxyXG4gICAgICApKX1cclxuICAgIDwvVmlldz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgUXVlc3Rpb25JbmRpY2F0b3JzO1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsTUFBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQTZCLElBQUFJLFdBQUEsR0FBQUosT0FBQTtBQUs3QixJQUFNSyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQWtCQSxDQUFBQyxJQUFBLEVBTWxCO0VBQUEsSUFMSkMsY0FBYyxHQUFBRCxJQUFBLENBQWRDLGNBQWM7SUFDZEMsb0JBQW9CLEdBQUFGLElBQUEsQ0FBcEJFLG9CQUFvQjtJQUFBQyxxQkFBQSxHQUFBSCxJQUFBLENBQ3BCSSxrQkFBa0I7SUFBbEJBLGtCQUFrQixHQUFBRCxxQkFBQSxjQUFHLEVBQUUsR0FBQUEscUJBQUE7SUFDdkJFLGdCQUFnQixHQUFBTCxJQUFBLENBQWhCSyxnQkFBZ0I7SUFDaEJDLFVBQVUsR0FBQU4sSUFBQSxDQUFWTSxVQUFVO0VBR1YsSUFBTUMsb0JBQW9CLEdBQUcsSUFBQUMsa0JBQVcsRUFDdEMsVUFBQ0MsS0FBSztJQUFBLE9BQUssWUFBTTtNQUNmSixnQkFBZ0IsQ0FBQ0ksS0FBSyxDQUFDO0lBQ3pCLENBQUM7RUFBQSxHQUNELENBQUNKLGdCQUFnQixDQUNuQixDQUFDO0VBRUQsT0FDRSxJQUFBUCxXQUFBLENBQUFZLEdBQUEsRUFBQ2pCLFlBQUEsQ0FBQWtCLElBQUk7SUFBQ0MsS0FBSyxFQUFFQyxjQUFNLENBQUNDLFNBQVU7SUFBQUMsUUFBQSxFQUMzQkMsS0FBSyxDQUFDQyxJQUFJLENBQUM7TUFBRUMsTUFBTSxFQUFFakI7SUFBZSxDQUFDLENBQUMsQ0FBQ2tCLEdBQUcsQ0FBQyxVQUFDQyxDQUFDLEVBQUVYLEtBQUs7TUFBQSxPQUNuRCxJQUFBWCxXQUFBLENBQUFZLEdBQUEsRUFBQ2pCLFlBQUEsQ0FBQTRCLGdCQUFnQjtRQUVmQyxPQUFPLEVBQUVmLG9CQUFvQixDQUFDRSxLQUFLLENBQUU7UUFBQU0sUUFBQSxFQUVyQyxJQUFBakIsV0FBQSxDQUFBWSxHQUFBLEVBQUNqQixZQUFBLENBQUFrQixJQUFJO1VBQ0hDLEtBQUssRUFBRSxDQUNMQyxjQUFNLENBQUNVLFNBQVMsRUFDaEI7WUFDRUMsZUFBZSxFQUNidEIsb0JBQW9CLEtBQUtPLEtBQUssR0FDMUJILFVBQVUsR0FDVkYsa0JBQWtCLENBQUNxQixRQUFRLENBQUNoQixLQUFLLENBQUMsR0FDbEMsR0FBR0gsVUFBVSxJQUFJLEdBQ2pCLFNBQVM7WUFDZm9CLEtBQUssRUFBRXhCLG9CQUFvQixLQUFLTyxLQUFLLEdBQUcsRUFBRSxHQUFHLENBQUM7WUFDOUNrQixNQUFNLEVBQUV6QixvQkFBb0IsS0FBS08sS0FBSyxHQUFHLEVBQUUsR0FBRztVQUNoRCxDQUFDO1FBQ0QsQ0FDSDtNQUFDLEdBakJHLGFBQWFBLEtBQUssRUFrQlAsQ0FBQztJQUFBLENBQ3BCO0VBQUMsQ0FDRSxDQUFDO0FBRVgsQ0FBQztBQUFDLElBQUFtQixRQUFBLEdBQUFDLE9BQUEsQ0FBQUMsT0FBQSxHQUVhL0Isa0JBQWtCIiwiaWdub3JlTGlzdCI6W119