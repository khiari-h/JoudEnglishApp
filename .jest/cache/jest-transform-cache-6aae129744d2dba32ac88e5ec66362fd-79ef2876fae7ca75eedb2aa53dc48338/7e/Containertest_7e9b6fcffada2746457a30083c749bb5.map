{"version":3,"names":["_getJestObj","mock","_require","require","View","SafeAreaView","_ref","children","style","edges","rest","_objectWithoutProperties2","default","_excluded","_jsxRuntime","jsx","Object","assign","testID","useSafeAreaInsets","top","bottom","left","right","useSafeAreaFrame","x","y","width","height","container","flex","withPadding","padding","scrollView","scrollViewContent","flexGrow","_interopRequireDefault","_react","_reactNative","_reactNative2","_reactNativeSafeAreaContext","_Container","_require2","jest","describe","beforeEach","StatusBar","setBarStyle","mockClear","setBackgroundColor","it","_render","render","Text","getByText","expect","toBeTruthy","_render2","getByTestId","_render3","safeArea","queryByTestId","UNSAFE_getByType","toBeNull","_render4","flatStyle","StyleSheet","flatten","props","toHaveProperty","_render5","not","_render6","withScrollView","ScrollView","_render7","scrollViewProps","keyboardShouldPersistTaps","toBe","_render8","queryByText","UNSAFE_queryByType","toHaveBeenCalledWith","withStatusBar","toHaveBeenCalled","statusBarColor","statusBarStyle","_render9","backgroundColor","_render0","safeAreaEdges","safeAreaView","toEqual","_render1","_render10"],"sources":["Container.test.js"],"sourcesContent":["// __tests__/components/layout/Container.test.js\nimport React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { View, ScrollView, Text, StyleSheet, StatusBar } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Container from '../../../src/components/layout/Container';\n\n// Mock SafeAreaView from react-native-safe-area-context\njest.mock('react-native-safe-area-context', () => {\n  const { View } = require('react-native');\n  return {\n    SafeAreaView: ({ children, style, edges, ...rest }) => (\n      <View style={style} {...rest} testID=\"mock-safe-area-view\" edges={edges}>\n        {children}\n      </View>\n    ),\n    useSafeAreaInsets: () => ({ top: 0, bottom: 0, left: 0, right: 0 }),\n    useSafeAreaFrame: () => ({ x: 0, y: 0, width: 320, height: 640 }),\n  };\n});\n\n// Mock des styles du composant\njest.mock('../../../src/components/layout/Container/style', () => ({\n  container: {\n    flex: 1,\n  },\n  withPadding: {\n    padding: 16,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n  },\n}));\n\ndescribe('Container', () => {\n  // Clear StatusBar mocks before each test to ensure isolation\n  beforeEach(() => {\n    StatusBar.setBarStyle.mockClear();\n    StatusBar.setBackgroundColor.mockClear();\n  });\n\n  it('renders children correctly', () => {\n    const { getByText } = render(<Container><Text>Hello World</Text></Container>);\n    expect(getByText('Hello World')).toBeTruthy();\n  });\n\n  it('uses SafeAreaView by default', () => {\n    const { getByTestId } = render(<Container />);\n    expect(getByTestId('mock-safe-area-view')).toBeTruthy();\n  });\n\n  it('uses View when safeArea is false', () => {\n    const { queryByTestId, UNSAFE_getByType } = render(<Container safeArea={false} />);\n    expect(queryByTestId('mock-safe-area-view')).toBeNull();\n    expect(UNSAFE_getByType(View)).toBeTruthy(); // Check if it renders a plain View\n  });\n\n  it('applies padding by default', () => {\n    const { getByTestId } = render(<Container />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).toHaveProperty('padding', 16);\n  });\n\n  it('does not apply padding when withPadding is false', () => {\n    const { getByTestId } = render(<Container withPadding={false} />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).not.toHaveProperty('padding', 16);\n  });\n\n  it('renders ScrollView when withScrollView is true', () => {\n    const { getByTestId, UNSAFE_getByType, getByText } = render(\n      <Container withScrollView={true}><Text>Scrollable Content</Text></Container>\n    );\n    expect(UNSAFE_getByType(ScrollView)).toBeTruthy();\n    expect(getByTestId('mock-safe-area-view')).toBeTruthy(); // Still wrapped by SafeAreaView\n    expect(getByText('Scrollable Content')).toBeTruthy();\n  });\n\n  it('passes scrollViewProps to ScrollView', () => {\n    const { UNSAFE_getByType } = render(\n      <Container withScrollView={true} scrollViewProps={{ keyboardShouldPersistTaps: 'always' }} />\n    );\n    expect(UNSAFE_getByType(ScrollView).props.keyboardShouldPersistTaps).toBe('always');\n  });\n\n  it('does not render ScrollView when withScrollView is false', () => {\n    const { queryByText, UNSAFE_queryByType } = render(\n      <Container withScrollView={false}><Text>Static Content</Text></Container>\n    );\n    expect(UNSAFE_queryByType(ScrollView)).toBeNull();\n    expect(queryByText('Static Content')).toBeTruthy();\n  });\n\n  it('renders StatusBar by default', () => {\n    render(<Container />);\n    expect(StatusBar.setBarStyle).toHaveBeenCalledWith('dark-content');\n    expect(StatusBar.setBackgroundColor).toHaveBeenCalledWith('#FFFFFF');\n  });\n\n  it('does not render StatusBar when withStatusBar is false', () => {\n    render(<Container withStatusBar={false} />);\n    expect(StatusBar.setBarStyle).not.toHaveBeenCalled();\n    expect(StatusBar.setBackgroundColor).not.toHaveBeenCalled();\n  });\n\n  it('applies custom statusBarColor and statusBarStyle', () => {\n    render(<Container statusBarColor=\"#FF0000\" statusBarStyle=\"light-content\" />);\n    expect(StatusBar.setBarStyle).toHaveBeenCalledWith('light-content');\n    expect(StatusBar.setBackgroundColor).toHaveBeenCalledWith('#FF0000');\n  });\n\n  it('applies custom backgroundColor', () => {\n    const { getByTestId } = render(<Container backgroundColor=\"#FF00FF\" />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).toHaveProperty('backgroundColor', '#FF00FF');\n  });\n\n  // ✅ CORRECTION : Ajuster le test pour correspondre aux valeurs par défaut du composant\n  it('passes safeAreaEdges to SafeAreaView', () => {\n    const { getByTestId } = render(<Container safeAreaEdges={['bottom']} />);\n    const safeAreaView = getByTestId('mock-safe-area-view');\n    expect(safeAreaView.props.edges).toEqual(['bottom']);\n  });\n\n  // ✅ NOUVEAU TEST : Vérifier les valeurs par défaut de safeAreaEdges\n  it('uses default safeAreaEdges when not provided', () => {\n    const { getByTestId } = render(<Container />);\n    const safeAreaView = getByTestId('mock-safe-area-view');\n    expect(safeAreaView.props.edges).toEqual(['top', 'left', 'right']);\n  });\n\n  // ✅ NOUVEAU TEST : Vérifier la backgroundColor par défaut\n  it('applies default backgroundColor', () => {\n    const { getByTestId } = render(<Container />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).toHaveProperty('backgroundColor', '#F9FAFB');\n  });\n});"],"mappings":"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","ignoreList":[]}