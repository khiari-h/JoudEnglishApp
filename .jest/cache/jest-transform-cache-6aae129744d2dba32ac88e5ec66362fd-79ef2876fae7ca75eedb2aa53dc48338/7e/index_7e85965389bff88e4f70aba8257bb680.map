{"version":3,"names":["_CategorySelector","_interopRequireDefault","require","_react","_jsxRuntime","cov_2mqvh5q6ef","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","PhrasesCategorySelector","_ref","categories","selectedIndex","onSelectCategory","levelColor","formattedCategories","map","categoryName","index","id","handleCategorySelect","useCallback","categoryId","jsx","default","selectedCategory","primaryColor","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/screens/exercises/phrases/PhrasesCategorySelector/index.js - VERSION FIXÃ‰E\r\nimport CategorySelector from \"../../../../components/exercise-common/CategorySelector\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst PhrasesCategorySelector = ({\r\n  categories,\r\n  selectedIndex,\r\n  onSelectCategory,\r\n  levelColor,\r\n}) => {\r\n  // ðŸŽ¯ FIX : categories est un array de strings, pas d'objets\r\n  // Transformer les noms de catÃ©gories en objets avec index comme id\r\n  const formattedCategories = categories.map((categoryName, index) => ({\r\n    id: index, // Utiliser l'index comme id pour correspondre Ã  selectedIndex\r\n    name: categoryName\r\n  }));\r\n\r\n  // ðŸŽ¯ FIX : Utiliser selectedIndex directement (pas de transformation)\r\n  const handleCategorySelect = useCallback((categoryId) => {\r\n    onSelectCategory(categoryId);\r\n  }, [onSelectCategory]);\r\n\r\n  return (\r\n    <CategorySelector\r\n      categories={formattedCategories}\r\n      selectedCategory={selectedIndex} // ðŸŽ¯ FIX : Maintenant selectedIndex correspond Ã  category.id\r\n      onSelectCategory={handleCategorySelect}\r\n      primaryColor={levelColor}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhrasesCategorySelector;"],"mappings":"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","ignoreList":[]}