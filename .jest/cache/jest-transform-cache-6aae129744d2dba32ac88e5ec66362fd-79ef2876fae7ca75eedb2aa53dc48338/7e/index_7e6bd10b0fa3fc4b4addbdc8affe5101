683271c601669e970db6082ed5834f0f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _errorCorrectionC2Full = _interopRequireDefault(require("./categories/errorCorrectionC2Full"));
var _errorCorrectionC2Identify = _interopRequireDefault(require("./categories/errorCorrectionC2Identify"));
var _errorCorrectionC2MultipleChoice = _interopRequireDefault(require("./categories/errorCorrectionC2MultipleChoice"));
var allExercises = [].concat((0, _toConsumableArray2.default)(_errorCorrectionC2Full.default), (0, _toConsumableArray2.default)(_errorCorrectionC2Identify.default), (0, _toConsumableArray2.default)(_errorCorrectionC2MultipleChoice.default));
allExercises.sort(function (a, b) {
  if (a.categoryId !== b.categoryId) {
    return a.categoryId - b.categoryId;
  }
  var typeOrder = {
    'full': 1,
    'identify': 2,
    'multiple_choice': 3
  };
  return typeOrder[a.type] - typeOrder[b.type];
});
var errorCorrectionC2 = {
  level: "C2",
  totalExercises: allExercises.length,
  statistics: {
    full: _errorCorrectionC2Full.default.length,
    identify: _errorCorrectionC2Identify.default.length,
    multiple_choice: _errorCorrectionC2MultipleChoice.default.length,
    byCategory: {
      1: {
        name: "Literary & Artistic Language",
        count: 12
      },
      2: {
        name: "Sophisticated Rhetoric",
        count: 10
      },
      3: {
        name: "Linguistic Mastery",
        count: 10
      },
      4: {
        name: "Cultural Expertise",
        count: 11
      },
      5: {
        name: "Advanced Stylistics",
        count: 11
      }
    }
  },
  categories: [{
    id: 1,
    name: "Literary & Artistic Language",
    description: "Literary devices, aesthetic expression, artistic language mastery",
    exerciseCount: 12,
    difficulty: "Mastery",
    color: "#3b82f6",
    topics: ["literary devices", "aesthetic expression", "artistic language", "poetic structures", "literary analysis", "prosody"],
    commonErrors: ["unnecessary articles", "redundant modifiers", "overly formal language", "redundant literary terms"],
    skillsTargeted: ["literary sophistication", "aesthetic sensitivity", "artistic expression", "cultural literacy", "poetic awareness"]
  }, {
    id: 2,
    name: "Sophisticated Rhetoric",
    description: "Advanced rhetorical mastery, persuasive excellence, oratory sophistication",
    exerciseCount: 10,
    difficulty: "Mastery",
    color: "#10b981",
    topics: ["rhetorical mastery", "persuasive excellence", "dialectical reasoning", "oratory sophistication", "argumentative artistry"],
    commonErrors: ["wordy constructions", "unnecessary formality", "redundant phrases", "weak intensifiers"],
    skillsTargeted: ["rhetorical mastery", "persuasive artistry", "oratorical excellence", "argumentative sophistication", "dialectical thinking"]
  }, {
    id: 3,
    name: "Linguistic Mastery",
    description: "Perfect command of language, semantic precision, lexical sophistication",
    exerciseCount: 10,
    difficulty: "Mastery",
    color: "#f59e0b",
    topics: ["semantic mastery", "lexical precision", "linguistic sophistication", "perfect command", "stylistic finesse"],
    commonErrors: ["redundant modifiers", "imprecise vocabulary", "unnecessary intensifiers", "wordy expressions"],
    skillsTargeted: ["linguistic perfection", "semantic precision", "lexical mastery", "expressive excellence", "linguistic artistry"]
  }, {
    id: 4,
    name: "Cultural Expertise",
    description: "Deep cultural knowledge, literary references, mythological sophistication",
    exerciseCount: 11,
    difficulty: "Mastery",
    color: "#8b5cf6",
    topics: ["cultural mastery", "literary allusions", "mythological references", "cross-cultural competence", "archetypal understanding"],
    commonErrors: ["unnecessary elaboration", "redundant cultural markers", "over-explanation", "wordy constructions"],
    skillsTargeted: ["cultural expertise", "literary knowledge", "cultural sophistication", "intellectual breadth", "mythological literacy"]
  }, {
    id: 5,
    name: "Advanced Stylistics",
    description: "Stylistic mastery, register perfection, expressive sophistication",
    exerciseCount: 11,
    difficulty: "Mastery",
    color: "#ef4444",
    topics: ["stylistic mastery", "register perfection", "expressive sophistication", "artistic communication", "linguistic modulation"],
    commonErrors: ["redundant specifications", "unnecessary intensifiers", "overly complex constructions", "lack of economy"],
    skillsTargeted: ["stylistic excellence", "expressive mastery", "communicative artistry", "linguistic elegance", "expressive economy"]
  }],
  exercises: allExercises,
  getExercisesByCategory: function getExercisesByCategory(categoryId) {
    return allExercises.filter(function (exercise) {
      return exercise.categoryId === categoryId;
    });
  },
  getExercisesByType: function getExercisesByType(type) {
    return allExercises.filter(function (exercise) {
      return exercise.type === type;
    });
  },
  getExercisesByCategoryAndType: function getExercisesByCategoryAndType(categoryId, type) {
    return allExercises.filter(function (exercise) {
      return exercise.categoryId === categoryId && exercise.type === type;
    });
  },
  getMasteryLevelExercises: function getMasteryLevelExercises() {
    return allExercises.filter(function (exercise) {
      var wordCount = exercise.text.split(' ').length;
      var hasAdvancedVocab = exercise.text.length > 120;
      var hasSophisticatedTerms = ['literary', 'rhetorical', 'aesthetic', 'linguistic', 'cultural'].some(function (term) {
        return exercise.text.toLowerCase().includes(term);
      });
      return wordCount >= 18 && hasAdvancedVocab && hasSophisticatedTerms;
    });
  },
  getLiteraryExercises: function getLiteraryExercises() {
    return allExercises.filter(function (exercise) {
      var literaryKeywords = ['literary', 'poet', 'novelist', 'prose', 'rhetoric', 'aesthetic', 'artistic'];
      return literaryKeywords.some(function (keyword) {
        return exercise.text.toLowerCase().includes(keyword);
      });
    });
  },
  getCulturalReferenceExercises: function getCulturalReferenceExercises() {
    return allExercises.filter(function (exercise) {
      var culturalKeywords = ['Kafkaesque', 'quixotic', 'Faustian', 'Prometheus', 'Pandora', 'archetypal', 'mythological'];
      return culturalKeywords.some(function (keyword) {
        return exercise.text.includes(keyword) || exercise.correctedText.includes(keyword);
      });
    });
  },
  getArtisticLanguageExercises: function getArtisticLanguageExercises() {
    return allExercises.filter(function (exercise) {
      return exercise.categoryId === 1 || exercise.categoryId === 5 || exercise.explanation.toLowerCase().includes('artistic') || exercise.explanation.toLowerCase().includes('sophisticated');
    });
  },
  getStylisticPrecisionExercises: function getStylisticPrecisionExercises() {
    return allExercises.filter(function (exercise) {
      var precisionKeywords = ['redundant', 'unnecessary', 'elegant', 'sophisticated', 'precise'];
      return precisionKeywords.some(function (keyword) {
        return exercise.explanation.toLowerCase().includes(keyword);
      });
    });
  },
  validateStructure: function validateStructure() {
    var requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];
    var validTypes = ['full', 'identify', 'multiple_choice'];
    return allExercises.every(function (exercise) {
      var hasRequiredFields = requiredFields.every(function (field) {
        return Object.prototype.hasOwnProperty.call(exercise, field) && exercise[field] !== undefined;
      });
      var hasValidType = validTypes.includes(exercise.type);
      var hasValidCategory = exercise.categoryId >= 1 && exercise.categoryId <= 5;
      var hasMasteryComplexity = exercise.text.split(' ').length >= 15;
      var hasSophisticatedVocab = exercise.text.length > 100;
      var hasAdvancedConcepts = exercise.explanation.length > 50;
      var hasTypeSpecificFields = true;
      if (exercise.type === 'multiple_choice') {
        hasTypeSpecificFields = exercise.choices && Array.isArray(exercise.choices) && exercise.choices.length === 4 && exercise.correctChoiceIndex !== undefined && exercise.correctChoiceIndex >= 0 && exercise.correctChoiceIndex < exercise.choices.length && exercise.choices.every(function (choice) {
          return choice.length > 3;
        });
      } else {
        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);
      }
      return hasRequiredFields && hasValidType && hasValidCategory && hasMasteryComplexity && hasSophisticatedVocab && hasAdvancedConcepts && hasTypeSpecificFields;
    });
  },
  getSummary: function getSummary() {
    var totalErrorPositions = allExercises.filter(function (ex) {
      return ex.errorPositions;
    }).reduce(function (sum, ex) {
      return sum + ex.errorPositions.length;
    }, 0);
    var totalTextLength = allExercises.reduce(function (sum, ex) {
      return sum + ex.text.length;
    }, 0);
    var masteryExercises = errorCorrectionC2.getMasteryLevelExercises().length;
    var literaryExercises = errorCorrectionC2.getLiteraryExercises().length;
    var culturalExercises = errorCorrectionC2.getCulturalReferenceExercises().length;
    var artisticExercises = errorCorrectionC2.getArtisticLanguageExercises().length;
    return {
      level: "C2",
      totalExercises: allExercises.length,
      categories: errorCorrectionC2.categories.length,
      difficulty: "Mastery",
      focus: "Perfect linguistic command, literary sophistication, cultural expertise, artistic expression",
      progression: "Ultimate mastery: native-speaker level precision with artistic and cultural sophistication",
      distribution: {
        full: _errorCorrectionC2Full.default.length,
        identify: _errorCorrectionC2Identify.default.length,
        multiple_choice: _errorCorrectionC2MultipleChoice.default.length
      },
      complexity: {
        averageTextLength: Math.round(totalTextLength / allExercises.length),
        averageWordCount: Math.round(allExercises.reduce(function (sum, ex) {
          return sum + ex.text.split(' ').length;
        }, 0) / allExercises.length),
        totalErrorPositions: totalErrorPositions,
        averageErrorsPerExercise: Math.round(totalErrorPositions / allExercises.filter(function (ex) {
          return ex.errorPositions;
        }).length * 10) / 10,
        masteryExercisesPercentage: Math.round(masteryExercises / allExercises.length * 100),
        literaryFocusPercentage: Math.round(literaryExercises / allExercises.length * 100),
        culturalReferencePercentage: Math.round(culturalExercises / allExercises.length * 100),
        artisticLanguagePercentage: Math.round(artisticExercises / allExercises.length * 100)
      },
      masteryIndicators: ["Perfect linguistic precision", "Literary and artistic sophistication", "Advanced cultural competence", "Stylistic and rhetorical mastery", "Semantic and expressive perfection"],
      skillsTargeted: ["Perfect linguistic mastery", "Literary and artistic sophistication", "Advanced cultural competence", "Stylistic and rhetorical excellence", "Semantic and expressive precision", "Communicative artistry", "Linguistic elegance"]
    };
  }
};
if (!errorCorrectionC2.validateStructure()) {} else {}
var _default = exports.default = errorCorrectionC2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXJyb3JDb3JyZWN0aW9uQzJGdWxsIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfZXJyb3JDb3JyZWN0aW9uQzJJZGVudGlmeSIsIl9lcnJvckNvcnJlY3Rpb25DMk11bHRpcGxlQ2hvaWNlIiwiYWxsRXhlcmNpc2VzIiwiY29uY2F0IiwiX3RvQ29uc3VtYWJsZUFycmF5MiIsImRlZmF1bHQiLCJlcnJvckNvcnJlY3Rpb25DMkZ1bGwiLCJlcnJvckNvcnJlY3Rpb25DMklkZW50aWZ5IiwiZXJyb3JDb3JyZWN0aW9uQzJNdWx0aXBsZUNob2ljZSIsInNvcnQiLCJhIiwiYiIsImNhdGVnb3J5SWQiLCJ0eXBlT3JkZXIiLCJ0eXBlIiwiZXJyb3JDb3JyZWN0aW9uQzIiLCJsZXZlbCIsInRvdGFsRXhlcmNpc2VzIiwibGVuZ3RoIiwic3RhdGlzdGljcyIsImZ1bGwiLCJpZGVudGlmeSIsIm11bHRpcGxlX2Nob2ljZSIsImJ5Q2F0ZWdvcnkiLCJuYW1lIiwiY291bnQiLCJjYXRlZ29yaWVzIiwiaWQiLCJkZXNjcmlwdGlvbiIsImV4ZXJjaXNlQ291bnQiLCJkaWZmaWN1bHR5IiwiY29sb3IiLCJ0b3BpY3MiLCJjb21tb25FcnJvcnMiLCJza2lsbHNUYXJnZXRlZCIsImV4ZXJjaXNlcyIsImdldEV4ZXJjaXNlc0J5Q2F0ZWdvcnkiLCJmaWx0ZXIiLCJleGVyY2lzZSIsImdldEV4ZXJjaXNlc0J5VHlwZSIsImdldEV4ZXJjaXNlc0J5Q2F0ZWdvcnlBbmRUeXBlIiwiZ2V0TWFzdGVyeUxldmVsRXhlcmNpc2VzIiwid29yZENvdW50IiwidGV4dCIsInNwbGl0IiwiaGFzQWR2YW5jZWRWb2NhYiIsImhhc1NvcGhpc3RpY2F0ZWRUZXJtcyIsInNvbWUiLCJ0ZXJtIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsImdldExpdGVyYXJ5RXhlcmNpc2VzIiwibGl0ZXJhcnlLZXl3b3JkcyIsImtleXdvcmQiLCJnZXRDdWx0dXJhbFJlZmVyZW5jZUV4ZXJjaXNlcyIsImN1bHR1cmFsS2V5d29yZHMiLCJjb3JyZWN0ZWRUZXh0IiwiZ2V0QXJ0aXN0aWNMYW5ndWFnZUV4ZXJjaXNlcyIsImV4cGxhbmF0aW9uIiwiZ2V0U3R5bGlzdGljUHJlY2lzaW9uRXhlcmNpc2VzIiwicHJlY2lzaW9uS2V5d29yZHMiLCJ2YWxpZGF0ZVN0cnVjdHVyZSIsInJlcXVpcmVkRmllbGRzIiwidmFsaWRUeXBlcyIsImV2ZXJ5IiwiaGFzUmVxdWlyZWRGaWVsZHMiLCJmaWVsZCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInVuZGVmaW5lZCIsImhhc1ZhbGlkVHlwZSIsImhhc1ZhbGlkQ2F0ZWdvcnkiLCJoYXNNYXN0ZXJ5Q29tcGxleGl0eSIsImhhc1NvcGhpc3RpY2F0ZWRWb2NhYiIsImhhc0FkdmFuY2VkQ29uY2VwdHMiLCJoYXNUeXBlU3BlY2lmaWNGaWVsZHMiLCJjaG9pY2VzIiwiQXJyYXkiLCJpc0FycmF5IiwiY29ycmVjdENob2ljZUluZGV4IiwiY2hvaWNlIiwiZXJyb3JQb3NpdGlvbnMiLCJnZXRTdW1tYXJ5IiwidG90YWxFcnJvclBvc2l0aW9ucyIsImV4IiwicmVkdWNlIiwic3VtIiwidG90YWxUZXh0TGVuZ3RoIiwibWFzdGVyeUV4ZXJjaXNlcyIsImxpdGVyYXJ5RXhlcmNpc2VzIiwiY3VsdHVyYWxFeGVyY2lzZXMiLCJhcnRpc3RpY0V4ZXJjaXNlcyIsImZvY3VzIiwicHJvZ3Jlc3Npb24iLCJkaXN0cmlidXRpb24iLCJjb21wbGV4aXR5IiwiYXZlcmFnZVRleHRMZW5ndGgiLCJNYXRoIiwicm91bmQiLCJhdmVyYWdlV29yZENvdW50IiwiYXZlcmFnZUVycm9yc1BlckV4ZXJjaXNlIiwibWFzdGVyeUV4ZXJjaXNlc1BlcmNlbnRhZ2UiLCJsaXRlcmFyeUZvY3VzUGVyY2VudGFnZSIsImN1bHR1cmFsUmVmZXJlbmNlUGVyY2VudGFnZSIsImFydGlzdGljTGFuZ3VhZ2VQZXJjZW50YWdlIiwibWFzdGVyeUluZGljYXRvcnMiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZGF0YS9leGVyY2lzZXMvZXJyb3JDb3JyZWN0aW9uL0MyL2luZGV4LmpzXHJcblxyXG5pbXBvcnQgZXJyb3JDb3JyZWN0aW9uQzJGdWxsIGZyb20gJy4vY2F0ZWdvcmllcy9lcnJvckNvcnJlY3Rpb25DMkZ1bGwnO1xyXG5pbXBvcnQgZXJyb3JDb3JyZWN0aW9uQzJJZGVudGlmeSBmcm9tICcuL2NhdGVnb3JpZXMvZXJyb3JDb3JyZWN0aW9uQzJJZGVudGlmeSc7XHJcbmltcG9ydCBlcnJvckNvcnJlY3Rpb25DMk11bHRpcGxlQ2hvaWNlIGZyb20gJy4vY2F0ZWdvcmllcy9lcnJvckNvcnJlY3Rpb25DMk11bHRpcGxlQ2hvaWNlJztcclxuXHJcbi8vIENvbWJpbmUgYWxsIGV4ZXJjaXNlcyBmcm9tIHRoZSAzIGZpbGVzXHJcbmNvbnN0IGFsbEV4ZXJjaXNlcyA9IFtcclxuICAuLi5lcnJvckNvcnJlY3Rpb25DMkZ1bGwsXHJcbiAgLi4uZXJyb3JDb3JyZWN0aW9uQzJJZGVudGlmeSxcclxuICAuLi5lcnJvckNvcnJlY3Rpb25DMk11bHRpcGxlQ2hvaWNlXHJcbl07XHJcblxyXG4vLyBTb3J0IGV4ZXJjaXNlcyBieSBjYXRlZ29yeUlkIHRvIG1haW50YWluIGxvZ2ljYWwgb3JkZXJcclxuYWxsRXhlcmNpc2VzLnNvcnQoKGEsIGIpID0+IHtcclxuICBpZiAoYS5jYXRlZ29yeUlkICE9PSBiLmNhdGVnb3J5SWQpIHtcclxuICAgIHJldHVybiBhLmNhdGVnb3J5SWQgLSBiLmNhdGVnb3J5SWQ7XHJcbiAgfVxyXG4gIC8vIFdpdGhpbiBzYW1lIGNhdGVnb3J5LCBvcmRlciBieSB0eXBlOiBmdWxsLCBpZGVudGlmeSwgbXVsdGlwbGVfY2hvaWNlXHJcbiAgY29uc3QgdHlwZU9yZGVyID0geyAnZnVsbCc6IDEsICdpZGVudGlmeSc6IDIsICdtdWx0aXBsZV9jaG9pY2UnOiAzIH07XHJcbiAgcmV0dXJuIHR5cGVPcmRlclthLnR5cGVdIC0gdHlwZU9yZGVyW2IudHlwZV07XHJcbn0pO1xyXG5cclxuY29uc3QgZXJyb3JDb3JyZWN0aW9uQzIgPSB7XHJcbiAgbGV2ZWw6IFwiQzJcIixcclxuICB0b3RhbEV4ZXJjaXNlczogYWxsRXhlcmNpc2VzLmxlbmd0aCxcclxuXHJcbiAgLy8gU3RhdGlzdGljcyBieSB0eXBlXHJcbiAgc3RhdGlzdGljczoge1xyXG4gICAgZnVsbDogZXJyb3JDb3JyZWN0aW9uQzJGdWxsLmxlbmd0aCxcclxuICAgIGlkZW50aWZ5OiBlcnJvckNvcnJlY3Rpb25DMklkZW50aWZ5Lmxlbmd0aCxcclxuICAgIG11bHRpcGxlX2Nob2ljZTogZXJyb3JDb3JyZWN0aW9uQzJNdWx0aXBsZUNob2ljZS5sZW5ndGgsXHJcbiAgICBieUNhdGVnb3J5OiB7XHJcbiAgICAgIDE6IHsgbmFtZTogXCJMaXRlcmFyeSAmIEFydGlzdGljIExhbmd1YWdlXCIsIGNvdW50OiAxMiB9LCAgICAvLyA0IGZ1bGwgKyA1IGlkZW50aWZ5ICsgMyBtdWx0aXBsZV9jaG9pY2VcclxuICAgICAgMjogeyBuYW1lOiBcIlNvcGhpc3RpY2F0ZWQgUmhldG9yaWNcIiwgY291bnQ6IDEwIH0sICAgICAgICAgLy8gNCBmdWxsICsgNCBpZGVudGlmeSArIDIgbXVsdGlwbGVfY2hvaWNlXHJcbiAgICAgIDM6IHsgbmFtZTogXCJMaW5ndWlzdGljIE1hc3RlcnlcIiwgY291bnQ6IDEwIH0sICAgICAgICAgICAgIC8vIDQgZnVsbCArIDQgaWRlbnRpZnkgKyAyIG11bHRpcGxlX2Nob2ljZVxyXG4gICAgICA0OiB7IG5hbWU6IFwiQ3VsdHVyYWwgRXhwZXJ0aXNlXCIsIGNvdW50OiAxMSB9LCAgICAgICAgICAgICAvLyA0IGZ1bGwgKyA1IGlkZW50aWZ5ICsgMiBtdWx0aXBsZV9jaG9pY2VcclxuICAgICAgNTogeyBuYW1lOiBcIkFkdmFuY2VkIFN0eWxpc3RpY3NcIiwgY291bnQ6IDExIH0gICAgICAgICAgICAgLy8gNCBmdWxsICsgNCBpZGVudGlmeSArIDMgbXVsdGlwbGVfY2hvaWNlXHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgLy8gQ2F0ZWdvcmllcyBtZXRhZGF0YSBmb3IgQzIgbWFzdGVyeSBsZXZlbFxyXG4gIGNhdGVnb3JpZXM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6IDEsXHJcbiAgICAgIG5hbWU6IFwiTGl0ZXJhcnkgJiBBcnRpc3RpYyBMYW5ndWFnZVwiLFxyXG4gICAgICBkZXNjcmlwdGlvbjogXCJMaXRlcmFyeSBkZXZpY2VzLCBhZXN0aGV0aWMgZXhwcmVzc2lvbiwgYXJ0aXN0aWMgbGFuZ3VhZ2UgbWFzdGVyeVwiLFxyXG4gICAgICBleGVyY2lzZUNvdW50OiAxMixcclxuICAgICAgZGlmZmljdWx0eTogXCJNYXN0ZXJ5XCIsXHJcbiAgICAgIGNvbG9yOiBcIiMzYjgyZjZcIixcclxuICAgICAgdG9waWNzOiBbXCJsaXRlcmFyeSBkZXZpY2VzXCIsIFwiYWVzdGhldGljIGV4cHJlc3Npb25cIiwgXCJhcnRpc3RpYyBsYW5ndWFnZVwiLCBcInBvZXRpYyBzdHJ1Y3R1cmVzXCIsIFwibGl0ZXJhcnkgYW5hbHlzaXNcIiwgXCJwcm9zb2R5XCJdLFxyXG4gICAgICBjb21tb25FcnJvcnM6IFtcInVubmVjZXNzYXJ5IGFydGljbGVzXCIsIFwicmVkdW5kYW50IG1vZGlmaWVyc1wiLCBcIm92ZXJseSBmb3JtYWwgbGFuZ3VhZ2VcIiwgXCJyZWR1bmRhbnQgbGl0ZXJhcnkgdGVybXNcIl0sXHJcbiAgICAgIHNraWxsc1RhcmdldGVkOiBbXCJsaXRlcmFyeSBzb3BoaXN0aWNhdGlvblwiLCBcImFlc3RoZXRpYyBzZW5zaXRpdml0eVwiLCBcImFydGlzdGljIGV4cHJlc3Npb25cIiwgXCJjdWx0dXJhbCBsaXRlcmFjeVwiLCBcInBvZXRpYyBhd2FyZW5lc3NcIl1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAyLFxyXG4gICAgICBuYW1lOiBcIlNvcGhpc3RpY2F0ZWQgUmhldG9yaWNcIixcclxuICAgICAgZGVzY3JpcHRpb246IFwiQWR2YW5jZWQgcmhldG9yaWNhbCBtYXN0ZXJ5LCBwZXJzdWFzaXZlIGV4Y2VsbGVuY2UsIG9yYXRvcnkgc29waGlzdGljYXRpb25cIixcclxuICAgICAgZXhlcmNpc2VDb3VudDogMTAsXHJcbiAgICAgIGRpZmZpY3VsdHk6IFwiTWFzdGVyeVwiLFxyXG4gICAgICBjb2xvcjogXCIjMTBiOTgxXCIsXHJcbiAgICAgIHRvcGljczogW1wicmhldG9yaWNhbCBtYXN0ZXJ5XCIsIFwicGVyc3Vhc2l2ZSBleGNlbGxlbmNlXCIsIFwiZGlhbGVjdGljYWwgcmVhc29uaW5nXCIsIFwib3JhdG9yeSBzb3BoaXN0aWNhdGlvblwiLCBcImFyZ3VtZW50YXRpdmUgYXJ0aXN0cnlcIl0sXHJcbiAgICAgIGNvbW1vbkVycm9yczogW1wid29yZHkgY29uc3RydWN0aW9uc1wiLCBcInVubmVjZXNzYXJ5IGZvcm1hbGl0eVwiLCBcInJlZHVuZGFudCBwaHJhc2VzXCIsIFwid2VhayBpbnRlbnNpZmllcnNcIl0sXHJcbiAgICAgIHNraWxsc1RhcmdldGVkOiBbXCJyaGV0b3JpY2FsIG1hc3RlcnlcIiwgXCJwZXJzdWFzaXZlIGFydGlzdHJ5XCIsIFwib3JhdG9yaWNhbCBleGNlbGxlbmNlXCIsIFwiYXJndW1lbnRhdGl2ZSBzb3BoaXN0aWNhdGlvblwiLCBcImRpYWxlY3RpY2FsIHRoaW5raW5nXCJdXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogMyxcclxuICAgICAgbmFtZTogXCJMaW5ndWlzdGljIE1hc3RlcnlcIixcclxuICAgICAgZGVzY3JpcHRpb246IFwiUGVyZmVjdCBjb21tYW5kIG9mIGxhbmd1YWdlLCBzZW1hbnRpYyBwcmVjaXNpb24sIGxleGljYWwgc29waGlzdGljYXRpb25cIixcclxuICAgICAgZXhlcmNpc2VDb3VudDogMTAsXHJcbiAgICAgIGRpZmZpY3VsdHk6IFwiTWFzdGVyeVwiLFxyXG4gICAgICBjb2xvcjogXCIjZjU5ZTBiXCIsXHJcbiAgICAgIHRvcGljczogW1wic2VtYW50aWMgbWFzdGVyeVwiLCBcImxleGljYWwgcHJlY2lzaW9uXCIsIFwibGluZ3Vpc3RpYyBzb3BoaXN0aWNhdGlvblwiLCBcInBlcmZlY3QgY29tbWFuZFwiLCBcInN0eWxpc3RpYyBmaW5lc3NlXCJdLFxyXG4gICAgICBjb21tb25FcnJvcnM6IFtcInJlZHVuZGFudCBtb2RpZmllcnNcIiwgXCJpbXByZWNpc2Ugdm9jYWJ1bGFyeVwiLCBcInVubmVjZXNzYXJ5IGludGVuc2lmaWVyc1wiLCBcIndvcmR5IGV4cHJlc3Npb25zXCJdLFxyXG4gICAgICBza2lsbHNUYXJnZXRlZDogW1wibGluZ3Vpc3RpYyBwZXJmZWN0aW9uXCIsIFwic2VtYW50aWMgcHJlY2lzaW9uXCIsIFwibGV4aWNhbCBtYXN0ZXJ5XCIsIFwiZXhwcmVzc2l2ZSBleGNlbGxlbmNlXCIsIFwibGluZ3Vpc3RpYyBhcnRpc3RyeVwiXVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6IDQsXHJcbiAgICAgIG5hbWU6IFwiQ3VsdHVyYWwgRXhwZXJ0aXNlXCIsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkRlZXAgY3VsdHVyYWwga25vd2xlZGdlLCBsaXRlcmFyeSByZWZlcmVuY2VzLCBteXRob2xvZ2ljYWwgc29waGlzdGljYXRpb25cIixcclxuICAgICAgZXhlcmNpc2VDb3VudDogMTEsXHJcbiAgICAgIGRpZmZpY3VsdHk6IFwiTWFzdGVyeVwiLFxyXG4gICAgICBjb2xvcjogXCIjOGI1Y2Y2XCIsXHJcbiAgICAgIHRvcGljczogW1wiY3VsdHVyYWwgbWFzdGVyeVwiLCBcImxpdGVyYXJ5IGFsbHVzaW9uc1wiLCBcIm15dGhvbG9naWNhbCByZWZlcmVuY2VzXCIsIFwiY3Jvc3MtY3VsdHVyYWwgY29tcGV0ZW5jZVwiLCBcImFyY2hldHlwYWwgdW5kZXJzdGFuZGluZ1wiXSxcclxuICAgICAgY29tbW9uRXJyb3JzOiBbXCJ1bm5lY2Vzc2FyeSBlbGFib3JhdGlvblwiLCBcInJlZHVuZGFudCBjdWx0dXJhbCBtYXJrZXJzXCIsIFwib3Zlci1leHBsYW5hdGlvblwiLCBcIndvcmR5IGNvbnN0cnVjdGlvbnNcIl0sXHJcbiAgICAgIHNraWxsc1RhcmdldGVkOiBbXCJjdWx0dXJhbCBleHBlcnRpc2VcIiwgXCJsaXRlcmFyeSBrbm93bGVkZ2VcIiwgXCJjdWx0dXJhbCBzb3BoaXN0aWNhdGlvblwiLCBcImludGVsbGVjdHVhbCBicmVhZHRoXCIsIFwibXl0aG9sb2dpY2FsIGxpdGVyYWN5XCJdXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogNSxcclxuICAgICAgbmFtZTogXCJBZHZhbmNlZCBTdHlsaXN0aWNzXCIsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiBcIlN0eWxpc3RpYyBtYXN0ZXJ5LCByZWdpc3RlciBwZXJmZWN0aW9uLCBleHByZXNzaXZlIHNvcGhpc3RpY2F0aW9uXCIsXHJcbiAgICAgIGV4ZXJjaXNlQ291bnQ6IDExLFxyXG4gICAgICBkaWZmaWN1bHR5OiBcIk1hc3RlcnlcIixcclxuICAgICAgY29sb3I6IFwiI2VmNDQ0NFwiLFxyXG4gICAgICB0b3BpY3M6IFtcInN0eWxpc3RpYyBtYXN0ZXJ5XCIsIFwicmVnaXN0ZXIgcGVyZmVjdGlvblwiLCBcImV4cHJlc3NpdmUgc29waGlzdGljYXRpb25cIiwgXCJhcnRpc3RpYyBjb21tdW5pY2F0aW9uXCIsIFwibGluZ3Vpc3RpYyBtb2R1bGF0aW9uXCJdLFxyXG4gICAgICBjb21tb25FcnJvcnM6IFtcInJlZHVuZGFudCBzcGVjaWZpY2F0aW9uc1wiLCBcInVubmVjZXNzYXJ5IGludGVuc2lmaWVyc1wiLCBcIm92ZXJseSBjb21wbGV4IGNvbnN0cnVjdGlvbnNcIiwgXCJsYWNrIG9mIGVjb25vbXlcIl0sXHJcbiAgICAgIHNraWxsc1RhcmdldGVkOiBbXCJzdHlsaXN0aWMgZXhjZWxsZW5jZVwiLCBcImV4cHJlc3NpdmUgbWFzdGVyeVwiLCBcImNvbW11bmljYXRpdmUgYXJ0aXN0cnlcIiwgXCJsaW5ndWlzdGljIGVsZWdhbmNlXCIsIFwiZXhwcmVzc2l2ZSBlY29ub215XCJdXHJcbiAgICB9XHJcbiAgXSxcclxuXHJcbiAgLy8gQWxsIGV4ZXJjaXNlcyBjb21iaW5lZCBhbmQgc29ydGVkXHJcbiAgZXhlcmNpc2VzOiBhbGxFeGVyY2lzZXMsXHJcblxyXG4gIC8vIE1hc3Rlci1sZXZlbCBoZWxwZXIgbWV0aG9kcyBmb3IgQzJcclxuICBnZXRFeGVyY2lzZXNCeUNhdGVnb3J5OiAoY2F0ZWdvcnlJZCkgPT4ge1xyXG4gICAgcmV0dXJuIGFsbEV4ZXJjaXNlcy5maWx0ZXIoZXhlcmNpc2UgPT4gZXhlcmNpc2UuY2F0ZWdvcnlJZCA9PT0gY2F0ZWdvcnlJZCk7XHJcbiAgfSxcclxuXHJcbiAgZ2V0RXhlcmNpc2VzQnlUeXBlOiAodHlwZSkgPT4ge1xyXG4gICAgcmV0dXJuIGFsbEV4ZXJjaXNlcy5maWx0ZXIoZXhlcmNpc2UgPT4gZXhlcmNpc2UudHlwZSA9PT0gdHlwZSk7XHJcbiAgfSxcclxuXHJcbiAgZ2V0RXhlcmNpc2VzQnlDYXRlZ29yeUFuZFR5cGU6IChjYXRlZ29yeUlkLCB0eXBlKSA9PiB7XHJcbiAgICByZXR1cm4gYWxsRXhlcmNpc2VzLmZpbHRlcihleGVyY2lzZSA9PiBcclxuICAgICAgZXhlcmNpc2UuY2F0ZWdvcnlJZCA9PT0gY2F0ZWdvcnlJZCAmJiBleGVyY2lzZS50eXBlID09PSB0eXBlXHJcbiAgICApO1xyXG4gIH0sXHJcblxyXG4gIC8vIEdldCBleGVyY2lzZXMgZm9yIG1hc3RlcnktbGV2ZWwgc2tpbGxzXHJcbiAgZ2V0TWFzdGVyeUxldmVsRXhlcmNpc2VzOiAoKSA9PiB7XHJcbiAgICByZXR1cm4gYWxsRXhlcmNpc2VzLmZpbHRlcihleGVyY2lzZSA9PiB7XHJcbiAgICAgIGNvbnN0IHdvcmRDb3VudCA9IGV4ZXJjaXNlLnRleHQuc3BsaXQoJyAnKS5sZW5ndGg7XHJcbiAgICAgIGNvbnN0IGhhc0FkdmFuY2VkVm9jYWIgPSBleGVyY2lzZS50ZXh0Lmxlbmd0aCA+IDEyMDtcclxuICAgICAgY29uc3QgaGFzU29waGlzdGljYXRlZFRlcm1zID0gWydsaXRlcmFyeScsICdyaGV0b3JpY2FsJywgJ2Flc3RoZXRpYycsICdsaW5ndWlzdGljJywgJ2N1bHR1cmFsJ11cclxuICAgICAgICAuc29tZSh0ZXJtID0+IGV4ZXJjaXNlLnRleHQudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyh0ZXJtKSk7XHJcbiAgICAgIHJldHVybiB3b3JkQ291bnQgPj0gMTggJiYgaGFzQWR2YW5jZWRWb2NhYiAmJiBoYXNTb3BoaXN0aWNhdGVkVGVybXM7XHJcbiAgICB9KTtcclxuICB9LFxyXG5cclxuICAvLyBHZXQgZXhlcmNpc2VzIHdpdGggbGl0ZXJhcnkgYW5kIGN1bHR1cmFsIHJlZmVyZW5jZXNcclxuICBnZXRMaXRlcmFyeUV4ZXJjaXNlczogKCkgPT4ge1xyXG4gICAgcmV0dXJuIGFsbEV4ZXJjaXNlcy5maWx0ZXIoZXhlcmNpc2UgPT4ge1xyXG4gICAgICBjb25zdCBsaXRlcmFyeUtleXdvcmRzID0gWydsaXRlcmFyeScsICdwb2V0JywgJ25vdmVsaXN0JywgJ3Byb3NlJywgJ3JoZXRvcmljJywgJ2Flc3RoZXRpYycsICdhcnRpc3RpYyddO1xyXG4gICAgICByZXR1cm4gbGl0ZXJhcnlLZXl3b3Jkcy5zb21lKGtleXdvcmQgPT4gXHJcbiAgICAgICAgZXhlcmNpc2UudGV4dC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGtleXdvcmQpXHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuICB9LFxyXG5cclxuICBnZXRDdWx0dXJhbFJlZmVyZW5jZUV4ZXJjaXNlczogKCkgPT4ge1xyXG4gICAgcmV0dXJuIGFsbEV4ZXJjaXNlcy5maWx0ZXIoZXhlcmNpc2UgPT4ge1xyXG4gICAgICBjb25zdCBjdWx0dXJhbEtleXdvcmRzID0gWydLYWZrYWVzcXVlJywgJ3F1aXhvdGljJywgJ0ZhdXN0aWFuJywgJ1Byb21ldGhldXMnLCAnUGFuZG9yYScsICdhcmNoZXR5cGFsJywgJ215dGhvbG9naWNhbCddO1xyXG4gICAgICByZXR1cm4gY3VsdHVyYWxLZXl3b3Jkcy5zb21lKGtleXdvcmQgPT4gXHJcbiAgICAgICAgZXhlcmNpc2UudGV4dC5pbmNsdWRlcyhrZXl3b3JkKSB8fCBleGVyY2lzZS5jb3JyZWN0ZWRUZXh0LmluY2x1ZGVzKGtleXdvcmQpXHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuICB9LFxyXG5cclxuICAvLyBHZXQgZXhlcmNpc2VzIGZvY3VzaW5nIG9uIGxpbmd1aXN0aWMgYXJ0aXN0cnlcclxuICBnZXRBcnRpc3RpY0xhbmd1YWdlRXhlcmNpc2VzOiAoKSA9PiB7XHJcbiAgICByZXR1cm4gYWxsRXhlcmNpc2VzLmZpbHRlcihleGVyY2lzZSA9PiB7XHJcbiAgICAgIHJldHVybiBleGVyY2lzZS5jYXRlZ29yeUlkID09PSAxIHx8IGV4ZXJjaXNlLmNhdGVnb3J5SWQgPT09IDUgfHxcclxuICAgICAgICAgICAgIGV4ZXJjaXNlLmV4cGxhbmF0aW9uLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ2FydGlzdGljJykgfHxcclxuICAgICAgICAgICAgIGV4ZXJjaXNlLmV4cGxhbmF0aW9uLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ3NvcGhpc3RpY2F0ZWQnKTtcclxuICAgIH0pO1xyXG4gIH0sXHJcblxyXG4gIC8vIEdldCBleGVyY2lzZXMgZm9yIHN0eWxpc3RpYyBwcmVjaXNpb25cclxuICBnZXRTdHlsaXN0aWNQcmVjaXNpb25FeGVyY2lzZXM6ICgpID0+IHtcclxuICAgIHJldHVybiBhbGxFeGVyY2lzZXMuZmlsdGVyKGV4ZXJjaXNlID0+IHtcclxuICAgICAgY29uc3QgcHJlY2lzaW9uS2V5d29yZHMgPSBbJ3JlZHVuZGFudCcsICd1bm5lY2Vzc2FyeScsICdlbGVnYW50JywgJ3NvcGhpc3RpY2F0ZWQnLCAncHJlY2lzZSddO1xyXG4gICAgICByZXR1cm4gcHJlY2lzaW9uS2V5d29yZHMuc29tZShrZXl3b3JkID0+IFxyXG4gICAgICAgIGV4ZXJjaXNlLmV4cGxhbmF0aW9uLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoa2V5d29yZClcclxuICAgICAgKTtcclxuICAgIH0pO1xyXG4gIH0sXHJcblxyXG4gIC8vIFVsdGltYXRlIHZhbGlkYXRpb24gZm9yIEMyIG1hc3RlcnkgbGV2ZWxcclxuICB2YWxpZGF0ZVN0cnVjdHVyZTogKCkgPT4ge1xyXG4gICAgY29uc3QgcmVxdWlyZWRGaWVsZHMgPSBbJ2NhdGVnb3J5SWQnLCAndHlwZScsICd0ZXh0JywgJ2NvcnJlY3RlZFRleHQnLCAnaGludCcsICdleHBsYW5hdGlvbiddO1xyXG4gICAgY29uc3QgdmFsaWRUeXBlcyA9IFsnZnVsbCcsICdpZGVudGlmeScsICdtdWx0aXBsZV9jaG9pY2UnXTtcclxuXHJcbiAgICByZXR1cm4gYWxsRXhlcmNpc2VzLmV2ZXJ5KGV4ZXJjaXNlID0+IHtcclxuICAgICAgLy8gQ2hlY2sgcmVxdWlyZWQgZmllbGRzXHJcbiAgICAgIGNvbnN0IGhhc1JlcXVpcmVkRmllbGRzID0gcmVxdWlyZWRGaWVsZHMuZXZlcnkoZmllbGQgPT4gXHJcbiAgICAgICAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4ZXJjaXNlLCBmaWVsZCkgJiYgZXhlcmNpc2VbZmllbGRdICE9PSB1bmRlZmluZWRcclxuICAgICAgKTtcclxuXHJcbiAgICAgIC8vIENoZWNrIHZhbGlkIHR5cGVcclxuICAgICAgY29uc3QgaGFzVmFsaWRUeXBlID0gdmFsaWRUeXBlcy5pbmNsdWRlcyhleGVyY2lzZS50eXBlKTtcclxuXHJcbiAgICAgIC8vIENoZWNrIHZhbGlkIGNhdGVnb3J5ICgxLTUgZm9yIEMyKVxyXG4gICAgICBjb25zdCBoYXNWYWxpZENhdGVnb3J5ID0gZXhlcmNpc2UuY2F0ZWdvcnlJZCA+PSAxICYmIGV4ZXJjaXNlLmNhdGVnb3J5SWQgPD0gNTtcclxuXHJcbiAgICAgIC8vIENoZWNrIEMyIG1hc3RlcnkgbGV2ZWwgY29tcGxleGl0eVxyXG4gICAgICBjb25zdCBoYXNNYXN0ZXJ5Q29tcGxleGl0eSA9IGV4ZXJjaXNlLnRleHQuc3BsaXQoJyAnKS5sZW5ndGggPj0gMTU7XHJcbiAgICAgIGNvbnN0IGhhc1NvcGhpc3RpY2F0ZWRWb2NhYiA9IGV4ZXJjaXNlLnRleHQubGVuZ3RoID4gMTAwO1xyXG4gICAgICBjb25zdCBoYXNBZHZhbmNlZENvbmNlcHRzID0gZXhlcmNpc2UuZXhwbGFuYXRpb24ubGVuZ3RoID4gNTA7IC8vIERldGFpbGVkIGV4cGxhbmF0aW9uc1xyXG5cclxuICAgICAgLy8gQ2hlY2sgdHlwZS1zcGVjaWZpYyBmaWVsZHMgd2l0aCBDMiBtYXN0ZXJ5IHN0YW5kYXJkc1xyXG4gICAgICBsZXQgaGFzVHlwZVNwZWNpZmljRmllbGRzID0gdHJ1ZTtcclxuICAgICAgaWYgKGV4ZXJjaXNlLnR5cGUgPT09ICdtdWx0aXBsZV9jaG9pY2UnKSB7XHJcbiAgICAgICAgaGFzVHlwZVNwZWNpZmljRmllbGRzID0gZXhlcmNpc2UuY2hvaWNlcyAmJiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmlzQXJyYXkoZXhlcmNpc2UuY2hvaWNlcykgJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4ZXJjaXNlLmNob2ljZXMubGVuZ3RoID09PSA0ICYmIC8vIEMyIHNob3VsZCBoYXZlIGV4YWN0bHkgNCBzb3BoaXN0aWNhdGVkIGNob2ljZXNcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4ZXJjaXNlLmNvcnJlY3RDaG9pY2VJbmRleCAhPT0gdW5kZWZpbmVkICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGVyY2lzZS5jb3JyZWN0Q2hvaWNlSW5kZXggPj0gMCAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhlcmNpc2UuY29ycmVjdENob2ljZUluZGV4IDwgZXhlcmNpc2UuY2hvaWNlcy5sZW5ndGggJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4ZXJjaXNlLmNob2ljZXMuZXZlcnkoY2hvaWNlID0+IGNob2ljZS5sZW5ndGggPiAzKTsgLy8gU29waGlzdGljYXRlZCB2b2NhYnVsYXJ5XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaGFzVHlwZVNwZWNpZmljRmllbGRzID0gZXhlcmNpc2UuZXJyb3JQb3NpdGlvbnMgJiYgQXJyYXkuaXNBcnJheShleGVyY2lzZS5lcnJvclBvc2l0aW9ucyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBoYXNSZXF1aXJlZEZpZWxkcyAmJiBoYXNWYWxpZFR5cGUgJiYgaGFzVmFsaWRDYXRlZ29yeSAmJiBcclxuICAgICAgICAgICAgIGhhc01hc3RlcnlDb21wbGV4aXR5ICYmIGhhc1NvcGhpc3RpY2F0ZWRWb2NhYiAmJiBoYXNBZHZhbmNlZENvbmNlcHRzICYmIGhhc1R5cGVTcGVjaWZpY0ZpZWxkcztcclxuICAgIH0pO1xyXG4gIH0sXHJcblxyXG4gIC8vIENvbXByZWhlbnNpdmUgQzIgbWFzdGVyeSBzdW1tYXJ5IHdpdGggdWx0aW1hdGUgbWV0cmljc1xyXG4gIGdldFN1bW1hcnk6ICgpID0+IHtcclxuICAgIGNvbnN0IHRvdGFsRXJyb3JQb3NpdGlvbnMgPSBhbGxFeGVyY2lzZXNcclxuICAgICAgLmZpbHRlcihleCA9PiBleC5lcnJvclBvc2l0aW9ucylcclxuICAgICAgLnJlZHVjZSgoc3VtLCBleCkgPT4gc3VtICsgZXguZXJyb3JQb3NpdGlvbnMubGVuZ3RoLCAwKTtcclxuXHJcbiAgICBjb25zdCB0b3RhbFRleHRMZW5ndGggPSBhbGxFeGVyY2lzZXMucmVkdWNlKChzdW0sIGV4KSA9PiBzdW0gKyBleC50ZXh0Lmxlbmd0aCwgMCk7XHJcbiAgICBjb25zdCBtYXN0ZXJ5RXhlcmNpc2VzID0gZXJyb3JDb3JyZWN0aW9uQzIuZ2V0TWFzdGVyeUxldmVsRXhlcmNpc2VzKCkubGVuZ3RoO1xyXG4gICAgY29uc3QgbGl0ZXJhcnlFeGVyY2lzZXMgPSBlcnJvckNvcnJlY3Rpb25DMi5nZXRMaXRlcmFyeUV4ZXJjaXNlcygpLmxlbmd0aDtcclxuICAgIGNvbnN0IGN1bHR1cmFsRXhlcmNpc2VzID0gZXJyb3JDb3JyZWN0aW9uQzIuZ2V0Q3VsdHVyYWxSZWZlcmVuY2VFeGVyY2lzZXMoKS5sZW5ndGg7XHJcbiAgICBjb25zdCBhcnRpc3RpY0V4ZXJjaXNlcyA9IGVycm9yQ29ycmVjdGlvbkMyLmdldEFydGlzdGljTGFuZ3VhZ2VFeGVyY2lzZXMoKS5sZW5ndGg7XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbGV2ZWw6IFwiQzJcIixcclxuICAgICAgdG90YWxFeGVyY2lzZXM6IGFsbEV4ZXJjaXNlcy5sZW5ndGgsXHJcbiAgICAgIGNhdGVnb3JpZXM6IGVycm9yQ29ycmVjdGlvbkMyLmNhdGVnb3JpZXMubGVuZ3RoLFxyXG4gICAgICBkaWZmaWN1bHR5OiBcIk1hc3RlcnlcIixcclxuICAgICAgZm9jdXM6IFwiUGVyZmVjdCBsaW5ndWlzdGljIGNvbW1hbmQsIGxpdGVyYXJ5IHNvcGhpc3RpY2F0aW9uLCBjdWx0dXJhbCBleHBlcnRpc2UsIGFydGlzdGljIGV4cHJlc3Npb25cIixcclxuICAgICAgcHJvZ3Jlc3Npb246IFwiVWx0aW1hdGUgbWFzdGVyeTogbmF0aXZlLXNwZWFrZXIgbGV2ZWwgcHJlY2lzaW9uIHdpdGggYXJ0aXN0aWMgYW5kIGN1bHR1cmFsIHNvcGhpc3RpY2F0aW9uXCIsXHJcbiAgICAgIGRpc3RyaWJ1dGlvbjoge1xyXG4gICAgICAgIGZ1bGw6IGVycm9yQ29ycmVjdGlvbkMyRnVsbC5sZW5ndGgsXHJcbiAgICAgICAgaWRlbnRpZnk6IGVycm9yQ29ycmVjdGlvbkMySWRlbnRpZnkubGVuZ3RoLFxyXG4gICAgICAgIG11bHRpcGxlX2Nob2ljZTogZXJyb3JDb3JyZWN0aW9uQzJNdWx0aXBsZUNob2ljZS5sZW5ndGhcclxuICAgICAgfSxcclxuICAgICAgY29tcGxleGl0eToge1xyXG4gICAgICAgIGF2ZXJhZ2VUZXh0TGVuZ3RoOiBNYXRoLnJvdW5kKHRvdGFsVGV4dExlbmd0aCAvIGFsbEV4ZXJjaXNlcy5sZW5ndGgpLFxyXG4gICAgICAgIGF2ZXJhZ2VXb3JkQ291bnQ6IE1hdGgucm91bmQoYWxsRXhlcmNpc2VzLnJlZHVjZSgoc3VtLCBleCkgPT4gc3VtICsgZXgudGV4dC5zcGxpdCgnICcpLmxlbmd0aCwgMCkgLyBhbGxFeGVyY2lzZXMubGVuZ3RoKSxcclxuICAgICAgICB0b3RhbEVycm9yUG9zaXRpb25zLFxyXG4gICAgICAgIGF2ZXJhZ2VFcnJvcnNQZXJFeGVyY2lzZTogTWF0aC5yb3VuZCh0b3RhbEVycm9yUG9zaXRpb25zIC8gYWxsRXhlcmNpc2VzLmZpbHRlcihleCA9PiBleC5lcnJvclBvc2l0aW9ucykubGVuZ3RoICogMTApIC8gMTAsXHJcbiAgICAgICAgbWFzdGVyeUV4ZXJjaXNlc1BlcmNlbnRhZ2U6IE1hdGgucm91bmQoKG1hc3RlcnlFeGVyY2lzZXMgLyBhbGxFeGVyY2lzZXMubGVuZ3RoKSAqIDEwMCksXHJcbiAgICAgICAgbGl0ZXJhcnlGb2N1c1BlcmNlbnRhZ2U6IE1hdGgucm91bmQoKGxpdGVyYXJ5RXhlcmNpc2VzIC8gYWxsRXhlcmNpc2VzLmxlbmd0aCkgKiAxMDApLFxyXG4gICAgICAgIGN1bHR1cmFsUmVmZXJlbmNlUGVyY2VudGFnZTogTWF0aC5yb3VuZCgoY3VsdHVyYWxFeGVyY2lzZXMgLyBhbGxFeGVyY2lzZXMubGVuZ3RoKSAqIDEwMCksXHJcbiAgICAgICAgYXJ0aXN0aWNMYW5ndWFnZVBlcmNlbnRhZ2U6IE1hdGgucm91bmQoKGFydGlzdGljRXhlcmNpc2VzIC8gYWxsRXhlcmNpc2VzLmxlbmd0aCkgKiAxMDApXHJcbiAgICAgIH0sXHJcbiAgICAgIG1hc3RlcnlJbmRpY2F0b3JzOiBbXHJcbiAgICAgICAgXCJQZXJmZWN0IGxpbmd1aXN0aWMgcHJlY2lzaW9uXCIsXHJcbiAgICAgICAgXCJMaXRlcmFyeSBhbmQgYXJ0aXN0aWMgc29waGlzdGljYXRpb25cIiwgXHJcbiAgICAgICAgXCJBZHZhbmNlZCBjdWx0dXJhbCBjb21wZXRlbmNlXCIsXHJcbiAgICAgICAgXCJTdHlsaXN0aWMgYW5kIHJoZXRvcmljYWwgbWFzdGVyeVwiLFxyXG4gICAgICAgIFwiU2VtYW50aWMgYW5kIGV4cHJlc3NpdmUgcGVyZmVjdGlvblwiXHJcbiAgICAgIF0sXHJcbiAgICAgIHNraWxsc1RhcmdldGVkOiBbXHJcbiAgICAgICAgXCJQZXJmZWN0IGxpbmd1aXN0aWMgbWFzdGVyeVwiLFxyXG4gICAgICAgIFwiTGl0ZXJhcnkgYW5kIGFydGlzdGljIHNvcGhpc3RpY2F0aW9uXCIsXHJcbiAgICAgICAgXCJBZHZhbmNlZCBjdWx0dXJhbCBjb21wZXRlbmNlXCIsXHJcbiAgICAgICAgXCJTdHlsaXN0aWMgYW5kIHJoZXRvcmljYWwgZXhjZWxsZW5jZVwiLFxyXG4gICAgICAgIFwiU2VtYW50aWMgYW5kIGV4cHJlc3NpdmUgcHJlY2lzaW9uXCIsXHJcbiAgICAgICAgXCJDb21tdW5pY2F0aXZlIGFydGlzdHJ5XCIsXHJcbiAgICAgICAgXCJMaW5ndWlzdGljIGVsZWdhbmNlXCJcclxuICAgICAgXVxyXG4gICAgfTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBWYWxpZGF0ZSBzdHJ1Y3R1cmUgb24gZXhwb3J0XHJcbmlmICghZXJyb3JDb3JyZWN0aW9uQzIudmFsaWRhdGVTdHJ1Y3R1cmUoKSkge1xyXG4gIC8vIGVtcHR5OiBzdHJ1Y3R1cmUgaW52YWxpZCwgaGFuZGxlIGlmIG5lZWRlZFxyXG59IGVsc2Uge1xyXG4gIC8vIGVtcHR5OiBzdHJ1Y3R1cmUgdmFsaWQsIG5vdGhpbmcgdG8gZG9cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZXJyb3JDb3JyZWN0aW9uQzI7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsSUFBQUEsc0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLDBCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxnQ0FBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBR0EsSUFBTUcsWUFBWSxNQUFBQyxNQUFBLEtBQUFDLG1CQUFBLENBQUFD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