4624be769dfe78fbc5aa05263fb600d0
function cov_1svxgtq1ar() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingFeedback\\index.js";
  var hash = "4175c229d894db2e42e44db8ada475ea23b79b3d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingFeedback\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 52,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "2": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 57
        }
      },
      "3": {
        start: {
          line: 25,
          column: 26
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "4": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 61
        }
      },
      "5": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "6": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "9": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 46
        }
      },
      "10": {
        start: {
          line: 36,
          column: 9
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "11": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 34
        }
      },
      "12": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 51,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 26
          }
        },
        loc: {
          start: {
            line: 21,
            column: 6
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 2
          },
          end: {
            line: 20,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 24
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 36
          },
          end: {
            line: 24,
            column: 45
          }
        }, {
          start: {
            line: 24,
            column: 48
          },
          end: {
            line: 24,
            column: 57
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 38
          },
          end: {
            line: 25,
            column: 47
          }
        }, {
          start: {
            line: 25,
            column: 50
          },
          end: {
            line: 25,
            column: 59
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 22
          },
          end: {
            line: 26,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 34
          },
          end: {
            line: 26,
            column: 45
          }
        }, {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 61
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        }, {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 38,
            column: 3
          }
        }],
        line: 31
      },
      "5": {
        loc: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 31,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 31,
            column: 16
          }
        }, {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 31,
            column: 33
          }
        }],
        line: 31
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 38,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 38,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 32
          }
        }, {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 78
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 49
          },
          end: {
            line: 44,
            column: 62
          }
        }, {
          start: {
            line: 44,
            column: 65
          },
          end: {
            line: 44,
            column: 78
          }
        }],
        line: 44
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4175c229d894db2e42e44db8ada475ea23b79b3d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1svxgtq1ar = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1svxgtq1ar();
import { View } from "react-native";
import ContentSection from "../../../../components/ui/ContentSection";
import createStyles from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
cov_1svxgtq1ar().s[0]++;
var SpellingFeedback = function SpellingFeedback(_ref) {
  var isCorrect = _ref.isCorrect,
    correctAnswer = _ref.correctAnswer,
    explanation = _ref.explanation,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_1svxgtq1ar().b[0][0]++, "#3b82f6") : _ref$levelColor;
  cov_1svxgtq1ar().f[0]++;
  var styles = (cov_1svxgtq1ar().s[1]++, createStyles(levelColor));
  var feedbackColor = (cov_1svxgtq1ar().s[2]++, isCorrect ? (cov_1svxgtq1ar().b[1][0]++, "#10b981") : (cov_1svxgtq1ar().b[1][1]++, "#ef4444"));
  var backgroundColor = (cov_1svxgtq1ar().s[3]++, isCorrect ? (cov_1svxgtq1ar().b[2][0]++, "#f0fdf4") : (cov_1svxgtq1ar().b[2][1]++, "#fef2f2"));
  var resultTitle = (cov_1svxgtq1ar().s[4]++, isCorrect ? (cov_1svxgtq1ar().b[3][0]++, "Correct !") : (cov_1svxgtq1ar().b[3][1]++, "Incorrect !"));
  var feedbackContent = (cov_1svxgtq1ar().s[5]++, "");
  cov_1svxgtq1ar().s[6]++;
  if ((cov_1svxgtq1ar().b[5][0]++, !isCorrect) && (cov_1svxgtq1ar().b[5][1]++, correctAnswer)) {
    cov_1svxgtq1ar().b[4][0]++;
    cov_1svxgtq1ar().s[7]++;
    feedbackContent = `La bonne réponse est : "${correctAnswer}"`;
    cov_1svxgtq1ar().s[8]++;
    if (explanation) {
      cov_1svxgtq1ar().b[6][0]++;
      cov_1svxgtq1ar().s[9]++;
      feedbackContent += `\n\n${explanation}`;
    } else {
      cov_1svxgtq1ar().b[6][1]++;
    }
  } else {
    cov_1svxgtq1ar().b[4][1]++;
    cov_1svxgtq1ar().s[10]++;
    if (explanation) {
      cov_1svxgtq1ar().b[7][0]++;
      cov_1svxgtq1ar().s[11]++;
      feedbackContent = explanation;
    } else {
      cov_1svxgtq1ar().b[7][1]++;
    }
  }
  cov_1svxgtq1ar().s[12]++;
  return _jsx(View, {
    style: styles.container,
    children: _jsx(ContentSection, {
      title: resultTitle,
      content: (cov_1svxgtq1ar().b[8][0]++, feedbackContent) || (cov_1svxgtq1ar().b[8][1]++, isCorrect ? (cov_1svxgtq1ar().b[9][0]++, "Bien joué !") : (cov_1svxgtq1ar().b[9][1]++, "Réessayez !")),
      levelColor: feedbackColor,
      backgroundColor: backgroundColor,
      style: styles.feedbackSection,
      isHighlighted: true
    })
  });
};
export default SpellingFeedback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWaWV3IiwiQ29udGVudFNlY3Rpb24iLCJjcmVhdGVTdHlsZXMiLCJqc3giLCJfanN4IiwiY292XzFzdnhndHExYXIiLCJzIiwiU3BlbGxpbmdGZWVkYmFjayIsIl9yZWYiLCJpc0NvcnJlY3QiLCJjb3JyZWN0QW5zd2VyIiwiZXhwbGFuYXRpb24iLCJfcmVmJGxldmVsQ29sb3IiLCJsZXZlbENvbG9yIiwiYiIsImYiLCJzdHlsZXMiLCJmZWVkYmFja0NvbG9yIiwiYmFja2dyb3VuZENvbG9yIiwicmVzdWx0VGl0bGUiLCJmZWVkYmFja0NvbnRlbnQiLCJzdHlsZSIsImNvbnRhaW5lciIsImNoaWxkcmVuIiwidGl0bGUiLCJjb250ZW50IiwiZmVlZGJhY2tTZWN0aW9uIiwiaXNIaWdobGlnaHRlZCJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNwZWxsaW5nRmVlZGJhY2svaW5kZXguanMgLSBWRVJTSU9OIFJFRkFDVE9SSVPDiUUgKENvbnRlbnRTZWN0aW9uIGF2ZWMgY291bGV1cnMpXHJcblxyXG5pbXBvcnQgeyBWaWV3IH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xyXG5pbXBvcnQgQ29udGVudFNlY3Rpb24gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvdWkvQ29udGVudFNlY3Rpb25cIjtcclxuaW1wb3J0IGNyZWF0ZVN0eWxlcyBmcm9tIFwiLi9zdHlsZVwiO1xyXG5cclxuLyoqXHJcbiAqIPCfkqwgU3BlbGxpbmdGZWVkYmFjayAtIFZlcnNpb24gUmVmYWN0b3Jpc8OpZSBhdmVjIENvbnRlbnRTZWN0aW9uXHJcbiAqIFJlbXBsYWNlIGxlIGZlZWRiYWNrIGN1c3RvbSBwYXIgQ29udGVudFNlY3Rpb24gYXZlYyBjb3VsZXVycyBkeW5hbWlxdWVzXHJcbiAqIFxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzQ29ycmVjdCAtIEluZGlxdWUgc2kgbGEgcsOpcG9uc2UgZXN0IGNvcnJlY3RlXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb3JyZWN0QW5zd2VyIC0gTGEgcsOpcG9uc2UgY29ycmVjdGVcclxuICogQHBhcmFtIHtzdHJpbmd9IGV4cGxhbmF0aW9uIC0gRXhwbGljYXRpb24gc3VwcGzDqW1lbnRhaXJlXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbENvbG9yIC0gQ291bGV1ciBhc3NvY2nDqWUgYXUgbml2ZWF1XHJcbiAqL1xyXG5jb25zdCBTcGVsbGluZ0ZlZWRiYWNrID0gKHsgXHJcbiAgaXNDb3JyZWN0LCBcclxuICBjb3JyZWN0QW5zd2VyLCBcclxuICBleHBsYW5hdGlvbixcclxuICBsZXZlbENvbG9yID0gXCIjM2I4MmY2XCIgXHJcbn0pID0+IHtcclxuICBjb25zdCBzdHlsZXMgPSBjcmVhdGVTdHlsZXMobGV2ZWxDb2xvcik7XHJcblxyXG4gIGNvbnN0IGZlZWRiYWNrQ29sb3IgPSBpc0NvcnJlY3QgPyBcIiMxMGI5ODFcIiA6IFwiI2VmNDQ0NFwiO1xyXG4gIGNvbnN0IGJhY2tncm91bmRDb2xvciA9IGlzQ29ycmVjdCA/IFwiI2YwZmRmNFwiIDogXCIjZmVmMmYyXCI7XHJcbiAgY29uc3QgcmVzdWx0VGl0bGUgPSBpc0NvcnJlY3QgPyBcIkNvcnJlY3QgIVwiIDogXCJJbmNvcnJlY3QgIVwiO1xyXG5cclxuICAvLyBDb25zdHJ1aXJlIGxlIGNvbnRlbnUgZHUgZmVlZGJhY2tcclxuICBsZXQgZmVlZGJhY2tDb250ZW50ID0gXCJcIjtcclxuICBcclxuICBpZiAoIWlzQ29ycmVjdCAmJiBjb3JyZWN0QW5zd2VyKSB7XHJcbiAgICBmZWVkYmFja0NvbnRlbnQgPSBgTGEgYm9ubmUgcsOpcG9uc2UgZXN0IDogXCIke2NvcnJlY3RBbnN3ZXJ9XCJgO1xyXG4gICAgaWYgKGV4cGxhbmF0aW9uKSB7XHJcbiAgICAgIGZlZWRiYWNrQ29udGVudCArPSBgXFxuXFxuJHtleHBsYW5hdGlvbn1gO1xyXG4gICAgfVxyXG4gIH0gZWxzZSBpZiAoZXhwbGFuYXRpb24pIHtcclxuICAgIGZlZWRiYWNrQ29udGVudCA9IGV4cGxhbmF0aW9uO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cclxuICAgICAgPENvbnRlbnRTZWN0aW9uXHJcbiAgICAgICAgdGl0bGU9e3Jlc3VsdFRpdGxlfVxyXG4gICAgICAgIGNvbnRlbnQ9e2ZlZWRiYWNrQ29udGVudCB8fCAoaXNDb3JyZWN0ID8gXCJCaWVuIGpvdcOpICFcIiA6IFwiUsOpZXNzYXlleiAhXCIpfVxyXG4gICAgICAgIGxldmVsQ29sb3I9e2ZlZWRiYWNrQ29sb3J9XHJcbiAgICAgICAgYmFja2dyb3VuZENvbG9yPXtiYWNrZ3JvdW5kQ29sb3J9XHJcbiAgICAgICAgc3R5bGU9e3N0eWxlcy5mZWVkYmFja1NlY3Rpb259XHJcbiAgICAgICAgaXNIaWdobGlnaHRlZFxyXG4gICAgICAvPlxyXG4gICAgPC9WaWV3PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTcGVsbGluZ0ZlZWRiYWNrOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsU0FBU0EsSUFBSSxRQUFRLGNBQWM7QUFDbkMsT0FBT0MsY0FBYyxNQUFNLDBDQUEwQztBQUNyRSxPQUFPQyxZQUFZLE1BQU0sU0FBUztBQUFDLFNBQUFDLEdBQUEsSUFBQUMsSUFBQTtBQUFBQyxjQUFBLEdBQUFDLENBQUE7QUFXbkMsSUFBTUMsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFnQkEsQ0FBQUMsSUFBQSxFQUtoQjtFQUFBLElBSkpDLFNBQVMsR0FBQUQsSUFBQSxDQUFUQyxTQUFTO0lBQ1RDLGFBQWEsR0FBQUYsSUFBQSxDQUFiRSxhQUFhO0lBQ2JDLFdBQVcsR0FBQUgsSUFBQSxDQUFYRyxXQUFXO0lBQUFDLGVBQUEsR0FBQUosSUFBQSxDQUNYSyxVQUFVO0lBQVZBLFVBQVUsR0FBQUQsZUFBQSxlQUFBUCxjQUFBLEdBQUFTLENBQUEsVUFBRyxTQUFTLElBQUFGLGVBQUE7RUFBQVAsY0FBQSxHQUFBVSxDQUFBO0VBRXRCLElBQU1DLE1BQU0sSUFBQVgsY0FBQSxHQUFBQyxDQUFBLE9BQUdKLFlBQVksQ0FBQ1csVUFBVSxDQUFDO0VBRXZDLElBQU1JLGFBQWEsSUFBQVosY0FBQSxHQUFBQyxDQUFBLE9BQUdHLFNBQVMsSUFBQUosY0FBQSxHQUFBUyxDQUFBLFVBQUcsU0FBUyxLQUFBVCxjQUFBLEdBQUFTLENBQUEsVUFBRyxTQUFTO0VBQ3ZELElBQU1JLGVBQWUsSUFBQWIsY0FBQSxHQUFBQyxDQUFBLE9BQUdHLFNBQVMsSUFBQUosY0FBQSxHQUFBUyxDQUFBLFVBQUcsU0FBUyxLQUFBVCxjQUFBLEdBQUFTLENBQUEsVUFBRyxTQUFTO0VBQ3pELElBQU1LLFdBQVcsSUFBQWQsY0FBQSxHQUFBQyxDQUFBLE9BQUdHLFNBQVMsSUFBQUosY0FBQSxHQUFBUyxDQUFBLFVBQUcsV0FBVyxLQUFBVCxjQUFBLEdBQUFTLENBQUEsVUFBRyxhQUFhO0VBRzNELElBQUlNLGVBQWUsSUFBQWYsY0FBQSxHQUFBQyxDQUFBLE9BQUcsRUFBRTtFQUFDRCxjQUFBLEdBQUFDLENBQUE7RUFFekIsSUFBSSxDQUFBRCxjQUFBLEdBQUFTLENBQUEsV0FBQ0wsU0FBUyxNQUFBSixjQUFBLEdBQUFTLENBQUEsVUFBSUosYUFBYSxHQUFFO0lBQUFMLGNBQUEsR0FBQVMsQ0FBQTtJQUFBVCxjQUFBLEdBQUFDLENBQUE7SUFDL0JjLGVBQWUsR0FBRywyQkFBMkJWLGFBQWEsR0FBRztJQUFDTCxjQUFBLEdBQUFDLENBQUE7SUFDOUQsSUFBSUssV0FBVyxFQUFFO01BQUFOLGNBQUEsR0FBQVMsQ0FBQTtNQUFBVCxjQUFBLEdBQUFDLENBQUE7TUFDZmMsZUFBZSxJQUFJLE9BQU9ULFdBQVcsRUFBRTtJQUN6QyxDQUFDO01BQUFOLGNBQUEsR0FBQVMsQ0FBQTtJQUFBO0VBQ0gsQ0FBQyxNQUFNO0lBQUFULGNBQUEsR0FBQVMsQ0FBQTtJQUFBVCxjQUFBLEdBQUFDLENBQUE7SUFBQSxJQUFJSyxXQUFXLEVBQUU7TUFBQU4sY0FBQSxHQUFBUyxDQUFBO01BQUFULGNBQUEsR0FBQUMsQ0FBQTtNQUN0QmMsZUFBZSxHQUFHVCxXQUFXO0lBQy9CLENBQUM7TUFBQU4sY0FBQSxHQUFBUyxDQUFBO0lBQUE7RUFBRDtFQUFDVCxjQUFBLEdBQUFDLENBQUE7RUFFRCxPQUNFRixJQUFBLENBQUNKLElBQUk7SUFBQ3FCLEtBQUssRUFBRUwsTUFBTSxDQUFDTSxTQUFVO0lBQUFDLFFBQUEsRUFDNUJuQixJQUFBLENBQUNILGNBQWM7TUFDYnVCLEtBQUssRUFBRUwsV0FBWTtNQUNuQk0sT0FBTyxFQUFFLENBQUFwQixjQUFBLEdBQUFTLENBQUEsVUFBQU0sZUFBZSxNQUFBZixjQUFBLEdBQUFTLENBQUEsVUFBS0wsU0FBUyxJQUFBSixjQUFBLEdBQUFTLENBQUEsVUFBRyxhQUFhLEtBQUFULGNBQUEsR0FBQVMsQ0FBQSxVQUFHLGFBQWEsRUFBRTtNQUN4RUQsVUFBVSxFQUFFSSxhQUFjO01BQzFCQyxlQUFlLEVBQUVBLGVBQWdCO01BQ2pDRyxLQUFLLEVBQUVMLE1BQU0sQ0FBQ1UsZUFBZ0I7TUFDOUJDLGFBQWE7SUFBQSxDQUNkO0VBQUMsQ0FDRSxDQUFDO0FBRVgsQ0FBQztBQUVELGVBQWVwQixnQkFBZ0IiLCJpZ25vcmVMaXN0IjpbXX0=