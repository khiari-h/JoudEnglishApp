7bd5d8c81cb514bd6b40044455814a9a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _CategorySelector = _interopRequireDefault(require("../../../../components/exercise-common/CategorySelector"));
var _react = require("react");
var _jsxRuntime = require("react/jsx-runtime");
function cov_2mqvh5q6ef() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesCategorySelector\\index.js";
  var hash = "5b23b2ade48a277e919eb28cb86fe6e1b8d98655";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesCategorySelector\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 32
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 30
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "2": {
        start: {
          line: 13,
          column: 71
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "3": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 21,
          column: 24
        }
      },
      "4": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "5": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 30,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 32
          },
          end: {
            line: 5,
            column: 33
          }
        },
        loc: {
          start: {
            line: 10,
            column: 6
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 45
          },
          end: {
            line: 13,
            column: 46
          }
        },
        loc: {
          start: {
            line: 13,
            column: 71
          },
          end: {
            line: 16,
            column: 3
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 43
          },
          end: {
            line: 19,
            column: 44
          }
        },
        loc: {
          start: {
            line: 19,
            column: 59
          },
          end: {
            line: 21,
            column: 3
          }
        },
        line: 19
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5b23b2ade48a277e919eb28cb86fe6e1b8d98655"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2mqvh5q6ef = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mqvh5q6ef();
cov_2mqvh5q6ef().s[0]++;
var PhrasesCategorySelector = function PhrasesCategorySelector(_ref) {
  var categories = _ref.categories,
    selectedIndex = _ref.selectedIndex,
    onSelectCategory = _ref.onSelectCategory,
    levelColor = _ref.levelColor;
  cov_2mqvh5q6ef().f[0]++;
  var formattedCategories = (cov_2mqvh5q6ef().s[1]++, categories.map(function (categoryName, index) {
    cov_2mqvh5q6ef().f[1]++;
    cov_2mqvh5q6ef().s[2]++;
    return {
      id: index,
      name: categoryName
    };
  }));
  var handleCategorySelect = (cov_2mqvh5q6ef().s[3]++, (0, _react.useCallback)(function (categoryId) {
    cov_2mqvh5q6ef().f[2]++;
    cov_2mqvh5q6ef().s[4]++;
    onSelectCategory(categoryId);
  }, [onSelectCategory]));
  cov_2mqvh5q6ef().s[5]++;
  return (0, _jsxRuntime.jsx)(_CategorySelector.default, {
    categories: formattedCategories,
    selectedCategory: selectedIndex,
    onSelectCategory: handleCategorySelect,
    primaryColor: levelColor
  });
};
var _default = exports.default = PhrasesCategorySelector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfQ2F0ZWdvcnlTZWxlY3RvciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX2pzeFJ1bnRpbWUiLCJjb3ZfMm1xdmg1cTZlZiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIlBocmFzZXNDYXRlZ29yeVNlbGVjdG9yIiwiX3JlZiIsImNhdGVnb3JpZXMiLCJzZWxlY3RlZEluZGV4Iiwib25TZWxlY3RDYXRlZ29yeSIsImxldmVsQ29sb3IiLCJmb3JtYXR0ZWRDYXRlZ29yaWVzIiwibWFwIiwiY2F0ZWdvcnlOYW1lIiwiaW5kZXgiLCJpZCIsImhhbmRsZUNhdGVnb3J5U2VsZWN0IiwidXNlQ2FsbGJhY2siLCJjYXRlZ29yeUlkIiwianN4IiwiZGVmYXVsdCIsInNlbGVjdGVkQ2F0ZWdvcnkiLCJwcmltYXJ5Q29sb3IiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc2NyZWVucy9leGVyY2lzZXMvcGhyYXNlcy9QaHJhc2VzQ2F0ZWdvcnlTZWxlY3Rvci9pbmRleC5qcyAtIFZFUlNJT04gRklYw4lFXHJcbmltcG9ydCBDYXRlZ29yeVNlbGVjdG9yIGZyb20gXCIuLi8uLi8uLi8uLi9jb21wb25lbnRzL2V4ZXJjaXNlLWNvbW1vbi9DYXRlZ29yeVNlbGVjdG9yXCI7XHJcbmltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG5jb25zdCBQaHJhc2VzQ2F0ZWdvcnlTZWxlY3RvciA9ICh7XHJcbiAgY2F0ZWdvcmllcyxcclxuICBzZWxlY3RlZEluZGV4LFxyXG4gIG9uU2VsZWN0Q2F0ZWdvcnksXHJcbiAgbGV2ZWxDb2xvcixcclxufSkgPT4ge1xyXG4gIC8vIPCfjq8gRklYIDogY2F0ZWdvcmllcyBlc3QgdW4gYXJyYXkgZGUgc3RyaW5ncywgcGFzIGQnb2JqZXRzXHJcbiAgLy8gVHJhbnNmb3JtZXIgbGVzIG5vbXMgZGUgY2F0w6lnb3JpZXMgZW4gb2JqZXRzIGF2ZWMgaW5kZXggY29tbWUgaWRcclxuICBjb25zdCBmb3JtYXR0ZWRDYXRlZ29yaWVzID0gY2F0ZWdvcmllcy5tYXAoKGNhdGVnb3J5TmFtZSwgaW5kZXgpID0+ICh7XHJcbiAgICBpZDogaW5kZXgsIC8vIFV0aWxpc2VyIGwnaW5kZXggY29tbWUgaWQgcG91ciBjb3JyZXNwb25kcmUgw6Agc2VsZWN0ZWRJbmRleFxyXG4gICAgbmFtZTogY2F0ZWdvcnlOYW1lXHJcbiAgfSkpO1xyXG5cclxuICAvLyDwn46vIEZJWCA6IFV0aWxpc2VyIHNlbGVjdGVkSW5kZXggZGlyZWN0ZW1lbnQgKHBhcyBkZSB0cmFuc2Zvcm1hdGlvbilcclxuICBjb25zdCBoYW5kbGVDYXRlZ29yeVNlbGVjdCA9IHVzZUNhbGxiYWNrKChjYXRlZ29yeUlkKSA9PiB7XHJcbiAgICBvblNlbGVjdENhdGVnb3J5KGNhdGVnb3J5SWQpO1xyXG4gIH0sIFtvblNlbGVjdENhdGVnb3J5XSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8Q2F0ZWdvcnlTZWxlY3RvclxyXG4gICAgICBjYXRlZ29yaWVzPXtmb3JtYXR0ZWRDYXRlZ29yaWVzfVxyXG4gICAgICBzZWxlY3RlZENhdGVnb3J5PXtzZWxlY3RlZEluZGV4fSAvLyDwn46vIEZJWCA6IE1haW50ZW5hbnQgc2VsZWN0ZWRJbmRleCBjb3JyZXNwb25kIMOgIGNhdGVnb3J5LmlkXHJcbiAgICAgIG9uU2VsZWN0Q2F0ZWdvcnk9e2hhbmRsZUNhdGVnb3J5U2VsZWN0fVxyXG4gICAgICBwcmltYXJ5Q29sb3I9e2xldmVsQ29sb3J9XHJcbiAgICAvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQaHJhc2VzQ2F0ZWdvcnlTZWxlY3RvcjsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsSUFBQUEsaUJBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUQsT0FBQTtBQUFvQyxJQUFBRSxXQUFBLEdBQUFGLE9BQUE7QUFBQSxTQUFBRyxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7SUFBQUMsZUFBQTtJQUFBbEIsSUFBQTtFQUFBO0VBQUEsSUFBQW1CLFFBQUEsR0FBQWxCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBZ0IsUUFBQSxDQUFBcEIsSUFBQSxLQUFBb0IsUUFBQSxDQUFBcEIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQW1CLFFBQUEsQ0FBQXBCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQWdCLGNBQUEsR0FBQUQsUUFBQSxDQUFBcEIsSUFBQTtFQUFBO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFzQixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBdEIsY0FBQTtBQUFBQSxjQUFBLEdBQUFpQixDQUFBO0FBRXBDLElBQU1NLHVCQUF1QixHQUFHLFNBQTFCQSx1QkFBdUJBLENBQUFDLElBQUEsRUFLdkI7RUFBQSxJQUpKQyxVQUFVLEdBQUFELElBQUEsQ0FBVkMsVUFBVTtJQUNWQyxhQUFhLEdBQUFGLElBQUEsQ0FBYkUsYUFBYTtJQUNiQyxnQkFBZ0IsR0FBQUgsSUFBQSxDQUFoQkcsZ0JBQWdCO0lBQ2hCQyxVQUFVLEdBQUFKLElBQUEsQ0FBVkksVUFBVTtFQUFBNUIsY0FBQSxHQUFBa0IsQ0FBQTtFQUlWLElBQU1XLG1CQUFtQixJQUFBN0IsY0FBQSxHQUFBaUIsQ0FBQSxPQUFHUSxVQUFVLENBQUNLLEdBQUcsQ0FBQyxVQUFDQyxZQUFZLEVBQUVDLEtBQUssRUFBTTtJQUFBaEMsY0FBQSxHQUFBa0IsQ0FBQTtJQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQTtJQUFBO01BQ25FZ0IsRUFBRSxFQUFFRCxLQUFLO01BQ1RuQixJQUFJLEVBQUVrQjtJQUNSLENBQUM7RUFBRCxDQUFFLENBQUM7RUFHSCxJQUFNRyxvQkFBb0IsSUFBQWxDLGNBQUEsR0FBQWlCLENBQUEsT0FBRyxJQUFBa0Isa0JBQVcsRUFBQyxVQUFDQyxVQUFVLEVBQUs7SUFBQXBDLGNBQUEsR0FBQWtCLENBQUE7SUFBQWxCLGNBQUEsR0FBQWlCLENBQUE7SUFDdkRVLGdCQUFnQixDQUFDUyxVQUFVLENBQUM7RUFDOUIsQ0FBQyxFQUFFLENBQUNULGdCQUFnQixDQUFDLENBQUM7RUFBQzNCLGNBQUEsR0FBQWlCLENBQUE7RUFFdkIsT0FDRSxJQUFBbEIsV0FBQSxDQUFBc0MsR0FBQSxFQUFDMUMsaUJBQUEsQ0FBQTJDLE9BQWdCO0lBQ2ZiLFVBQVUsRUFBRUksbUJBQW9CO0lBQ2hDVSxnQkFBZ0IsRUFBRWIsYUFBYztJQUNoQ0MsZ0JBQWdCLEVBQUVPLG9CQUFxQjtJQUN2Q00sWUFBWSxFQUFFWjtFQUFXLENBQzFCLENBQUM7QUFFTixDQUFDO0FBQUMsSUFBQWEsUUFBQSxHQUFBQyxPQUFBLENBQUFKLE9BQUEsR0FFYWYsdUJBQXVCIiwiaWdub3JlTGlzdCI6W119