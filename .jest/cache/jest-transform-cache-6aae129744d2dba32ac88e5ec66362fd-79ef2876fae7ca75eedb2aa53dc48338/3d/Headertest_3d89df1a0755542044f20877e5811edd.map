{"version":3,"names":["_getJestObj","mock","useNavigation","goBack","mockGoBack","canGoBack","mockCanGoBack","Ionicons","_ref","name","props","_objectWithoutProperties2","default","_excluded","_require","require","Text","_jsxRuntime","jsx","Object","assign","testID","children","_interopRequireDefault","_react","_reactNative","_Header","_reactNative2","_require2","jest","fn","describe","beforeEach","clearAllMocks","it","_render","render","title","getByText","expect","toBeTruthy","_render2","showBackButton","queryByTestId","toBeNull","_render3","getByTestId","mockFn","_render4","onBackPress","fireEvent","press","toHaveBeenCalled","not","_render5","toHaveBeenCalledTimes","CustomLeft","_render6","leftComponent","_render7","rightIcon","mockRightPress","_render8","onRightPress","CustomRight","_render9","rightComponent","_render0","View","_render1","largeTitleMode","subtitle","_render10","_render11","BottomContent","_render12","bottomComponent"],"sources":["Header.test.js"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport Header from '../../../src/components/layout/Header';\nimport { Text, View } from 'react-native';\n\n// Mock du hook de navigation pour simuler la navigation.goBack()\nconst mockGoBack = jest.fn();\nconst mockCanGoBack = jest.fn(() => true);\njest.mock('@react-navigation/native', () => ({\n  useNavigation: () => ({\n    goBack: mockGoBack,\n    canGoBack: mockCanGoBack,\n  }),\n}));\n\n// Mock d'Expo Vector Icons\njest.mock('@expo/vector-icons', () => ({\n  Ionicons: ({ name, ...props }) => {\n    // La bonne pratique est ici\n    const { Text } = require('react-native');\n    return <Text testID={`icon-${name}`} {...props}>{name}</Text>;\n  }\n}));\n\ndescribe('Header', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  // --- Tests du comportement de base (déjà existants mais complétés) ---\n  it('affiche le titre passé en prop', () => {\n    const { getByText } = render(<Header title=\"Accueil\" />);\n    expect(getByText('Accueil')).toBeTruthy();\n  });\n\n  it('n’affiche pas le bouton retour si showBackButton est false', () => {\n    const { queryByTestId } = render(<Header title=\"Sans Retour\" showBackButton={false} />);\n    expect(queryByTestId('back-button')).toBeNull();\n  });\n\n  it('affiche le bouton retour si showBackButton est true', () => {\n    const { getByTestId } = render(<Header title=\"Avec Retour\" showBackButton={true} />);\n    expect(getByTestId('back-button')).toBeTruthy();\n  });\n\n  it('exécute une action au clic sur le bouton retour si onBackPress est défini', () => {\n    const mockFn = jest.fn();\n    const { getByTestId } = render(<Header title=\"Retour\" showBackButton={true} onBackPress={mockFn} />);\n    fireEvent.press(getByTestId('back-button'));\n    expect(mockFn).toHaveBeenCalled();\n    expect(mockGoBack).not.toHaveBeenCalled(); // Ne doit pas appeler la navigation\n  });\n\n  // --- Nouveaux tests pour couvrir les branches manquantes ---\n\n  it('appelle navigation.goBack() si onBackPress n’est pas défini', () => {\n    const { getByTestId } = render(<Header title=\"Retour via Nav\" showBackButton={true} />);\n    fireEvent.press(getByTestId('back-button'));\n    expect(mockGoBack).toHaveBeenCalledTimes(1);\n  });\n\n  it('affiche un composant de gauche personnalisé si fourni', () => {\n    const CustomLeft = <Text testID=\"custom-left\">Custom Left</Text>;\n    const { getByTestId, queryByTestId } = render(<Header title=\"Titre\" leftComponent={CustomLeft} showBackButton={true} />);\n    expect(getByTestId('custom-left')).toBeTruthy();\n    expect(queryByTestId('back-button')).toBeNull();\n  });\n  \n  it('affiche une icône de droite si rightIcon est fourni', () => {\n    const { getByTestId } = render(<Header title=\"Titre\" rightIcon=\"settings-outline\" />);\n    expect(getByTestId('icon-settings-outline')).toBeTruthy();\n  });\n\n  it('appelle onRightPress au clic sur l’icône de droite', () => {\n    const mockRightPress = jest.fn();\n    const { getByTestId } = render(<Header title=\"Titre\" rightIcon=\"settings-outline\" onRightPress={mockRightPress} />);\n    fireEvent.press(getByTestId('icon-settings-outline'));\n    expect(mockRightPress).toHaveBeenCalledTimes(1);\n  });\n\n  it('affiche un composant de droite personnalisé si fourni', () => {\n    const CustomRight = <Text testID=\"custom-right\">Custom Right</Text>;\n    const { getByTestId, queryByTestId } = render(<Header title=\"Titre\" rightComponent={CustomRight} rightIcon=\"settings-outline\" />);\n    expect(getByTestId('custom-right')).toBeTruthy();\n    expect(queryByTestId('icon-settings-outline')).toBeNull(); // Le composant personnalisé remplace l'icône\n  });\n\n  it('affiche le contenu enfants si children est fourni', () => {\n    const { getByTestId, queryByTestId } = render(<Header title=\"Titre\">{<View testID=\"children-content\" />}</Header>);\n    expect(getByTestId('children-content')).toBeTruthy();\n    expect(queryByTestId('back-button')).toBeNull(); // Le children remplace tout le contenu standard\n  });\n\n  it('rend le header en mode titre large si largeTitleMode est true', () => {\n    const { getByText, getByTestId } = render(<Header title=\"Grand Titre\" largeTitleMode={true} subtitle=\"Sous-titre\" showBackButton={true} />);\n    expect(getByText('Grand Titre')).toBeTruthy();\n    expect(getByText('Sous-titre')).toBeTruthy();\n    expect(getByTestId('back-button')).toBeTruthy();\n  });\n  \n  it('affiche un composant de droite dans le mode titre large si rightComponent est fourni', () => {\n    const CustomRight = <Text testID=\"custom-right-large\">Custom Right</Text>;\n    const { getByTestId } = render(<Header title=\"Grand Titre\" largeTitleMode={true} rightComponent={CustomRight} />);\n    expect(getByTestId('custom-right-large')).toBeTruthy();\n  });\n\n  it('affiche une icône de droite dans le mode titre large si rightIcon est fourni', () => {\n    const { getByTestId } = render(<Header title=\"Grand Titre\" largeTitleMode={true} rightIcon=\"search\" />);\n    expect(getByTestId('icon-search')).toBeTruthy();\n  });\n  \n  it('affiche un composant sous le titre si bottomComponent est fourni', () => {\n    const BottomContent = <Text testID=\"bottom-content\">Contenu en bas</Text>;\n    const { getByTestId } = render(<Header title=\"Titre\" largeTitleMode={true} bottomComponent={BottomContent} />);\n    expect(getByTestId('bottom-content')).toBeTruthy();\n  });\n});"],"mappings":"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","ignoreList":[]}