{"version":3,"names":["Object","defineProperty","exports","value","setNativeProps","_PlatformChecker","require","_Colors","_logger","_worklet_994888571758_init_data","code","location","sourceMap","version","setNativePropsFabric","_e","global","Error","animatedRef","updates","_WORKLET","logger","warn","shadowNodeWrapper","processColorsInProps","_updatePropsFabric","__closure","__workletHash","__initData","__stackDetails","_worklet_14226845395319_init_data","setNativePropsPaper","tag","name","viewName","_updatePropsPaper","setNativePropsJest","setNativePropsChromeDebugger","setNativePropsDefault","shouldBeUseWeb","isFabric","isJest","isChromeDebugger"],"sources":["setNativeProps.ts"],"sourcesContent":["'use strict';\nimport type { ShadowNodeWrapper, StyleProps } from '../commonTypes';\nimport {\n  isChromeDebugger,\n  isFabric,\n  isJest,\n  shouldBeUseWeb,\n} from '../PlatformChecker';\nimport type {\n  AnimatedRef,\n  AnimatedRefOnJS,\n  AnimatedRefOnUI,\n} from '../hook/commonTypes';\nimport type { Component } from 'react';\nimport { processColorsInProps } from '../Colors';\nimport { logger } from '../logger';\n\ntype SetNativeProps = <T extends Component>(\n  animatedRef: AnimatedRef<T>,\n  updates: StyleProps\n) => void;\n/**\n * Lets you imperatively update component properties. You should always reach\n * for\n * [useAnimatedStyle](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedStyle)\n * and\n * [useAnimatedProps](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedProps)\n * first when animating styles or properties.\n *\n * @param animatedRef - An [animated\n *   ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef#returns)\n *   connected to the component you'd want to update.\n * @param updates - An object with properties you want to update.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/setNativeProps\n */\nexport let setNativeProps: SetNativeProps;\n\nfunction setNativePropsFabric(\n  animatedRef: AnimatedRefOnJS | AnimatedRefOnUI,\n  updates: StyleProps\n) {\n  'worklet';\n  if (!_WORKLET) {\n    logger.warn('setNativeProps() can only be used on the UI runtime.');\n    return;\n  }\n  const shadowNodeWrapper = animatedRef() as ShadowNodeWrapper;\n  processColorsInProps(updates);\n  global._updatePropsFabric!([{ shadowNodeWrapper, updates }]);\n}\n\nfunction setNativePropsPaper(\n  animatedRef: AnimatedRefOnJS | AnimatedRefOnUI,\n  updates: StyleProps\n) {\n  'worklet';\n  if (!_WORKLET) {\n    logger.warn('setNativeProps() can only be used on the UI runtime.');\n    return;\n  }\n  const tag = animatedRef() as number;\n  const name = (animatedRef as AnimatedRefOnUI).viewName.value;\n  processColorsInProps(updates);\n  global._updatePropsPaper!([{ tag, name, updates }]);\n}\n\nfunction setNativePropsJest() {\n  logger.warn('setNativeProps() is not supported with Jest.');\n}\n\nfunction setNativePropsChromeDebugger() {\n  logger.warn('setNativeProps() is not supported with Chrome Debugger.');\n}\n\nfunction setNativePropsDefault() {\n  logger.warn('setNativeProps() is not supported on this configuration.');\n}\n\nif (!shouldBeUseWeb()) {\n  // Those assertions are actually correct since on Native platforms `AnimatedRef` is\n  // mapped as a different function in `shareableMappingCache` and\n  // TypeScript is not able to infer that.\n  if (isFabric()) {\n    setNativeProps = setNativePropsFabric as unknown as SetNativeProps;\n  } else {\n    setNativeProps = setNativePropsPaper as unknown as SetNativeProps;\n  }\n} else if (isJest()) {\n  setNativeProps = setNativePropsJest;\n} else if (isChromeDebugger()) {\n  setNativeProps = setNativePropsChromeDebugger;\n} else {\n  setNativeProps = setNativePropsDefault;\n}\n"],"mappings":"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","ignoreList":[]}