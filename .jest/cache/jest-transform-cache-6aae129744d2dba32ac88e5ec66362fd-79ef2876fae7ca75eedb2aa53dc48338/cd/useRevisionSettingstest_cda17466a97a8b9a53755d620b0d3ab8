f88798986cf4e148ce2583a5188ac2f8
_getJestObj().mock('@react-native-async-storage/async-storage', function () {
  return {
    getItem: jest.fn(),
    setItem: jest.fn()
  };
});
_getJestObj().mock('../../src/utils/eventBus', function () {
  return {
    emit: jest.fn()
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("@testing-library/react-native");
var _asyncStorage = _interopRequireDefault(require("@react-native-async-storage/async-storage"));
var _useRevisionSettings = require("../../src/hooks/useRevisionSettings");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('useRevisionSettings', function () {
  beforeEach(function () {
    jest.clearAllMocks();
  });
  it('devrait initialiser avec les préférences par défaut', function () {
    _asyncStorage.default.getItem.mockResolvedValue(null);
    var _renderHook = (0, _reactNative.renderHook)(function () {
        return (0, _useRevisionSettings.useRevisionSettings)();
      }),
      result = _renderHook.result;
    expect(result.current.isLoading).toBe(true);
  });
  it('devrait charger les préférences sauvegardées', (0, _asyncToGenerator2.default)(function* () {
    var mockPreferences = {
      isDisabled: true,
      nextRevisionAt: 100,
      frequency: 75,
      questionsCount: 15
    };
    _asyncStorage.default.getItem.mockResolvedValue(JSON.stringify(mockPreferences));
    var _renderHook2 = (0, _reactNative.renderHook)(function () {
        return (0, _useRevisionSettings.useRevisionSettings)();
      }),
      result = _renderHook2.result;
    yield (0, _reactNative.waitFor)(function () {
      expect(result.current.preferences.isDisabled).toBe(true);
      expect(result.current.preferences.nextRevisionAt).toBe(100);
      expect(result.current.preferences.frequency).toBe(75);
      expect(result.current.preferences.questionsCount).toBe(15);
      expect(result.current.isLoading).toBe(false);
    });
  }));
  it('devrait mettre à jour les préférences', (0, _asyncToGenerator2.default)(function* () {
    _asyncStorage.default.getItem.mockResolvedValue(null);
    var _renderHook3 = (0, _reactNative.renderHook)(function () {
        return (0, _useRevisionSettings.useRevisionSettings)();
      }),
      result = _renderHook3.result;
    yield (0, _reactNative.waitFor)(function () {
      expect(result.current.isLoading).toBe(false);
    });
    var newPrefs = {
      frequency: 100
    };
    yield (0, _reactNative.act)((0, _asyncToGenerator2.default)(function* () {
      var success = yield result.current.updatePreferences(newPrefs);
      expect(success).toBe(true);
    }));
    expect(result.current.preferences.frequency).toBe(100);
    expect(_asyncStorage.default.setItem).toHaveBeenCalled();
  }));
  it('devrait avoir toutes les fonctions nécessaires', function () {
    _asyncStorage.default.getItem.mockResolvedValue(null);
    var _renderHook4 = (0, _reactNative.renderHook)(function () {
        return (0, _useRevisionSettings.useRevisionSettings)();
      }),
      result = _renderHook4.result;
    expect(typeof result.current.enableRevisions).toBe('function');
    expect(typeof result.current.disableRevisions).toBe('function');
    expect(typeof result.current.updateFrequency).toBe('function');
    expect(typeof result.current.updatePreferences).toBe('function');
    expect(typeof result.current.resetToNextTarget).toBe('function');
  });
  it('devrait activer les révisions', (0, _asyncToGenerator2.default)(function* () {
    _asyncStorage.default.getItem.mockResolvedValue(null);
    var _renderHook5 = (0, _reactNative.renderHook)(function () {
        return (0, _useRevisionSettings.useRevisionSettings)();
      }),
      result = _renderHook5.result;
    yield (0, _reactNative.waitFor)(function () {
      expect(result.current.isLoading).toBe(false);
    });
    yield (0, _reactNative.act)((0, _asyncToGenerator2.default)(function* () {
      var success = yield result.current.enableRevisions(75, 12);
      expect(success).toBe(true);
    }));
    expect(result.current.preferences.isDisabled).toBe(false);
    expect(result.current.preferences.frequency).toBe(75);
    expect(result.current.preferences.questionsCount).toBe(12);
  }));
  it('devrait désactiver les révisions', (0, _asyncToGenerator2.default)(function* () {
    _asyncStorage.default.getItem.mockResolvedValue(null);
    var _renderHook6 = (0, _reactNative.renderHook)(function () {
        return (0, _useRevisionSettings.useRevisionSettings)();
      }),
      result = _renderHook6.result;
    yield (0, _reactNative.waitFor)(function () {
      expect(result.current.isLoading).toBe(false);
    });
    yield (0, _reactNative.act)((0, _asyncToGenerator2.default)(function* () {
      var success = yield result.current.disableRevisions();
      expect(success).toBe(true);
    }));
    expect(result.current.preferences.isDisabled).toBe(true);
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,