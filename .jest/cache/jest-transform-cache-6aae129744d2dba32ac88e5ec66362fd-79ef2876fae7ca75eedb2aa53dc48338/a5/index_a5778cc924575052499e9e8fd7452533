9248fdfadc13ef6c5fe022879f1cc8af
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _NavigationButtons = _interopRequireDefault(require("../../../../components/exercise-common/NavigationButtons"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var SpellingActions = function SpellingActions(_ref) {
  var showFeedback = _ref.showFeedback,
    isCorrect = _ref.isCorrect,
    userInput = _ref.userInput,
    isLastExercise = _ref.isLastExercise,
    exerciseType = _ref.exerciseType,
    levelColor = _ref.levelColor,
    onCheck = _ref.onCheck,
    onNext = _ref.onNext,
    onRetry = _ref.onRetry;
  var canCheckAnswer = (0, _reactNative.useCallback)(function () {
    if (exerciseType === "homophones") {
      return userInput !== "" && userInput !== null && userInput !== undefined;
    }
    return userInput && userInput.trim() !== "";
  }, [exerciseType, userInput]);
  var handleCheckAnswer = (0, _reactNative.useCallback)(function () {
    try {
      onCheck();
    } catch (error) {}
  }, [onCheck]);
  var handleNext = (0, _reactNative.useCallback)(function () {
    try {
      onNext();
    } catch (error) {}
  }, [onNext]);
  var handleRetry = (0, _reactNative.useCallback)(function () {
    try {
      onRetry();
    } catch (error) {}
  }, [onRetry]);
  if (!showFeedback) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: _style.default.container,
      children: (0, _jsxRuntime.jsx)(_NavigationButtons.default, {
        onNext: handleCheckAnswer,
        disablePrevious: true,
        disableNext: !canCheckAnswer(),
        primaryColor: levelColor,
        buttonLabels: {
          next: "Vérifier la réponse"
        },
        variant: "centered"
      })
    });
  }
  if (showFeedback && isCorrect) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: _style.default.container,
      children: (0, _jsxRuntime.jsx)(_NavigationButtons.default, {
        onNext: handleNext,
        disablePrevious: true,
        disableNext: false,
        primaryColor: levelColor,
        buttonLabels: {
          next: isLastExercise ? "Terminer" : "Exercice suivant"
        },
        variant: "centered"
      })
    });
  }
  if (showFeedback && !isCorrect) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: _style.default.container,
      children: (0, _jsxRuntime.jsx)(_NavigationButtons.default, {
        onNext: handleNext,
        onPrevious: handleRetry,
        disablePrevious: false,
        disableNext: false,
        primaryColor: levelColor,
        buttonLabels: {
          next: isLastExercise ? "Terminer" : "Exercice suivant",
          previous: "Réessayer"
        },
        variant: "standard"
      })
    });
  }
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: _style.default.container,
    children: (0, _jsxRuntime.jsx)(_NavigationButtons.default, {
      onNext: handleNext,
      primaryColor: levelColor,
      buttonLabels: {
        next: "Continuer"
      },
      variant: "centered"
    })
  });
};
var _default = exports.default = SpellingActions;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,