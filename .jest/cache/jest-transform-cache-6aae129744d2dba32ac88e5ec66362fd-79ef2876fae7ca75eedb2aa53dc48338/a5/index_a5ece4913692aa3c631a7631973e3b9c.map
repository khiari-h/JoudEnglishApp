{"version":3,"names":["_react","require","_expoRouter","_asyncStorage","_interopRequireDefault","_propTypes","_RevisionPopup","_useRevisionSettings2","_jsxRuntime","RevisionOrchestrator","_ref","_ref$currentLevel","currentLevel","_useState","useState","_useState2","_slicedToArray2","default","showPopup","setShowPopup","_useState3","_useState4","totalWords","setTotalWords","_useState5","_useState6","isLoaded","setIsLoaded","_useRevisionSettings","useRevisionSettings","preferences","disableRevisions","resetToNextTarget","updatePreferences","popupShownRef","useRef","countWords","_ref2","_asyncToGenerator2","total","levels","modes","level","mode","stored","AsyncStorage","getItem","data","JSON","parse","completedWords","Object","values","reduce","acc","words","Array","isArray","length","error","console","warn","apply","arguments","useEffect","initializeRevision","_ref3","shouldShow","isDisabled","nextRevisionAt","current","setTimeout","handleChoice","useCallback","_ref4","choice","router","push","pathname","params","questionsCount","source","next50","next100","defaultNext","_x","handleDismiss","jsx","visible","totalWordsLearned","onChoice","onDismiss","propTypes","PropTypes","string","isRequired","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/components/revision/RevisionOrchestrator/index.js - VERSION AVEC HOOK PARTAGÉ\r\nimport { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { router } from 'expo-router';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport PropTypes from 'prop-types'; // ✅ Import de PropTypes\r\nimport RevisionPopup from '../../Dashboard/components/popup/RevisionPopup';\r\nimport { useRevisionSettings } from '../../../hooks/useRevisionSettings';\r\n\r\nconst RevisionOrchestrator = ({ currentLevel = \"mixed\" }) => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [totalWords, setTotalWords] = useState(0);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  \r\n  const { \r\n    preferences, \r\n    disableRevisions, \r\n    resetToNextTarget,\r\n    updatePreferences \r\n  } = useRevisionSettings();\r\n  \r\n  const popupShownRef = useRef(false);\r\n\r\n  // ========== COMPTAGE SIMPLE (INCHANGÉ) ==========\r\n  const countWords = async () => {\r\n    try {\r\n      let total = 0;\r\n      const levels = ['1', '2', '3', '4', '5', '6', 'bonus'];\r\n      const modes = ['classic', 'fast'];\r\n\r\n      for (const level of levels) {\r\n        for (const mode of modes) {\r\n          const stored = await AsyncStorage.getItem(`vocabulary_${level}_${mode}`);\r\n          if (stored) {\r\n            const data = JSON.parse(stored);\r\n            const completedWords = data.completedWords || {};\r\n            total += Object.values(completedWords).reduce((acc, words) => {\r\n              if (Array.isArray(words)) {\r\n                return acc + words.length;\r\n              }\r\n              return acc;\r\n            }, 0);\r\n          }\r\n        }\r\n      }\r\n\r\n      setTotalWords(total);\r\n      return total;\r\n    } catch (error) {\r\n      // ✅ Gestion d'erreur appropriée\r\n      console.warn('Error counting words for revision:', error);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // ========== CHARGEMENT INITIAL ET VÉRIFICATION RÉVISION ==========\r\n  useEffect(() => {\r\n    const initializeRevision = async () => {\r\n      await countWords();\r\n      setIsLoaded(true);\r\n      \r\n      const shouldShow = !preferences.isDisabled && \r\n                          totalWords >= preferences.nextRevisionAt && \r\n                          totalWords > 0 && \r\n                          !popupShownRef.current;\r\n\r\n      if (shouldShow) {\r\n        popupShownRef.current = true;\r\n        setTimeout(() => setShowPopup(true), 1000);\r\n      }\r\n    };\r\n\r\n    initializeRevision();\r\n  }, [preferences.isDisabled, preferences.nextRevisionAt]);\r\n\r\n  // ========== VÉRIFICATION RÉVISION QUAND LES PREFERENCES CHANGENT ==========\r\n  useEffect(() => {\r\n    if (!isLoaded) return;\r\n    \r\n    const shouldShow = !preferences.isDisabled && \r\n                      totalWords >= preferences.nextRevisionAt && \r\n                      totalWords > 0 && \r\n                      !popupShownRef.current;\r\n\r\n    if (shouldShow) {\r\n      popupShownRef.current = true;\r\n      setTimeout(() => setShowPopup(true), 1000);\r\n    }\r\n  }, [isLoaded, preferences.isDisabled, preferences.nextRevisionAt, totalWords]);\r\n\r\n  // ========== HANDLERS AVEC HOOK PARTAGÉ ==========\r\n  const handleChoice = useCallback(async (choice) => {\r\n    setShowPopup(false);\r\n    popupShownRef.current = false;\r\n    \r\n    switch (choice) {\r\n      case 'now': {\r\n        await resetToNextTarget(totalWords);\r\n        router.push({\r\n          pathname: \"/tabs/vocabularyRevision\",\r\n          params: {\r\n            level: currentLevel,\r\n            questionsCount: preferences.questionsCount,\r\n            source: 'popup_trigger'\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 'later_50': {\r\n        const next50 = totalWords + 50;\r\n        await updatePreferences({ nextRevisionAt: next50 });\r\n        break;\r\n      }\r\n      case 'later_100': {\r\n        const next100 = totalWords + 100;\r\n        await updatePreferences({ nextRevisionAt: next100 });\r\n        break;\r\n      }\r\n      case 'disable': {\r\n        await disableRevisions();\r\n        break;\r\n      }\r\n      default: {\r\n        const defaultNext = totalWords + 50;\r\n        await updatePreferences({ nextRevisionAt: defaultNext });\r\n        break;\r\n      }\r\n    }\r\n  }, [totalWords, disableRevisions, resetToNextTarget, updatePreferences, currentLevel, preferences.questionsCount]);\r\n\r\n  const handleDismiss = useCallback(() => handleChoice('later_50'), [handleChoice]);\r\n\r\n  if (preferences.isDisabled) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <RevisionPopup\r\n      visible={showPopup}\r\n      totalWordsLearned={totalWords}\r\n      questionsCount={preferences.questionsCount}\r\n      currentLevel={currentLevel}\r\n      onChoice={handleChoice}\r\n      onDismiss={handleDismiss}\r\n    />\r\n  );\r\n};\r\n\r\n// ✅ Ajout de la validation des props\r\nRevisionOrchestrator.propTypes = {\r\n  currentLevel: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RevisionOrchestrator;"],"mappings":"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","ignoreList":[]}