e06de877a34920f5ddb4ddfbe1354cac
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _vectorIcons = require("@expo/vector-icons");
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var ExerciseFooter = function ExerciseFooter(_ref) {
  var primaryLabel = _ref.primaryLabel,
    secondaryLabel = _ref.secondaryLabel,
    onPrimaryPress = _ref.onPrimaryPress,
    onSecondaryPress = _ref.onSecondaryPress,
    showSecondary = _ref.showSecondary,
    showCheck = _ref.showCheck,
    isDisabled = _ref.isDisabled,
    _ref$color = _ref.color,
    color = _ref$color === void 0 ? "#3b82f6" : _ref$color,
    isLastQuestion = _ref.isLastQuestion,
    hideSkip = _ref.hideSkip,
    onSkip = _ref.onSkip,
    skipLabel = _ref.skipLabel;
  var finalPrimaryLabel = isLastQuestion ? 'Terminer' : primaryLabel;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: styles.container,
    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.buttonRow,
      children: [showSecondary ? (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
        style: styles.secondaryButton,
        onPress: onSecondaryPress,
        children: [(0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
          name: "chevron-back",
          size: 20,
          color: "#6B7280"
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.secondaryButtonText,
          children: secondaryLabel
        })]
      }) : (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: {
          flex: 1
        }
      }), !hideSkip && onSkip && (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.skipButton,
        onPress: onSkip,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.skipText,
          children: skipLabel
        })
      }), (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
        style: [styles.primaryButton, {
          backgroundColor: color
        }, isDisabled && styles.disabledButton],
        onPress: onPrimaryPress,
        disabled: isDisabled,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.primaryButtonText,
          children: finalPrimaryLabel
        }), showCheck ? (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
          name: "checkmark",
          size: 20,
          color: "white"
        }) : (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
          name: "chevron-forward",
          size: 20,
          color: "white"
        })]
      })]
    })
  });
};
ExerciseFooter.propTypes = {
  primaryLabel: _propTypes.default.string.isRequired,
  secondaryLabel: _propTypes.default.string,
  onPrimaryPress: _propTypes.default.func.isRequired,
  onSecondaryPress: _propTypes.default.func,
  showSecondary: _propTypes.default.bool,
  showCheck: _propTypes.default.bool,
  isDisabled: _propTypes.default.bool,
  color: _propTypes.default.string,
  isLastQuestion: _propTypes.default.bool,
  hideSkip: _propTypes.default.bool,
  onSkip: _propTypes.default.func,
  skipLabel: _propTypes.default.string
};
var _default = exports.default = ExerciseFooter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3Byb3BUeXBlcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfdmVjdG9ySWNvbnMiLCJfc3R5bGUiLCJfanN4UnVudGltZSIsIkV4ZXJjaXNlRm9vdGVyIiwiX3JlZiIsInByaW1hcnlMYWJlbCIsInNlY29uZGFyeUxhYmVsIiwib25QcmltYXJ5UHJlc3MiLCJvblNlY29uZGFyeVByZXNzIiwic2hvd1NlY29uZGFyeSIsInNob3dDaGVjayIsImlzRGlzYWJsZWQiLCJfcmVmJGNvbG9yIiwiY29sb3IiLCJpc0xhc3RRdWVzdGlvbiIsImhpZGVTa2lwIiwib25Ta2lwIiwic2tpcExhYmVsIiwiZmluYWxQcmltYXJ5TGFiZWwiLCJqc3giLCJWaWV3Iiwic3R5bGUiLCJzdHlsZXMiLCJjb250YWluZXIiLCJjaGlsZHJlbiIsImpzeHMiLCJidXR0b25Sb3ciLCJUb3VjaGFibGVPcGFjaXR5Iiwic2Vjb25kYXJ5QnV0dG9uIiwib25QcmVzcyIsIklvbmljb25zIiwibmFtZSIsInNpemUiLCJUZXh0Iiwic2Vjb25kYXJ5QnV0dG9uVGV4dCIsImZsZXgiLCJza2lwQnV0dG9uIiwic2tpcFRleHQiLCJwcmltYXJ5QnV0dG9uIiwiYmFja2dyb3VuZENvbG9yIiwiZGlzYWJsZWRCdXR0b24iLCJkaXNhYmxlZCIsInByaW1hcnlCdXR0b25UZXh0IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsImZ1bmMiLCJib29sIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb21wb25lbnRzL2V4ZXJjaXNlLWNvbW1vbi9FeGVyY2lzZUZvb3Rlci9pbmRleC5qcyAtIEFWRUMgUFJPUFRZUEVTXHJcblxyXG5pbXBvcnQgeyBWaWV3LCBUZXh0LCBUb3VjaGFibGVPcGFjaXR5IH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBJb25pY29ucyB9IGZyb20gXCJAZXhwby92ZWN0b3ItaWNvbnNcIjtcclxuaW1wb3J0IGNyZWF0ZVN0eWxlcyBmcm9tIFwiLi9zdHlsZVwiO1xyXG5cclxuLyoqXHJcbiAqIFBpZWQgZGUgcGFnZSBzdGFuZGFyZGlzw6kgcG91ciB0b3VzIGxlcyDDqWNyYW5zIGQnZXhlcmNpY2VzIFxyXG4gKiBhdmVjIGJvdXRvbnMgZGUgbmF2aWdhdGlvbiBldCB2YWxpZGF0aW9uXHJcbiAqL1xyXG5jb25zdCBFeGVyY2lzZUZvb3RlciA9ICh7XHJcbiAgcHJpbWFyeUxhYmVsLFxyXG4gIHNlY29uZGFyeUxhYmVsLFxyXG4gIG9uUHJpbWFyeVByZXNzLFxyXG4gIG9uU2Vjb25kYXJ5UHJlc3MsXHJcbiAgc2hvd1NlY29uZGFyeSxcclxuICBzaG93Q2hlY2ssXHJcbiAgaXNEaXNhYmxlZCxcclxuICBjb2xvciA9IFwiIzNiODJmNlwiLFxyXG4gIGlzTGFzdFF1ZXN0aW9uLFxyXG4gIGhpZGVTa2lwLFxyXG4gIG9uU2tpcCxcclxuICBza2lwTGFiZWwsXHJcbn0pID0+IHtcclxuICAvLyBBanVzdGVtZW50IGR1IGxhYmVsIHBvdXIgbGUgZGVybmllciBleGVyY2ljZVxyXG4gIGNvbnN0IGZpbmFsUHJpbWFyeUxhYmVsID0gaXNMYXN0UXVlc3Rpb24gPyAnVGVybWluZXInIDogcHJpbWFyeUxhYmVsO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxyXG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmJ1dHRvblJvd30+XHJcbiAgICAgICAge3Nob3dTZWNvbmRhcnkgPyAoXHJcbiAgICAgICAgICA8VG91Y2hhYmxlT3BhY2l0eVxyXG4gICAgICAgICAgICBzdHlsZT17c3R5bGVzLnNlY29uZGFyeUJ1dHRvbn1cclxuICAgICAgICAgICAgb25QcmVzcz17b25TZWNvbmRhcnlQcmVzc31cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPElvbmljb25zIG5hbWU9XCJjaGV2cm9uLWJhY2tcIiBzaXplPXsyMH0gY29sb3I9XCIjNkI3MjgwXCIgLz5cclxuICAgICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5zZWNvbmRhcnlCdXR0b25UZXh0fT57c2Vjb25kYXJ5TGFiZWx9PC9UZXh0PlxyXG4gICAgICAgICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxyXG4gICAgICAgICkgOiAoXHJcbiAgICAgICAgICA8VmlldyBzdHlsZT17eyBmbGV4OiAxIH19IC8+XHJcbiAgICAgICAgKX1cclxuXHJcbiAgICAgICAgeyFoaWRlU2tpcCAmJiBvblNraXAgJiYgKFxyXG4gICAgICAgICAgPFRvdWNoYWJsZU9wYWNpdHkgXHJcbiAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMuc2tpcEJ1dHRvbn0gXHJcbiAgICAgICAgICAgIG9uUHJlc3M9e29uU2tpcH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5za2lwVGV4dH0+e3NraXBMYWJlbH08L1RleHQ+XHJcbiAgICAgICAgICA8L1RvdWNoYWJsZU9wYWNpdHk+XHJcbiAgICAgICAgKX1cclxuXHJcbiAgICAgICAgPFRvdWNoYWJsZU9wYWNpdHlcclxuICAgICAgICAgIHN0eWxlPXtbXHJcbiAgICAgICAgICAgIHN0eWxlcy5wcmltYXJ5QnV0dG9uLFxyXG4gICAgICAgICAgICB7IGJhY2tncm91bmRDb2xvcjogY29sb3IgfSxcclxuICAgICAgICAgICAgaXNEaXNhYmxlZCAmJiBzdHlsZXMuZGlzYWJsZWRCdXR0b25cclxuICAgICAgICAgIF19XHJcbiAgICAgICAgICBvblByZXNzPXtvblByaW1hcnlQcmVzc31cclxuICAgICAgICAgIGRpc2FibGVkPXtpc0Rpc2FibGVkfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMucHJpbWFyeUJ1dHRvblRleHR9PntmaW5hbFByaW1hcnlMYWJlbH08L1RleHQ+XHJcbiAgICAgICAgICB7c2hvd0NoZWNrID8gKFxyXG4gICAgICAgICAgICA8SW9uaWNvbnMgbmFtZT1cImNoZWNrbWFya1wiIHNpemU9ezIwfSBjb2xvcj1cIndoaXRlXCIgLz5cclxuICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgIDxJb25pY29ucyBuYW1lPVwiY2hldnJvbi1mb3J3YXJkXCIgc2l6ZT17MjB9IGNvbG9yPVwid2hpdGVcIiAvPlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICA8L1RvdWNoYWJsZU9wYWNpdHk+XHJcbiAgICAgIDwvVmlldz5cclxuICAgIDwvVmlldz5cclxuICApO1xyXG59O1xyXG5cclxuLy8gUHJvcFR5cGVzIHBvdXIgbGUgY29tcG9zYW50IEV4ZXJjaXNlRm9vdGVyXHJcbkV4ZXJjaXNlRm9vdGVyLnByb3BUeXBlcyA9IHtcclxuICBwcmltYXJ5TGFiZWw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICBzZWNvbmRhcnlMYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcclxuICBvblByaW1hcnlQcmVzczogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcclxuICBvblNlY29uZGFyeVByZXNzOiBQcm9wVHlwZXMuZnVuYyxcclxuICBzaG93U2Vjb25kYXJ5OiBQcm9wVHlwZXMuYm9vbCxcclxuICBzaG93Q2hlY2s6IFByb3BUeXBlcy5ib29sLFxyXG4gIGlzRGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxyXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIGlzTGFzdFF1ZXN0aW9uOiBQcm9wVHlwZXMuYm9vbCxcclxuICBoaWRlU2tpcDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgb25Ta2lwOiBQcm9wVHlwZXMuZnVuYyxcclxuICBza2lwTGFiZWw6IFByb3BUeXBlcy5zdHJpbmcsXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBFeGVyY2lzZUZvb3RlcjtcclxuIl0s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