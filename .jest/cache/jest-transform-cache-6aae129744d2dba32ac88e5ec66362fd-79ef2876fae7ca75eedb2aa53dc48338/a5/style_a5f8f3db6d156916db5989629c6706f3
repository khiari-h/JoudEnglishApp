e8114e4c1f499795c439d0e8aa4ab7fe
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_1fnjdabpb2() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseHeader\\style.js";
  var hash = "227e3223b64be86086ec173299e450ddb7f492df";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseHeader\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 83,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 17,
            column: 42
          }
        }, {
          start: {
            line: 17,
            column: 45
          },
          end: {
            line: 17,
            column: 47
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0
    },
    f: {},
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "227e3223b64be86086ec173299e450ddb7f492df"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1fnjdabpb2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fnjdabpb2();
var styles = (cov_1fnjdabpb2().s[0]++, _reactNative.StyleSheet.create({
  container: {
    backgroundColor: 'white',
    paddingHorizontal: 20,
    paddingTop: _reactNative.Platform.OS === 'ios' ? (cov_1fnjdabpb2().b[0][0]++, 16) : (cov_1fnjdabpb2().b[0][1]++, 12),
    paddingBottom: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#f1f5f9'
  },
  content: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between'
  },
  leftSection: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1
  },
  backButton: {
    width: 40,
    height: 40,
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 12,
    marginRight: 16
  },
  titleSection: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1
  },
  exerciseIcon: {
    fontSize: 24,
    marginRight: 12,
    opacity: 0.8
  },
  title: {
    fontSize: 20,
    fontWeight: '600',
    letterSpacing: 0.2,
    flex: 1
  },
  levelBadge: {
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 12
  },
  levelText: {
    color: 'white',
    fontWeight: '600',
    fontSize: 15,
    letterSpacing: 0.3
  }
}));
var _default = exports.default = styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY292XzFmbmpkYWJwYjIiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJicmFuY2hNYXAiLCJsb2MiLCJ0eXBlIiwibG9jYXRpb25zIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsInN0eWxlcyIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJjb250YWluZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJwYWRkaW5nSG9yaXpvbnRhbCIsInBhZGRpbmdUb3AiLCJQbGF0Zm9ybSIsIk9TIiwicGFkZGluZ0JvdHRvbSIsImJvcmRlckJvdHRvbVdpZHRoIiwiYm9yZGVyQm90dG9tQ29sb3IiLCJjb250ZW50IiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsImxlZnRTZWN0aW9uIiwiZmxleCIsImJhY2tCdXR0b24iLCJ3aWR0aCIsImhlaWdodCIsImJvcmRlclJhZGl1cyIsIm1hcmdpblJpZ2h0IiwidGl0bGVTZWN0aW9uIiwiZXhlcmNpc2VJY29uIiwiZm9udFNpemUiLCJvcGFjaXR5IiwidGl0bGUiLCJmb250V2VpZ2h0IiwibGV0dGVyU3BhY2luZyIsImxldmVsQmFkZ2UiLCJwYWRkaW5nVmVydGljYWwiLCJsZXZlbFRleHQiLCJjb2xvciIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJzdHlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb21wb25lbnRzL2V4ZXJjaXNlLWNvbW1vbi9FeGVyY2lzZUhlYWRlci9zdHlsZS5qcyAtIFZFUlNJT04gSFVNQUlORSAmIMOJUFVSw4lFXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBQbGF0Zm9ybSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbi8qKlxuICog8J+Viu+4jyBTdHlsZXMgSHVtYWlucyAmIMOJcHVyw6lzIHBvdXIgRXhlcmNpc2VIZWFkZXJcbiAqIC0gQmxhbmMgcHVyIHVuaXZlcnNlbFxuICogLSBSZXNwaXJhbnQgZXQgZm9uY3Rpb25uZWxcbiAqIC0gWsOpcm8gc3VwZXJmbHUsIHrDqXJvIGVmZmV0XG4gKiAtIMOJbMOpZ2FuY2UgZGFucyBsYSBzaW1wbGljaXTDqVxuICogLSBEZXNpZ24gXCJpbnZpc2libGVcIiBxdWkgbGFpc3NlIHBsYWNlIGF1IGNvbnRlbnVcbiAqL1xuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAvLyA9PT09PT09PT09PT09PT09PT09IENPTlRBSU5FUiBQUklOQ0lQQUwgPT09PT09PT09PT09PT09PT09PVxuICBjb250YWluZXI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgcGFkZGluZ0hvcml6b250YWw6IDIwLFxuICAgIHBhZGRpbmdUb3A6IFBsYXRmb3JtLk9TID09PSAnaW9zJyA/IDE2IDogMTIsXG4gICAgcGFkZGluZ0JvdHRvbTogMTYsXG4gICAgYm9yZGVyQm90dG9tV2lkdGg6IDEsXG4gICAgYm9yZGVyQm90dG9tQ29sb3I6ICcjZjFmNWY5JywgLy8gU8OpcGFyYXRpb24gdWx0cmEtZGlzY3LDqHRlXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PSBDT05URU5VIFBSSU5DSVBBTCA9PT09PT09PT09PT09PT09PT09XG4gIGNvbnRlbnQ6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICB9LFxuXG4gIC8vID09PT09PT09PT09PT09PT09PT0gU0VDVElPTiBHQVVDSEUgPT09PT09PT09PT09PT09PT09PVxuICBsZWZ0U2VjdGlvbjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGZsZXg6IDEsXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PSBCT1VUT04gUkVUT1VSIC0gVWx0cmEtc2ltcGxlID09PT09PT09PT09PT09PT09PT1cbiAgYmFja0J1dHRvbjoge1xuICAgIHdpZHRoOiA0MCxcbiAgICBoZWlnaHQ6IDQwLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBib3JkZXJSYWRpdXM6IDEyLFxuICAgIG1hcmdpblJpZ2h0OiAxNixcbiAgICAvLyBQYXMgZCdvbWJyZSwgcGFzIGQnZWZmZXQgLSBqdXN0ZSBmb25jdGlvbm5lbFxuICB9LFxuXG4gIC8vID09PT09PT09PT09PT09PT09PT0gU0VDVElPTiBUSVRSRSA9PT09PT09PT09PT09PT09PT09XG4gIHRpdGxlU2VjdGlvbjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGZsZXg6IDEsXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PSBJQ8OUTkUgRVhFUkNJQ0UgLSBTaW1wbGUgPT09PT09PT09PT09PT09PT09PVxuICBleGVyY2lzZUljb246IHtcbiAgICBmb250U2l6ZTogMjQsXG4gICAgbWFyZ2luUmlnaHQ6IDEyLFxuICAgIG9wYWNpdHk6IDAuOCwgLy8gRGlzY3JldFxuICB9LFxuXG4gIC8vID09PT09PT09PT09PT09PT09PT0gVElUUkUgLSBUeXBvZ3JhcGh5IMOpcHVyw6llID09PT09PT09PT09PT09PT09PT1cbiAgdGl0bGU6IHtcbiAgICBmb250U2l6ZTogMjAsXG4gICAgZm9udFdlaWdodDogJzYwMCcsIC8vIE1lZGl1bSB3ZWlnaHQgLSBwYXMgdHJvcCBncmFzXG4gICAgbGV0dGVyU3BhY2luZzogMC4yLCAvLyBTdWJ0bGVcbiAgICBmbGV4OiAxLFxuICB9LFxuXG4gIC8vID09PT09PT09PT09PT09PT09PT0gQkFER0UgTklWRUFVIC0gTWluaW1hbCA9PT09PT09PT09PT09PT09PT09XG4gIGxldmVsQmFkZ2U6IHtcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTIsXG4gICAgcGFkZGluZ1ZlcnRpY2FsOiA2LFxuICAgIGJvcmRlclJhZGl1czogMTIsXG4gICAgLy8gUGFzIGQnb21icmUsIHBhcyBkJ2VmZmV0IC0ganVzdGUgbGEgY291bGV1ciBwdXJlXG4gIH0sXG4gIGxldmVsVGV4dDoge1xuICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICAgIGZvbnRTaXplOiAxNSxcbiAgICBsZXR0ZXJTcGFjaW5nOiAwLjMsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgc3R5bGVzOyJdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUFvRCxTQUFBQyxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7SUFBQUMsU0FBQTtNQUFBO1FBQUFDLEdBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssSUFBQTtRQUFBQyxTQUFBO1VBQUFSLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJ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