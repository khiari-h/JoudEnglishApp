3203c6c61a7cce63c76790b178978039
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_2ajigyembq() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarExerciceRenderer\\style.js";
  var hash = "dd15fe0dc8527b60bb93e98981142ea6460cd8d3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarExerciceRenderer\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 141,
          column: 4
        }
      },
      "1": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 141,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 21
          },
          end: {
            line: 11,
            column: 22
          }
        },
        loc: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 141,
            column: 4
          }
        },
        line: 12
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dd15fe0dc8527b60bb93e98981142ea6460cd8d3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2ajigyembq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ajigyembq();
cov_2ajigyembq().s[0]++;
var createStyles = function createStyles() {
  cov_2ajigyembq().f[0]++;
  cov_2ajigyembq().s[1]++;
  return _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: 16,
      marginVertical: 8
    },
    optionsSection: {
      marginTop: 16,
      gap: 12
    },
    optionContainer: Object.assign({
      borderRadius: 16,
      overflow: 'hidden'
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#000',
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowOpacity: 0.06,
        shadowRadius: 8
      },
      android: {
        elevation: 2
      }
    })),
    optionGradient: {
      borderRadius: 16,
      overflow: 'hidden'
    },
    optionInner: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingVertical: 16,
      paddingHorizontal: 20,
      backgroundColor: 'rgba(255, 255, 255, 0.8)',
      borderWidth: 1,
      borderColor: 'rgba(255, 255, 255, 0.3)'
    },
    optionIconContainer: {
      marginRight: 12
    },
    optionText: {
      fontSize: 16,
      fontWeight: '500',
      color: '#374151',
      flex: 1,
      letterSpacing: 0.2
    },
    selectedOptionText: {
      color: 'white',
      fontWeight: '600'
    },
    correctOptionText: {
      color: 'white',
      fontWeight: '600'
    },
    incorrectOptionText: {
      color: 'white',
      fontWeight: '600'
    },
    inputSection: Object.assign({
      marginTop: 16,
      borderRadius: 16,
      overflow: 'hidden'
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#000',
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowOpacity: 0.06,
        shadowRadius: 8
      },
      android: {
        elevation: 2
      }
    })),
    fillBlankInput: {
      borderWidth: 1,
      borderRadius: 16,
      padding: 16,
      fontSize: 16,
      color: '#374151',
      backgroundColor: 'white',
      fontWeight: '500',
      textAlign: 'center',
      minHeight: 56
    },
    transformationInput: {
      borderWidth: 1,
      borderRadius: 16,
      padding: 16,
      fontSize: 16,
      color: '#374151',
      minHeight: 120,
      textAlignVertical: 'top',
      backgroundColor: 'white',
      fontWeight: '500',
      lineHeight: 24
    },
    neutralInput: {
      borderColor: '#CBD5E1',
      color: '#374151'
    },
    correctInput: {
      borderColor: '#10B981',
      backgroundColor: '#F0FDF4',
      color: '#10B981'
    },
    incorrectInput: {
      borderColor: '#EF4444',
      backgroundColor: '#FEF2F2',
      color: '#EF4444'
    }
  });
};
var _default = exports.default = createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,