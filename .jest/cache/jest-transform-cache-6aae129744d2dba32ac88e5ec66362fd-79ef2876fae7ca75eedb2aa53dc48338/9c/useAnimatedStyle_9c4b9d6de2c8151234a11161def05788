75b7e966bfb7f83fe6b1d052856e70fd
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAnimatedStyle = useAnimatedStyle;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _react = require("react");
var _core = require("../core");
var _UpdateProps = _interopRequireWildcard(require("../UpdateProps"));
var _animation = require("../animation");
var _useSharedValue = require("./useSharedValue");
var _utils = require("./utils");
var _ViewDescriptorsSet = require("../ViewDescriptorsSet");
var _PlatformChecker = require("../PlatformChecker");
var _commonTypes = require("../commonTypes");
var _errors = require("../errors");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();
var _worklet_13303293532880_init_data = {
  code: "function prepareAnimation_useAnimatedStyleTs1(frameTimestamp,animatedProp,lastAnimation,lastValue){const prepareAnimation_useAnimatedStyleTs1=this._recur;if(Array.isArray(animatedProp)){animatedProp.forEach(function(prop,index){prepareAnimation_useAnimatedStyleTs1(frameTimestamp,prop,lastAnimation&&lastAnimation[index],lastValue&&lastValue[index]);});}if(typeof animatedProp==='object'&&animatedProp.onFrame){const animation=animatedProp;let value=animation.current;if(lastValue!==undefined&&lastValue!==null){if(typeof lastValue==='object'){if(lastValue.value!==undefined){value=lastValue.value;}else if(lastValue.onFrame!==undefined){if((lastAnimation===null||lastAnimation===void 0?void 0:lastAnimation.current)!==undefined){value=lastAnimation.current;}else if((lastValue===null||lastValue===void 0?void 0:lastValue.current)!==undefined){value=lastValue.current;}}}else{value=lastValue;}}animation.callStart=function(timestamp){animation.onStart(animation,value,timestamp,lastAnimation);};animation.callStart(frameTimestamp);animation.callStart=null;}else if(typeof animatedProp==='object'){Object.keys(animatedProp).forEach(function(key){return prepareAnimation_useAnimatedStyleTs1(frameTimestamp,animatedProp[key],lastAnimation&&lastAnimation[key],lastValue&&lastValue[key]);});}}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\hook\\useAnimatedStyle.ts",
  sourceMap: "{\"version\":3,\"names\":[\"prepareAnimation_useAnimatedStyleTs1\",\"frameTimestamp\",\"animatedProp\",\"lastAnimation\",\"lastValue\",\"_recur\",\"Array\",\"isArray\",\"forEach\",\"prop\",\"index\",\"onFrame\",\"animation\",\"value\",\"current\",\"undefined\",\"callStart\",\"timestamp\",\"onStart\",\"Object\",\"keys\",\"key\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/hook/useAnimatedStyle.ts\"],\"mappings\":\"AAwDA,SAAAA,oCAEEA,CAAAC,cACA,CAAAC,YACA,CAAAC,aACM,CAAAC,SAAA,QAAAJ,oCAAA,MAAAK,MAAA,CAEN,GAAIC,KAAK,CAACC,OAAO,CAACL,YAAY,CAAC,CAAE,CAC/BA,YAAY,CAACM,OAAO,CAAC,SAACC,IAAI,CAAEC,KAAK,CAAK,CACpCV,oCAEE,CAAIC,cACJ,CAAaQ,IAAI,CAAAN,aAAc,EAAMA,aAC5B,CAAAO,KAAI,EAAAN,SACf,EAACA,SAAA,CAAAM,KAAA,GACH,CAAC,CAAC,CAEJ,CACA,GAAI,MAAO,CAAAR,YAAY,GAAK,QAAQ,EAAIA,YAAY,CAACS,OAAO,CAAE,CAC5D,KAAM,CAAAC,SAAS,CAAGV,YAAY,CAE9B,GAAI,CAAAW,KAAK,CAAGD,SAAS,CAACE,OAAO,CAC7B,GAAIV,SAAS,GAAKW,SAAS,EAAIX,SAAS,GAAK,IAAI,CAAE,CACjD,GAAI,MAAO,CAAAA,SAAS,GAAK,QAAQ,CAAE,CACjC,GAAIA,SAAS,CAACS,KAAK,GAAKE,SAAS,CAAE,CAEjCF,KAAK,CAAGT,SAAS,CAACS,KAAK,CACzB,CAAC,IAAM,IAAIT,SAAS,CAACO,OAAO,GAAKI,SAAS,CAAE,CAC1C,GAAI,CAAAZ,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEW,OAAO,IAAKC,SAAS,CAAE,CAExCF,KAAK,CAAGV,aAAa,CAACW,OAAO,CAC/B,CAAC,IAAM,IAAI,CAAAV,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEU,OAAO,IAAKC,SAAS,CAAE,CAE3CF,KAAK,CAAGT,SAAS,CAACU,OAAO,CAC3B,CACF,CACF,CAAC,IAAM,CAELD,KAAK,CAAGT,SAAS,CACnB,CACF,CAEAQ,SAAS,CAACI,SAAS,CAAG,SAACC,SAAoB,CAAK,CAC9CL,SAAS,CAACM,OAAO,CAACN,SAAS,CAAEC,KAAK,CAAEI,SAAS,CAAEd,aAAa,CAAC,CAC/D,CAAC,CACDS,SAAS,CAACI,SAAS,CAACf,cAAc,CAAC,CACnCW,SAAS,CAACI,SAAS,CAAG,IAAI,CAC5B,CAAC,IAAM,IAAI,MAAO,CAAAd,YAAY,GAAK,QAAQ,CAAE,CAE3CiB,MAAM,CAACC,IAAI,CAAClB,YAAY,CAAC,CAACM,OAAO,CAAE,SAAAa,GAAG,QACpC,CAAArB,oCAEE,CAAAC,cAAiB,CACjBC,YAAa,CAAAmB,GAAI,EAAAlB,aAAc,EAC/BA,aAAa,CAAAkB,GAAA,EAAAjB,SAEjB,EAAAA,SAAA,CAAAiB,GAAA,KAAC,CACH,CACF\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var prepareAnimation = function () {
  var _e = [new global.Error(), 1, -27];
  var _prepareAnimation = function prepareAnimation(frameTimestamp, animatedProp, lastAnimation, lastValue) {
    if (Array.isArray(animatedProp)) {
      animatedProp.forEach(function (prop, index) {
        _prepareAnimation(frameTimestamp, prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);
      });
    }
    if (typeof animatedProp === 'object' && animatedProp.onFrame) {
      var animation = animatedProp;
      var value = animation.current;
      if (lastValue !== undefined && lastValue !== null) {
        if (typeof lastValue === 'object') {
          if (lastValue.value !== undefined) {
            value = lastValue.value;
          } else if (lastValue.onFrame !== undefined) {
            if ((lastAnimation == null ? void 0 : lastAnimation.current) !== undefined) {
              value = lastAnimation.current;
            } else if ((lastValue == null ? void 0 : lastValue.current) !== undefined) {
              value = lastValue.current;
            }
          }
        } else {
          value = lastValue;
        }
      }
      animation.callStart = function (timestamp) {
        animation.onStart(animation, value, timestamp, lastAnimation);
      };
      animation.callStart(frameTimestamp);
      animation.callStart = null;
    } else if (typeof animatedProp === 'object') {
      Object.keys(animatedProp).forEach(function (key) {
        return _prepareAnimation(frameTimestamp, animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);
      });
    }
  };
  _prepareAnimation.__closure = {};
  _prepareAnimation.__workletHash = 13303293532880;
  _prepareAnimation.__initData = _worklet_13303293532880_init_data;
  _prepareAnimation.__stackDetails = _e;
  return _prepareAnimation;
}();
var _worklet_9681770465540_init_data = {
  code: "function runAnimations_useAnimatedStyleTs2(animation,timestamp,key,result,animationsActive){const runAnimations_useAnimatedStyleTs2=this._recur;if(!animationsActive.value){return true;}if(Array.isArray(animation)){result[key]=[];let allFinished=true;animation.forEach(function(entry,index){if(!runAnimations_useAnimatedStyleTs2(entry,timestamp,index,result[key],animationsActive)){allFinished=false;}});return allFinished;}else if(typeof animation==='object'&&animation.onFrame){let finished=true;if(!animation.finished){if(animation.callStart){animation.callStart(timestamp);animation.callStart=null;}finished=animation.onFrame(animation,timestamp);animation.timestamp=timestamp;if(finished){animation.finished=true;animation.callback&&animation.callback(true);}}result[key]=animation.current;return finished;}else if(typeof animation==='object'){result[key]={};let allFinished=true;Object.keys(animation).forEach(function(k){if(!runAnimations_useAnimatedStyleTs2(animation[k],timestamp,k,result[key],animationsActive)){allFinished=false;}});return allFinished;}else{result[key]=animation;return true;}}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\hook\\useAnimatedStyle.ts",
  sourceMap: "{\"version\":3,\"names\":[\"runAnimations_useAnimatedStyleTs2\",\"animation\",\"timestamp\",\"key\",\"result\",\"animationsActive\",\"_recur\",\"value\",\"Array\",\"isArray\",\"allFinished\",\"forEach\",\"entry\",\"index\",\"onFrame\",\"finished\",\"callStart\",\"callback\",\"current\",\"Object\",\"keys\",\"k\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/hook/useAnimatedStyle.ts\"],\"mappings\":\"AAoHA,SAAAA,iCAEEA,CAAAC,SAEA,CAAAC,SACA,CAAAC,GAAA,CAAAC,MACD,CAAUC,gBAAA,QAAAL,iCAAA,MAAAM,MAAA,CAET,GAAI,CAACD,gBAAgB,CAACE,KAAK,CAAE,CAC3B,MAAO,KAAI,CACb,CACA,GAAIC,KAAK,CAACC,OAAO,CAACR,SAAS,CAAC,CAAE,CAC5BG,MAAM,CAACD,GAAG,CAAC,CAAG,EAAE,CAChB,GAAI,CAAAO,WAAW,CAAG,IAAI,CACtBT,SAAS,CAACU,OAAO,CAAC,SAACC,KAAK,CAAEC,KAAK,CAAK,CAClC,GACE,CAACb,iCAAgC,CAAAY,KAAO,CAAAV,SAAW,CAAEW,KAAA,CAAAT,MAAA,CAAAD,GAAiB,EACtEE,gBAAA,GACAK,WAAW,CAAG,KAAK,CACrB,CACF,CAAC,CAAC,CACF,MAAO,CAAAA,WAAW,CACpB,CAAC,IAAM,IAAI,MAAO,CAAAT,SAAS,GAAK,QAAQ,EAAIA,SAAS,CAACa,OAAO,CAAE,CAC7D,GAAI,CAAAC,QAAQ,CAAG,IAAI,CACnB,GAAI,CAACd,SAAS,CAACc,QAAQ,CAAE,CACvB,GAAId,SAAS,CAACe,SAAS,CAAE,CACvBf,SAAS,CAACe,SAAS,CAACd,SAAS,CAAC,CAC9BD,SAAS,CAACe,SAAS,CAAG,IAAI,CAC5B,CACAD,QAAQ,CAAGd,SAAS,CAACa,OAAO,CAACb,SAAS,CAAEC,SAAS,CAAC,CAClDD,SAAS,CAACC,SAAS,CAAGA,SAAS,CAC/B,GAAIa,QAAQ,CAAE,CACZd,SAAS,CAACc,QAAQ,CAAG,IAAI,CACzBd,SAAS,CAACgB,QAAQ,EAAIhB,SAAS,CAACgB,QAAQ,CAAC,IAAmB,CAAC,CAC/D,CACF,CACAb,MAAM,CAACD,GAAG,CAAC,CAAGF,SAAS,CAACiB,OAAO,CAC/B,MAAO,CAAAH,QAAQ,CACjB,CAAC,IAAM,IAAI,MAAO,CAAAd,SAAS,GAAK,QAAQ,CAAE,CACxCG,MAAM,CAACD,GAAG,CAAC,CAAG,CAAC,CAAC,CAChB,GAAI,CAAAO,WAAW,CAAG,IAAI,CACtBS,MAAM,CAACC,IAAI,CAACnB,SAAS,CAAC,CAACU,OAAO,CAAE,SAAAU,CAAC,CAAK,CACpC,GACE,CAACrB,iCAEC,CAAAC,SAEA,CAAAoB,CAAA,EAAMnB,SACN,CAAAmB,CAAA,CAAAjB,MAAA,CAAAD,GACD,EACDE,gBAAA,GACAK,WAAW,CAAG,KAAK,CACrB,CACF,CAAC,CAAC,CACF,MAAO,CAAAA,WAAW,CACpB,CAAC,IAAM,CACLN,MAAM,CAACD,GAAG,CAAC,CAAGF,SAAS,CACvB,MAAO,KAAI,CACb,CACF\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var runAnimations = function () {
  var _e = [new global.Error(), 1, -27];
  var _runAnimations = function runAnimations(animation, timestamp, key, result, animationsActive) {
    if (!animationsActive.value) {
      return true;
    }
    if (Array.isArray(animation)) {
      result[key] = [];
      var allFinished = true;
      animation.forEach(function (entry, index) {
        if (!_runAnimations(entry, timestamp, index, result[key], animationsActive)) {
          allFinished = false;
        }
      });
      return allFinished;
    } else if (typeof animation === 'object' && animation.onFrame) {
      var finished = true;
      if (!animation.finished) {
        if (animation.callStart) {
          animation.callStart(timestamp);
          animation.callStart = null;
        }
        finished = animation.onFrame(animation, timestamp);
        animation.timestamp = timestamp;
        if (finished) {
          animation.finished = true;
          animation.callback && animation.callback(true);
        }
      }
      result[key] = animation.current;
      return finished;
    } else if (typeof animation === 'object') {
      result[key] = {};
      var _allFinished = true;
      Object.keys(animation).forEach(function (k) {
        if (!_runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {
          _allFinished = false;
        }
      });
      return _allFinished;
    } else {
      result[key] = animation;
      return true;
    }
  };
  _runAnimations.__closure = {};
  _runAnimations.__workletHash = 9681770465540;
  _runAnimations.__initData = _worklet_9681770465540_init_data;
  _runAnimations.__stackDetails = _e;
  return _runAnimations;
}();
var _worklet_10853110796143_init_data = {
  code: "function styleUpdater_useAnimatedStyleTs3(viewDescriptors,updater,state,animationsActive,isAnimatedProps=false){const{isAnimated,prepareAnimation,runAnimations,updateProps,shallowEqual}=this.__closure;var _state$animations,_updater;const animations=(_state$animations=state.animations)!==null&&_state$animations!==void 0?_state$animations:{};const newValues=(_updater=updater())!==null&&_updater!==void 0?_updater:{};const oldValues=state.last;const nonAnimatedNewValues={};let hasAnimations=false;let frameTimestamp;let hasNonAnimatedValues=false;for(const key in newValues){const value=newValues[key];if(isAnimated(value)){frameTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();prepareAnimation(frameTimestamp,value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}else{hasNonAnimatedValues=true;nonAnimatedNewValues[key]=value;delete animations[key];}}if(hasAnimations){const frame=function(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;for(const propName in animations){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}}if(updates){updateProps(viewDescriptors,updates);}if(!allFinished){requestAnimationFrame(frame);}else{state.isAnimationRunning=false;}};state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;frame(frameTimestamp);}if(hasNonAnimatedValues){updateProps(viewDescriptors,nonAnimatedNewValues);}}else{state.isAnimationCancelled=true;state.animations=[];if(!shallowEqual(oldValues,newValues)){updateProps(viewDescriptors,newValues,isAnimatedProps);}}state.last=newValues;}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\hook\\useAnimatedStyle.ts",
  sourceMap: "{\"version\":3,\"names\":[\"styleUpdater_useAnimatedStyleTs3\",\"viewDescriptors\",\"updater\",\"state\",\"animationsActive\",\"isAnimatedProps\",\"isAnimated\",\"prepareAnimation\",\"runAnimations\",\"updateProps\",\"shallowEqual\",\"__closure\",\"_state$animations\",\"_updater\",\"animations\",\"newValues\",\"oldValues\",\"last\",\"nonAnimatedNewValues\",\"hasAnimations\",\"frameTimestamp\",\"hasNonAnimatedValues\",\"key\",\"value\",\"global\",\"__frameTimestamp\",\"_getAnimationTimestamp\",\"frame\",\"timestamp\",\"isAnimationCancelled\",\"isAnimationRunning\",\"updates\",\"allFinished\",\"propName\",\"finished\",\"requestAnimationFrame\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/hook/useAnimatedStyle.ts\"],\"mappings\":\"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\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var styleUpdater = function () {
  var _e = [new global.Error(), -6, -27];
  var styleUpdater = function styleUpdater(viewDescriptors, updater, state, animationsActive) {
    var _state$animations, _updater;
    var isAnimatedProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    var animations = (_state$animations = state.animations) != null ? _state$animations : {};
    var newValues = (_updater = updater()) != null ? _updater : {};
    var oldValues = state.last;
    var nonAnimatedNewValues = {};
    var hasAnimations = false;
    var frameTimestamp;
    var hasNonAnimatedValues = false;
    for (var key in newValues) {
      var value = newValues[key];
      if ((0, _utils.isAnimated)(value)) {
        frameTimestamp = global.__frameTimestamp || global._getAnimationTimestamp();
        prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);
        animations[key] = value;
        hasAnimations = true;
      } else {
        hasNonAnimatedValues = true;
        nonAnimatedNewValues[key] = value;
        delete animations[key];
      }
    }
    if (hasAnimations) {
      var _frame = function frame(timestamp) {
        var animations = state.animations,
          last = state.last,
          isAnimationCancelled = state.isAnimationCancelled;
        if (isAnimationCancelled) {
          state.isAnimationRunning = false;
          return;
        }
        var updates = {};
        var allFinished = true;
        for (var propName in animations) {
          var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);
          if (finished) {
            last[propName] = updates[propName];
            delete animations[propName];
          } else {
            allFinished = false;
          }
        }
        if (updates) {
          (0, _UpdateProps.default)(viewDescriptors, updates);
        }
        if (!allFinished) {
          requestAnimationFrame(_frame);
        } else {
          state.isAnimationRunning = false;
        }
      };
      state.animations = animations;
      if (!state.isAnimationRunning) {
        state.isAnimationCancelled = false;
        state.isAnimationRunning = true;
        _frame(frameTimestamp);
      }
      if (hasNonAnimatedValues) {
        (0, _UpdateProps.default)(viewDescriptors, nonAnimatedNewValues);
      }
    } else {
      state.isAnimationCancelled = true;
      state.animations = [];
      if (!(0, _utils.shallowEqual)(oldValues, newValues)) {
        (0, _UpdateProps.default)(viewDescriptors, newValues, isAnimatedProps);
      }
    }
    state.last = newValues;
  };
  styleUpdater.__closure = {
    isAnimated: _utils.isAnimated,
    prepareAnimation: prepareAnimation,
    runAnimations: runAnimations,
    updateProps: _UpdateProps.default,
    shallowEqual: _utils.shallowEqual
  };
  styleUpdater.__workletHash = 10853110796143;
  styleUpdater.__initData = _worklet_10853110796143_init_data;
  styleUpdater.__stackDetails = _e;
  return styleUpdater;
}();
var _worklet_16833868046038_init_data = {
  code: "function jestStyleUpdater_useAnimatedStyleTs4(viewDescriptors,updater,state,animationsActive,animatedStyle,adapters){const{isAnimated,prepareAnimation,runAnimations,updatePropsJestWrapper,shallowEqual}=this.__closure;var _state$animations,_updater;const animations=(_state$animations=state.animations)!==null&&_state$animations!==void 0?_state$animations:{};const newValues=(_updater=updater())!==null&&_updater!==void 0?_updater:{};const oldValues=state.last;let hasAnimations=false;let frameTimestamp;Object.keys(animations).forEach(function(key){const value=newValues[key];if(!isAnimated(value)){delete animations[key];}});Object.keys(newValues).forEach(function(key){const value=newValues[key];if(isAnimated(value)){frameTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();prepareAnimation(frameTimestamp,value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}});function frame(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;Object.keys(animations).forEach(function(propName){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}});if(Object.keys(updates).length){updatePropsJestWrapper(viewDescriptors,updates,animatedStyle,adapters);}if(!allFinished){requestAnimationFrame(frame);}else{state.isAnimationRunning=false;}}if(hasAnimations){state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;frame(frameTimestamp);}}else{state.isAnimationCancelled=true;state.animations=[];}state.last=newValues;if(!shallowEqual(oldValues,newValues)){updatePropsJestWrapper(viewDescriptors,newValues,animatedStyle,adapters);}}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\hook\\useAnimatedStyle.ts",
  sourceMap: "{\"version\":3,\"names\":[\"jestStyleUpdater_useAnimatedStyleTs4\",\"viewDescriptors\",\"updater\",\"state\",\"animationsActive\",\"animatedStyle\",\"adapters\",\"isAnimated\",\"prepareAnimation\",\"runAnimations\",\"updatePropsJestWrapper\",\"shallowEqual\",\"__closure\",\"_state$animations\",\"_updater\",\"animations\",\"newValues\",\"oldValues\",\"last\",\"hasAnimations\",\"frameTimestamp\",\"Object\",\"keys\",\"forEach\",\"key\",\"value\",\"global\",\"__frameTimestamp\",\"_getAnimationTimestamp\",\"frame\",\"timestamp\",\"isAnimationCancelled\",\"isAnimationRunning\",\"updates\",\"allFinished\",\"propName\",\"finished\",\"length\",\"requestAnimationFrame\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/hook/useAnimatedStyle.ts\"],\"mappings\":\"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\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var jestStyleUpdater = function () {
  var _e = [new global.Error(), -6, -27];
  var jestStyleUpdater = function jestStyleUpdater(viewDescriptors, updater, state, animationsActive, animatedStyle, adapters) {
    var _state$animations2, _updater2;
    var animations = (_state$animations2 = state.animations) != null ? _state$animations2 : {};
    var newValues = (_updater2 = updater()) != null ? _updater2 : {};
    var oldValues = state.last;
    var hasAnimations = false;
    var frameTimestamp;
    Object.keys(animations).forEach(function (key) {
      var value = newValues[key];
      if (!(0, _utils.isAnimated)(value)) {
        delete animations[key];
      }
    });
    Object.keys(newValues).forEach(function (key) {
      var value = newValues[key];
      if ((0, _utils.isAnimated)(value)) {
        frameTimestamp = global.__frameTimestamp || global._getAnimationTimestamp();
        prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);
        animations[key] = value;
        hasAnimations = true;
      }
    });
    function frame(timestamp) {
      var animations = state.animations,
        last = state.last,
        isAnimationCancelled = state.isAnimationCancelled;
      if (isAnimationCancelled) {
        state.isAnimationRunning = false;
        return;
      }
      var updates = {};
      var allFinished = true;
      Object.keys(animations).forEach(function (propName) {
        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);
        if (finished) {
          last[propName] = updates[propName];
          delete animations[propName];
        } else {
          allFinished = false;
        }
      });
      if (Object.keys(updates).length) {
        (0, _UpdateProps.updatePropsJestWrapper)(viewDescriptors, updates, animatedStyle, adapters);
      }
      if (!allFinished) {
        requestAnimationFrame(frame);
      } else {
        state.isAnimationRunning = false;
      }
    }
    if (hasAnimations) {
      state.animations = animations;
      if (!state.isAnimationRunning) {
        state.isAnimationCancelled = false;
        state.isAnimationRunning = true;
        frame(frameTimestamp);
      }
    } else {
      state.isAnimationCancelled = true;
      state.animations = [];
    }
    state.last = newValues;
    if (!(0, _utils.shallowEqual)(oldValues, newValues)) {
      (0, _UpdateProps.updatePropsJestWrapper)(viewDescriptors, newValues, animatedStyle, adapters);
    }
  };
  jestStyleUpdater.__closure = {
    isAnimated: _utils.isAnimated,
    prepareAnimation: prepareAnimation,
    runAnimations: runAnimations,
    updatePropsJestWrapper: _UpdateProps.updatePropsJestWrapper,
    shallowEqual: _utils.shallowEqual
  };
  jestStyleUpdater.__workletHash = 16833868046038;
  jestStyleUpdater.__initData = _worklet_16833868046038_init_data;
  jestStyleUpdater.__stackDetails = _e;
  return jestStyleUpdater;
}();
function checkSharedValueUsage(prop, currentKey) {
  if (Array.isArray(prop)) {
    for (var element of prop) {
      checkSharedValueUsage(element, currentKey);
    }
  } else if (typeof prop === 'object' && prop !== null && prop.value === undefined) {
    for (var key of Object.keys(prop)) {
      checkSharedValueUsage(prop[key], key);
    }
  } else if (currentKey !== undefined && typeof prop === 'object' && prop !== null && prop.value !== undefined) {
    throw new _errors.ReanimatedError(`Invalid value passed to \`${currentKey}\`, maybe you forgot to use \`.value\`?`);
  }
}
var _worklet_14401948180387_init_data = {
  code: "function useAnimatedStyleTs5(){const{updater,adaptersArray}=this.__closure;const newValues=updater();adaptersArray.forEach(function(adapter){adapter(newValues);});return newValues;}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\hook\\useAnimatedStyle.ts",
  sourceMap: "{\"version\":3,\"names\":[\"useAnimatedStyleTs5\",\"updater\",\"adaptersArray\",\"__closure\",\"newValues\",\"forEach\",\"adapter\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/hook/useAnimatedStyle.ts\"],\"mappings\":\"AAiemB,SAAAA,mBAAMA,CAAA,QAAAC,OAAA,CAAAC,aAAA,OAAAC,SAAA,CAEjB,KAAM,CAAAC,SAAS,CAAGH,OAAO,CAAC,CAAC,CAC3BC,aAAa,CAACG,OAAO,CAAE,SAAAC,OAAO,CAAK,CACjCA,OAAO,CAACF,SAAoC,CAAC,CAC/C,CAAC,CAAC,CACF,MAAO,CAAAA,SAAS,CAClB\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_14404369948818_init_data = {
  code: "function useAnimatedStyleTs6(){const{jestStyleUpdater,shareableViewDescriptors,updater,remoteState,areAnimationsActive,jestAnimatedStyle,adaptersArray}=this.__closure;jestStyleUpdater(shareableViewDescriptors,updater,remoteState,areAnimationsActive,jestAnimatedStyle,adaptersArray);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\hook\\useAnimatedStyle.ts",
  sourceMap: "{\"version\":3,\"names\":[\"useAnimatedStyleTs6\",\"jestStyleUpdater\",\"shareableViewDescriptors\",\"updater\",\"remoteState\",\"areAnimationsActive\",\"jestAnimatedStyle\",\"adaptersArray\",\"__closure\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/hook/useAnimatedStyle.ts\"],\"mappings\":\"AA4eY,SAAAA,mBAAMA,CAAA,QAAAC,gBAAA,CAAAC,wBAAA,CAAAC,OAAA,CAAAC,WAAA,CAAAC,mBAAA,CAAAC,iBAAA,CAAAC,aAAA,OAAAC,SAAA,CAEVP,gBAAgB,CACdC,wBAAwB,CACxBC,OAAO,CACPC,WAAW,CACXC,mBAAmB,CACnBC,iBAAiB,CACjBC,aACF,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_13372741407283_init_data = {
  code: "function useAnimatedStyleTs7(){const{styleUpdater,shareableViewDescriptors,updaterFn,remoteState,areAnimationsActive,isAnimatedProps}=this.__closure;styleUpdater(shareableViewDescriptors,updaterFn,remoteState,areAnimationsActive,isAnimatedProps);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\hook\\useAnimatedStyle.ts",
  sourceMap: "{\"version\":3,\"names\":[\"useAnimatedStyleTs7\",\"styleUpdater\",\"shareableViewDescriptors\",\"updaterFn\",\"remoteState\",\"areAnimationsActive\",\"isAnimatedProps\",\"__closure\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/hook/useAnimatedStyle.ts\"],\"mappings\":\"AAwfY,SAAAA,mBAAMA,CAAA,QAAAC,YAAA,CAAAC,wBAAA,CAAAC,SAAA,CAAAC,WAAA,CAAAC,mBAAA,CAAAC,eAAA,OAAAC,SAAA,CAEVN,YAAY,CACVC,wBAAwB,CACxBC,SAAS,CACTC,WAAW,CACXC,mBAAmB,CACnBC,eACF,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
function useAnimatedStyle(updater, dependencies, adapters) {
  var _updater$__closure;
  var isAnimatedProps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var animatedUpdaterData = (0, _react.useRef)();
  var inputs = Object.values((_updater$__closure = updater.__closure) != null ? _updater$__closure : {});
  if (SHOULD_BE_USE_WEB) {
    var _dependencies;
    if (!inputs.length && (_dependencies = dependencies) != null && _dependencies.length) {
      inputs = dependencies;
    }
    if (__DEV__ && !inputs.length && !dependencies && !(0, _commonTypes.isWorkletFunction)(updater)) {
      throw new _errors.ReanimatedError(`\`useAnimatedStyle\` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel plugin.
For more, see the docs: \`https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin\`.`);
    }
  }
  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];
  var adaptersHash = adapters ? (0, _utils.buildWorkletsHash)(adaptersArray) : null;
  var areAnimationsActive = (0, _useSharedValue.useSharedValue)(true);
  var jestAnimatedStyle = (0, _react.useRef)({});
  if (!dependencies) {
    dependencies = [].concat((0, _toConsumableArray2.default)(inputs), [updater.__workletHash]);
  } else {
    dependencies.push(updater.__workletHash);
  }
  adaptersHash && dependencies.push(adaptersHash);
  if (!animatedUpdaterData.current) {
    var initialStyle = (0, _animation.initialUpdaterRun)(updater);
    if (__DEV__) {
      (0, _utils.validateAnimatedStyles)(initialStyle);
    }
    animatedUpdaterData.current = {
      initial: {
        value: initialStyle,
        updater: updater
      },
      remoteState: (0, _core.makeShareable)({
        last: initialStyle,
        animations: {},
        isAnimationCancelled: false,
        isAnimationRunning: false
      }),
      viewDescriptors: (0, _ViewDescriptorsSet.makeViewDescriptorsSet)()
    };
  }
  var _animatedUpdaterData$ = animatedUpdaterData.current,
    initial = _animatedUpdaterData$.initial,
    remoteState = _animatedUpdaterData$.remoteState,
    viewDescriptors = _animatedUpdaterData$.viewDescriptors;
  var shareableViewDescriptors = viewDescriptors.shareableViewDescriptors;
  dependencies.push(shareableViewDescriptors);
  (0, _react.useEffect)(function () {
    var fun;
    var updaterFn = updater;
    if (adapters) {
      updaterFn = function () {
        var _e = [new global.Error(), -3, -27];
        var useAnimatedStyleTs5 = function useAnimatedStyleTs5() {
          var newValues = updater();
          adaptersArray.forEach(function (adapter) {
            adapter(newValues);
          });
          return newValues;
        };
        useAnimatedStyleTs5.__closure = {
          updater: updater,
          adaptersArray: adaptersArray
        };
        useAnimatedStyleTs5.__workletHash = 14401948180387;
        useAnimatedStyleTs5.__initData = _worklet_14401948180387_init_data;
        useAnimatedStyleTs5.__stackDetails = _e;
        return useAnimatedStyleTs5;
      }();
    }
    if ((0, _PlatformChecker.isJest)()) {
      fun = function () {
        var _e = [new global.Error(), -8, -27];
        var useAnimatedStyleTs6 = function useAnimatedStyleTs6() {
          jestStyleUpdater(shareableViewDescriptors, updater, remoteState, areAnimationsActive, jestAnimatedStyle, adaptersArray);
        };
        useAnimatedStyleTs6.__closure = {
          jestStyleUpdater: jestStyleUpdater,
          shareableViewDescriptors: shareableViewDescriptors,
          updater: updater,
          remoteState: remoteState,
          areAnimationsActive: areAnimationsActive,
          jestAnimatedStyle: jestAnimatedStyle,
          adaptersArray: adaptersArray
        };
        useAnimatedStyleTs6.__workletHash = 14404369948818;
        useAnimatedStyleTs6.__initData = _worklet_14404369948818_init_data;
        useAnimatedStyleTs6.__stackDetails = _e;
        return useAnimatedStyleTs6;
      }();
    } else {
      fun = function () {
        var _e = [new global.Error(), -7, -27];
        var useAnimatedStyleTs7 = function useAnimatedStyleTs7() {
          styleUpdater(shareableViewDescriptors, updaterFn, remoteState, areAnimationsActive, isAnimatedProps);
        };
        useAnimatedStyleTs7.__closure = {
          styleUpdater: styleUpdater,
          shareableViewDescriptors: shareableViewDescriptors,
          updaterFn: updaterFn,
          remoteState: remoteState,
          areAnimationsActive: areAnimationsActive,
          isAnimatedProps: isAnimatedProps
        };
        useAnimatedStyleTs7.__workletHash = 13372741407283;
        useAnimatedStyleTs7.__initData = _worklet_13372741407283_init_data;
        useAnimatedStyleTs7.__stackDetails = _e;
        return useAnimatedStyleTs7;
      }();
    }
    var mapperId = (0, _core.startMapper)(fun, inputs);
    return function () {
      (0, _core.stopMapper)(mapperId);
    };
  }, dependencies);
  (0, _react.useEffect)(function () {
    areAnimationsActive.value = true;
    return function () {
      areAnimationsActive.value = false;
    };
  }, [areAnimationsActive]);
  checkSharedValueUsage(initial.value);
  var animatedStyleHandle = (0, _react.useRef)(null);
  if (!animatedStyleHandle.current) {
    animatedStyleHandle.current = (0, _PlatformChecker.isJest)() ? {
      viewDescriptors: viewDescriptors,
      initial: initial,
      jestAnimatedStyle: jestAnimatedStyle
    } : {
      viewDescriptors: viewDescriptors,
      initial: initial
    };
  }
  return animatedStyleHandle.current;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,