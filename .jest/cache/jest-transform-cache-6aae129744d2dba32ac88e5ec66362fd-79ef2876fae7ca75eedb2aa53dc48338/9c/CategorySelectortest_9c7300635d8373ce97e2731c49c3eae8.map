{"version":3,"names":["createMockAnimatedValue","initialValue","arguments","length","undefined","interpolate","jest","fn","setValue","addListener","removeListener","removeAllListeners","stopAnimation","resetAnimation","timing","mockTiming","_value","_offset","_animation","_getJestObj","mock","RN","requireActual","mockAnimatedTiming","animatedValue","config","start","mockStart","Object","assign","Animated","Value","View","_ref","children","style","props","_objectWithoutProperties2","default","_excluded","_jsxRuntime","jsx","Text","TouchableOpacity","ScrollView","_require2","require","LinearGradient","_require3","StyleSheet","create","container","backgroundGradient","scrollView","scrollContent","categoryItemWrapper","categoryTouchable","selectedCategoryItem","selectedInner","selectedCategoryText","sparkleContainer","sparkle","categoryItem","categoryInner","categoryText","_interopRequireDefault","_react","_reactNative","_reactNative2","_CategorySelector","_require4","_require","describe","categories","id","name","beforeEach","clearAllMocks","mockClear","it","_render","render","getByText","expect","toBeTruthy","_render2","queryByText","toBeNull","_render3","selectedCategory","onSelectCategory","_render4","fireEvent","press","toHaveBeenCalledWith","_render5","toHaveBeenCalledTimes","timingCalls","calls","toEqual","objectContaining","toValue","duration","useNativeDriver"],"sources":["CategorySelector.test.js"],"sourcesContent":["// __tests__/components/exercise-common/CategorySelector.test.js\nimport React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport { Text, View } from 'react-native';\nimport CategorySelector from '../../../src/components/exercise-common/CategorySelector';\n\n// Crée des mocks pour les méthodes de l'animation\nconst mockStart = jest.fn();\nconst mockTiming = jest.fn(() => ({\n  start: mockStart,\n}));\n\n// Mock pour Animated.Value qui retourne un objet avec les méthodes nécessaires\nconst createMockAnimatedValue = (initialValue = 0) => ({\n  interpolate: jest.fn(() => ({})),\n  setValue: jest.fn(),\n  addListener: jest.fn(),\n  removeListener: jest.fn(),\n  removeAllListeners: jest.fn(),\n  stopAnimation: jest.fn(),\n  resetAnimation: jest.fn(),\n  timing: mockTiming, // Ajouter timing directement sur l'instance\n  _value: initialValue,\n  _offset: 0,\n  _animation: null,\n});\n\n// Remplace l'implémentation d'Animated avec des mocks\njest.mock('react-native', () => {\n  const RN = jest.requireActual('react-native');\n  \n  // Mock global d'Animated.timing\n  const mockAnimatedTiming = jest.fn((animatedValue, config) => ({\n    start: mockStart,\n  }));\n  \n  return {\n    ...RN,\n    Animated: {\n      ...RN.Animated,\n      Value: jest.fn((initialValue) => createMockAnimatedValue(initialValue)),\n      timing: mockAnimatedTiming,\n      View: ({ children, style, ...props }) => <RN.View style={style} {...props}>{children}</RN.View>,\n    },\n    View: RN.View,\n    Text: RN.Text,\n    TouchableOpacity: RN.TouchableOpacity,\n    ScrollView: RN.ScrollView,\n  };\n});\n\n// Récupération du mock global pour les tests\nconst { Animated } = require('react-native');\nconst mockAnimatedTiming = Animated.timing;\n\n// Mock d'expo-linear-gradient\njest.mock('expo-linear-gradient', () => {\n  const { View } = require('react-native');\n  return {\n    LinearGradient: (props) => <View {...props} />,\n  };\n});\n\n// Mock du fichier de style\njest.mock('../../../src/components/exercise-common/CategorySelector/style', () => {\n  const { StyleSheet } = require('react-native');\n  return () => StyleSheet.create({\n    container: {},\n    backgroundGradient: {},\n    scrollView: {},\n    scrollContent: {},\n    categoryItemWrapper: {},\n    categoryTouchable: {},\n    selectedCategoryItem: {},\n    selectedInner: {},\n    selectedCategoryText: {},\n    sparkleContainer: {},\n    sparkle: {},\n    categoryItem: {},\n    categoryInner: {},\n    categoryText: {},\n  });\n});\n\ndescribe('CategorySelector', () => {\n  const categories = [\n    { id: '1', name: 'Grammar' },\n    { id: '2', name: 'Vocabulary' },\n    { id: '3', name: 'Reading' },\n  ];\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockStart.mockClear();\n    mockAnimatedTiming.mockClear();\n  });\n\n  it('should render all categories correctly with minimum props', () => {\n    const { getByText } = render(<CategorySelector categories={categories} />);\n    expect(getByText('Grammar')).toBeTruthy();\n    expect(getByText('Vocabulary')).toBeTruthy();\n    expect(getByText('Reading')).toBeTruthy();\n  });\n\n  it('should render nothing when the categories array is empty', () => {\n    const { queryByText } = render(<CategorySelector categories={[]} />);\n    expect(queryByText('Grammar')).toBeNull();\n  });\n\n  it('should display the selected category with the sparkle emoji', () => {\n    const { getByText } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory=\"1\"\n        onSelectCategory={() => {}}\n      />\n    );\n    expect(getByText('✨')).toBeTruthy();\n  });\n\n  it('should call onSelectCategory with the correct category id when a category is pressed', () => {\n    const onSelectCategory = jest.fn();\n    const { getByText } = render(\n      <CategorySelector\n        categories={categories}\n        onSelectCategory={onSelectCategory}\n      />\n    );\n    fireEvent.press(getByText('Vocabulary'));\n    expect(onSelectCategory).toHaveBeenCalledWith('2');\n  });\n\n  it('should deselect the previous category when a new one is selected and trigger two animations', () => {\n    const onSelectCategory = jest.fn();\n\n    // 1. On rend le composant avec une catégorie sélectionnée\n    const { getByText } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory=\"1\"\n        onSelectCategory={onSelectCategory}\n      />\n    );\n\n    // Clear les mocks après le rendu initial pour ne compter que les nouvelles animations\n    mockStart.mockClear();\n    mockAnimatedTiming.mockClear();\n\n    // 2. On simule le clic sur une autre catégorie\n    fireEvent.press(getByText('Vocabulary'));\n    \n    // 3. Vérifier que onSelectCategory a été appelé\n    expect(onSelectCategory).toHaveBeenCalledWith('2');\n    \n    // 4. Vérifier que les deux animations ont été déclenchées\n    // Une pour désélectionner l'ancienne catégorie (id: '1')\n    // Une pour sélectionner la nouvelle catégorie (id: '2')\n    expect(mockAnimatedTiming).toHaveBeenCalledTimes(2);\n    expect(mockStart).toHaveBeenCalledTimes(2);\n    \n    // Vérifier que les appels incluent les bons paramètres\n    const timingCalls = mockAnimatedTiming.mock.calls;\n    \n    // Premier appel : désélection (toValue: 0, duration: 200)\n    expect(timingCalls[0][1]).toEqual(expect.objectContaining({\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: false,\n    }));\n    \n    // Deuxième appel : sélection (toValue: 1, duration: 300)\n    expect(timingCalls[1][1]).toEqual(expect.objectContaining({\n      toValue: 1,\n      duration: 300,\n      useNativeDriver: false,\n    }));\n  });\n});"],"mappings":"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","ignoreList":[]}