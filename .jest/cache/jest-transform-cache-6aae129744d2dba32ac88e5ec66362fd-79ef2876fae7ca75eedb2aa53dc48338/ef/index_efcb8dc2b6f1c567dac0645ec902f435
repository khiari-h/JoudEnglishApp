4733829a160a1e57335c0f261d937a4f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _vectorIcons = require("@expo/vector-icons");
var _native = require("@react-navigation/native");
var _react = require("react");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _constants = require("../../../utils/constants");
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_10bf1yn85f() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseHeader\\index.js";
  var hash = "e86563cdc6e39c4ef9d5d0405768528d92e47caf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseHeader\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "1": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "2": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 80
        }
      },
      "3": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 42
        }
      },
      "4": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "5": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "6": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 34,
          column: 36
        }
      },
      "7": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 37,
          column: 54
        }
      },
      "8": {
        start: {
          line: 39,
          column: 22
        },
        end: {
          line: 45,
          column: 27
        }
      },
      "9": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "10": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 16
        }
      },
      "11": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 26
        }
      },
      "12": {
        start: {
          line: 47,
          column: 2
        },
        end: {
          line: 68,
          column: 4
        }
      },
      "13": {
        start: {
          line: 71,
          column: 26
        },
        end: {
          line: 88,
          column: 1
        }
      },
      "14": {
        start: {
          line: 72,
          column: 2
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "15": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 98,
          column: 2
        }
      },
      "16": {
        start: {
          line: 100,
          column: 19
        },
        end: {
          line: 104,
          column: 1
        }
      },
      "17": {
        start: {
          line: 101,
          column: 2
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "18": {
        start: {
          line: 107,
          column: 0
        },
        end: {
          line: 111,
          column: 2
        }
      },
      "19": {
        start: {
          line: 114,
          column: 0
        },
        end: {
          line: 120,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 18,
            column: 24
          }
        },
        loc: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 34
          },
          end: {
            line: 39,
            column: 35
          }
        },
        loc: {
          start: {
            line: 39,
            column: 40
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 39
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 27
          }
        },
        loc: {
          start: {
            line: 72,
            column: 2
          },
          end: {
            line: 87,
            column: 9
          }
        },
        line: 72
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 100,
            column: 19
          },
          end: {
            line: 100,
            column: 20
          }
        },
        loc: {
          start: {
            line: 101,
            column: 2
          },
          end: {
            line: 103,
            column: 9
          }
        },
        line: 101
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 21,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 17
          },
          end: {
            line: 21,
            column: 29
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 23,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 13
          },
          end: {
            line: 23,
            column: 25
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 51
          }
        }, {
          start: {
            line: 28,
            column: 55
          },
          end: {
            line: 28,
            column: 80
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 33,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 33,
            column: 42
          }
        }, {
          start: {
            line: 33,
            column: 46
          },
          end: {
            line: 33,
            column: 66
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 37,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 43
          },
          end: {
            line: 37,
            column: 46
          }
        }, {
          start: {
            line: 37,
            column: 49
          },
          end: {
            line: 37,
            column: 54
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: 42,
            column: 11
          },
          end: {
            line: 44,
            column: 5
          }
        }],
        line: 40
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e86563cdc6e39c4ef9d5d0405768528d92e47caf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_10bf1yn85f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10bf1yn85f();
cov_10bf1yn85f().s[0]++;
var ExerciseHeader = function ExerciseHeader(_ref) {
  var title = _ref.title,
    level = _ref.level,
    _ref$exerciseType = _ref.exerciseType,
    exerciseType = _ref$exerciseType === void 0 ? (cov_10bf1yn85f().b[0][0]++, "vocabulary") : _ref$exerciseType,
    onClose = _ref.onClose,
    _ref$backIcon = _ref.backIcon,
    backIcon = _ref$backIcon === void 0 ? (cov_10bf1yn85f().b[1][0]++, "arrow-back") : _ref$backIcon;
  cov_10bf1yn85f().f[0]++;
  var navigation = (cov_10bf1yn85f().s[1]++, (0, _native.useNavigation)());
  var exerciseInfo = (cov_10bf1yn85f().s[2]++, (cov_10bf1yn85f().b[2][0]++, _constants.EXERCISE_TYPES[exerciseType]) || (cov_10bf1yn85f().b[2][1]++, _constants.EXERCISE_TYPES.vocabulary));
  var exerciseColor = (cov_10bf1yn85f().s[3]++, exerciseInfo.color);
  var exerciseIcon = (cov_10bf1yn85f().s[4]++, exerciseInfo.icon);
  var levelInfo = (cov_10bf1yn85f().s[5]++, (cov_10bf1yn85f().b[3][0]++, _constants.LANGUAGE_LEVELS[level]) || (cov_10bf1yn85f().b[3][1]++, _constants.LANGUAGE_LEVELS["1"]));
  var levelColor = (cov_10bf1yn85f().s[6]++, levelInfo.color);
  var displayLevel = (cov_10bf1yn85f().s[7]++, level === "bonus" ? (cov_10bf1yn85f().b[4][0]++, "B") : (cov_10bf1yn85f().b[4][1]++, level));
  var handleClose = (cov_10bf1yn85f().s[8]++, (0, _react.useCallback)(function () {
    cov_10bf1yn85f().f[1]++;
    cov_10bf1yn85f().s[9]++;
    if (onClose) {
      cov_10bf1yn85f().b[5][0]++;
      cov_10bf1yn85f().s[10]++;
      onClose();
    } else {
      cov_10bf1yn85f().b[5][1]++;
      cov_10bf1yn85f().s[11]++;
      navigation.goBack();
    }
  }, [onClose, navigation]));
  cov_10bf1yn85f().s[12]++;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: _style.default.container,
    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: _style.default.content,
      children: [(0, _jsxRuntime.jsx)(HeaderLeftSection, {
        handleClose: handleClose,
        backIcon: backIcon,
        exerciseIcon: exerciseIcon,
        title: title,
        exerciseColor: exerciseColor,
        localStyles: _style.default
      }), (0, _jsxRuntime.jsx)(LevelBadge, {
        displayLevel: displayLevel,
        levelColor: levelColor,
        localStyles: _style.default
      })]
    })
  });
};
cov_10bf1yn85f().s[13]++;
var HeaderLeftSection = function HeaderLeftSection(_ref2) {
  var handleClose = _ref2.handleClose,
    backIcon = _ref2.backIcon,
    exerciseIcon = _ref2.exerciseIcon,
    title = _ref2.title,
    exerciseColor = _ref2.exerciseColor,
    localStyles = _ref2.localStyles;
  cov_10bf1yn85f().f[2]++;
  cov_10bf1yn85f().s[14]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: localStyles.leftSection,
    children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      testID: "back-button",
      style: localStyles.backButton,
      onPress: handleClose,
      hitSlop: {
        top: 12,
        bottom: 12,
        left: 12,
        right: 12
      },
      activeOpacity: 0.6,
      accessibilityRole: "button",
      children: (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
        name: backIcon,
        size: 22,
        color: "#64748b"
      })
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: localStyles.titleSection,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: localStyles.exerciseIcon,
        children: exerciseIcon
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: [localStyles.title, {
          color: exerciseColor
        }],
        children: title
      })]
    })]
  });
};
cov_10bf1yn85f().s[15]++;
HeaderLeftSection.propTypes = {
  handleClose: _propTypes.default.func.isRequired,
  backIcon: _propTypes.default.string.isRequired,
  exerciseIcon: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  exerciseColor: _propTypes.default.string.isRequired,
  localStyles: _propTypes.default.object.isRequired
};
cov_10bf1yn85f().s[16]++;
var LevelBadge = function LevelBadge(_ref3) {
  var displayLevel = _ref3.displayLevel,
    levelColor = _ref3.levelColor,
    localStyles = _ref3.localStyles;
  cov_10bf1yn85f().f[3]++;
  cov_10bf1yn85f().s[17]++;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: [localStyles.levelBadge, {
      backgroundColor: levelColor
    }],
    children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: localStyles.levelText,
      children: displayLevel
    })
  });
};
cov_10bf1yn85f().s[18]++;
LevelBadge.propTypes = {
  displayLevel: _propTypes.default.string.isRequired,
  levelColor: _propTypes.default.string.isRequired,
  localStyles: _propTypes.default.object.isRequired
};
cov_10bf1yn85f().s[19]++;
ExerciseHeader.propTypes = {
  title: _propTypes.default.string.isRequired,
  level: _propTypes.default.string.isRequired,
  exerciseType: _propTypes.default.string,
  onClose: _propTypes.default.func,
  backIcon: _propTypes.default.string
};
var _default = exports.default = ExerciseHeader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,