e3cf46c6d8de4b4a69f0c6e83307a608
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var styles = _reactNative.StyleSheet.create({
  card: Object.assign({
    backgroundColor: 'white',
    borderRadius: 12,
    marginBottom: 15,
    overflow: 'hidden'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.1,
      shadowRadius: 4
    },
    android: {
      elevation: 3
    }
  })),
  topSection: {
    flexDirection: 'row',
    padding: 16,
    alignItems: 'center'
  },
  iconContainer: {
    width: 50,
    height: 50,
    borderRadius: 12,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 15
  },
  icon: {
    fontSize: 24
  },
  infoContainer: {
    flex: 1
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#1f2937',
    marginBottom: 5
  },
  description: {
    fontSize: 14,
    color: '#6b7280',
    lineHeight: 20
  },
  progressSection: {
    paddingHorizontal: 16,
    paddingBottom: 10
  },
  progressContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 5
  },
  progressBar: {
    flex: 1,
    height: 5,
    backgroundColor: '#e5e7eb',
    borderRadius: 3,
    marginRight: 8,
    overflow: 'hidden'
  },
  progressFill: {
    height: '100%',
    borderRadius: 3
  },
  progressText: {
    fontSize: 12,
    fontWeight: 'bold',
    width: 35,
    textAlign: 'right'
  },
  badgeContainer: {
    paddingHorizontal: 16,
    paddingBottom: 10
  },
  badge: {
    alignSelf: 'flex-start',
    paddingHorizontal: 10,
    paddingVertical: 3,
    borderRadius: 10
  },
  badgeText: {
    fontSize: 11,
    fontWeight: 'bold'
  },
  buttonContainer: {
    borderTopWidth: 1,
    borderTopColor: '#f3f4f6'
  },
  startButton: {
    padding: 12,
    alignItems: 'center',
    justifyContent: 'center'
  },
  buttonText: {
    color: 'white',
    fontWeight: 'bold',
    fontSize: 15,
    letterSpacing: 0.5
  }
});
var _default = exports.default = styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwic3R5bGVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImNhcmQiLCJPYmplY3QiLCJhc3NpZ24iLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJSYWRpdXMiLCJtYXJnaW5Cb3R0b20iLCJvdmVyZmxvdyIsIlBsYXRmb3JtIiwic2VsZWN0IiwiaW9zIiwic2hhZG93Q29sb3IiLCJzaGFkb3dPZmZzZXQiLCJ3aWR0aCIsImhlaWdodCIsInNoYWRvd09wYWNpdHkiLCJzaGFkb3dSYWRpdXMiLCJhbmRyb2lkIiwiZWxldmF0aW9uIiwidG9wU2VjdGlvbiIsImZsZXhEaXJlY3Rpb24iLCJwYWRkaW5nIiwiYWxpZ25JdGVtcyIsImljb25Db250YWluZXIiLCJqdXN0aWZ5Q29udGVudCIsIm1hcmdpblJpZ2h0IiwiaWNvbiIsImZvbnRTaXplIiwiaW5mb0NvbnRhaW5lciIsImZsZXgiLCJ0aXRsZSIsImZvbnRXZWlnaHQiLCJjb2xvciIsImRlc2NyaXB0aW9uIiwibGluZUhlaWdodCIsInByb2dyZXNzU2VjdGlvbiIsInBhZGRpbmdIb3Jpem9udGFsIiwicGFkZGluZ0JvdHRvbSIsInByb2dyZXNzQ29udGFpbmVyIiwicHJvZ3Jlc3NCYXIiLCJwcm9ncmVzc0ZpbGwiLCJwcm9ncmVzc1RleHQiLCJ0ZXh0QWxpZ24iLCJiYWRnZUNvbnRhaW5lciIsImJhZGdlIiwiYWxpZ25TZWxmIiwicGFkZGluZ1ZlcnRpY2FsIiwiYmFkZ2VUZXh0IiwiYnV0dG9uQ29udGFpbmVyIiwiYm9yZGVyVG9wV2lkdGgiLCJib3JkZXJUb3BDb2xvciIsInN0YXJ0QnV0dG9uIiwiYnV0dG9uVGV4dCIsImxldHRlclNwYWNpbmciLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsic3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NvbXBvbmVudHMvZXhlcmNpc2UtY29tbW9uL0V4ZXJjaXNlQ2FyZC9zdHlsZXMuanNcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFBsYXRmb3JtIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjYXJkOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxuICAgIGJvcmRlclJhZGl1czogMTIsXG4gICAgbWFyZ2luQm90dG9tOiAxNSxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcbiAgICAgIGlvczoge1xuICAgICAgICBzaGFkb3dDb2xvcjogJyMwMDAnLFxuICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogMiB9LFxuICAgICAgICBzaGFkb3dPcGFjaXR5OiAwLjEsXG4gICAgICAgIHNoYWRvd1JhZGl1czogNCxcbiAgICAgIH0sXG4gICAgICBhbmRyb2lkOiB7XG4gICAgICAgIGVsZXZhdGlvbjogMyxcbiAgICAgIH0sXG4gICAgfSksXG4gIH0sXG4gIHRvcFNlY3Rpb246IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBwYWRkaW5nOiAxNixcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgfSxcbiAgaWNvbkNvbnRhaW5lcjoge1xuICAgIHdpZHRoOiA1MCxcbiAgICBoZWlnaHQ6IDUwLFxuICAgIGJvcmRlclJhZGl1czogMTIsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIG1hcmdpblJpZ2h0OiAxNSxcbiAgfSxcbiAgaWNvbjoge1xuICAgIGZvbnRTaXplOiAyNCxcbiAgfSxcbiAgaW5mb0NvbnRhaW5lcjoge1xuICAgIGZsZXg6IDEsXG4gIH0sXG4gIHRpdGxlOiB7XG4gICAgZm9udFNpemU6IDE4LFxuICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICBjb2xvcjogJyMxZjI5MzcnLFxuICAgIG1hcmdpbkJvdHRvbTogNSxcbiAgfSxcbiAgZGVzY3JpcHRpb246IHtcbiAgICBmb250U2l6ZTogMTQsXG4gICAgY29sb3I6ICcjNmI3MjgwJyxcbiAgICBsaW5lSGVpZ2h0OiAyMCxcbiAgfSxcbiAgcHJvZ3Jlc3NTZWN0aW9uOiB7XG4gICAgcGFkZGluZ0hvcml6b250YWw6IDE2LFxuICAgIHBhZGRpbmdCb3R0b206IDEwLFxuICB9LFxuICBwcm9ncmVzc0NvbnRhaW5lcjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIG1hcmdpbkJvdHRvbTogNSxcbiAgfSxcbiAgcHJvZ3Jlc3NCYXI6IHtcbiAgICBmbGV4OiAxLFxuICAgIGhlaWdodDogNSxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZTVlN2ViJyxcbiAgICBib3JkZXJSYWRpdXM6IDMsXG4gICAgbWFyZ2luUmlnaHQ6IDgsXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICB9LFxuICBwcm9ncmVzc0ZpbGw6IHtcbiAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICBib3JkZXJSYWRpdXM6IDMsXG4gIH0sXG4gIHByb2dyZXNzVGV4dDoge1xuICAgIGZvbnRTaXplOiAxMixcbiAgICBmb250V2VpZ2h0OiAnYm9sZCcsXG4gICAgd2lkdGg6IDM1LFxuICAgIHRleHRBbGlnbjogJ3JpZ2h0JyxcbiAgfSxcbiAgYmFkZ2VDb250YWluZXI6IHtcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTYsXG4gICAgcGFkZGluZ0JvdHRvbTogMTAsXG4gIH0sXG4gIGJhZGdlOiB7XG4gICAgYWxpZ25TZWxmOiAnZmxleC1zdGFydCcsXG4gICAgcGFkZGluZ0hvcml6b250YWw6IDEwLFxuICAgIHBhZGRpbmdWZXJ0aWNhbDogMyxcbiAgICBib3JkZXJSYWRpdXM6IDEwLFxuICB9LFxuICBiYWRnZVRleHQ6IHtcbiAgICBmb250U2l6ZTogMTEsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICB9LFxuICBidXR0b25Db250YWluZXI6IHtcbiAgICBib3JkZXJUb3BXaWR0aDogMSxcbiAgICBib3JkZXJUb3BDb2xvcjogJyNmM2Y0ZjYnLFxuICB9LFxuICBzdGFydEJ1dHRvbjoge1xuICAgIHBhZGRpbmc6IDEyLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgfSxcbiAgYnV0dG9uVGV4dDoge1xuICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICBmb250U2l6ZTogMTUsXG4gICAgbGV0dGVyU3BhY2luZzogMC41LFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxlcztcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUVBLElBQU1DLE1BQU0sR0FBR0MsdUJBQVUsQ0FBQ0MsTUFBTSxDQUFDO0VBQy9CQyxJQUFJLEVBQUFDLE1BQUEsQ0FBQUMsTUFBQTtJQUNGQyxlQUFlLEVBQUUsT0FBTztJQUN4QkMsWUFBWSxFQUFFLEVBQUU7SUFDaEJDLFlBQVksRUFBRSxFQUFFO0lBQ2hCQyxRQUFRLEVBQUU7RUFBUSxHQUNmQyxxQkFBUSxDQUFDQyxNQUFNLENBQUM7SUFDakJDLEdBQUcsRUFBRTtNQUNIQyxXQUFXLEVBQUUsTUFBTTtNQUNuQkMsWUFBWSxFQUFFO1FBQUVDLEtBQUssRUFBRSxDQUFDO1FBQUVDLE1BQU0sRUFBRTtNQUFFLENBQUM7TUFDckNDLGFBQWEsRUFBRSxHQUFHO01BQ2xCQyxZQUFZLEVBQUU7SUFDaEIsQ0FBQztJQUNEQyxPQUFPLEVBQUU7TUFDUEMsU0FBUyxFQUFFO0lBQ2I7RUFDRixDQUFDLENBQUMsQ0FDSDtFQUNEQyxVQUFVLEVBQUU7SUFDVkMsYUFBYSxFQUFFLEtBQUs7SUFDcEJDLE9BQU8sRUFBRSxFQUFFO0lBQ1hDLFVBQVUsRUFBRTtFQUNkLENBQUM7RUFDREMsYUFBYSxFQUFFO0lBQ2JWLEtBQUssRUFBRSxFQUFFO0lBQ1RDLE1BQU0sRUFBRSxFQUFFO0lBQ1ZULFlBQVksRUFBRSxFQUFFO0lBQ2hCaUIsVUFBVSxFQUFFLFFBQVE7SUFDcEJFLGNBQWMsRUFBRSxRQUFRO0lBQ3hCQyxXQUFXLEVBQUU7RUFDZixDQUFDO0VBQ0RDLElBQUksRUFBRTtJQUNKQyxRQUFRLEVBQUU7RUFDWixDQUFDO0VBQ0RDLGFBQWEsRUFBRTtJQUNiQyxJQUFJLEVBQUU7RUFDUixDQUFDO0VBQ0RDLEtBQUssRUFBRTtJQUNMSCxRQUFRLEVBQUUsRUFBRTtJQUNaSSxVQUFVLEVBQUUsTUFBTTtJQUNsQkMsS0FBSyxFQUFFLFNBQVM7SUFDaEIxQixZQUFZLEVBQUU7RUFDaEIsQ0FBQztFQUNEMkIsV0FBVyxFQUFFO0lBQ1hOLFFBQVEsRUFBRSxFQUFFO0lBQ1pLLEtBQUssRUFBRSxTQUFTO0lBQ2hCRSxVQUFVLEVBQUU7RUFDZCxDQUFDO0VBQ0RDLGVBQWUsRUFBRTtJQUNmQyxpQkFBaUIsRUFBRSxFQUFFO0lBQ3JCQyxhQUFhLEVBQUU7RUFDakIsQ0FBQztFQUNEQyxpQkFBaUIsRUFBRTtJQUNqQmxCLGFBQWEsRUFBRSxLQUFLO0lBQ3BCRSxVQUFVLEVBQUUsUUFBUTtJQUNwQmhCLFlBQVksRUFBRTtFQUNoQixDQUFDO0VBQ0RpQyxXQUFXLEVBQUU7SUFDWFYsSUFBSSxFQUFFLENBQUM7SUFDUGYsTUFBTSxFQUFFLENBQUM7SUFDVFYsZUFBZSxFQUFFLFNBQVM7SUFDMUJDLFlBQVksRUFBRSxDQUFDO0lBQ2ZvQixXQUFXLEVBQUUsQ0FBQztJQUNkbEIsUUFBUSxFQUFFO0VBQ1osQ0FBQztFQUNEaUMsWUFBWSxFQUFFO0lBQ1oxQixNQUFNLEVBQUUsTUFBTTtJQUNkVCxZQUFZLEVBQUU7RUFDaEIsQ0FBQztFQUNEb0MsWUFBWSxFQUFFO0lBQ1pkLFFBQVEsRUFBRSxFQUFFO0lBQ1pJLFVBQVUsRUFBRSxNQUFNO0lBQ2xCbEIsS0FBSyxFQUFFLEVBQUU7SUFDVDZCLFNBQVMsRUFBRTtFQUNiLENBQUM7RUFDREMsY0FBYyxFQUFFO0lBQ2RQLGlCQUFpQixFQUFFLEVBQUU7SUFDckJDLGFBQWEsRUFBRTtFQUNqQixDQUFDO0VBQ0RPLEtBQUssRUFBRTtJQUNMQyxTQUFTLEVBQUUsWUFBWTtJQUN2QlQsaUJBQWlCLEVBQUUsRUFBRTtJQUNyQlUsZUFBZSxFQUFFLENBQUM7SUFDbEJ6QyxZQUFZLEVBQUU7RUFDaEIsQ0FBQztFQUNEMEMsU0FBUyxFQUFFO0lBQ1RwQixRQUFRLEVBQUUsRUFBRTtJQUNaSSxVQUFVLEVBQUU7RUFDZCxDQUFDO0VBQ0RpQixlQUFlLEVBQUU7SUFDZkMsY0FBYyxFQUFFLENBQUM7SUFDakJDLGNBQWMsRUFBRTtFQUNsQixDQUFDO0VBQ0RDLFdBQVcsRUFBRTtJQUNYOUIsT0FBTyxFQUFFLEVBQUU7SUFDWEMsVUFBVSxFQUFFLFFBQVE7SUFDcEJFLGNBQWMsRUFBRTtFQUNsQixDQUFDO0VBQ0Q0QixVQUFVLEVBQUU7SUFDVnBCLEtBQUssRUFBRSxPQUFPO0lBQ2RELFVBQVUsRUFBRSxNQUFNO0lBQ2xCSixRQUFRLEVBQUUsRUFBRTtJQUNaMEIsYUFBYSxFQUFFO0VBQ2pCO0FBQ0YsQ0FBQyxDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FFWTFELE1BQU0iLCJpZ25vcmVMaXN0IjpbXX0=