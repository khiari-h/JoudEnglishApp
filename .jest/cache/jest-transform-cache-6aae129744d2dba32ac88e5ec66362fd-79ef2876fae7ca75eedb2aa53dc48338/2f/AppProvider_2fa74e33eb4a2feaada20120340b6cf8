398aaa6b13dbc13f05b1705bb43bbe69
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _ThemeContext = require("./ThemeContext");
var _ProgressContext = require("./ProgressContext");
var _SettingContext = require("./SettingContext");
var _CurrentLevelContext = require("./CurrentLevelContext");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_23v77supj7() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\contexts\\AppProvider.js";
  var hash = "e6ddb7bc6c69492edf505805ab319be636fef539";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\contexts\\AppProvider.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 23,
          column: 4
        }
      },
      "2": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 29,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 21
          }
        },
        loc: {
          start: {
            line: 12,
            column: 38
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e6ddb7bc6c69492edf505805ab319be636fef539"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_23v77supj7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23v77supj7();
cov_23v77supj7().s[0]++;
var AppProvider = function AppProvider(_ref) {
  var children = _ref.children;
  cov_23v77supj7().f[0]++;
  cov_23v77supj7().s[1]++;
  return (0, _jsxRuntime.jsx)(_ThemeContext.ThemeProvider, {
    children: (0, _jsxRuntime.jsx)(_SettingContext.SettingsProvider, {
      children: (0, _jsxRuntime.jsx)(_ProgressContext.ProgressProvider, {
        children: (0, _jsxRuntime.jsx)(_CurrentLevelContext.CurrentLevelProvider, {
          children: children
        })
      })
    })
  });
};
cov_23v77supj7().s[2]++;
AppProvider.propTypes = {
  children: _propTypes.default.any.isRequired
};
var _default = exports.default = AppProvider;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfVGhlbWVDb250ZXh0IiwicmVxdWlyZSIsIl9Qcm9ncmVzc0NvbnRleHQiLCJfU2V0dGluZ0NvbnRleHQiLCJfQ3VycmVudExldmVsQ29udGV4dCIsIl9wcm9wVHlwZXMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2pzeFJ1bnRpbWUiLCJjb3ZfMjN2NzdzdXBqNyIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIkFwcFByb3ZpZGVyIiwiX3JlZiIsImNoaWxkcmVuIiwianN4IiwiVGhlbWVQcm92aWRlciIsIlNldHRpbmdzUHJvdmlkZXIiLCJQcm9ncmVzc1Byb3ZpZGVyIiwiQ3VycmVudExldmVsUHJvdmlkZXIiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhbnkiLCJpc1JlcXVpcmVkIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIkFwcFByb3ZpZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb250ZXh0cy9BcHBQcm92aWRlci5qc1xyXG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyIH0gZnJvbSAnLi9UaGVtZUNvbnRleHQnO1xyXG5pbXBvcnQgeyBQcm9ncmVzc1Byb3ZpZGVyIH0gZnJvbSAnLi9Qcm9ncmVzc0NvbnRleHQnO1xyXG5pbXBvcnQgeyBTZXR0aW5nc1Byb3ZpZGVyIH0gZnJvbSAnLi9TZXR0aW5nQ29udGV4dCc7XHJcbmltcG9ydCB7IEN1cnJlbnRMZXZlbFByb3ZpZGVyIH0gZnJvbSAnLi9DdXJyZW50TGV2ZWxDb250ZXh0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxyXG4vKipcclxuICogRm91cm5pc3NldXIgZ2xvYmFsIHF1aSBjb21iaW5lIHRvdXMgbGVzIGNvbnRleHRlcyBkZSBsJ2FwcGxpY2F0aW9uXHJcbiAqIFNpbXBsaWZpZSBsJ2luY2x1c2lvbiBkZXMgY29udGV4dGVzIGRhbnMgbCdhcHBsaWNhdGlvblxyXG4gKi9cclxuY29uc3QgQXBwUHJvdmlkZXIgPSAoeyBjaGlsZHJlbiB9KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxUaGVtZVByb3ZpZGVyPlxyXG4gICAgICA8U2V0dGluZ3NQcm92aWRlcj5cclxuICAgICAgICA8UHJvZ3Jlc3NQcm92aWRlcj5cclxuICAgICAgICAgIDxDdXJyZW50TGV2ZWxQcm92aWRlcj5cclxuICAgICAgICAgICAge2NoaWxkcmVufVxyXG4gICAgICAgICAgPC9DdXJyZW50TGV2ZWxQcm92aWRlcj5cclxuICAgICAgICA8L1Byb2dyZXNzUHJvdmlkZXI+XHJcbiAgICAgIDwvU2V0dGluZ3NQcm92aWRlcj5cclxuICAgIDwvVGhlbWVQcm92aWRlcj5cclxuICApO1xyXG59O1xyXG5cclxuXG5BcHBQcm92aWRlci5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55LmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBBcHBQcm92aWRlcjsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsSUFBQUEsYUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsZ0JBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLGVBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLG9CQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxVQUFBLEdBQUFDLHNCQUFBLENBQUFMLE9BQUE7QUFBbUMsSUFBQU0sV0FBQSxHQUFBTixPQUFBO0FBQUEsU0FBQU8sZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElB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