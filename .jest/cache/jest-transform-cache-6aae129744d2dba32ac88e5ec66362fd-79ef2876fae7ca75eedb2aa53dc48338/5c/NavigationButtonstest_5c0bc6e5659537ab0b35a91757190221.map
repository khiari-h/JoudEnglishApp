{"version":3,"names":["_getJestObj","mock","_require","require","View","LinearGradient","props","_jsxRuntime","jsx","Object","assign","testID","_require2","Text","Ionicons","name","children","_interopRequireDefault","_react","_reactNative","_reactNative2","_style","_NavigationButtons","_require3","jest","spyOn","Animated","mockImplementation","start","callback","describe","onNextMock","fn","onPreviousMock","afterEach","clearAllMocks","it","_render","render","default","onNext","onPrevious","getByText","expect","toBeTruthy","_render2","disablePrevious","queryByText","toBeNull","_render3","fireEvent","press","toHaveBeenCalledTimes","_render4","_render5","disableNext","not","toHaveBeenCalled","_render6","isLast","getByTestId","_render7","_render8","_render9","_render0","buttonLabels","previous","next","finish","Platform","obj","ios","styles","createStyles","previousButton","shadowColor","toBe","shadowOpacity","toHaveProperty","android","elevation","_render1","parent","style","toContainEqual","opacity","_render10"],"sources":["NavigationButtons.test.js"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport { Platform, Animated } from 'react-native';\nimport createStyles from '../../../src/components/exercise-common/NavigationButtons/style';\nimport NavigationButtons from '../../../src/components/exercise-common/NavigationButtons';\n\n// Mock dependencies\njest.mock('expo-linear-gradient', () => {\n    const { View } = require('react-native');\n    return {\n        LinearGradient: (props) => <View testID=\"linear-gradient\" {...props} />,\n    };\n});\n\njest.mock('@expo/vector-icons', () => {\n    const { Text } = require('react-native');\n    return {\n        Ionicons: (props) => <Text testID={`icon-${props.name}`}>{props.name}</Text>,\n    };\n});\n\n// Mock de l'API Animated pour des tests rapides et fiables\njest.spyOn(Animated, 'sequence').mockImplementation(() => ({\n    start: (callback) => {\n        if (callback) {\n            callback();\n        }\n    },\n}));\n\ndescribe('NavigationButtons', () => {\n    const onNextMock = jest.fn();\n    const onPreviousMock = jest.fn();\n\n    afterEach(() => {\n        jest.clearAllMocks();\n    });\n\n    // ---------------------------------\n    // Rendu et Fonctionnalité des Boutons\n    // ---------------------------------\n    describe('Rendering and Functionality', () => {\n        it('renders both previous and next buttons by default', () => {\n            const { getByText } = render(\n                <NavigationButtons onNext={onNextMock} onPrevious={onPreviousMock} />\n            );\n            expect(getByText('Précédent')).toBeTruthy();\n            expect(getByText('Suivant')).toBeTruthy();\n        });\n\n        it('hides the previous button when disablePrevious is true', () => {\n            const { queryByText } = render(<NavigationButtons onNext={onNextMock} onPrevious={onPreviousMock} disablePrevious={true} />);\n            expect(queryByText('Précédent')).toBeNull();\n        });\n\n        it('calls onPrevious when the previous button is pressed', () => {\n            const { getByText } = render(<NavigationButtons onPrevious={onPreviousMock} />);\n            fireEvent.press(getByText('Précédent'));\n            expect(onPreviousMock).toHaveBeenCalledTimes(1);\n        });\n\n        it('calls onNext when the next button is pressed', () => {\n            const { getByText } = render(<NavigationButtons onNext={onNextMock} />);\n            fireEvent.press(getByText('Suivant'));\n            expect(onNextMock).toHaveBeenCalledTimes(1);\n        });\n\n        it('does not call onNext when the next button is disabled', () => {\n            const { getByText } = render(<NavigationButtons onNext={onNextMock} disableNext={true} />);\n            fireEvent.press(getByText('Suivant'));\n            expect(onNextMock).not.toHaveBeenCalled();\n        });\n\n        it('displays \"Terminer\" and a checkmark icon on the next button when isLast is true', () => {\n            const { getByText, getByTestId } = render(<NavigationButtons isLast={true} onNext={onNextMock} />);\n            expect(getByText('Terminer')).toBeTruthy();\n            expect(getByTestId('icon-checkmark')).toBeTruthy();\n        });\n\n        it('hides all buttons when both are disabled', () => {\n            const { queryByText } = render(\n                <NavigationButtons disablePrevious={true} disableNext={true} />\n            );\n            expect(queryByText('Précédent')).toBeNull();\n            expect(queryByText('Suivant')).toBeNull();\n            expect(queryByText('Terminer')).toBeNull();\n        });\n\n        it('renders only the previous button when disableNext is true', () => {\n            const { getByText, queryByText } = render(\n                <NavigationButtons onPrevious={onPreviousMock} disableNext={true} />\n            );\n            expect(getByText('Précédent')).toBeTruthy();\n            expect(queryByText('Suivant')).toBeNull();\n        });\n\n        it('renders only the next button when disablePrevious is true', () => {\n            const { getByText, queryByText } = render(\n                <NavigationButtons onNext={onNextMock} disablePrevious={true} />\n            );\n            expect(getByText('Suivant')).toBeTruthy();\n            expect(queryByText('Précédent')).toBeNull();\n        });\n\n        it('uses custom button labels', () => {\n            const { getByText } = render(\n                <NavigationButtons\n                    buttonLabels={{ previous: 'Back', next: 'Next', finish: 'Done' }}\n                />\n            );\n            expect(getByText('Back')).toBeTruthy();\n            expect(getByText('Next')).toBeTruthy();\n        });\n    });\n\n    // ---------------------------------\n    // Styles et Comportement\n    // ---------------------------------\n    describe('Styles and Behavior', () => {\n        // Mock de Platform.select pour tester les styles spécifiques\n        it('applies iOS styles correctly', () => {\n            jest.spyOn(Platform, 'select').mockImplementation((obj) => obj.ios);\n            const styles = createStyles('#5E60CE');\n            expect(styles.previousButton.shadowColor).toBe('#000');\n            expect(styles.previousButton.shadowOpacity).toBe(0.08);\n            expect(styles.previousButton).not.toHaveProperty('elevation');\n        });\n\n        it('applies Android styles correctly', () => {\n            jest.spyOn(Platform, 'select').mockImplementation((obj) => obj.android);\n            const styles = createStyles('#5E60CE');\n            expect(styles.previousButton.elevation).toBe(3);\n            expect(styles.previousButton).not.toHaveProperty('shadowOpacity');\n        });\n        \n        // Test pour vérifier que le style \"disabled\" est appliqué\n        it('applies disabled style to the previous button when disabled', () => {\n          const { getByText } = render(<NavigationButtons onPrevious={onPreviousMock} disablePrevious={true} />);\n          expect(getByText('Précédent').parent.props.style).toContainEqual({ opacity: 0.6 });\n        });\n    \n        it('applies disabled style to the next button when disabled', () => {\n          const { getByText } = render(<NavigationButtons onNext={onNextMock} disableNext={true} />);\n          expect(getByText('Suivant').parent.props.style).toContainEqual({ opacity: 0.6 });\n        });\n    });\n});"],"mappings":"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","ignoreList":[]}