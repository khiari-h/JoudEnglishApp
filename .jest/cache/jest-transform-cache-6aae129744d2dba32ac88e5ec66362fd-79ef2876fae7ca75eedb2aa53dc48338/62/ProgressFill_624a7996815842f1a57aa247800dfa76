4c2f74be740074e93d4a946ea01ed8ca
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ProgressFill;
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1ulabxa1ld() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ProgressBar\\ProgressFill.js";
  var hash = "6570f43b0a9291087b01b79c7a81bfb83b07a65c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ProgressBar\\ProgressFill.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 17,
          column: 4
        }
      },
      "1": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 25,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "ProgressFill",
        decl: {
          start: {
            line: 5,
            column: 24
          },
          end: {
            line: 5,
            column: 36
          }
        },
        loc: {
          start: {
            line: 5,
            column: 80
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6570f43b0a9291087b01b79c7a81bfb83b07a65c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1ulabxa1ld = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ulabxa1ld();
function ProgressFill(_ref) {
  var style = _ref.style,
    width = _ref.width,
    fillColor = _ref.fillColor,
    borderRadius = _ref.borderRadius;
  cov_1ulabxa1ld().f[0]++;
  cov_1ulabxa1ld().s[0]++;
  return (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {
    style: [style, {
      width: width,
      backgroundColor: fillColor,
      borderRadius: borderRadius
    }]
  });
}
cov_1ulabxa1ld().s[1]++;
ProgressFill.propTypes = {
  style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
  width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  fillColor: _propTypes.default.string,
  borderRadius: _propTypes.default.number
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3Byb3BUeXBlcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfanN4UnVudGltZSIsImNvdl8xdWxhYnhhMWxkIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiUHJvZ3Jlc3NGaWxsIiwiX3JlZiIsInN0eWxlIiwid2lkdGgiLCJmaWxsQ29sb3IiLCJib3JkZXJSYWRpdXMiLCJqc3giLCJBbmltYXRlZCIsIlZpZXciLCJiYWNrZ3JvdW5kQ29sb3IiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJvYmplY3QiLCJhcnJheSIsIm51bWJlciIsInN0cmluZyJdLCJzb3VyY2VzIjpbIlByb2dyZXNzRmlsbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy91aS9Qcm9ncmVzc0Jhci9Qcm9ncmVzc0ZpbGwuanNcclxuaW1wb3J0IHsgQW5pbWF0ZWQgfSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQcm9ncmVzc0ZpbGwoeyBzdHlsZSwgd2lkdGgsIGZpbGxDb2xvciwgYm9yZGVyUmFkaXVzIH0pIHtcclxuICByZXR1cm4gKFxyXG4gICAgPEFuaW1hdGVkLlZpZXdcclxuICAgICAgc3R5bGU9e1tcclxuICAgICAgICBzdHlsZSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICB3aWR0aCxcclxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogZmlsbENvbG9yLFxyXG4gICAgICAgICAgYm9yZGVyUmFkaXVzLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIF19XHJcbiAgICAvPlxyXG4gICk7XHJcbn1cclxuXHJcblByb2dyZXNzRmlsbC5wcm9wVHlwZXMgPSB7XHJcbiAgc3R5bGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5hcnJheV0pLFxyXG4gIHdpZHRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXHJcbiAgZmlsbENvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIGJvcmRlclJhZGl1czogUHJvcFR5cGVzLm51bWJlcixcclxufTtcclxuXHJcblxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsVUFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQW1DLElBQUFHLFdBQUEsR0FBQUgsT0FBQTtBQUFBLFNBQUFJLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7SUFBQUMsZUFBQTtJQUFBbEIsSUFBQTtFQUFBO0VBQUEsSUFBQW1CLFFBQUEsR0FBQWxCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBZ0IsUUFBQSxDQUFBcEIsSUFBQSxLQUFBb0IsUUFBQSxDQUFBcEIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQW1CLFFBQUEsQ0FBQXBCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQWdCLGNBQUEsR0FBQUQsUUFBQSxDQUFBcEIsSUFBQTtFQUFBO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFzQixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBdEIsY0FBQTtBQUVwQixTQUFTdUIsWUFBWUEsQ0FBQUMsSUFBQSxFQUE0QztFQUFBLElBQXpDQyxLQUFLLEdBQUFELElBQUEsQ0FBTEMsS0FBSztJQUFFQyxLQUFLLEdBQUFGLElBQUEsQ0FBTEUsS0FBSztJQUFFQyxTQUFTLEdBQUFILElBQUEsQ0FBVEcsU0FBUztJQUFFQyxZQUFZLEdBQUFKLElBQUEsQ0FBWkksWUFBWTtFQUFBNUIsY0FBQSxHQUFBa0IsQ0FBQTtFQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQTtFQUMxRSxPQUNFLElBQUFsQixXQUFBLENBQUE4QixHQUFBLEVBQUNsQyxZQUFBLENBQUFtQyxRQUFRLENBQUNDLElBQUk7SUFDWk4sS0FBSyxFQUFFLENBQ0xBLEtBQUssRUFDTDtNQUNFQyxLQUFLLEVBQUxBLEtBQUs7TUFDTE0sZUFBZSxFQUFFTCxTQUFTO01BQzFCQyxZQUFZLEVBQVpBO0lBQ0YsQ0FBQztFQUNELENBQ0gsQ0FBQztBQUVOO0FBQUM1QixjQUFBLEdBQUFpQixDQUFBO0FBRURNLFlBQVksQ0FBQ1UsU0FBUyxHQUFHO0VBQ3ZCUixLQUFLLEVBQUVTLGtCQUFTLENBQUNDLFNBQVMsQ0FBQyxDQUFDRCxrQkFBUyxDQUFDRSxNQUFNLEVBQUVGLGtCQUFTLENBQUNHLEtBQUssQ0FBQyxDQUFDO0VBQy9EWCxLQUFLLEVBQUVRLGtCQUFTLENBQUNDLFNBQVMsQ0FBQyxDQUFDRCxrQkFBUyxDQUFDSSxNQUFNLEVBQUVKLGtCQUFTLENBQUNLLE1BQU0sQ0FBQyxDQUFDO0VBQ2hFWixTQUFTLEVBQUVPLGtCQUFTLENBQUNLLE1BQU07RUFDM0JYLFlBQVksRUFBRU0sa0JBQVMsQ0FBQ0k7QUFDMUIsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==