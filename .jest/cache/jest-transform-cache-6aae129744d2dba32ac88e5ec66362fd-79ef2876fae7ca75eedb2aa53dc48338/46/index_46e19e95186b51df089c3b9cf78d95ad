83cc781507bf8e8827c534d43b783a1c
function cov_q2weiocv() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\modes\\FullCorrectionMode\\index.js";
  var hash = "615863b5e22c3aa52ee86dbbf4f73b938b19586d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\modes\\FullCorrectionMode\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 79,
          column: 1
        }
      },
      "1": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "2": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "3": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "4": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 78,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 19,
            column: 28
          }
        },
        loc: {
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 23,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 17
          },
          end: {
            line: 23,
            column: 22
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 24,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 24,
            column: 14
          },
          end: {
            line: 24,
            column: 19
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 24
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 24
          }
        }, {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 56,
            column: 84
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 56,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 41
          },
          end: {
            line: 56,
            column: 60
          }
        }, {
          start: {
            line: 56,
            column: 63
          },
          end: {
            line: 56,
            column: 84
          }
        }],
        line: 56
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 7
          },
          end: {
            line: 76,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 7
          },
          end: {
            line: 68,
            column: 19
          }
        }, {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 43
          }
        }, {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 75,
            column: 10
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 17
          },
          end: {
            line: 70,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 29
          },
          end: {
            line: 70,
            column: 40
          }
        }, {
          start: {
            line: 70,
            column: 43
          },
          end: {
            line: 70,
            column: 56
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 34
          },
          end: {
            line: 72,
            column: 43
          }
        }, {
          start: {
            line: 72,
            column: 46
          },
          end: {
            line: 72,
            column: 55
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 27
          },
          end: {
            line: 73,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 39
          },
          end: {
            line: 73,
            column: 48
          }
        }, {
          start: {
            line: 73,
            column: 51
          },
          end: {
            line: 73,
            column: 60
          }
        }],
        line: 73
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "615863b5e22c3aa52ee86dbbf4f73b938b19586d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_q2weiocv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_q2weiocv();
import { View, TextInput } from "react-native";
import HeroCard from "../../../../../components/ui/HeroCard";
import ContentSection from "../../../../../components/ui/ContentSection";
import createStyles from "./style";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_q2weiocv().s[0]++;
var FullCorrectionMode = function FullCorrectionMode(_ref) {
  var exercise = _ref.exercise,
    userCorrection = _ref.userCorrection,
    onChangeUserCorrection = _ref.onChangeUserCorrection,
    _ref$showFeedback = _ref.showFeedback,
    showFeedback = _ref$showFeedback === void 0 ? (cov_q2weiocv().b[0][0]++, false) : _ref$showFeedback,
    _ref$isCorrect = _ref.isCorrect,
    isCorrect = _ref$isCorrect === void 0 ? (cov_q2weiocv().b[1][0]++, false) : _ref$isCorrect,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_q2weiocv().b[2][0]++, "#5E60CE") : _ref$levelColor;
  cov_q2weiocv().f[0]++;
  var styles = (cov_q2weiocv().s[1]++, createStyles(levelColor));
  cov_q2weiocv().s[2]++;
  if (!exercise) {
    cov_q2weiocv().b[3][0]++;
    cov_q2weiocv().s[3]++;
    return null;
  } else {
    cov_q2weiocv().b[3][1]++;
  }
  cov_q2weiocv().s[4]++;
  return _jsxs(View, {
    style: styles.container,
    children: [_jsx(HeroCard, {
      content: exercise.text,
      fontSize: 24,
      levelColor: levelColor,
      showUnderline: false,
      style: styles.heroCard
    }), _jsx(ContentSection, {
      title: "Instructions",
      content: "Corrigez toutes les erreurs dans le texte ci-dessus en r\xE9\xE9crivant la phrase compl\xE8te.",
      levelColor: levelColor,
      backgroundColor: "#F8F9FA",
      style: styles.instructionSection
    }), _jsx(View, {
      style: styles.correctionContainer,
      children: _jsx(TextInput, {
        style: [styles.correctionInput, (cov_q2weiocv().b[4][0]++, showFeedback) && (cov_q2weiocv().b[4][1]++, isCorrect ? (cov_q2weiocv().b[5][0]++, styles.correctInput) : (cov_q2weiocv().b[5][1]++, styles.incorrectInput))],
        value: userCorrection,
        onChangeText: onChangeUserCorrection,
        multiline: true,
        placeholder: "Tapez le texte corrig\xE9 ici...",
        placeholderTextColor: "#94a3b8",
        editable: !showFeedback
      })
    }), (cov_q2weiocv().b[6][0]++, showFeedback) && (cov_q2weiocv().b[6][1]++, exercise.explanation) && (cov_q2weiocv().b[6][2]++, _jsx(ContentSection, {
      title: isCorrect ? (cov_q2weiocv().b[7][0]++, "Correct !") : (cov_q2weiocv().b[7][1]++, "Explication"),
      content: exercise.explanation,
      levelColor: isCorrect ? (cov_q2weiocv().b[8][0]++, "#10b981") : (cov_q2weiocv().b[8][1]++, "#ef4444"),
      backgroundColor: isCorrect ? (cov_q2weiocv().b[9][0]++, "#f0fdf4") : (cov_q2weiocv().b[9][1]++, "#fef2f2"),
      style: styles.feedbackSection
    }))]
  });
};
export default FullCorrectionMode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,