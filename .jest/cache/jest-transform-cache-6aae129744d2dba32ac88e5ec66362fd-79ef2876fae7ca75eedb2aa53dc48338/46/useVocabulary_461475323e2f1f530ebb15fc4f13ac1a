f60843dc524ffc7e7b01ad7e0b73aa8b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _asyncStorage = _interopRequireDefault(require("@react-native-async-storage/async-storage"));
var _useVocabularySelectors = _interopRequireDefault(require("./internal/useVocabularySelectors"));
var _useVocabularyNavigation = _interopRequireDefault(require("./internal/useVocabularyNavigation"));
var _useVocabularyStorage = _interopRequireDefault(require("./internal/useVocabularyStorage"));
function cov_1027b36355() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\hooks\\useVocabulary.js";
  var hash = "b1330c4f1012e6b5640b8e879757aac087a1eb0f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\hooks\\useVocabulary.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 99,
          column: 1
        }
      },
      "1": {
        start: {
          line: 11,
          column: 44
        },
        end: {
          line: 11,
          column: 55
        }
      },
      "2": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "3": {
        start: {
          line: 13,
          column: 48
        },
        end: {
          line: 13,
          column: 63
        }
      },
      "4": {
        start: {
          line: 14,
          column: 46
        },
        end: {
          line: 14,
          column: 58
        }
      },
      "5": {
        start: {
          line: 15,
          column: 30
        },
        end: {
          line: 15,
          column: 45
        }
      },
      "6": {
        start: {
          line: 16,
          column: 58
        },
        end: {
          line: 16,
          column: 73
        }
      },
      "7": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "8": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "9": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 21,
          column: 78
        }
      },
      "10": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 118
        }
      },
      "11": {
        start: {
          line: 23,
          column: 26
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "12": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 24,
          column: 65
        }
      },
      "13": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "14": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "15": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 41,
          column: 4
        }
      },
      "16": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 64,
          column: 4
        }
      },
      "17": {
        start: {
          line: 67,
          column: 78
        },
        end: {
          line: 75,
          column: 4
        }
      },
      "18": {
        start: {
          line: 77,
          column: 2
        },
        end: {
          line: 98,
          column: 4
        }
      },
      "19": {
        start: {
          line: 89,
          column: 29
        },
        end: {
          line: 89,
          column: 62
        }
      },
      "20": {
        start: {
          line: 89,
          column: 56
        },
        end: {
          line: 89,
          column: 61
        }
      },
      "21": {
        start: {
          line: 90,
          column: 34
        },
        end: {
          line: 90,
          column: 72
        }
      },
      "22": {
        start: {
          line: 90,
          column: 66
        },
        end: {
          line: 90,
          column: 71
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 9,
            column: 23
          }
        },
        loc: {
          start: {
            line: 9,
            column: 80
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 89,
            column: 24
          }
        },
        loc: {
          start: {
            line: 89,
            column: 29
          },
          end: {
            line: 89,
            column: 62
          }
        },
        line: 89
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 89,
            column: 48
          },
          end: {
            line: 89,
            column: 49
          }
        },
        loc: {
          start: {
            line: 89,
            column: 56
          },
          end: {
            line: 89,
            column: 61
          }
        },
        line: 89
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 90,
            column: 29
          }
        },
        loc: {
          start: {
            line: 90,
            column: 34
          },
          end: {
            line: 90,
            column: 72
          }
        },
        line: 90
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 90,
            column: 58
          },
          end: {
            line: 90,
            column: 59
          }
        },
        loc: {
          start: {
            line: 90,
            column: 66
          },
          end: {
            line: 90,
            column: 71
          }
        },
        line: 90
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 9,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 40
          },
          end: {
            line: 9,
            column: 44
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 46
          },
          end: {
            line: 9,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 54
          },
          end: {
            line: 9,
            column: 57
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 9,
            column: 59
          },
          end: {
            line: 9,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 66
          },
          end: {
            line: 9,
            column: 75
          }
        }],
        line: 9
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 20,
            column: 51
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 50
          }
        }, {
          start: {
            line: 21,
            column: 54
          },
          end: {
            line: 21,
            column: 78
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 56
          }
        }, {
          start: {
            line: 22,
            column: 60
          },
          end: {
            line: 22,
            column: 118
          }
        }],
        line: 22
      },
      "6": {
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 60
          }
        }, {
          start: {
            line: 24,
            column: 64
          },
          end: {
            line: 24,
            column: 65
          }
        }],
        line: 24
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b1330c4f1012e6b5640b8e879757aac087a1eb0f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1027b36355 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1027b36355();
cov_1027b36355().s[0]++;
var useVocabulary = function useVocabulary() {
  var _currentCategory$word, _currentCategory$word2;
  var vocabularyData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1027b36355().b[0][0]++, null);
  var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_1027b36355().b[1][0]++, "1");
  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_1027b36355().b[2][0]++, "classic");
  cov_1027b36355().f[0]++;
  var _ref = (cov_1027b36355().s[1]++, (0, _react.useState)(0)),
    _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    categoryIndex = _ref2[0],
    setCategoryIndex = _ref2[1];
  var _ref3 = (cov_1027b36355().s[2]++, (0, _react.useState)(0)),
    _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
    wordIndex = _ref4[0],
    setWordIndex = _ref4[1];
  var _ref5 = (cov_1027b36355().s[3]++, (0, _react.useState)(false)),
    _ref6 = (0, _slicedToArray2.default)(_ref5, 2),
    showTranslation = _ref6[0],
    setShowTranslation = _ref6[1];
  var _ref7 = (cov_1027b36355().s[4]++, (0, _react.useState)({})),
    _ref8 = (0, _slicedToArray2.default)(_ref7, 2),
    completedWords = _ref8[0],
    setCompletedWords = _ref8[1];
  var _ref9 = (cov_1027b36355().s[5]++, (0, _react.useState)(false)),
    _ref0 = (0, _slicedToArray2.default)(_ref9, 2),
    loaded = _ref0[0],
    setLoaded = _ref0[1];
  var _ref1 = (cov_1027b36355().s[6]++, (0, _react.useState)(false)),
    _ref10 = (0, _slicedToArray2.default)(_ref1, 2),
    showDetailedProgress = _ref10[0],
    setShowDetailedProgress = _ref10[1];
  var isInitialized = (cov_1027b36355().s[7]++, (0, _react.useRef)(false));
  var exercises = (cov_1027b36355().s[8]++, (cov_1027b36355().b[3][0]++, vocabularyData == null ? void 0 : vocabularyData.exercises) || (cov_1027b36355().b[3][1]++, []));
  var currentCategory = (cov_1027b36355().s[9]++, (cov_1027b36355().b[4][0]++, exercises[categoryIndex]) || (cov_1027b36355().b[4][1]++, {
    title: "",
    words: []
  }));
  var currentWord = (cov_1027b36355().s[10]++, (cov_1027b36355().b[5][0]++, (_currentCategory$word = currentCategory.words) == null ? void 0 : _currentCategory$word[wordIndex]) || (cov_1027b36355().b[5][1]++, {
    word: "",
    translation: "",
    definition: "",
    example: ""
  }));
  var totalCategories = (cov_1027b36355().s[11]++, exercises.length);
  var totalWordsInCategory = (cov_1027b36355().s[12]++, (cov_1027b36355().b[6][0]++, (_currentCategory$word2 = currentCategory.words) == null ? void 0 : _currentCategory$word2.length) || (cov_1027b36355().b[6][1]++, 0));
  var progressKey = (cov_1027b36355().s[13]++, `${level}_${mode}`);
  var STORAGE_KEY = (cov_1027b36355().s[14]++, `vocabulary_${progressKey}`);
  var _ref11 = (cov_1027b36355().s[15]++, (0, _useVocabularyStorage.default)({
      STORAGE_KEY: STORAGE_KEY,
      progressKey: progressKey,
      loaded: loaded,
      setLoaded: setLoaded,
      completedWords: completedWords,
      setCompletedWords: setCompletedWords,
      setCategoryIndex: setCategoryIndex,
      setWordIndex: setWordIndex,
      exercises: exercises,
      isInitialized: isInitialized
    })),
    saveData = _ref11.saveData;
  var _ref12 = (cov_1027b36355().s[16]++, (0, _useVocabularyNavigation.default)({
      exercises: exercises,
      level: level,
      mode: mode,
      categoryIndex: categoryIndex,
      wordIndex: wordIndex,
      totalWordsInCategory: totalWordsInCategory,
      setCategoryIndex: setCategoryIndex,
      setWordIndex: setWordIndex,
      setShowTranslation: setShowTranslation,
      completedWords: completedWords,
      setCompletedWords: setCompletedWords
    })),
    changeCategory = _ref12.changeCategory,
    goToNextWord = _ref12.goToNextWord,
    goToPreviousWord = _ref12.goToPreviousWord,
    markWordAsCompleted = _ref12.markWordAsCompleted,
    findNextUncompletedCategory = _ref12.findNextUncompletedCategory,
    handleNext = _ref12.handleNext,
    handlePrevious = _ref12.handlePrevious;
  var _ref13 = (cov_1027b36355().s[17]++, (0, _useVocabularySelectors.default)({
      exercises: exercises,
      completedWords: completedWords,
      categoryIndex: categoryIndex,
      wordIndex: wordIndex,
      totalWordsInCategory: totalWordsInCategory,
      currentWord: currentWord,
      currentCategory: currentCategory
    })),
    getStats = _ref13.getStats,
    getDisplayData = _ref13.getDisplayData,
    canGoToPrevious = _ref13.canGoToPrevious,
    isLastWordInExercise = _ref13.isLastWordInExercise;
  cov_1027b36355().s[18]++;
  return {
    categoryIndex: categoryIndex,
    wordIndex: wordIndex,
    showTranslation: showTranslation,
    completedWords: completedWords,
    loaded: loaded,
    showDetailedProgress: showDetailedProgress,
    currentWord: currentWord,
    currentCategory: currentCategory,
    totalCategories: totalCategories,
    totalWordsInCategory: totalWordsInCategory,
    changeCategory: changeCategory,
    toggleTranslation: function toggleTranslation() {
      cov_1027b36355().f[1]++;
      cov_1027b36355().s[19]++;
      return setShowTranslation(function (prev) {
        cov_1027b36355().f[2]++;
        cov_1027b36355().s[20]++;
        return !prev;
      });
    },
    toggleDetailedProgress: function toggleDetailedProgress() {
      cov_1027b36355().f[3]++;
      cov_1027b36355().s[21]++;
      return setShowDetailedProgress(function (prev) {
        cov_1027b36355().f[4]++;
        cov_1027b36355().s[22]++;
        return !prev;
      });
    },
    handleNext: handleNext,
    handlePrevious: handlePrevious,
    canGoToPrevious: canGoToPrevious(),
    isLastWordInExercise: isLastWordInExercise(),
    stats: getStats(),
    display: getDisplayData(),
    saveData: saveData
  };
};
var _default = exports.default = useVocabulary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,