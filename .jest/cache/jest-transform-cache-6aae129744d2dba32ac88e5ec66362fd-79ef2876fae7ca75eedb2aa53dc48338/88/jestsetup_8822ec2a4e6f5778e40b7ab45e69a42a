2509ddaa4453331738c4fd90efe715ab
_getJestObj().mock('react-native/Libraries/Settings/Settings', function () {
  return {
    get: jest.fn(function () {
      return 'light';
    }),
    addEventListener: jest.fn(),
    removeEventListener: jest.fn()
  };
});
_getJestObj().mock('@react-native-async-storage/async-storage', function () {
  return require('@react-native-async-storage/async-storage/jest/async-storage-mock');
});
_getJestObj().mock('expo-font', function () {
  return {
    useFonts: function useFonts() {
      return [true];
    },
    isLoaded: function isLoaded() {
      return true;
    }
  };
});
_getJestObj().mock('expo-haptics', function () {
  return {
    impactAsync: jest.fn()
  };
});
_getJestObj().mock('expo-modules-core', function () {
  return {
    NativeModulesProxy: {},
    EventEmitter: jest.fn(),
    requireNativeViewManager: jest.fn(function () {
      return {};
    })
  };
});
_getJestObj().mock('react-native-reanimated', function () {
  var Reanimated = require('react-native-reanimated/mock');
  Reanimated.default.call = function () {};
  return Reanimated;
});
_getJestObj().mock('react-native', function () {
  var RN = jest.requireActual('react-native');
  RN.Animated = Object.assign({}, RN.Animated, {
    Value: jest.fn(function () {
      return {
        interpolate: jest.fn(),
        addListener: jest.fn(),
        removeListener: jest.fn(),
        setValue: jest.fn()
      };
    }),
    timing: jest.fn(function () {
      return {
        start: jest.fn(function (callback) {
          return callback == null ? void 0 : callback({
            finished: true
          });
        })
      };
    })
  });
  return RN;
});
var _reactNative = require("react-native");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
_reactNative.NativeModules.SettingsManager = _reactNative.NativeModules.SettingsManager || {
  settings: {
    AppleLocale: 'en_US'
  }
};
if (typeof setImmediate === 'undefined') {
  global.setImmediate = function (fn) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return setTimeout.apply(void 0, [fn, 0].concat(args));
  };
}
if (typeof clearImmediate === 'undefined') {
  global.clearImmediate = function (id) {
    return clearTimeout(id);
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJnZXQiLCJqZXN0IiwiZm4iLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlcXVpcmUiLCJ1c2VGb250cyIsImlzTG9hZGVkIiwiaW1wYWN0QXN5bmMiLCJOYXRpdmVNb2R1bGVzUHJveHkiLCJFdmVudEVtaXR0ZXIiLCJyZXF1aXJlTmF0aXZlVmlld01hbmFnZXIiLCJSZWFuaW1hdGVkIiwiZGVmYXVsdCIsImNhbGwiLCJSTiIsInJlcXVpcmVBY3R1YWwiLCJBbmltYXRlZCIsIk9iamVjdCIsImFzc2lnbiIsIlZhbHVlIiwiaW50ZXJwb2xhdGUiLCJhZGRMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIiwic2V0VmFsdWUiLCJ0aW1pbmciLCJzdGFydCIsImNhbGxiYWNrIiwiZmluaXNoZWQiLCJfcmVhY3ROYXRpdmUiLCJfcmVxdWlyZSIsIk5hdGl2ZU1vZHVsZXMiLCJTZXR0aW5nc01hbmFnZXIiLCJzZXR0aW5ncyIsIkFwcGxlTG9jYWxlIiwic2V0SW1tZWRpYXRlIiwiZ2xvYmFsIiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJzZXRUaW1lb3V0IiwiYXBwbHkiLCJjb25jYXQiLCJjbGVhckltbWVkaWF0ZSIsImlkIiwiY2xlYXJUaW1lb3V0Il0sInNvdXJjZXMiOlsiamVzdC5zZXR1cC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOYXRpdmVNb2R1bGVzIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuLy8gMS4gTW9ja3MgZGUgYmFzZSBSZWFjdCBOYXRpdmVcbmplc3QubW9jaygncmVhY3QtbmF0aXZlL0xpYnJhcmllcy9TZXR0aW5ncy9TZXR0aW5ncycsICgpID0+ICh7XG4gIGdldDogamVzdC5mbigoKSA9PiAnbGlnaHQnKSxcbiAgYWRkRXZlbnRMaXN0ZW5lcjogamVzdC5mbigpLFxuICByZW1vdmVFdmVudExpc3RlbmVyOiBqZXN0LmZuKCksXG59KSk7XG5cbk5hdGl2ZU1vZHVsZXMuU2V0dGluZ3NNYW5hZ2VyID0gTmF0aXZlTW9kdWxlcy5TZXR0aW5nc01hbmFnZXIgfHwge1xuICBzZXR0aW5nczogeyBBcHBsZUxvY2FsZTogJ2VuX1VTJyB9LFxufTtcblxuLy8gMi4gTW9ja3MgZGVzIGxpYnJhaXJpZXMgdGllcmNlc1xuamVzdC5tb2NrKCdAcmVhY3QtbmF0aXZlLWFzeW5jLXN0b3JhZ2UvYXN5bmMtc3RvcmFnZScsICgpID0+XG4gIHJlcXVpcmUoJ0ByZWFjdC1uYXRpdmUtYXN5bmMtc3RvcmFnZS9hc3luYy1zdG9yYWdlL2plc3QvYXN5bmMtc3RvcmFnZS1tb2NrJylcbik7XG5cbmplc3QubW9jaygnZXhwby1mb250JywgKCkgPT4gKHtcbiAgdXNlRm9udHM6ICgpID0+IFt0cnVlXSxcbiAgaXNMb2FkZWQ6ICgpID0+IHRydWUsXG59KSk7XG5cbmplc3QubW9jaygnZXhwby1oYXB0aWNzJywgKCkgPT4gKHtcbiAgaW1wYWN0QXN5bmM6IGplc3QuZm4oKSxcbn0pKTtcblxuamVzdC5tb2NrKCdleHBvLW1vZHVsZXMtY29yZScsICgpID0+ICh7XG4gIE5hdGl2ZU1vZHVsZXNQcm94eToge30sXG4gIEV2ZW50RW1pdHRlcjogamVzdC5mbigpLFxuICByZXF1aXJlTmF0aXZlVmlld01hbmFnZXI6IGplc3QuZm4oKCkgPT4gKHt9KSksXG59KSk7XG5cbi8vIDMuIE1vY2tzIHNww6ljaWZpcXVlc1xuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUtcmVhbmltYXRlZCcsICgpID0+IHtcbiAgY29uc3QgUmVhbmltYXRlZCA9IHJlcXVpcmUoJ3JlYWN0LW5hdGl2ZS1yZWFuaW1hdGVkL21vY2snKTtcbiAgUmVhbmltYXRlZC5kZWZhdWx0LmNhbGwgPSAoKSA9PiB7fTtcbiAgcmV0dXJuIFJlYW5pbWF0ZWQ7XG59KTtcblxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUnLCAoKSA9PiB7XG4gIGNvbnN0IFJOID0gamVzdC5yZXF1aXJlQWN0dWFsKCdyZWFjdC1uYXRpdmUnKTtcbiAgXG4gIFJOLkFuaW1hdGVkID0ge1xuICAgIC4uLlJOLkFuaW1hdGVkLFxuICAgIFZhbHVlOiBqZXN0LmZuKCgpID0+ICh7XG4gICAgICBpbnRlcnBvbGF0ZTogamVzdC5mbigpLFxuICAgICAgYWRkTGlzdGVuZXI6IGplc3QuZm4oKSxcbiAgICAgIHJlbW92ZUxpc3RlbmVyOiBqZXN0LmZuKCksXG4gICAgICBzZXRWYWx1ZTogamVzdC5mbigpLFxuICAgIH0pKSxcbiAgICB0aW1pbmc6IGplc3QuZm4oKCkgPT4gKHtcbiAgICAgIHN0YXJ0OiBqZXN0LmZuKGNhbGxiYWNrID0+IGNhbGxiYWNrPy4oeyBmaW5pc2hlZDogdHJ1ZSB9KSksXG4gICAgfSkpLFxuICB9O1xuXG4gIHJldHVybiBSTjtcbn0pO1xuXG4vLyA0LiBQb2x5ZmlsbHNcbmlmICh0eXBlb2Ygc2V0SW1tZWRpYXRlID09PSAndW5kZWZpbmVkJykge1xuICBnbG9iYWwuc2V0SW1tZWRpYXRlID0gKGZuLCAuLi5hcmdzKSA9PiBzZXRUaW1lb3V0KGZuLCAwLCAuLi5hcmdzKTtcbn1cbmlmICh0eXBlb2YgY2xlYXJJbW1lZGlhdGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIGdsb2JhbC5jbGVhckltbWVkaWF0ZSA9IChpZCkgPT4gY2xlYXJUaW1lb3V0KGlkKTtcbn0iXSwibWFwcGluZ3MiOiJBQUdBQSxXQUFBLEdBQUtDLElBQUksQ0FBQywwQ0FBMEMsRUFBRTtFQUFBLE9BQU87SUFDM0RDLEdBQUcsRUFBRUMsSUFBSSxDQUFDQyxFQUFFLENBQUM7TUFBQSxPQUFNLE9BQU87SUFBQSxFQUFDO0lBQzNCQyxnQkFBZ0IsRUFBRUYsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztJQUMzQkUsbUJBQW1CLEVBQUVILElBQUksQ0FBQ0MsRUFBRSxDQUFDO0VBQy9CLENBQUM7QUFBQSxDQUFDLENBQUM7QUFPSEosV0FBQSxHQUFLQyxJQUFJLENBQUMsMkNBQTJDLEVBQUU7RUFBQSxPQUNyRE0sT0FBTyxD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