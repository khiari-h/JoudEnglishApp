{"version":3,"names":["_reactNative","require","_react","_vectorIcons","_HeroCard","_interopRequireDefault","_ContentSection","_style","_jsxRuntime","ReadingQuestionCard","_ref","question","questionIndex","selectedAnswer","onSelectAnswer","showFeedback","fadeAnim","slideAnim","_ref$levelColor","levelColor","styles","createStyles","getOptionState","optionIndex","correctAnswer","handleOptionPressCallback","useCallback","jsxs","Animated","View","style","container","opacity","transform","translateY","children","jsx","questionHeader","default","content","fontSize","showUnderline","backgroundColor","title","text","contentStyle","fontWeight","color","lineHeight","optionsContainer","Text","optionsTitle","options","map","option","index","optionState","TouchableOpacity","optionButton","borderColor","optionCorrect","optionIncorrect","onPress","disabled","activeOpacity","optionContent","optionLetterContainer","optionLetter","String","fromCharCode","optionText","optionCorrectText","optionIncorrectText","Ionicons","name","size","_default","exports"],"sources":["index.js"],"sourcesContent":["// ReadingQuestionCard/index.js - VERSION SIMPLE\r\nimport { View, Text, TouchableOpacity, Animated } from \"react-native\";\r\nimport { useCallback } from \"react\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport HeroCard from \"../../../../components/ui/HeroCard\";\r\nimport ContentSection from \"../../../../components/ui/ContentSection\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ❓ ReadingQuestionCard - Version Simple & Efficace\r\n * ❌ Confetti animations\r\n * ❌ Complex micro-interactions\r\n * ✅ Clean, functional, maintainable\r\n */\r\nconst ReadingQuestionCard = ({\r\n  question,\r\n  questionIndex,\r\n  selectedAnswer,\r\n  onSelectAnswer,\r\n  showFeedback,\r\n  fadeAnim,\r\n  slideAnim,\r\n  levelColor = \"#3b82f6\",\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n\r\n  if (!question) return null;\r\n\r\n  // Determine option state\r\n  const getOptionState = (optionIndex) => {\r\n    if (!showFeedback) {\r\n      return selectedAnswer === optionIndex ? 'selected' : 'default';\r\n    }\r\n    \r\n    if (optionIndex === question.correctAnswer) {\r\n      return 'correct';\r\n    }\r\n    \r\n    if (selectedAnswer === optionIndex && selectedAnswer !== question.correctAnswer) {\r\n      return 'incorrect';\r\n    }\r\n    \r\n    return 'default';\r\n  };\r\n\r\n  // Handler stable pour la sélection d'une option\r\n  const handleOptionPressCallback = useCallback(\r\n    (optionIndex) => () => {\r\n      if (!showFeedback) {\r\n        onSelectAnswer(optionIndex);\r\n      }\r\n    },\r\n    [onSelectAnswer, showFeedback]\r\n  );\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[\r\n        styles.container,\r\n        {\r\n          opacity: fadeAnim,\r\n          transform: [{ translateY: slideAnim }],\r\n        },\r\n      ]}\r\n    >\r\n      {/* Question Header */}\r\n      <View style={styles.questionHeader}>\r\n        <HeroCard \r\n          content={`Question ${questionIndex + 1}`}\r\n          fontSize={18}\r\n          levelColor={levelColor}\r\n          showUnderline={false}\r\n          backgroundColor=\"#F8F9FA\"\r\n        />\r\n      </View>\r\n      \r\n      {/* Question Text */}\r\n      <ContentSection\r\n        title=\"❓ Question\"\r\n        content={question.text}\r\n        levelColor={levelColor}\r\n        backgroundColor=\"white\"\r\n        contentStyle={{\r\n          fontSize: 18,\r\n          fontWeight: \"600\",\r\n          color: \"#1e293b\",\r\n          lineHeight: 26,\r\n        }}\r\n      />\r\n\r\n      {/* Options */}\r\n      <View style={styles.optionsContainer}>\r\n        <Text style={[styles.optionsTitle, { color: levelColor }]}>\r\n          💡 Choose your answer:\r\n        </Text>\r\n        \r\n        {question.options.map((option, index) => {\r\n          const optionState = getOptionState(index);\r\n          \r\n          return (\r\n            <TouchableOpacity\r\n              key={option}\r\n              style={[\r\n                styles.optionButton,\r\n                optionState === 'selected' && { \r\n                  borderColor: levelColor,\r\n                  backgroundColor: `${levelColor}08`,\r\n                },\r\n                optionState === 'correct' && styles.optionCorrect,\r\n                optionState === 'incorrect' && styles.optionIncorrect,\r\n              ]}\r\n              onPress={handleOptionPressCallback(index)}\r\n              disabled={showFeedback}\r\n              activeOpacity={0.8}\r\n            >\r\n              <View style={styles.optionContent}>\r\n                {/* Option Letter */}\r\n                <View \r\n                  style={[\r\n                    styles.optionLetterContainer,\r\n                    { backgroundColor: `${levelColor}15` },\r\n                    optionState === 'correct' && { backgroundColor: '#10b98120' },\r\n                    optionState === 'incorrect' && { backgroundColor: '#ef444420' },\r\n                  ]}\r\n                >\r\n                  <Text style={[\r\n                    styles.optionLetter, \r\n                    { color: levelColor },\r\n                    optionState === 'correct' && { color: '#10b981' },\r\n                    optionState === 'incorrect' && { color: '#ef4444' },\r\n                  ]}>\r\n                    {String.fromCharCode(65 + index)}\r\n                  </Text>\r\n                </View>\r\n                \r\n                {/* Option Text */}\r\n                <Text\r\n                  style={[\r\n                    styles.optionText,\r\n                    optionState === 'selected' && { \r\n                      color: levelColor, \r\n                      fontWeight: \"600\" \r\n                    },\r\n                    optionState === 'correct' && styles.optionCorrectText,\r\n                    optionState === 'incorrect' && styles.optionIncorrectText,\r\n                  ]}\r\n                >\r\n                  {option}\r\n                </Text>\r\n                \r\n                {/* Status Icon */}\r\n                {showFeedback && (\r\n                  <View>\r\n                    {optionState === 'correct' && (\r\n                      <Ionicons name=\"checkmark-circle\" size={24} color=\"#10b981\" />\r\n                    )}\r\n                    {optionState === 'incorrect' && (\r\n                      <Ionicons name=\"close-circle\" size={24} color=\"#ef4444\" />\r\n                    )}\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default ReadingQuestionCard;"],"mappings":"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","ignoreList":[]}