{"version":3,"names":["_react","require","_reactNative","_native","_expoRouter","_propTypes","_interopRequireDefault","_Container","_interopRequireWildcard","_GrammarHeader","_GrammarRuleSelector","_GrammarProgress","_GrammarRuleContent","_GrammarExerciceRenderer","_GrammarFeedback","_GrammarNavigation","_useGrammar2","_grammarDataHelper","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","GrammarExercise","_ref","route","navigation","useNavigation","_ref2","params","_ref2$level","level","styles","createStyles","_useState","useState","_useState2","_slicedToArray2","grammarData","setGrammarData","_useGrammar","useGrammar","ruleIndex","exerciseIndex","selectedOption","setSelectedOption","inputText","setInputText","showFeedback","isCorrect","attempts","completedExercises","loaded","showDetailedProgress","currentRule","currentExercise","canCheckAnswer","isFirstExercise","isLastExercise","changeRule","submitAnswer","nextExercise","previousExercise","retryExercise","toggleDetailedProgress","levelColor","useMemo","getLevelColor","useEffect","isMounted","load","_ref3","_asyncToGenerator2","process","env","JEST_WORKER_ID","data","getGrammarData","loadGrammarData","apply","arguments","handleBackPress","useCallback","router","push","pathname","handleCheckAnswer","handleNextExercise","goBack","handlePreviousExercise","handleRetryExercise","handleSkipExercise","handleRuleChange","index","handleRuleProgressPress","handleToggleProgressDetails","isLoading","length","jsx","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","ALL","backgroundColor","statusBarStyle","children","View","style","loadingContainer","ActivityIndicator","size","color","testID","jsxs","withScrollView","withPadding","scrollViewProps","showsVerticalScrollIndicator","contentContainerStyle","scrollContent","onBackPress","rules","selectedIndex","onSelectRule","expanded","onToggleExpand","onRulePress","rule","exercise","isVisible","explanation","correctAnswer","answer","onCheckAnswer","onPreviousExercise","onNextExercise","onRetryExercise","onSkipExercise","propTypes","PropTypes","shape","string","isRequired","_default","exports"],"sources":["index.js"],"sourcesContent":["// GrammarExercise/index.js - VERSION TOTALEMENT RECODÃ‰E\r\n\r\nimport { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport { View, ActivityIndicator } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { router } from \"expo-router\";\r\nimport PropTypes from 'prop-types'; // âœ… Import de PropTypes\r\n\r\n// Layout\r\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\r\n\r\n// Components\r\nimport GrammarHeader from \"./GrammarHeader\";\r\nimport GrammarRuleSelector from \"./GrammarRuleSelector\";\r\nimport GrammarProgress from \"./GrammarProgress\";\r\nimport GrammarRuleContent from \"./GrammarRuleContent\";\r\nimport GrammarExerciseRenderer from \"./GrammarExerciceRenderer\";\r\nimport GrammarFeedback from \"./GrammarFeedback\";\r\nimport GrammarNavigation from \"./GrammarNavigation\";\r\n\r\n// Hook & Utils\r\nimport useGrammar from \"./hooks/useGrammar\";\r\nimport { getGrammarData, loadGrammarData, getLevelColor } from \"../../../utils/grammar/grammarDataHelper\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ðŸŽ¯ GrammarExercise - VERSION TOTALEMENT RECODÃ‰E AVEC OPTIMISATIONS COMPLÃˆTES\r\n * âœ… MÃ©morisation complÃ¨te avec useMemo et useCallback\r\n * âœ… useEffect optimisÃ© pour saveActivity\r\n * âœ… Gestion des handlers mÃ©morisÃ©s\r\n * âœ… Performance maximale\r\n */\r\nconst GrammarExercise = ({ route }) => {\r\n  const navigation = useNavigation();\r\n  const { level = \"A1\" } = route?.params || {};\r\n  const styles = createStyles();\r\n\r\n  // âœ… CORRIGÃ‰ : DÃ©clarer grammarData AVANT d'appeler useGrammar\r\n  const [grammarData, setGrammarData] = useState([]);\r\n\r\n  // Hook unifiÃ©\r\n  const {\r\n    ruleIndex,\r\n    exerciseIndex,\r\n    selectedOption,\r\n    setSelectedOption,\r\n    inputText,\r\n    setInputText,\r\n    showFeedback,\r\n    isCorrect,\r\n    attempts,\r\n    completedExercises,\r\n    loaded,\r\n    showDetailedProgress,\r\n    currentRule,\r\n    currentExercise,\r\n    canCheckAnswer,\r\n    isFirstExercise,\r\n    isLastExercise,\r\n    changeRule,\r\n    submitAnswer,\r\n    nextExercise,\r\n    previousExercise,\r\n    retryExercise,\r\n    toggleDetailedProgress,\r\n  } = useGrammar(grammarData, level);\r\n\r\n  // âœ… MÃ‰MORISER les donnÃ©es principales\r\n  const levelColor = useMemo(() => getLevelColor(level), [level]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const load = async () => {\r\n      if (process.env.JEST_WORKER_ID) {\r\n        const data = getGrammarData(level);\r\n        if (isMounted) setGrammarData(data);\r\n        return;\r\n      }\r\n      const data = await loadGrammarData(level);\r\n      if (isMounted) setGrammarData(data);\r\n    };\r\n    load();\r\n    return () => { isMounted = false; };\r\n  }, [level]);\r\n\r\n  // âœ… TOUS LES HANDLERS MÃ‰MORISÃ‰S pour Ã©viter les re-renders\r\n  const handleBackPress = useCallback(() => {\r\n    router.push({\r\n      pathname: \"/tabs/exerciseSelection\",\r\n      params: { level }\r\n    });\r\n  }, [level]);\r\n\r\n  const handleCheckAnswer = useCallback(() => {\r\n    submitAnswer();\r\n  }, [submitAnswer]);\r\n\r\n  const handleNextExercise = useCallback(() => {\r\n    if (!nextExercise()) {\r\n      // All exercises completed\r\n      navigation.goBack();\r\n    }\r\n  }, [nextExercise, navigation]);\r\n\r\n  const handlePreviousExercise = useCallback(() => {\r\n    previousExercise();\r\n  }, [previousExercise]);\r\n\r\n  const handleRetryExercise = useCallback(() => {\r\n    retryExercise();\r\n  }, [retryExercise]);\r\n\r\n  const handleSkipExercise = useCallback(() => {\r\n    handleNextExercise();\r\n  }, [handleNextExercise]);\r\n\r\n  const handleRuleChange = useCallback((index) => {\r\n    changeRule(index);\r\n  }, [changeRule]);\r\n\r\n  const handleRuleProgressPress = useCallback((index) => {\r\n    changeRule(index);\r\n  }, [changeRule]);\r\n\r\n  const handleToggleProgressDetails = useCallback(() => {\r\n    toggleDetailedProgress();\r\n  }, [toggleDetailedProgress]);\r\n\r\n  // âœ… MÃ‰MORISER les conditions de rendu\r\n  const isLoading = useMemo(() => {\r\n    return !loaded || !grammarData.length;\r\n  }, [loaded, grammarData.length]);\r\n\r\n  // Loading state\r\n  if (isLoading) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color={levelColor} testID=\"activity-indicator\" />\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      safeArea\r\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n      withScrollView\r\n      backgroundColor=\"#f8fafc\"\r\n      statusBarStyle=\"dark-content\"\r\n      withPadding={false}\r\n      scrollViewProps={{\r\n        showsVerticalScrollIndicator: false,\r\n        contentContainerStyle: styles.scrollContent,\r\n      }}\r\n    >\r\n      {/* Header */}\r\n      <GrammarHeader\r\n        level={level}\r\n        onBackPress={handleBackPress}\r\n      />\r\n\r\n      {/* Rule Selector */}\r\n      <GrammarRuleSelector\r\n        rules={grammarData}\r\n        selectedIndex={ruleIndex}\r\n        onSelectRule={handleRuleChange}\r\n        levelColor={levelColor}\r\n      />\r\n\r\n      {/* Progress */}\r\n      <GrammarProgress\r\n        grammarData={grammarData}\r\n        completedExercises={completedExercises}\r\n        levelColor={levelColor}\r\n        expanded={showDetailedProgress}\r\n        onToggleExpand={handleToggleProgressDetails}\r\n        onRulePress={handleRuleProgressPress}\r\n      />\r\n\r\n      {/* Rule Content */}\r\n      <GrammarRuleContent \r\n        rule={currentRule} \r\n        levelColor={levelColor}\r\n      />\r\n\r\n      {/* Exercise Renderer */}\r\n      {currentExercise && (\r\n        <View key={`exercise-${exerciseIndex}-${attempts}`}>\r\n          <GrammarExerciseRenderer\r\n            exercise={currentExercise}\r\n            selectedOption={selectedOption}\r\n            setSelectedOption={setSelectedOption}\r\n            inputText={inputText}\r\n            setInputText={setInputText}\r\n            showFeedback={showFeedback}\r\n            isCorrect={isCorrect}\r\n            exerciseIndex={exerciseIndex}\r\n            attempts={attempts}\r\n          />\r\n        </View>\r\n      )}\r\n\r\n      {/* Feedback */}\r\n      <GrammarFeedback\r\n        isVisible={showFeedback}\r\n        isCorrect={isCorrect}\r\n        explanation={currentExercise?.explanation}\r\n        correctAnswer={currentExercise?.answer}\r\n        attempts={attempts}\r\n      />\r\n\r\n      {/* Navigation */}\r\n      <GrammarNavigation\r\n        testID=\"grammar-navigation\"\r\n        showFeedback={showFeedback}\r\n        isCorrect={isCorrect}\r\n        canCheckAnswer={canCheckAnswer}\r\n        onCheckAnswer={handleCheckAnswer}\r\n        onPreviousExercise={handlePreviousExercise}\r\n        onNextExercise={handleNextExercise}\r\n        onRetryExercise={handleRetryExercise}\r\n        onSkipExercise={handleSkipExercise}\r\n        isFirstExercise={isFirstExercise}\r\n        isLastExercise={isLastExercise}\r\n        attempts={attempts}\r\n        levelColor={levelColor}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\n// âœ… Ajout de la validation des props\r\nGrammarExercise.propTypes = {\r\n  route: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      level: PropTypes.string.isRequired,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default GrammarExercise;"],"mappings":"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","ignoreList":[]}