596d7738dd94be9f36cdbdba3b6e87cf
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.callGuardDEV = void 0;
exports.initializeUIRuntime = initializeUIRuntime;
exports.setupConsole = exports.setupCallGuard = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _errors = require("./errors");
var _PlatformChecker = require("./PlatformChecker");
var _threads = require("./threads");
var _mockedRequestAnimationFrame = require("./mockedRequestAnimationFrame");
var _logger = require("./logger");
var IS_JEST = (0, _PlatformChecker.isJest)();
var SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();
var IS_CHROME_DEBUGGER = (0, _PlatformChecker.isChromeDebugger)();
var _worklet_11058218612285_init_data = {
  code: "function overrideLogFunctionImplementation_initializersTs1(){const{replaceLoggerImplementation,runOnJS,logToLogBoxAndConsole}=this.__closure;replaceLoggerImplementation(function(data){'worklet';runOnJS(logToLogBoxAndConsole)(data);});}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\initializers.ts",
  sourceMap: "{\"version\":3,\"names\":[\"overrideLogFunctionImplementation_initializersTs1\",\"replaceLoggerImplementation\",\"runOnJS\",\"logToLogBoxAndConsole\",\"__closure\",\"data\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/initializers.ts\"],\"mappings\":\"AAsBA,SAAAA,kDAAA,QAAAC,2BAAA,CAAAC,OAAA,CAAAC,qBAAA,OAAAC,SAAA,CAAAH,2BAAA,UAAAI,IAAA,EACA,UAEAH,OAAS,CAAAC,qBAAA,EAAAE,IAAA,EAEP,G\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_11999747359509_init_data = {
  code: "function initializersTs2(data){const{runOnJS,logToLogBoxAndConsole}=this.__closure;runOnJS(logToLogBoxAndConsole)(data);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\initializers.ts",
  sourceMap: "{\"version\":3,\"names\":[\"initializersTs2\",\"data\",\"runOnJS\",\"logToLogBoxAndConsole\",\"__closure\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/initializers.ts\"],\"mappings\":\"AA2B+B,SAAAA,eAASA,CAAAC,IAAA,QAAAC,OAAA,CAAAC,qBAAA,OAAAC,SAAA,CAEpCF,OAAO,CAACC,qBAAqB,CAAC,CAACF,IAAI,CAAC,CACtC\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var overrideLogFunctionImplementation = function () {
  var _e = [new global.Error(), -4, -27];
  var overrideLogFunctionImplementation = function overrideLogFunctionImplementation() {
    (0, _logger.replaceLoggerImplementation)(function () {
      var _e = [new global.Error(), -3, -27];
      var initializersTs2 = function initializersTs2(data) {
        (0, _threads.runOnJS)(_logger.logToLogBoxAndConsole)(data);
      };
      initializersTs2.__closure = {
        runOnJS: _threads.runOnJS,
        logToLogBoxAndConsole: _logger.logToLogBoxAndConsole
      };
      initializersTs2.__workletHash = 11999747359509;
      initializersTs2.__initData = _worklet_11999747359509_init_data;
      initializersTs2.__stackDetails = _e;
      return initializersTs2;
    }());
  };
  overrideLogFunctionImplementation.__closure = {
    replaceLoggerImplementation: _logger.replaceLoggerImplementation,
    runOnJS: _threads.runOnJS,
    logToLogBoxAndConsole: _logger.logToLogBoxAndConsole
  };
  overrideLogFunctionImplementation.__workletHash = 11058218612285;
  overrideLogFunctionImplementation.__initData = _worklet_11058218612285_init_data;
  overrideLogFunctionImplementation.__stackDetails = _e;
  return overrideLogFunctionImplementation;
}();
(0, _logger.registerLoggerConfig)(_logger.DEFAULT_LOGGER_CONFIG);
overrideLogFunctionImplementation();
if (SHOULD_BE_USE_WEB) {
  global._WORKLET = false;
  global._log = console.log;
  global._getAnimationTimestamp = function () {
    return performance.now();
  };
} else {
  (0, _threads.executeOnUIRuntimeSync)(_errors.registerReanimatedError)();
  (0, _threads.executeOnUIRuntimeSync)(_logger.registerLoggerConfig)(_logger.DEFAULT_LOGGER_CONFIG);
  (0, _threads.executeOnUIRuntimeSync)(overrideLogFunctionImplementation)();
}
var _worklet_11064855674442_init_data = {
  code: "function callGuardDEV_initializersTs3(fn,...args){try{return fn(...args);}catch(e){if(global.__ErrorUtils){global.__ErrorUtils.reportFatalError(e);}else{throw e;}}}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\initializers.ts",
  sourceMap: "{\"version\":3,\"names\":[\"callGuardDEV_initializersTs3\",\"fn\",\"args\",\"e\",\"global\",\"__ErrorUtils\",\"reportFatalError\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/initializers.ts\"],\"mappings\":\"AAqDO,SAAAA,4BAGeA,CAAAC,EAAA,IAAAC,IAAA,EAEpB,GAAI,CACF,MAAO,CAAAD,EAAE,CAAC,GAAGC,IAAI,CAAC,CACpB,CAAE,MAAOC,CAAC,CAAE,CACV,GAAIC,MAAM,CAACC,YAAY,CAAE,CACvBD,MAAM,CAACC,YAAY,CAACC,gBAAgB,CAACH,CAAU,CAAC,CAClD,CAAC,IAAM,CACL,KAAM,CAAAA,CAAC,CACT,CACF,CACF\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var callGuardDEV = exports.callGuardDEV = function () {
  var _e = [new global.Error(), 1, -27];
  var callGuardDEV = function callGuardDEV(fn) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    try {
      return fn.apply(void 0, args);
    } catch (e) {
      if (global.__ErrorUtils) {
        global.__ErrorUtils.reportFatalError(e);
      } else {
        throw e;
      }
    }
  };
  callGuardDEV.__closure = {};
  callGuardDEV.__workletHash = 11064855674442;
  callGuardDEV.__initData = _worklet_11064855674442_init_data;
  callGuardDEV.__stackDetails = _e;
  return callGuardDEV;
}();
var _worklet_8689977933756_init_data = {
  code: "function setupCallGuard_initializersTs4(){const{callGuardDEV,runOnJS,reportFatalErrorOnJS}=this.__closure;global.__callGuardDEV=callGuardDEV;global.__ErrorUtils={reportFatalError:function(error){runOnJS(reportFatalErrorOnJS)({message:error.message,stack:error.stack});}};}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\initializers.ts",
  sourceMap: "{\"version\":3,\"names\":[\"setupCallGuard_initializersTs4\",\"callGuardDEV\",\"runOnJS\",\"reportFatalErrorOnJS\",\"__closure\",\"global\",\"__callGuardDEV\",\"__ErrorUtils\",\"reportFatalError\",\"error\",\"message\",\"stack\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/initializers.ts\"],\"mappings\":\"AAqEO,SAAAA,8BAA0BA,CAAA,QAAAC,YAAA,CAAAC,OAAA,CAAAC,oBAAA,OAAAC,SAAA,CAE/BC,MAAM,CAACC,cAAc,CAAGL,YAAY,CACpCI,MAAM,CAACE,YAAY,CAAG,CACpBC,gBAAgB,CAAE,QAAAA,CAACC,KAAY,CAAK,CAClCP,OAAO,CAACC,oBAAoB,CAAC,CAAC,CAC5BO,OAAO,CAAED,KAAK,CAACC,OAAO,CACtBC,KAAK,CAAEF,KAAK,CAACE,KACf,CAAC,CAAC,CACJ,CACF,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var setupCallGuard = exports.setupCallGuard = function () {
  var _e = [new global.Error(), -4, -27];
  var setupCallGuard = function setupCallGuard() {
    global.__callGuardDEV = callGuardDEV;
    global.__ErrorUtils = {
      reportFatalError: function reportFatalError(error) {
        (0, _threads.runOnJS)(_errors.reportFatalErrorOnJS)({
          message: error.message,
          stack: error.stack
        });
      }
    };
  };
  setupCallGuard.__closure = {
    callGuardDEV: callGuardDEV,
    runOnJS: _threads.runOnJS,
    reportFatalErrorOnJS: _errors.reportFatalErrorOnJS
  };
  setupCallGuard.__workletHash = 8689977933756;
  setupCallGuard.__initData = _worklet_8689977933756_init_data;
  setupCallGuard.__stackDetails = _e;
  return setupCallGuard;
}();
function createMemorySafeCapturableConsole() {
  var consoleCopy = Object.fromEntries(Object.entries(console).map(function (_ref) {
    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
      methodName = _ref2[0],
      method = _ref2[1];
    var methodWrapper = function methodWrapper() {
      return method.apply(void 0, arguments);
    };
    if (method.name) {
      Object.defineProperty(methodWrapper, 'name', {
        value: method.name,
        writable: false
      });
    }
    return [methodName, methodWrapper];
  }));
  return consoleCopy;
}
var capturableConsole = createMemorySafeCapturableConsole();
var _worklet_5303065199952_init_data = {
  code: "function setupConsole_initializersTs5(){const{IS_CHROME_DEBUGGER,runOnJS,capturableConsole}=this.__closure;if(!IS_CHROME_DEBUGGER){global.console={assert:runOnJS(capturableConsole.assert),debug:runOnJS(capturableConsole.debug),log:runOnJS(capturableConsole.log),warn:runOnJS(capturableConsole.warn),error:runOnJS(capturableConsole.error),info:runOnJS(capturableConsole.info)};}}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\initializers.ts",
  sourceMap: "{\"version\":3,\"names\":[\"setupConsole_initializersTs5\",\"IS_CHROME_DEBUGGER\",\"runOnJS\",\"capturableConsole\",\"__closure\",\"global\",\"console\",\"assert\",\"debug\",\"log\",\"warn\",\"error\",\"info\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/initializers.ts\"],\"mappings\":\"AA6HO,SAAAA,4BAAwBA,CAAA,QAAAC,kBAAA,CAAAC,OAAA,CAAAC,iBAAA,OAAAC,SAAA,CAE7B,GAAI,CAACH,kBAAkB,CAAE,CAEvBI,MAAM,CAACC,OAAO,CAAG,CAEfC,MAAM,CAAEL,OAAO,CAACC,iBAAiB,CAACI,MAAM,CAAC,CACzCC,KAAK,CAAEN,OAAO,CAACC,iBAAiB,CAACK,KAAK,CAAC,CACvCC,GAAG,CAAEP,OAAO,CAACC,iBAAiB,CAACM,GAAG,CAAC,CACnCC,IAAI,CAAER,OAAO,CAACC,iBAAiB,CAACO,IAAI,CAAC,CACrCC,KAAK,CAAET,OAAO,CAACC,iBAAiB,CAACQ,KAAK,CAAC,CACvCC,IAAI,CAAEV,OAAO,CAACC,iBAAiB,CAACS,IAAI,CAEtC,CAAC,CACH,CACF\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var setupConsole = exports.setupConsole = function () {
  var _e = [new global.Error(), -4, -27];
  var setupConsole = function setupConsole() {
    if (!IS_CHROME_DEBUGGER) {
      global.console = {
        assert: (0, _threads.runOnJS)(capturableConsole.assert),
        debug: (0, _threads.runOnJS)(capturableConsole.debug),
        log: (0, _threads.runOnJS)(capturableConsole.log),
        warn: (0, _threads.runOnJS)(capturableConsole.warn),
        error: (0, _threads.runOnJS)(capturableConsole.error),
        info: (0, _threads.runOnJS)(capturableConsole.info)
      };
    }
  };
  setupConsole.__closure = {
    IS_CHROME_DEBUGGER: IS_CHROME_DEBUGGER,
    runOnJS: _threads.runOnJS,
    capturableConsole: capturableConsole
  };
  setupConsole.__workletHash = 5303065199952;
  setupConsole.__initData = _worklet_5303065199952_init_data;
  setupConsole.__stackDetails = _e;
  return setupConsole;
}();
var _worklet_3255663687300_init_data = {
  code: "function setupRequestAnimationFrame_initializersTs6(){const{callMicrotasks}=this.__closure;const nativeRequestAnimationFrame=global.requestAnimationFrame;let animationFrameCallbacks=[];let flushRequested=false;global.__flushAnimationFrame=function(frameTimestamp){const currentCallbacks=animationFrameCallbacks;animationFrameCallbacks=[];currentCallbacks.forEach(function(f){return f(frameTimestamp);});callMicrotasks();};global.requestAnimationFrame=function(callback){animationFrameCallbacks.push(callback);if(!flushRequested){flushRequested=true;nativeRequestAnimationFrame(function(timestamp){flushRequested=false;global.__frameTimestamp=timestamp;global.__flushAnimationFrame(timestamp);global.__frameTimestamp=undefined;});}return-1;};}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\initializers.ts",
  sourceMap: "{\"version\":3,\"names\":[\"setupRequestAnimationFrame_initializersTs6\",\"callMicrotasks\",\"__closure\",\"nativeRequestAnimationFrame\",\"global\",\"requestAnimationFrame\",\"animationFrameCallbacks\",\"flushRequested\",\"__flushAnimationFrame\",\"frameTimestamp\",\"currentCallbacks\",\"forEach\",\"f\",\"callback\",\"push\",\"timestamp\",\"__frameTimestamp\",\"undefined\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/initializers.ts\"],\"mappings\":\"AA8IA,SAAAA,0CAAsCA,CAAA,QAAAC,cAAA,OAAAC,SAAA,CAKpC,KAAM,CAAAC,2BAA2B,CAAGC,MAAM,CAACC,qBAAqB,CAEhE,GAAI,CAAAC,uBAA2D,CAAG,EAAE,CACpE,GAAI,CAAAC,cAAc,CAAG,KAAK,CAE1BH,MAAM,CAACI,qBAAqB,CAAG,SAACC,cAAsB,CAAK,CACzD,KAAM,CAAAC,gBAAgB,CAAGJ,uBAAuB,CAChDA,uBAAuB,CAAG,EAAE,CAC5BI,gBAAgB,CAACC,OAAO,CAAE,SAAAC,CAAC,QAAK,CAAAA,CAAC,CAACH,cAAc,CAAC,GAAC,CAClDR,cAAc,CAAC,CAAC,CAClB,CAAC,CAEDG,MAAM,CAACC,qBAAqB,CAAG,SAC7BQ,QAAqC,CAC1B,CACXP,uBAAuB,CAACQ,IAAI,CAACD,QAAQ,CAAC,CACtC,GAAI,CAACN,cAAc,CAAE,CACnBA,cAAc,CAAG,IAAI,CACrBJ,2BAA2B,CAAE,SAAAY,SAAS,CAAK,CACzCR,cAAc,CAAG,KAAK,CACtBH,MAAM,CAACY,gBAAgB,CAAGD,SAAS,CACnCX,MAAM,CAACI,qBAAqB,CAACO,SAAS,CAAC,CACvCX,MAAM,CAACY,gBAAgB,CAAGC,SAAS,CACrC,CAAC,CAAC,CACJ,CAKA,MAAO,CAAC,CAAC,CACX,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var setupRequestAnimationFrame = function () {
  var _e = [new global.Error(), -2, -27];
  var setupRequestAnimationFrame = function setupRequestAnimationFrame() {
    var nativeRequestAnimationFrame = global.requestAnimationFrame;
    var animationFrameCallbacks = [];
    var flushRequested = false;
    global.__flushAnimationFrame = function (frameTimestamp) {
      var currentCallbacks = animationFrameCallbacks;
      animationFrameCallbacks = [];
      currentCallbacks.forEach(function (f) {
        return f(frameTimestamp);
      });
      (0, _threads.callMicrotasks)();
    };
    global.requestAnimationFrame = function (callback) {
      animationFrameCallbacks.push(callback);
      if (!flushRequested) {
        flushRequested = true;
        nativeRequestAnimationFrame(function (timestamp) {
          flushRequested = false;
          global.__frameTimestamp = timestamp;
          global.__flushAnimationFrame(timestamp);
          global.__frameTimestamp = undefined;
        });
      }
      return -1;
    };
  };
  setupRequestAnimationFrame.__closure = {
    callMicrotasks: _threads.callMicrotasks
  };
  setupRequestAnimationFrame.__workletHash = 3255663687300;
  setupRequestAnimationFrame.__initData = _worklet_3255663687300_init_data;
  setupRequestAnimationFrame.__stackDetails = _e;
  return setupRequestAnimationFrame;
}();
var _worklet_14702258885038_init_data = {
  code: "function initializersTs7(){const{setupCallGuard,setupConsole,SHOULD_BE_USE_WEB,setupMicrotasks,setupRequestAnimationFrame}=this.__closure;setupCallGuard();setupConsole();if(!SHOULD_BE_USE_WEB){setupMicrotasks();setupRequestAnimationFrame();}}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\initializers.ts",
  sourceMap: "{\"version\":3,\"names\":[\"initializersTs7\",\"setupCallGuard\",\"setupConsole\",\"SHOULD_BE_USE_WEB\",\"setupMicrotasks\",\"setupRequestAnimationFrame\",\"__closure\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/initializers.ts\"],\"mappings\":\"AA+LqB,SAAAA,eAAMA,CAAA,QAAAC,cAAA,CAAAC,YAAA,CAAAC,iBAAA,CAAAC,eAAA,CAAAC,0BAAA,OAAAC,SAAA,CAEvBL,cAAc,CAAC,CAAC,CAChBC,YAAY,CAAC,CAAC,CACd,GAAI,CAACC,iBAAiB,CAAE,CACtBC,eAAe,CAAC,CAAC,CACjBC,0BAA0B,CAAC,CAAC,CAC9B,CACF\",\"ignoreList\":[]}",
  version: "3.16.7"
};
function initializeUIRuntime() {
  if (IS_JEST) {
    globalThis.requestAnimationFrame = _mockedRequestAnimationFrame.mockedRequestAnimationFrame;
  }
  (0, _threads.runOnUIImmediately)(function () {
    var _e = [new global.Error(), -6, -27];
    var initializersTs7 = function initializersTs7() {
      setupCallGuard();
      setupConsole();
      if (!SHOULD_BE_USE_WEB) {
        (0, _threads.setupMicrotasks)();
        setupRequestAnimationFrame();
      }
    };
    initializersTs7.__closure = {
      setupCallGuard: setupCallGuard,
      setupConsole: setupConsole,
      SHOULD_BE_USE_WEB: SHOULD_BE_USE_WEB,
      setupMicrotasks: _threads.setupMicrotasks,
      setupRequestAnimationFrame: setupRequestAnimationFrame
    };
    initializersTs7.__workletHash = 14702258885038;
    initializersTs7.__initData = _worklet_14702258885038_init_data;
    initializersTs7.__stackDetails = _e;
    return initializersTs7;
  }())();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,