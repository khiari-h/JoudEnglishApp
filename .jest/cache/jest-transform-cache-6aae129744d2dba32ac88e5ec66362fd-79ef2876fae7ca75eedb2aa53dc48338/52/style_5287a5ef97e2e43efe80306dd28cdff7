685b8cde2f1bc331f495853724b8c633
function cov_1l2y5ylsvl() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionWordSection\\style.js";
  var hash = "d3a89a857292b7cf13ef2d86959b0df86cc2619d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionWordSection\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 70,
          column: 4
        }
      },
      "1": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 70,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 22
          }
        },
        loc: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 70,
            column: 4
          }
        },
        line: 10
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d3a89a857292b7cf13ef2d86959b0df86cc2619d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1l2y5ylsvl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1l2y5ylsvl();
import { StyleSheet, Platform } from "react-native";
cov_1l2y5ylsvl().s[0]++;
var createStyles = function createStyles() {
  cov_1l2y5ylsvl().f[0]++;
  cov_1l2y5ylsvl().s[1]++;
  return StyleSheet.create({
    container: {
      flex: 1,
      paddingBottom: 20
    },
    counterSection: {
      marginHorizontal: 16,
      marginBottom: 16,
      borderRadius: 20,
      overflow: 'hidden'
    },
    counterGradient: {
      paddingVertical: 16,
      paddingHorizontal: 24,
      alignItems: 'center',
      justifyContent: 'center'
    },
    counterBadge: Object.assign({
      backgroundColor: 'white',
      paddingHorizontal: 20,
      paddingVertical: 10,
      borderRadius: 16,
      borderWidth: 1
    }, Platform.select({
      ios: {
        shadowColor: '#000',
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowOpacity: 0.08,
        shadowRadius: 8
      },
      android: {
        elevation: 2
      }
    })),
    counterText: {
      fontSize: 18,
      fontWeight: '800',
      letterSpacing: 0.5
    },
    errorContainer: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      padding: 20
    },
    errorText: {
      fontSize: 16,
      color: '#ef4444',
      textAlign: 'center',
      fontWeight: '500'
    }
  });
};
export default createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHlsZVNoZWV0IiwiUGxhdGZvcm0iLCJjb3ZfMWwyeTV5bHN2bCIsInMiLCJjcmVhdGVTdHlsZXMiLCJmIiwiY3JlYXRlIiwiY29udGFpbmVyIiwiZmxleCIsInBhZGRpbmdCb3R0b20iLCJjb3VudGVyU2VjdGlvbiIsIm1hcmdpbkhvcml6b250YWwiLCJtYXJnaW5Cb3R0b20iLCJib3JkZXJSYWRpdXMiLCJvdmVyZmxvdyIsImNvdW50ZXJHcmFkaWVudCIsInBhZGRpbmdWZXJ0aWNhbCIsInBhZGRpbmdIb3Jpem9udGFsIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiY291bnRlckJhZGdlIiwiT2JqZWN0IiwiYXNzaWduIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyV2lkdGgiLCJzZWxlY3QiLCJpb3MiLCJzaGFkb3dDb2xvciIsInNoYWRvd09mZnNldCIsIndpZHRoIiwiaGVpZ2h0Iiwic2hhZG93T3BhY2l0eSIsInNoYWRvd1JhZGl1cyIsImFuZHJvaWQiLCJlbGV2YXRpb24iLCJjb3VudGVyVGV4dCIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImxldHRlclNwYWNpbmciLCJlcnJvckNvbnRhaW5lciIsInBhZGRpbmciLCJlcnJvclRleHQiLCJjb2xvciIsInRleHRBbGlnbiJdLCJzb3VyY2VzIjpbInN0eWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEVycm9yQ29ycmVjdGlvbldvcmRTZWN0aW9uL3N0eWxlLmpzIC0gR2FyZGUgc3R5bGVzIGNvbXB0ZXVyXHJcblxyXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBQbGF0Zm9ybSB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcclxuXHJcbi8qKlxyXG4gKiDimqEgU3R5bGVzIHBvdXIgRXJyb3JDb3JyZWN0aW9uV29yZFNlY3Rpb25cclxuICogR2FyZGUgbGVzIHN0eWxlcyBkdSBjb21wdGV1ciwgbGUgcmVzdGUgZXN0IGRhbnMgbGVzIG1vZGVzIHJlZmFjdG9yaXPDqXNcclxuICovXHJcbmNvbnN0IGNyZWF0ZVN0eWxlcyA9ICgpID0+XHJcbiAgU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBDT05UQUlORVIgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgY29udGFpbmVyOiB7XHJcbiAgICAgIGZsZXg6IDEsXHJcbiAgICAgIHBhZGRpbmdCb3R0b206IDIwLFxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBDT01QVEVVUiBTRUNUSU9OID09PT09PT09PT09PT09PT09PT1cclxuICAgIGNvdW50ZXJTZWN0aW9uOiB7XHJcbiAgICAgIG1hcmdpbkhvcml6b250YWw6IDE2LFxyXG4gICAgICBtYXJnaW5Cb3R0b206IDE2LFxyXG4gICAgICBib3JkZXJSYWRpdXM6IDIwLFxyXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXHJcbiAgICB9LFxyXG4gICAgY291bnRlckdyYWRpZW50OiB7XHJcbiAgICAgIHBhZGRpbmdWZXJ0aWNhbDogMTYsXHJcbiAgICAgIHBhZGRpbmdIb3Jpem9udGFsOiAyNCxcclxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcclxuICAgIH0sXHJcbiAgICBcclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gQkFER0UgQ09NUFRFVVIgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgY291bnRlckJhZGdlOiB7XHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcclxuICAgICAgcGFkZGluZ0hvcml6b250YWw6IDIwLFxyXG4gICAgICBwYWRkaW5nVmVydGljYWw6IDEwLFxyXG4gICAgICBib3JkZXJSYWRpdXM6IDE2LFxyXG4gICAgICBib3JkZXJXaWR0aDogMSxcclxuICAgICAgLy8gT21icmUgc3VidGlsZVxyXG4gICAgICAuLi5QbGF0Zm9ybS5zZWxlY3Qoe1xyXG4gICAgICAgIGlvczoge1xyXG4gICAgICAgICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgICAgICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiAyIH0sXHJcbiAgICAgICAgICBzaGFkb3dPcGFjaXR5OiAwLjA4LFxyXG4gICAgICAgICAgc2hhZG93UmFkaXVzOiA4LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYW5kcm9pZDoge1xyXG4gICAgICAgICAgZWxldmF0aW9uOiAyLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0pLFxyXG4gICAgfSxcclxuICAgIGNvdW50ZXJUZXh0OiB7XHJcbiAgICAgIGZvbnRTaXplOiAxOCxcclxuICAgICAgZm9udFdlaWdodDogJzgwMCcsXHJcbiAgICAgIGxldHRlclNwYWNpbmc6IDAuNSxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBFUlJPUiBTVEFURSA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBlcnJvckNvbnRhaW5lcjoge1xyXG4gICAgICBmbGV4OiAxLFxyXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXHJcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICBwYWRkaW5nOiAyMCxcclxuICAgIH0sXHJcbiAgICBlcnJvclRleHQ6IHtcclxuICAgICAgZm9udFNpemU6IDE2LFxyXG4gICAgICBjb2xvcjogJyNlZjQ0NDQnLFxyXG4gICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxyXG4gICAgICBmb250V2VpZ2h0OiAnNTAwJyxcclxuICAgIH0sXHJcbiAgfSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVTdHlsZXM7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLFNBQVNBLFVBQVUsRUFBRUMsUUFBUSxRQUFRLGNBQWM7QUFBQ0MsY0FBQSxHQUFBQyxDQUFBO0FBTXBELElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFZQSxDQUFBLEVBQ2hCO0VBQUFGLGNBQUEsR0FBQUcsQ0FBQTtFQUFBSCxjQUFBLEdBQUFDLENBQUE7RUFBQSxPQUFBSCxVQUFVLENBQUNNLE1BQU0sQ0FBQztJQUVoQkMsU0FBUyxFQUFFO01BQ1RDLElBQUksRUFBRSxDQUFDO01BQ1BDLGFBQWEsRUFBRTtJQUNqQixDQUFDO0lBR0RDLGNBQWMsRUFBRTtNQUNkQyxnQkFBZ0IsRUFBRSxFQUFFO01BQ3BCQyxZQUFZLEVBQUUsRUFBRTtNQUNoQkMsWUFBWSxFQUFFLEVBQUU7TUFDaEJDLFFBQVEsRUFBRTtJQUNaLENBQUM7SUFDREMsZUFBZSxFQUFFO01BQ2ZDLGVBQWUsRUFBRSxFQUFFO01BQ25CQyxpQkFBaUIsRUFBRSxFQUFFO01BQ3JCQyxVQUFVLEVBQUUsUUFBUTtNQUNwQkMsY0FBYyxFQUFFO0lBQ2xCLENBQUM7SUFHREMsWUFBWSxFQUFBQyxNQUFBLENBQUFDLE1BQUE7TUFDVkMsZUFBZSxFQUFFLE9BQU87TUFDeEJOLGlCQUFpQixFQUFFLEVBQUU7TUFDckJELGVBQWUsRUFBRSxFQUFFO01BQ25CSCxZQUFZLEVBQUUsRUFBRTtNQUNoQlcsV0FBVyxFQUFFO0lBQUMsR0FFWHZCLFFBQVEsQ0FBQ3dCLE1BQU0sQ0FBQztNQUNqQkMsR0FBRyxFQUFFO1FBQ0hDLFdBQVcsRUFBRSxNQUFNO1FBQ25CQyxZQUFZLEVBQUU7VUFBRUMsS0FBSyxFQUFFLENBQUM7VUFBRUMsTUFBTSxFQUFFO1FBQUUsQ0FBQztRQUNyQ0MsYUFBYSxFQUFFLElBQUk7UUFDbkJDLFlBQVksRUFBRTtNQUNoQixDQUFDO01BQ0RDLE9BQU8sRUFBRTtRQUNQQyxTQUFTLEVBQUU7TUFDYjtJQUNGLENBQUMsQ0FBQyxDQUNIO0lBQ0RDLFdBQVcsRUFBRTtNQUNYQyxRQUFRLEVBQUUsRUFBRTtNQUNaQyxVQUFVLEVBQUUsS0FBSztNQUNqQkMsYUFBYSxFQUFFO0lBQ2pCLENBQUM7SUFHREMsY0FBYyxFQUFFO01BQ2QvQixJQUFJLEVBQUUsQ0FBQztNQUNQVyxjQUFjLEVBQUUsUUFBUTtNQUN4QkQsVUFBVSxFQUFFLFFBQVE7TUFDcEJzQixPQUFPLEVBQUU7SUFDWCxDQUFDO0lBQ0RDLFNBQVMsRUFBRTtNQUNUTCxRQUFRLEVBQUUsRUFBRTtNQUNaTSxLQUFLLEVBQUUsU0FBUztNQUNoQkMsU0FBUyxFQUFFLFFBQVE7TUFDbkJOLFVBQVUsRUFBRTtJQUNkO0VBQ0YsQ0FBQyxDQUFDO0FBQUQsQ0FBQztBQUVKLGVBQWVqQyxZQUFZIiwiaWdub3JlTGlzdCI6W119