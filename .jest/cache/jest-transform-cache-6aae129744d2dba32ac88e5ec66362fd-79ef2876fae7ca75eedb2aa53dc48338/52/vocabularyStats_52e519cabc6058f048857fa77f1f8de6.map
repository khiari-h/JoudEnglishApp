{"version":3,"names":["calculateTotalWords","exports","exercises","arguments","length","undefined","cov_1k310t5ec","b","f","s","reduce","total","category","_category$words","words","calculateCompletedWordsCount","completedWords","Object","keys","count","key","_completedWords$key","calculateTotalProgress","totalWords","totalCompleted","Math","min","calculateCategoryProgress","map","index","_category$words2","_completedWords$index","totalInCategory","completedInCategory","progress","round","title"],"sources":["vocabularyStats.js"],"sourcesContent":["// utils/vocabularyStats.js\r\n\r\nexport const calculateTotalWords = (exercises = []) =>\r\n  exercises.reduce(\r\n    (total, category) => total + (category.words?.length || 0),\r\n    0\r\n  );\r\n\r\nexport const calculateCompletedWordsCount = (completedWords = {}) =>\r\n  Object.keys(completedWords).reduce(\r\n    (count, key) => count + (completedWords[key]?.length || 0),\r\n    0\r\n  );\r\n\r\nexport const calculateTotalProgress = (exercises = [], completedWords = {}) => {\r\n  const totalWords = calculateTotalWords(exercises);\r\n  const totalCompleted = calculateCompletedWordsCount(completedWords);\r\n  return totalWords > 0\r\n    ? Math.min(100, (totalCompleted / totalWords) * 100)\r\n    : 0;\r\n};\r\n\r\n// ✅ NOUVELLE FONCTION - Calcul progression par catégorie\r\nexport const calculateCategoryProgress = (exercises = [], completedWords = {}) => {\r\n  return exercises.map((category, index) => {\r\n    const totalInCategory = category.words?.length || 0;\r\n    const completedInCategory = completedWords[index]?.length || 0;\r\n    const progress = totalInCategory > 0 \r\n      ? Math.min(100, Math.round((completedInCategory / totalInCategory) * 100))\r\n      : 0;\r\n\r\n    return {\r\n      title: category.title || `Catégorie ${index + 1}`,\r\n      totalWords: totalInCategory,\r\n      completedWords: completedInCategory,\r\n      progress\r\n    };\r\n  });\r\n};\r\n"],"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","ignoreList":[]}