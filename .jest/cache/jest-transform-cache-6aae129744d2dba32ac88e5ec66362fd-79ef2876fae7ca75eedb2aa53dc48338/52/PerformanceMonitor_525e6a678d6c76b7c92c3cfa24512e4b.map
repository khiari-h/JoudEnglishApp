{"version":3,"names":["Object","defineProperty","exports","value","PerformanceMonitor","_react","_interopRequireWildcard","require","_reactNative","_hook","_createAnimatedComponent","_ConfigHelper","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","getOwnPropertyDescriptor","_worklet_7025330993767_init_data","code","location","sourceMap","version","createCircularDoublesBuffer","_e","global","Error","size","next","buffer","Float32Array","count","push","oldValue","oldCount","Math","min","front","notEmpty","current","index","back","__closure","__workletHash","__initData","__stackDetails","DEFAULT_BUFFER_SIZE","addWhitelistedNativeProps","text","AnimatedTextInput","createAnimatedComponent","TextInput","loopAnimationFrame","fn","lastTime","loop","requestAnimationFrame","time","_worklet_4328451430280_init_data","getFps","renderTimeInMs","_worklet_3765204747727_init_data","completeBufferRoutine","timestamp","_buffer$push","round","droppedTimestamp","measuredRangeDuration","_worklet_6153571000774_init_data","JsPerformance","_ref","smoothingFrames","jsFps","useSharedValue","totalRenderTime","circularBuffer","useRef","useEffect","_","currentFps","toFixed","animatedProps","useAnimatedProps","PerformanceMonitorTsx4","_jsFps$value","defaultValue","jsx","View","style","styles","container","children","editable","_worklet_6804949272378_init_data","_worklet_12791881627073_init_data","UiPerformance","_ref2","uiFps","useFrameCallback","PerformanceMonitorTsx5","_ref3","PerformanceMonitorTsx6","_uiFps$value","_ref4","_ref4$smoothingFrames","jsxs","monitor","StyleSheet","create","flexDirection","position","backgroundColor","zIndex","header","fontSize","color","paddingHorizontal","fontFamily","alignItems","justifyContent","flexWrap"],"sources":["PerformanceMonitor.tsx"],"sourcesContent":["'use strict';\n\nimport React, { useEffect, useRef } from 'react';\nimport { TextInput, StyleSheet, View } from 'react-native';\n\nimport type { FrameInfo } from '../frameCallback';\nimport { useSharedValue, useAnimatedProps, useFrameCallback } from '../hook';\nimport { createAnimatedComponent } from '../createAnimatedComponent';\nimport { addWhitelistedNativeProps } from '../ConfigHelper';\n\ntype CircularBuffer = ReturnType<typeof createCircularDoublesBuffer>;\nfunction createCircularDoublesBuffer(size: number) {\n  'worklet';\n\n  return {\n    next: 0 as number,\n    buffer: new Float32Array(size),\n    size,\n    count: 0 as number,\n\n    push(value: number): number | null {\n      const oldValue = this.buffer[this.next];\n      const oldCount = this.count;\n      this.buffer[this.next] = value;\n\n      this.next = (this.next + 1) % this.size;\n      this.count = Math.min(this.size, this.count + 1);\n      return oldCount === this.size ? oldValue : null;\n    },\n\n    front(): number | null {\n      const notEmpty = this.count > 0;\n      if (notEmpty) {\n        const current = this.next - 1;\n        const index = current < 0 ? this.size - 1 : current;\n        return this.buffer[index];\n      }\n      return null;\n    },\n\n    back(): number | null {\n      const notEmpty = this.count > 0;\n      return notEmpty ? this.buffer[this.next] : null;\n    },\n  };\n}\n\nconst DEFAULT_BUFFER_SIZE = 20;\naddWhitelistedNativeProps({ text: true });\nconst AnimatedTextInput = createAnimatedComponent(TextInput);\n\nfunction loopAnimationFrame(fn: (lastTime: number, time: number) => void) {\n  let lastTime = 0;\n\n  function loop() {\n    requestAnimationFrame((time) => {\n      if (lastTime > 0) {\n        fn(lastTime, time);\n      }\n      lastTime = time;\n      requestAnimationFrame(loop);\n    });\n  }\n\n  loop();\n}\n\nfunction getFps(renderTimeInMs: number): number {\n  'worklet';\n  return 1000 / renderTimeInMs;\n}\n\nfunction completeBufferRoutine(\n  buffer: CircularBuffer,\n  timestamp: number\n): number {\n  'worklet';\n  timestamp = Math.round(timestamp);\n\n  const droppedTimestamp = buffer.push(timestamp) ?? timestamp;\n\n  const measuredRangeDuration = timestamp - droppedTimestamp;\n\n  return getFps(measuredRangeDuration / buffer.count);\n}\n\nfunction JsPerformance({ smoothingFrames }: { smoothingFrames: number }) {\n  const jsFps = useSharedValue<string | null>(null);\n  const totalRenderTime = useSharedValue(0);\n  const circularBuffer = useRef<CircularBuffer>(\n    createCircularDoublesBuffer(smoothingFrames)\n  );\n\n  useEffect(() => {\n    loopAnimationFrame((_, timestamp) => {\n      timestamp = Math.round(timestamp);\n\n      const currentFps = completeBufferRoutine(\n        circularBuffer.current,\n        timestamp\n      );\n\n      // JS fps have to be measured every 2nd frame,\n      // thus 2x multiplication has to occur here\n      jsFps.value = (currentFps * 2).toFixed(0);\n    });\n  }, [jsFps, totalRenderTime]);\n\n  const animatedProps = useAnimatedProps(() => {\n    const text = 'JS: ' + (jsFps.value ?? 'N/A') + ' ';\n    return { text, defaultValue: text };\n  });\n\n  return (\n    <View style={styles.container}>\n      <AnimatedTextInput\n        style={styles.text}\n        animatedProps={animatedProps}\n        editable={false}\n      />\n    </View>\n  );\n}\n\nfunction UiPerformance({ smoothingFrames }: { smoothingFrames: number }) {\n  const uiFps = useSharedValue<string | null>(null);\n  const circularBuffer = useSharedValue<CircularBuffer | null>(null);\n\n  useFrameCallback(({ timestamp }: FrameInfo) => {\n    if (circularBuffer.value === null) {\n      circularBuffer.value = createCircularDoublesBuffer(smoothingFrames);\n    }\n\n    timestamp = Math.round(timestamp);\n\n    const currentFps = completeBufferRoutine(circularBuffer.value, timestamp);\n\n    uiFps.value = currentFps.toFixed(0);\n  });\n\n  const animatedProps = useAnimatedProps(() => {\n    const text = 'UI: ' + (uiFps.value ?? 'N/A') + ' ';\n    return { text, defaultValue: text };\n  });\n\n  return (\n    <View style={styles.container}>\n      <AnimatedTextInput\n        style={styles.text}\n        animatedProps={animatedProps}\n        editable={false}\n      />\n    </View>\n  );\n}\n\nexport type PerformanceMonitorProps = {\n  /**\n   * Sets amount of previous frames used for smoothing at highest expectedFps.\n   *\n   * Automatically scales down at lower frame rates.\n   *\n   * Affects jumpiness of the FPS measurements value.\n   */\n  smoothingFrames?: number;\n};\n\n/**\n * A component that lets you measure fps values on JS and UI threads on both the\n * Paper and Fabric architectures.\n *\n * @param smoothingFrames - Determines amount of saved frames which will be used\n *   for fps value smoothing.\n */\nexport function PerformanceMonitor({\n  smoothingFrames = DEFAULT_BUFFER_SIZE,\n}: PerformanceMonitorProps) {\n  return (\n    <View style={styles.monitor}>\n      <JsPerformance smoothingFrames={smoothingFrames} />\n      <UiPerformance smoothingFrames={smoothingFrames} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  monitor: {\n    flexDirection: 'row',\n    position: 'absolute',\n    backgroundColor: '#0006',\n    zIndex: 1000,\n  },\n  header: {\n    fontSize: 14,\n    color: '#ffff',\n    paddingHorizontal: 5,\n  },\n  text: {\n    fontSize: 13,\n    color: '#ffff',\n    fontFamily: 'monospace',\n    paddingHorizontal: 3,\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n});\n"],"mappings":"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","ignoreList":[]}