{"version":3,"names":["_expoConstants","_interopRequireWildcard","require","_expoModulesCore","_AssetUris","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ExpoUpdates","requireOptionalNativeModule","isRunningInExpoGo","Constants","appOwnership","AppOwnership","Expo","expoUpdatesIsInstalledAndEnabled","isEnabled","expoUpdatesIsUsingEmbeddedAssets","isUsingEmbeddedAssets","shouldUseUpdatesAssetResolution","IS_ENV_WITH_LOCAL_ASSETS","exports","getLocalAssets","_ExpoUpdates$localAss","localAssets","getManifest2","__unsafeNoWarnManifest2","manifestBaseUrl","experienceUrl","getManifestBaseUrl"],"sources":["../src/PlatformUtils.ts"],"sourcesContent":["import Constants, { AppOwnership } from 'expo-constants';\nimport { requireOptionalNativeModule } from 'expo-modules-core';\n// @ts-ignore -- optional interface, will gracefully degrade to `any` if not installed\nimport type { ExpoUpdatesModule } from 'expo-updates';\n\nimport { getManifestBaseUrl } from './AssetUris';\n\nconst ExpoUpdates = requireOptionalNativeModule<ExpoUpdatesModule>('ExpoUpdates');\n\nconst isRunningInExpoGo = Constants.appOwnership === AppOwnership.Expo;\n\n// expo-updates (and Expo Go expo-updates override) manages assets from updates and exposes\n// the ExpoUpdates.localAssets constant containing information about the assets.\nconst expoUpdatesIsInstalledAndEnabled = !!ExpoUpdates?.isEnabled;\nconst expoUpdatesIsUsingEmbeddedAssets = ExpoUpdates?.isUsingEmbeddedAssets;\n\n// if expo-updates is installed but we're running directly from the embedded bundle, we don't want\n// to override the AssetSourceResolver.\nconst shouldUseUpdatesAssetResolution =\n  expoUpdatesIsInstalledAndEnabled && !expoUpdatesIsUsingEmbeddedAssets;\n\n// Expo Go always uses the updates module for asset resolution (local assets) since it\n// overrides the expo-updates module.\nexport const IS_ENV_WITH_LOCAL_ASSETS = isRunningInExpoGo || shouldUseUpdatesAssetResolution;\n\n// Get the localAssets property from the ExpoUpdates native module so that we do\n// not need to include expo-updates as a dependency of expo-asset\nexport function getLocalAssets(): Record<string, string> {\n  return ExpoUpdates?.localAssets ?? {};\n}\n\nexport function getManifest2(): typeof Constants.__unsafeNoWarnManifest2 {\n  return Constants.__unsafeNoWarnManifest2;\n}\n\n// Compute manifest base URL if available\nexport const manifestBaseUrl = Constants.experienceUrl\n  ? getManifestBaseUrl(Constants.experienceUrl)\n  : null;\n"],"mappings":";;;;;;;AAAA,IAAAA,cAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,gBAAA,GAAAD,OAAA;AAIA,IAAAE,UAAA,GAAAF,OAAA;AAAiD,SAAAD,wBAAAI,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAN,uBAAA,YAAAA,wBAAAI,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAEjD,IAAMmB,WAAW,GAAG,IAAAC,4CAA2B,EAAoB,aAAa,CAAC;AAEjF,IAAMC,iBAAiB,GAAGC,sBAAS,CAACC,YAAY,KAAKC,2BAAY,CAACC,IAAI;AAItE,IAAMC,gCAAgC,GAAG,CAAC,EAACP,WAAW,YAAXA,WAAW,CAAEQ,SAAS;AACjE,IAAMC,gCAAgC,GAAGT,WAAW,oBAAXA,WAAW,CAAEU,qBAAqB;AAI3E,IAAMC,+BAA+B,GACnCJ,gCAAgC,IAAI,CAACE,gCAAgC;AAIhE,IAAMG,wBAAwB,GAAAC,OAAA,CAAAD,wBAAA,GAAGV,iBAAiB,IAAIS,+BAA+B;AAItF,SAAUG,cAAcA,CAAA;EAAA,IAAAC,qBAAA;EAC5B,QAAAA,qBAAA,GAAOf,WAAW,oBAAXA,WAAW,CAAEgB,WAAW,YAAAD,qBAAA,GAAI,EAAE;AACvC;AAEM,SAAUE,YAAYA,CAAA;EAC1B,OAAOd,sBAAS,CAACe,uBAAuB;AAC1C;AAGO,IAAMC,eAAe,GAAAN,OAAA,CAAAM,eAAA,GAAGhB,sBAAS,CAACiB,aAAa,GAClD,IAAAC,6BAAkB,EAAClB,sBAAS,CAACiB,aAAa,CAAC,GAC3C,IAAI","ignoreList":[]}