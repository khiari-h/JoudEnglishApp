e3d43581b605c0649ebdfd66737ea8ba
function cov_1xgws0dqgq() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationTypingIndicator\\index.js";
  var hash = "11c75d6d5a8f80026a59b505460ec9aa1e8e8f0e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationTypingIndicator\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 36
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "1": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 63
        }
      },
      "2": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 39,
          column: 24
        }
      },
      "3": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "4": {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 30,
          column: 16
        }
      },
      "5": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 21
        }
      },
      "6": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "7": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "8": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 64,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 36
          },
          end: {
            line: 10,
            column: 37
          }
        },
        loc: {
          start: {
            line: 10,
            column: 56
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 13
          }
        },
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 16,
            column: 28
          }
        },
        loc: {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 35,
            column: 12
          }
        },
        loc: {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 35
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "11c75d6d5a8f80026a59b505460ec9aa1e8e8f0e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1xgws0dqgq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xgws0dqgq();
import { useRef, useEffect } from 'react';
import { View, Animated } from 'react-native';
import styles from './style';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_1xgws0dqgq().s[0]++;
var ConversationTypingIndicator = function ConversationTypingIndicator(_ref) {
  var levelColor = _ref.levelColor;
  cov_1xgws0dqgq().f[0]++;
  var typingAnimation = (cov_1xgws0dqgq().s[1]++, useRef(new Animated.Value(0)).current);
  cov_1xgws0dqgq().s[2]++;
  useEffect(function () {
    cov_1xgws0dqgq().f[1]++;
    cov_1xgws0dqgq().s[3]++;
    var startAnimation = function startAnimation() {
      cov_1xgws0dqgq().f[2]++;
      cov_1xgws0dqgq().s[4]++;
      Animated.loop(Animated.sequence([Animated.timing(typingAnimation, {
        toValue: 1,
        duration: 500,
        useNativeDriver: true
      }), Animated.timing(typingAnimation, {
        toValue: 0,
        duration: 500,
        useNativeDriver: true
      })])).start();
    };
    cov_1xgws0dqgq().s[5]++;
    startAnimation();
    cov_1xgws0dqgq().s[6]++;
    return function () {
      cov_1xgws0dqgq().f[3]++;
      cov_1xgws0dqgq().s[7]++;
      typingAnimation.stopAnimation();
    };
  }, [typingAnimation]);
  cov_1xgws0dqgq().s[8]++;
  return _jsx(View, {
    style: [styles.messageBubble, styles.botBubble, {
      backgroundColor: `${levelColor}15`
    }],
    children: _jsxs(View, {
      style: styles.typingContainer,
      children: [_jsx(Animated.View, {
        style: [styles.typingDot, {
          opacity: typingAnimation
        }]
      }), _jsx(Animated.View, {
        style: [styles.typingDot, {
          opacity: typingAnimation,
          marginHorizontal: 4
        }]
      }), _jsx(Animated.View, {
        style: [styles.typingDot, {
          opacity: typingAnimation
        }]
      })]
    })
  });
};
export default ConversationTypingIndicator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VSZWYiLCJ1c2VFZmZlY3QiLCJWaWV3IiwiQW5pbWF0ZWQiLCJzdHlsZXMiLCJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiY292XzF4Z3dzMGRxZ3EiLCJzIiwiQ29udmVyc2F0aW9uVHlwaW5nSW5kaWNhdG9yIiwiX3JlZiIsImxldmVsQ29sb3IiLCJmIiwidHlwaW5nQW5pbWF0aW9uIiwiVmFsdWUiLCJjdXJyZW50Iiwic3RhcnRBbmltYXRpb24iLCJsb29wIiwic2VxdWVuY2UiLCJ0aW1pbmciLCJ0b1ZhbHVlIiwiZHVyYXRpb24iLCJ1c2VOYXRpdmVEcml2ZXIiLCJzdGFydCIsInN0b3BBbmltYXRpb24iLCJzdHlsZSIsIm1lc3NhZ2VCdWJibGUiLCJib3RCdWJibGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjaGlsZHJlbiIsInR5cGluZ0NvbnRhaW5lciIsInR5cGluZ0RvdCIsIm9wYWNpdHkiLCJtYXJnaW5Ib3Jpem9udGFsIl0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFZpZXcsIEFuaW1hdGVkIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlJztcclxuXHJcbi8qKlxyXG4gKiBDb21wb3NhbnQgcXVpIGFmZmljaGUgdW5lIGFuaW1hdGlvbiBpbmRpcXVhbnQgcXVlIGxlIGJvdCBlc3QgZW4gdHJhaW4gZGUgdGFwZXJcclxuICogXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbENvbG9yIC0gQ291bGV1ciBhc3NvY2nDqWUgYXUgbml2ZWF1IGNvdXJhbnRcclxuICovXHJcbmNvbnN0IENvbnZlcnNhdGlvblR5cGluZ0luZGljYXRvciA9ICh7IGxldmVsQ29sb3IgfSkgPT4ge1xyXG4gIC8vIEFuaW1hdGlvbiBwb3VyIGZhaXJlIHB1bHNlciBsZXMgcG9pbnRzXHJcbiAgY29uc3QgdHlwaW5nQW5pbWF0aW9uID0gdXNlUmVmKG5ldyBBbmltYXRlZC5WYWx1ZSgwKSkuY3VycmVudDtcclxuXHJcbiAgLy8gTGFuY2VyIGwnYW5pbWF0aW9uIGVuIGJvdWNsZVxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zdCBzdGFydEFuaW1hdGlvbiA9ICgpID0+IHtcclxuICAgICAgQW5pbWF0ZWQubG9vcChcclxuICAgICAgICBBbmltYXRlZC5zZXF1ZW5jZShbXHJcbiAgICAgICAgICBBbmltYXRlZC50aW1pbmcodHlwaW5nQW5pbWF0aW9uLCB7XHJcbiAgICAgICAgICAgIHRvVmFsdWU6IDEsXHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAsXHJcbiAgICAgICAgICAgIHVzZU5hdGl2ZURyaXZlcjogdHJ1ZSxcclxuICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgQW5pbWF0ZWQudGltaW5nKHR5cGluZ0FuaW1hdGlvbiwge1xyXG4gICAgICAgICAgICB0b1ZhbHVlOiAwLFxyXG4gICAgICAgICAgICBkdXJhdGlvbjogNTAwLFxyXG4gICAgICAgICAgICB1c2VOYXRpdmVEcml2ZXI6IHRydWUsXHJcbiAgICAgICAgICB9KSxcclxuICAgICAgICBdKVxyXG4gICAgICApLnN0YXJ0KCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHN0YXJ0QW5pbWF0aW9uKCk7XHJcblxyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgLy8gQXJyw6p0ZXIgbCdhbmltYXRpb24gcXVhbmQgbGUgY29tcG9zYW50IGVzdCBkw6ltb250w6lcclxuICAgICAgdHlwaW5nQW5pbWF0aW9uLnN0b3BBbmltYXRpb24oKTtcclxuICAgIH07XHJcbiAgfSwgW3R5cGluZ0FuaW1hdGlvbl0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXdcclxuICAgICAgc3R5bGU9e1tcclxuICAgICAgICBzdHlsZXMubWVzc2FnZUJ1YmJsZSxcclxuICAgICAgICBzdHlsZXMuYm90QnViYmxlLFxyXG4gICAgICAgIHsgYmFja2dyb3VuZENvbG9yOiBgJHtsZXZlbENvbG9yfTE1YCB9LFxyXG4gICAgICBdfVxyXG4gICAgPlxyXG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLnR5cGluZ0NvbnRhaW5lcn0+XHJcbiAgICAgICAgPEFuaW1hdGVkLlZpZXdcclxuICAgICAgICAgIHN0eWxlPXtbc3R5bGVzLnR5cGluZ0RvdCwgeyBvcGFjaXR5OiB0eXBpbmdBbmltYXRpb24gfV19XHJcbiAgICAgICAgLz5cclxuICAgICAgICA8QW5pbWF0ZWQuVmlld1xyXG4gICAgICAgICAgc3R5bGU9e1tcclxuICAgICAgICAgICAgc3R5bGVzLnR5cGluZ0RvdCxcclxuICAgICAgICAgICAgeyBvcGFjaXR5OiB0eXBpbmdBbmltYXRpb24sIG1hcmdpbkhvcml6b250YWw6IDQgfSxcclxuICAgICAgICAgIF19XHJcbiAgICAgICAgLz5cclxuICAgICAgICA8QW5pbWF0ZWQuVmlld1xyXG4gICAgICAgICAgc3R5bGU9e1tzdHlsZXMudHlwaW5nRG90LCB7IG9wYWNpdHk6IHR5cGluZ0FuaW1hdGlvbiB9XX1cclxuICAgICAgICAvPlxyXG4gICAgICA8L1ZpZXc+XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvbnZlcnNhdGlvblR5cGluZ0luZGljYXRvcjtcclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsU0FBU0EsTUFBTSxFQUFFQyxTQUFTLFFBQVEsT0FBTztB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