5b35f65f093af848b74f05b89061c7d3
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolateColor = exports.Extrapolate = exports.ColorSpace = void 0;
exports.useInterpolateConfig = useInterpolateConfig;
var _Colors = require("./Colors");
var _core = require("./core");
var _interpolation = require("./interpolation");
var _useSharedValue = require("./hook/useSharedValue");
var _errors = require("./errors");
var Extrapolate = exports.Extrapolate = _interpolation.Extrapolation;
var _worklet_12089101195034_init_data = {
  code: "function interpolateColorTs1(value,inputRange,colors,options){const{interpolate,Extrapolation,hsvToColor}=this.__closure;let h=0;const{useCorrectedHSVInterpolation=true}=options;if(useCorrectedHSVInterpolation){const correctedInputRange=[inputRange[0]];const originalH=colors.h;const correctedH=[originalH[0]];for(let i=1;i<originalH.length;++i){const d=originalH[i]-originalH[i-1];if(originalH[i]>originalH[i-1]&&d>0.5){correctedInputRange.push(inputRange[i]);correctedInputRange.push(inputRange[i]+0.00001);correctedH.push(originalH[i]-1);correctedH.push(originalH[i]);}else if(originalH[i]<originalH[i-1]&&d<-0.5){correctedInputRange.push(inputRange[i]);correctedInputRange.push(inputRange[i]+0.00001);correctedH.push(originalH[i]+1);correctedH.push(originalH[i]);}else{correctedInputRange.push(inputRange[i]);correctedH.push(originalH[i]);}}h=(interpolate(value,correctedInputRange,correctedH,Extrapolation.CLAMP)+1)%1;}else{h=interpolate(value,inputRange,colors.h,Extrapolation.CLAMP);}const s=interpolate(value,inputRange,colors.s,Extrapolation.CLAMP);const v=interpolate(value,inputRange,colors.v,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);return hsvToColor(h,s,v,a);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\interpolateColor.ts",
  sourceMap: "{\"version\":3,\"names\":[\"interpolateColorTs1\",\"value\",\"inputRange\",\"colors\",\"options\",\"interpolate\",\"Extrapolation\",\"hsvToColor\",\"__closure\",\"h\",\"useCorrectedHSVInterpolation\",\"correctedInputRange\",\"originalH\",\"correctedH\",\"i\",\"length\",\"d\",\"push\",\"CLAMP\",\"s\",\"v\",\"a\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/interpolateColor.ts\"],\"mappings\":\"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\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var interpolateColorsHSV = function () {
  var _e = [new global.Error(), -4, -27];
  var interpolateColorTs1 = function interpolateColorTs1(value, inputRange, colors, options) {
    var h = 0;
    var _options$useCorrected = options.useCorrectedHSVInterpolation,
      useCorrectedHSVInterpolation = _options$useCorrected === void 0 ? true : _options$useCorrected;
    if (useCorrectedHSVInterpolation) {
      var correctedInputRange = [inputRange[0]];
      var originalH = colors.h;
      var correctedH = [originalH[0]];
      for (var i = 1; i < originalH.length; ++i) {
        var d = originalH[i] - originalH[i - 1];
        if (originalH[i] > originalH[i - 1] && d > 0.5) {
          correctedInputRange.push(inputRange[i]);
          correctedInputRange.push(inputRange[i] + 0.00001);
          correctedH.push(originalH[i] - 1);
          correctedH.push(originalH[i]);
        } else if (originalH[i] < originalH[i - 1] && d < -0.5) {
          correctedInputRange.push(inputRange[i]);
          correctedInputRange.push(inputRange[i] + 0.00001);
          correctedH.push(originalH[i] + 1);
          correctedH.push(originalH[i]);
        } else {
          correctedInputRange.push(inputRange[i]);
          correctedH.push(originalH[i]);
        }
      }
      h = ((0, _interpolation.interpolate)(value, correctedInputRange, correctedH, _interpolation.Extrapolation.CLAMP) + 1) % 1;
    } else {
      h = (0, _interpolation.interpolate)(value, inputRange, colors.h, _interpolation.Extrapolation.CLAMP);
    }
    var s = (0, _interpolation.interpolate)(value, inputRange, colors.s, _interpolation.Extrapolation.CLAMP);
    var v = (0, _interpolation.interpolate)(value, inputRange, colors.v, _interpolation.Extrapolation.CLAMP);
    var a = (0, _interpolation.interpolate)(value, inputRange, colors.a, _interpolation.Extrapolation.CLAMP);
    return (0, _Colors.hsvToColor)(h, s, v, a);
  };
  interpolateColorTs1.__closure = {
    interpolate: _interpolation.interpolate,
    Extrapolation: _interpolation.Extrapolation,
    hsvToColor: _Colors.hsvToColor
  };
  interpolateColorTs1.__workletHash = 12089101195034;
  interpolateColorTs1.__initData = _worklet_12089101195034_init_data;
  interpolateColorTs1.__stackDetails = _e;
  return interpolateColorTs1;
}();
var _worklet_12758569594929_init_data = {
  code: "function interpolateColorTs2(x,gamma){return x.map(function(v){return Math.pow(v/255,gamma);});}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\interpolateColor.ts",
  sourceMap: "{\"version\":3,\"names\":[\"interpolateColorTs2\",\"x\",\"gamma\",\"map\",\"v\",\"Math\",\"pow\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/interpolateColor.ts\"],\"mappings\":\"AAqFsB,QAAC,CAAAA,mBAAyCA,CAAAC,CAAA,CAAAC,KAAA,EAE9D,MAAO,CAAAD,CAAC,CAACE,GAAG,CAAE,SAAAC,CAAC,QAAK,CAAAC,IAAI,CAACC,GAAG,CAACF,CAAC,CAAG,GAAG,CAAEF,KAAK,CAAC,GAAC,CAC/C\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var toLinearSpace = function () {
  var _e = [new global.Error(), 1, -27];
  var interpolateColorTs2 = function interpolateColorTs2(x, gamma) {
    return x.map(function (v) {
      return Math.pow(v / 255, gamma);
    });
  };
  interpolateColorTs2.__closure = {};
  interpolateColorTs2.__workletHash = 12758569594929;
  interpolateColorTs2.__initData = _worklet_12758569594929_init_data;
  interpolateColorTs2.__stackDetails = _e;
  return interpolateColorTs2;
}();
var _worklet_16323081088977_init_data = {
  code: "function interpolateColorTs3(x,gamma){return Math.round(Math.pow(x,1/gamma)*255);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\interpolateColor.ts",
  sourceMap: "{\"version\":3,\"names\":[\"interpolateColorTs3\",\"x\",\"gamma\",\"Math\",\"round\",\"pow\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/interpolateColor.ts\"],\"mappings\":\"AA0FqB,QAAC,CAAAA,mBAAqCA,CAAAC,CAAA,CAAAC,KAAA,EAEzD,MAAO,CAAAC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACJ,CAAC,CAAE,CAAC,CAAGC,KAAK,CAAC,CAAG,GAAG,CAAC,CACjD\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var toGammaSpace = function () {
  var _e = [new global.Error(), 1, -27];
  var interpolateColorTs3 = function interpolateColorTs3(x, gamma) {
    return Math.round(Math.pow(x, 1 / gamma) * 255);
  };
  interpolateColorTs3.__closure = {};
  interpolateColorTs3.__workletHash = 16323081088977;
  interpolateColorTs3.__initData = _worklet_16323081088977_init_data;
  interpolateColorTs3.__stackDetails = _e;
  return interpolateColorTs3;
}();
var _worklet_11009674977133_init_data = {
  code: "function interpolateColorTs4(value,inputRange,colors,options){const{toLinearSpace,interpolate,Extrapolation,rgbaColor,toGammaSpace}=this.__closure;const{gamma=2.2}=options;let{r:outputR,g:outputG,b:outputB}=colors;if(gamma!==1){outputR=toLinearSpace(outputR,gamma);outputG=toLinearSpace(outputG,gamma);outputB=toLinearSpace(outputB,gamma);}const r=interpolate(value,inputRange,outputR,Extrapolation.CLAMP);const g=interpolate(value,inputRange,outputG,Extrapolation.CLAMP);const b=interpolate(value,inputRange,outputB,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);if(gamma===1){return rgbaColor(r,g,b,a);}return rgbaColor(toGammaSpace(r,gamma),toGammaSpace(g,gamma),toGammaSpace(b,gamma),a);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\interpolateColor.ts",
  sourceMap: "{\"version\":3,\"names\":[\"interpolateColorTs4\",\"value\",\"inputRange\",\"colors\",\"options\",\"toLinearSpace\",\"interpolate\",\"Extrapolation\",\"rgbaColor\",\"toGammaSpace\",\"__closure\",\"gamma\",\"r\",\"outputR\",\"g\",\"outputG\",\"b\",\"outputB\",\"CLAMP\",\"a\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/interpolateColor.ts\"],\"mappings\":\"AA+F6B,QAC3B,CAAAA,mBAC6BA,CAAAC,KAC7B,CAAsBC,UACO,CAC1BC,MAAA,CAAAC,OAAA,QAAAC,aAAA,CAAAC,WAAA,CAAAC,aAAA,CAAAC,SAAA,CAAAC,YAAA,OAAAC,SAAA,CAEH,KAAM,CAAEC,KAAK,CAAG,GAAI,CAAC,CAAGP,OAAO,CAC/B,GAAI,CAAEQ,CAAC,CAAEC,OAAO,CAAEC,CAAC,CAAEC,OAAO,CAAEC,CAAC,CAAEC,OAAQ,CAAC,CAAGd,MAAM,CACnD,GAAIQ,KAAK,GAAK,CAAC,CAAE,CACfE,OAAO,CAAGR,aAAa,CAACQ,OAAO,CAAEF,KAAK,CAAC,CACvCI,OAAO,CAAGV,aAAa,CAACU,OAAO,CAAEJ,KAAK,CAAC,CACvCM,OAAO,CAAGZ,aAAa,CAACY,OAAO,CAAEN,KAAK,CAAC,CACzC,CACA,KAAM,CAAAC,CAAC,CAAGN,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEW,OAAO,CAAEN,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAJ,CAAC,CAAGR,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEa,OAAO,CAAER,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAF,CAAC,CAAGV,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEe,OAAO,CAAEV,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAC,CAAC,CAAGb,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACgB,CAAC,CAAEZ,aAAa,CAACW,KAAK,CAAC,CACvE,GAAIP,KAAK,GAAK,CAAC,CAAE,CACf,MAAO,CAAAH,SAAS,CAACI,CAAC,CAAEE,CAAC,CAAEE,CAAC,CAAEG,CAAC,CAAC,CAC9B,CACA,MAAO,CAAAX,SAAS,CACdC,YAAY,CAACG,CAAC,CAAED,KAAK,CAAC,CACtBF,YAAY,CAACK,CAAC,CAAEH,KAAK,CAAC,CACtBF,YAAY,CAACO,CAAC,CAAEL,KAAK,CAAC,CACtBQ,CACF,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var interpolateColorsRGB = function () {
  var _e = [new global.Error(), -6, -27];
  var interpolateColorTs4 = function interpolateColorTs4(value, inputRange, colors, options) {
    var _options$gamma = options.gamma,
      gamma = _options$gamma === void 0 ? 2.2 : _options$gamma;
    var outputR = colors.r,
      outputG = colors.g,
      outputB = colors.b;
    if (gamma !== 1) {
      outputR = toLinearSpace(outputR, gamma);
      outputG = toLinearSpace(outputG, gamma);
      outputB = toLinearSpace(outputB, gamma);
    }
    var r = (0, _interpolation.interpolate)(value, inputRange, outputR, _interpolation.Extrapolation.CLAMP);
    var g = (0, _interpolation.interpolate)(value, inputRange, outputG, _interpolation.Extrapolation.CLAMP);
    var b = (0, _interpolation.interpolate)(value, inputRange, outputB, _interpolation.Extrapolation.CLAMP);
    var a = (0, _interpolation.interpolate)(value, inputRange, colors.a, _interpolation.Extrapolation.CLAMP);
    if (gamma === 1) {
      return (0, _Colors.rgbaColor)(r, g, b, a);
    }
    return (0, _Colors.rgbaColor)(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);
  };
  interpolateColorTs4.__closure = {
    toLinearSpace: toLinearSpace,
    interpolate: _interpolation.interpolate,
    Extrapolation: _interpolation.Extrapolation,
    rgbaColor: _Colors.rgbaColor,
    toGammaSpace: toGammaSpace
  };
  interpolateColorTs4.__workletHash = 11009674977133;
  interpolateColorTs4.__initData = _worklet_11009674977133_init_data;
  interpolateColorTs4.__stackDetails = _e;
  return interpolateColorTs4;
}();
var _worklet_360550181944_init_data = {
  code: "function interpolateColorTs5(colors){const{processColor,red,green,blue,opacity}=this.__closure;const r=[];const g=[];const b=[];const a=[];for(let i=0;i<colors.length;++i){const color=colors[i];const processedColor=processColor(color);if(processedColor!==null&&processedColor!==undefined){r.push(red(processedColor));g.push(green(processedColor));b.push(blue(processedColor));a.push(opacity(processedColor));}}return{r:r,g:g,b:b,a:a};}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\interpolateColor.ts",
  sourceMap: "{\"version\":3,\"names\":[\"interpolateColorTs5\",\"colors\",\"processColor\",\"red\",\"green\",\"blue\",\"opacity\",\"__closure\",\"r\",\"g\",\"b\",\"a\",\"i\",\"length\",\"color\",\"processedColor\",\"undefined\",\"push\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/interpolateColor.ts\"],\"mappings\":\"AAmI0B,QACxB,CAAAA,mBACmBA,CAAAC,MAAA,QAAAC,YAAA,CAAAC,GAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,OAAA,OAAAC,SAAA,CAGnB,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGX,MAAM,CAACY,MAAM,CAAE,EAAED,CAAC,CAAE,CACtC,KAAM,CAAAE,KAAK,CAAGb,MAAM,CAACW,CAAC,CAAC,CACvB,KAAM,CAAAG,cAAc,CAAGb,YAAY,CAACY,KAAK,CAAC,CAE1C,GAAIC,cAAc,GAAK,IAAI,EAAIA,cAAc,GAAKC,SAAS,CAAE,CAC3DR,CAAC,CAACS,IAAI,CAACd,GAAG,CAACY,cAAc,CAAC,CAAC,CAC3BN,CAAC,CAACQ,IAAI,CAACb,KAAK,CAACW,cAAc,CAAC,CAAC,CAC7BL,CAAC,CAACO,IAAI,CAACZ,IAAI,CAACU,cAAc,CAAC,CAAC,CAC5BJ,CAAC,CAACM,IAAI,CAACX,OAAO,CAACS,cAAc,CAAC,CAAC,CACjC,CACF,CACA,MAAO,CAAEP,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,CAAEC,CAAA,CAAAA,CAAE,CAAC,CACvB\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var getInterpolateRGB = function () {
  var _e = [new global.Error(), -6, -27];
  var interpolateColorTs5 = function interpolateColorTs5(colors) {
    var r = [];
    var g = [];
    var b = [];
    var a = [];
    for (var i = 0; i < colors.length; ++i) {
      var color = colors[i];
      var processedColor = (0, _Colors.processColor)(color);
      if (processedColor !== null && processedColor !== undefined) {
        r.push((0, _Colors.red)(processedColor));
        g.push((0, _Colors.green)(processedColor));
        b.push((0, _Colors.blue)(processedColor));
        a.push((0, _Colors.opacity)(processedColor));
      }
    }
    return {
      r: r,
      g: g,
      b: b,
      a: a
    };
  };
  interpolateColorTs5.__closure = {
    processColor: _Colors.processColor,
    red: _Colors.red,
    green: _Colors.green,
    blue: _Colors.blue,
    opacity: _Colors.opacity
  };
  interpolateColorTs5.__workletHash = 360550181944;
  interpolateColorTs5.__initData = _worklet_360550181944_init_data;
  interpolateColorTs5.__stackDetails = _e;
  return interpolateColorTs5;
}();
var _worklet_15197086182543_init_data = {
  code: "function interpolateColorTs6(colors){const{processColor,RGBtoHSV,red,green,blue,opacity}=this.__closure;const h=[];const s=[];const v=[];const a=[];for(let i=0;i<colors.length;++i){const color=colors[i];const processedColor=processColor(color);if(typeof processedColor==='number'){const processedHSVColor=RGBtoHSV(red(processedColor),green(processedColor),blue(processedColor));h.push(processedHSVColor.h);s.push(processedHSVColor.s);v.push(processedHSVColor.v);a.push(opacity(processedColor));}}return{h:h,s:s,v:v,a:a};}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\interpolateColor.ts",
  sourceMap: "{\"version\":3,\"names\":[\"interpolateColorTs6\",\"colors\",\"processColor\",\"RGBtoHSV\",\"red\",\"green\",\"blue\",\"opacity\",\"__closure\",\"h\",\"s\",\"v\",\"a\",\"i\",\"length\",\"color\",\"processedColor\",\"processedHSVColor\",\"push\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/interpolateColor.ts\"],\"mappings\":\"AAiK0B,QACxB,CAAAA,mBACmBA,CAAAC,MAAA,QAAAC,YAAA,CAAAC,QAAA,CAAAC,GAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,OAAA,OAAAC,SAAA,CAEnB,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,KAAM,CAAAC,CAAC,CAAG,EAAE,CACZ,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGZ,MAAM,CAACa,MAAM,CAAE,EAAED,CAAC,CAAE,CACtC,KAAM,CAAAE,KAAK,CAAGd,MAAM,CAACY,CAAC,CAAC,CACvB,KAAM,CAAAG,cAAc,CAAGd,YAAY,CAACa,KAAK,CAAQ,CACjD,GAAI,MAAO,CAAAC,cAAc,GAAK,QAAQ,CAAE,CACtC,KAAM,CAAAC,iBAAiB,CAAGd,QAAQ,CAChCC,GAAG,CAACY,cAAc,CAAC,CACnBX,KAAK,CAACW,cAAc,CAAC,CACrBV,IAAI,CAACU,cAAc,CACrB,CAAC,CAEDP,CAAC,CAACS,IAAI,CAACD,iBAAiB,CAACR,CAAC,CAAC,CAC3BC,CAAC,CAACQ,IAAI,CAACD,iBAAiB,CAACP,CAAC,CAAC,CAC3BC,CAAC,CAACO,IAAI,CAACD,iBAAiB,CAACN,CAAC,CAAC,CAC3BC,CAAC,CAACM,IAAI,CAACX,OAAO,CAACS,cAAc,CAAC,CAAC,CACjC,CACF,CACA,MAAO,CAAEP,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,CAAEC,CAAA,CAAAA,CAAE,CAAC,CACvB\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var getInterpolateHSV = function () {
  var _e = [new global.Error(), -7, -27];
  var interpolateColorTs6 = function interpolateColorTs6(colors) {
    var h = [];
    var s = [];
    var v = [];
    var a = [];
    for (var i = 0; i < colors.length; ++i) {
      var color = colors[i];
      var processedColor = (0, _Colors.processColor)(color);
      if (typeof processedColor === 'number') {
        var processedHSVColor = (0, _Colors.RGBtoHSV)((0, _Colors.red)(processedColor), (0, _Colors.green)(processedColor), (0, _Colors.blue)(processedColor));
        h.push(processedHSVColor.h);
        s.push(processedHSVColor.s);
        v.push(processedHSVColor.v);
        a.push((0, _Colors.opacity)(processedColor));
      }
    }
    return {
      h: h,
      s: s,
      v: v,
      a: a
    };
  };
  interpolateColorTs6.__closure = {
    processColor: _Colors.processColor,
    RGBtoHSV: _Colors.RGBtoHSV,
    red: _Colors.red,
    green: _Colors.green,
    blue: _Colors.blue,
    opacity: _Colors.opacity
  };
  interpolateColorTs6.__workletHash = 15197086182543;
  interpolateColorTs6.__initData = _worklet_15197086182543_init_data;
  interpolateColorTs6.__stackDetails = _e;
  return interpolateColorTs6;
}();
var _worklet_3952861379060_init_data = {
  code: "function interpolateColor_interpolateColorTs7(value,inputRange,outputRange,colorSpace='RGB',options={}){const{interpolateColorsHSV,getInterpolateHSV,interpolateColorsRGB,getInterpolateRGB}=this.__closure;if(colorSpace==='HSV'){return interpolateColorsHSV(value,inputRange,getInterpolateHSV(outputRange),options);}else if(colorSpace==='RGB'){return interpolateColorsRGB(value,inputRange,getInterpolateRGB(outputRange),options);}throw new ReanimatedError(\"Invalid color space provided: \"+colorSpace+\". Supported values are: ['RGB', 'HSV'].\");}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\interpolateColor.ts",
  sourceMap: "{\"version\":3,\"names\":[\"interpolateColor_interpolateColorTs7\",\"value\",\"inputRange\",\"outputRange\",\"colorSpace\",\"options\",\"interpolateColorsHSV\",\"getInterpolateHSV\",\"interpolateColorsRGB\",\"getInterpolateRGB\",\"__closure\",\"ReanimatedError\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/interpolateColor.ts\"],\"mappings\":\"AA8NO,SAAAA,oCAEwBA,CAC7BC,KAAA,CAAAC,UACA,CAAAC,WAA4B,CAAKC,UACJ,CAC9B,KAAkB,CAAAC,OAAA,WAAAC,oBAAA,CAAAC,iBAAA,CAAAC,oBAAA,CAAAC,iBAAA,OAAAC,SAAA,CAEjB,GAAIN,UAAU,GAAK,KAAK,CAAE,CACxB,MAAO,CAAAE,oBAAoB,CACzBL,KAAK,CACLC,UAAU,CACVK,iBAAiB,CAACJ,WAAW,CAAC,CAC9BE,OACF,CAAC,CACH,CAAC,IAAM,IAAID,UAAU,GAAK,KAAK,CAAE,CAC/B,MAAO,CAAAI,oBAAoB,CACzBP,KAAK,CACLC,UAAU,CACVO,iBAAiB,CAACN,WAAW,CAAC,CAC9BE,OACF,CAAC,CACH,CACA,KAAM,IAAI,CAAAM,eAAe,kCAErBP,UAAU,0CAEd,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var interpolateColor = exports.interpolateColor = function () {
  var _e = [new global.Error(), -5, -27];
  var interpolateColor = function interpolateColor(value, inputRange, outputRange) {
    var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'RGB';
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    if (colorSpace === 'HSV') {
      return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);
    } else if (colorSpace === 'RGB') {
      return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);
    }
    throw new _errors.ReanimatedError(`Invalid color space provided: ${colorSpace}. Supported values are: ['RGB', 'HSV'].`);
  };
  interpolateColor.__closure = {
    interpolateColorsHSV: interpolateColorsHSV,
    getInterpolateHSV: getInterpolateHSV,
    interpolateColorsRGB: interpolateColorsRGB,
    getInterpolateRGB: getInterpolateRGB
  };
  interpolateColor.__workletHash = 3952861379060;
  interpolateColor.__initData = _worklet_3952861379060_init_data;
  interpolateColor.__stackDetails = _e;
  return interpolateColor;
}();
var ColorSpace = exports.ColorSpace = function (ColorSpace) {
  ColorSpace[ColorSpace["RGB"] = 0] = "RGB";
  ColorSpace[ColorSpace["HSV"] = 1] = "HSV";
  return ColorSpace;
}({});
function useInterpolateConfig(inputRange, outputRange) {
  var colorSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ColorSpace.RGB;
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  return (0, _useSharedValue.useSharedValue)({
    inputRange: inputRange,
    outputRange: outputRange,
    colorSpace: colorSpace,
    cache: (0, _core.makeMutable)(null),
    options: options
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,