{"version":3,"names":["_react","require","_reactNative","_propTypes","_interopRequireDefault","_style","_jsxRuntime","ExerciseCard","_ref","title","description","icon","progress","_ref$color","color","onPress","_ref$isNew","isNew","shouldShowProgress","shouldShowNewBadge","renderBottomContent","jsx","View","style","styles","progressSection","children","jsxs","progressContainer","progressBar","progressFill","width","Math","round","Number","backgroundColor","testID","Text","progressText","badgeContainer","badge","badgeText","TouchableOpacity","card","borderLeftColor","borderLeftWidth","topSection","iconContainer","infoContainer","buttonContainer","startButton","buttonText","propTypes","PropTypes","string","isRequired","number","func","bool","defaultProps","_default","exports","default","memo"],"sources":["index.js"],"sourcesContent":["// src/components/exercise-common/ExerciseCard/index.js\r\nimport { memo } from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./style\";\r\n\r\n/**\r\n * Carte représentant un type d'exercice dans la sélection des exercices\r\n * \r\n * @param {string} title - Titre de l'exercice\r\n * @param {string} description - Description courte de l'exercice\r\n * @param {string} icon - Icône ou emoji représentant l'exercice\r\n * @param {number} progress - Pourcentage de progression (0-100)\r\n * @param {string} color - Couleur principale de la carte\r\n * @param {function} onPress - Callback appelé au clic sur la carte\r\n * @param {boolean} isNew - Indique si l'exercice est nouveau (badge \"Nouveau\")\r\n */\r\nconst ExerciseCard = ({\r\n  title,\r\n  description,\r\n  icon,\r\n  progress,\r\n  color = \"#5E60CE\",\r\n  onPress,\r\n  isNew = false,\r\n}) => {\r\n  // ✅ Extraction de la logique conditionnelle pour améliorer la lisibilité\r\n  const shouldShowProgress = progress > 0;\r\n  const shouldShowNewBadge = !shouldShowProgress && isNew;\r\n  \r\n  // ✅ Détermination du contenu à afficher\r\n  const renderBottomContent = () => {\r\n    if (shouldShowProgress) {\r\n      return (\r\n        <View style={styles.progressSection}>\r\n          <View style={styles.progressContainer}>\r\n            <View style={styles.progressBar}>\r\n              {/* testID utile pour vérifier la largeur dynamique de la barre de progression dans les tests unitaires */}\r\n              <View\r\n                style={[styles.progressFill, { width: `${Math.round(Number(progress) || 0)}%`, backgroundColor: color }]}\r\n                testID=\"progress-fill\"\r\n              />\r\n            </View>\r\n            <Text style={[styles.progressText, { color }]}>{progress}%</Text>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    \r\n    if (shouldShowNewBadge) {\r\n      return (\r\n        <View style={styles.badgeContainer}>\r\n          <View style={[styles.badge, { backgroundColor: `${color}15` }]}>\r\n            <Text style={[styles.badgeText, { color }]}>Nouveau</Text>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={[styles.card, { borderLeftColor: color, borderLeftWidth: 4 }]}\r\n      onPress={onPress}\r\n    >\r\n      <View style={styles.topSection}>\r\n        <View style={[styles.iconContainer, { backgroundColor: `${color}15` }]}>\r\n          <Text style={styles.icon}>{icon}</Text>\r\n        </View>\r\n\r\n        <View style={styles.infoContainer}>\r\n          <Text style={styles.title}>{title}</Text>\r\n          <Text style={styles.description}>{description}</Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* ✅ Contenu conditionnel extrait dans une fonction */}\r\n      {renderBottomContent()}\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity\r\n          style={[styles.startButton, { backgroundColor: color }]}\r\n          onPress={onPress}\r\n        >\r\n          <Text style={styles.buttonText}>Commencer</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n// PropTypes pour la validation des props\r\nExerciseCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  progress: PropTypes.number.isRequired,\r\n  color: PropTypes.string,\r\n  onPress: PropTypes.func.isRequired,\r\n  isNew: PropTypes.bool,\r\n};\r\n\r\n// Valeurs par défaut\r\nExerciseCard.defaultProps = {\r\n  color: \"#5E60CE\",\r\n  isNew: false,\r\n};\r\n\r\nexport default memo(ExerciseCard);"],"mappings":"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","ignoreList":[]}