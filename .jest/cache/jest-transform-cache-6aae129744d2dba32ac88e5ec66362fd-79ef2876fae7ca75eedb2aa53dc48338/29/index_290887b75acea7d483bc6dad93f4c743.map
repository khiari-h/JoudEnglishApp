{"version":3,"names":["_react","require","_reactNative","_native","_propTypes","_interopRequireDefault","_Container","_SpellingHeader","_SpellingProgress","_SpellingCard","_SpellingActions","_useSpelling","_useLastActivity","_spellingDataHelper","_style","_jsxRuntime","cov_r5v0gyzjg","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","SpellingExercise","_ref","route","_ref2","params","_ref2$level","level","_ref2$exerciseType","exerciseType","navigation","useNavigation","styles","createStyles","_ref3","useLastActivity","saveActivity","levelColor","getLevelColor","getExerciseTypeName","exerciseTypeName","spellingData","useMemo","getSpellingData","error","console","warn","_ref4","useSpelling","currentExerciseIndex","userInput","showHint","showFeedback","isCorrect","loaded","currentExercise","totalExercises","setUserInput","toggleHint","checkAnswer","handleNext","retryExercise","isLastExercise","hasValidData","useEffect","saveActivityAsync","_ref5","_asyncToGenerator2","default","title","metadata","word","totalWords","content","wordToCorrect","apply","arguments","handleBack","useCallback","goBack","jsxs","children","jsx","onBack","View","style","loadingContainer","ActivityIndicator","size","color","testID","Text","loadingText","errorContainer","errorText","onUserInputChange","onHintToggle","onCheckAnswer","onNext","onRetry","_default","exports","propTypes","PropTypes","shape","string","isRequired"],"sources":["index.js"],"sourcesContent":["// SpellingExercise/index.js - VERSION PROPRE\r\n\r\nimport { useMemo, useEffect, useCallback } from \"react\";\r\nimport { View, ActivityIndicator, Text } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from \"../../../components/layout/Container\";\r\nimport SpellingHeader from \"./SpellingHeader\";\r\nimport SpellingProgress from \"./SpellingProgress\";\r\nimport SpellingCard from \"./SpellingCard\";\r\nimport SpellingActions from \"./SpellingActions\";\r\n\r\nimport useSpelling from \"./hooks/useSpelling\";\r\nimport useLastActivity from \"../../../hooks/useLastActivity\";\r\nimport { getSpellingData, getLevelColor } from \"../../../utils/spelling/spellingDataHelper\";\r\nimport createStyles from \"./style\";\r\n\r\nconst SpellingExercise = ({ route }) => {\r\n  const { level = \"1\", exerciseType = \"correction\" } = route.params || {};\r\n  const navigation = useNavigation();\r\n  const styles = createStyles();\r\n  const { saveActivity } = useLastActivity();\r\n\r\n  const levelColor = getLevelColor(level);\r\n\r\n  // ✅ Extraction de la logique conditionnelle pour améliorer la lisibilité\r\n  const getExerciseTypeName = () => {\r\n    if (exerciseType === \"correction\") return \"Correction\";\r\n    if (exerciseType === \"rules\") return \"Règles\";\r\n    return \"Homophones\";\r\n  };\r\n  \r\n  // Définir exerciseTypeName pour tout le composant\r\n  const exerciseTypeName = getExerciseTypeName();\r\n  \r\n  const spellingData = useMemo(() => {\r\n    try {\r\n      return getSpellingData(level, exerciseType);\r\n    } catch (error) {\r\n      // ✅ Gestion d'erreur appropriée\r\n      console.warn(`Error getting spelling data for level ${level}, type ${exerciseType}:`, error);\r\n      return null;\r\n    }\r\n  }, [level, exerciseType]);\r\n\r\n  const {\r\n    currentExerciseIndex,\r\n    userInput,\r\n    showHint,\r\n    showFeedback,\r\n    isCorrect,\r\n    loaded,\r\n    currentExercise,\r\n    totalExercises,\r\n    setUserInput,\r\n    toggleHint,\r\n    checkAnswer,\r\n    handleNext,\r\n    retryExercise,\r\n    isLastExercise,\r\n    hasValidData,\r\n  } = useSpelling(spellingData, level, exerciseType);\r\n\r\n  useEffect(() => {\r\n    if (loaded && hasValidData && currentExercise) {\r\n      const saveActivityAsync = async () => {\r\n        try {\r\n          await saveActivity({\r\n            title: `Orthographe ${exerciseTypeName}`,\r\n            level,\r\n            type: \"spelling\",\r\n            metadata: {\r\n              word: currentExerciseIndex,           // ✅ Index actuel (pour progression)\r\n              totalWords: totalExercises,           // ✅ Total (pour progression)\r\n              exerciseType,\r\n              content: currentExercise.wordToCorrect || `Exercice ${currentExerciseIndex + 1}` // ✅ Contenu de l'exercice\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error saving activity:\", error);\r\n        }\r\n      };\r\n\r\n      saveActivityAsync();\r\n    }\r\n  }, [loaded, hasValidData, currentExercise, level, exerciseType, currentExerciseIndex, totalExercises, saveActivity]);\r\n\r\n  const handleBack = useCallback(() => navigation.goBack(), [navigation]);\r\n\r\n  if (!loaded) {\r\n    return (\r\n      <Container>\r\n        <SpellingHeader\r\n          title={`Orthographe ${exerciseTypeName}`}\r\n          level={level}\r\n          levelColor={levelColor}\r\n          onBack={handleBack}\r\n        />\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color={levelColor} testID=\"activity-indicator\" />\r\n          <Text style={styles.loadingText}>Chargement des exercices...</Text>\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!hasValidData) {\r\n    return (\r\n      <Container>\r\n        <SpellingHeader\r\n          title={`Orthographe ${exerciseTypeName}`}\r\n          level={level}\r\n          levelColor={levelColor}\r\n          onBack={handleBack}\r\n        />\r\n        <View style={styles.errorContainer}>\r\n          <Text style={styles.errorText}>Aucune donnée trouvée pour ce niveau.</Text>\r\n          <Text style={styles.errorText}>Veuillez réessayer plus tard.</Text>\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SpellingHeader\r\n        title={`Orthographe ${exerciseTypeName}`}\r\n        level={level}\r\n        levelColor={levelColor}\r\n        onBack={handleBack}\r\n      />\r\n      <SpellingProgress\r\n        currentExerciseIndex={currentExerciseIndex + 1}\r\n        totalExercises={totalExercises}\r\n        levelColor={levelColor}\r\n      />\r\n      <SpellingCard\r\n        currentExercise={currentExercise}\r\n        userInput={userInput}\r\n        showHint={showHint}\r\n        showFeedback={showFeedback}\r\n        isCorrect={isCorrect}\r\n        onUserInputChange={setUserInput}\r\n        onHintToggle={toggleHint}\r\n        onCheckAnswer={checkAnswer}\r\n        onNext={handleNext}\r\n        onRetry={retryExercise}\r\n        isLastExercise={isLastExercise}\r\n        levelColor={levelColor}\r\n      />\r\n      <SpellingActions\r\n        isCorrect={isCorrect}\r\n        onNext={handleNext}\r\n        onRetry={retryExercise}\r\n        isLastExercise={isLastExercise}\r\n        levelColor={levelColor}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SpellingExercise;\r\n\r\n// ✅ Ajout de la validation des props\r\nSpellingExercise.propTypes = {\r\n  route: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      level: PropTypes.string,\r\n      exerciseType: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};"],"mappings":";;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAC,sBAAA,CAAAJ,OAAA;AAEA,IAAAK,UAAA,GAAAD,sBAAA,CAAAJ,OAAA;AACA,IAAAM,eAAA,GAAAF,sBAAA,CAAAJ,OAAA;AACA,IAAAO,iBAAA,GAAAH,sBAAA,CAAAJ,OAAA;AACA,IAAAQ,aAAA,GAAAJ,sBAAA,CAAAJ,OAAA;AACA,IAAAS,gBAAA,GAAAL,sBAAA,CAAAJ,OAAA;AAEA,IAAAU,YAAA,GAAAN,sBAAA,CAAAJ,OAAA;AACA,IAAAW,gBAAA,GAAAP,sBAAA,CAAAJ,OAAA;AACA,IAAAY,mBAAA,GAAAZ,OAAA;AACA,IAAAa,MAAA,GAAAT,sBAAA,CAAAJ,OAAA;AAAmC,IAAAc,WAAA,GAAAd,OAAA;AAAA,SAAAe,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;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","ignoreList":[]}