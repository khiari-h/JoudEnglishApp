d6ad5b4727b754824ec14b0608c36823
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _reactNative = require("react-native");
var _native = require("@react-navigation/native");
var _Container = _interopRequireDefault(require("../../../components/layout/Container"));
var _SpellingHeader = _interopRequireDefault(require("./SpellingHeader"));
var _SpellingProgress = _interopRequireDefault(require("./SpellingProgress"));
var _SpellingCard = _interopRequireDefault(require("./SpellingCard"));
var _SpellingActions = _interopRequireDefault(require("./SpellingActions"));
var _useSpelling = _interopRequireDefault(require("./hooks/useSpelling"));
var _useLastActivity = _interopRequireDefault(require("../../../hooks/useLastActivity"));
var _spellingDataHelper = require("../../../utils/spelling/spellingDataHelper");
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_r5v0gyzjg() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\index.js";
  var hash = "3d10a03b21e056ed868110f7fe3075c09f2cb92d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 148,
          column: 1
        }
      },
      "1": {
        start: {
          line: 19,
          column: 55
        },
        end: {
          line: 19,
          column: 73
        }
      },
      "2": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "3": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "4": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "5": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "6": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 28,
          column: 76
        }
      },
      "7": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 36,
          column: 27
        }
      },
      "8": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "9": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 50
        }
      },
      "10": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 18
        }
      },
      "11": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 52
        }
      },
      "12": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 74,
          column: 119
        }
      },
      "13": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "14": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 72,
          column: 7
        }
      },
      "15": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "16": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 55
        }
      },
      "17": {
        start: {
          line: 76,
          column: 21
        },
        end: {
          line: 76,
          column: 73
        }
      },
      "18": {
        start: {
          line: 76,
          column: 39
        },
        end: {
          line: 76,
          column: 58
        }
      },
      "19": {
        start: {
          line: 78,
          column: 2
        },
        end: {
          line: 93,
          column: 3
        }
      },
      "20": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 92,
          column: 6
        }
      },
      "21": {
        start: {
          line: 95,
          column: 2
        },
        end: {
          line: 110,
          column: 3
        }
      },
      "22": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 109,
          column: 6
        }
      },
      "23": {
        start: {
          line: 112,
          column: 2
        },
        end: {
          line: 147,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 18,
            column: 26
          }
        },
        loc: {
          start: {
            line: 18,
            column: 40
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 32
          }
        },
        loc: {
          start: {
            line: 30,
            column: 37
          },
          end: {
            line: 36,
            column: 3
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        loc: {
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 74,
            column: 3
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 34
          }
        },
        loc: {
          start: {
            line: 76,
            column: 39
          },
          end: {
            line: 76,
            column: 58
          }
        },
        line: 76
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 10
          },
          end: {
            line: 19,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 21
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 38
          },
          end: {
            line: 19,
            column: 50
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 55
          },
          end: {
            line: 19,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 55
          },
          end: {
            line: 19,
            column: 67
          }
        }, {
          start: {
            line: 19,
            column: 71
          },
          end: {
            line: 19,
            column: 73
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 59
          },
          end: {
            line: 27,
            column: 71
          }
        }, {
          start: {
            line: 28,
            column: 26
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 26
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 53
          },
          end: {
            line: 28,
            column: 61
          }
        }, {
          start: {
            line: 28,
            column: 64
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 14
          }
        }, {
          start: {
            line: 57,
            column: 18
          },
          end: {
            line: 57,
            column: 30
          }
        }, {
          start: {
            line: 57,
            column: 34
          },
          end: {
            line: 57,
            column: 49
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 21
          },
          end: {
            line: 67,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 21
          },
          end: {
            line: 67,
            column: 50
          }
        }, {
          start: {
            line: 67,
            column: 54
          },
          end: {
            line: 67,
            column: 92
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 93,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 93,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 110,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 110,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3d10a03b21e056ed868110f7fe3075c09f2cb92d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_r5v0gyzjg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_r5v0gyzjg();
cov_r5v0gyzjg().s[0]++;
var SpellingExercise = function SpellingExercise(_ref) {
  var route = _ref.route;
  cov_r5v0gyzjg().f[0]++;
  var _ref2 = (cov_r5v0gyzjg().s[1]++, (cov_r5v0gyzjg().b[2][0]++, route.params) || (cov_r5v0gyzjg().b[2][1]++, {})),
    _ref2$level = _ref2.level,
    level = _ref2$level === void 0 ? (cov_r5v0gyzjg().b[0][0]++, "1") : _ref2$level,
    _ref2$exerciseType = _ref2.exerciseType,
    exerciseType = _ref2$exerciseType === void 0 ? (cov_r5v0gyzjg().b[1][0]++, "correction") : _ref2$exerciseType;
  var navigation = (cov_r5v0gyzjg().s[2]++, (0, _native.useNavigation)());
  var styles = (cov_r5v0gyzjg().s[3]++, (0, _style.default)());
  var _ref3 = (cov_r5v0gyzjg().s[4]++, (0, _useLastActivity.default)()),
    saveActivity = _ref3.saveActivity;
  var levelColor = (cov_r5v0gyzjg().s[5]++, (0, _spellingDataHelper.getLevelColor)(level));
  var exerciseTypeName = (cov_r5v0gyzjg().s[6]++, exerciseType === "correction" ? (cov_r5v0gyzjg().b[3][0]++, "Correction") : (cov_r5v0gyzjg().b[3][1]++, exerciseType === "rules" ? (cov_r5v0gyzjg().b[4][0]++, "Règles") : (cov_r5v0gyzjg().b[4][1]++, "Homophones")));
  var spellingData = (cov_r5v0gyzjg().s[7]++, (0, _react.useMemo)(function () {
    cov_r5v0gyzjg().f[1]++;
    cov_r5v0gyzjg().s[8]++;
    try {
      cov_r5v0gyzjg().s[9]++;
      return (0, _spellingDataHelper.getSpellingData)(level, exerciseType);
    } catch (error) {
      cov_r5v0gyzjg().s[10]++;
      return null;
    }
  }, [level, exerciseType]));
  var _ref4 = (cov_r5v0gyzjg().s[11]++, (0, _useSpelling.default)(spellingData, level, exerciseType)),
    currentExerciseIndex = _ref4.currentExerciseIndex,
    userInput = _ref4.userInput,
    showHint = _ref4.showHint,
    showFeedback = _ref4.showFeedback,
    isCorrect = _ref4.isCorrect,
    loaded = _ref4.loaded,
    currentExercise = _ref4.currentExercise,
    totalExercises = _ref4.totalExercises,
    setUserInput = _ref4.setUserInput,
    toggleHint = _ref4.toggleHint,
    checkAnswer = _ref4.checkAnswer,
    handleNext = _ref4.handleNext,
    retryExercise = _ref4.retryExercise,
    isLastExercise = _ref4.isLastExercise,
    hasValidData = _ref4.hasValidData;
  cov_r5v0gyzjg().s[12]++;
  (0, _react.useEffect)(function () {
    cov_r5v0gyzjg().f[2]++;
    cov_r5v0gyzjg().s[13]++;
    if ((cov_r5v0gyzjg().b[6][0]++, loaded) && (cov_r5v0gyzjg().b[6][1]++, hasValidData) && (cov_r5v0gyzjg().b[6][2]++, currentExercise)) {
      cov_r5v0gyzjg().b[5][0]++;
      cov_r5v0gyzjg().s[14]++;
      try {
        cov_r5v0gyzjg().s[15]++;
        saveActivity({
          title: `Orthographe ${exerciseTypeName}`,
          level: level,
          type: "spelling",
          metadata: {
            word: currentExerciseIndex,
            totalWords: totalExercises,
            exerciseType: exerciseType,
            content: (cov_r5v0gyzjg().b[7][0]++, currentExercise.wordToCorrect) || (cov_r5v0gyzjg().b[7][1]++, `Exercice ${currentExerciseIndex + 1}`)
          }
        });
      } catch (error) {
        cov_r5v0gyzjg().s[16]++;
        console.error("Error saving activity:", error);
      }
    } else {
      cov_r5v0gyzjg().b[5][1]++;
    }
  }, [loaded, hasValidData, currentExercise, level, exerciseType, currentExerciseIndex, totalExercises, saveActivity]);
  var handleBack = (cov_r5v0gyzjg().s[17]++, (0, _react.useCallback)(function () {
    cov_r5v0gyzjg().f[3]++;
    cov_r5v0gyzjg().s[18]++;
    return navigation.goBack();
  }, [navigation]));
  cov_r5v0gyzjg().s[19]++;
  if (!loaded) {
    cov_r5v0gyzjg().b[8][0]++;
    cov_r5v0gyzjg().s[20]++;
    return (0, _jsxRuntime.jsxs)(_Container.default, {
      children: [(0, _jsxRuntime.jsx)(_SpellingHeader.default, {
        title: `Orthographe ${exerciseTypeName}`,
        level: level,
        levelColor: levelColor,
        onBack: handleBack
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.loadingContainer,
        children: [(0, _jsxRuntime.jsx)(_reactNative.ActivityIndicator, {
          size: "large",
          color: levelColor,
          testID: "activity-indicator"
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.loadingText,
          children: "Chargement des exercices..."
        })]
      })]
    });
  } else {
    cov_r5v0gyzjg().b[8][1]++;
  }
  cov_r5v0gyzjg().s[21]++;
  if (!hasValidData) {
    cov_r5v0gyzjg().b[9][0]++;
    cov_r5v0gyzjg().s[22]++;
    return (0, _jsxRuntime.jsxs)(_Container.default, {
      children: [(0, _jsxRuntime.jsx)(_SpellingHeader.default, {
        title: `Orthographe ${exerciseTypeName}`,
        level: level,
        levelColor: levelColor,
        onBack: handleBack
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.errorContainer,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.errorText,
          children: "Aucune donn\xE9e trouv\xE9e pour ce niveau."
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.errorText,
          children: "Veuillez r\xE9essayer plus tard."
        })]
      })]
    });
  } else {
    cov_r5v0gyzjg().b[9][1]++;
  }
  cov_r5v0gyzjg().s[23]++;
  return (0, _jsxRuntime.jsxs)(_Container.default, {
    children: [(0, _jsxRuntime.jsx)(_SpellingHeader.default, {
      title: `Orthographe ${exerciseTypeName}`,
      level: level,
      levelColor: levelColor,
      onBack: handleBack
    }), (0, _jsxRuntime.jsx)(_SpellingProgress.default, {
      currentExerciseIndex: currentExerciseIndex + 1,
      totalExercises: totalExercises,
      levelColor: levelColor
    }), (0, _jsxRuntime.jsx)(_SpellingCard.default, {
      currentExercise: currentExercise,
      userInput: userInput,
      showHint: showHint,
      showFeedback: showFeedback,
      isCorrect: isCorrect,
      onUserInputChange: setUserInput,
      onHintToggle: toggleHint,
      onCheckAnswer: checkAnswer,
      onNext: handleNext,
      onRetry: retryExercise,
      isLastExercise: isLastExercise,
      levelColor: levelColor
    }), (0, _jsxRuntime.jsx)(_SpellingActions.default, {
      isCorrect: isCorrect,
      onNext: handleNext,
      onRetry: retryExercise,
      isLastExercise: isLastExercise,
      levelColor: levelColor
    })]
  });
};
var _default = exports.default = SpellingExercise;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,