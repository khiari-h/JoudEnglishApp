5632f5a2a428a28684d4bd8e694bfa29
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vocab = void 0;
function cov_16klkxsirs() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\15_societe_questions_sociales.js";
  var hash = "c07f1a97a2f4633187cbb596809bd0c88a7bab5e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\3\\categories\\15_societe_questions_sociales.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 21
        },
        end: {
          line: 119,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c07f1a97a2f4633187cbb596809bd0c88a7bab5e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_16klkxsirs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16klkxsirs();
var vocab = exports.vocab = (cov_16klkxsirs().s[0]++, {
  title: "Société & Questions Sociales",
  words: [{
    word: "social class",
    translation: "classe sociale",
    example: "Social class can affect educational and employment opportunities."
  }, {
    word: "socioeconomic status",
    translation: "statut socio-économique",
    example: "Socioeconomic status influences many aspects of daily life."
  }, {
    word: "social mobility",
    translation: "mobilité sociale",
    example: "Education can be a pathway to social mobility."
  }, {
    word: "meritocracy",
    translation: "méritocratie",
    example: "A pure meritocracy rewards people based solely on their abilities and efforts."
  }, {
    word: "privilege",
    translation: "privilège",
    example: "Understanding privilege helps us recognize systemic advantages."
  }, {
    word: "inequality",
    translation: "inégalité",
    example: "Income inequality has increased in many countries."
  }, {
    word: "social stratification",
    translation: "stratification sociale",
    example: "Social stratification divides society into different layers or classes."
  }, {
    word: "social institution",
    translation: "institution sociale",
    example: "The family is a fundamental social institution in most cultures."
  }, {
    word: "patriarchy",
    translation: "patriarcat",
    example: "Feminism challenges patriarchy and gender inequalities."
  }, {
    word: "power structure",
    translation: "structure de pouvoir",
    example: "Understanding power structures helps explain decision-making processes."
  }, {
    word: "social system",
    translation: "système social",
    example: "Healthcare is an essential component of a functioning social system."
  }, {
    word: "group dynamics",
    translation: "dynamique de groupe",
    example: "Group dynamics influence how people behave in social settings."
  }, {
    word: "social organization",
    translation: "organisation sociale",
    example: "The internet has changed modern social organization."
  }, {
    word: "status symbol",
    translation: "symbole de statut",
    example: "Luxury cars often serve as status symbols in consumer societies."
  }, {
    word: "social capital",
    translation: "capital social",
    example: "Networking helps build social capital in professional environments."
  }, {
    word: "social movement",
    translation: "mouvement social",
    example: "The civil rights movement fought for racial equality."
  }, {
    word: "urbanization",
    translation: "urbanisation",
    example: "Urbanization has accelerated in developing countries."
  }, {
    word: "demographic change",
    translation: "changement démographique",
    example: "Many developed countries are experiencing demographic change with aging populations."
  }, {
    word: "social media influence",
    translation: "influence des réseaux sociaux",
    example: "Social media influence has transformed how people communicate and consume information."
  }, {
    word: "polarization",
    translation: "polarisation",
    example: "Political polarization has increased in many democracies."
  }, {
    word: "populism",
    translation: "populisme",
    example: "Populism has gained traction in several countries in recent years."
  }, {
    word: "activism",
    translation: "activisme",
    example: "Youth activism has brought attention to climate change issues."
  }, {
    word: "social trend",
    translation: "tendance sociale",
    example: "Working remotely became a major social trend after the pandemic."
  }, {
    word: "collective behavior",
    translation: "comportement collectif",
    example: "Panic buying is an example of collective behavior during crises."
  }, {
    word: "cultural shift",
    translation: "changement culturel",
    example: "Attitudes toward marriage have undergone a cultural shift in recent decades."
  }, {
    word: "social exclusion",
    translation: "exclusion sociale",
    example: "Social exclusion prevents full participation in society."
  }, {
    word: "gender inequality",
    translation: "inégalité de genre",
    example: "Gender inequality persists in many workplaces."
  }, {
    word: "racial disparity",
    translation: "disparité raciale",
    example: "Racial disparities exist in healthcare access and outcomes."
  }, {
    word: "food insecurity",
    translation: "insécurité alimentaire",
    example: "Food insecurity affects millions of households."
  }, {
    word: "substance abuse",
    translation: "toxicomanie",
    example: "Substance abuse has both individual and societal consequences."
  }, {
    word: "domestic violence",
    translation: "violence domestique",
    example: "Domestic violence affects people of all backgrounds."
  }, {
    word: "hate crime",
    translation: "crime haineux",
    example: "The community rallied together after the hate crime."
  }, {
    word: "human trafficking",
    translation: "traite des êtres humains",
    example: "Human trafficking is a form of modern slavery."
  }, {
    word: "child labor",
    translation: "travail des enfants",
    example: "Child labor deprives young people of education and childhood."
  }, {
    word: "juvenile delinquency",
    translation: "délinquance juvénile",
    example: "Prevention programs aim to reduce juvenile delinquency."
  }, {
    word: "healthcare disparity",
    translation: "disparité des soins de santé",
    example: "Healthcare disparities exist between different demographic groups."
  }, {
    word: "educational inequality",
    translation: "inégalité éducative",
    example: "Educational inequality limits opportunities for disadvantaged students."
  }, {
    word: "systemic racism",
    translation: "racisme systémique",
    example: "Systemic racism affects institutions and social structures."
  }, {
    word: "welfare system",
    translation: "système d'aide sociale",
    example: "The welfare system provides financial assistance to those in need."
  }, {
    word: "food bank",
    translation: "banque alimentaire",
    example: "The food bank distributes donations to families in need."
  }, {
    word: "homeless shelter",
    translation: "refuge pour sans-abri",
    example: "The homeless shelter provides temporary accommodation."
  }, {
    word: "social worker",
    translation: "travailleur social",
    example: "The social worker assessed the family's needs."
  }, {
    word: "crisis intervention",
    translation: "intervention de crise",
    example: "Crisis intervention teams respond to emergency situations."
  }, {
    word: "public assistance",
    translation: "aide publique",
    example: "Many families rely on public assistance programs."
  }, {
    word: "child protective services",
    translation: "services de protection de l'enfance",
    example: "Child protective services investigate reports of abuse and neglect."
  }, {
    word: "elder care",
    translation: "soins aux personnes âgées",
    example: "Elder care services help seniors maintain independence."
  }, {
    word: "disability support",
    translation: "soutien aux personnes handicapées",
    example: "Disability support programs provide essential assistance."
  }, {
    word: "rehabilitation program",
    translation: "programme de réhabilitation",
    example: "The rehabilitation program helps former inmates reintegrate into society."
  }, {
    word: "outreach service",
    translation: "service de proximité",
    example: "Outreach services connect with marginalized communities."
  }, {
    word: "multiculturalism",
    translation: "multiculturalisme",
    example: "Multiculturalism celebrates diversity within a society."
  }, {
    word: "integration",
    translation: "intégration",
    example: "Integration policies help immigrants become part of society."
  }, {
    word: "assimilation",
    translation: "assimilation",
    example: "Assimilation involves adopting the dominant culture's practices."
  }, {
    word: "minority group",
    translation: "groupe minoritaire",
    example: "Minority groups may face unique challenges in society."
  }, {
    word: "diaspora",
    translation: "diaspora",
    example: "The diaspora maintains connections to their homeland."
  }, {
    word: "indigenous peoples",
    translation: "peuples autochtones",
    example: "Indigenous peoples have fought for recognition of their rights."
  }, {
    word: "cultural diversity",
    translation: "diversité culturelle",
    example: "Cultural diversity enriches society with different perspectives."
  }, {
    word: "intercultural communication",
    translation: "communication interculturelle",
    example: "Intercultural communication skills are valuable in global businesses."
  }, {
    word: "ethnic enclave",
    translation: "enclave ethnique",
    example: "The neighborhood developed as an ethnic enclave over generations."
  }, {
    word: "representation",
    translation: "représentation",
    example: "Media representation of diverse groups has improved in recent years."
  }, {
    word: "social change",
    translation: "changement social",
    example: "Technology drives rapid social change in modern societies."
  }, {
    word: "progress",
    translation: "progrès",
    example: "Social progress often requires challenging established norms."
  }, {
    word: "revolution",
    translation: "révolution",
    example: "The digital revolution has transformed how we live and work."
  }, {
    word: "reform",
    translation: "réforme",
    example: "Educational reform aims to improve learning outcomes."
  }, {
    word: "paradigm shift",
    translation: "changement de paradigme",
    example: "Remote work represents a paradigm shift in employment practices."
  }, {
    word: "modernization",
    translation: "modernisation",
    example: "Modernization brings both benefits and challenges to traditional societies."
  }, {
    word: "social transformation",
    translation: "transformation sociale",
    example: "The women's movement led to significant social transformation."
  }, {
    word: "cultural evolution",
    translation: "évolution culturelle",
    example: "Cultural evolution happens gradually over generations."
  }, {
    word: "value shift",
    translation: "changement de valeurs",
    example: "Younger generations often reflect a value shift in their priorities."
  }, {
    word: "demographic transition",
    translation: "transition démographique",
    example: "Developing countries undergo demographic transition as they industrialize."
  }, {
    word: "social disruption",
    translation: "perturbation sociale",
    example: "The pandemic caused unprecedented social disruption."
  }, {
    word: "resilience",
    translation: "résilience",
    example: "Communities demonstrate resilience when adapting to major changes."
  }, {
    word: "civic participation",
    translation: "participation civique",
    example: "Voting is a basic form of civic participation."
  }, {
    word: "volunteerism",
    translation: "bénévolat",
    example: "Volunteerism strengthens communities and helps those in need."
  }, {
    word: "grassroots movement",
    translation: "mouvement populaire",
    example: "The environmental initiative began as a grassroots movement."
  }, {
    word: "advocacy",
    translation: "plaidoyer",
    example: "Her advocacy work focuses on children's rights."
  }, {
    word: "community organizing",
    translation: "organisation communautaire",
    example: "Community organizing brings residents together to address local issues."
  }, {
    word: "public forum",
    translation: "forum public",
    example: "The town hall meeting provided a public forum for discussion."
  }, {
    word: "civil society",
    translation: "société civile",
    example: "Civil society organizations play a vital role in democratic systems."
  }, {
    word: "social responsibility",
    translation: "responsabilité sociale",
    example: "Businesses increasingly recognize their social responsibility."
  }, {
    word: "charitable giving",
    translation: "don caritatif",
    example: "Charitable giving supports nonprofit organizations' work."
  }, {
    word: "fundraising",
    translation: "collecte de fonds",
    example: "The fundraising campaign exceeded its target."
  }, {
    word: "collective action",
    translation: "action collective",
    example: "Collective action can lead to meaningful social change."
  }, {
    word: "awareness campaign",
    translation: "campagne de sensibilisation",
    example: "The awareness campaign educated the public about mental health."
  }, {
    word: "voter registration",
    translation: "inscription des électeurs",
    example: "Voter registration drives aim to increase democratic participation."
  }, {
    word: "social entrepreneurship",
    translation: "entrepreneuriat social",
    example: "Social entrepreneurship combines business principles with social goals."
  }]
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,