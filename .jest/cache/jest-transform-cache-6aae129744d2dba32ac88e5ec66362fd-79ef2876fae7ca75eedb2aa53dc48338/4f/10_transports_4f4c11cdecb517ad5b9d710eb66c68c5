ac6b23ccfa87917b308648f1c91398bf
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vocab = void 0;
function cov_2f6m9eh2au() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\10_transports.js";
  var hash = "81973936a0942695212a1bc1bf8dc1f80ebdc534";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\1\\categories\\10_transports.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 21
        },
        end: {
          line: 66,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "81973936a0942695212a1bc1bf8dc1f80ebdc534"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2f6m9eh2au = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2f6m9eh2au();
var vocab = exports.vocab = (cov_2f6m9eh2au().s[0]++, {
  title: "Transports Basiques",
  words: [{
    word: "car",
    translation: "voiture",
    example: "I go to work by car."
  }, {
    word: "bus",
    translation: "bus",
    example: "I take the bus to school."
  }, {
    word: "train",
    translation: "train",
    example: "The train to Paris leaves at 9 am."
  }, {
    word: "plane",
    translation: "avion",
    example: "We travel by plane to visit my grandparents."
  }, {
    word: "subway",
    translation: "m�tro",
    example: "The subway is the fastest way to travel in the city."
  }, {
    word: "tram",
    translation: "tramway",
    example: "There's a new tram line in our city."
  }, {
    word: "taxi",
    translation: "taxi",
    example: "Let's take a taxi to the airport."
  }, {
    word: "bicycle",
    translation: "v�lo",
    example: "I ride my bicycle to work when the weather is good."
  }, {
    word: "bike",
    translation: "v�lo",
    example: "She has a new bike."
  }, {
    word: "motorbike",
    translation: "moto",
    example: "He goes everywhere on his motorbike."
  }, {
    word: "scooter",
    translation: "scooter",
    example: "Many young people use scooters in the city."
  }, {
    word: "boat",
    translation: "bateau",
    example: "We took a boat to visit the island."
  }, {
    word: "ship",
    translation: "navire",
    example: "The ship will arrive at the port tomorrow."
  }, {
    word: "ferry",
    translation: "ferry",
    example: "We took the ferry to cross the channel."
  }, {
    word: "helicopter",
    translation: "h�licopt�re",
    example: "The president arrived by helicopter."
  }, {
    word: "to fly",
    translation: "voler",
    example: "We fly to London next week."
  }, {
    word: "to run",
    translation: "courir",
    example: "He runs to catch the bus."
  }, {
    word: "to catch",
    translation: "attraper",
    example: "I need to catch the 8 o'clock train."
  }, {
    word: "to miss",
    translation: "rater/manquer",
    example: "I missed the bus this morning."
  }, {
    word: "station",
    translation: "gare/station",
    example: "The train station is in the city center."
  }, {
    word: "bus stop",
    translation: "arr�t de bus",
    example: "The bus stop is just around the corner."
  }, {
    word: "airport",
    translation: "a�roport",
    example: "We need to be at the airport two hours before the flight."
  }, {
    word: "port",
    translation: "port",
    example: "The ship is in the port."
  }, {
    word: "terminal",
    translation: "terminal",
    example: "Our flight leaves from terminal 2."
  }, {
    word: "platform",
    translation: "quai",
    example: "The train leaves from platform 3."
  }, {
    word: "parking",
    translation: "parking",
    example: "The parking is full, we need to find another one."
  }, {
    word: "gas station",
    translation: "station-service",
    example: "We need to stop at the gas station."
  }, {
    word: "highway",
    translation: "autoroute",
    example: "Take the highway to get there faster."
  }, {
    word: "way",
    translation: "chemin",
    example: "This is the way to the museum."
  }, {
    word: "ticket",
    translation: "billet",
    example: "I need to buy a ticket for the concert."
  }, {
    word: "one-way ticket",
    translation: "aller simple",
    example: "I'd like a one-way ticket to New York."
  }, {
    word: "round-trip ticket",
    translation: "aller-retour",
    example: "A round-trip ticket costs more than a one-way ticket."
  }, {
    word: "fare",
    translation: "tarif",
    example: "What's the fare for a bus ticket?"
  }, {
    word: "pass",
    translation: "abonnement",
    example: "I have a monthly bus pass."
  }, {
    word: "timetable",
    translation: "horaire",
    example: "Let me check the timetable for the next train."
  }, {
    word: "delay",
    translation: "retard",
    example: "The train has a 30-minute delay."
  }, {
    word: "reservation",
    translation: "r�servation",
    example: "I made a reservation for the 8 pm train."
  }, {
    word: "to book",
    translation: "r�server",
    example: "I need to book my flight tickets."
  }, {
    word: "to cancel",
    translation: "annuler",
    example: "I had to cancel my trip due to bad weather."
  }, {
    word: "passenger",
    translation: "passager",
    example: "The passengers waited for the delayed flight."
  }, {
    word: "driver",
    translation: "conducteur/chauffeur",
    example: "The bus driver was very friendly."
  }, {
    word: "pilot",
    translation: "pilote",
    example: "The pilot announced our arrival time."
  }, {
    word: "luggage",
    translation: "bagage",
    example: "Don't forget your luggage when you leave the train."
  }, {
    word: "suitcase",
    translation: "valise",
    example: "My suitcase is too heavy to carry."
  }, {
    word: "map",
    translation: "carte",
    example: "We need a map to find our way."
  }]
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,