{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_QuizHeader","_QuizContent","_propTypes","_jsxRuntime","ProgressBar","_ref","progress","colors","localStyles","displayProgress","isNaN","Math","round","jsxs","View","style","progressSection","children","jsx","progressTrack","backgroundColor","progressBarQuiz","primary","width","Text","progressText","color","textSecondary","QuizScreen","_ref2","quizEngine","onGoBack","onAnswer","onContinue","slideAnim","shakeAnim","currentIndex","currentQuestionIndex","totalQuestions","score","currentQuestion","selectedAnswer","selectedChoice","showResult","Fragment","default","Animated","flex","transform","translateX","handleAnswer","handleContinue","propTypes","PropTypes","any","isRequired","_default","exports"],"sources":["QuizScreen.js"],"sourcesContent":["// src/screens/VocabularyRevision/components/QuizScreen.js\r\nimport React from 'react';\r\nimport { View, Text, Animated } from 'react-native';\r\nimport QuizHeader from './QuizHeader.js';\r\nimport QuizContent from './QuizContent';import PropTypes from 'prop-types';\n\r\n\r\nconst ProgressBar = ({ progress, colors, localStyles }) => {\r\n  const displayProgress = !progress || isNaN(progress) ? 0 : Math.round(progress);\r\n  return (\r\n    <View style={localStyles.progressSection}>\r\n      <View style={[localStyles.progressTrack, { backgroundColor: '#F3F4F6' }]}>\r\n        <View\r\n          style={[\r\n            localStyles.progressBarQuiz,\r\n            {\r\n              backgroundColor: colors.primary,\r\n              width: `${displayProgress}%`,\r\n            },\r\n          ]}\r\n        />\r\n      </View>\r\n      <Text style={[localStyles.progressText, { color: colors.textSecondary }]}>\r\n        {displayProgress}%\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst QuizScreen = ({\r\n  quizEngine,\r\n  onGoBack,\r\n  onAnswer,\r\n  onContinue,\r\n  slideAnim,\r\n  shakeAnim,\r\n  colors,\r\n  localStyles\r\n}) => {\r\n  const {\r\n    currentQuestionIndex: currentIndex,\r\n    totalQuestions,\r\n    score,\r\n    progress,\r\n    currentQuestion,\r\n    selectedChoice: selectedAnswer,\r\n    showResult,\r\n  } = quizEngine;\r\n\r\n  return (\r\n    <>\r\n      <QuizHeader\r\n        onGoBack={onGoBack}\r\n        currentIndex={currentIndex}\r\n        totalQuestions={totalQuestions}\r\n        score={score}\r\n        colors={colors}\r\n        localStyles={localStyles}\r\n      />\r\n      <ProgressBar progress={progress} colors={colors} localStyles={localStyles} />\r\n      <Animated.View style={{\r\n        flex: 1,\r\n        transform: [\r\n          { translateX: slideAnim },\r\n          { translateX: shakeAnim }\r\n        ]\r\n      }}>\r\n        <QuizContent\r\n          currentQuestion={currentQuestion}\r\n          selectedAnswer={selectedAnswer}\r\n          showResult={showResult}\r\n          handleAnswer={onAnswer}\r\n          handleContinue={onContinue}\r\n          colors={colors}\r\n          localStyles={localStyles}\r\n        />\r\n      </Animated.View>\r\n    </>\r\n  );\r\n};\r\n\r\n\nProgressBar.propTypes = {\n  progress: PropTypes.any.isRequired,\n  colors: PropTypes.any.isRequired,\n  localStyles: PropTypes.any.isRequired,\n};\n\nexport default QuizScreen;"],"mappings":"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","ignoreList":[]}