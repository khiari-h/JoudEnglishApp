33bd13f9912518b93f14e43ccc2f355f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _vectorIcons = require("@expo/vector-icons");
var _HeroCard = _interopRequireDefault(require("../../../../components/ui/HeroCard"));
var _RevealButton = _interopRequireDefault(require("../../../../components/ui/RevealButton"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_2eokn37txk() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingText\\index.js";
  var hash = "c19704f41ffa0fcd8ab65ff0f4a072f4380460c7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingText\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "1": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "2": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "3": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "4": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 38
        }
      },
      "5": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 78
        }
      },
      "6": {
        start: {
          line: 25,
          column: 55
        },
        end: {
          line: 25,
          column: 70
        }
      },
      "7": {
        start: {
          line: 26,
          column: 31
        },
        end: {
          line: 26,
          column: 57
        }
      },
      "8": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 72,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 21
          }
        },
        loc: {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 25,
            column: 48
          }
        },
        loc: {
          start: {
            line: 25,
            column: 55
          },
          end: {
            line: 25,
            column: 70
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 24
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 32
          }
        }, {
          start: {
            line: 24,
            column: 36
          },
          end: {
            line: 24,
            column: 38
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 31
          }
        }, {
          start: {
            line: 32,
            column: 35
          },
          end: {
            line: 32,
            column: 49
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c19704f41ffa0fcd8ab65ff0f4a072f4380460c7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2eokn37txk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2eokn37txk();
cov_2eokn37txk().s[0]++;
var ReadingText = function ReadingText(_ref) {
  var exercise = _ref.exercise,
    textExpanded = _ref.textExpanded,
    onToggleExpand = _ref.onToggleExpand,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_2eokn37txk().b[0][0]++, "#3b82f6") : _ref$levelColor;
  cov_2eokn37txk().f[0]++;
  var styles = (cov_2eokn37txk().s[1]++, (0, _style.default)(levelColor));
  cov_2eokn37txk().s[2]++;
  if (!exercise) {
    cov_2eokn37txk().b[1][0]++;
    cov_2eokn37txk().s[3]++;
    return null;
  } else {
    cov_2eokn37txk().b[1][1]++;
  }
  var fullText = (cov_2eokn37txk().s[4]++, (cov_2eokn37txk().b[2][0]++, exercise.text) || (cov_2eokn37txk().b[2][1]++, ""));
  var wordCount = (cov_2eokn37txk().s[5]++, fullText.split(' ').filter(function (word) {
    cov_2eokn37txk().f[1]++;
    cov_2eokn37txk().s[6]++;
    return word.length > 0;
  }).length);
  var estimatedReadingTime = (cov_2eokn37txk().s[7]++, Math.ceil(wordCount / 200));
  cov_2eokn37txk().s[8]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_HeroCard.default, {
      content: (cov_2eokn37txk().b[3][0]++, exercise.title) || (cov_2eokn37txk().b[3][1]++, "Reading Text"),
      fontSize: 24,
      levelColor: levelColor,
      showUnderline: false,
      icon: "book-outline"
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.infoContainer,
      children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.infoItem,
        children: [(0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
          name: "time-outline",
          size: 16,
          color: levelColor
        }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: [styles.infoText, {
            color: levelColor
          }],
          children: ["~", estimatedReadingTime, " min read"]
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.infoItem,
        children: [(0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
          name: "text-outline",
          size: 16,
          color: levelColor
        }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: [styles.infoText, {
            color: levelColor
          }],
          children: [wordCount, " words"]
        })]
      })]
    }), (0, _jsxRuntime.jsx)(_RevealButton.default, {
      isRevealed: textExpanded,
      revealedContent: fullText,
      revealText: "\uD83D\uDCD6 Read Full Text",
      hideText: "\uD83D\uDCD6 Collapse Text",
      onToggle: onToggleExpand,
      levelColor: levelColor,
      contentColor: "#374151",
      contentStyle: {
        fontSize: 16,
        lineHeight: 24,
        textAlign: 'justify'
      }
    })]
  });
};
var _default = exports.default = ReadingText;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,