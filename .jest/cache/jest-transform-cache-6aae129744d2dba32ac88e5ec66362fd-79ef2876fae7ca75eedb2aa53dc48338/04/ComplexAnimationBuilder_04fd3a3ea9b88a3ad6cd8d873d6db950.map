{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","ComplexAnimationBuilder","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_animation","_BaseAnimationBuilder2","_util","_callSuper","t","o","e","default","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_BaseAnimationBuilder","arguments","key","easing","easingFunction","__DEV__","assertEasingIsWorklet","easingV","rotate","degree","rotateV","springify","duration","durationV","type","withSpring","dampingRatio","dampingRatioV","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","withInitialValues","values","initialValues","getAnimationAndConfig","withTiming","animation","config","maybeSetConfigValue","variableName","forEach","_ref","instance","createInstance","BaseAnimationBuilder"],"sources":["ComplexAnimationBuilder.ts"],"sourcesContent":["'use strict';\nimport { withTiming, withSpring } from '../../animation';\nimport type {\n  AnimationFunction,\n  BaseBuilderAnimationConfig,\n  LayoutAnimationAndConfig,\n} from './commonTypes';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nimport type { StyleProps, EasingFunction } from '../../commonTypes';\nimport { assertEasingIsWorklet } from '../../animation/util';\n\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n  easingV?: EasingFunction;\n  rotateV?: string;\n  type?: AnimationFunction;\n  dampingV?: number;\n  dampingRatioV?: number;\n  massV?: number;\n  stiffnessV?: number;\n  overshootClampingV?: number;\n  restDisplacementThresholdV?: number;\n  restSpeedThresholdV?: number;\n  initialValues?: StyleProps;\n\n  static createInstance: <T extends typeof BaseAnimationBuilder>(\n    this: T\n  ) => InstanceType<T>;\n\n  /**\n   * Lets you change the easing curve of the animation. Can be chained alongside\n   * other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param easingFunction - An easing function which defines the animation\n   *   curve.\n   */\n  static easing<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    easingFunction: EasingFunction\n  ) {\n    const instance = this.createInstance();\n    return instance.easing(easingFunction);\n  }\n\n  easing(easingFunction: EasingFunction): this {\n    if (__DEV__) {\n      assertEasingIsWorklet(easingFunction);\n    }\n    this.easingV = easingFunction;\n    return this;\n  }\n\n  /**\n   * Lets you rotate the element. Can be chained alongside other [layout\n   * animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param degree - The rotation degree.\n   */\n  static rotate<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    degree: string\n  ) {\n    const instance = this.createInstance();\n    return instance.rotate(degree);\n  }\n\n  rotate(degree: string): this {\n    this.rotateV = degree;\n    return this;\n  }\n\n  /**\n   * Enables the spring-based animation configuration. Can be chained alongside\n   * other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param duration - An optional duration of the spring animation (in\n   *   milliseconds).\n   */\n  static springify<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    duration?: number\n  ): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.springify(duration);\n  }\n\n  springify(duration?: number): this {\n    this.durationV = duration;\n    this.type = withSpring as AnimationFunction;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the spring animation damping ratio. Can be chained\n   * alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param dampingRatio - How damped the spring is.\n   */\n  static dampingRatio<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    dampingRatio: number\n  ) {\n    const instance = this.createInstance();\n    return instance.dampingRatio(dampingRatio);\n  }\n\n  dampingRatio(value: number): this {\n    this.dampingRatioV = value;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the spring animation damping. Can be chained alongside\n   * other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param value - Decides how quickly a spring stops moving. Higher damping\n   *   means the spring will come to rest faster.\n   */\n  static damping<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    damping: number\n  ) {\n    const instance = this.createInstance();\n    return instance.damping(damping);\n  }\n\n  damping(damping: number): this {\n    this.dampingV = damping;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the spring animation mass. Can be chained alongside other\n   * [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param mass - The weight of the spring. Reducing this value makes the\n   *   animation faster.\n   */\n  static mass<T extends typeof ComplexAnimationBuilder>(this: T, mass: number) {\n    const instance = this.createInstance();\n    return instance.mass(mass);\n  }\n\n  mass(mass: number): this {\n    this.massV = mass;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the stiffness of the spring animation. Can be chained\n   * alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param stiffness - How bouncy the spring is.\n   */\n  static stiffness<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    stiffness: number\n  ) {\n    const instance = this.createInstance();\n    return instance.stiffness(stiffness);\n  }\n\n  stiffness(stiffness: number): this {\n    this.stiffnessV = stiffness;\n    return this;\n  }\n\n  /**\n   * Lets you adjust overshoot clamping of the spring. Can be chained alongside\n   * other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param overshootClamping - Whether a spring can bounce over the final\n   *   position.\n   */\n  static overshootClamping<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    overshootClamping: number\n  ) {\n    const instance = this.createInstance();\n    return instance.overshootClamping(overshootClamping);\n  }\n\n  overshootClamping(overshootClamping: number): this {\n    this.overshootClampingV = overshootClamping;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the rest displacement threshold of the spring animation.\n   * Can be chained alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param restDisplacementThreshold - The displacement below which the spring\n   *   will snap to the designated position without further oscillations.\n   */\n  static restDisplacementThreshold<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    restDisplacementThreshold: number\n  ) {\n    const instance = this.createInstance();\n    return instance.restDisplacementThreshold(restDisplacementThreshold);\n  }\n\n  restDisplacementThreshold(restDisplacementThreshold: number) {\n    this.restDisplacementThresholdV = restDisplacementThreshold;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the rest speed threshold of the spring animation. Can be\n   * chained alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param restSpeedThreshold - The speed in pixels per second from which the\n   *   spring will snap to the designated position without further\n   *   oscillations.\n   */\n  static restSpeedThreshold<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    restSpeedThreshold: number\n  ) {\n    const instance = this.createInstance();\n    return instance.restSpeedThreshold(restSpeedThreshold);\n  }\n\n  restSpeedThreshold(restSpeedThreshold: number): this {\n    this.restSpeedThresholdV = restSpeedThreshold;\n    return this;\n  }\n\n  /**\n   * Lets you override the initial config of the animation\n   *\n   * @param values - An object containing the styles to override.\n   */\n  static withInitialValues<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    values: StyleProps\n  ) {\n    const instance = this.createInstance();\n    return instance.withInitialValues(values);\n  }\n\n  withInitialValues(values: StyleProps): this {\n    this.initialValues = values;\n    return this;\n  }\n\n  getAnimationAndConfig(): LayoutAnimationAndConfig {\n    const duration = this.durationV;\n    const easing = this.easingV;\n    const rotate = this.rotateV;\n    const type = this.type ? this.type : (withTiming as AnimationFunction);\n    const damping = this.dampingV;\n    const dampingRatio = this.dampingRatioV;\n    const mass = this.massV;\n    const stiffness = this.stiffnessV;\n    const overshootClamping = this.overshootClampingV;\n    const restDisplacementThreshold = this.restDisplacementThresholdV;\n    const restSpeedThreshold = this.restSpeedThresholdV;\n\n    const animation = type;\n\n    const config: BaseBuilderAnimationConfig = {};\n\n    function maybeSetConfigValue<Key extends keyof BaseBuilderAnimationConfig>(\n      value: BaseBuilderAnimationConfig[Key],\n      variableName: Key\n    ) {\n      if (value) {\n        config[variableName] = value;\n      }\n    }\n\n    if (type === withTiming) {\n      maybeSetConfigValue(easing, 'easing');\n    }\n\n    (\n      [\n        { variableName: 'damping', value: damping },\n        { variableName: 'dampingRatio', value: dampingRatio },\n        { variableName: 'mass', value: mass },\n        { variableName: 'stiffness', value: stiffness },\n        { variableName: 'overshootClamping', value: overshootClamping },\n        {\n          variableName: 'restDisplacementThreshold',\n          value: restDisplacementThreshold,\n        },\n        { variableName: 'restSpeedThreshold', value: restSpeedThreshold },\n        { variableName: 'duration', value: duration },\n        { variableName: 'rotate', value: rotate },\n      ] as const\n    ).forEach(({ value, variableName }) =>\n      maybeSetConfigValue(value, variableName)\n    );\n\n    return [animation, config];\n  }\n}\n"],"mappings":"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","ignoreList":[]}