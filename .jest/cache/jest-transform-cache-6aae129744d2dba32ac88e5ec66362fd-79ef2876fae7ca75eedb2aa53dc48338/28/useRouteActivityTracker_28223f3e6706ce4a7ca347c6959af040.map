{"version":3,"names":["_react","require","_expoRouter","_useActivityMetrics2","_interopRequireDefault","useRouteActivityTracker","segments","useSegments","pathname","usePathname","_useActivityMetrics","useActivityMetrics","startSession","endSession","updateStreak","currentSessionRef","useRef","isTrackingRef","lastPathnameRef","useEffect","current","isExercise","some","segment","includes","exerciseType","length","error","console","warn","_default","exports","default"],"sources":["useRouteActivityTracker.js"],"sourcesContent":["// src/hooks/useRouteActivityTracker.js - VERSION CORRIGÉE SANS BOUCLE\r\nimport { useEffect, useRef } from 'react';\r\nimport { useSegments, usePathname } from 'expo-router';\r\nimport useActivityMetrics from './useActivityMetrics';\r\n\r\nconst useRouteActivityTracker = () => {\r\n  const segments = useSegments();\r\n  const pathname = usePathname();\r\n  const { startSession, endSession, updateStreak } = useActivityMetrics();\r\n  \r\n  // ✅ CORRECTION : Refs pour éviter les appels en boucle\r\n  const currentSessionRef = useRef(null);\r\n  const isTrackingRef = useRef(false);\r\n  const lastPathnameRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // ✅ CORRECTION : Eviter les re-déclenchements inutiles\r\n    if (lastPathnameRef.current === pathname) {\r\n      return;\r\n    }\r\n    lastPathnameRef.current = pathname;\r\n\r\n    // Vérifier si c'est un exercice\r\n    const isExercise = segments.some(segment => \r\n      segment.includes('Exercise') ||\r\n      segment.includes('exercise') ||\r\n      segment.includes('Assessment') ||\r\n      segment.includes('assessment')\r\n    );\r\n\r\n    if (isExercise) {\r\n      // Récupérer le type d'exercice (dernier segment)\r\n      const exerciseType = segments[segments.length - 1];\r\n      \r\n      // ✅ CORRECTION : Logique directe sans callbacks\r\n      if (!isTrackingRef.current || currentSessionRef.current !== exerciseType) {\r\n        // Arrêter la session précédente si elle existe\r\n        if (isTrackingRef.current) {\r\n          try {\r\n            endSession();\r\n            updateStreak();\r\n          } catch (error) {\r\n            console.warn('Erreur lors de la fin de session:', error);\r\n          }\r\n        }\r\n        \r\n        // Démarrer la nouvelle session\r\n        try {\r\n          isTrackingRef.current = true;\r\n          currentSessionRef.current = exerciseType;\r\n          startSession(exerciseType);\r\n        } catch (error) {\r\n          console.warn('Erreur lors du démarrage de session:', error);\r\n          isTrackingRef.current = false;\r\n          currentSessionRef.current = null;\r\n        }\r\n      }\r\n    } else {\r\n      // Si on n'est plus sur un exercice, arrêter la session\r\n      if (isTrackingRef.current) {\r\n        try {\r\n          isTrackingRef.current = false;\r\n          currentSessionRef.current = null;\r\n          endSession();\r\n          updateStreak();\r\n        } catch (error) {\r\n          console.warn('Erreur lors de la fin de session:', error);\r\n        }\r\n      }\r\n    }\r\n\r\n    // ✅ CORRECTION : Cleanup unique et stable\r\n    return () => {\r\n      if (isTrackingRef.current) {\r\n        try {\r\n          isTrackingRef.current = false;\r\n          currentSessionRef.current = null;\r\n          endSession();\r\n        } catch (error) {\r\n          console.warn('Erreur lors du cleanup:', error);\r\n        }\r\n      }\r\n      // Suppression du return null (aucun return attendu)\r\n    };\r\n  }, [segments, pathname]); // ✅ CORRIGÉ : Seulement les vraies dépendances\r\n\r\n  // ✅ CORRECTION : Cleanup final seulement au démontage\r\n  useEffect(() => {\r\n    return () => {\r\n      if (isTrackingRef.current) {\r\n        try {\r\n          endSession();\r\n        } catch (error) {\r\n          console.warn('Erreur lors du cleanup final:', error);\r\n        }\r\n      }\r\n    };\r\n  }, []); // ✅ CORRIGÉ : Aucune dépendance = seulement au démontage\r\n\r\n  // Pas de rendu\r\n};\r\n\r\nexport default useRouteActivityTracker;"],"mappings":"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","ignoreList":[]}