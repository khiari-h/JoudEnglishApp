{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","TransitionGenerator","createAnimationWithInitialValues","createCustomKeyFrameAnimation","_defineProperty2","_objectWithoutProperties2","_slicedToArray2","_config","_animationParser","_Linear","_Sequenced","_Fading","_Jumping","_domUtils","_Curved","_EntryExit","_excluded","addPxToTransform","transform","newTransform","map","transformProp","newTransformProp","_ref","entries","_ref2","default","key","includes","keyframeDefinitions","values","animationData","name","style","duration","generateNextCustomKeyframeName","parsedKeyframe","convertAnimationObjectToKeyframes","insertWebAnimation","animationName","initialValues","animationStyle","structuredClone","AnimationsData","firstAnimationStep","rest","transformWithPx","transformStyle","Map","rule","_ref3","_ref4","property","set","_ref5","_ref6","Array","from","_ref7","_ref8","assign","keyframeName","animationObject","keyframe","customKeyframeCounter","transitionType","transitionData","transitionKeyframeName","dummyTransitionKeyframeName","transitionObject","TransitionType","LINEAR","LinearTransition","SEQUENCED","SequencedTransition","FADING","FadingTransition","JUMPING","JumpingTransition","CURVED","_CurvedTransition","CurvedTransition","firstKeyframeObj","secondKeyframeObj","dummyKeyframe","ENTRY_EXIT","EntryExitTransition","transitionKeyframe"],"sources":["createAnimation.ts"],"sourcesContent":["'use strict';\n\nimport { AnimationsData, TransitionType } from './config';\nimport type { InitialValuesStyleProps, KeyframeDefinitions } from './config';\nimport { convertAnimationObjectToKeyframes } from './animationParser';\nimport type {\n  AnimationData,\n  ReanimatedWebTransformProperties,\n  TransitionData,\n} from './animationParser';\nimport type { TransformsStyle } from 'react-native';\nimport { LinearTransition } from './transition/Linear.web';\nimport { SequencedTransition } from './transition/Sequenced.web';\nimport { FadingTransition } from './transition/Fading.web';\nimport { JumpingTransition } from './transition/Jumping.web';\nimport { insertWebAnimation } from './domUtils';\nimport { CurvedTransition } from './transition/Curved.web';\nimport { EntryExitTransition } from './transition/EntryExit.web';\n\ntype TransformType = NonNullable<TransformsStyle['transform']>;\n\n// Translate values are passed as numbers. However, if `translate` property receives number, it will not automatically\n// convert it to `px`. Therefore if we want to keep transform we have to add 'px' suffix to each of translate values\n// that are present inside transform.\n//\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction addPxToTransform(transform: TransformType) {\n  type RNTransformProp = (typeof transform)[number];\n\n  // @ts-ignore `existingTransform` cannot be string because in that case\n  // we throw error in `extractTransformFromStyle`\n  const newTransform = transform.map((transformProp: RNTransformProp) => {\n    const newTransformProp: ReanimatedWebTransformProperties = {};\n    for (const [key, value] of Object.entries(transformProp)) {\n      if (\n        (key.includes('translate') || key.includes('perspective')) &&\n        typeof value === 'number'\n      ) {\n        // @ts-ignore After many trials we decided to ignore this error - it says that we cannot use 'key' to index this object.\n        // Sadly it doesn't go away after using cast `key as keyof TransformProperties`.\n        newTransformProp[key] = `${value}px`;\n      } else {\n        // @ts-ignore same as above.\n        newTransformProp[key] = value;\n      }\n    }\n    return newTransformProp;\n  });\n\n  return newTransform;\n}\n\nexport function createCustomKeyFrameAnimation(\n  keyframeDefinitions: KeyframeDefinitions\n) {\n  for (const value of Object.values(keyframeDefinitions)) {\n    if (value.transform) {\n      value.transform = addPxToTransform(value.transform as TransformType);\n    }\n  }\n\n  const animationData: AnimationData = {\n    name: '',\n    style: keyframeDefinitions,\n    duration: -1,\n  };\n\n  animationData.name = generateNextCustomKeyframeName();\n\n  const parsedKeyframe = convertAnimationObjectToKeyframes(animationData);\n\n  insertWebAnimation(animationData.name, parsedKeyframe);\n\n  return animationData.name;\n}\n\nexport function createAnimationWithInitialValues(\n  animationName: string,\n  initialValues: InitialValuesStyleProps\n) {\n  const animationStyle = structuredClone(AnimationsData[animationName].style);\n  const firstAnimationStep = animationStyle['0'];\n\n  const { transform, ...rest } = initialValues;\n  const transformWithPx = addPxToTransform(transform as TransformType);\n\n  if (transform) {\n    // If there was no predefined transform, we can simply assign transform from `initialValues`.\n    if (!firstAnimationStep.transform) {\n      firstAnimationStep.transform = transformWithPx;\n    } else {\n      // Othwerwise we have to merge predefined transform with the one provided in `initialValues`.\n      // To do that, we create `Map` that will contain final transform.\n      const transformStyle = new Map<string, any>();\n\n      // First we assign all of the predefined rules\n      for (const rule of firstAnimationStep.transform) {\n        // In most cases there will be just one iteration\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Then we either add new rule, or override one that already exists.\n      for (const rule of transformWithPx) {\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Finally, we convert `Map` with final transform back into array of objects.\n      firstAnimationStep.transform = Array.from(\n        transformStyle,\n        ([property, value]) => ({\n          [property]: value,\n        })\n      );\n    }\n  }\n\n  animationStyle['0'] = {\n    ...animationStyle['0'],\n    ...rest,\n  };\n\n  // TODO: Maybe we can extract the logic below into separate function\n  const keyframeName = generateNextCustomKeyframeName();\n\n  const animationObject: AnimationData = {\n    name: keyframeName,\n    style: animationStyle,\n    duration: AnimationsData[animationName].duration,\n  };\n\n  const keyframe = convertAnimationObjectToKeyframes(animationObject);\n\n  insertWebAnimation(keyframeName, keyframe);\n\n  return keyframeName;\n}\n\nlet customKeyframeCounter = 0;\n\nfunction generateNextCustomKeyframeName() {\n  return `REA${customKeyframeCounter++}`;\n}\n\n/**\n * Creates transition of given type, appends it to stylesheet and returns\n * keyframe name.\n *\n * @param transitionType - Type of transition (e.g. LINEAR).\n * @param transitionData - Object containing data for transforms (translateX,\n *   scaleX,...).\n * @returns Keyframe name that represents transition.\n */\nexport function TransitionGenerator(\n  transitionType: TransitionType,\n  transitionData: TransitionData\n) {\n  const transitionKeyframeName = generateNextCustomKeyframeName();\n  let dummyTransitionKeyframeName;\n\n  let transitionObject;\n\n  switch (transitionType) {\n    case TransitionType.LINEAR:\n      transitionObject = LinearTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.SEQUENCED:\n      transitionObject = SequencedTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.FADING:\n      transitionObject = FadingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.JUMPING:\n      transitionObject = JumpingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n\n    // Here code block with {} is necessary because of eslint\n    case TransitionType.CURVED: {\n      dummyTransitionKeyframeName = generateNextCustomKeyframeName();\n\n      const { firstKeyframeObj, secondKeyframeObj } = CurvedTransition(\n        transitionKeyframeName,\n        dummyTransitionKeyframeName,\n        transitionData\n      );\n\n      transitionObject = firstKeyframeObj;\n\n      const dummyKeyframe =\n        convertAnimationObjectToKeyframes(secondKeyframeObj);\n\n      insertWebAnimation(dummyTransitionKeyframeName, dummyKeyframe);\n\n      break;\n    }\n    case TransitionType.ENTRY_EXIT:\n      transitionObject = EntryExitTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n  }\n\n  const transitionKeyframe =\n    convertAnimationObjectToKeyframes(transitionObject);\n\n  insertWebAnimation(transitionKeyframeName, transitionKeyframe);\n\n  return { transitionKeyframeName, dummyTransitionKeyframeName };\n}\n"],"mappings":"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","ignoreList":[]}