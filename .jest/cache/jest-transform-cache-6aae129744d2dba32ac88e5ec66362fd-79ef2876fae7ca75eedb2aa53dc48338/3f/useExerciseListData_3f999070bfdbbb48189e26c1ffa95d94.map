{"version":3,"names":["_react","require","_constants","cov_k56g13efw","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","useExerciseListData","_ref","level","getExerciseProgress","hasProgress","levelInfo","useMemo","LANGUAGE_LEVELS","exercises","list","Object","values","EXERCISES","forEach","exercise","BONUS_EXERCISES","includes","id","fastProgress","push","assign","progress","isFast","has"],"sources":["useExerciseListData.js"],"sourcesContent":["// src/screens/ExerciseSelection/hooks/useExerciseListData.js\r\nimport { useMemo } from \"react\";\r\nimport { EXERCISES, BONUS_EXERCISES, LANGUAGE_LEVELS } from \"../../../utils/constants\";\r\n\r\nexport default function useExerciseListData({ level, getExerciseProgress, hasProgress }) {\r\n  const levelInfo = useMemo(() => {\r\n    return LANGUAGE_LEVELS[level] || null;\r\n  }, [level]);\r\n\r\n  const exercises = useMemo(() => {\r\n    const list = [];\r\n    Object.values(EXERCISES).forEach((exercise) => {\r\n      if (level === \"bonus\" && !BONUS_EXERCISES.includes(exercise.id)) return;\r\n\r\n      if (exercise.id === \"vocabulary_fast\") {\r\n        const fastProgress = getExerciseProgress(\"vocabulary_fast\", level);\r\n        list.push({ ...exercise, progress: fastProgress, hasProgress: fastProgress > 0, isFast: true });\r\n        return;\r\n      }\r\n\r\n      const progress = getExerciseProgress(exercise.id, level);\r\n      const has = hasProgress(exercise.id, level);\r\n      list.push({ ...exercise, progress, hasProgress: has, isFast: false });\r\n    });\r\n    return list;\r\n  }, [level, getExerciseProgress, hasProgress]);\r\n\r\n  return { levelInfo, exercises };\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}