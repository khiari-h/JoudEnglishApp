{"version":3,"names":["_react","require","_reactNative","_native","_expoRouter","_propTypes","_interopRequireDefault","_Container","_interopRequireWildcard","_WordGamesHeader","_WordGamesProgress","_WordGamesCard","_WordGamesNavigation","_WordGamesResults","_useWordGames2","_useLastActivity2","_wordGamesDataHelper","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","WordGamesExercise","_ref","route","navigation","useNavigation","_ref2","params","_ref2$level","level","styles","createStyles","_useLastActivity","useLastActivity","saveActivity","levelColor","getLevelColor","wordGamesData","useMemo","getWordGamesData","_useWordGames","useWordGames","currentGameIndex","selectedItems","matchedItems","showFeedback","isCorrect","showResults","gameResults","shuffledOptions","loaded","games","currentGame","totalGames","fadeAnim","bounceAnim","handleSelectItem","checkAnswer","handleNext","handlePrevious","resetGames","canGoToPrevious","isLastGame","stats","display","activityMetadata","game","gameType","type","gameTitle","title","score","handleSaveActivity","useCallback","length","metadata","useEffect","handleBackPress","router","push","pathname","handleCheckAnswer","handleNextGame","handlePreviousGame","handleResetGames","handleContinue","goBack","jsxs","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","ALL","backgroundColor","statusBarStyle","children","jsx","onBackPress","View","style","loadingContainer","ActivityIndicator","testID","size","color","emptyContainer","finalScore","onPlayAgain","onContinue","withPadding","completedGames","completedGamesCount","onSelectItem","canGoPrevious","onCheckAnswer","onNext","onPrevious","_default","exports","propTypes","PropTypes","shape","string","isRequired"],"sources":["index.js"],"sourcesContent":["// src/screens/exercises/wordGames/index.js - VERSION CORRIGÃ‰E\r\nimport { useMemo, useEffect, useCallback } from \"react\";\r\nimport { View, ActivityIndicator } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { router } from \"expo-router\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// Layout\r\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\r\n\r\n// Components\r\nimport WordGamesHeader from \"./WordGamesHeader\";\r\nimport WordGamesProgress from \"./WordGamesProgress\";\r\nimport WordGamesCard from \"./WordGamesCard\";\r\nimport WordGamesNavigation from \"./WordGamesNavigation\";\r\nimport WordGamesResults from \"./WordGamesResults\";\r\n\r\n// Hook & Utils\r\nimport useWordGames from \"./hooks/useWordGames\";\r\nimport useLastActivity from \"../../../hooks/useLastActivity\";\r\nimport { getWordGamesData, getLevelColor } from \"../../../utils/wordGames/wordGamesDataHelper\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ðŸŽ¯ WordGamesExercise - VERSION CORRIGÃ‰E\r\n */\r\nconst WordGamesExercise = ({ route }) => {\r\n  const navigation = useNavigation();\r\n  const { level = \"A1\" } = route?.params || {};\r\n  const styles = createStyles();\r\n\r\n  // Hook pour sauvegarder l'activitÃ©\r\n  const { saveActivity } = useLastActivity();\r\n\r\n  // Data\r\n  const levelColor = getLevelColor(level);\r\n  const wordGamesData = useMemo(() => getWordGamesData(level), [level]);\r\n\r\n  // Hook unifiÃ©\r\n  const {\r\n    currentGameIndex,\r\n    selectedItems,\r\n    matchedItems,\r\n    showFeedback,\r\n    isCorrect,\r\n    showResults,\r\n    gameResults,\r\n    shuffledOptions,\r\n    loaded,\r\n    games,\r\n    currentGame,\r\n    totalGames,\r\n    fadeAnim,\r\n    bounceAnim,\r\n    handleSelectItem,\r\n    checkAnswer,\r\n    handleNext,\r\n    handlePrevious,\r\n    resetGames,\r\n    canGoToPrevious,\r\n    isLastGame,\r\n    stats,\r\n    display,\r\n  } = useWordGames(wordGamesData, level);\r\n\r\n  // âœ… CORRECTION : MÃ©moriser les mÃ©tadonnÃ©es\r\n  const activityMetadata = useMemo(() => ({\r\n    game: currentGameIndex,\r\n    totalGames,\r\n    gameType: currentGame?.type || \"matching\",\r\n    gameTitle: currentGame?.title || `Jeu ${currentGameIndex + 1}`,\r\n    score: stats?.score || 0\r\n  }), [currentGameIndex, totalGames, currentGame?.type, currentGame?.title, stats?.score]);\r\n\r\n  // âœ… CORRECTION : Callback mÃ©morisÃ© pour saveActivity\r\n  const handleSaveActivity = useCallback(() => {\r\n    if (loaded && games.length > 0 && currentGame && !showResults) {\r\n      saveActivity({\r\n        title: \"Jeux de mots\",\r\n        level,\r\n        type: \"wordGames\",\r\n        metadata: activityMetadata\r\n      });\r\n    }\r\n  }, [loaded, games.length, currentGame, showResults, level, saveActivity, activityMetadata]);\r\n\r\n  // âœ… CORRECTION : useEffect optimisÃ©\r\n  useEffect(() => {\r\n    handleSaveActivity();\r\n  }, [handleSaveActivity]);\r\n\r\n  // Handlers\r\n  const handleBackPress = useCallback(() => {\r\n    router.push({\r\n      pathname: \"/tabs/exerciseSelection\",\r\n      params: { level }\r\n    });\r\n  }, [level]);\r\n\r\n  const handleCheckAnswer = useCallback(() => checkAnswer(), [checkAnswer]);\r\n\r\n  const handleNextGame = useCallback(() => {\r\n    handleNext();\r\n    // Navigation automatique quand tous les jeux sont terminÃ©s\r\n  }, [handleNext]);\r\n\r\n  const handlePreviousGame = useCallback(() => handlePrevious(), [handlePrevious]);\r\n\r\n  const handleResetGames = useCallback(() => resetGames(), [resetGames]);\r\n\r\n  const handleContinue = useCallback(() => navigation.goBack(), [navigation]);\r\n\r\n  // Loading state\r\n  if (!loaded || !currentGame) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <WordGamesHeader\r\n          level={level}\r\n          onBackPress={handleBackPress}\r\n        />\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator testID=\"activity-indicator\" size=\"large\" color={levelColor} />\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // Empty games state\r\n  if (games.length === 0) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <WordGamesHeader\r\n          level={level}\r\n          onBackPress={handleBackPress}\r\n        />\r\n        <View style={styles.emptyContainer}>\r\n          <ActivityIndicator testID=\"activity-indicator\" size=\"large\" color={levelColor} />\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // Results state\r\n  if (showResults) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <WordGamesResults\r\n          games={games}\r\n          gameResults={gameResults}\r\n          finalScore={stats}\r\n          levelColor={levelColor}\r\n          onPlayAgain={handleResetGames}\r\n          onContinue={handleContinue}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      safeArea\r\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n      backgroundColor=\"#f8fafc\"\r\n      statusBarStyle=\"dark-content\"\r\n      withPadding={false}\r\n    >\r\n      {/* Header */}\r\n      <WordGamesHeader\r\n        level={level}\r\n        onBackPress={handleBackPress}\r\n      />\r\n\r\n      {/* Progress */}\r\n      <WordGamesProgress\r\n        currentGame={display.currentGameIndex}\r\n        totalGames={totalGames}\r\n        gameTitle={display.gameTitle}\r\n        completedGames={stats.completedGamesCount}\r\n        levelColor={levelColor}\r\n        gameResults={gameResults}\r\n        level={level}\r\n      />\r\n\r\n      {/* Game Card */}\r\n      <WordGamesCard\r\n        currentGame={currentGame}\r\n        selectedItems={selectedItems}\r\n        matchedItems={matchedItems}\r\n        shuffledOptions={shuffledOptions}\r\n        showFeedback={showFeedback}\r\n        isCorrect={isCorrect}\r\n        levelColor={levelColor}\r\n        fadeAnim={fadeAnim}\r\n        bounceAnim={bounceAnim}\r\n        onSelectItem={handleSelectItem}\r\n      />\r\n\r\n      {/* Navigation */}\r\n      <WordGamesNavigation\r\n        currentGame={currentGame}\r\n        showFeedback={showFeedback}\r\n        selectedItems={selectedItems}\r\n        isLastGame={isLastGame}\r\n        canGoPrevious={canGoToPrevious}\r\n        levelColor={levelColor}\r\n        onCheckAnswer={handleCheckAnswer}\r\n        onNext={handleNextGame}\r\n        onPrevious={handlePreviousGame}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WordGamesExercise;\r\n\r\n// âœ… Ajout de la validation des props\r\nWordGamesExercise.propTypes = {\r\n  route: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      level: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};"],"mappings":"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","ignoreList":[]}