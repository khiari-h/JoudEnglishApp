{"version":3,"names":["_getJestObj","mock","LinearGradient","_ref","children","props","_objectWithoutProperties2","default","_excluded","_require","require","View","_jsxRuntime","jsx","Object","assign","router","push","mockRouterPush","useProgress","mockUseProgress","useCurrentLevel","mockUseCurrentLevel","__esModule","mockUseRealTimeProgress","mockUseLastActivity","_require2","Text","TouchableOpacity","_ref2","level","levelColor","onLevelChange","jsxs","testID","onPress","_require3","_ref3","lastActivity","isLoading","Fragment","title","type","_require4","_ref4","currentLevel","onActionPress","_require5","_ref5","accentColor","metrics","streak","totalWords","_require6","FlatList","_ref6","globalProgress","levels","onSelectLevel","onChangeLevelVisual","map","id","progress","_require7","ScrollView","Container","_ref7","safeAreaEdges","refreshControl","onRefresh","_excluded2","refreshing","CONTAINER_SAFE_EDGES","NO_BOTTOM","ALL","_require8","_ref8","onStartRevision","LANGUAGE_LEVELS","color","icon","EXERCISES","vocabulary","route","grammar","listening","_interopRequireDefault","_asyncToGenerator2","_react","_reactNative","_Dashboard","_ThemeContext","_require9","jest","fn","describe","defaultThemeContext","colors","background","primary","surface","text","textSecondary","defaultProgressContext","level1","level2","level3","error","defaultCurrentLevelContext","setCurrentLevel","defaultLastActivity","metadata","word","defaultMetrics","completedLessons","setupMocks","overrides","arguments","length","undefined","_overrides$progressCo","progressContext","_overrides$currentLev","currentLevelContext","_overrides$lastActivi","_overrides$isActivity","isActivityLoading","_overrides$realTimePr","realTimeProgressData","_overrides$isRealTime","isRealTimeLoading","_overrides$metrics","mockReturnValue","reload","mockResolvedValue","getLevelProgress","refresh","renderDashboard","themeValue","render","ThemeContext","Provider","value","beforeEach","clearAllMocks","mockClear","it","_renderDashboard","getByTestId","waitFor","expect","toBeTruthy","_renderDashboard2","getByText","_renderDashboard3","toBe","_renderDashboard4","colorElement","mockSetCurrentLevel","_renderDashboard5","changeButton","fireEvent","press","toHaveBeenCalledWith","_renderDashboard6","_renderDashboard7","levelButton","_renderDashboard8","continueText","activityType","_renderDashboard9","_renderDashboard0","_renderDashboard1","continueButton","pathname","params","_renderDashboard10","_renderDashboard11","_renderDashboard12","_renderDashboard13","quickActionsLevel","_renderDashboard14","vocabAction","_renderDashboard15","grammarAction","_renderDashboard16","metricsColor","total","_renderDashboard17","_renderDashboard18","_renderDashboard19","_renderDashboard20","exploreButton","exploreText","_renderDashboard21","revisionLevel","_renderDashboard22","startButton","customTheme","_renderDashboard23","_render","_renderDashboard24","_renderDashboard25","_renderDashboard26","_renderDashboard27","mockRefresh","_renderDashboard28","_renderDashboard29","testIds","forEach","testId","_renderDashboard30","_renderDashboard31"],"sources":["Dashboard.test.js"],"sourcesContent":["// __tests__/screens/Dashboard/Dashboard.test.js\nimport React from 'react';\nimport { render, fireEvent, waitFor, act } from '@testing-library/react-native';\nimport Dashboard from '../../../src/screens/Dashboard';\nimport { ThemeContext } from '../../../src/contexts/ThemeContext';\n\n// Mock des dépendances externes\njest.mock('expo-linear-gradient', () => ({\n  LinearGradient: ({ children, ...props }) => {\n    const { View } = require('react-native');\n    return <View {...props}>{children}</View>;\n  }\n}));\n\nconst mockRouterPush = jest.fn();\njest.mock('expo-router', () => ({\n  router: {\n    push: mockRouterPush,\n  },\n}));\n\n// Mock des contextes\nconst mockUseProgress = jest.fn();\nconst mockUseCurrentLevel = jest.fn();\n\njest.mock('../../../src/contexts/ProgressContext', () => ({\n  useProgress: mockUseProgress,\n}));\n\njest.mock('../../../src/contexts/CurrentLevelContext', () => ({\n  useCurrentLevel: mockUseCurrentLevel,\n}));\n\n// Mock des hooks\nconst mockUseRealTimeProgress = jest.fn();\nconst mockUseLastActivity = jest.fn();\n\njest.mock('../../../src/hooks/useRealTimeProgress', () => ({\n  __esModule: true,\n  default: mockUseRealTimeProgress,\n}));\n\njest.mock('../../../src/hooks/useLastActivity', () => ({\n  __esModule: true,\n  default: mockUseLastActivity,\n}));\n\n// Mock des composants Dashboard avec des props plus détaillées\njest.mock('../../../src/screens/Dashboard/components/ModernHeader', () => {\n  const { View, Text, TouchableOpacity } = require('react-native');\n  return ({ level, levelColor, onLevelChange }) => (\n    <View testID=\"modern-header\">\n      <Text testID=\"header-level\">Niveau: {level}</Text>\n      <Text testID=\"header-color\">Couleur: {levelColor}</Text>\n      {onLevelChange && (\n        <TouchableOpacity \n          testID=\"header-level-selector\"\n          onPress={() => onLevelChange('2')}\n        >\n          <Text>Changer niveau</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n});\n\njest.mock('../../../src/screens/Dashboard/components/HeroContinueSection', () => {\n  const { View, Text, TouchableOpacity } = require('react-native');\n  return ({ lastActivity, onPress, isLoading }) => (\n    <View testID=\"hero-continue-section\">\n      {isLoading ? (\n        <Text testID=\"hero-loading\">Chargement...</Text>\n      ) : (\n        <>\n          <TouchableOpacity \n            onPress={() => onPress?.(lastActivity)} \n            testID=\"continue-button\"\n          >\n            <Text testID=\"continue-text\">\n              {lastActivity ? `Continuer: ${lastActivity.title}` : 'Commencer l\\'apprentissage'}\n            </Text>\n          </TouchableOpacity>\n          {lastActivity && (\n            <Text testID=\"activity-type\">Type: {lastActivity.type}</Text>\n          )}\n        </>\n      )}\n    </View>\n  );\n});\n\njest.mock('../../../src/screens/Dashboard/components/QuickActions', () => {\n  const { View, Text, TouchableOpacity } = require('react-native');\n  return ({ currentLevel, onActionPress }) => (\n    <View testID=\"quick-actions\">\n      <Text testID=\"quick-actions-level\">Actions pour niveau: {currentLevel}</Text>\n      <TouchableOpacity \n        testID=\"quick-action-vocabulary\"\n        onPress={() => onActionPress?.('vocabulary')}\n      >\n        <Text>Vocabulaire</Text>\n      </TouchableOpacity>\n      <TouchableOpacity \n        testID=\"quick-action-grammar\"\n        onPress={() => onActionPress?.('grammar')}\n      >\n        <Text>Grammaire</Text>\n      </TouchableOpacity>\n    </View>\n  );\n});\n\njest.mock('../../../src/screens/Dashboard/components/SimpleMetrics', () => {\n  const { View, Text } = require('react-native');\n  return ({ accentColor, metrics }) => (\n    <View testID=\"simple-metrics\">\n      <Text testID=\"metrics-color\">Couleur accent: {accentColor}</Text>\n      <Text testID=\"metrics-streak\">Série: {metrics?.streak || 0} jours</Text>\n      <Text testID=\"metrics-total\">Total: {metrics?.totalWords || 0} mots</Text>\n    </View>\n  );\n});\n\njest.mock('../../../src/screens/Dashboard/components/LearningProgress', () => {\n  const { View, Text, TouchableOpacity, FlatList } = require('react-native');\n  return ({ globalProgress, levels, currentLevel, onSelectLevel, onChangeLevelVisual }) => (\n    <View testID=\"learning-progress\">\n      <Text testID=\"global-progress\">Progrès global: {globalProgress}%</Text>\n      <Text testID=\"current-level-display\">Niveau actuel: {currentLevel}</Text>\n      \n      <View testID=\"levels-container\">\n        {levels?.map(level => (\n          <TouchableOpacity\n            key={level.id}\n            onPress={() => onSelectLevel?.(level.id)}\n            testID={`level-item-${level.id}`}\n          >\n            <Text testID={`level-${level.id}-text`}>\n              Niveau {level.id}: {level.progress}%\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n\n      <TouchableOpacity\n        onPress={() => onChangeLevelVisual?.('3')}\n        testID=\"change-visual-level\"\n      >\n        <Text>Changer affichage niveau</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => onSelectLevel?.(currentLevel)}\n        testID=\"explore-current-level\"\n      >\n        <Text testID=\"explore-level-text\">Explorer le niveau {currentLevel}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n});\n\n// Mock Container avec gestion des props\njest.mock('../../../src/components/layout/Container', () => {\n  const { ScrollView, View } = require('react-native');\n  \n  function Container({ children, safeAreaEdges, refreshControl, onRefresh, ...props }) {\n    if (onRefresh) {\n      return (\n        <ScrollView \n          testID=\"container-scrollable\"\n          onRefresh={onRefresh}\n          refreshing={false}\n          {...props}\n        >\n          {children}\n        </ScrollView>\n      );\n    }\n    \n    return (\n      <View testID=\"container\" {...props}>\n        {children}\n      </View>\n    );\n  }\n  \n  Container.CONTAINER_SAFE_EDGES = {\n    NO_BOTTOM: ['top', 'left', 'right'],\n    ALL: ['top', 'bottom', 'left', 'right']\n  };\n  \n  return Container;\n});\n\n// Mock RevisionOrchestrator\njest.mock('../../../src/screens/VocabularyRevision/RevisionOrchestrator', () => {\n  const { View, Text, TouchableOpacity } = require('react-native');\n  return ({ currentLevel, onStartRevision }) => (\n    <View testID=\"revision-orchestrator\">\n      <Text testID=\"revision-level\">Révisions pour niveau: {currentLevel}</Text>\n      <TouchableOpacity \n        testID=\"start-revision-button\"\n        onPress={() => onStartRevision?.(currentLevel)}\n      >\n        <Text>Commencer révisions</Text>\n      </TouchableOpacity>\n    </View>\n  );\n});\n\n// Mock des constantes\njest.mock('../../../src/utils/constants', () => ({\n  LANGUAGE_LEVELS: {\n    '1': { title: 'Débutant', color: '#10B981', icon: '🌱' },\n    '2': { title: 'Élémentaire', color: '#3B82F6', icon: '📚' },\n    '3': { title: 'Intermédiaire', color: '#8B5CF6', icon: '🎯' },\n    '4': { title: 'Intermédiaire+', color: '#F59E0B', icon: '🚀' },\n    '5': { title: 'Avancé', color: '#EF4444', icon: '⭐' },\n    '6': { title: 'Expert', color: '#EC4899', icon: '👑' },\n    'bonus': { title: 'Bonus', color: '#6366F1', icon: '🎁' }\n  },\n  EXERCISES: {\n    vocabulary: { id: 'vocabulary', route: '/tabs/vocabulary', title: 'Vocabulaire' },\n    grammar: { id: 'grammar', route: '/tabs/grammar', title: 'Grammaire' },\n    listening: { id: 'listening', route: '/tabs/listening', title: 'Écoute' }\n  },\n  CONTAINER_SAFE_EDGES: {\n    NO_BOTTOM: ['top', 'left', 'right'],\n    ALL: ['top', 'bottom', 'left', 'right']\n  }\n}));\n\ndescribe('Dashboard - Tests unitaires', () => {\n  // Contextes et données par défaut\n  const defaultThemeContext = {\n    colors: {\n      background: '#F8FAFC',\n      primary: '#3B82F6',\n      surface: '#FFFFFF',\n      text: '#1F2937',\n      textSecondary: '#6B7280'\n    }\n  };\n\n  const defaultProgressContext = {\n    progress: { \n      level1: 50, \n      level2: 30, \n      level3: 75 \n    },\n    isLoading: false,\n    error: null\n  };\n\n  const defaultCurrentLevelContext = {\n    currentLevel: '1',\n    setCurrentLevel: jest.fn()\n  };\n\n  const defaultLastActivity = {\n    type: 'vocabulary',\n    level: '1',\n    title: 'Vocabulaire Animaux',\n    metadata: { word: 5, totalWords: 15 }\n  };\n\n  const defaultMetrics = {\n    streak: 5,\n    totalWords: 150,\n    completedLessons: 12\n  };\n\n  // Helper pour setup des mocks\n  const setupMocks = (overrides = {}) => {\n    const {\n      progressContext = defaultProgressContext,\n      currentLevelContext = defaultCurrentLevelContext,\n      lastActivity = defaultLastActivity,\n      isActivityLoading = false,\n      realTimeProgressData = { '1': 25, '2': 50, '3': 75 },\n      isRealTimeLoading = false,\n      metrics = defaultMetrics\n    } = overrides;\n\n    // Setup contextes\n    mockUseProgress.mockReturnValue(progressContext);\n    mockUseCurrentLevel.mockReturnValue(currentLevelContext);\n    \n    // Setup useLastActivity\n    mockUseLastActivity.mockReturnValue({\n      lastActivity,\n      isLoading: isActivityLoading,\n      reload: jest.fn().mockResolvedValue(),\n      error: null\n    });\n\n    // Setup useRealTimeProgress\n    mockUseRealTimeProgress.mockReturnValue({\n      getLevelProgress: jest.fn((level) => realTimeProgressData[level] || 0),\n      refresh: jest.fn().mockResolvedValue(),\n      isLoading: isRealTimeLoading,\n      metrics\n    });\n  };\n\n  const renderDashboard = (themeValue = defaultThemeContext) => {\n    return render(\n      <ThemeContext.Provider value={themeValue}>\n        <Dashboard />\n      </ThemeContext.Provider>\n    );\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockRouterPush.mockClear();\n    setupMocks();\n  });\n\n  describe('Rendu initial et composants', () => {\n    it('devrait afficher tous les composants principaux', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        expect(getByTestId('modern-header')).toBeTruthy();\n        expect(getByTestId('hero-continue-section')).toBeTruthy();\n        expect(getByTestId('quick-actions')).toBeTruthy();\n        expect(getByTestId('simple-metrics')).toBeTruthy();\n        expect(getByTestId('learning-progress')).toBeTruthy();\n        expect(getByTestId('revision-orchestrator')).toBeTruthy();\n      });\n    });\n\n    it('devrait afficher l\\'état de chargement du contexte Progress', () => {\n      setupMocks({\n        progressContext: { ...defaultProgressContext, isLoading: true }\n      });\n\n      const { getByText } = renderDashboard();\n      expect(getByText('Chargement du tableau de bord...')).toBeTruthy();\n    });\n\n    it('devrait utiliser le niveau par défaut (1)', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        expect(getByTestId('header-level')).toBeTruthy();\n        expect(getByTestId('header-level').children[0]).toBe('Niveau: 1');\n      });\n    });\n\n    it('devrait afficher la couleur correspondant au niveau', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const colorElement = getByTestId('header-color');\n        expect(colorElement.children[0]).toBe('Couleur: #10B981'); // Couleur niveau 1\n      });\n    });\n  });\n\n  describe('Gestion des niveaux', () => {\n    it('devrait changer de niveau et mettre à jour le contexte', async () => {\n      const mockSetCurrentLevel = jest.fn();\n      \n      setupMocks({\n        currentLevelContext: {\n          currentLevel: '1',\n          setCurrentLevel: mockSetCurrentLevel\n        }\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const changeButton = getByTestId('change-visual-level');\n        fireEvent.press(changeButton);\n      });\n\n      expect(mockSetCurrentLevel).toHaveBeenCalledWith('3');\n    });\n\n    it('devrait afficher les bonnes couleurs pour différents niveaux', async () => {\n      setupMocks({\n        currentLevelContext: {\n          currentLevel: '2',\n          setCurrentLevel: jest.fn()\n        }\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const colorElement = getByTestId('header-color');\n        expect(colorElement.children[0]).toBe('Couleur: #3B82F6'); // Couleur niveau 2\n      });\n    });\n\n    it('devrait naviguer vers la sélection d\\'exercices pour un niveau', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const levelButton = getByTestId('level-item-2');\n        fireEvent.press(levelButton);\n      });\n\n      expect(mockRouterPush).toHaveBeenCalledWith('/tabs/exerciseSelection?level=2');\n    });\n  });\n\n  describe('Section Continue/Hero', () => {\n    it('devrait afficher la dernière activité quand disponible', async () => {\n      setupMocks({\n        lastActivity: {\n          type: 'vocabulary',\n          level: '2',\n          title: 'Vocabulaire Famille'\n        }\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const continueText = getByTestId('continue-text');\n        expect(continueText.children[0]).toBe('Continuer: Vocabulaire Famille');\n        \n        const activityType = getByTestId('activity-type');\n        expect(activityType.children[0]).toBe('Type: vocabulary');\n      });\n    });\n\n    it('devrait afficher \"Commencer l\\'apprentissage\" sans activité récente', async () => {\n      setupMocks({ lastActivity: null });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const continueText = getByTestId('continue-text');\n        expect(continueText.children[0]).toBe('Commencer l\\'apprentissage');\n      });\n    });\n\n    it('devrait afficher l\\'état de chargement de l\\'activité', async () => {\n      setupMocks({ isActivityLoading: true });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        expect(getByTestId('hero-loading')).toBeTruthy();\n      });\n    });\n  });\n\n  describe('Navigation Continue', () => {\n    it('devrait naviguer vers vocabulary avec les bons paramètres', async () => {\n      setupMocks({\n        lastActivity: {\n          type: 'vocabulary',\n          level: '2',\n          title: 'Test Vocab'\n        }\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const continueButton = getByTestId('continue-button');\n        fireEvent.press(continueButton);\n      });\n\n      expect(mockRouterPush).toHaveBeenCalledWith({\n        pathname: '/tabs/vocabulary',\n        params: { level: '2' }\n      });\n    });\n\n    it('devrait naviguer vers grammar avec les bons paramètres', async () => {\n      setupMocks({\n        lastActivity: {\n          type: 'grammar',\n          level: '1',\n          title: 'Grammaire de base'\n        }\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const continueButton = getByTestId('continue-button');\n        fireEvent.press(continueButton);\n      });\n\n      expect(mockRouterPush).toHaveBeenCalledWith({\n        pathname: '/tabs/grammar',\n        params: { level: '1' }\n      });\n    });\n\n    it('devrait naviguer vers levelSelection pour une activité levelSelection', async () => {\n      setupMocks({\n        lastActivity: { type: 'levelSelection' }\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const continueButton = getByTestId('continue-button');\n        fireEvent.press(continueButton);\n      });\n\n      expect(mockRouterPush).toHaveBeenCalledWith('/(tabs)/levelSelection');\n    });\n\n    it('devrait naviguer vers levelSelection sans activité', async () => {\n      setupMocks({ lastActivity: null });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const continueButton = getByTestId('continue-button');\n        fireEvent.press(continueButton);\n      });\n\n      expect(mockRouterPush).toHaveBeenCalledWith('/(tabs)/levelSelection');\n    });\n  });\n\n  describe('Actions rapides', () => {\n    it('devrait afficher les actions pour le niveau courant', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const quickActionsLevel = getByTestId('quick-actions-level');\n        expect(quickActionsLevel.children[0]).toBe('Actions pour niveau: 1');\n      });\n    });\n\n    it('devrait naviguer vers vocabulary depuis les actions rapides', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const vocabAction = getByTestId('quick-action-vocabulary');\n        fireEvent.press(vocabAction);\n      });\n\n      expect(mockRouterPush).toHaveBeenCalledWith({\n        pathname: '/tabs/vocabulary',\n        params: { level: '1' }\n      });\n    });\n\n    it('devrait naviguer vers grammar depuis les actions rapides', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const grammarAction = getByTestId('quick-action-grammar');\n        fireEvent.press(grammarAction);\n      });\n\n      expect(mockRouterPush).toHaveBeenCalledWith({\n        pathname: '/tabs/grammar',\n        params: { level: '1' }\n      });\n    });\n  });\n\n  describe('Métriques simples', () => {\n    it('devrait afficher les métriques avec la couleur accent', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const metricsColor = getByTestId('metrics-color');\n        expect(metricsColor.children[0]).toBe('Couleur accent: #10B981');\n        \n        const streak = getByTestId('metrics-streak');\n        expect(streak.children[0]).toBe('Série: 5 jours');\n        \n        const total = getByTestId('metrics-total');\n        expect(total.children[0]).toBe('Total: 150 mots');\n      });\n    });\n\n    it('devrait gérer les métriques manquantes', async () => {\n      setupMocks({\n        metrics: {}\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const streak = getByTestId('metrics-streak');\n        expect(streak.children[0]).toBe('Série: 0 jours');\n        \n        const total = getByTestId('metrics-total');\n        expect(total.children[0]).toBe('Total: 0 mots');\n      });\n    });\n  });\n\n  describe('Progression d\\'apprentissage', () => {\n    it('devrait afficher la progression globale du niveau courant', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const globalProgress = getByTestId('global-progress');\n        expect(globalProgress.children[0]).toBe('Progrès global: 25%');\n        \n        const currentLevel = getByTestId('current-level-display');\n        expect(currentLevel.children[0]).toBe('Niveau actuel: 1');\n      });\n    });\n\n    it('devrait afficher tous les niveaux avec leur progression', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const level1 = getByTestId('level-1-text');\n        expect(level1.children[0]).toBe('Niveau 1: 25%');\n        \n        const level2 = getByTestId('level-2-text');\n        expect(level2.children[0]).toBe('Niveau 2: 50%');\n        \n        const level3 = getByTestId('level-3-text');\n        expect(level3.children[0]).toBe('Niveau 3: 75%');\n      });\n    });\n\n    it('devrait permettre d\\'explorer le niveau courant', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const exploreButton = getByTestId('explore-current-level');\n        const exploreText = getByTestId('explore-level-text');\n        \n        expect(exploreText.children[0]).toBe('Explorer le niveau 1');\n        \n        fireEvent.press(exploreButton);\n      });\n\n      expect(mockRouterPush).toHaveBeenCalledWith('/tabs/exerciseSelection?level=1');\n    });\n  });\n\n  describe('Orchestrateur de révisions', () => {\n    it('devrait afficher les révisions pour le niveau courant', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const revisionLevel = getByTestId('revision-level');\n        expect(revisionLevel.children[0]).toBe('Révisions pour niveau: 1');\n      });\n    });\n\n    it('devrait démarrer les révisions', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const startButton = getByTestId('start-revision-button');\n        fireEvent.press(startButton);\n      });\n\n      // Vérifier qu'une action de révision a été déclenchée\n      expect(getByTestId('start-revision-button')).toBeTruthy();\n    });\n  });\n\n  describe('Gestion des thèmes', () => {\n    it('devrait utiliser les couleurs du thème personnalisé', async () => {\n      const customTheme = {\n        colors: {\n          background: '#000000',\n          primary: '#FF0000',\n          surface: '#111111',\n          text: '#FFFFFF',\n          textSecondary: '#CCCCCC'\n        }\n      };\n\n      const { getByTestId } = renderDashboard(customTheme);\n\n      await waitFor(() => {\n        expect(getByTestId('modern-header')).toBeTruthy();\n        expect(getByTestId('simple-metrics')).toBeTruthy();\n      });\n    });\n\n    it('devrait fonctionner sans contexte de thème', async () => {\n      const { getByTestId } = render(<Dashboard />);\n\n      await waitFor(() => {\n        expect(getByTestId('modern-header')).toBeTruthy();\n        expect(getByTestId('hero-continue-section')).toBeTruthy();\n      });\n    });\n  });\n\n  describe('Gestion des erreurs', () => {\n    it('devrait gérer les erreurs du contexte Progress', () => {\n      setupMocks({\n        progressContext: { \n          progress: {}, \n          isLoading: false, \n          error: 'Erreur de chargement' \n        }\n      });\n\n      const { getByTestId } = renderDashboard();\n      expect(getByTestId('modern-header')).toBeTruthy();\n    });\n\n    it('devrait gérer l\\'absence de données de progression', async () => {\n      setupMocks({\n        realTimeProgressData: {}\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        const globalProgress = getByTestId('global-progress');\n        expect(globalProgress.children[0]).toBe('Progrès global: 0%');\n      });\n    });\n\n    it('devrait gérer l\\'absence de contexte CurrentLevel', async () => {\n      setupMocks({\n        currentLevelContext: { setCurrentLevel: jest.fn() }\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        expect(getByTestId('modern-header')).toBeTruthy();\n      });\n    });\n  });\n\n  describe('États de chargement', () => {\n    it('devrait afficher l\\'état de chargement des données temps réel', async () => {\n      setupMocks({\n        isRealTimeLoading: true\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        // Le composant devrait toujours s'afficher même en chargement\n        expect(getByTestId('learning-progress')).toBeTruthy();\n      });\n    });\n\n    it('devrait gérer le rafraîchissement des données', async () => {\n      const mockRefresh = jest.fn().mockResolvedValue();\n      \n      setupMocks();\n      mockUseRealTimeProgress.mockReturnValue({\n        getLevelProgress: jest.fn((level) => ({ '1': 25, '2': 50, '3': 75 }[level] || 0)),\n        refresh: mockRefresh,\n        isLoading: false,\n        metrics: defaultMetrics\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        expect(getByTestId('container')).toBeTruthy();\n      });\n    });\n  });\n\n  describe('Accessibilité et testIDs', () => {\n    it('devrait avoir tous les testIDs nécessaires', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        // Vérifier la présence de tous les testIDs critiques\n        const testIds = [\n          'modern-header',\n          'hero-continue-section',\n          'quick-actions',\n          'simple-metrics',\n          'learning-progress',\n          'revision-orchestrator',\n          'continue-button',\n          'header-level',\n          'header-color'\n        ];\n\n        testIds.forEach(testId => {\n          expect(getByTestId(testId)).toBeTruthy();\n        });\n      });\n    });\n  });\n\n  describe('Intégration des composants', () => {\n    it('devrait passer les bonnes props aux composants enfants', async () => {\n      const { getByTestId } = renderDashboard();\n\n      await waitFor(() => {\n        // Vérifier que chaque composant reçoit les bonnes données\n        expect(getByTestId('header-level').children[0]).toBe('Niveau: 1');\n        expect(getByTestId('quick-actions-level').children[0]).toBe('Actions pour niveau: 1');\n        expect(getByTestId('metrics-color').children[0]).toBe('Couleur accent: #10B981');\n        expect(getByTestId('current-level-display').children[0]).toBe('Niveau actuel: 1');\n        expect(getByTestId('revision-level').children[0]).toBe('Révisions pour niveau: 1');\n      });\n    });\n\n    it('devrait synchroniser les changements de niveau entre composants', async () => {\n      const mockSetCurrentLevel = jest.fn();\n      \n      setupMocks({\n        currentLevelContext: {\n          currentLevel: '1',\n          setCurrentLevel: mockSetCurrentLevel\n        }\n      });\n\n      const { getByTestId } = renderDashboard();\n\n      // Changer le niveau depuis LearningProgress\n      await waitFor(() => {\n        const changeButton = getByTestId('change-visual-level');\n        fireEvent.press(changeButton);\n      });\n\n      expect(mockSetCurrentLevel).toHaveBeenCalledWith('3');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}