{"version":3,"names":["_reactNative","require","cov_2gpu4xd4rg","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","createStyles","StyleSheet","create","container","marginHorizontal","marginVertical","infoContainer","Object","assign","flexDirection","justifyContent","backgroundColor","borderRadius","padding","Platform","select","ios","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","android","elevation","infoItem","alignItems","infoText","fontSize","fontWeight","marginLeft","_default","exports","default"],"sources":["style.js"],"sourcesContent":["// ReadingText/style.js - VERSION SIMPLIFIÃ‰E\r\nimport { StyleSheet, Platform } from \"react-native\";\r\n\r\n/**\r\n * ðŸŽ¯ Styles simples pour ReadingText\r\n * Pas de complexitÃ© inutile, juste l'essentiel\r\n */\r\nconst createStyles = () =>\r\n  StyleSheet.create({\r\n    // =================== CONTAINER ===================\r\n    container: {\r\n      marginHorizontal: 16,\r\n      marginVertical: 8,\r\n    },\r\n\r\n    // =================== INFO SECTION ===================\r\n    infoContainer: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-around',\r\n      backgroundColor: 'white',\r\n      borderRadius: 12,\r\n      padding: 12,\r\n      marginVertical: 10,\r\n      ...Platform.select({\r\n        ios: {\r\n          shadowColor: '#000',\r\n          shadowOffset: { width: 0, height: 1 },\r\n          shadowOpacity: 0.05,\r\n          shadowRadius: 4,\r\n        },\r\n        android: {\r\n          elevation: 1,\r\n        },\r\n      }),\r\n    },\r\n    \r\n    infoItem: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    \r\n    infoText: {\r\n      fontSize: 14,\r\n      fontWeight: '600',\r\n      marginLeft: 6,\r\n    },\r\n  });\r\n\r\nexport default createStyles;"],"mappings":";;;;AACA,IAAAA,YAAA,GAAAC,OAAA;AAAoD,SAAAC,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;IAAAC,CAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,eAAA;IAAAlB,IAAA;EAAA;EAAA,IAAAmB,QAAA,GAAAlB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAgB,QAAA,CAAApB,IAAA,KAAAoB,QAAA,CAAApB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAmB,QAAA,CAAApB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAgB,cAAA,GAAAD,QAAA,CAAApB,IAAA;EAAA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAsB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAtB,cAAA;AAAAA,cAAA,GAAAiB,CAAA;AAMpD,IAAMM,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAChB;EAAAvB,cAAA,GAAAkB,CAAA;EAAAlB,cAAA,GAAAiB,CAAA;EAAA,OAAAO,uBAAU,CAACC,MAAM,CAAC;IAEhBC,SAAS,EAAE;MACTC,gBAAgB,EAAE,EAAE;MACpBC,cAAc,EAAE;IAClB,CAAC;IAGDC,aAAa,EAAAC,MAAA,CAAAC,MAAA;MACXC,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE,cAAc;MAC9BC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXR,cAAc,EAAE;IAAE,GACfS,qBAAQ,CAACC,MAAM,CAAC;MACjBC,GAAG,EAAE;QACHC,WAAW,EAAE,MAAM;QACnBC,YAAY,EAAE;UAAEC,KAAK,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC;QACrCC,aAAa,EAAE,IAAI;QACnBC,YAAY,EAAE;MAChB,CAAC;MACDC,OAAO,EAAE;QACPC,SAAS,EAAE;MACb;IACF,CAAC,CAAC,CACH;IAEDC,QAAQ,EAAE;MACRhB,aAAa,EAAE,KAAK;MACpBiB,UAAU,EAAE;IACd,CAAC;IAEDC,QAAQ,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAE;IACd;EACF,CAAC,CAAC;AAAD,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEUjC,YAAY","ignoreList":[]}