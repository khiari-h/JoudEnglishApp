568305ddd5562d06ecada178f8515168
function cov_usxnpk505() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\MatchingGame\\index.js";
  var hash = "4f191280bacd24d1ad0f623c342b280c895e49d6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\MatchingGame\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 86,
          column: 1
        }
      },
      "1": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "2": {
        start: {
          line: 30,
          column: 49
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "3": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 33,
          column: 7
        }
      },
      "4": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 34
        }
      },
      "5": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 85,
          column: 4
        }
      },
      "6": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 55
        }
      },
      "7": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "8": {
        start: {
          line: 46,
          column: 26
        },
        end: {
          line: 46,
          column: 50
        }
      },
      "9": {
        start: {
          line: 49,
          column: 10
        },
        end: {
          line: 75,
          column: 12
        }
      },
      "10": {
        start: {
          line: 89,
          column: 0
        },
        end: {
          line: 104,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 22
          }
        },
        loc: {
          start: {
            line: 27,
            column: 6
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 27
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 49
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 49
          },
          end: {
            line: 30,
            column: 50
          }
        },
        loc: {
          start: {
            line: 30,
            column: 55
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 30
          }
        },
        loc: {
          start: {
            line: 43,
            column: 46
          },
          end: {
            line: 76,
            column: 9
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        loc: {
          start: {
            line: 46,
            column: 26
          },
          end: {
            line: 46,
            column: 50
          }
        },
        line: 46
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 24
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 10
          },
          end: {
            line: 31,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 10
          },
          end: {
            line: 31,
            column: 20
          }
        }, {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 40
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 26
          }
        }, {
          start: {
            line: 54,
            column: 30
          },
          end: {
            line: 57,
            column: 17
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 25
          }
        }, {
          start: {
            line: 58,
            column: 29
          },
          end: {
            line: 61,
            column: 17
          }
        }],
        line: 58
      },
      "5": {
        loc: {
          start: {
            line: 64,
            column: 24
          },
          end: {
            line: 64,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 24
          },
          end: {
            line: 64,
            column: 33
          }
        }, {
          start: {
            line: 64,
            column: 37
          },
          end: {
            line: 64,
            column: 49
          }
        }],
        line: 64
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 18
          },
          end: {
            line: 69,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 18
          },
          end: {
            line: 69,
            column: 27
          }
        }, {
          start: {
            line: 69,
            column: 31
          },
          end: {
            line: 69,
            column: 52
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 7
          },
          end: {
            line: 83,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 7
          },
          end: {
            line: 79,
            column: 16
          }
        }, {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 15
          }
        }],
        line: 79
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f191280bacd24d1ad0f623c342b280c895e49d6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_usxnpk505 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_usxnpk505();
import { View, Text, TouchableOpacity, ScrollView } from "react-native";
import PropTypes from 'prop-types';
import { Ionicons } from "@expo/vector-icons";
import createStyles from "./style";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_usxnpk505().s[0]++;
var MatchingGame = function MatchingGame(_ref) {
  var game = _ref.game,
    selectedItems = _ref.selectedItems,
    matchedItems = _ref.matchedItems,
    shuffledOptions = _ref.shuffledOptions,
    showFeedback = _ref.showFeedback,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_usxnpk505().b[0][0]++, "#3b82f6") : _ref$levelColor,
    onSelectItem = _ref.onSelectItem;
  cov_usxnpk505().f[0]++;
  var handleSelectItem = (cov_usxnpk505().s[1]++, useCallback(function (item, index, isMatched, feedbackVisible) {
    cov_usxnpk505().f[1]++;
    cov_usxnpk505().s[2]++;
    return function () {
      cov_usxnpk505().f[2]++;
      cov_usxnpk505().s[3]++;
      if ((cov_usxnpk505().b[2][0]++, !isMatched) && (cov_usxnpk505().b[2][1]++, !feedbackVisible)) {
        cov_usxnpk505().b[1][0]++;
        cov_usxnpk505().s[4]++;
        onSelectItem(item, index);
      } else {
        cov_usxnpk505().b[1][1]++;
      }
    };
  }, [onSelectItem]));
  cov_usxnpk505().s[5]++;
  return _jsxs(View, {
    style: styles.gameContainer,
    children: [_jsx(GameInstructions, {
      instructions: game.instructions
    }), _jsx(View, {
      style: styles.matchingContainer,
      children: shuffledOptions.map(function (item, index) {
        cov_usxnpk505().f[3]++;
        var isMatched = (cov_usxnpk505().s[6]++, matchedItems.includes(item));
        var isSelected = (cov_usxnpk505().s[7]++, selectedItems.some(function (selected) {
          cov_usxnpk505().f[4]++;
          cov_usxnpk505().s[8]++;
          return selected.index === index;
        }));
        cov_usxnpk505().s[9]++;
        return _jsx(TouchableOpacity, {
          style: [styles.matchingTile, (cov_usxnpk505().b[3][0]++, isSelected) && (cov_usxnpk505().b[3][1]++, [styles.selectedMatchingTile, {
            borderColor: levelColor
          }]), (cov_usxnpk505().b[4][0]++, isMatched) && (cov_usxnpk505().b[4][1]++, [styles.matchedTile, {
            backgroundColor: `${levelColor}20`
          }])],
          onPress: handleSelectItem(item, index, isMatched, showFeedback),
          disabled: (cov_usxnpk505().b[5][0]++, isMatched) || (cov_usxnpk505().b[5][1]++, showFeedback),
          children: _jsx(Text, {
            style: [styles.matchingText, (cov_usxnpk505().b[6][0]++, isMatched) && (cov_usxnpk505().b[6][1]++, {
              color: levelColor
            })],
            children: item
          })
        }, item);
      })
    }), (cov_usxnpk505().b[7][0]++, game.hint) && (cov_usxnpk505().b[7][1]++, _jsx(View, {
      style: styles.hintContainer,
      children: _jsxs(Text, {
        style: styles.hintText,
        children: ["Hint: ", game.hint]
      })
    }))]
  });
};
cov_usxnpk505().s[10]++;
MatchingGame.propTypes = {
  game: PropTypes.shape({
    instructions: PropTypes.string.isRequired,
    hint: PropTypes.string
  }).isRequired,
  selectedItems: PropTypes.arrayOf(PropTypes.number).isRequired,
  matchedItems: PropTypes.arrayOf(PropTypes.number).isRequired,
  shuffledOptions: PropTypes.arrayOf(PropTypes.shape({
    id: PropTypes.number.isRequired,
    text: PropTypes.string.isRequired,
    type: PropTypes.string.isRequired
  })).isRequired,
  showFeedback: PropTypes.bool.isRequired,
  levelColor: PropTypes.string,
  onSelectItem: PropTypes.func.isRequired
};
export default MatchingGame;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,