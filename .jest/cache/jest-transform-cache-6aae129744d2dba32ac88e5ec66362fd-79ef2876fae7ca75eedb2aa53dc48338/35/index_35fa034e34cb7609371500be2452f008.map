{"version":3,"names":["View","Text","TouchableOpacity","ScrollView","PropTypes","Ionicons","createStyles","jsx","_jsx","jsxs","_jsxs","cov_usxnpk505","s","MatchingGame","_ref","game","selectedItems","matchedItems","shuffledOptions","showFeedback","_ref$levelColor","levelColor","b","onSelectItem","f","handleSelectItem","useCallback","item","index","isMatched","feedbackVisible","style","styles","gameContainer","children","GameInstructions","instructions","matchingContainer","map","includes","isSelected","some","selected","matchingTile","selectedMatchingTile","borderColor","matchedTile","backgroundColor","onPress","disabled","matchingText","color","hint","hintContainer","hintText","propTypes","shape","string","isRequired","arrayOf","number","id","text","type","bool","func"],"sources":["index.js"],"sourcesContent":["// src/screens/exercises/word-games/MatchingGame/index.js - AVEC PROPTYPES\n\nimport { View, Text, TouchableOpacity, ScrollView } from \"react-native\";\nimport PropTypes from 'prop-types';\nimport { Ionicons } from \"@expo/vector-icons\";\nimport createStyles from \"./style\";\n\n/**\n * Composant pour le jeu d'association de paires\n *\n * @param {Object} game - Données du jeu\n * @param {Array} selectedItems - Items sélectionnés par l'utilisateur\n * @param {Array} matchedItems - Items correctement appariés\n * @param {Array} shuffledOptions - Options mélangées\n * @param {boolean} showFeedback - Indique si le feedback est affiché\n * @param {string} levelColor - Couleur associée au niveau\n * @param {Function} onSelectItem - Fonction appelée lors de la sélection d'un item\n */\nconst MatchingGame = ({\n  game,\n  selectedItems,\n  matchedItems,\n  shuffledOptions,\n  showFeedback,\n  levelColor = \"#3b82f6\",\n  onSelectItem,\n}) => {\n  // Handler stable pour la sélection d'un item\n  const handleSelectItem = useCallback(\n    (item, index, isMatched, feedbackVisible) => () => {\n      if (!isMatched && !feedbackVisible) {\n        onSelectItem(item, index);\n      }\n    },\n    [onSelectItem]\n  );\n\n  return (\n    <View style={styles.gameContainer}>\n      <GameInstructions instructions={game.instructions} />\n\n      <View style={styles.matchingContainer}>\n        {shuffledOptions.map((item, index) => {\n          const isMatched = matchedItems.includes(item);\n          const isSelected = selectedItems.some(\n            (selected) => selected.index === index\n          );\n\n          return (\n            <TouchableOpacity\n              key={item}\n              style={[\n                styles.matchingTile,\n                isSelected && [\n                  styles.selectedMatchingTile,\n                  { borderColor: levelColor },\n                ],\n                isMatched && [\n                  styles.matchedTile,\n                  { backgroundColor: `${levelColor}20` },\n                ],\n              ]}\n              onPress={handleSelectItem(item, index, isMatched, showFeedback)}\n              disabled={isMatched || showFeedback}\n            >\n              <Text\n                style={[\n                  styles.matchingText,\n                  isMatched && { color: levelColor },\n                ]}\n              >\n                {item}\n              </Text>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n\n      {game.hint && (\n        <View style={styles.hintContainer}>\n          <Text style={styles.hintText}>Hint: {game.hint}</Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\n// PropTypes pour le composant MatchingGame\nMatchingGame.propTypes = {\n  game: PropTypes.shape({\n    instructions: PropTypes.string.isRequired,\n    hint: PropTypes.string,\n  }).isRequired,\n  selectedItems: PropTypes.arrayOf(PropTypes.number).isRequired,\n  matchedItems: PropTypes.arrayOf(PropTypes.number).isRequired,\n  shuffledOptions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  })).isRequired,\n  showFeedback: PropTypes.bool.isRequired,\n  levelColor: PropTypes.string,\n  onSelectItem: PropTypes.func.isRequired,\n};\n\nexport default MatchingGame;\n\n"],"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","ignoreList":[]}