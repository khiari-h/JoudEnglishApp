{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","useNavigation","navigate","fn","goBack","useRoute","params","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_layout","_ProgressContext","_AppProvider","_jsxRuntime","_require","describe","it","default","_render","render","jsx","AppProvider","children","ProgressProvider","getByText","findByText","fireEvent","press","wordToRevise","expect","toBeTruthy","waitFor","screen","queryByText","toBeNull"],"sources":["vocabulary-revision.test.js"],"sourcesContent":["\nimport React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport App from '../../app/_layout';\nimport { ProgressProvider } from '../../src/contexts/ProgressContext';\nimport { AppProvider } from '../../src/contexts/AppProvider';\n\n\njest.mock('@react-navigation/native', () => ({\n  ...jest.requireActual('@react-navigation/native'),\n  useNavigation: () => ({\n    navigate: jest.fn(),\n    goBack: jest.fn(),\n  }),\n  useRoute: () => ({\n    params: {},\n  }),\n}));\n\ndescribe('Vocabulary Revision Integration Test', () => {\n  it('should add words to revision list and allow revision', async () => {\n    const { getByText, findByText } = render(\n      <AppProvider>\n        <ProgressProvider>\n            <App />\n        </ProgressProvider>\n      </AppProvider>\n    );\n\n    // 1. Simuler la réalisation d'un exercice de vocabulaire\n    // (Cette partie est une simplification. En réalité, vous interagiriez avec l'exercice)\n    // Supposons qu'après un exercice, des mots sont ajoutés à la révision.\n\n    // 2. Naviguer vers l'écran de révision du vocabulaire\n    fireEvent.press(getByText(/Révision du vocabulaire/i));\n\n    // 3. Vérifier que les mots à réviser sont affichés\n    const wordToRevise = await findByText(/Mot à réviser/i); // Remplacez par un vrai mot de votre exercice\n    expect(wordToRevise).toBeTruthy();\n\n    // 4. Démarrer une session de révision\n    fireEvent.press(getByText(/Commencer la révision/i));\n\n    // 5. Simuler la révision d'un mot\n    // (Interagissez avec les composants de votre session de révision)\n    fireEvent.press(getByText(/Je me souviens/i));\n\n    // 6. Vérifier que le mot a été retiré de la liste de révision immédiate\n    await waitFor(() => {\n      expect(screen.queryByText(/Mot à réviser/i)).toBeNull();\n    });\n  });\n});\n"],"mappings":"AAQAA,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE;EAAA,OAAAC,MAAA,CAAAC,MAAA,KACjCC,IAAI,CAACC,aAAa,CAAC,0BAA0B,CAAC;IACjDC,aAAa,EAAE,SAAfA,aAAaA,CAAA;MAAA,OAAS;QACpBC,QAAQ,EAAEH,IAAI,CAACI,EAAE,CAAC,CAAC;QACnBC,MAAM,EAAEL,IAAI,CAACI,EAAE,CAAC;MAClB,CAAC;IAAA,CAAC;IACFE,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAS;QACfC,MAAM,EAAE,CAAC;MACX,CAAC;IAAA;EAAC;AAAA,CACF,CAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAhBJ,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,OAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,gBAAA,GAAAL,OAAA;AACA,IAAAM,YAAA,GAAAN,OAAA;AAA6D,IAAAO,WAAA,GAAAP,OAAA;AAAA,SAAAb,YAAA;EAAA,IAAAqB,QAAA,GAAAR,OAAA;IAAAT,IAAA,GAAAiB,QAAA,CAAAjB,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAc7DkB,QAAQ,CAAC,sCAAsC,EAAE,YAAM;EACrDC,EAAE,CAAC,sDAAsD,MAAAT,kBAAA,CAAAU,OAAA,EAAE,aAAY;IACrE,IAAAC,OAAA,GAAkC,IAAAC,mBAAM,EACtC,IAAAN,WAAA,CAAAO,GAAA,EAACR,YAAA,CAAAS,WAAW;QAAAC,QAAA,EACV,IAAAT,WAAA,CAAAO,GAAA,EAACT,gBAAA,CAAAY,gBAAgB;UAAAD,QAAA,EACb,IAAAT,WAAA,CAAAO,GAAA,EAACV,OAAA,CAAAO,OAAG,IAAE;QAAC,CACO;MAAC,CACR,CACf,CAAC;MANOO,SAAS,GAAAN,OAAA,CAATM,SAAS;MAAEC,UAAU,GAAAP,OAAA,CAAVO,UAAU;IAa7BC,sBAAS,CAACC,KAAK,CAACH,SAAS,CAAC,0BAA0B,CAAC,CAAC;IAGtD,IAAMI,YAAY,SAASH,UAAU,CAAC,gBAAgB,CAAC;IACvDI,MAAM,CAACD,YAAY,CAAC,CAACE,UAAU,CAAC,CAAC;IAGjCJ,sBAAS,CAACC,KAAK,CAACH,SAAS,CAAC,wBAAwB,CAAC,CAAC;IAIpDE,sBAAS,CAACC,KAAK,CAACH,SAAS,CAAC,iBAAiB,CAAC,CAAC;IAG7C,MAAM,IAAAO,oBAAO,EAAC,YAAM;MAClBF,MAAM,CAACG,MAAM,CAACC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACzD,CAAC,CAAC;EACJ,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}