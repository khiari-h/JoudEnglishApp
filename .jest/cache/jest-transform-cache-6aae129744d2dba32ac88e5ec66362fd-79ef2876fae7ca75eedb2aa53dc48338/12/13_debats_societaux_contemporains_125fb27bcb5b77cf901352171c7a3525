410d08aac5b632273684e6553d009379
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vocab = void 0;
var vocab = exports.vocab = {
  title: "Débats Sociétaux Contemporains",
  words: [{
    word: "equal opportunity",
    translation: "égalité des chances",
    example: "Equal opportunity policies aim to create fairness in education and employment."
  }, {
    word: "racial profiling",
    translation: "profilage racial",
    example: "Racial profiling occurs when authorities target individuals based on race or ethnicity."
  }, {
    word: "affirmative action",
    translation: "discrimination positive",
    example: "Affirmative action policies seek to increase representation of underrepresented groups."
  }, {
    word: "voter suppression",
    translation: "suppression du vote",
    example: "Voter suppression tactics prevent eligible citizens from exercising their right to vote."
  }, {
    word: "disenfranchisement",
    translation: "privation des droits civiques",
    example: "Disenfranchisement historically excluded certain groups from political participation."
  }, {
    word: "police brutality",
    translation: "brutalité policière",
    example: "Protests against police brutality have increased public awareness of systemic issues."
  }, {
    word: "racial justice",
    translation: "justice raciale",
    example: "Racial justice advocates work to dismantle structural racism."
  }, {
    word: "racial bias",
    translation: "préjugé racial",
    example: "Implicit racial bias can affect decision-making even without conscious prejudice."
  }, {
    word: "segregation",
    translation: "ségrégation",
    example: "De facto segregation persists in many housing and educational systems."
  }, {
    word: "minority rights",
    translation: "droits des minorités",
    example: "Minority rights protect groups from discrimination by the majority."
  }, {
    word: "racial equity",
    translation: "équité raciale",
    example: "Racial equity involves addressing historical disadvantages to achieve fair outcomes."
  }, {
    word: "voter rights",
    translation: "droits des électeurs",
    example: "Voter rights campaigns focus on accessibility and protection from intimidation."
  }, {
    word: "citizenship",
    translation: "citoyenneté",
    example: "Debates about citizenship address who belongs to the political community."
  }, {
    word: "xenophobia",
    translation: "xénophobie",
    example: "Xenophobia manifests as fear or hatred toward people from other countries."
  }, {
    word: "reproductive rights",
    translation: "droits reproductifs",
    example: "Reproductive rights encompass access to contraception, abortion, and fertility treatments."
  }, {
    word: "stem cell research",
    translation: "recherche sur les cellules souches",
    example: "Stem cell research holds medical promise but raises ethical concerns."
  }, {
    word: "cloning",
    translation: "clonage",
    example: "Therapeutic cloning differs from reproductive cloning in purpose and ethical implications."
  }, {
    word: "right to die",
    translation: "droit de mourir",
    example: "Right to die advocates support individuals' autonomy in end-of-life decisions."
  }, {
    word: "organ donation",
    translation: "don d'organes",
    example: "Opt-out organ donation systems presume consent unless explicitly refused."
  }, {
    word: "artificial intelligence ethics",
    translation: "éthique de l'intelligence artificielle",
    example: "Artificial intelligence ethics addresses bias, privacy, and autonomy concerns."
  }, {
    word: "surrogacy",
    translation: "gestation pour autrui",
    example: "Commercial surrogacy raises questions about exploitation and commodification."
  }, {
    word: "human enhancement",
    translation: "amélioration humaine",
    example: "Human enhancement technologies could widen inequality between enhanced and unenhanced populations."
  }, {
    word: "genetic privacy",
    translation: "confidentialité génétique",
    example: "Genetic privacy concerns increase as DNA testing becomes more common."
  }, {
    word: "population aging",
    translation: "vieillissement de la population",
    example: "Population aging creates challenges for pension systems and healthcare."
  }, {
    word: "fertility rate",
    translation: "taux de fécondité",
    example: "Many developed countries have fertility rates below replacement level."
  }, {
    word: "life expectancy",
    translation: "espérance de vie",
    example: "Life expectancy continues to increase in most regions, though inequalities persist."
  }, {
    word: "migration pattern",
    translation: "schéma migratoire",
    example: "Migration patterns respond to economic opportunities and environmental conditions."
  }, {
    word: "rural depopulation",
    translation: "dépeuplement rural",
    example: "Rural depopulation affects community sustainability and service provision."
  }, {
    word: "population density",
    translation: "densité de population",
    example: "Population density affects transportation systems and housing costs."
  }, {
    word: "demographic dividend",
    translation: "dividende démographique",
    example: "A demographic dividend occurs when working-age populations exceed dependent populations."
  }, {
    word: "gender imbalance",
    translation: "déséquilibre entre les sexes",
    example: "Gender imbalance in certain regions results from sex-selective practices and migration."
  }, {
    word: "generational divide",
    translation: "fracture générationnelle",
    example: "The generational divide manifests in different political priorities and technological adoption."
  }, {
    word: "dependency ratio",
    translation: "ratio de dépendance",
    example: "The dependency ratio measures the proportion of non-working to working-age population."
  }, {
    word: "population projection",
    translation: "projection démographique",
    example: "Population projections help governments plan for future service needs."
  }, {
    word: "brain drain",
    translation: "fuite des cerveaux",
    example: "Brain drain occurs when educated professionals emigrate from developing regions."
  }, {
    word: "identity politics",
    translation: "politique identitaire",
    example: "Identity politics mobilizes groups based on shared experiences and characteristics."
  }, {
    word: "national identity",
    translation: "identité nationale",
    example: "National identity shapes attitudes toward immigration and international cooperation."
  }, {
    word: "religious identity",
    translation: "identité religieuse",
    example: "Religious identity influences political participation and social values."
  }, {
    word: "ethnic identity",
    translation: "identité ethnique",
    example: "Ethnic identity includes cultural heritage and ancestral connections."
  }, {
    word: "gender identity",
    translation: "identité de genre",
    example: "Gender identity refers to a person's internal sense of their gender."
  }, {
    word: "sexual orientation",
    translation: "orientation sexuelle",
    example: "Sexual orientation describes patterns of emotional and sexual attraction."
  }, {
    word: "indigenous rights",
    translation: "droits des peuples autochtones",
    example: "Indigenous rights include self-determination and cultural preservation."
  }, {
    word: "LGBTQ+ rights",
    translation: "droits LGBTQ+",
    example: "LGBTQ+ rights vary significantly across different countries and regions."
  }, {
    word: "gender equality",
    translation: "égalité des genres",
    example: "Gender equality remains an unfinished goal in most societies."
  }, {
    word: "cultural recognition",
    translation: "reconnaissance culturelle",
    example: "Cultural recognition affirms the value of diverse identities and practices."
  }, {
    word: "marginalization",
    translation: "marginalisation",
    example: "Marginalization excludes groups from full participation in society."
  }, {
    word: "wealth gap",
    translation: "écart de richesse",
    example: "The wealth gap between the richest and poorest continues to widen globally."
  }, {
    word: "opportunity gap",
    translation: "écart d'opportunité",
    example: "The opportunity gap begins early with unequal access to education and resources."
  }, {
    word: "gender wage gap",
    translation: "écart salarial entre les sexes",
    example: "The gender wage gap persists even in advanced economies."
  }, {
    word: "intergenerational poverty",
    translation: "pauvreté intergénérationnelle",
    example: "Intergenerational poverty persists when families lack resources to improve their situation."
  }, {
    word: "institutional racism",
    translation: "racisme institutionnel",
    example: "Institutional racism operates through organizational policies and practices."
  }, {
    word: "wage stagnation",
    translation: "stagnation des salaires",
    example: "Wage stagnation affects middle and working-class families despite economic growth."
  }, {
    word: "grassroots organizing",
    translation: "organisation populaire",
    example: "Grassroots organizing builds power from local communities upward."
  }, {
    word: "civil disobedience",
    translation: "désobéissance civile",
    example: "Civil disobedience involves peacefully breaking unjust laws to highlight their injustice."
  }, {
    word: "coalition building",
    translation: "construction de coalitions",
    example: "Coalition building unites diverse groups around common goals."
  }, {
    word: "feminist movement",
    translation: "mouvement féministe",
    example: "The feminist movement works toward gender equality in all aspects of society."
  }, {
    word: "nonviolent resistance",
    translation: "résistance non-violente",
    example: "Nonviolent resistance uses peaceful tactics to oppose injustice."
  }, {
    word: "mobilization",
    translation: "mobilisation",
    example: "Effective mobilization brings large numbers of people into coordinated action."
  }, {
    word: "antiglobalization",
    translation: "antimondialisation",
    example: "Antiglobalization movements critique corporate-led international integration."
  }, {
    word: "economic integration",
    translation: "intégration économique",
    example: "Economic integration reduces barriers to trade and investment between countries."
  }, {
    word: "trade liberalization",
    translation: "libéralisation des échanges",
    example: "Trade liberalization removes tariffs and other barriers to international commerce."
  }, {
    word: "cultural homogenization",
    translation: "homogénéisation culturelle",
    example: "Cultural homogenization reduces diversity through global consumer culture."
  }, {
    word: "transnational corporation",
    translation: "société transnationale",
    example: "Transnational corporations operate across multiple countries and jurisdictions."
  }, {
    word: "global governance",
    translation: "gouvernance mondiale",
    example: "Global governance addresses issues that transcend national boundaries."
  }, {
    word: "digital globalization",
    translation: "mondialisation numérique",
    example: "Digital globalization connects people through information technologies."
  }, {
    word: "supply chain",
    translation: "chaîne d'approvisionnement",
    example: "Global supply chains distribute production across multiple countries."
  }, {
    word: "glocalization",
    translation: "glocalisation",
    example: "Glocalization adapts global products and services to local markets."
  }, {
    word: "migration flow",
    translation: "flux migratoire",
    example: "Migration flows respond to economic opportunities and political conditions."
  }, {
    word: "cosmopolitanism",
    translation: "cosmopolitisme",
    example: "Cosmopolitanism embraces global citizenship and shared humanity."
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,