{"version":3,"names":["View","Text","TouchableOpacity","ScrollView","PropTypes","LinearGradient","Ionicons","router","HeroCard","ContentSection","NavigationButtons","createStyles","jsx","_jsx","jsxs","_jsxs","cov_ygcewenhm","s","AssessmentResults","_ref","level","_ref$levelColor","levelColor","b","userScore","onContinue","onRetry","f","styles","style","container","contentContainerStyle","content","children","fontSize","showUnderline","backgroundColor","title","navigationContainer","onNext","disablePrevious","disableNext","primaryColor","isLast","buttonLabels","next","finish","scoreOutOf20","Math","round","percentage","wrongAnswers","totalQuestions","correctAnswers","getPerformanceData","scoreOut20","subtitle","color","showRetry","performance","showsVerticalScrollIndicator","padding","toFixed","isMonospace","icon","split","isItalic","retryContainer","propTypes","string","isRequired","shape","number","func"],"sources":["index.js"],"sourcesContent":["// src/screens/exercises/level-assessment/AssessmentResults/index.js - AVEC PROPTYPES\r\n\r\nimport { View, Text, TouchableOpacity, ScrollView } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { router } from \"expo-router\";\r\nimport HeroCard from \"../../../../components/ui/HeroCard\";\r\nimport ContentSection from \"../../../../components/ui/ContentSection\";\r\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * üèÜ AssessmentResults - Version Refactoris√©e avec composants g√©n√©riques\r\n * 200+ lignes ‚Üí 60 lignes (-70% de code)\r\n * Utilise HeroCard + ContentSection + NavigationButtons\r\n * \r\n * @param {string} level - Niveau de l'√©valuation\r\n * @param {string} levelColor - Couleur du niveau\r\n * @param {object} userScore - Score utilisateur {correctAnswers, totalQuestions, percentage}\r\n * @param {function} onContinue - Fonction pour continuer\r\n * @param {function} onRetry - Fonction pour recommencer\r\n */\r\nconst AssessmentResults = ({\r\n  level,\r\n  levelColor = \"#3b82f6\",\r\n  userScore,\r\n  onContinue,\r\n  onRetry,\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n\r\n  // Fallback si pas de score\r\n  if (!userScore) {\r\n    return (\r\n      <ScrollView style={styles.container} contentContainerStyle={styles.content}>\r\n        {/* üéØ HERO - Titre simple */}\r\n        <HeroCard \r\n          content=\"√âvaluation Termin√©e\"\r\n          fontSize={24}\r\n          levelColor={levelColor}\r\n          showUnderline\r\n          backgroundColor=\"white\"\r\n        />\r\n\r\n        {/* üìù MESSAGE SIMPLE */}\r\n        <ContentSection\r\n          title={`Niveau ${level}`}\r\n          content=\"Votre √©valuation est termin√©e. Merci d'avoir particip√© !\"\r\n          levelColor={levelColor}\r\n          backgroundColor=\"#f8fafc\"\r\n        />\r\n\r\n        {/* üöÄ NAVIGATION */}\r\n        <View style={styles.navigationContainer}>\r\n          <NavigationButtons\r\n            onNext={onContinue}\r\n            disablePrevious\r\n            disableNext={false}\r\n            primaryColor={levelColor}\r\n            isLast\r\n            buttonLabels={{\r\n              next: \"Continuer\",\r\n              finish: \"Continuer\"\r\n            }}\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n\r\n  // Calculs pour l'affichage\r\n  const scoreOutOf20 = Math.round((userScore.percentage / 100) * 20);\r\n  const wrongAnswers = userScore.totalQuestions - userScore.correctAnswers;\r\n\r\n  // Syst√®me de couleurs et messages bas√© sur performance\r\n  const getPerformanceData = (scoreOut20) => {\r\n    if (scoreOut20 >= 16) {\r\n      return {\r\n        title: \"üèÜ Bravo champion !\",\r\n        subtitle: \"Tu ma√Ætrises bien ton affaire !\",\r\n        color: \"#16a34a\",\r\n        backgroundColor: \"#f0fdf4\",\r\n        showRetry: false\r\n      };\r\n    } else if (scoreOut20 >= 12) {\r\n      return {\r\n        title: \"üëå Pas mal du tout !\",\r\n        subtitle: \"On est sur la bonne voie !\",\r\n        color: \"#ea580c\",\r\n        backgroundColor: \"#fff7ed\",\r\n        showRetry: false\r\n      };\r\n    } else if (scoreOut20 >= 8) {\r\n      return {\r\n        title: \"üò¨ Hmm... on a vu mieux !\",\r\n        subtitle: \"Allez, on remonte la pente !\",\r\n        color: \"#dc2626\",\r\n        backgroundColor: \"#fef2f2\",\r\n        showRetry: true\r\n      };\r\n    } else {\r\n      return {\r\n        title: \"üî• Oula... c'est chaud !\",\r\n        subtitle: \"Bon, on va pas se mentir, il faut bosser !\",\r\n        color: \"#b91c1c\",\r\n        backgroundColor: \"#fef2f2\",\r\n        showRetry: true\r\n      };\r\n    }\r\n  };\r\n\r\n  const performance = getPerformanceData(scoreOutOf20);\r\n\r\n  return (\r\n    <ScrollView \r\n      style={styles.container} \r\n      contentContainerStyle={styles.content}\r\n      showsVerticalScrollIndicator={false}\r\n    >\r\n      {/* üéØ HERO - Score principal spectaculaire */}\r\n      <HeroCard \r\n        content={`${scoreOutOf20}/20`}\r\n        fontSize={56}\r\n        levelColor={performance.color}\r\n        showUnderline={false}\r\n        backgroundColor={performance.backgroundColor}\r\n        padding={32}\r\n        subtitle={`${userScore.percentage.toFixed(1)}%`}\r\n      />\r\n\r\n      {/* üìä STATISTIQUES - ContentSection */}\r\n      <ContentSection\r\n        title=\"Statistiques d√©taill√©es\"\r\n        content={`‚úÖ ${userScore.correctAnswers} correctes\\n‚ùå ${wrongAnswers} incorrectes\\nüìä ${userScore.totalQuestions} questions au total`}\r\n        levelColor=\"#6366f1\"\r\n        backgroundColor=\"white\"\r\n        isMonospace\r\n      />\r\n\r\n      {/* üé≠ MESSAGE DE PERFORMANCE */}\r\n      <ContentSection\r\n        title=\"Votre Performance\"\r\n        content={`${performance.title}\\n\\n${performance.subtitle}`}\r\n        levelColor={performance.color}\r\n        backgroundColor={performance.backgroundColor}\r\n        icon={performance.title.split(' ')[0]} // R√©cup√®re l'emoji\r\n      />\r\n\r\n      {/* üè∑Ô∏è BADGE NIVEAU */}\r\n      <ContentSection\r\n        title={`√âvaluation Niveau ${level}`}\r\n        content=\"√âvaluation termin√©e avec succ√®s !\"\r\n        levelColor={levelColor}\r\n        backgroundColor=\"#f1f5f9\"\r\n        isItalic\r\n      />\r\n\r\n      {/* üöÄ NAVIGATION - Boutons d'action */}\r\n      <View style={styles.navigationContainer}>\r\n        {/* Bouton Retry conditionnel */}\r\n        {performance.showRetry && onRetry && (\r\n          <View style={styles.retryContainer}>\r\n            <NavigationButtons\r\n              onNext={onRetry}\r\n              disablePrevious\r\n              disableNext={false}\r\n              primaryColor={performance.color}\r\n              isLast={false}\r\n              buttonLabels={{\r\n                next: \"Recommencer\",\r\n              }}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        {/* Bouton principal Continue */}\r\n        <NavigationButtons\r\n          onNext={onContinue}\r\n          disablePrevious\r\n          disableNext={false}\r\n          primaryColor={levelColor}\r\n          isLast\r\n          buttonLabels={{\r\n            next: \"Continuer\",\r\n            finish: \"Continuer\"\r\n          }}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\n// PropTypes pour le composant AssessmentResults\r\nAssessmentResults.propTypes = {\r\n  level: PropTypes.string.isRequired,\r\n  levelColor: PropTypes.string.isRequired,\r\n  userScore: PropTypes.shape({\r\n    percentage: PropTypes.number.isRequired,\r\n    totalQuestions: PropTypes.number.isRequired,\r\n    correctAnswers: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onContinue: PropTypes.func.isRequired,\r\n  onRetry: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AssessmentResults;"],"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","ignoreList":[]}