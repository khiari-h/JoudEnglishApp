66b05b2b033f6941a84f4dbaf57d2c93
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDashboardState = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
function cov_29zq544tn() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\hooks\\useDashboardState.js";
  var hash = "3e22b16b3a8775d3e47489b1aeed8b39e2443d3c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\hooks\\useDashboardState.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 33
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "1": {
        start: {
          line: 6,
          column: 52
        },
        end: {
          line: 6,
          column: 67
        }
      },
      "2": {
        start: {
          line: 7,
          column: 38
        },
        end: {
          line: 7,
          column: 53
        }
      },
      "3": {
        start: {
          line: 8,
          column: 36
        },
        end: {
          line: 8,
          column: 52
        }
      },
      "4": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 22,
          column: 26
        }
      },
      "5": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 24
        }
      },
      "6": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "7": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "8": {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 17,
          column: 68
        }
      },
      "9": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 27
        }
      },
      "10": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 27,
          column: 8
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "12": {
        start: {
          line: 29,
          column: 34
        },
        end: {
          line: 31,
          column: 8
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 32
        }
      },
      "14": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 42,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 33
          },
          end: {
            line: 5,
            column: 34
          }
        },
        loc: {
          start: {
            line: 5,
            column: 57
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 32
          },
          end: {
            line: 11,
            column: 33
          }
        },
        loc: {
          start: {
            line: 11,
            column: 44
          },
          end: {
            line: 22,
            column: 3
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 45
          },
          end: {
            line: 25,
            column: 46
          }
        },
        loc: {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 27,
            column: 3
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 46
          },
          end: {
            line: 29,
            column: 47
          }
        },
        loc: {
          start: {
            line: 29,
            column: 52
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 29
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3e22b16b3a8775d3e47489b1aeed8b39e2443d3c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_29zq544tn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29zq544tn();
cov_29zq544tn().s[0]++;
var useDashboardState = exports.useDashboardState = function useDashboardState(loadLastActivities) {
  cov_29zq544tn().f[0]++;
  var _ref = (cov_29zq544tn().s[1]++, (0, _react.useState)(false)),
    _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    showLevelProgress = _ref2[0],
    setShowLevelProgress = _ref2[1];
  var _ref3 = (cov_29zq544tn().s[2]++, (0, _react.useState)(false)),
    _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
    refreshing = _ref4[0],
    setRefreshing = _ref4[1];
  var _ref5 = (cov_29zq544tn().s[3]++, (0, _react.useState)("home")),
    _ref6 = (0, _slicedToArray2.default)(_ref5, 2),
    activeTab = _ref6[0],
    setActiveTab = _ref6[1];
  var onRefresh = (cov_29zq544tn().s[4]++, (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {
    cov_29zq544tn().f[1]++;
    cov_29zq544tn().s[5]++;
    setRefreshing(true);
    cov_29zq544tn().s[6]++;
    try {
      cov_29zq544tn().s[7]++;
      yield loadLastActivities();
    } catch (error) {
      cov_29zq544tn().s[8]++;
      console.warn('Error refreshing dashboard activities:', error);
    } finally {
      cov_29zq544tn().s[9]++;
      setRefreshing(false);
    }
  }), [loadLastActivities]));
  var openLevelProgressModal = (cov_29zq544tn().s[10]++, (0, _react.useCallback)(function () {
    cov_29zq544tn().f[2]++;
    cov_29zq544tn().s[11]++;
    setShowLevelProgress(true);
  }, []));
  var closeLevelProgressModal = (cov_29zq544tn().s[12]++, (0, _react.useCallback)(function () {
    cov_29zq544tn().f[3]++;
    cov_29zq544tn().s[13]++;
    setShowLevelProgress(false);
  }, []));
  cov_29zq544tn().s[14]++;
  return {
    showLevelProgress: showLevelProgress,
    setShowLevelProgress: setShowLevelProgress,
    openLevelProgressModal: openLevelProgressModal,
    closeLevelProgressModal: closeLevelProgressModal,
    refreshing: refreshing,
    activeTab: activeTab,
    setActiveTab: setActiveTab,
    onRefresh: onRefresh
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,