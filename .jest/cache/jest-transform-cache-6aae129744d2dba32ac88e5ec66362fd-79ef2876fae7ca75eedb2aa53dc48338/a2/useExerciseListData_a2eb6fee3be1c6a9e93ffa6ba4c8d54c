c9103ac741b8faf8b6b0441b65b25957
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useExerciseListData;
var _react = require("react");
var _constants = require("../../../utils/constants");
function cov_k56g13efw() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\ExerciseSelection\\hooks\\useExerciseListData.js";
  var hash = "64af39293172566e384bfb1ab56c65d51db2122d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\ExerciseSelection\\hooks\\useExerciseListData.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 8,
          column: 13
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 42
        }
      },
      "2": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "3": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 19
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 24,
          column: 7
        }
      },
      "5": {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 13,
          column: 78
        }
      },
      "6": {
        start: {
          line: 13,
          column: 71
        },
        end: {
          line: 13,
          column: 78
        }
      },
      "7": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 19,
          column: 7
        }
      },
      "8": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 74
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 104
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 15
        }
      },
      "11": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "12": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 49
        }
      },
      "13": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 76
        }
      },
      "14": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 16
        }
      },
      "15": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 28,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "useExerciseListData",
        decl: {
          start: {
            line: 5,
            column: 24
          },
          end: {
            line: 5,
            column: 43
          }
        },
        loc: {
          start: {
            line: 5,
            column: 89
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 28
          },
          end: {
            line: 6,
            column: 29
          }
        },
        loc: {
          start: {
            line: 6,
            column: 34
          },
          end: {
            line: 8,
            column: 3
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 10,
            column: 28
          },
          end: {
            line: 10,
            column: 29
          }
        },
        loc: {
          start: {
            line: 10,
            column: 34
          },
          end: {
            line: 26,
            column: 3
          }
        },
        line: 10
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 38
          }
        },
        loc: {
          start: {
            line: 12,
            column: 51
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 11
          },
          end: {
            line: 7,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 11
          },
          end: {
            line: 7,
            column: 33
          }
        }, {
          start: {
            line: 7,
            column: 37
          },
          end: {
            line: 7,
            column: 41
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 6
          },
          end: {
            line: 13,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 6
          },
          end: {
            line: 13,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 10
          },
          end: {
            line: 13,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 10
          },
          end: {
            line: 13,
            column: 27
          }
        }, {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 13,
            column: 69
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 19,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 19,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "64af39293172566e384bfb1ab56c65d51db2122d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_k56g13efw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_k56g13efw();
function useExerciseListData(_ref) {
  var level = _ref.level,
    getExerciseProgress = _ref.getExerciseProgress,
    hasProgress = _ref.hasProgress;
  cov_k56g13efw().f[0]++;
  var levelInfo = (cov_k56g13efw().s[0]++, (0, _react.useMemo)(function () {
    cov_k56g13efw().f[1]++;
    cov_k56g13efw().s[1]++;
    return (cov_k56g13efw().b[0][0]++, _constants.LANGUAGE_LEVELS[level]) || (cov_k56g13efw().b[0][1]++, null);
  }, [level]));
  var exercises = (cov_k56g13efw().s[2]++, (0, _react.useMemo)(function () {
    cov_k56g13efw().f[2]++;
    var list = (cov_k56g13efw().s[3]++, []);
    cov_k56g13efw().s[4]++;
    Object.values(_constants.EXERCISES).forEach(function (exercise) {
      cov_k56g13efw().f[3]++;
      cov_k56g13efw().s[5]++;
      if ((cov_k56g13efw().b[2][0]++, level === "bonus") && (cov_k56g13efw().b[2][1]++, !_constants.BONUS_EXERCISES.includes(exercise.id))) {
        cov_k56g13efw().b[1][0]++;
        cov_k56g13efw().s[6]++;
        return;
      } else {
        cov_k56g13efw().b[1][1]++;
      }
      cov_k56g13efw().s[7]++;
      if (exercise.id === "vocabulary_fast") {
        cov_k56g13efw().b[3][0]++;
        var fastProgress = (cov_k56g13efw().s[8]++, getExerciseProgress("vocabulary_fast", level));
        cov_k56g13efw().s[9]++;
        list.push(Object.assign({}, exercise, {
          progress: fastProgress,
          hasProgress: fastProgress > 0,
          isFast: true
        }));
        cov_k56g13efw().s[10]++;
        return;
      } else {
        cov_k56g13efw().b[3][1]++;
      }
      var progress = (cov_k56g13efw().s[11]++, getExerciseProgress(exercise.id, level));
      var has = (cov_k56g13efw().s[12]++, hasProgress(exercise.id, level));
      cov_k56g13efw().s[13]++;
      list.push(Object.assign({}, exercise, {
        progress: progress,
        hasProgress: has,
        isFast: false
      }));
    });
    cov_k56g13efw().s[14]++;
    return list;
  }, [level, getExerciseProgress, hasProgress]));
  cov_k56g13efw().s[15]++;
  return {
    levelInfo: levelInfo,
    exercises: exercises
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,