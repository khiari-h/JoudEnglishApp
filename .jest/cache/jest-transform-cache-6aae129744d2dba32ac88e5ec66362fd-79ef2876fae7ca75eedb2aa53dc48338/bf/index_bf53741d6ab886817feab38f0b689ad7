7d34b21dc748ce09e61f3e07c26d1c94
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _ExerciseHeader = _interopRequireDefault(require("../../../../components/exercise-common/ExerciseHeader"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_19zffkdged() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyHeader\\index.js";
  var hash = "6b9fcb25ea26666898746695803066dc6369343c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyHeader\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 25
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "2": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "3": {
        start: {
          line: 14,
          column: 25
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 25
        }
      },
      "5": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 26,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 25
          },
          end: {
            line: 11,
            column: 26
          }
        },
        loc: {
          start: {
            line: 11,
            column: 59
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 16,
            column: 3
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6b9fcb25ea26666898746695803066dc6369343c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_19zffkdged = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19zffkdged();
cov_19zffkdged().s[0]++;
var VocabularyHeader = function VocabularyHeader(_ref) {
  var level = _ref.level,
    mode = _ref.mode,
    onBackPress = _ref.onBackPress;
  cov_19zffkdged().f[0]++;
  cov_19zffkdged().s[1]++;
  var getTitle = function getTitle() {
    cov_19zffkdged().f[1]++;
    cov_19zffkdged().s[2]++;
    if (mode === 'fast') {
      cov_19zffkdged().b[0][0]++;
      cov_19zffkdged().s[3]++;
      return 'Fast';
    } else {
      cov_19zffkdged().b[0][1]++;
    }
    cov_19zffkdged().s[4]++;
    return 'Vocabulaire';
  };
  cov_19zffkdged().s[5]++;
  return (0, _jsxRuntime.jsx)(_ExerciseHeader.default, {
    title: getTitle(),
    level: level,
    exerciseType: "vocabulary",
    onClose: onBackPress,
    backIcon: "arrow-back"
  });
};
var _default = exports.default = VocabularyHeader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfRXhlcmNpc2VIZWFkZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9qc3hSdW50aW1lIiwiY292XzE5emZma2RnZWQiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInR5cGUiLCJsb2NhdGlvbnMiLCJ1bmRlZmluZWQiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiVm9jYWJ1bGFyeUhlYWRlciIsIl9yZWYiLCJsZXZlbCIsIm1vZGUiLCJvbkJhY2tQcmVzcyIsImdldFRpdGxlIiwianN4IiwiZGVmYXVsdCIsInRpdGxlIiwiZXhlcmNpc2VUeXBlIiwib25DbG9zZSIsImJhY2tJY29uIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVm9jYWJ1bGFyeUhlYWRlciAtIFZlcnNpb24gw6lwdXLDqWUgbW9iaWxlLWZpcnN0XHJcbmltcG9ydCBFeGVyY2lzZUhlYWRlciBmcm9tIFwiLi4vLi4vLi4vLi4vY29tcG9uZW50cy9leGVyY2lzZS1jb21tb24vRXhlcmNpc2VIZWFkZXJcIjtcclxuXHJcbi8qKlxyXG4gKiDwn46vIFZvY2FidWxhcnlIZWFkZXIgLSBWZXJzaW9uIE1vYmlsZS1GaXJzdCDDiXB1csOpZVxyXG4gKiAtIFRpdHJlcyBjb3VydHMgZXQgY2xhaXJzXHJcbiAqIC0gQ29ow6lyZW5jZSBhdmVjIEV4ZXJjaXNlU2VsZWN0aW9uXHJcbiAqIC0gRm9jdXMgc3VyIGwnZXNzZW50aWVsXHJcbiAqIC0gUGFzIGRlIHJlZG9uZGFuY2VcclxuICovXHJcbmNvbnN0IFZvY2FidWxhcnlIZWFkZXIgPSAoeyBsZXZlbCwgbW9kZSwgb25CYWNrUHJlc3MgfSkgPT4ge1xyXG4gIC8vIPCfjq8gVElUUkVTIMOJUFVSw4lTIC0gTW9iaWxlLWZpcnN0XHJcbiAgY29uc3QgZ2V0VGl0bGUgPSAoKSA9PiB7XHJcbiAgICBpZiAobW9kZSA9PT0gJ2Zhc3QnKSByZXR1cm4gJ0Zhc3QnOyAvLyBTaW1wbGUgZXQgY2xhaXIg4pqhXHJcbiAgICByZXR1cm4gJ1ZvY2FidWxhaXJlJzsgLy8gUGFyIGTDqWZhdXQgcG91ciBjbGFzc2ljXHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxFeGVyY2lzZUhlYWRlclxyXG4gICAgICB0aXRsZT17Z2V0VGl0bGUoKX1cclxuICAgICAgbGV2ZWw9e2xldmVsfVxyXG4gICAgICBleGVyY2lzZVR5cGU9XCJ2b2NhYnVsYXJ5XCIgLy8gTcOqbWUgdHlwZSwgc2V1bCBsZSBtb2RlIGNoYW5nZVxyXG4gICAgICBvbkNsb3NlPXtvbkJhY2tQcmVzc31cclxuICAgICAgYmFja0ljb249XCJhcnJvdy1iYWNrXCJcclxuICAgIC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFZvY2FidWxhcnlIZWFkZXI7Il0sIm1hcHBpbmdzIjoiOzs7OztBQUNBLElBQUFBLGVBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUFtRixJQUFBQyxXQUFBLEdBQUFELE9BQUE7QUFBQSxTQUFBRSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUFyQixJQUFBO0VBQUE7RUFBQSxJQUFBc0IsUUFBQSxHQUFBckIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFtQixRQUFBLENBQUF2QixJQUFBLEtBQUF1QixRQUFBLENBQUF2QixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBc0IsUUFBQSxDQUFBdkIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBbUIsY0FBQSxHQUFBRCxRQUFBLENBQUF2QixJQUFBO0VBQUE7SUFBQUQsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQXlCLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUF6QixjQUFBO0FBQUFBLGNBQUEsR0FBQW9CLENBQUE7QUFTbkYsSUFBTU0sZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFnQkEsQ0FBQUMsSUFBQSxFQUFxQztFQUFBLElBQS9CQyxLQUFLLEdBQUFELElBQUEsQ0FBTEMsS0FBSztJQUFFQyxJQUFJLEdBQUFGLElBQUEsQ0FBSkUsSUFBSTtJQUFFQyxXQUFXLEdBQUFILElBQUEsQ0FBWEcsV0FBVztFQUFBOUIsY0FBQSxHQUFBcUIsQ0FBQTtFQUFBckIsY0FBQSxHQUFBb0IsQ0FBQTtFQUVsRCxJQUFNVyxRQUFRLEdBQUcsU0FBWEEsUUFBUUEsQ0FBQSxFQUFTO0lBQUEvQixjQUFBLEdBQUFxQixDQUFBO0lBQUFyQixjQUFBLEdBQUFvQixDQUFBO0lBQ3JCLElBQUlTLElBQUksS0FBSyxNQUFNLEVBQUU7TUFBQTdCLGNBQUEsR0FBQXNCLENBQUE7TUFBQXRCLGNBQUEsR0FBQW9CLENBQUE7TUFBQSxPQUFPLE1BQU07SUFBQSxDQUFDO01BQUFwQixjQUFBLEdBQUFzQixDQUFBO0lBQUE7SUFBQXRCLGNBQUEsR0FBQW9CLENBQUE7SUFDbkMsT0FBTyxhQUFhO0VBQ3RCLENBQUM7RUFBQ3BCLGNBQUEsR0FBQW9CLENBQUE7RUFFRixPQUNFLElBQUFyQixXQUFBLENBQUFpQyxHQUFBLEVBQUNwQyxlQUFBLENBQUFxQyxPQUFjO0lBQ2JDLEtBQUssRUFBRUgsUUFBUSxDQUFDLENBQUU7SUFDbEJILEtBQUssRUFBRUEsS0FBTTtJQUNiTyxZQUFZLEVBQUMsWUFBWTtJQUN6QkMsT0FBTyxFQUFFTixXQUFZO0lBQ3JCTyxRQUFRLEVBQUM7RUFBWSxDQUN0QixDQUFDO0FBRU4sQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxDQUFBTixPQUFBLEdBRWFQLGdCQUFnQiIsImlnbm9yZUxpc3QiOltdfQ==