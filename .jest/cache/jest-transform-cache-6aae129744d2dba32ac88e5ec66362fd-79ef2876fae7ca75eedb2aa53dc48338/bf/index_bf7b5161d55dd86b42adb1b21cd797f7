0c9d2c110d63d996b07164c5be3de988
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _reactNative = require("react-native");
var _ConversationMessage = _interopRequireDefault(require("../ConversationMessage"));
var _ConversationTypingIndicator = _interopRequireDefault(require("../ConversationTypingIndicator"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var ConversationMessageList = function ConversationMessageList(_ref) {
  var messages = _ref.messages,
    isTyping = _ref.isTyping,
    levelColor = _ref.levelColor;
  var scrollViewRef = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    if (scrollViewRef.current) {
      setTimeout(function () {
        scrollViewRef.current.scrollToEnd({
          animated: true
        });
      }, 100);
    }
  }, [messages, isTyping]);
  return (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {
    ref: scrollViewRef,
    style: _style.default.container,
    contentContainerStyle: _style.default.contentContainer,
    showsVerticalScrollIndicator: false,
    children: [messages.map(function (message) {
      return (0, _jsxRuntime.jsx)(_ConversationMessage.default, {
        message: message,
        levelColor: levelColor
      }, message.id);
    }), isTyping && (0, _jsxRuntime.jsx)(_ConversationTypingIndicator.default, {
      levelColor: levelColor
    })]
  });
};
var _default = exports.default = ConversationMessageList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0TmF0aXZlIiwiX0NvbnZlcnNhdGlvbk1lc3NhZ2UiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX0NvbnZlcnNhdGlvblR5cGluZ0luZGljYXRvciIsIl9zdHlsZSIsIl9qc3hSdW50aW1lIiwiQ29udmVyc2F0aW9uTWVzc2FnZUxpc3QiLCJfcmVmIiwibWVzc2FnZXMiLCJpc1R5cGluZyIsImxldmVsQ29sb3IiLCJzY3JvbGxWaWV3UmVmIiwidXNlUmVmIiwidXNlRWZmZWN0IiwiY3VycmVudCIsInNldFRpbWVvdXQiLCJzY3JvbGxUb0VuZCIsImFuaW1hdGVkIiwianN4cyIsIlNjcm9sbFZpZXciLCJyZWYiLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsImNvbnRlbnRDb250YWluZXJTdHlsZSIsImNvbnRlbnRDb250YWluZXIiLCJzaG93c1ZlcnRpY2FsU2Nyb2xsSW5kaWNhdG9yIiwiY2hpbGRyZW4iLCJtYXAiLCJtZXNzYWdlIiwianN4IiwiZGVmYXVsdCIsImlkIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFNjcm9sbFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgQ29udmVyc2F0aW9uTWVzc2FnZSBmcm9tICcuLi9Db252ZXJzYXRpb25NZXNzYWdlJztcclxuaW1wb3J0IENvbnZlcnNhdGlvblR5cGluZ0luZGljYXRvciBmcm9tICcuLi9Db252ZXJzYXRpb25UeXBpbmdJbmRpY2F0b3InO1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGUnO1xyXG5cclxuLyoqXHJcbiAqIENvbXBvc2FudCBxdWkgYWZmaWNoZSBsYSBsaXN0ZSBkZXMgbWVzc2FnZXMgZGFucyBsYSBjb252ZXJzYXRpb25cclxuICogXHJcbiAqIEBwYXJhbSB7QXJyYXl9IG1lc3NhZ2VzIC0gTGlzdGUgZGVzIG1lc3NhZ2VzIMOgIGFmZmljaGVyXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNUeXBpbmcgLSBJbmRpcXVlIHNpIGxlIGJvdCBlc3QgZW4gdHJhaW4gZGUgdGFwZXJcclxuICogQHBhcmFtIHtzdHJpbmd9IGxldmVsQ29sb3IgLSBDb3VsZXVyIGFzc29jacOpZSBhdSBuaXZlYXUgY291cmFudFxyXG4gKi9cclxuY29uc3QgQ29udmVyc2F0aW9uTWVzc2FnZUxpc3QgPSAoeyBtZXNzYWdlcywgaXNUeXBpbmcsIGxldmVsQ29sb3IgfSkgPT4ge1xyXG4gIGNvbnN0IHNjcm9sbFZpZXdSZWYgPSB1c2VSZWYobnVsbCk7XHJcblxyXG4gIC8vIEZhaXJlIGTDqWZpbGVyIGF1dG9tYXRpcXVlbWVudCB2ZXJzIGxlIGJhcyBxdWFuZCBkZSBub3V2ZWF1eCBtZXNzYWdlcyBhcnJpdmVudFxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAoc2Nyb2xsVmlld1JlZi5jdXJyZW50KSB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIHNjcm9sbFZpZXdSZWYuY3VycmVudC5zY3JvbGxUb0VuZCh7IGFuaW1hdGVkOiB0cnVlIH0pO1xyXG4gICAgICB9LCAxMDApO1xyXG4gICAgfVxyXG4gIH0sIFttZXNzYWdlcywgaXNUeXBpbmddKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxTY3JvbGxWaWV3XHJcbiAgICAgIHJlZj17c2Nyb2xsVmlld1JlZn1cclxuICAgICAgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9XHJcbiAgICAgIGNvbnRlbnRDb250YWluZXJTdHlsZT17c3R5bGVzLmNvbnRlbnRDb250YWluZXJ9XHJcbiAgICAgIHNob3dzVmVydGljYWxTY3JvbGxJbmRpY2F0b3I9e2ZhbHNlfVxyXG4gICAgPlxyXG4gICAgICB7LyogQWZmaWNoZXIgdG91cyBsZXMgbWVzc2FnZXMgKi99XHJcbiAgICAgIHttZXNzYWdlcy5tYXAoKG1lc3NhZ2UpID0+IChcclxuICAgICAgICA8Q29udmVyc2F0aW9uTWVzc2FnZVxyXG4gICAgICAgICAga2V5PXttZXNzYWdlLmlkfVxyXG4gICAgICAgICAgbWVzc2FnZT17bWVzc2FnZX1cclxuICAgICAgICAgIGxldmVsQ29sb3I9e2xldmVsQ29sb3J9XHJcbiAgICAgICAgLz5cclxuICAgICAgKSl9XHJcblxyXG4gICAgICB7LyogQWZmaWNoZXIgbCdpbmRpY2F0ZXVyIGRlIGZyYXBwZSBzaSBuw6ljZXNzYWlyZSAqL31cclxuICAgICAge2lzVHlwaW5nICYmIDxDb252ZXJzYXRpb25UeXBpbmdJbmRpY2F0b3IgbGV2ZWxDb2xvcj17bGV2ZWxDb2xvcn0gLz59XHJcbiAgICA8L1Njcm9sbFZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvbnZlcnNhdGlvbk1lc3NhZ2VMaXN0O1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsb0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUgsT0FBQTtBQUNBLElBQUFJLDRCQUFBLEdBQUFELHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBSyxNQUFBLEdBQUFGLHNCQUFBLENBQUFILE9BQUE7QUFBNkIsSUFBQU0sV0FBQSxHQUFBTixPQUFBO0FBUzdCLElBQU1PLHVCQUF1QixHQUFHLFNBQTFCQSx1QkFBdUJBLENBQUFDLElBQUEsRUFBMkM7RUFBQSxJQUFyQ0MsUUFBUSxHQUFBRCxJQUFBLENBQVJDLFFBQVE7SUFBRUMsUUFBUSxHQUFBRixJQUFBLENBQVJFLFFBQVE7SUFBRUMsVUFBVSxHQUFBSCxJQUFBLENBQVZHLFVBQVU7RUFDL0QsSUFBTUMsYUFBYSxHQUFHLElBQUFDLGFBQU0sRUFBQyxJQUFJLENBQUM7RUFHbEMsSUFBQUMsZ0JBQVMsRUFBQyxZQUFNO0lBQ2QsSUFBSUYsYUFBYSxDQUFDRyxPQUFPLEVBQUU7TUFDekJDLFVBQVUsQ0FBQyxZQUFNO1FBQ2ZKLGFBQWEsQ0FBQ0csT0FBTyxDQUFDRSxXQUFXLENBQUM7VUFBRUMsUUFBUSxFQUFFO1FBQUssQ0FBQyxDQUFDO01BQ3ZELENBQUMsRUFBRSxHQUFHLENBQUM7SUFDVDtFQUNGLENBQUMsRUFBRSxDQUFDVCxRQUFRLEVBQUVDLFFBQVEsQ0FBQyxDQUFDO0VBRXhCLE9BQ0UsSUFBQUosV0FBQSxDQUFBYSxJQUFBLEVBQUNsQixZQUFBLENBQUFtQixVQUFVO0lBQ1RDLEdBQUcsRUFBRVQsYUFBYztJQUNuQlUsS0FBSyxFQUFFQyxjQUFNLENBQUNDLFNBQVU7SUFDeEJDLHFCQUFxQixFQUFFRixjQUFNLENBQUNHLGdCQUFpQjtJQUMvQ0MsNEJBQTRCLEVBQUUsS0FBTTtJQUFBQyxRQUFBLEdBR25DbkIsUUFBUSxDQUFDb0IsR0FBRyxDQUFDLFVBQUNDLE9BQU87TUFBQSxPQUNwQixJQUFBeEIsV0FBQSxDQUFBeUIsR0FBQSxFQUFDN0Isb0JBQUEsQ0FBQThCLE9BQW1CO1FBRWxCRixPQUFPLEVBQUVBLE9BQVE7UUFDakJuQixVQUFVLEVBQUVBO01BQVcsR0FGbEJtQixPQUFPLENBQUNHLEVBR2QsQ0FBQztJQUFBLENBQ0gsQ0FBQyxFQUdEdkIsUUFBUSxJQUFJLElBQUFKLFdBQUEsQ0FBQXlCLEdBQUEsRUFBQzNCLDRCQUFBLENBQUE0QixPQUEyQjtNQUFDckIsVUFBVSxFQUFFQTtJQUFXLENBQUUsQ0FBQztFQUFBLENBQzFELENBQUM7QUFFakIsQ0FBQztBQUFDLElBQUF1QixRQUFBLEdBQUFDLE9BQUEsQ0FBQUgsT0FBQSxHQUVhekIsdUJBQXVCIiwiaWdub3JlTGlzdCI6W119