0db3404702a6afa237b7c1cba66463e0
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = exports.default = {
  title: "A2 Spelling Rules & Advanced Patterns",
  description: "Learn complex spelling rules and patterns for English at A2 level",
  exercises: [{
    type: "spelling_rule",
    rule: "Prefix 'un-': Means 'not' or 'opposite of'",
    instruction: "Apply the rule: Add 'un-' to 'comfortable' to make the opposite",
    correctAnswer: "uncomfortable",
    hasHint: true,
    hint: "Just add 'un-' to the beginning without changing the root word.",
    explanation: "Prefix 'un-' creates opposites: comfortable → uncomfortable, pleasant → unpleasant, certain → uncertain."
  }, {
    type: "spelling_rule",
    rule: "Prefix 're-': Means 'again' or 'back'",
    instruction: "Apply the rule: Add 're-' to 'write' to mean 'write again'",
    correctAnswer: "rewrite",
    hasHint: true,
    hint: "Just combine 're-' with the root word.",
    explanation: "Prefix 're-' means again: write → rewrite, do → redo, play → replay, build → rebuild."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'pre-': Means 'before'",
    instruction: "Apply the rule: Add 'pre-' to 'view' to mean 'see before'",
    correctAnswer: "preview",
    hasHint: true,
    hint: "Combine 'pre-' with 'view' to mean seeing beforehand.",
    explanation: "Prefix 'pre-' means before: view → preview, pay → prepay, heat → preheat."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'dis-': Means 'not' or 'opposite of'",
    instruction: "Apply the rule: Add 'dis-' to 'like' to mean 'not like'",
    correctAnswer: "dislike",
    hasHint: true,
    hint: "Combine 'dis-' with 'like' to show the opposite.",
    explanation: "Prefix 'dis-' shows negation: like → dislike, agree → disagree, appear → disappear."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'mis-': Means 'wrongly' or 'badly'",
    instruction: "Apply the rule: Add 'mis-' to 'understand' to mean 'understand wrongly'",
    correctAnswer: "misunderstand",
    hasHint: true,
    hint: "Combine 'mis-' with 'understand' to show wrong understanding.",
    explanation: "Prefix 'mis-' means wrongly: understand → misunderstand, spell → misspell, behave → misbehave."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'over-': Means 'too much' or 'beyond'",
    instruction: "Apply the rule: Add 'over-' to 'sleep' to mean 'sleep too much'",
    correctAnswer: "oversleep",
    hasHint: true,
    hint: "Combine 'over-' with 'sleep' to mean sleeping too long.",
    explanation: "Prefix 'over-' means too much: sleep → oversleep, eat → overeat, work → overwork."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'under-': Means 'below' or 'not enough'",
    instruction: "Apply the rule: Add 'under-' to 'stand' to mean 'comprehend'",
    correctAnswer: "understand",
    hasHint: true,
    hint: "This creates the common word meaning 'to comprehend'.",
    explanation: "Prefix 'under-' can mean below or within: stand → understand, ground → underground."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'in-': Means 'not' (before certain letters)",
    instruction: "Apply the rule: Add 'in-' to 'complete' to mean 'not complete'",
    correctAnswer: "incomplete",
    hasHint: true,
    hint: "'In-' stays as 'in-' before 'c' and most other letters.",
    explanation: "Prefix 'in-' means not: complete → incomplete, correct → incorrect, direct → indirect."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'im-': Means 'not' (before 'p', 'b', 'm')",
    instruction: "Apply the rule: Add 'im-' to 'possible' to mean 'not possible'",
    correctAnswer: "impossible",
    hasHint: true,
    hint: "'In-' becomes 'im-' before 'p', 'b', and 'm'.",
    explanation: "Before p/b/m, 'in-' becomes 'im-': possible → impossible, polite → impolite, mature → immature."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'il-': Means 'not' (before 'l')",
    instruction: "Apply the rule: Add 'il-' to 'legal' to mean 'not legal'",
    correctAnswer: "illegal",
    hasHint: true,
    hint: "'In-' becomes 'il-' before words starting with 'l'.",
    explanation: "Before 'l', 'in-' becomes 'il-': legal → illegal, logical → illogical."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-ness': Changes adjectives to nouns",
    instruction: "Apply the rule: Add '-ness' to 'happy' to make a noun",
    correctAnswer: "happiness",
    hasHint: true,
    hint: "Change 'y' to 'i' before adding '-ness'.",
    explanation: "For words ending in 'y', change to 'i' before '-ness': happy → happiness, busy → business."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-ly': Changes adjectives to adverbs",
    instruction: "Apply the rule: Add '-ly' to 'careful' to show how something is done",
    correctAnswer: "carefully",
    hasHint: true,
    hint: "Just add '-ly' to the adjective.",
    explanation: "Most adjectives add '-ly' to become adverbs: careful → carefully, quick → quickly."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-ful': Means 'full of'",
    instruction: "Apply the rule: Add '-ful' to 'care' to mean 'full of care'",
    correctAnswer: "careful",
    hasHint: true,
    hint: "Add '-ful' to the noun to create an adjective.",
    explanation: "Suffix '-ful' means full of: care → careful, help → helpful, use → useful."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-less': Means 'without'",
    instruction: "Apply the rule: Add '-less' to 'care' to mean 'without care'",
    correctAnswer: "careless",
    hasHint: true,
    hint: "Add '-less' to show the absence of something.",
    explanation: "Suffix '-less' means without: care → careless, help → helpless, hope → hopeless."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-er': Shows comparison (more)",
    instruction: "Apply the rule: Add '-er' to 'fast' to compare speed",
    correctAnswer: "faster",
    hasHint: true,
    hint: "Add '-er' to compare two things.",
    explanation: "Suffix '-er' compares two things: fast → faster, tall → taller, smart → smarter."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-est': Shows superlative (most)",
    instruction: "Apply the rule: Add '-est' to 'fast' to show the highest degree",
    correctAnswer: "fastest",
    hasHint: true,
    hint: "Add '-est' to show the highest degree among three or more.",
    explanation: "Suffix '-est' shows superlative: fast → fastest, tall → tallest, smart → smartest."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-er': Doubling rule for short adjectives",
    instruction: "Apply the rule: Add '-er' to 'big' following the doubling rule",
    correctAnswer: "bigger",
    hasHint: true,
    hint: "Double the final consonant before adding '-er'.",
    explanation: "Short adjectives (CVC pattern) double the final consonant: big → bigger, hot → hotter."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-est': Doubling rule for short adjectives",
    instruction: "Apply the rule: Add '-est' to 'big' following the doubling rule",
    correctAnswer: "biggest",
    hasHint: true,
    hint: "Double the final consonant before adding '-est'.",
    explanation: "Short adjectives double the final consonant: big → biggest, hot → hottest, thin → thinnest."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-ing': No doubling for long vowels",
    instruction: "Apply the rule: Add '-ing' to 'sleep' (long vowel)",
    correctAnswer: "sleeping",
    hasHint: true,
    hint: "Long vowel sounds don't require doubling.",
    explanation: "Verbs with long vowels don't double: sleep → sleeping, read → reading, keep → keeping."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-tion': Creates nouns from verbs",
    instruction: "Apply the rule: Change 'act' to a noun using '-tion'",
    correctAnswer: "action",
    hasHint: true,
    hint: "Add '-ion' to 'act' to make the noun form.",
    explanation: "Many verbs form nouns with '-tion': act → action, create → creation, educate → education."
  }, {
    type: "spelling_rule",
    rule: "Long 'a' pattern: 'ai' in the middle of words",
    instruction: "Apply the pattern: Spell the word that means 'precipitation' using 'ai'",
    correctAnswer: "rain",
    hasHint: true,
    hint: "Use the 'ai' pattern for the long 'a' sound.",
    explanation: "The 'ai' pattern makes long 'a': rain, pain, main, train, brain."
  }, {
    type: "spelling_rule",
    rule: "Long 'a' pattern: 'ay' at the end of words",
    instruction: "Apply the pattern: Spell the word meaning 'the opposite of night' using 'ay'",
    correctAnswer: "day",
    hasHint: true,
    hint: "Use 'ay' pattern for long 'a' at the end.",
    explanation: "The 'ay' pattern makes long 'a' at word ends: day, play, stay, way, say."
  }, {
    type: "spelling_rule",
    rule: "Long 'e' pattern: 'ea' in words",
    instruction: "Apply the pattern: Spell the word meaning 'to consume food' using 'ea'",
    correctAnswer: "eat",
    hasHint: true,
    hint: "Use the 'ea' pattern for long 'e' sound.",
    explanation: "The 'ea' pattern often makes long 'e': eat, sea, tea, read, clean."
  }, {
    type: "spelling_rule",
    rule: "Long 'e' pattern: 'ee' in words",
    instruction: "Apply the pattern: Spell the word meaning 'to perceive with eyes' using 'ee'",
    correctAnswer: "see",
    hasHint: true,
    hint: "Use the 'ee' pattern for long 'e' sound.",
    explanation: "The 'ee' pattern makes long 'e': see, tree, free, three, green."
  }, {
    type: "spelling_rule",
    rule: "Long 'i' pattern: 'igh' in words",
    instruction: "Apply the pattern: Spell the word meaning 'illumination' using 'igh'",
    correctAnswer: "light",
    hasHint: true,
    hint: "Use the 'igh' pattern for long 'i' sound.",
    explanation: "The 'igh' pattern makes long 'i': light, night, right, fight, bright."
  }, {
    type: "spelling_rule",
    rule: "Long 'o' pattern: 'oa' in words",
    instruction: "Apply the pattern: Spell the word meaning 'watercraft' using 'oa'",
    correctAnswer: "boat",
    hasHint: true,
    hint: "Use the 'oa' pattern for long 'o' sound.",
    explanation: "The 'oa' pattern makes long 'o': boat, coat, road, soap, goal."
  }, {
    type: "spelling_rule",
    rule: "Long 'o' pattern: 'ow' at the end",
    instruction: "Apply the pattern: Spell the word meaning 'increase in size' using 'ow'",
    correctAnswer: "grow",
    hasHint: true,
    hint: "Use 'ow' pattern for long 'o' at word ends.",
    explanation: "The 'ow' pattern can make long 'o': grow, show, know, slow, flow."
  }, {
    type: "spelling_rule",
    rule: "Long 'u' pattern: 'oo' in words",
    instruction: "Apply the pattern: Spell the word meaning 'educational institution' using 'oo'",
    correctAnswer: "school",
    hasHint: true,
    hint: "Use the 'oo' pattern for long 'u' sound.",
    explanation: "The 'oo' pattern makes long 'u': school, food, moon, cool, pool."
  }, {
    type: "spelling_rule",
    rule: "Diphthong pattern: 'ou' making /ow/ sound",
    instruction: "Apply the pattern: Spell the word meaning 'residence' using 'ou'",
    correctAnswer: "house",
    hasHint: true,
    hint: "Use 'ou' for the /ow/ sound in this word.",
    explanation: "The 'ou' pattern can make /ow/: house, mouse, about, cloud, sound."
  }, {
    type: "spelling_rule",
    rule: "Diphthong pattern: 'ow' making /ow/ sound",
    instruction: "Apply the pattern: Spell the word meaning 'at this moment' using 'ow'",
    correctAnswer: "now",
    hasHint: true,
    hint: "Use 'ow' for the /ow/ sound.",
    explanation: "The 'ow' pattern can make /ow/: now, how, cow, down, brown."
  }, {
    type: "spelling_rule",
    rule: "Consonant cluster 'bl-': Beginning blends",
    instruction: "Apply the pattern: Spell the word meaning 'color absence' starting with 'bl'",
    correctAnswer: "black",
    hasHint: true,
    hint: "Use the 'bl' cluster at the beginning.",
    explanation: "The 'bl' cluster appears in: black, blue, blow, block, blood."
  }, {
    type: "spelling_rule",
    rule: "Consonant cluster 'cr-': Beginning blends",
    instruction: "Apply the pattern: Spell the word meaning 'weep' starting with 'cr'",
    correctAnswer: "cry",
    hasHint: true,
    hint: "Use the 'cr' cluster at the beginning.",
    explanation: "The 'cr' cluster appears in: cry, create, cross, cream, crown."
  }, {
    type: "spelling_rule",
    rule: "Consonant cluster 'st-': Beginning blends",
    instruction: "Apply the pattern: Spell the word meaning 'cease moving' starting with 'st'",
    correctAnswer: "stop",
    hasHint: true,
    hint: "Use the 'st' cluster at the beginning.",
    explanation: "The 'st' cluster appears in: stop, start, stand, study, strong."
  }, {
    type: "spelling_rule",
    rule: "Consonant cluster 'tr-': Beginning blends",
    instruction: "Apply the pattern: Spell the word meaning 'large plant' starting with 'tr'",
    correctAnswer: "tree",
    hasHint: true,
    hint: "Use the 'tr' cluster at the beginning.",
    explanation: "The 'tr' cluster appears in: tree, try, true, train, travel."
  }, {
    type: "spelling_rule",
    rule: "Consonant cluster '-nd': Ending blends",
    instruction: "Apply the pattern: Spell the word meaning 'discover' ending with 'nd'",
    correctAnswer: "find",
    hasHint: true,
    hint: "Use the 'nd' cluster at the end.",
    explanation: "The 'nd' cluster appears in: find, hand, and, kind, send."
  }, {
    type: "spelling_rule",
    rule: "Consonant cluster '-nt': Ending blends",
    instruction: "Apply the pattern: Spell the word meaning 'desired' ending with 'nt'",
    correctAnswer: "want",
    hasHint: true,
    hint: "Use the 'nt' cluster at the end.",
    explanation: "The 'nt' cluster appears in: want, went, plant, paint, count."
  }, {
    type: "spelling_rule",
    rule: "Consonant cluster '-st': Ending blends",
    instruction: "Apply the pattern: Spell the word meaning 'previous' ending with 'st'",
    correctAnswer: "last",
    hasHint: true,
    hint: "Use the 'st' cluster at the end.",
    explanation: "The 'st' cluster appears in: last, best, fast, first, most."
  }, {
    type: "spelling_rule",
    rule: "Triple consonant cluster 'str-': Beginning blends",
    instruction: "Apply the pattern: Spell the word meaning 'powerful' starting with 'str'",
    correctAnswer: "strong",
    hasHint: true,
    hint: "Use the three-letter 'str' cluster.",
    explanation: "The 'str' cluster appears in: strong, street, string, strange, straight."
  }, {
    type: "spelling_rule",
    rule: "Silent letters: 'k' before 'n'",
    instruction: "Apply the rule: Spell the word meaning 'be aware of' with silent 'k'",
    correctAnswer: "know",
    hasHint: true,
    hint: "The 'k' is silent before 'n'.",
    explanation: "The 'k' is silent before 'n': know, knee, knife, knock, knight."
  }, {
    type: "spelling_rule",
    rule: "Silent letters: 'w' before 'r'",
    instruction: "Apply the rule: Spell the word meaning 'compose text' with silent 'w'",
    correctAnswer: "write",
    hasHint: true,
    hint: "The 'w' is silent before 'r'.",
    explanation: "The 'w' is silent before 'r': write, wrong, wrap, wrist, wreck."
  }, {
    type: "spelling_rule",
    rule: "Silent letters: 'b' after 'm'",
    instruction: "Apply the rule: Spell the animal word ending with silent 'b'",
    correctAnswer: "lamb",
    hasHint: true,
    hint: "The 'b' is silent after 'm' at the end.",
    explanation: "The 'b' is silent after 'm': lamb, climb, thumb, bomb, comb."
  }, {
    type: "spelling_rule",
    rule: "Soft 'c' rule: 'c' sounds like 's' before 'e', 'i', 'y'",
    instruction: "Apply the rule: Spell the word meaning 'urban area' where 'c' sounds like 's'",
    correctAnswer: "city",
    hasHint: true,
    hint: "The 'c' makes an 's' sound before 'i'.",
    explanation: "Soft 'c' (sounds like 's'): city, nice, face, dance, place."
  }, {
    type: "spelling_rule",
    rule: "Soft 'g' rule: 'g' sounds like 'j' before 'e', 'i', 'y'",
    instruction: "Apply the rule: Spell the word meaning 'large' where 'g' sounds like 'j'",
    correctAnswer: "huge",
    hasHint: true,
    hint: "The 'g' makes a 'j' sound before 'e'.",
    explanation: "Soft 'g' (sounds like 'j'): huge, age, page, orange, stage."
  }, {
    type: "spelling_rule",
    rule: "'ck' pattern: Used after short vowels",
    instruction: "Apply the rule: Spell the word meaning 'timepiece' using 'ck'",
    correctAnswer: "clock",
    hasHint: true,
    hint: "Use 'ck' after the short 'o' sound.",
    explanation: "Use 'ck' after short vowels: clock, back, neck, pick, duck."
  }, {
    type: "spelling_rule",
    rule: "'tch' pattern: Used after short vowels",
    instruction: "Apply the rule: Spell the word meaning 'grab' using 'tch'",
    correctAnswer: "catch",
    hasHint: true,
    hint: "Use 'tch' after the short 'a' sound.",
    explanation: "Use 'tch' after short vowels: catch, watch, kitchen, match, witch."
  }, {
    type: "spelling_rule",
    rule: "Contraction rule: 'will not' becomes 'won't'",
    instruction: "Apply the rule: Write the contraction for 'will not'",
    correctAnswer: "won't",
    hasHint: true,
    hint: "This is an irregular contraction that doesn't follow normal patterns.",
    explanation: "'Will not' becomes 'won't' - this is irregular and must be memorized."
  }, {
    type: "spelling_rule",
    rule: "Contraction rule: 'would' becomes 'd'",
    instruction: "Apply the rule: Write the contraction for 'I would'",
    correctAnswer: "I'd",
    hasHint: true,
    hint: "Contract 'would' to just 'd' after the pronoun.",
    explanation: "Contractions with 'would': I'd, you'd, he'd, she'd, we'd, they'd."
  }, {
    type: "spelling_rule",
    rule: "Contraction rule: 'have' becomes 've'",
    instruction: "Apply the rule: Write the contraction for 'they have'",
    correctAnswer: "they've",
    hasHint: true,
    hint: "Contract 'have' to 've' after the pronoun.",
    explanation: "Contractions with 'have': I've, you've, we've, they've."
  }, {
    type: "spelling_rule",
    rule: "Contraction rule: 'had' becomes 'd'",
    instruction: "Apply the rule: Write the contraction for 'she had'",
    correctAnswer: "she'd",
    hasHint: true,
    hint: "Both 'had' and 'would' contract to 'd' - context determines meaning.",
    explanation: "Contractions with 'had': I'd, you'd, he'd, she'd, we'd, they'd (same as 'would')."
  }, {
    type: "spelling_rule",
    rule: "Contraction rule: 'let us' becomes 'let's'",
    instruction: "Apply the rule: Write the contraction for 'let us'",
    correctAnswer: "let's",
    hasHint: true,
    hint: "This common phrase contracts to 'let's'.",
    explanation: "'Let us' becomes 'let's' - commonly used for suggestions: 'Let's go!'"
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,