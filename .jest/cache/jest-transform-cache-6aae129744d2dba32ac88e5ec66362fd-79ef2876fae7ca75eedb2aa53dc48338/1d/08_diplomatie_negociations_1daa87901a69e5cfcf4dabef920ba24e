de2aa2b587b17f94f0b02f6503be3287
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vocab = void 0;
var vocab = exports.vocab = {
  title: "Diplomatie et Négociations Internationales",
  words: [{
    word: "receiving state",
    translation: "État accréditaire",
    example: "The receiving state hosts foreign diplomatic missions."
  }, {
    word: "sending state",
    translation: "État accréditant",
    example: "The sending state dispatches diplomats to represent its interests."
  }, {
    word: "foreign service",
    translation: "service extérieur",
    example: "The foreign service manages international relations and diplomacy."
  }, {
    word: "diplomatic rank",
    translation: "rang diplomatique",
    example: "Diplomatic ranks include ambassadors, ministers, and attachés."
  }, {
    word: "chargé d'affaires",
    translation: "chargé d'affaires",
    example: "The chargé d'affaires headed the mission in the ambassador's absence."
  }, {
    word: "diplomatic note",
    translation: "note diplomatique",
    example: "The diplomatic note formally communicated the government's position."
  }, {
    word: "diplomatic bag",
    translation: "sac diplomatique",
    example: "The diplomatic bag carried classified documents between missions."
  }, {
    word: "treaty organization",
    translation: "organisation conventionnelle",
    example: "Treaty organizations implement specific international agreements."
  }, {
    word: "governing board",
    translation: "conseil d'administration",
    example: "The governing board oversees the organization's strategic direction."
  }, {
    word: "headquarters agreement",
    translation: "accord de siège",
    example: "The headquarters agreement established the organization's legal status."
  }, {
    word: "diplomatic conference",
    translation: "conférence diplomatique",
    example: "The diplomatic conference negotiated the organization's founding treaty."
  }, {
    word: "international civil servant",
    translation: "fonctionnaire international",
    example: "International civil servants work for global organizations, not individual countries."
  }, {
    word: "privileges and immunities",
    translation: "privilèges et immunités",
    example: "Privileges and immunities protect the organization's independent functioning."
  }, {
    word: "voting procedure",
    translation: "procédure de vote",
    example: "The voting procedure required a two-thirds majority for important questions."
  }, {
    word: "multilateral negotiation",
    translation: "négociation multilatérale",
    example: "Multilateral negotiations involve multiple parties addressing common issues."
  }, {
    word: "working group",
    translation: "groupe de travail",
    example: "The working group developed technical proposals on specific topics."
  }, {
    word: "negotiating bloc",
    translation: "bloc de négociation",
    example: "The negotiating bloc coordinated positions among like-minded countries."
  }, {
    word: "draft resolution",
    translation: "projet de résolution",
    example: "The draft resolution was circulated for comments before formal submission."
  }, {
    word: "amendment proposal",
    translation: "proposition d'amendement",
    example: "The amendment proposal modified language in the original text."
  }, {
    word: "negotiating mandate",
    translation: "mandat de négociation",
    example: "The negotiating mandate defined objectives and acceptable outcomes."
  }, {
    word: "bracketed text",
    translation: "texte entre crochets",
    example: "Bracketed text indicates language still under negotiation."
  }, {
    word: "conference diplomacy",
    translation: "diplomatie de conférence",
    example: "Conference diplomacy characterizes interactions at major international meetings."
  }, {
    word: "intergovernmental conference",
    translation: "conférence intergouvernementale",
    example: "The intergovernmental conference developed new treaty provisions."
  }, {
    word: "diplomatic procedure",
    translation: "procédure diplomatique",
    example: "Diplomatic procedure structured the formal negotiation process."
  }, {
    word: "single undertaking",
    translation: "engagement unique",
    example: "The single undertaking principle required agreement on all elements as a package."
  }, {
    word: "parallel negotiations",
    translation: "négociations parallèles",
    example: "Parallel negotiations addressed different aspects simultaneously."
  }, {
    word: "national position",
    translation: "position nationale",
    example: "National positions outlined each country's priorities and interests."
  }, {
    word: "ministerial meeting",
    translation: "réunion ministérielle",
    example: "The ministerial meeting resolved outstanding high-level political issues."
  }, {
    word: "contact group",
    translation: "groupe de contact",
    example: "The contact group facilitated informal discussions between key parties."
  }, {
    word: "text proposal",
    translation: "proposition de texte",
    example: "The text proposal offered compromise language on disputed issues."
  }, {
    word: "diplomatic friction",
    translation: "friction diplomatique",
    example: "Diplomatic friction emerged over controversial provisions."
  }, {
    word: "common position",
    translation: "position commune",
    example: "The regional group developed a common position for the negotiations."
  }, {
    word: "negotiation platform",
    translation: "plateforme de négociation",
    example: "The negotiation platform outlined starting positions and objectives."
  }, {
    word: "joint statement",
    translation: "déclaration conjointe",
    example: "The joint statement expressed shared commitments among participating states."
  }, {
    word: "multilateral process",
    translation: "processus multilatéral",
    example: "The multilateral process incorporated diverse perspectives and interests."
  }, {
    word: "peace negotiation",
    translation: "négociation de paix",
    example: "Peace negotiations aimed to end the decade-long civil conflict."
  }, {
    word: "peacekeeping",
    translation: "maintien de la paix",
    example: "Peacekeeping operations deployed to monitor the ceasefire agreement."
  }, {
    word: "peacebuilding",
    translation: "consolidation de la paix",
    example: "Peacebuilding activities strengthened institutions after the conflict."
  }, {
    word: "peace agreement",
    translation: "accord de paix",
    example: "The peace agreement addressed political, economic, and security arrangements."
  }, {
    word: "third-party facilitation",
    translation: "facilitation par une tierce partie",
    example: "Third-party facilitation helped overcome negotiation obstacles."
  }, {
    word: "confidence-building measure",
    translation: "mesure de confiance",
    example: "Confidence-building measures reduced tensions along the disputed border."
  }, {
    word: "demobilization",
    translation: "démobilisation",
    example: "Demobilization transitioned fighters from military to civilian status."
  }, {
    word: "reintegration",
    translation: "réintégration",
    example: "Reintegration programs helped former combatants return to civilian life."
  }, {
    word: "international observer",
    translation: "observateur international",
    example: "International observers monitored compliance with peace terms."
  }, {
    word: "peace settlement",
    translation: "règlement pacifique",
    example: "The peace settlement established new political arrangements."
  }, {
    word: "negotiating position",
    translation: "position de négociation",
    example: "Their negotiating position outlined core interests and acceptable outcomes."
  }, {
    word: "negotiating power",
    translation: "pouvoir de négociation",
    example: "Economic resources increased their negotiating power substantially."
  }, {
    word: "bargaining chip",
    translation: "monnaie d'échange",
    example: "Market access served as an important bargaining chip in the talks."
  }, {
    word: "zone of possible agreement",
    translation: "zone d'accord possible",
    example: "The zone of possible agreement narrowed as positions hardened."
  }, {
    word: "best alternative to negotiated agreement",
    translation: "meilleure solution de rechange à un accord négocié",
    example: "A strong best alternative to negotiated agreement improved their leverage."
  }, {
    word: "concession",
    translation: "concession",
    example: "The concession on timeframes secured movement on substantive issues."
  }, {
    word: "interest-based negotiation",
    translation: "négociation fondée sur les intérêts",
    example: "Interest-based negotiation focuses on underlying needs rather than stated positions."
  }, {
    word: "deadline pressure",
    translation: "pression de l'échéance",
    example: "Deadline pressure accelerated progress in the final negotiation phase."
  }, {
    word: "walk-away point",
    translation: "point de rupture",
    example: "The delegation identified its walk-away point before entering talks."
  }, {
    word: "diplomatic leverage",
    translation: "levier diplomatique",
    example: "Coalition formation increased their diplomatic leverage considerably."
  }, {
    word: "fall-back position",
    translation: "position de repli",
    example: "The fall-back position provided flexibility if primary objectives proved unattainable."
  }, {
    word: "strategic patience",
    translation: "patience stratégique",
    example: "Strategic patience allowed tensions to subside before resuming talks."
  }, {
    word: "linkage strategy",
    translation: "stratégie de liaison",
    example: "Their linkage strategy connected progress in separate negotiation tracks."
  }, {
    word: "red line",
    translation: "ligne rouge",
    example: "The delegation established red lines that couldn't be crossed during negotiations."
  }, {
    word: "constructive ambiguity",
    translation: "ambiguïté constructive",
    example: "Constructive ambiguity in the text allowed different interpretations by the parties."
  }, {
    word: "negotiation dynamic",
    translation: "dynamique de négociation",
    example: "The negotiation dynamic shifted after the ministerial intervention."
  }, {
    word: "escalation management",
    translation: "gestion de l'escalade",
    example: "Escalation management prevented minor disputes from derailing the process."
  }, {
    word: "integrative approach",
    translation: "approche intégrative",
    example: "The integrative approach expanded available options through creative problem-solving."
  }, {
    word: "distributive bargaining",
    translation: "négociation distributive",
    example: "Distributive bargaining focused on allocating fixed resources between parties."
  }, {
    word: "bilateral relationship",
    translation: "relation bilatérale",
    example: "The bilateral relationship improved through regular high-level dialogue."
  }, {
    word: "strategic partnership",
    translation: "partenariat stratégique",
    example: "The strategic partnership deepened cooperation in defense and technology."
  }, {
    word: "regional integration",
    translation: "intégration régionale",
    example: "Regional integration strengthened economic ties between neighboring states."
  }, {
    word: "international system",
    translation: "système international",
    example: "The international system has evolved from bipolarity to multipolarity."
  }, {
    word: "diplomatic influence",
    translation: "influence diplomatique",
    example: "Their diplomatic influence expanded through coalition-building efforts."
  }, {
    word: "foreign relations",
    translation: "relations extérieures",
    example: "The ministry of foreign relations coordinates international engagement."
  }, {
    word: "state sovereignty",
    translation: "souveraineté étatique",
    example: "State sovereignty remains a fundamental principle in international law."
  }, {
    word: "international actor",
    translation: "acteur international",
    example: "Non-state entities have emerged as influential international actors."
  }, {
    word: "international order",
    translation: "ordre international",
    example: "The international order comprises norms, institutions, and power relationships."
  }, {
    word: "alliance system",
    translation: "système d'alliance",
    example: "The alliance system created mutual defense commitments among partners."
  }, {
    word: "non-interference",
    translation: "non-ingérence",
    example: "The principle of non-interference respects domestic jurisdiction."
  }, {
    word: "great power politics",
    translation: "politique des grandes puissances",
    example: "Great power politics shapes global security arrangements."
  }, {
    word: "foreign minister",
    translation: "ministre des affaires étrangères",
    example: "The foreign minister represented the country at international meetings."
  }, {
    word: "international engagement",
    translation: "engagement international",
    example: "International engagement expanded beyond traditional partners."
  }, {
    word: "foreign service officer",
    translation: "agent diplomatique",
    example: "Foreign service officers represent their country's interests abroad."
  }, {
    word: "international influence",
    translation: "influence internationale",
    example: "Economic growth increased their international influence considerably."
  }, {
    word: "diplomatic approach",
    translation: "approche diplomatique",
    example: "Their diplomatic approach emphasized multilateral engagement."
  }, {
    word: "national security strategy",
    translation: "stratégie de sécurité nationale",
    example: "The national security strategy identified priority threats and responses."
  }, {
    word: "overseas mission",
    translation: "mission à l'étranger",
    example: "Overseas missions implement foreign policy objectives locally."
  }, {
    word: "international posture",
    translation: "posture internationale",
    example: "The international posture projected strength while seeking dialogue."
  }, {
    word: "foreign affairs ministry",
    translation: "ministère des affaires étrangères",
    example: "The foreign affairs ministry coordinates all diplomatic activities."
  }, {
    word: "international policy",
    translation: "politique internationale",
    example: "International policy addressed both bilateral and multilateral relationships."
  }, {
    word: "strategic dialogue",
    translation: "dialogue stratégique",
    example: "The strategic dialogue addressed security and economic concerns."
  }, {
    word: "policy guidance",
    translation: "orientation politique",
    example: "Policy guidance established parameters for negotiating positions."
  }, {
    word: "defense alliance",
    translation: "alliance de défense",
    example: "The defense alliance established mutual protection commitments."
  }, {
    word: "defense cooperation",
    translation: "coopération en matière de défense",
    example: "Defense cooperation included joint military exercises."
  }, {
    word: "security policy",
    translation: "politique de sécurité",
    example: "Security policy addressed both traditional and emerging threats."
  }, {
    word: "defense capability",
    translation: "capacité de défense",
    example: "Defense capabilities included both conventional and cyber systems."
  }, {
    word: "security threat",
    translation: "menace sécuritaire",
    example: "Transnational terrorism presents a significant security threat."
  }, {
    word: "military alliance",
    translation: "alliance militaire",
    example: "The military alliance coordinated defense planning and operations."
  }, {
    word: "strategic deterrence",
    translation: "dissuasion stratégique",
    example: "Strategic deterrence prevents attacks through credible retaliation threats."
  }, {
    word: "security arrangement",
    translation: "arrangement de sécurité",
    example: "Regional security arrangements provided stability frameworks."
  }, {
    word: "military capability",
    translation: "capacité militaire",
    example: "Military capability assessments inform defense planning."
  }, {
    word: "defense minister",
    translation: "ministre de la défense",
    example: "The defense minister oversees military policy and operations."
  }, {
    word: "defense strategy",
    translation: "stratégie de défense",
    example: "The defense strategy identified priorities and resource allocation."
  }, {
    word: "threat assessment",
    translation: "évaluation des menaces",
    example: "Threat assessments analyze potential risks to national security."
  }, {
    word: "defense diplomacy",
    translation: "diplomatie de défense",
    example: "Defense diplomacy builds relationships through military engagement."
  }, {
    word: "security challenge",
    translation: "défi sécuritaire",
    example: "Cybersecurity represents a growing security challenge."
  }, {
    word: "combat readiness",
    translation: "préparation au combat",
    example: "The alliance assessed combat readiness through regular exercises."
  }, {
    word: "security doctrine",
    translation: "doctrine de sécurité",
    example: "Their security doctrine emphasized preventive diplomacy."
  }, {
    word: "diplomatic communication",
    translation: "communication diplomatique",
    example: "Diplomatic communication requires precision and cultural sensitivity."
  }, {
    word: "official statement",
    translation: "déclaration officielle",
    example: "The official statement expressed concern over border incidents."
  }, {
    word: "joint communiqué",
    translation: "communiqué conjoint",
    example: "The joint communiqué announced cooperation on climate initiatives."
  }, {
    word: "diplomatic language",
    translation: "langage diplomatique",
    example: "Diplomatic language employs carefully chosen terminology."
  }, {
    word: "press briefing",
    translation: "point de presse",
    example: "The press briefing clarified the delegation's objectives."
  }, {
    word: "diplomatic correspondence",
    translation: "correspondance diplomatique",
    example: "Diplomatic correspondence maintains formal communication channels."
  }, {
    word: "official spokesperson",
    translation: "porte-parole officiel",
    example: "The official spokesperson delivered the ministry's response."
  }, {
    word: "diplomatic signal",
    translation: "signal diplomatique",
    example: "Canceling the visit sent a strong diplomatic signal."
  }, {
    word: "policy statement",
    translation: "déclaration de politique",
    example: "The policy statement outlined the government's position."
  }, {
    word: "diplomatic clarity",
    translation: "clarté diplomatique",
    example: "Diplomatic clarity prevented misunderstanding of intentions."
  }, {
    word: "official announcement",
    translation: "annonce officielle",
    example: "The official announcement confirmed the diplomatic appointment."
  }, {
    word: "official communication",
    translation: "communication officielle",
    example: "The official communication requested bilateral consultations."
  }, {
    word: "talking points",
    translation: "éléments de langage",
    example: "Talking points ensured consistent messaging across representatives."
  }, {
    word: "diplomatic exchange",
    translation: "échange diplomatique",
    example: "The diplomatic exchange clarified positions on disputed issues."
  }, {
    word: "public statement",
    translation: "déclaration publique",
    example: "The public statement reaffirmed commitment to the agreement."
  }, {
    word: "media strategy",
    translation: "stratégie médiatique",
    example: "The media strategy highlighted diplomatic achievements."
  }, {
    word: "diplomatic rhetoric",
    translation: "rhétorique diplomatique",
    example: "Diplomatic rhetoric softened following productive talks."
  }, {
    word: "ceremonial function",
    translation: "fonction cérémonielle",
    example: "The ceremonial function marked the treaty signing."
  }, {
    word: "order of precedence",
    translation: "ordre de préséance",
    example: "Order of precedence determines seating and speaking arrangements."
  }, {
    word: "credentials ceremony",
    translation: "cérémonie de présentation des lettres de créance",
    example: "The credentials ceremony formally recognized the new ambassador."
  }, {
    word: "diplomatic etiquette",
    translation: "étiquette diplomatique",
    example: "Diplomatic etiquette guides behavior in official settings."
  }, {
    word: "official reception",
    translation: "réception officielle",
    example: "The official reception welcomed the visiting delegation."
  }, {
    word: "state dinner",
    translation: "dîner d'État",
    example: "The state dinner honored the visiting head of state."
  }, {
    word: "presentation of credentials",
    translation: "présentation des lettres de créance",
    example: "Presentation of credentials initiates an ambassador's mission."
  }, {
    word: "protocol officer",
    translation: "officier du protocole",
    example: "Protocol officers ensure proper ceremonial arrangements."
  }, {
    word: "formal ceremony",
    translation: "cérémonie formelle",
    example: "The formal ceremony marked the diplomatic anniversary."
  }, {
    word: "diplomatic formality",
    translation: "formalité diplomatique",
    example: "Diplomatic formalities structure official interactions."
  }, {
    word: "ceremonial protocol",
    translation: "protocole cérémoniel",
    example: "Ceremonial protocol dictates procedures for state events."
  }, {
    word: "flag protocol",
    translation: "protocole des drapeaux",
    example: "Flag protocol specifies display arrangements for national symbols."
  }, {
    word: "welcoming ceremony",
    translation: "cérémonie d'accueil",
    example: "The welcoming ceremony included military honors."
  }, {
    word: "diplomatic honor",
    translation: "honneur diplomatique",
    example: "Diplomatic honors recognized outstanding service."
  }, {
    word: "ceremonial occasion",
    translation: "occasion cérémonielle",
    example: "The ceremonial occasion celebrated diplomatic achievements."
  }, {
    word: "diplomatic custom",
    translation: "coutume diplomatique",
    example: "Diplomatic customs vary between countries and contexts."
  }, {
    word: "protocol breach",
    translation: "manquement au protocole",
    example: "The protocol breach created an awkward diplomatic situation."
  }, {
    word: "official visit",
    translation: "visite officielle",
    example: "The official visit strengthened bilateral relations."
  }, {
    word: "state protocol",
    translation: "protocole d'État",
    example: "State protocol governs high-level diplomatic interactions."
  }, {
    word: "protocol department",
    translation: "département du protocole",
    example: "The protocol department arranged the diplomatic conference."
  }, {
    word: "diplomatic tradition",
    translation: "tradition diplomatique",
    example: "Diplomatic traditions evolve while maintaining core principles."
  }, {
    word: "ceremonial procedure",
    translation: "procédure cérémonielle",
    example: "Ceremonial procedures formalize diplomatic transitions."
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,