{"version":3,"names":["_react","require","_expoRouter","_useActivityMetrics2","_interopRequireDefault","useRouteActivityTracker","segments","useSegments","pathname","usePathname","_useActivityMetrics","useActivityMetrics","startSession","endSession","updateStreak","currentSessionRef","useRef","isTrackingRef","lastPathnameRef","safeExecute","fn","errorMessage","error","console","warn","detectExercise","some","segment","includes","handleExerciseStart","exerciseType","current","success","handleExerciseEnd","cleanup","useEffect","isExercise","length","_default","exports","default"],"sources":["useRouteActivityTracker.js"],"sourcesContent":["// src/hooks/useRouteActivityTracker.js - REFACTORISÉ pour réduire la complexité cognitive\r\nimport { useEffect, useRef } from 'react';\r\nimport { useSegments, usePathname } from 'expo-router';\r\nimport useActivityMetrics from './useActivityMetrics';\r\n\r\nconst useRouteActivityTracker = () => {\r\n  const segments = useSegments();\r\n  const pathname = usePathname();\r\n  const { startSession, endSession, updateStreak } = useActivityMetrics();\r\n  \r\n  // Refs pour éviter les appels en boucle\r\n  const currentSessionRef = useRef(null);\r\n  const isTrackingRef = useRef(false);\r\n  const lastPathnameRef = useRef(null);\r\n\r\n  // Fonction utilitaire pour exécuter des fonctions de manière sécurisée\r\n  const safeExecute = (fn, errorMessage) => {\r\n    try {\r\n      return fn();\r\n    } catch (error) {\r\n      console.warn(errorMessage, error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Fonction pour détecter si on est sur un exercice\r\n  const detectExercise = (segments) => {\r\n    return segments.some(segment => \r\n      segment.includes('Exercise') ||\r\n      segment.includes('exercise') ||\r\n      segment.includes('Assessment') ||\r\n      segment.includes('assessment')\r\n    );\r\n  };\r\n\r\n  // Fonction pour gérer le démarrage d'un exercice\r\n  const handleExerciseStart = (exerciseType) => {\r\n    if (isTrackingRef.current && currentSessionRef.current === exerciseType) {\r\n      return; // Déjà en cours de tracking\r\n    }\r\n\r\n    // Arrêter la session précédente si elle existe\r\n    if (isTrackingRef.current) {\r\n      safeExecute(() => {\r\n        endSession();\r\n        updateStreak();\r\n      }, 'Erreur lors de la fin de session:');\r\n    }\r\n    \r\n    // Démarrer la nouvelle session\r\n    const success = safeExecute(() => {\r\n      startSession(exerciseType);\r\n    }, 'Erreur lors du démarrage de session:');\r\n\r\n    if (success) {\r\n      isTrackingRef.current = true;\r\n      currentSessionRef.current = exerciseType;\r\n    } else {\r\n      isTrackingRef.current = false;\r\n      currentSessionRef.current = null;\r\n    }\r\n  };\r\n\r\n  // Fonction pour gérer la fin d'un exercice\r\n  const handleExerciseEnd = () => {\r\n    if (!isTrackingRef.current) {\r\n      return;\r\n    }\r\n\r\n    safeExecute(() => {\r\n      endSession();\r\n      updateStreak();\r\n    }, 'Erreur lors de la fin de session:');\r\n\r\n    isTrackingRef.current = false;\r\n    currentSessionRef.current = null;\r\n  };\r\n\r\n  // Fonction pour nettoyer l'état\r\n  const cleanup = () => {\r\n    if (isTrackingRef.current) {\r\n      safeExecute(() => {\r\n        endSession();\r\n      }, 'Erreur lors du cleanup:');\r\n      \r\n      isTrackingRef.current = false;\r\n      currentSessionRef.current = null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Éviter les re-déclenchements inutiles\r\n    if (lastPathnameRef.current === pathname) {\r\n      return;\r\n    }\r\n    lastPathnameRef.current = pathname;\r\n\r\n    const isExercise = detectExercise(segments);\r\n\r\n    if (isExercise) {\r\n      const exerciseType = segments[segments.length - 1];\r\n      handleExerciseStart(exerciseType);\r\n    } else {\r\n      handleExerciseEnd();\r\n    }\r\n\r\n    return cleanup;\r\n  }, [segments, pathname, startSession, endSession, updateStreak]);\r\n\r\n  // Cleanup final au démontage\r\n  useEffect(() => {\r\n    return cleanup;\r\n  }, [endSession]);\r\n\r\n  // Pas de rendu\r\n};\r\n\r\nexport default useRouteActivityTracker;"],"mappings":"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","ignoreList":[]}