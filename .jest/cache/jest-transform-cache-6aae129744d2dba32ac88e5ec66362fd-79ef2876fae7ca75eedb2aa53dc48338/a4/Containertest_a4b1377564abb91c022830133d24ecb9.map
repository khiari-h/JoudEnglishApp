{"version":3,"names":["_getJestObj","mock","_require","require","View","SafeAreaView","_ref","children","style","edges","rest","_objectWithoutProperties2","default","_excluded","_jsxRuntime","jsx","Object","assign","testID","useSafeAreaInsets","top","bottom","left","right","useSafeAreaFrame","x","y","width","height","RN","jest","requireActual","StatusBar","props","_interopRequireDefault","_react","_reactNative","_reactNative2","_reactNativeSafeAreaContext","_Container","_require2","describe","it","_render","render","Text","getByText","expect","toBeTruthy","_render2","getByTestId","_render3","safeArea","queryByTestId","UNSAFE_getByType","toBeNull","_render4","container","flatStyle","StyleSheet","flatten","toHaveProperty","_render5","withPadding","not","_render6","withScrollView","ScrollView","_render7","scrollViewProps","keyboardShouldPersistTaps","toBe","_render8","queryByText","UNSAFE_queryByType","_render9","statusBar","backgroundColor","barStyle","_render0","withStatusBar","_render1","statusBarColor","statusBarStyle","_render10","_render11","safeAreaEdges","safeAreaView","toEqual","_render12","_render13"],"sources":["Container.test.js"],"sourcesContent":["// __tests__/components/layout/Container.test.js\nimport React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { View, ScrollView, Text, StyleSheet, StatusBar } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Container from '../../../src/components/layout/Container';\n\n// Mock SafeAreaView from react-native-safe-area-context\njest.mock('react-native-safe-area-context', () => {\n  const { View } = require('react-native');\n  return {\n    SafeAreaView: ({ children, style, edges, ...rest }) => (\n      <View style={style} {...rest} testID=\"mock-safe-area-view\" edges={edges}>\n        {children}\n      </View>\n    ),\n    useSafeAreaInsets: () => ({ top: 0, bottom: 0, left: 0, right: 0 }),\n    useSafeAreaFrame: () => ({ x: 0, y: 0, width: 320, height: 640 }),\n  };\n});\n\n// Mock StatusBar - version simplifiÃ©e puisqu'on teste juste le composant JSX\njest.mock('react-native', () => {\n  const RN = jest.requireActual('react-native');\n  \n  return {\n    ...RN,\n    StatusBar: (props) => <RN.View testID=\"status-bar\" {...props} />,\n  };\n});\n\ndescribe('Container', () => {\n  it('renders children correctly', () => {\n    const { getByText } = render(<Container><Text>Hello World</Text></Container>);\n    expect(getByText('Hello World')).toBeTruthy();\n  });\n\n  it('uses SafeAreaView by default', () => {\n    const { getByTestId } = render(<Container />);\n    expect(getByTestId('mock-safe-area-view')).toBeTruthy();\n  });\n\n  it('uses View when safeArea is false', () => {\n    const { queryByTestId, UNSAFE_getByType } = render(<Container safeArea={false} />);\n    expect(queryByTestId('mock-safe-area-view')).toBeNull();\n    expect(UNSAFE_getByType(View)).toBeTruthy();\n  });\n\n  it('applies padding by default', () => {\n    const { getByTestId } = render(<Container />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).toHaveProperty('padding', 16);\n  });\n\n  it('does not apply padding when withPadding is false', () => {\n    const { getByTestId } = render(<Container withPadding={false} />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).not.toHaveProperty('padding', 16);\n  });\n\n  it('renders ScrollView when withScrollView is true', () => {\n    const { getByTestId, UNSAFE_getByType, getByText } = render(\n      <Container withScrollView={true}><Text>Scrollable Content</Text></Container>\n    );\n    expect(UNSAFE_getByType(ScrollView)).toBeTruthy();\n    expect(getByTestId('mock-safe-area-view')).toBeTruthy();\n    expect(getByText('Scrollable Content')).toBeTruthy();\n  });\n\n  it('passes scrollViewProps to ScrollView', () => {\n    const { UNSAFE_getByType } = render(\n      <Container withScrollView={true} scrollViewProps={{ keyboardShouldPersistTaps: 'always' }} />\n    );\n    expect(UNSAFE_getByType(ScrollView).props.keyboardShouldPersistTaps).toBe('always');\n  });\n\n  it('does not render ScrollView when withScrollView is false', () => {\n    const { queryByText, UNSAFE_queryByType } = render(\n      <Container withScrollView={false}><Text>Static Content</Text></Container>\n    );\n    expect(UNSAFE_queryByType(ScrollView)).toBeNull();\n    expect(queryByText('Static Content')).toBeTruthy();\n  });\n\n  it('renders StatusBar component by default', () => {\n    const { getByTestId } = render(<Container />);\n    const statusBar = getByTestId('status-bar');\n    expect(statusBar).toBeTruthy();\n    expect(statusBar.props.backgroundColor).toBe('#FFFFFF');\n    expect(statusBar.props.barStyle).toBe('dark-content');\n  });\n\n  it('does not render StatusBar when withStatusBar is false', () => {\n    const { queryByTestId } = render(<Container withStatusBar={false} />);\n    expect(queryByTestId('status-bar')).toBeNull();\n  });\n\n  it('applies custom statusBarColor and statusBarStyle to StatusBar component', () => {\n    const { getByTestId } = render(\n      <Container statusBarColor=\"#FF0000\" statusBarStyle=\"light-content\" />\n    );\n    const statusBar = getByTestId('status-bar');\n    expect(statusBar.props.backgroundColor).toBe('#FF0000');\n    expect(statusBar.props.barStyle).toBe('light-content');\n  });\n\n  it('applies custom backgroundColor', () => {\n    const { getByTestId } = render(<Container backgroundColor=\"#FF00FF\" />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).toHaveProperty('backgroundColor', '#FF00FF');\n  });\n\n  it('passes safeAreaEdges to SafeAreaView', () => {\n    const { getByTestId } = render(<Container safeAreaEdges={['bottom']} />);\n    const safeAreaView = getByTestId('mock-safe-area-view');\n    expect(safeAreaView.props.edges).toEqual(['bottom']);\n  });\n\n  it('uses default safeAreaEdges when not provided', () => {\n    const { getByTestId } = render(<Container />);\n    const safeAreaView = getByTestId('mock-safe-area-view');\n    expect(safeAreaView.props.edges).toEqual(['top', 'left', 'right']);\n  });\n\n  it('applies default backgroundColor', () => {\n    const { getByTestId } = render(<Container />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).toHaveProperty('backgroundColor', '#F9FAFB');\n  });\n});"],"mappings":"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","ignoreList":[]}