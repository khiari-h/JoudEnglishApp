11d17b3bd340463b819d5efb5cf7eb56
'use strict';

var defineLazyObjectProperty = require('./defineLazyObjectProperty');
function polyfillObjectProperty(object, name, getValue) {
  var descriptor = Object.getOwnPropertyDescriptor(object, name);
  if (__DEV__ && descriptor) {
    var backupName = `original${name[0].toUpperCase()}${name.slice(1)}`;
    Object.defineProperty(object, backupName, descriptor);
  }
  var _ref = descriptor || {},
    enumerable = _ref.enumerable,
    writable = _ref.writable,
    _ref$configurable = _ref.configurable,
    configurable = _ref$configurable === void 0 ? false : _ref$configurable;
  if (descriptor && !configurable) {
    console.error('Failed to set polyfill. ' + name + ' is not configurable.');
    return;
  }
  defineLazyObjectProperty(object, name, {
    get: getValue,
    enumerable: enumerable !== false,
    writable: writable !== false
  });
}
function polyfillGlobal(name, getValue) {
  polyfillObjectProperty(global, name, getValue);
}
module.exports = {
  polyfillObjectProperty: polyfillObjectProperty,
  polyfillGlobal: polyfillGlobal
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWZpbmVMYXp5T2JqZWN0UHJvcGVydHkiLCJyZXF1aXJlIiwicG9seWZpbGxPYmplY3RQcm9wZXJ0eSIsIm9iamVjdCIsIm5hbWUiLCJnZXRWYWx1ZSIsImRlc2NyaXB0b3IiLCJPYmplY3QiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX0RFVl9fIiwiYmFja3VwTmFtZSIsInRvVXBwZXJDYXNlIiwic2xpY2UiLCJkZWZpbmVQcm9wZXJ0eSIsIl9yZWYiLCJlbnVtZXJhYmxlIiwid3JpdGFibGUiLCJfcmVmJGNvbmZpZ3VyYWJsZSIsImNvbmZpZ3VyYWJsZSIsImNvbnNvbGUiLCJlcnJvciIsImdldCIsInBvbHlmaWxsR2xvYmFsIiwiZ2xvYmFsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlBvbHlmaWxsRnVuY3Rpb25zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3RcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGRlZmluZUxhenlPYmplY3RQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vZGVmaW5lTGF6eU9iamVjdFByb3BlcnR5Jyk7XG5cbi8qKlxuICogU2V0cyBhbiBvYmplY3QncyBwcm9wZXJ0eS4gSWYgYSBwcm9wZXJ0eSB3aXRoIHRoZSBzYW1lIG5hbWUgZXhpc3RzLCB0aGlzIHdpbGxcbiAqIHJlcGxhY2UgaXQgYnV0IG1haW50YWluIGl0cyBkZXNjcmlwdG9yIGNvbmZpZ3VyYXRpb24uIFRoZSBwcm9wZXJ0eSB3aWxsIGJlXG4gKiByZXBsYWNlZCB3aXRoIGEgbGF6eSBnZXR0ZXIuXG4gKlxuICogSW4gREVWIG1vZGUgdGhlIG9yaWdpbmFsIHByb3BlcnR5IHZhbHVlIHdpbGwgYmUgcHJlc2VydmVkIGFzIGBvcmlnaW5hbFtQcm9wZXJ0eU5hbWVdYFxuICogc28gdGhhdCwgaWYgbmVjZXNzYXJ5LCBpdCBjYW4gYmUgcmVzdG9yZWQuIEZvciBleGFtcGxlLCBpZiB5b3Ugd2FudCB0byByb3V0ZVxuICogbmV0d29yayByZXF1ZXN0cyB0aHJvdWdoIERldlRvb2xzICh0byB0cmFjZSB0aGVtKTpcbiAqXG4gKiAgIGdsb2JhbC5YTUxIdHRwUmVxdWVzdCA9IGdsb2JhbC5vcmlnaW5hbFhNTEh0dHBSZXF1ZXN0O1xuICpcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LW5hdGl2ZS9pc3N1ZXMvOTM0XG4gKi9cbmZ1bmN0aW9uIHBvbHlmaWxsT2JqZWN0UHJvcGVydHk8VD4oXG4gIG9iamVjdDogey4uLn0sXG4gIG5hbWU6IHN0cmluZyxcbiAgZ2V0VmFsdWU6ICgpID0+IFQsXG4pOiB2b2lkIHtcbiAgY29uc3QgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I8JEZsb3dGaXhNZT4ob2JqZWN0LCBuYW1lKTtcbiAgaWYgKF9fREVWX18gJiYgZGVzY3JpcHRvcikge1xuICAgIGNvbnN0IGJhY2t1cE5hbWUgPSBgb3JpZ2luYWwke25hbWVbMF0udG9VcHBlckNhc2UoKX0ke25hbWUuc2xpY2UoMSl9YDtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBiYWNrdXBOYW1lLCBkZXNjcmlwdG9yKTtcbiAgfVxuXG4gIGNvbnN0IHtlbnVtZXJhYmxlLCB3cml0YWJsZSwgY29uZmlndXJhYmxlID0gZmFsc2V9ID0gZGVzY3JpcHRvciB8fCB7fTtcbiAgaWYgKGRlc2NyaXB0b3IgJiYgIWNvbmZpZ3VyYWJsZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBzZXQgcG9seWZpbGwuICcgKyBuYW1lICsgJyBpcyBub3QgY29uZmlndXJhYmxlLicpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGRlZmluZUxhenlPYmplY3RQcm9wZXJ0eShvYmplY3QsIG5hbWUsIHtcbiAgICBnZXQ6IGdldFZhbHVlLFxuICAgIGVudW1lcmFibGU6IGVudW1lcmFibGUgIT09IGZhbHNlLFxuICAgIHdyaXRhYmxlOiB3cml0YWJsZSAhPT0gZmFsc2UsXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBwb2x5ZmlsbEdsb2JhbDxUPihuYW1lOiBzdHJpbmcsIGdldFZhbHVlOiAoKSA9PiBUKTogdm9pZCB7XG4gIHBvbHlmaWxsT2JqZWN0UHJvcGVydHkoZ2xvYmFsLCBuYW1lLCBnZXRWYWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge3BvbHlmaWxsT2JqZWN0UHJvcGVydHksIHBvbHlmaWxsR2xvYmFsfTtcbiJdLCJtYXBwaW5ncyI6IkFBVUEsWUFBWTs7QUFFWixJQUFNQSx3QkFBd0IsR0FBR0MsT0FBTyxDQUFDLDRCQUE0QixDQUFDO0FBZXRFLFNBQVNDLHNCQUFzQkEsQ0FDN0JDLE1BQWEsRUFDYkMsSUFBWSxFQUNaQyxRQUFpQixFQUNYO0VBQ04sSUFBTUMsVUFBVSxHQUFHQyxNQUFNLENBQUNDLHdCQUF3QixDQUFhTCxNQUFNLEVBQUVDLElBQUksQ0FBQztFQUM1RSxJQUFJSyxPQUFPLElBQUlILFVBQVUsRUFBRTtJQUN6QixJQUFNSSxVQUFVLEdBQUcsV0FBV04sSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDTyxXQUFXLENBQUMsQ0FBQyxHQUFHUCxJQUFJLENBQUNRLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRTtJQUNyRUwsTUFBTSxDQUFDTSxjQUFjLENBQUNWLE1BQU0sRUFBRU8sVUFBVSxFQUFFSixVQUFVLENBQUM7RUFDdkQ7RUFFQSxJQUFBUSxJQUFBLEdBQXFEUixVQUFVLElBQUksQ0FBQyxDQUFDO0lBQTlEUyxVQUFVLEdBQUFELElBQUEsQ0FBVkMsVUFBVTtJQUFFQyxRQUFRLEdBQUFGLElBQUEsQ0FBUkUsUUFBUTtJQUFBQyxpQkFBQSxHQUFBSCxJQUFBLENBQUVJLFlBQVk7SUFBWkEsWUFBWSxHQUFBRCxpQkFBQSxjQUFHLEtBQUssR0FBQUEsaUJBQUE7RUFDakQsSUFBSVgsVUFBVSxJQUFJLENBQUNZLFlBQVksRUFBRTtJQUMvQkMsT0FBTyxDQUFDQyxLQUFLLENBQUMsMEJBQTBCLEdBQUdoQixJQUFJLEdBQUcsdUJBQXVCLENBQUM7SUFDMUU7RUFDRjtFQUVBSix3QkFBd0IsQ0FBQ0csTUFBTSxFQUFFQyxJQUFJLEVBQUU7SUFDckNpQixHQUFHLEVBQUVoQixRQUFRO0lBQ2JVLFVBQVUsRUFBRUEsVUFBVSxLQUFLLEtBQUs7SUFDaENDLFFBQVEsRUFBRUEsUUFBUSxLQUFLO0VBQ3pCLENBQUMsQ0FBQztBQUNKO0FBRUEsU0FBU00sY0FBY0EsQ0FBSWxCLElBQVksRUFBRUMsUUFBaUIsRUFBUTtFQUNoRUgsc0JBQXNCLENBQUNxQixNQUFNLEVBQUVuQixJQUFJLEVBQUVDLFFBQVEsQ0FBQztBQUNoRDtBQUVBbUIsTUFBTSxDQUFDQyxPQUFPLEdBQUc7RUFBQ3ZCLHNCQUFzQixFQUF0QkEsc0JBQXNCO0VBQUVvQixjQUFjLEVBQWRBO0FBQWMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==