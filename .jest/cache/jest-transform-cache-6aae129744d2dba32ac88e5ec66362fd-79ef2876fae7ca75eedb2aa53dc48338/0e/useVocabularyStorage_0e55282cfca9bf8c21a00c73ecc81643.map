{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","cov_6vzv79mpx","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","useVocabularyStorage","_ref","STORAGE_KEY","progressKey","loaded","setLoaded","completedWords","setCompletedWords","setCategoryIndex","setWordIndex","exercises","isInitialized","handleStorageError","error","operation","fallback","arguments","length","console","warn","useEffect","loadData","_ref2","_asyncToGenerator2","default","saved","AsyncStorage","getItem","_ref3","JSON","parse","savedCompleted","lastPosition","categoryIndex","wordIndex","apply","saveData","useCallback","dataToSave","setItem","stringify","current","newCompletedWords","Object","assign","forEach","_","index"],"sources":["useVocabularyStorage.js"],"sourcesContent":["// src/screens/exercises/vocabulary/hooks/internal/useVocabularyStorage.js - VERSION CORRIGÉE\r\n\r\nimport { useEffect, useCallback } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function useVocabularyStorage({\r\n  STORAGE_KEY,\r\n  progressKey,\r\n  loaded,\r\n  setLoaded,\r\n  completedWords,\r\n  setCompletedWords,\r\n  setCategoryIndex,\r\n  setWordIndex,\r\n  exercises,\r\n  isInitialized,\r\n}) {\r\n  // =================== ERROR HANDLING HELPER ===================\r\n  const handleStorageError = (error, operation, fallback = null) => {\r\n    console.warn(`Vocabulary storage error in ${operation}:`, error);\r\n    return fallback;\r\n  };\r\n\r\n  // Load data from storage\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        const saved = await AsyncStorage.getItem(STORAGE_KEY);\r\n        if (saved) {\r\n          const { completedWords: savedCompleted, lastPosition } = JSON.parse(saved);\r\n          setCompletedWords(savedCompleted || {});\r\n          if (lastPosition) {\r\n            setCategoryIndex(lastPosition.categoryIndex || 0);\r\n            setWordIndex(lastPosition.wordIndex || 0);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // ✅ Gestion d'erreur appropriée\r\n        handleStorageError(error, 'loadData');\r\n        // Fallback: utiliser les valeurs par défaut\r\n      } finally {\r\n        setLoaded(true);\r\n      }\r\n    };\r\n    loadData();\r\n  }, [progressKey, STORAGE_KEY, setCompletedWords, setCategoryIndex, setWordIndex, setLoaded]);\r\n\r\n  // Save data to storage\r\n  const saveData = useCallback(async () => {\r\n    try {\r\n      const dataToSave = {\r\n        completedWords,\r\n        lastPosition: { categoryIndex: 0, wordIndex: 0 },\r\n      };\r\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\r\n    } catch (error) {\r\n      // ✅ Gestion d'erreur appropriée\r\n      handleStorageError(error, 'saveData');\r\n      // Fallback: continuer sans sauvegarde\r\n    }\r\n  }, [completedWords, STORAGE_KEY]);\r\n\r\n  // Auto-save when data changes\r\n  useEffect(() => {\r\n    if (loaded) saveData();\r\n  }, [saveData, loaded]);\r\n\r\n  // Initialize progress for new categories\r\n  useEffect(() => {\r\n    if (loaded && exercises && !isInitialized.current) {\r\n      const newCompletedWords = { ...completedWords };\r\n      exercises.forEach((_, index) => {\r\n        if (!newCompletedWords[index]) newCompletedWords[index] = [];\r\n      });\r\n      setCompletedWords(newCompletedWords);\r\n      isInitialized.current = true;\r\n    }\r\n  }, [loaded, exercises, completedWords, setCompletedWords, isInitialized]);\r\n\r\n  return { saveData };\r\n}\r\n\r\n\r\n"],"mappings":";;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAC,sBAAA,CAAAF,OAAA;AAAqE,SAAAG,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC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","ignoreList":[]}