354e2267fb53fe95819f33c3ef7954cc
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_dv9s3sfhg() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyWordSection\\style.js";
  var hash = "aef9e623181252e29d87c1f69bf3443293d9ee66";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyWordSection\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 56,
          column: 4
        }
      },
      "1": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 56,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 22
          }
        },
        loc: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 56,
            column: 4
          }
        },
        line: 10
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "aef9e623181252e29d87c1f69bf3443293d9ee66"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_dv9s3sfhg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_dv9s3sfhg();
cov_dv9s3sfhg().s[0]++;
var createStyles = function createStyles() {
  cov_dv9s3sfhg().f[0]++;
  cov_dv9s3sfhg().s[1]++;
  return _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      paddingBottom: 20
    },
    counterSection: {
      marginHorizontal: 16,
      marginBottom: 16,
      borderRadius: 20,
      overflow: 'hidden'
    },
    counterGradient: {
      paddingVertical: 16,
      paddingHorizontal: 24,
      alignItems: 'center',
      justifyContent: 'center'
    },
    counterBadge: Object.assign({
      backgroundColor: 'white',
      paddingHorizontal: 20,
      paddingVertical: 10,
      borderRadius: 16,
      borderWidth: 1
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#000',
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowOpacity: 0.08,
        shadowRadius: 8
      },
      android: {
        elevation: 2
      }
    })),
    counterText: {
      fontSize: 18,
      fontWeight: '800',
      letterSpacing: 0.5
    }
  });
};
var _default = exports.default = createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY292X2R2OXMzc2ZoZyIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsImNyZWF0ZVN0eWxlcyIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJjb250YWluZXIiLCJmbGV4IiwicGFkZGluZ0JvdHRvbSIsImNvdW50ZXJTZWN0aW9uIiwibWFyZ2luSG9yaXpvbnRhbCIsIm1hcmdpbkJvdHRvbSIsImJvcmRlclJhZGl1cyIsIm92ZXJmbG93IiwiY291bnRlckdyYWRpZW50IiwicGFkZGluZ1ZlcnRpY2FsIiwicGFkZGluZ0hvcml6b250YWwiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJjb3VudGVyQmFkZ2UiLCJPYmplY3QiLCJhc3NpZ24iLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJXaWR0aCIsIlBsYXRmb3JtIiwic2VsZWN0IiwiaW9zIiwic2hhZG93Q29sb3IiLCJzaGFkb3dPZmZzZXQiLCJ3aWR0aCIsImhlaWdodCIsInNoYWRvd09wYWNpdHkiLCJzaGFkb3dSYWRpdXMiLCJhbmRyb2lkIiwiZWxldmF0aW9uIiwiY291bnRlclRleHQiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJsZXR0ZXJTcGFjaW5nIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbInN0eWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFZvY2FidWxhcnlXb3JkU2VjdGlvbi9zdHlsZS5qcyAtIFZFUlNJT04gQUpVU1TDiUUgKGdhcmRlIHN0eWxlcyBjb21wdGV1cilcclxuXHJcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFBsYXRmb3JtIH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xyXG5cclxuLyoqXHJcbiAqIOKaoSBTdHlsZXMgcG91ciBWb2NhYnVsYXJ5V29yZFNlY3Rpb25cclxuICogR2FyZGUgbGVzIHN0eWxlcyBkdSBjb21wdGV1ciwgbGUgcmVzdGUgZXN0IGRhbnMgVm9jYWJ1bGFyeVdvcmRDYXJkIHJlZmFjdG9yaXPDqVxyXG4gKi9cclxuY29uc3QgY3JlYXRlU3R5bGVzID0gKCkgPT5cclxuICBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IENPTlRBSU5FUiA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBjb250YWluZXI6IHtcclxuICAgICAgZmxleDogMSxcclxuICAgICAgcGFkZGluZ0JvdHRvbTogMjAsXHJcbiAgICB9LFxyXG4gICAgXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IENPTVBURVVSIFNFQ1RJT04gPT09PT09PT09PT09PT09PT09PVxyXG4gICAgY291bnRlclNlY3Rpb246IHtcclxuICAgICAgbWFyZ2luSG9yaXpvbnRhbDogMTYsXHJcbiAgICAgIG1hcmdpbkJvdHRvbTogMTYsXHJcbiAgICAgIGJvcmRlclJhZGl1czogMjAsXHJcbiAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcclxuICAgIH0sXHJcbiAgICBjb3VudGVyR3JhZGllbnQ6IHtcclxuICAgICAgcGFkZGluZ1ZlcnRpY2FsOiAxNixcclxuICAgICAgcGFkZGluZ0hvcml6b250YWw6IDI0LFxyXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBCQURHRSBDT01QVEVVUiA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBjb3VudGVyQmFkZ2U6IHtcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxyXG4gICAgICBwYWRkaW5nSG9yaXpvbnRhbDogMjAsXHJcbiAgICAgIHBhZGRpbmdWZXJ0aWNhbDogMTAsXHJcbiAgICAgIGJvcmRlclJhZGl1czogMTYsXHJcbiAgICAgIGJvcmRlcldpZHRoOiAxLFxyXG4gICAgICAvLyBPbWJyZSBzdWJ0aWxlXHJcbiAgICAgIC4uLlBsYXRmb3JtLnNlbGVjdCh7XHJcbiAgICAgICAgaW9zOiB7XHJcbiAgICAgICAgICBzaGFkb3dDb2xvcjogJyMwMDAnLFxyXG4gICAgICAgICAgc2hhZG93T2Zmc2V0OiB7IHdpZHRoOiAwLCBoZWlnaHQ6IDIgfSxcclxuICAgICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMDgsXHJcbiAgICAgICAgICBzaGFkb3dSYWRpdXM6IDgsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBhbmRyb2lkOiB7XHJcbiAgICAgICAgICBlbGV2YXRpb246IDIsXHJcbiAgICAgICAgfSxcclxuICAgICAgfSksXHJcbiAgICB9LFxyXG4gICAgY291bnRlclRleHQ6IHtcclxuICAgICAgZm9udFNpemU6IDE4LFxyXG4gICAgICBmb250V2VpZ2h0OiAnODAwJyxcclxuICAgICAgbGV0dGVyU3BhY2luZzogMC41LFxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN0eWxlczsiXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFBb0QsU0FBQUMsY0FBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMs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