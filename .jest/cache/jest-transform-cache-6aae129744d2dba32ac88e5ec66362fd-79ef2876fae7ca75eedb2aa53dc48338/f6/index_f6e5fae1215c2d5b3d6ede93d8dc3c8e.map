{"version":3,"names":["_react","require","_reactNative","_expoLinearGradient","_propTypes","_interopRequireDefault","_style","_jsxRuntime","CategorySelector","_ref","_ref$categories","categories","selectedCategory","onSelectCategory","_ref$primaryColor","primaryColor","styles","createStyles","scrollViewRef","useRef","animationsRef","pressAnimationsRef","itemLayoutsRef","isAnimatingRef","prevSelectedCategoryRef","useEffect","newAnimations","newPressAnimations","newItemLayouts","forEach","category","id","current","Animated","Value","handlePressIn","useCallback","categoryId","pressAnimation","timing","toValue","duration","useNativeDriver","start","handlePressOut","triggerAnimation","fromCategory","toCategory","animationsArray","fromAnim","toAnim","push","length","parallel","layout","scrollTo","x","Math","max","width","y","animated","handleCategoryPress","renderCategoryPill","isSelected","animation","scale","interpolate","inputRange","outputRange","extrapolate","pressScale","shadowOpacity","borderWidth","jsx","View","onLayout","event","nativeEvent","style","categoryItemWrapper","transform","multiply","children","TouchableOpacity","categoryTouchable","onPress","onPressIn","onPressOut","activeOpacity","accessibilityRole","accessibilityLabel","String","name","accessibilityState","selected","LinearGradient","colors","end","selectedCategoryItem","jsxs","selectedInner","Text","selectedCategoryText","sparkleContainer","sparkle","categoryItem","borderColor","categoryInner","backgroundColor","categoryText","color","container","backgroundGradient","ScrollView","ref","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollContent","scrollView","map","propTypes","PropTypes","arrayOf","shape","oneOfType","string","number","isRequired","func","areEqual","prevProps","nextProps","every","cat","index","nextCat","_default","exports","default","memo"],"sources":["index.js"],"sourcesContent":["// src/components/exercise-common/CategorySelector/index.js\r\nimport { useState, useCallback, memo, useEffect, useRef } from \"react\";\r\nimport { View, ScrollView, TouchableOpacity, Text, Animated } from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport PropTypes from 'prop-types';\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * 🏆 CategorySelector - Design Niveau LDC (Paris Saint-Germain)\r\n * - Pills modernes avec glassmorphism\r\n * - Animations fluides de sélection\r\n * - Gradients dynamiques\r\n * - Micro-interactions premium\r\n * - Typography élégante\r\n * - Performance optimisée avec refs\r\n */\r\nconst CategorySelector = ({\r\n  categories = [],\r\n  selectedCategory,\r\n  onSelectCategory,\r\n  primaryColor = \"#5E60CE\",\r\n}) => {\r\n  const styles = createStyles(primaryColor);\r\n  const scrollViewRef = useRef(null);\r\n  \r\n  // 🔥 Gestion unifiée des animations avec refs uniquement\r\n  const animationsRef = useRef({});\r\n  const pressAnimationsRef = useRef({});\r\n  const itemLayoutsRef = useRef({});\r\n  const isAnimatingRef = useRef(false);\r\n  \r\n  // 🚀 Utilisation de useRef pour suivre la catégorie précédente de manière synchrone\r\n  const prevSelectedCategoryRef = useRef(selectedCategory);\r\n\r\n  // 🚀 Initialisation/mise à jour des animations dans un useEffect\r\n  useEffect(() => {\r\n    const newAnimations = {};\r\n    const newPressAnimations = {};\r\n    const newItemLayouts = {};\r\n\r\n    categories.forEach(category => {\r\n      // Réutiliser les instances si elles existent, sinon les créer\r\n      newAnimations[category.id] = animationsRef.current[category.id] || new Animated.Value(\r\n        selectedCategory === category.id ? 1 : 0\r\n      );\r\n      newPressAnimations[category.id] = pressAnimationsRef.current[category.id] || new Animated.Value(1);\r\n      newItemLayouts[category.id] = itemLayoutsRef.current[category.id] || null;\r\n    });\r\n\r\n    // Mettre à jour les refs\r\n    animationsRef.current = newAnimations;\r\n    pressAnimationsRef.current = newPressAnimations;\r\n    itemLayoutsRef.current = newItemLayouts;\r\n\r\n  }, [categories, selectedCategory]);\r\n\r\n  // 🎯 Animations de press optimisées\r\n  const handlePressIn = useCallback((categoryId) => {\r\n    const pressAnimation = pressAnimationsRef.current[categoryId];\r\n    if (pressAnimation) {\r\n      Animated.timing(pressAnimation, {\r\n        toValue: 0.95,\r\n        duration: 150,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, []);\r\n\r\n  const handlePressOut = useCallback((categoryId) => {\r\n    const pressAnimation = pressAnimationsRef.current[categoryId];\r\n    if (pressAnimation) {\r\n      Animated.timing(pressAnimation, {\r\n        toValue: 1,\r\n        duration: 150,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, []);\r\n\r\n  // 🔥 Animation centralisée de sélection\r\n  const triggerAnimation = useCallback(() => {\r\n    // ❌ La logique pour le changement de catégorie est déplacée dans l'useEffect\r\n    // Ce qui rend ce useCallback plus simple.\r\n    \r\n    // La logique de l'animation elle-même est inchangée\r\n    const fromCategory = prevSelectedCategoryRef.current;\r\n    const toCategory = selectedCategory;\r\n\r\n    if (isAnimatingRef.current || fromCategory === toCategory) {\r\n      return;\r\n    }\r\n    \r\n    isAnimatingRef.current = true;\r\n    const animationsArray = [];\r\n    const fromAnim = animationsRef.current[fromCategory];\r\n    const toAnim = animationsRef.current[toCategory];\r\n\r\n    // Désélection\r\n    if (fromAnim) {\r\n      animationsArray.push(\r\n        Animated.timing(fromAnim, { toValue: 0, duration: 200, useNativeDriver: false })\r\n      );\r\n    }\r\n    // Sélection\r\n    if (toAnim) {\r\n      animationsArray.push(\r\n        Animated.timing(toAnim, { toValue: 1, duration: 300, useNativeDriver: false })\r\n      );\r\n    }\r\n\r\n    if (animationsArray.length > 0) {\r\n      Animated.parallel(animationsArray).start(() => {\r\n        isAnimatingRef.current = false;\r\n      });\r\n    } else {\r\n      isAnimatingRef.current = false;\r\n    }\r\n  }, [selectedCategory]); // Dépend de la prop sélectionnée actuelle\r\n\r\n  // Suivre les changements de sélection\r\n  useEffect(() => {\r\n    triggerAnimation();\r\n    // ✅ Met à jour la ref après que l'animation ait été potentiellement déclenchée\r\n    prevSelectedCategoryRef.current = selectedCategory;\r\n  }, [selectedCategory, triggerAnimation]);\r\n\r\n  // 🚀 Auto-scroll vers la sélection\r\n  useEffect(() => {\r\n    if (scrollViewRef.current && selectedCategory && itemLayoutsRef.current[selectedCategory]) {\r\n      const layout = itemLayoutsRef.current[selectedCategory];\r\n      scrollViewRef.current.scrollTo({\r\n        x: Math.max(0, layout.x - layout.width / 2),\r\n        y: 0,\r\n        animated: true,\r\n      });\r\n    }\r\n  }, [selectedCategory]);\r\n\r\n  // Handler pour les clics\r\n  const handleCategoryPress = useCallback((categoryId) => {\r\n    if (categoryId !== selectedCategory && !isAnimatingRef.current) {\r\n      onSelectCategory(categoryId);\r\n    }\r\n  }, [selectedCategory, onSelectCategory]);\r\n\r\n  // 🎨 Rendu optimisé d'une pill\r\n  const renderCategoryPill = useCallback((category) => {\r\n    const isSelected = selectedCategory === category.id;\r\n    const animation = animationsRef.current[category.id];\r\n    const pressAnimation = pressAnimationsRef.current[category.id];\r\n\r\n    // Interpolations\r\n    const scale = animation?.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [1, 1.05],\r\n      extrapolate: 'clamp',\r\n    }) || 1;\r\n\r\n    const pressScale = pressAnimation?.interpolate({\r\n      inputRange: [0.95, 1],\r\n      outputRange: [0.95, 1],\r\n      extrapolate: 'clamp',\r\n    }) || 1;\r\n\r\n    const shadowOpacity = animation?.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0.1, 0.25],\r\n      extrapolate: 'clamp',\r\n    }) || 0.1;\r\n\r\n    const borderWidth = animation?.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [1, 2],\r\n      extrapolate: 'clamp',\r\n    }) || 1;\r\n\r\n    return (\r\n      <Animated.View\r\n        key={category.id}\r\n        onLayout={(event) => {\r\n          itemLayoutsRef.current[category.id] = event.nativeEvent.layout;\r\n        }}\r\n        style={[\r\n          styles.categoryItemWrapper,\r\n          {\r\n            transform: [{ scale: Animated.multiply(scale, pressScale) }],\r\n          },\r\n        ]}\r\n      >\r\n        <TouchableOpacity\r\n          style={styles.categoryTouchable}\r\n          onPress={() => handleCategoryPress(category.id)}\r\n          onPressIn={() => handlePressIn(category.id)}\r\n          onPressOut={() => handlePressOut(category.id)}\r\n          activeOpacity={0.8}\r\n          accessibilityRole=\"button\"\r\n          accessibilityLabel={String(category.name)}\r\n          accessibilityState={{ selected: isSelected }}\r\n        >\r\n          {isSelected ? (\r\n            <LinearGradient\r\n              colors={[primaryColor, `${primaryColor}E6`, `${primaryColor}CC`]}\r\n              start={{ x: 0, y: 0 }}\r\n              end={{ x: 1, y: 1 }}\r\n              style={styles.selectedCategoryItem}\r\n            >\r\n              <View style={styles.selectedInner}>\r\n                <Text style={styles.selectedCategoryText}>\r\n                  {category.name}\r\n                </Text>\r\n                <View style={styles.sparkleContainer}>\r\n                  <Text style={styles.sparkle}>✨</Text>\r\n                </View>\r\n              </View>\r\n            </LinearGradient>\r\n          ) : (\r\n            <Animated.View\r\n              style={[\r\n                styles.categoryItem,\r\n                {\r\n                  borderWidth,\r\n                  borderColor: `${primaryColor}20`,\r\n                  shadowOpacity,\r\n                }\r\n              ]}\r\n            >\r\n              <View style={[styles.categoryInner, { backgroundColor: `${primaryColor}08` }]}>\r\n                <Text style={[styles.categoryText, { color: primaryColor }]}>\r\n                  {category.name}\r\n                </Text>\r\n              </View>\r\n            </Animated.View>\r\n          )}\r\n        </TouchableOpacity>\r\n      </Animated.View>\r\n    );\r\n  }, [\r\n    selectedCategory,\r\n    primaryColor,\r\n    styles,\r\n    handleCategoryPress,\r\n    handlePressIn,\r\n    handlePressOut,\r\n  ]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <LinearGradient\r\n        colors={[`${primaryColor}04`, 'transparent', `${primaryColor}02`]}\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1, y: 0 }}\r\n        style={styles.backgroundGradient}\r\n      >\r\n        <ScrollView\r\n          ref={scrollViewRef}\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={styles.scrollContent}\r\n          style={styles.scrollView}\r\n        >\r\n          {categories.map(renderCategoryPill)}\r\n        </ScrollView>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n};\r\n\r\nCategorySelector.propTypes = {\r\n  categories: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  selectedCategory: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  onSelectCategory: PropTypes.func.isRequired,\r\n  primaryColor: PropTypes.string,\r\n};\r\n\r\n// 🔧 Comparaison optimisée\r\nexport function areEqual(prevProps, nextProps) {\r\n  // Vérifications rapides d'abord\r\n  if (\r\n    prevProps.selectedCategory !== nextProps.selectedCategory ||\r\n    prevProps.primaryColor !== nextProps.primaryColor ||\r\n    prevProps.categories.length !== nextProps.categories.length\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  // Vérification de référence (cas le plus courant)\r\n  if (prevProps.categories === nextProps.categories) {\r\n    return true;\r\n  }\r\n\r\n  // Vérification profonde uniquement si nécessaire\r\n  return prevProps.categories.every((cat, index) => {\r\n    const nextCat = nextProps.categories[index];\r\n    return nextCat && cat.id === nextCat.id && cat.name === nextCat.name;\r\n  });\r\n}\r\n\r\nexport default memo(CategorySelector, areEqual);"],"mappings":"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","ignoreList":[]}