{"version":3,"names":["NativeComponentRegistry","_interopRequireWildcard","require","_ViewConfigIgnore","_codegenNativeCommands","_interopRequireDefault","_Platform","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Commands","exports","codegenNativeCommands","supportedCommands","__INTERNAL_VIEW_CONFIG","Platform","OS","uiViewClassName","bubblingEventTypes","directEventTypes","topLoadStart","registrationName","topProgress","topError","topLoad","topLoadEnd","validAttributes","blurRadius","internal_analyticTag","resizeMethod","resizeMode","resizeMultiplier","tintColor","process","borderBottomLeftRadius","borderTopLeftRadius","src","source","borderRadius","headers","shouldNotifyLoadEvents","defaultSrc","overlayColor","borderColor","accessible","progressiveRenderingEnabled","fadeDuration","borderBottomRightRadius","borderTopRightRadius","loadingIndicatorSrc","topPartialLoad","assign","capInsets","diff","defaultSource","ConditionallyIgnoredEventHandlers","onLoadStart","onLoad","onLoadEnd","onProgress","onError","onPartialLoad","ImageViewNativeComponent","_default"],"sources":["ImageViewNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../Renderer/shims/ReactNativeTypes';\nimport type {\n  ColorValue,\n  DangerouslyImpreciseStyle,\n  ImageStyleProp,\n} from '../StyleSheet/StyleSheet';\nimport type {ResolvedAssetSource} from './AssetSourceResolver';\nimport type {ImageProps} from './ImageProps';\nimport type {ElementRef} from 'react';\n\nimport * as NativeComponentRegistry from '../NativeComponent/NativeComponentRegistry';\nimport {ConditionallyIgnoredEventHandlers} from '../NativeComponent/ViewConfigIgnore';\nimport codegenNativeCommands from '../Utilities/codegenNativeCommands';\nimport Platform from '../Utilities/Platform';\n\ntype Props = $ReadOnly<{\n  ...ImageProps,\n  ...ViewProps,\n\n  style?: ImageStyleProp | DangerouslyImpreciseStyle,\n\n  // iOS native props\n  tintColor?: ColorValue,\n\n  // Android native props\n  shouldNotifyLoadEvents?: boolean,\n  src?:\n    | ?ResolvedAssetSource\n    | ?$ReadOnlyArray<?$ReadOnly<{uri?: ?string, ...}>>,\n  headers?: ?{[string]: string},\n  defaultSrc?: ?string,\n  loadingIndicatorSrc?: ?string,\n}>;\n\ninterface NativeCommands {\n  +setIsVisible_EXPERIMENTAL: (\n    viewRef: ElementRef<HostComponent<mixed>>,\n    isVisible: boolean,\n    time: number,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setIsVisible_EXPERIMENTAL'],\n});\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig =\n  Platform.OS === 'android'\n    ? {\n        uiViewClassName: 'RCTImageView',\n        bubblingEventTypes: {},\n        directEventTypes: {\n          topLoadStart: {\n            registrationName: 'onLoadStart',\n          },\n          topProgress: {\n            registrationName: 'onProgress',\n          },\n          topError: {\n            registrationName: 'onError',\n          },\n          topLoad: {\n            registrationName: 'onLoad',\n          },\n          topLoadEnd: {\n            registrationName: 'onLoadEnd',\n          },\n        },\n        validAttributes: {\n          blurRadius: true,\n          internal_analyticTag: true,\n          resizeMethod: true,\n          resizeMode: true,\n          resizeMultiplier: true,\n          tintColor: {\n            process: require('../StyleSheet/processColor').default,\n          },\n          borderBottomLeftRadius: true,\n          borderTopLeftRadius: true,\n          src: true,\n          // NOTE: New Architecture expects this to be called `source`,\n          // regardless of the platform, therefore propagate it as well.\n          // For the backwards compatibility reasons, we keep both `src`\n          // and `source`, which will be identical at this stage.\n          source: true,\n          borderRadius: true,\n          headers: true,\n          shouldNotifyLoadEvents: true,\n          defaultSrc: true,\n          overlayColor: {\n            process: require('../StyleSheet/processColor').default,\n          },\n          borderColor: {\n            process: require('../StyleSheet/processColor').default,\n          },\n          accessible: true,\n          progressiveRenderingEnabled: true,\n          fadeDuration: true,\n          borderBottomRightRadius: true,\n          borderTopRightRadius: true,\n          loadingIndicatorSrc: true,\n        },\n      }\n    : {\n        uiViewClassName: 'RCTImageView',\n        bubblingEventTypes: {},\n        directEventTypes: {\n          topLoadStart: {\n            registrationName: 'onLoadStart',\n          },\n          topProgress: {\n            registrationName: 'onProgress',\n          },\n          topError: {\n            registrationName: 'onError',\n          },\n          topPartialLoad: {\n            registrationName: 'onPartialLoad',\n          },\n          topLoad: {\n            registrationName: 'onLoad',\n          },\n          topLoadEnd: {\n            registrationName: 'onLoadEnd',\n          },\n        },\n        validAttributes: {\n          blurRadius: true,\n          capInsets: {\n            diff: require('../Utilities/differ/insetsDiffer'),\n          },\n          defaultSource: {\n            process: require('./resolveAssetSource'),\n          },\n          internal_analyticTag: true,\n          resizeMode: true,\n          source: true,\n          tintColor: {\n            process: require('../StyleSheet/processColor').default,\n          },\n          ...ConditionallyIgnoredEventHandlers({\n            onLoadStart: true,\n            onLoad: true,\n            onLoadEnd: true,\n            onProgress: true,\n            onError: true,\n            onPartialLoad: true,\n          }),\n        },\n      };\n\nconst ImageViewNativeComponent: HostComponent<Props> =\n  NativeComponentRegistry.get<Props>(\n    'RCTImageView',\n    () => __INTERNAL_VIEW_CONFIG,\n  );\n\nexport default ImageViewNativeComponent;\n"],"mappings":"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","ignoreList":[]}