{"version":3,"names":["_reactNative","require","_reactNative2","_useModalAnimation","_interopRequireDefault","mockInterpolate","jest","fn","config","inputRange","outputRange","__getValue","mockAnimatedValue","interpolate","addListener","removeAllListeners","setValue","_value","mockStart","callback","finished","mockTiming","start","stop","spyOn","Animated","mockImplementation","describe","beforeEach","clearAllMocks","mockClear","it","_renderHook","renderHook","_ref","isVisible","useModalAnimation","initialProps","result","rerender","expect","current","toBeDefined","act","toHaveBeenCalledTimes","_renderHook2","_ref2","position","toHaveBeenCalledWith","anything","objectContaining","toValue","duration","_renderHook3","transformStyle","toHaveProperty","Array","isArray","transform","toBe","hasTranslateY","some","hasOwnProperty"],"sources":["useModalAnimation.test.js"],"sourcesContent":["import { renderHook, act } from '@testing-library/react-native';\r\nimport { Animated } from 'react-native';\r\nimport useModalAnimation from '../../../../src/components/ui/Modal/useModalAnimation';\r\n\r\n// Mock pour Animated.Value avec interpolate\r\nconst mockInterpolate = jest.fn((config) => ({\r\n  inputRange: config.inputRange,\r\n  outputRange: config.outputRange,\r\n  // Simuler une valeur animée\r\n  __getValue: () => 0,\r\n}));\r\n\r\nconst mockAnimatedValue = jest.fn(() => ({\r\n  interpolate: mockInterpolate,\r\n  addListener: jest.fn(),\r\n  removeAllListeners: jest.fn(),\r\n  setValue: jest.fn(),\r\n  _value: 0,\r\n}));\r\n\r\n// Mock pour Animated.timing\r\nconst mockStart = jest.fn((callback) => {\r\n  if (callback) callback({ finished: true });\r\n});\r\n\r\nconst mockTiming = jest.fn(() => ({\r\n  start: mockStart,\r\n  stop: jest.fn(),\r\n}));\r\n\r\n// Appliquer les mocks\r\njest.spyOn(Animated, 'Value').mockImplementation(mockAnimatedValue);\r\njest.spyOn(Animated, 'timing').mockImplementation(mockTiming);\r\n\r\ndescribe('useModalAnimation', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    mockInterpolate.mockClear();\r\n    mockAnimatedValue.mockClear();\r\n    mockTiming.mockClear();\r\n    mockStart.mockClear();\r\n  });\r\n\r\n  it('devrait démarrer l\\'animation si isVisible devient vrai', () => {\r\n    const { result, rerender } = renderHook(\r\n      ({ isVisible }) => useModalAnimation({ isVisible }), \r\n      {\r\n        initialProps: { isVisible: false },\r\n      }\r\n    );\r\n\r\n    // Attendre que le hook soit initialisé\r\n    expect(result.current).toBeDefined();\r\n\r\n    act(() => {\r\n      rerender({ isVisible: true });\r\n    });\r\n\r\n    expect(mockTiming).toHaveBeenCalledTimes(1);\r\n    expect(mockStart).toHaveBeenCalledTimes(1);\r\n  });\r\n\r\n  it('devrait appeler Animated.timing avec les bonnes valeurs pour la position \"top\"', () => {\r\n    const { rerender } = renderHook(\r\n      ({ isVisible, position }) => useModalAnimation({ isVisible, position }), \r\n      {\r\n        initialProps: { isVisible: false, position: 'top' },\r\n      }\r\n    );\r\n\r\n    act(() => {\r\n      rerender({ isVisible: true, position: 'top' });\r\n    });\r\n\r\n    expect(mockTiming).toHaveBeenCalledWith(\r\n      expect.anything(), // L'instance d'Animated.Value\r\n      expect.objectContaining({\r\n        toValue: 1,\r\n        duration: 300,\r\n      })\r\n    );\r\n  });\r\n\r\n  it('devrait retourner les styles de transformation corrects pour la position \"top\"', () => {\r\n    const { result } = renderHook(() => \r\n      useModalAnimation({ isVisible: true, position: 'top' })\r\n    );\r\n    \r\n    // Vérifier que le hook retourne bien un objet avec transformStyle\r\n    expect(result.current).toBeDefined();\r\n    expect(result.current.transformStyle).toBeDefined();\r\n    \r\n    // Vérifier la structure du style retourné\r\n    const transformStyle = result.current.transformStyle;\r\n    expect(transformStyle).toHaveProperty('transform');\r\n    expect(Array.isArray(transformStyle.transform)).toBe(true);\r\n    \r\n    // Vérifier qu'il y a au moins une transformation translateY\r\n    const hasTranslateY = transformStyle.transform.some(\r\n      transform => transform.hasOwnProperty('translateY')\r\n    );\r\n    expect(hasTranslateY).toBe(true);\r\n  });\r\n});"],"mappings":";AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,kBAAA,GAAAC,sBAAA,CAAAH,OAAA;AAGA,IAAMI,eAAe,GAAGC,IAAI,CAACC,EAAE,CAAC,UAACC,MAAM;EAAA,OAAM;IAC3CC,UAAU,EAAED,MAAM,CAACC,UAAU;IAC7BC,WAAW,EAAEF,MAAM,CAACE,WAAW;IAE/BC,UAAU,EAAE,SAAZA,UAAUA,CAAA;MAAA,OAAQ,CAAC;IAAA;EACrB,CAAC;AAAA,CAAC,CAAC;AAEH,IAAMC,iBAAiB,GAAGN,IAAI,CAACC,EAAE,CAAC;EAAA,OAAO;IACvCM,WAAW,EAAER,eAAe;IAC5BS,WAAW,EAAER,IAAI,CAACC,EAAE,CAAC,CAAC;IACtBQ,kBAAkB,EAAET,IAAI,CAACC,EAAE,CAAC,CAAC;IAC7BS,QAAQ,EAAEV,IAAI,CAACC,EAAE,CAAC,CAAC;IACnBU,MAAM,EAAE;EACV,CAAC;AAAA,CAAC,CAAC;AAGH,IAAMC,SAAS,GAAGZ,IAAI,CAACC,EAAE,CAAC,UAACY,QAAQ,EAAK;EACtC,IAAIA,QAAQ,EAAEA,QAAQ,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;AAC5C,CAAC,CAAC;AAEF,IAAMC,UAAU,GAAGf,IAAI,CAACC,EAAE,CAAC;EAAA,OAAO;IAChCe,KAAK,EAAEJ,SAAS;IAChBK,IAAI,EAAEjB,IAAI,CAACC,EAAE,CAAC;EAChB,CAAC;AAAA,CAAC,CAAC;AAGHD,IAAI,CAACkB,KAAK,CAACC,sBAAQ,EAAE,OAAO,CAAC,CAACC,kBAAkB,CAACd,iBAAiB,CAAC;AACnEN,IAAI,CAACkB,KAAK,CAACC,sBAAQ,EAAE,QAAQ,CAAC,CAACC,kBAAkB,CAACL,UAAU,CAAC;AAE7DM,QAAQ,CAAC,mBAAmB,EAAE,YAAM;EAClCC,UAAU,CAAC,YAAM;IACftB,IAAI,CAACuB,aAAa,CAAC,CAAC;IACpBxB,eAAe,CAACyB,SAAS,CAAC,CAAC;IAC3BlB,iBAAiB,CAACkB,SAAS,CAAC,CAAC;IAC7BT,UAAU,CAACS,SAAS,CAAC,CAAC;IACtBZ,SAAS,CAACY,SAAS,CAAC,CAAC;EACvB,CAAC,CAAC;EAEFC,EAAE,CAAC,yDAAyD,EAAE,YAAM;IAClE,IAAAC,WAAA,GAA6B,IAAAC,uBAAU,EACrC,UAAAC,IAAA;QAAA,IAAGC,SAAS,GAAAD,IAAA,CAATC,SAAS;QAAA,OAAO,IAAAC,0BAAiB,EAAC;UAAED,SAAS,EAATA;QAAU,CAAC,CAAC;MAAA,GACnD;QACEE,YAAY,EAAE;UAAEF,SAAS,EAAE;QAAM;MACnC,CACF,CAAC;MALOG,MAAM,GAAAN,WAAA,CAANM,MAAM;MAAEC,QAAQ,GAAAP,WAAA,CAARO,QAAQ;IAQxBC,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,WAAW,CAAC,CAAC;IAEpC,IAAAC,gBAAG,EAAC,YAAM;MACRJ,QAAQ,CAAC;QAAEJ,SAAS,EAAE;MAAK,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEFK,MAAM,CAACnB,UAAU,CAAC,CAACuB,qBAAqB,CAAC,CAAC,CAAC;IAC3CJ,MAAM,CAACtB,SAAS,CAAC,CAAC0B,qBAAqB,CAAC,CAAC,CAAC;EAC5C,CAAC,CAAC;EAEFb,EAAE,CAAC,gFAAgF,EAAE,YAAM;IACzF,IAAAc,YAAA,GAAqB,IAAAZ,uBAAU,EAC7B,UAAAa,KAAA;QAAA,IAAGX,SAAS,GAAAW,KAAA,CAATX,SAAS;UAAEY,QAAQ,GAAAD,KAAA,CAARC,QAAQ;QAAA,OAAO,IAAAX,0BAAiB,EAAC;UAAED,SAAS,EAATA,SAAS;UAAEY,QAAQ,EAARA;QAAS,CAAC,CAAC;MAAA,GACvE;QACEV,YAAY,EAAE;UAAEF,SAAS,EAAE,KAAK;UAAEY,QAAQ,EAAE;QAAM;MACpD,CACF,CAAC;MALOR,QAAQ,GAAAM,YAAA,CAARN,QAAQ;IAOhB,IAAAI,gBAAG,EAAC,YAAM;MACRJ,QAAQ,CAAC;QAAEJ,SAAS,EAAE,IAAI;QAAEY,QAAQ,EAAE;MAAM,CAAC,CAAC;IAChD,CAAC,CAAC;IAEFP,MAAM,CAACnB,UAAU,CAAC,CAAC2B,oBAAoB,CACrCR,MAAM,CAACS,QAAQ,CAAC,CAAC,EACjBT,MAAM,CAACU,gBAAgB,CAAC;MACtBC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE;IACZ,CAAC,CACH,CAAC;EACH,CAAC,CAAC;EAEFrB,EAAE,CAAC,gFAAgF,EAAE,YAAM;IACzF,IAAAsB,YAAA,GAAmB,IAAApB,uBAAU,EAAC;QAAA,OAC5B,IAAAG,0BAAiB,EAAC;UAAED,SAAS,EAAE,IAAI;UAAEY,QAAQ,EAAE;QAAM,CAAC,CAAC;MAAA,CACzD,CAAC;MAFOT,MAAM,GAAAe,YAAA,CAANf,MAAM;IAKdE,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,WAAW,CAAC,CAAC;IACpCF,MAAM,CAACF,MAAM,CAACG,OAAO,CAACa,cAAc,CAAC,CAACZ,WAAW,CAAC,CAAC;IAGnD,IAAMY,cAAc,GAAGhB,MAAM,CAACG,OAAO,CAACa,cAAc;IACpDd,MAAM,CAACc,cAAc,CAAC,CAACC,cAAc,CAAC,WAAW,CAAC;IAClDf,MAAM,CAACgB,KAAK,CAACC,OAAO,CAACH,cAAc,CAACI,SAAS,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAG1D,IAAMC,aAAa,GAAGN,cAAc,CAACI,SAAS,CAACG,IAAI,CACjD,UAAAH,SAAS;MAAA,OAAIA,SAAS,CAACI,cAAc,CAAC,YAAY,CAAC;IAAA,CACrD,CAAC;IACDtB,MAAM,CAACoB,aAAa,CAAC,CAACD,IAAI,CAAC,IAAI,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}