2d828de708830bdd7dba54ee8638d65d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _RevisionSettings = _interopRequireDefault(require("../../components/setting/RevisionSettings"));
var _SecuritySettings = _interopRequireDefault(require("../../components/setting/SecuritySettings"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_2mhkwlcim7() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Settings\\index.js";
  var hash = "c838f08625baf64e44bb633b5dcd8f3198ca861b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Settings\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "1": {
        start: {
          line: 7,
          column: 2
        },
        end: {
          line: 17,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 23
          },
          end: {
            line: 6,
            column: 24
          }
        },
        loc: {
          start: {
            line: 6,
            column: 29
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 6
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c838f08625baf64e44bb633b5dcd8f3198ca861b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2mhkwlcim7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mhkwlcim7();
cov_2mhkwlcim7().s[0]++;
var SettingsScreen = function SettingsScreen() {
  cov_2mhkwlcim7().f[0]++;
  cov_2mhkwlcim7().s[1]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {
    style: {
      flex: 1,
      backgroundColor: '#F8FAFC'
    },
    contentContainerStyle: {
      padding: 20
    },
    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: {
        fontSize: 24,
        fontWeight: 'bold',
        marginBottom: 20
      },
      children: "Param\xE8tres"
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: {
        gap: 16
      },
      children: [(0, _jsxRuntime.jsx)(_RevisionSettings.default, {}), (0, _jsxRuntime.jsx)(_SecuritySettings.default, {})]
    })]
  });
};
var _default = exports.default = SettingsScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX1JldmlzaW9uU2V0dGluZ3MiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX1NlY3VyaXR5U2V0dGluZ3MiLCJfanN4UnVudGltZSIsImNvdl8ybWhrd2xjaW03IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiU2V0dGluZ3NTY3JlZW4iLCJqc3hzIiwiU2Nyb2xsVmlldyIsInN0eWxlIiwiZmxleCIsImJhY2tncm91bmRDb2xvciIsImNvbnRlbnRDb250YWluZXJTdHlsZSIsInBhZGRpbmciLCJjaGlsZHJlbiIsImpzeCIsIlRleHQiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJtYXJnaW5Cb3R0b20iLCJWaWV3IiwiZ2FwIiwiZGVmYXVsdCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zY3JlZW5zL1NldHRpbmdzL2luZGV4LmpzXHJcbmltcG9ydCB7IFRleHQsIFNjcm9sbFZpZXcsIFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgUmV2aXNpb25TZXR0aW5ncyBmcm9tICcuLi8uLi9jb21wb25lbnRzL3NldHRpbmcvUmV2aXNpb25TZXR0aW5ncyc7XHJcbmltcG9ydCBTZWN1cml0eVNldHRpbmdzIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvc2V0dGluZy9TZWN1cml0eVNldHRpbmdzJztcclxuXHJcbmNvbnN0IFNldHRpbmdzU2NyZWVuID0gKCkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8U2Nyb2xsVmlldyBzdHlsZT17eyBmbGV4OiAxLCBiYWNrZ3JvdW5kQ29sb3I6ICcjRjhGQUZDJyB9fSBjb250ZW50Q29udGFpbmVyU3R5bGU9e3sgcGFkZGluZzogMjAgfX0+XHJcbiAgICAgIDxUZXh0IHN0eWxlPXt7IGZvbnRTaXplOiAyNCwgZm9udFdlaWdodDogJ2JvbGQnLCBtYXJnaW5Cb3R0b206IDIwIH19PlxyXG4gICAgICAgIFBhcmFtw6h0cmVzXHJcbiAgICAgIDwvVGV4dD5cclxuICAgICAgPFZpZXcgc3R5bGU9e3sgZ2FwOiAxNiB9fT5cclxuICAgICAgICA8UmV2aXNpb25TZXR0aW5ncyAvPlxyXG4gICAgICAgIDxTZWN1cml0eVNldHRpbmdzIC8+XHJcbiAgICAgIDwvVmlldz5cclxuICAgIDwvU2Nyb2xsVmlldz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2V0dGluZ3NTY3JlZW47XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxpQkFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsaUJBQUEsR0FBQUQsc0JBQUEsQ0FBQUYsT0FBQTtBQUF5RSxJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFBQSxTQUFBSyxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWxCLElBQUE7RUFBQTtFQUFBLElBQUFtQixRQUFBLEdBQUFsQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWdCLFFBQUEsQ0FBQXBCLElBQUEsS0FBQW9CLFFBQUEsQ0FBQXBCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFtQixRQUFBLENBQUFwQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFnQixjQUFBLEdBQUFELFFBQUEsQ0FBQXBCLElBQUE7RUFBQTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBc0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXRCLGNBQUE7QUFBQUEsY0FBQSxHQUFBaUIsQ0FBQTtBQUV6RSxJQUFNTSxjQUFjLEdBQUcsU0FBakJBLGNBQWNBLENBQUEsRUFBUztFQUFBdkIsY0FBQSxHQUFBa0IsQ0FBQTtFQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQTtFQUMzQixPQUNFLElBQUFsQixXQUFBLENBQUF5QixJQUFBLEVBQUM5QixZQUFBLENBQUErQixVQUFVO0lBQUNDLEtBQUssRUFBRTtNQUFFQyxJQUFJLEVBQUUsQ0FBQztNQUFFQyxlQUFlLEVBQUU7SUFBVSxDQUFFO0lBQUNDLHFCQUFxQixFQUFFO01BQUVDLE9BQU8sRUFBRTtJQUFHLENBQUU7SUFBQUMsUUFBQSxHQUNqRyxJQUFBaEMsV0FBQSxDQUFBaUMsR0FBQSxFQUFDdEMsWUFBQSxDQUFBdUMsSUFBSTtNQUFDUCxLQUFLLEVBQUU7UUFBRVEsUUFBUSxFQUFFLEVBQUU7UUFBRUMsVUFBVSxFQUFFLE1BQU07UUFBRUMsWUFBWSxFQUFFO01BQUcsQ0FBRTtNQUFBTCxRQUFBLEVBQUM7SUFFckUsQ0FBTSxDQUFDLEVBQ1AsSUFBQWhDLFdBQUEsQ0FBQXlCLElBQUEsRUFBQzlCLFlBQUEsQ0FBQTJDLElBQUk7TUFBQ1gsS0FBSyxFQUFFO1FBQUVZLEdBQUcsRUFBRTtNQUFHLENBQUU7TUFBQVAsUUFBQSxHQUN2QixJQUFBaEMsV0FBQSxDQUFBaUMsR0FBQSxFQUFDcEMsaUJBQUEsQ0FBQTJDLE9BQWdCLElBQUUsQ0FBQyxFQUNwQixJQUFBeEMsV0FBQSxDQUFBaUMsR0FBQSxFQUFDbEMsaUJBQUEsQ0FBQXlDLE9BQWdCLElBQUUsQ0FBQztJQUFBLENBQ2hCLENBQUM7RUFBQSxDQUNHLENBQUM7QUFFakIsQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxDQUFBRixPQUFBLEdBRWFoQixjQUFjIiwiaWdub3JlTGlzdCI6W119