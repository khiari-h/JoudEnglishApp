c923c69bdc72a99d33e32a78e93eeb4d
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_2e2x6jb3rb() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ProgressBar\\style.js";
  var hash = "2af6a06ef797095fa0a5735d7cfe3dd7e2a5c5ab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\ProgressBar\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 73,
          column: 4
        }
      },
      "1": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 73,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 22
          }
        },
        loc: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 73,
            column: 4
          }
        },
        line: 10
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 9,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 31
          },
          end: {
            line: 9,
            column: 32
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 9,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 49
          },
          end: {
            line: 9,
            column: 50
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2af6a06ef797095fa0a5735d7cfe3dd7e2a5c5ab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2e2x6jb3rb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e2x6jb3rb();
cov_2e2x6jb3rb().s[0]++;
var createStyles = function createStyles() {
  var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_2e2x6jb3rb().b[0][0]++, 8);
  var borderRadius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_2e2x6jb3rb().b[1][0]++, 4);
  cov_2e2x6jb3rb().f[0]++;
  cov_2e2x6jb3rb().s[1]++;
  return _reactNative.StyleSheet.create({
    container: {
      width: '100%',
      marginVertical: 4
    },
    topContentContainer: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      marginBottom: 6
    },
    valuesContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    progressBarContainer: {
      height: height,
      borderRadius: borderRadius,
      position: 'relative',
      overflow: 'hidden'
    },
    progressTrack: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    },
    progressFill: {
      position: 'absolute',
      top: 0,
      left: 0,
      bottom: 0
    },
    inlinePercentage: {
      alignItems: 'flex-end',
      marginTop: 4
    },
    label: {
      fontSize: 14,
      fontWeight: '500',
      color: '#374151'
    },
    value: {
      fontSize: 12,
      color: '#6B7280',
      fontWeight: '500',
      marginRight: 6
    },
    percentage: {
      fontSize: 12,
      fontWeight: '600',
      letterSpacing: 0.2
    }
  });
};
var _default = exports.default = createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY292XzJlMng2amIzcmIiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInR5cGUiLCJsb2NhdGlvbnMiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiY3JlYXRlU3R5bGVzIiwiaGVpZ2h0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiYm9yZGVyUmFkaXVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImNvbnRhaW5lciIsIndpZHRoIiwibWFyZ2luVmVydGljYWwiLCJ0b3BDb250ZW50Q29udGFpbmVyIiwiZmxleERpcmVjdGlvbiIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsIm1hcmdpbkJvdHRvbSIsInZhbHVlc0NvbnRhaW5lciIsInByb2dyZXNzQmFyQ29udGFpbmVyIiwicG9zaXRpb24iLCJvdmVyZmxvdyIsInByb2dyZXNzVHJhY2siLCJ0b3AiLCJsZWZ0IiwicmlnaHQiLCJib3R0b20iLCJwcm9ncmVzc0ZpbGwiLCJpbmxpbmVQZXJjZW50YWdlIiwibWFyZ2luVG9wIiwibGFiZWwiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJjb2xvciIsInZhbHVlIiwibWFyZ2luUmlnaHQiLCJwZXJjZW50YWdlIiwibGV0dGVyU3BhY2luZyIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJzdHlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy91aS9Qcm9ncmVzc0Jhci9zdHlsZS5qcyAtIFZlcnNpb24gTW9iaWxlLUZpcnN0IFNpbXBsZVxyXG5pbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuXHJcbi8qKlxyXG4gKiDwn5OKIFByb2dyZXNzQmFyIC0gU3R5bGVzIG9wdGltaXPDqXMgcG91ciBtb2JpbGVcclxuICogLSBMaXNpYmlsaXTDqSBvcHRpbWFsZSBzdXIgbW9iaWxlXHJcbiAqIC0gQW5pbWF0aW9uIGZsdWlkZSBldCBzdWJ0aWxlXHJcbiAqL1xyXG5jb25zdCBjcmVhdGVTdHlsZXMgPSAoaGVpZ2h0ID0gOCwgYm9yZGVyUmFkaXVzID0gNCkgPT5cclxuICBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IENPTlRBSU5FUiBTSU1QTEUgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgY29udGFpbmVyOiB7XHJcbiAgICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgICAgIG1hcmdpblZlcnRpY2FsOiA0LCAvLyBSw6lkdWl0IHBvdXIgbW9iaWxlXHJcbiAgICB9LFxyXG5cclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gQ09OVEVOVSBBVS1ERVNTVVMgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgdG9wQ29udGVudENvbnRhaW5lcjoge1xyXG4gICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcclxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcclxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICAgIG1hcmdpbkJvdHRvbTogNixcclxuICAgIH0sXHJcbiAgICB2YWx1ZXNDb250YWluZXI6IHtcclxuICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXHJcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IEJBUlJFIFNJTVBMRSA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBwcm9ncmVzc0JhckNvbnRhaW5lcjoge1xyXG4gICAgICBoZWlnaHQsXHJcbiAgICAgIGJvcmRlclJhZGl1cyxcclxuICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXHJcbiAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcclxuICAgIH0sXHJcbiAgICBwcm9ncmVzc1RyYWNrOiB7XHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICB0b3A6IDAsXHJcbiAgICAgIGxlZnQ6IDAsXHJcbiAgICAgIHJpZ2h0OiAwLFxyXG4gICAgICBib3R0b206IDAsXHJcbiAgICB9LFxyXG4gICAgcHJvZ3Jlc3NGaWxsOiB7XHJcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICB0b3A6IDAsXHJcbiAgICAgIGxlZnQ6IDAsXHJcbiAgICAgIGJvdHRvbTogMCxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBQT1VSQ0VOVEFHRSBFTiBMSUdORSA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBpbmxpbmVQZXJjZW50YWdlOiB7XHJcbiAgICAgIGFsaWduSXRlbXM6ICdmbGV4LWVuZCcsXHJcbiAgICAgIG1hcmdpblRvcDogNCxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBUWVBPR1JBUEhZIFNJTVBMRSA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBsYWJlbDoge1xyXG4gICAgICBmb250U2l6ZTogMTQsXHJcbiAgICAgIGZvbnRXZWlnaHQ6ICc1MDAnLFxyXG4gICAgICBjb2xvcjogJyMzNzQxNTEnLFxyXG4gICAgfSxcclxuICAgIHZhbHVlOiB7XHJcbiAgICAgIGZvbnRTaXplOiAxMixcclxuICAgICAgY29sb3I6ICcjNkI3MjgwJyxcclxuICAgICAgZm9udFdlaWdodDogJzUwMCcsXHJcbiAgICAgIG1hcmdpblJpZ2h0OiA2LFxyXG4gICAgfSxcclxuICAgIHBlcmNlbnRhZ2U6IHtcclxuICAgICAgZm9udFNpemU6IDEyLFxyXG4gICAgICBmb250V2VpZ2h0OiAnNjAwJyxcclxuICAgICAgbGV0dGVyU3BhY2luZzogMC4yLFxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN0eWxlczsiXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFBMEMsU0FBQUMsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQVUsQ0FBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLGVBQUE7SUFBQXBCLElBQUE7RUFBQTtFQUFBLElBQUFxQixRQUFBLEdBQUFwQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWtCLFFBQUEsQ0FBQXRCLElBQUEsS0FBQXNCLFFBQUEsQ0FBQXRCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFxQixRQUFBLENBQUF0QixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFrQixjQUFBLEdBQUFELFFBQUEsQ0FBQXRCLElBQUE7RUFBQTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBd0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXhCLGNBQUE7QUFBQUEsY0FBQSxHQUFBbUIsQ0FBQTtBQU8xQyxJQUFNTSxZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBQSxFQUNoQjtFQUFBLElBRG9CQyxNQUFNLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxPQUFBM0IsY0FBQSxHQUFBcUIsQ0FBQSxVQUFHLENBQUM7RUFBQSxJQUFFUyxZQUFZLEdBQUFILFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxPQUFBM0IsY0FBQSxHQUFBcUIsQ0FBQSxVQUFHLENBQUM7RUFBQXJCLGNBQUEsR0FBQW9CLENBQUE7RUFBQXBCLGNBQUEsR0FBQW1CLENBQUE7RUFDaEQsT0FBQVksdUJBQVUsQ0FBQ0MsTUFBTSxDQUFDO0lBRWhCQyxTQUFTLEVBQUU7TUFDVEMsS0FBSyxFQUFFLE1BQU07TUFDYkMsY0FBYyxFQUFFO0lBQ2xCLENBQUM7SUFHREMsbUJBQW1CLEVBQUU7TUFDbkJDLGFBQWEsRUFBRSxLQUFLO01BQ3BCQyxjQUFjLEVBQUUsZUFBZTtNQUMvQkMsVUFBVSxFQUFFLFFBQVE7TUFDcEJDLFlBQVksRUFBRTtJQUNoQixDQUFDO0lBQ0RDLGVBQWUsRUFBRTtNQUNmSixhQUFhLEVBQUUsS0FBSztNQUNwQkUsVUFBVSxFQUFFO0lBQ2QsQ0FBQztJQUdERyxvQkFBb0IsRUFBRTtNQUNwQmhCLE1BQU0sRUFBTkEsTUFBTTtNQUNOSSxZQUFZLEVBQVpBLFlBQVk7TUFDWmEsUUFBUSxFQUFFLFVBQVU7TUFDcEJDLFFBQVEsRUFBRTtJQUNaLENBQUM7SUFDREMsYUFBYSxFQUFFO01BQ2JGLFFBQVEsRUFBRSxVQUFVO01BQ3BCRyxHQUFHLEVBQUUsQ0FBQztNQUNOQyxJQUFJLEVBQUUsQ0FBQztNQUNQQyxLQUFLLEVBQUUsQ0FBQztNQUNSQyxNQUFNLEVBQUU7SUFDVixDQUFDO0lBQ0RDLFlBQVksRUFBRTtNQUNaUCxRQUFRLEVBQUUsVUFBVTtNQUNwQkcsR0FBRyxFQUFFLENBQUM7TUFDTkMsSUFBSSxFQUFFLENBQUM7TUFDUEUsTUFBTSxFQUFFO0lBQ1YsQ0FBQztJQUdERSxnQkFBZ0IsRUFBRTtNQUNoQlosVUFBVSxFQUFFLFVBQVU7TUFDdEJhLFNBQVMsRUFBRTtJQUNiLENBQUM7SUFHREMsS0FBSyxFQUFFO01BQ0xDLFFBQVEsRUFBRSxFQUFFO01BQ1pDLFVBQVUsRUFBRSxLQUFLO01BQ2pCQyxLQUFLLEVBQUU7SUFDVCxDQUFDO0lBQ0RDLEtBQUssRUFBRTtNQUNMSCxRQUFRLEVBQUUsRUFBRTtNQUNaRSxLQUFLLEVBQUUsU0FBUztNQUNoQkQsVUFBVSxFQUFFLEtBQUs7TUFDakJHLFdBQVcsRUFBRTtJQUNmLENBQUM7SUFDREMsVUFBVSxFQUFFO01BQ1ZMLFFBQVEsRUFBRSxFQUFFO01BQ1pDLFVBQVUsRUFBRSxLQUFLO01BQ2pCSyxhQUFhLEVBQUU7SUFDakI7RUFDRixDQUFDLENBQUM7QUFBRCxDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FFVXRDLFlBQVkiLCJpZ25vcmVMaXN0IjpbXX0=