cbfeca5f35cb45f30707c7cd7653add5
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vocab = void 0;
var vocab = exports.vocab = {
  title: "Technologies Émergentes & Prospective",
  words: [{
    word: "technological discontinuity",
    translation: "discontinuité technologique",
    example: "The introduction of smartphones created a technological discontinuity in mobile communications."
  }, {
    word: "breakthrough technology",
    translation: "technologie révolutionnaire",
    example: "CRISPR gene editing is considered a breakthrough technology in biotechnology."
  }, {
    word: "transformative innovation",
    translation: "innovation transformative",
    example: "Artificial intelligence represents a transformative innovation across multiple industries."
  }, {
    word: "business model innovation",
    translation: "innovation de modèle d'affaires",
    example: "Streaming services pioneered business model innovation in media distribution."
  }, {
    word: "cross-industry disruption",
    translation: "perturbation intersectorielle",
    example: "Digital platforms have caused cross-industry disruption beyond their original markets."
  }, {
    word: "market disruption",
    translation: "disruption du marché",
    example: "The company's novel approach caused significant market disruption in the retail sector."
  }, {
    word: "incumbent displacement",
    translation: "déplacement des acteurs établis",
    example: "Incumbent displacement occurs when established companies fail to adapt to disruptive technologies."
  }, {
    word: "radical innovation",
    translation: "innovation radicale",
    example: "Quantum computing represents a radical innovation rather than incremental improvement."
  }, {
    word: "technological convergence",
    translation: "convergence technologique",
    example: "Technological convergence between AI and robotics is accelerating automation capabilities."
  }, {
    word: "diffusion of innovation",
    translation: "diffusion de l'innovation",
    example: "The diffusion of innovation follows predictable patterns across early adopters to mainstream users."
  }, {
    word: "technological leapfrogging",
    translation: "saut technologique",
    example: "Mobile banking allowed technological leapfrogging in regions lacking traditional infrastructure."
  }, {
    word: "innovation acceleration",
    translation: "accélération de l'innovation",
    example: "Digital collaboration tools have enabled innovation acceleration across distributed teams."
  }, {
    word: "creative destruction",
    translation: "destruction créatrice",
    example: "Schumpeter described creative destruction as the process by which new technologies replace existing systems."
  }, {
    word: "exponential innovation",
    translation: "innovation exponentielle",
    example: "Computing power has followed exponential innovation patterns for decades."
  }, {
    word: "innovation trajectory",
    translation: "trajectoire d'innovation",
    example: "The innovation trajectory for renewable energy suggests continued cost reductions."
  }, {
    word: "disintermediation",
    translation: "désintermédiation",
    example: "Digital platforms have caused disintermediation by connecting providers directly with customers."
  }, {
    word: "industry transformation",
    translation: "transformation industrielle",
    example: "Additive manufacturing is driving industry transformation in product development and supply chains."
  }, {
    word: "value chain disruption",
    translation: "perturbation de la chaîne de valeur",
    example: "E-commerce has created value chain disruption in traditional retail distribution."
  }, {
    word: "innovation adoption curve",
    translation: "courbe d'adoption de l'innovation",
    example: "The innovation adoption curve illustrates how technologies spread through different user segments."
  }, {
    word: "innovation diffusion",
    translation: "diffusion de l'innovation",
    example: "Innovation diffusion accelerates when technologies become more accessible and affordable."
  }, {
    word: "technological obsolescence",
    translation: "obsolescence technologique",
    example: "Digital photography caused technological obsolescence for film camera manufacturers."
  }, {
    word: "innovation lifecycle",
    translation: "cycle de vie de l'innovation",
    example: "The innovation lifecycle includes emergence, growth, maturity, and eventual decline phases."
  }, {
    word: "cross-sector innovation",
    translation: "innovation intersectorielle",
    example: "Machine learning represents cross-sector innovation applicable to healthcare, finance, and transportation."
  }, {
    word: "transhumanism",
    translation: "transhumanisme",
    example: "Transhumanism advocates using technology to enhance human capabilities beyond natural limitations."
  }, {
    word: "cognitive augmentation",
    translation: "augmentation cognitive",
    example: "Brain-computer interfaces may enable cognitive augmentation for managing complex information."
  }, {
    word: "life extension",
    translation: "extension de la vie",
    example: "Life extension research seeks to increase human longevity significantly beyond current limits."
  }, {
    word: "biological limitation",
    translation: "limitation biologique",
    example: "Transhumanists view biological limitations as constraints that technology can overcome."
  }, {
    word: "technological singularity",
    translation: "singularité technologique",
    example: "The technological singularity describes a hypothetical point when AI surpasses human intelligence."
  }, {
    word: "posthumanism",
    translation: "posthumanisme",
    example: "Posthumanism explores potential successor species that may transcend current human capabilities."
  }, {
    word: "mind uploading",
    translation: "téléchargement de l'esprit",
    example: "Mind uploading proposes transferring consciousness to computational substrates."
  }, {
    word: "morphological freedom",
    translation: "liberté morphologique",
    example: "Morphological freedom advocates the right to modify one's body using enhancement technologies."
  }, {
    word: "augmented cognition",
    translation: "cognition augmentée",
    example: "Augmented cognition technologies aim to enhance human information processing and decision-making."
  }, {
    word: "neural enhancement",
    translation: "amélioration neurale",
    example: "Neural enhancement could improve memory, learning capacity, and cognitive processing."
  }, {
    word: "biotechnological integration",
    translation: "intégration biotechnologique",
    example: "Biotechnological integration merges organic systems with technological components."
  }, {
    word: "human-machine merger",
    translation: "fusion homme-machine",
    example: "Some futurists predict a gradual human-machine merger through implantable technologies."
  }, {
    word: "longevity research",
    translation: "recherche sur la longévité",
    example: "Longevity research investigates biological mechanisms of aging to extend healthy lifespan."
  }, {
    word: "enhancement ethics",
    translation: "éthique de l'amélioration",
    example: "Enhancement ethics addresses questions of fairness, access, and human identity."
  }, {
    word: "cognitive liberty",
    translation: "liberté cognitive",
    example: "Cognitive liberty advocates the right to control one's own consciousness and cognition."
  }, {
    word: "radical life extension",
    translation: "prolongation radicale de la vie",
    example: "Radical life extension aims to extend human lifespan indefinitely through technological means."
  }, {
    word: "anthropotechnology",
    translation: "anthropotechnologie",
    example: "Anthropotechnology refers to technologies specifically designed to modify human capabilities."
  }, {
    word: "human obsolescence",
    translation: "obsolescence humaine",
    example: "Some critics worry about human obsolescence if artificial intelligence surpasses human capabilities."
  }, {
    word: "somatic engineering",
    translation: "ingénierie somatique",
    example: "Somatic engineering involves modifying the human body using technological interventions."
  }, {
    word: "technoprogressive",
    translation: "technoprogressiste",
    example: "The technoprogressive position embraces enhancement technologies while emphasizing equity and regulation."
  }, {
    word: "cybernetic organism",
    translation: "organisme cybernétique",
    example: "A cybernetic organism integrates both biological and technological components."
  }, {
    word: "transhumanist bioethics",
    translation: "bioéthique transhumaniste",
    example: "Transhumanist bioethics challenges traditional views about human nature and medical intervention."
  }, {
    word: "substrate-independent mind",
    translation: "esprit indépendant du substrat",
    example: "The theory of substrate-independent mind suggests consciousness could exist on different physical platforms."
  }, {
    word: "biological transcendence",
    translation: "transcendance biologique",
    example: "Transhumanist philosophy often aims toward biological transcendence through technology."
  }, {
    word: "cognitive enhancement",
    translation: "amélioration cognitive",
    example: "Cognitive enhancement technologies might include neural implants or brain stimulation."
  }, {
    word: "enhancement divide",
    translation: "fracture de l'amélioration",
    example: "The enhancement divide refers to inequality in access to human enhancement technologies."
  }, {
    word: "directed evolution",
    translation: "évolution dirigée",
    example: "Directed evolution involves deliberately guiding human biological development through technological means."
  }, {
    word: "quantum supremacy",
    translation: "suprématie quantique",
    example: "Quantum supremacy refers to when quantum computers outperform classical systems for specific problems."
  }, {
    word: "quantum entanglement",
    translation: "intrication quantique",
    example: "Quantum entanglement allows particles to remain connected regardless of distance."
  }, {
    word: "quantum communication",
    translation: "communication quantique",
    example: "Quantum communication offers theoretically unhackable information transfer."
  }, {
    word: "quantum cryptography",
    translation: "cryptographie quantique",
    example: "Quantum cryptography uses quantum mechanical principles to secure data transmission."
  }, {
    word: "quantum sensor",
    translation: "capteur quantique",
    example: "Quantum sensors achieve unprecedented precision in measuring physical quantities."
  }, {
    word: "quantum superposition",
    translation: "superposition quantique",
    example: "Quantum superposition allows quantum bits to exist in multiple states simultaneously."
  }, {
    word: "quantum coherence",
    translation: "cohérence quantique",
    example: "Maintaining quantum coherence is a major challenge in building practical quantum computers."
  }, {
    word: "quantum teleportation",
    translation: "téléportation quantique",
    example: "Quantum teleportation transfers quantum states between separated quantum systems."
  }, {
    word: "quantum algorithm",
    translation: "algorithme quantique",
    example: "Shor's quantum algorithm can factor large numbers exponentially faster than classical methods."
  }, {
    word: "quantum advantage",
    translation: "avantage quantique",
    example: "Researchers demonstrated quantum advantage for a specific computational problem."
  }, {
    word: "quantum error correction",
    translation: "correction d'erreur quantique",
    example: "Quantum error correction is essential for building fault-tolerant quantum computers."
  }, {
    word: "quantum interference",
    translation: "interférence quantique",
    example: "Quantum interference results from the wave-like properties of quantum particles."
  }, {
    word: "quantum simulation",
    translation: "simulation quantique",
    example: "Quantum simulation can model complex molecular structures for drug discovery."
  }, {
    word: "quantum logic gate",
    translation: "porte logique quantique",
    example: "Quantum logic gates manipulate qubits to perform quantum computational operations."
  }, {
    word: "quantum annealing",
    translation: "recuit quantique",
    example: "Quantum annealing helps solve optimization problems by finding minimum energy states."
  }, {
    word: "quantum network",
    translation: "réseau quantique",
    example: "A quantum network distributes quantum information between multiple quantum processors."
  }, {
    word: "quantum internet",
    translation: "internet quantique",
    example: "The quantum internet would enable secure quantum communication across global distances."
  }, {
    word: "quantum materials",
    translation: "matériaux quantiques",
    example: "Quantum materials exhibit unique properties arising from quantum mechanical effects."
  }, {
    word: "quantum memory",
    translation: "mémoire quantique",
    example: "Quantum memory stores quantum states for later retrieval and processing."
  }, {
    word: "quantum computing architecture",
    translation: "architecture informatique quantique",
    example: "Different quantum computing architectures include superconducting circuits and trapped ions."
  }, {
    word: "quantum processor",
    translation: "processeur quantique",
    example: "The quantum processor contained 53 operational qubits interconnected in a lattice structure."
  }, {
    word: "quantum decoherence",
    translation: "décohérence quantique",
    example: "Quantum decoherence causes quantum systems to lose their quantum properties through environmental interaction."
  }, {
    word: "quantum radar",
    translation: "radar quantique",
    example: "Quantum radar uses quantum entanglement to detect stealth aircraft with greater sensitivity."
  }, {
    word: "quantum metrology",
    translation: "métrologie quantique",
    example: "Quantum metrology provides extremely precise measurements beyond classical limits."
  }, {
    word: "quantum dot",
    translation: "point quantique",
    example: "Quantum dots are nanoscale semiconductor particles with applications in computing and display technology."
  }, {
    word: "synthetic biology",
    translation: "biologie synthétique",
    example: "Synthetic biology redesigns organisms for specific functions by engineering genetic components."
  }, {
    word: "biofabrication",
    translation: "biofabrication",
    example: "Biofabrication creates biological structures using 3D printing and tissue engineering techniques."
  }, {
    word: "genomic medicine",
    translation: "médecine génomique",
    example: "Genomic medicine uses individual genetic information to optimize treatment decisions."
  }, {
    word: "bioinformatics",
    translation: "bioinformatique",
    example: "Bioinformatics applies computational methods to analyze biological data and gene sequences."
  }, {
    word: "organoid technology",
    translation: "technologie des organoïdes",
    example: "Organoid technology grows miniature 3D organ structures for research and testing."
  }, {
    word: "bioprinting",
    translation: "bio-impression",
    example: "Bioprinting creates tissue structures by depositing cells in precise spatial arrangements."
  }, {
    word: "cellular reprogramming",
    translation: "reprogrammation cellulaire",
    example: "Cellular reprogramming converts differentiated cells back to pluripotent stem cells."
  }, {
    word: "genetic circuit",
    translation: "circuit génétique",
    example: "Synthetic biologists design genetic circuits to program cellular functions and responses."
  }, {
    word: "biomaterial scaffold",
    translation: "échafaudage biomateriel",
    example: "Biomaterial scaffolds provide three-dimensional structures for tissue regeneration."
  }, {
    word: "genome sequencing",
    translation: "séquençage du génome",
    example: "Advanced genome sequencing technologies have dramatically reduced costs and increased speed."
  }, {
    word: "synthetic genomics",
    translation: "génomique synthétique",
    example: "Synthetic genomics aims to create artificial genomes with novel functions."
  }, {
    word: "metabolic engineering",
    translation: "ingénierie métabolique",
    example: "Metabolic engineering modifies cellular processes to produce valuable compounds."
  }, {
    word: "microbiome engineering",
    translation: "ingénierie du microbiome",
    example: "Microbiome engineering manipulates microbial communities for health benefits."
  }, {
    word: "DNA synthesis",
    translation: "synthèse d'ADN",
    example: "Automated DNA synthesis enables the creation of custom genetic sequences."
  }, {
    word: "biosensor technology",
    translation: "technologie des biocapteurs",
    example: "Biosensor technology detects biological molecules with applications in diagnostics and monitoring."
  }, {
    word: "tissue engineering",
    translation: "ingénierie tissulaire",
    example: "Tissue engineering combines cells and biomaterials to create functional tissue replacements."
  }, {
    word: "cell therapy",
    translation: "thérapie cellulaire",
    example: "Cell therapy treats diseases by introducing new cells into a patient's body."
  }, {
    word: "genetic modulation",
    translation: "modulation génétique",
    example: "Genetic modulation adjusts gene expression rather than editing gene sequences."
  }, {
    word: "nanobiotechnology",
    translation: "nanobiotechnologie",
    example: "Nanobiotechnology combines nanotechnology with biological systems for medical applications."
  }, {
    word: "biofoundry",
    translation: "bio-fonderie",
    example: "Biofoundries automate biological engineering processes for faster development cycles."
  }, {
    word: "biomedical imaging",
    translation: "imagerie biomédicale",
    example: "Advanced biomedical imaging visualizes biological processes at molecular resolution."
  }, {
    word: "biomolecular engineering",
    translation: "ingénierie biomoléculaire",
    example: "Biomolecular engineering designs proteins with novel functions for therapeutic applications."
  }, {
    word: "cybersecurity posture",
    translation: "posture de cybersécurité",
    example: "The organization strengthened its cybersecurity posture through defense-in-depth strategies."
  }, {
    word: "advanced persistent threat",
    translation: "menace persistante avancée",
    example: "Advanced persistent threats involve sophisticated, long-term intrusion campaigns."
  }, {
    word: "cyber resilience",
    translation: "cyber-résilience",
    example: "Cyber resilience focuses on maintaining operations despite successful attacks."
  }, {
    word: "cyber deterrence",
    translation: "cyber-dissuasion",
    example: "Cyber deterrence aims to prevent attacks by threatening credible retaliation."
  }, {
    word: "cyber attribution",
    translation: "attribution cyber",
    example: "Cyber attribution identifies responsible actors behind digital attacks."
  }, {
    word: "threat intelligence",
    translation: "renseignement sur les menaces",
    example: "Threat intelligence provides actionable information about potential attackers."
  }, {
    word: "security orchestration",
    translation: "orchestration de sécurité",
    example: "Security orchestration automates responses to detected threats across multiple platforms."
  }, {
    word: "cyber espionage",
    translation: "cyber-espionnage",
    example: "Cyber espionage operations extract sensitive information for intelligence purposes."
  }, {
    word: "zero trust architecture",
    translation: "architecture à confiance zéro",
    example: "Zero trust architecture verifies every user and device attempting to access resources."
  }, {
    word: "security by design",
    translation: "sécurité dès la conception",
    example: "Security by design integrates protections throughout system development rather than adding them later."
  }, {
    word: "threat landscape",
    translation: "paysage des menaces",
    example: "The threat landscape continually evolves with new attack techniques and vulnerabilities."
  }, {
    word: "cyber sovereignty",
    translation: "souveraineté numérique",
    example: "Nations increasingly assert cyber sovereignty through data localization requirements."
  }, {
    word: "cyber risk management",
    translation: "gestion des risques cyber",
    example: "Cyber risk management balances security investments against potential threats."
  }, {
    word: "critical infrastructure protection",
    translation: "protection des infrastructures critiques",
    example: "Critical infrastructure protection secures essential systems like power grids and water supplies."
  }, {
    word: "cyber defense capability",
    translation: "capacité de cyberdéfense",
    example: "Countries develop cyber defense capabilities to protect national interests in cyberspace."
  }, {
    word: "security vulnerability",
    translation: "vulnérabilité de sécurité",
    example: "The breach exploited a security vulnerability in outdated software."
  }, {
    word: "operational technology security",
    translation: "sécurité des technologies opérationnelles",
    example: "Operational technology security protects industrial control systems and physical processes."
  }, {
    word: "cyber threat hunting",
    translation: "chasse aux menaces cyber",
    example: "Cyber threat hunting proactively searches networks for signs of undetected intrusions."
  }, {
    word: "cyber kill chain",
    translation: "chaîne cybernétique d'élimination",
    example: "The cyber kill chain model describes the stages of a cyber attack from reconnaissance to action."
  }, {
    word: "cyber threat intelligence",
    translation: "renseignement sur les cybermenaces",
    example: "Cyber threat intelligence provides contextual information about potential attackers and their methods."
  }, {
    word: "information security governance",
    translation: "gouvernance de la sécurité de l'information",
    example: "Information security governance aligns security with organizational objectives and risk tolerance."
  }, {
    word: "incident response",
    translation: "réponse aux incidents",
    example: "Effective incident response minimizes damage and reduces recovery time after breaches."
  }, {
    word: "security information management",
    translation: "gestion des informations de sécurité",
    example: "Security information management centralizes threat monitoring and analysis."
  }, {
    word: "ethical framework",
    translation: "cadre éthique",
    example: "Companies need ethical frameworks for responsible AI development and deployment."
  }, {
    word: "technology governance",
    translation: "gouvernance technologique",
    example: "Technology governance establishes oversight mechanisms for emerging technologies."
  }, {
    word: "technology assessment",
    translation: "évaluation technologique",
    example: "Technology assessment analyzes potential impacts of emerging technologies on society."
  }, {
    word: "ethical design",
    translation: "conception éthique",
    example: "Ethical design integrates moral considerations into technology development processes."
  }, {
    word: "privacy by design",
    translation: "protection de la vie privée dès la conception",
    example: "Privacy by design builds data protection into systems from the beginning."
  }, {
    word: "value-sensitive design",
    translation: "conception sensible aux valeurs",
    example: "Value-sensitive design explicitly incorporates human values into technology creation."
  }, {
    word: "technology stewardship",
    translation: "intendance technologique",
    example: "Technology stewardship promotes responsible management of technological development."
  }, {
    word: "dual-use technology",
    translation: "technologie à double usage",
    example: "Dual-use technologies can serve both beneficial and harmful purposes."
  }, {
    word: "anticipatory governance",
    translation: "gouvernance anticipative",
    example: "Anticipatory governance proactively addresses ethical issues before technologies mature."
  }, {
    word: "ethical algorithm",
    translation: "algorithme éthique",
    example: "Researchers develop ethical algorithms that balance accuracy with fairness considerations."
  }, {
    word: "moral algorithm",
    translation: "algorithme moral",
    example: "Autonomous vehicles require moral algorithms to make ethical decisions in potential accidents."
  }, {
    word: "data ethics",
    translation: "éthique des données",
    example: "Data ethics addresses questions of privacy, consent, and appropriate use of information."
  }, {
    word: "ethical impact assessment",
    translation: "évaluation de l'impact éthique",
    example: "Companies conduct ethical impact assessments before deploying AI systems."
  }, {
    word: "stakeholder involvement",
    translation: "implication des parties prenantes",
    example: "Ethical technology development requires meaningful stakeholder involvement."
  }, {
    word: "transparency principle",
    translation: "principe de transparence",
    example: "The transparency principle requires that AI decision-making be explainable to affected individuals."
  }, {
    word: "technology ethics",
    translation: "éthique technologique",
    example: "Technology ethics evaluates the moral dimensions of emerging technological systems."
  }, {
    word: "responsible AI",
    translation: "IA responsable",
    example: "Responsible AI frameworks address issues of fairness, accountability, and transparency."
  }, {
    word: "ethical guidelines",
    translation: "lignes directrices éthiques",
    example: "Industry associations develop ethical guidelines for technology development."
  }, {
    word: "future studies",
    translation: "études prospectives",
    example: "Future studies employs systematic methods to explore possible technological developments."
  }, {
    word: "technology foresight",
    translation: "prospective technologique",
    example: "Technology foresight informs strategic planning and policy development."
  }, {
    word: "horizon scanning",
    translation: "analyse prospective",
    example: "Horizon scanning identifies early signals of technological and social change."
  }, {
    word: "scenario planning",
    translation: "planification par scénarios",
    example: "Scenario planning explores multiple possible futures to improve strategic decisions."
  }, {
    word: "strategic forecasting",
    translation: "prévision stratégique",
    example: "Strategic forecasting anticipates technological developments and their implications."
  }, {
    word: "technology trajectory",
    translation: "trajectoire technologique",
    example: "Understanding the technology trajectory helps anticipate future capabilities."
  }, {
    word: "trend analysis",
    translation: "analyse de tendances",
    example: "Trend analysis identifies patterns that may indicate future technological directions."
  }, {
    word: "exponential technology",
    translation: "technologie exponentielle",
    example: "Exponential technologies improve at accelerating rates rather than linear progression."
  }, {
    word: "weak signal",
    translation: "signal faible",
    example: "Futurists monitor weak signals that might indicate emerging technological trends."
  }, {
    word: "technology roadmap",
    translation: "feuille de route technologique",
    example: "A technology roadmap outlines expected developments across specific timeframes."
  }, {
    word: "future-proofing",
    translation: "pérennisation",
    example: "Organizations pursue future-proofing strategies to remain relevant amid technological change."
  }, {
    word: "anticipatory intelligence",
    translation: "intelligence anticipative",
    example: "Anticipatory intelligence helps organizations prepare for technological disruptions."
  }, {
    word: "futures thinking",
    translation: "pensée prospective",
    example: "Futures thinking considers multiple possible scenarios rather than a single prediction."
  }, {
    word: "strategic anticipation",
    translation: "anticipation stratégique",
    example: "Strategic anticipation allows organizations to prepare for emerging opportunities."
  }, {
    word: "backcasting",
    translation: "rétropolation",
    example: "Backcasting works backward from a desired future to identify necessary actions."
  }, {
    word: "foresight methodology",
    translation: "méthodologie prospective",
    example: "Foresight methodology combines quantitative and qualitative approaches to future analysis."
  }, {
    word: "wildcard event",
    translation: "événement imprévu",
    example: "Wildcard events are low-probability developments with potentially transformative effects."
  }, {
    word: "cross-impact analysis",
    translation: "analyse d'impacts croisés",
    example: "Cross-impact analysis examines how multiple trends might interact and influence each other."
  }, {
    word: "long-term planning",
    translation: "planification à long terme",
    example: "Long-term planning addresses technological changes beyond immediate horizons."
  }, {
    word: "technological forecasting",
    translation: "prévision technologique",
    example: "Technological forecasting anticipates future capabilities and societal impacts."
  }, {
    word: "technology intelligence",
    translation: "veille technologique",
    example: "Technology intelligence monitors developments that could impact organizational strategy."
  }, {
    word: "transformative scenario",
    translation: "scénario transformateur",
    example: "Transformative scenarios explore fundamental shifts in technological paradigms."
  }, {
    word: "future narrative",
    translation: "récit du futur",
    example: "Future narratives help organizations envision and communicate potential technological paths."
  }, {
    word: "technology projection",
    translation: "projection technologique",
    example: "The technology projection anticipated computational capabilities doubling every eighteen months."
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,