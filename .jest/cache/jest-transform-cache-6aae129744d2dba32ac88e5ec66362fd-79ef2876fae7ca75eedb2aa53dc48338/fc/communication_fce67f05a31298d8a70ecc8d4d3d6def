c1335c517968a01d6e7831a445426657
function cov_1tts1oota5() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\communication.js";
  var hash = "1a43fc3ecaf157e779f76b732405826577830a40";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\communication.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 22
        },
        end: {
          line: 220,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1a43fc3ecaf157e779f76b732405826577830a40"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1tts1oota5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tts1oota5();
var communication = (cov_1tts1oota5().s[0]++, [{
  categoryId: 20,
  english: "Could you speak more slowly, please?",
  translation: "Pourriez-vous parler plus lentement, s'il vous plaît ?",
  context: "Demander à quelqu'un de ralentir son débit de parole",
  examples: [{
    english: "I'm still learning English. Could you speak more slowly, please?",
    translation: "J'apprends encore l'anglais. Pourriez-vous parler plus lentement, s'il vous plaît ?"
  }]
}, {
  categoryId: 20,
  english: "Could you repeat that, please?",
  translation: "Pourriez-vous répéter cela, s'il vous plaît ?",
  context: "Demander à quelqu'un de répéter",
  examples: [{
    english: "I didn't catch what you said. Could you repeat that, please?",
    translation: "Je n'ai pas saisi ce que vous avez dit. Pourriez-vous répéter cela, s'il vous plaît ?"
  }]
}, {
  categoryId: 20,
  english: "I don't understand.",
  translation: "Je ne comprends pas.",
  context: "Exprimer qu'on ne comprend pas",
  examples: [{
    english: "I'm sorry, but I don't understand what you're trying to explain.",
    translation: "Je suis désolé(e), mais je ne comprends pas ce que vous essayez d'expliquer."
  }]
}, {
  categoryId: 20,
  english: "What does that mean?",
  translation: "Qu'est-ce que cela signifie ?",
  context: "Demander la signification de quelque chose",
  examples: [{
    english: "You used the word 'inadvertently'. What does that mean?",
    translation: "Vous avez utilisé le mot 'inadvertently'. Qu'est-ce que cela signifie ?"
  }]
}, {
  categoryId: 20,
  english: "How do you say ... in English?",
  translation: "Comment dit-on ... en anglais ?",
  context: "Demander comment traduire un mot",
  examples: [{
    english: "How do you say 'pomme' in English?",
    translation: "Comment dit-on 'pomme' en anglais ?"
  }]
}, {
  categoryId: 20,
  english: "How do you spell that?",
  translation: "Comment ça s'écrit ?",
  context: "Demander l'orthographe d'un mot",
  examples: [{
    english: "Could you tell me your last name? How do you spell that?",
    translation: "Pourriez-vous me dire votre nom de famille ? Comment ça s'écrit ?"
  }]
}, {
  categoryId: 20,
  english: "Could you write it down for me?",
  translation: "Pourriez-vous me l'écrire ?",
  context: "Demander à quelqu'un d'écrire une information",
  examples: [{
    english: "I'm not sure I'll remember the address. Could you write it down for me?",
    translation: "Je ne suis pas sûr(e) de me souvenir de l'adresse. Pourriez-vous me l'écrire ?"
  }]
}, {
  categoryId: 20,
  english: "I'd like to make a phone call.",
  translation: "Je voudrais passer un appel téléphonique.",
  context: "Exprimer le souhait de téléphoner",
  examples: [{
    english: "Excuse me, I'd like to make a phone call. Is there a phone I can use?",
    translation: "Excusez-moi, je voudrais passer un appel téléphonique. Y a-t-il un téléphone que je peux utiliser ?"
  }]
}, {
  categoryId: 20,
  english: "Can I take a message?",
  translation: "Puis-je prendre un message ?",
  context: "Proposer de prendre un message pour quelqu'un",
  examples: [{
    english: "John isn't here right now. Can I take a message for him?",
    translation: "John n'est pas là en ce moment. Puis-je prendre un message pour lui ?"
  }]
}, {
  categoryId: 20,
  english: "Could I speak to... please?",
  translation: "Pourrais-je parler à... s'il vous plaît ?",
  context: "Demander à parler à quelqu'un au téléphone",
  examples: [{
    english: "Hello, could I speak to Dr. Smith, please?",
    translation: "Bonjour, pourrais-je parler au Dr. Smith, s'il vous plaît ?"
  }]
}, {
  categoryId: 20,
  english: "I'll call you back later.",
  translation: "Je vous rappellerai plus tard.",
  context: "Indiquer qu'on rappellera ultérieurement",
  examples: [{
    english: "I'm in a meeting now. I'll call you back later, if that's okay?",
    translation: "Je suis en réunion maintenant. Je vous rappellerai plus tard, si cela vous convient ?"
  }]
}, {
  categoryId: 20,
  english: "Could you tell her that I called?",
  translation: "Pourriez-vous lui dire que j'ai appelé ?",
  context: "Demander de transmettre qu'on a appelé",
  examples: [{
    english: "She's not available? Could you tell her that I called? My name is Sarah.",
    translation: "Elle n'est pas disponible ? Pourriez-vous lui dire que j'ai appelé ? Je m'appelle Sarah."
  }]
}, {
  categoryId: 20,
  english: "I'd like to send an email.",
  translation: "Je voudrais envoyer un email.",
  context: "Exprimer le souhait d'envoyer un email",
  examples: [{
    english: "I'd like to send an email to confirm our appointment.",
    translation: "Je voudrais envoyer un email pour confirmer notre rendez-vous."
  }]
}, {
  categoryId: 20,
  english: "What's your email address?",
  translation: "Quelle est ton adresse email ?",
  context: "Demander l'adresse email de quelqu'un",
  examples: [{
    english: "I'll send you the documents. What's your email address?",
    translation: "Je t'enverrai les documents. Quelle est ton adresse email ?"
  }]
}, {
  categoryId: 20,
  english: "Did you receive my message?",
  translation: "As-tu reçu mon message ?",
  context: "Vérifier si un message a été reçu",
  examples: [{
    english: "I sent you the details yesterday. Did you receive my message?",
    translation: "Je t'ai envoyé les détails hier. As-tu reçu mon message ?"
  }]
}, {
  categoryId: 20,
  english: "I sent you a text message.",
  translation: "Je t'ai envoyé un SMS.",
  context: "Indiquer qu'on a envoyé un SMS",
  examples: [{
    english: "I sent you a text message with the address of the restaurant.",
    translation: "Je t'ai envoyé un SMS avec l'adresse du restaurant."
  }]
}, {
  categoryId: 20,
  english: "Can we have a quick chat?",
  translation: "Pouvons-nous avoir une petite conversation ?",
  context: "Proposer une courte discussion",
  examples: [{
    english: "Do you have a minute? Can we have a quick chat about the project?",
    translation: "As-tu une minute ? Pouvons-nous avoir une petite conversation à propos du projet ?"
  }]
}, {
  categoryId: 20,
  english: "I'll get back to you on that.",
  translation: "Je reviendrai vers vous à ce sujet.",
  context: "Promettre de donner une réponse ultérieurement",
  examples: [{
    english: "That's an interesting question. I'll get back to you on that after I check the details.",
    translation: "C'est une question intéressante. Je reviendrai vers vous à ce sujet après avoir vérifié les détails."
  }]
}]);
export default communication;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,