{"version":3,"names":["_reactNative","require","_native","_expoRouter","_react","_Container","_interopRequireWildcard","_VocabularyHeader","_interopRequireDefault","_VocabularyCategorySelector","_VocabularyProgress","_VocabularyWordSection","_VocabularyNavigation","_useVocabulary2","_useLastActivity2","_vocabularyDataHelper","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","VocabularyExercise","_ref","route","_ref2","params","level","exerciseType","navigation","useNavigation","styles","createStyles","_useLastActivity","useLastActivity","saveActivity","levelColor","getLevelColor","vocabularyData","getVocabularyData","isVocabularyFast","_useVocabulary","useVocabulary","categoryIndex","wordIndex","showTranslation","completedWords","loaded","showDetailedProgress","currentWord","currentCategory","changeCategory","toggleTranslation","toggleDetailedProgress","handleNext","handlePrevious","canGoToPrevious","isLastWordInExercise","display","saveData","useEffect","totalWords","categories","Array","isArray","reduce","total","cat","_cat$words","words","length","exercises","ex","_ex$words","activityData","title","type","metadata","word","category","name","handleBackPress","useCallback","router","push","pathname","handleCategoryChange","index","handleCategoryProgressPress","handleToggleProgressDetails","handleNextWord","_asyncToGenerator2","result","completed","goBack","handlePreviousWord","jsx","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","ALL","backgroundColor","statusBarStyle","children","View","style","loadingContainer","ActivityIndicator","testID","size","color","jsxs","withScrollView","withPadding","scrollViewProps","showsVerticalScrollIndicator","contentContainerStyle","scrollContent","onBackPress","expanded","onToggleExpand","onCategoryPress","selectedIndex","onSelectCategory","wordCounter","onToggleTranslation","onNext","onPrevious","canGoPrevious","isLast","_default","exports"],"sources":["index.js"],"sourcesContent":["// VocabularyExercise/index.js - VERSION SIMPLIFIÉE SANS MODE FAST/CLASSIC\n\nimport { View, ActivityIndicator } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\nimport { useEffect, useCallback } from \"react\";\n\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\nimport VocabularyHeader from \"./VocabularyHeader\";\nimport VocabularyCategorySelector from \"./VocabularyCategorySelector\";\nimport VocabularyProgress from \"./VocabularyProgress\";\nimport VocabularyWordSection from \"./VocabularyWordSection\";\nimport VocabularyNavigation from \"./VocabularyNavigation\";\n\nimport useVocabulary from \"./hooks/useVocabulary\";\nimport useLastActivity from \"../../../hooks/useLastActivity\";\nimport { getLevelColor, getVocabularyData } from \"../../../utils/vocabulary/vocabularyDataHelper\";\nimport createStyles from \"./style\";\n\nconst VocabularyExercise = ({ route }) => {\n  const { level, exerciseType } = route.params || {};\n  const navigation = useNavigation();\n  const styles = createStyles();\n  const { saveActivity } = useLastActivity();\n\n  // Data - Plus de logique mode fast/classic\n  const levelColor = getLevelColor(level);\n  const vocabularyData = getVocabularyData(level, exerciseType);\n\n  // Détermine le type d'exercice (vocabulary ou vocabulary_fast)\n  const isVocabularyFast = exerciseType === \"vocabulary_fast\";\n\n  // Hook unifié - Plus besoin de mode\n  const {\n    categoryIndex,\n    wordIndex,\n    showTranslation,\n    completedWords,\n    loaded,\n    showDetailedProgress,\n    currentWord,\n    currentCategory,\n    changeCategory,\n    toggleTranslation,\n    toggleDetailedProgress,\n    handleNext,\n    handlePrevious,\n    canGoToPrevious,\n    isLastWordInExercise,\n    display,\n    saveData,\n  } = useVocabulary(vocabularyData, level, exerciseType);\n\n  // =================== SAUVEGARDE ACTIVITÉ SIMPLIFIÉE ===================\n  \n  useEffect(() => {\n    // ✅ CONDITION SIMPLIFIÉE pour éviter boucle infinie\n    if (!loaded || !vocabularyData || !currentWord) return;\n\n    // ✅ DÉPENDANCES LIMITÉES - seulement wordIndex change\n    let totalWords = 15; // fallback\n    \n    if (vocabularyData.categories && Array.isArray(vocabularyData.categories)) {\n      totalWords = vocabularyData.categories.reduce((total, cat) => total + (cat.words?.length || 0), 0);\n    } else if (vocabularyData.exercises && Array.isArray(vocabularyData.exercises)) {\n      totalWords = vocabularyData.exercises.reduce((total, ex) => total + (ex.words?.length || 0), 0);\n    } else if (vocabularyData.words && Array.isArray(vocabularyData.words)) {\n      totalWords = vocabularyData.words.length;\n    }\n\n    const activityData = {\n      title: isVocabularyFast ? \"Fast Vocabulary\" : \"Vocabulaire\",\n      level,\n      type: \"vocabulary\",\n      exerciseType, // Utilise exerciseType au lieu de mode\n      metadata: {\n        word: wordIndex,\n        totalWords,\n        category: currentCategory?.name || \"Général\",\n        categoryIndex,\n        wordIndex\n      }\n    };\n\n    saveActivity(activityData);\n  }, [wordIndex, isVocabularyFast, level, exerciseType, currentCategory, categoryIndex, loaded, vocabularyData, currentWord, saveActivity]);\n\n  // Handlers\n  const handleBackPress = useCallback(() => {\n    router.push({\n      pathname: \"/tabs/exerciseSelection\",\n      params: { level }\n    });\n  }, [level]);\n\n  const handleCategoryChange = useCallback((index) => changeCategory(index), [changeCategory]);\n  const handleCategoryProgressPress = useCallback((index) => changeCategory(index), [changeCategory]);\n  const handleToggleProgressDetails = useCallback(() => toggleDetailedProgress(), [toggleDetailedProgress]);\n\n  const handleNextWord = useCallback(async () => {\n    const result = handleNext();\n    // Attendre la sauvegarde avant de naviguer\n    if (typeof saveData === 'function') {\n      await saveData();\n    }\n    if (result.completed) {\n      navigation.goBack();\n    }\n  }, [handleNext, navigation, saveData]);\n\n  const handlePreviousWord = useCallback(() => handlePrevious(), [handlePrevious]);\n\n  // Loading state\n  if (!loaded || !vocabularyData) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator testID=\"activity-indicator\" size=\"large\" color={levelColor} />\n        </View>\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      withScrollView\n      backgroundColor=\"#f8fafc\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      scrollViewProps={{\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: styles.scrollContent,\n      }}\n    >\n      <VocabularyHeader\n        level={level}\n        exerciseType={exerciseType}\n        isVocabularyFast={isVocabularyFast}\n        onBackPress={handleBackPress}\n      />\n\n      <VocabularyProgress\n        vocabularyData={vocabularyData}\n        completedWords={completedWords}\n        levelColor={levelColor}\n        expanded={showDetailedProgress}\n        onToggleExpand={handleToggleProgressDetails}\n        onCategoryPress={handleCategoryProgressPress}\n      />\n\n      <VocabularyCategorySelector\n        categories={display.categories}\n        selectedIndex={categoryIndex}\n        onSelectCategory={handleCategoryChange}\n        levelColor={levelColor}\n      />\n\n      <VocabularyWordSection\n        currentWord={currentWord}\n        wordCounter={display.wordCounter}\n        exerciseType={exerciseType}\n        isVocabularyFast={isVocabularyFast}\n        level={level}\n        levelColor={levelColor}\n        showTranslation={showTranslation}\n        onToggleTranslation={toggleTranslation}\n      />\n\n      <VocabularyNavigation\n        onNext={handleNextWord}\n        onPrevious={handlePreviousWord}\n        canGoPrevious={canGoToPrevious}\n        isLast={isLastWordInExercise}\n        levelColor={levelColor}\n      />\n    </Container>\n  );\n};\n\nexport default VocabularyExercise;"],"mappings":"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","ignoreList":[]}