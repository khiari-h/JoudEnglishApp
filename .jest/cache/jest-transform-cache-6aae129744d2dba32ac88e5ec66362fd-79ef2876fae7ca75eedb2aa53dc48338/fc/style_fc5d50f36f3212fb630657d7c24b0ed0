59501d9db2bfc2538f1709011e647784
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_qx1ainlo6() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseCard\\style.js";
  var hash = "59295da6378d6874e9111be619af0bf9ecb15fbf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\ExerciseCard\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 108,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "59295da6378d6874e9111be619af0bf9ecb15fbf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_qx1ainlo6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qx1ainlo6();
var styles = (cov_qx1ainlo6().s[0]++, _reactNative.StyleSheet.create({
  card: Object.assign({
    backgroundColor: 'white',
    borderRadius: 12,
    marginBottom: 15,
    overflow: 'hidden'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.1,
      shadowRadius: 4
    },
    android: {
      elevation: 3
    }
  })),
  topSection: {
    flexDirection: 'row',
    padding: 16,
    alignItems: 'center'
  },
  iconContainer: {
    width: 50,
    height: 50,
    borderRadius: 12,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 15
  },
  icon: {
    fontSize: 24
  },
  infoContainer: {
    flex: 1
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#1f2937',
    marginBottom: 5
  },
  description: {
    fontSize: 14,
    color: '#6b7280',
    lineHeight: 20
  },
  progressSection: {
    paddingHorizontal: 16,
    paddingBottom: 10
  },
  progressContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 5
  },
  progressBar: {
    flex: 1,
    height: 5,
    backgroundColor: '#e5e7eb',
    borderRadius: 3,
    marginRight: 8,
    overflow: 'hidden'
  },
  progressFill: {
    height: '100%',
    borderRadius: 3
  },
  progressText: {
    fontSize: 12,
    fontWeight: 'bold',
    width: 35,
    textAlign: 'right'
  },
  badgeContainer: {
    paddingHorizontal: 16,
    paddingBottom: 10
  },
  badge: {
    alignSelf: 'flex-start',
    paddingHorizontal: 10,
    paddingVertical: 3,
    borderRadius: 10
  },
  badgeText: {
    fontSize: 11,
    fontWeight: 'bold'
  },
  buttonContainer: {
    borderTopWidth: 1,
    borderTopColor: '#f3f4f6'
  },
  startButton: {
    padding: 12,
    alignItems: 'center',
    justifyContent: 'center'
  },
  buttonText: {
    color: 'white',
    fontWeight: 'bold',
    fontSize: 15,
    letterSpacing: 0.5
  }
}));
var _default = exports.default = styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY292X3F4MWFpbmxvNiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJzdHlsZXMiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiY2FyZCIsIk9iamVjdCIsImFzc2lnbiIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsIm1hcmdpbkJvdHRvbSIsIm92ZXJmbG93IiwiUGxhdGZvcm0iLCJzZWxlY3QiLCJpb3MiLCJzaGFkb3dDb2xvciIsInNoYWRvd09mZnNldCIsIndpZHRoIiwiaGVpZ2h0Iiwic2hhZG93T3BhY2l0eSIsInNoYWRvd1JhZGl1cyIsImFuZHJvaWQiLCJlbGV2YXRpb24iLCJ0b3BTZWN0aW9uIiwiZmxleERpcmVjdGlvbiIsInBhZGRpbmciLCJhbGlnbkl0ZW1zIiwiaWNvbkNvbnRhaW5lciIsImp1c3RpZnlDb250ZW50IiwibWFyZ2luUmlnaHQiLCJpY29uIiwiZm9udFNpemUiLCJpbmZvQ29udGFpbmVyIiwiZmxleCIsInRpdGxlIiwiZm9udFdlaWdodCIsImNvbG9yIiwiZGVzY3JpcHRpb24iLCJsaW5lSGVpZ2h0IiwicHJvZ3Jlc3NTZWN0aW9uIiwicGFkZGluZ0hvcml6b250YWwiLCJwYWRkaW5nQm90dG9tIiwicHJvZ3Jlc3NDb250YWluZXIiLCJwcm9ncmVzc0JhciIsInByb2dyZXNzRmlsbCIsInByb2dyZXNzVGV4dCIsInRleHRBbGlnbiIsImJhZGdlQ29udGFpbmVyIiwiYmFkZ2UiLCJhbGlnblNlbGYiLCJwYWRkaW5nVmVydGljYWwiLCJiYWRnZVRleHQiLCJidXR0b25Db250YWluZXIiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlclRvcENvbG9yIiwic3RhcnRCdXR0b24iLCJidXR0b25UZXh0IiwibGV0dGVyU3BhY2luZyIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJzdHlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy9leGVyY2lzZS1jb21tb24vRXhlcmNpc2VDYXJkL3N0eWxlcy5qc1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNhcmQ6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgYm9yZGVyUmFkaXVzOiAxMixcbiAgICBtYXJnaW5Cb3R0b206IDE1LFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAuLi5QbGF0Zm9ybS5zZWxlY3Qoe1xuICAgICAgaW9zOiB7XG4gICAgICAgIHNoYWRvd0NvbG9yOiAnIzAwMCcsXG4gICAgICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiAyIH0sXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMSxcbiAgICAgICAgc2hhZG93UmFkaXVzOiA0LFxuICAgICAgfSxcbiAgICAgIGFuZHJvaWQ6IHtcbiAgICAgICAgZWxldmF0aW9uOiAzLFxuICAgICAgfSxcbiAgICB9KSxcbiAgfSxcbiAgdG9wU2VjdGlvbjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIHBhZGRpbmc6IDE2LFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICB9LFxuICBpY29uQ29udGFpbmVyOiB7XG4gICAgd2lkdGg6IDUwLFxuICAgIGhlaWdodDogNTAsXG4gICAgYm9yZGVyUmFkaXVzOiAxMixcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgbWFyZ2luUmlnaHQ6IDE1LFxuICB9LFxuICBpY29uOiB7XG4gICAgZm9udFNpemU6IDI0LFxuICB9LFxuICBpbmZvQ29udGFpbmVyOiB7XG4gICAgZmxleDogMSxcbiAgfSxcbiAgdGl0bGU6IHtcbiAgICBmb250U2l6ZTogMTgsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIGNvbG9yOiAnIzFmMjkzNycsXG4gICAgbWFyZ2luQm90dG9tOiA1LFxuICB9LFxuICBkZXNjcmlwdGlvbjoge1xuICAgIGZvbnRTaXplOiAxNCxcbiAgICBjb2xvcjogJyM2YjcyODAnLFxuICAgIGxpbmVIZWlnaHQ6IDIwLFxuICB9LFxuICBwcm9ncmVzc1NlY3Rpb246IHtcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTYsXG4gICAgcGFkZGluZ0JvdHRvbTogMTAsXG4gIH0sXG4gIHByb2dyZXNzQ29udGFpbmVyOiB7XG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgbWFyZ2luQm90dG9tOiA1LFxuICB9LFxuICBwcm9ncmVzc0Jhcjoge1xuICAgIGZsZXg6IDEsXG4gICAgaGVpZ2h0OiA1LFxuICAgIGJhY2tncm91bmRDb2xvcjogJyNlNWU3ZWInLFxuICAgIGJvcmRlclJhZGl1czogMyxcbiAgICBtYXJnaW5SaWdodDogOCxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIH0sXG4gIHByb2dyZXNzRmlsbDoge1xuICAgIGhlaWdodDogJzEwMCUnLFxuICAgIGJvcmRlclJhZGl1czogMyxcbiAgfSxcbiAgcHJvZ3Jlc3NUZXh0OiB7XG4gICAgZm9udFNpemU6IDEyLFxuICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICB3aWR0aDogMzUsXG4gICAgdGV4dEFsaWduOiAncmlnaHQnLFxuICB9LFxuICBiYWRnZUNvbnRhaW5lcjoge1xuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAxNixcbiAgICBwYWRkaW5nQm90dG9tOiAxMCxcbiAgfSxcbiAgYmFkZ2U6IHtcbiAgICBhbGlnblNlbGY6ICdmbGV4LXN0YXJ0JyxcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTAsXG4gICAgcGFkZGluZ1ZlcnRpY2FsOiAzLFxuICAgIGJvcmRlclJhZGl1czogMTAsXG4gIH0sXG4gIGJhZGdlVGV4dDoge1xuICAgIGZvbnRTaXplOiAxMSxcbiAgICBmb250V2VpZ2h0OiAnYm9sZCcsXG4gIH0sXG4gIGJ1dHRvbkNvbnRhaW5lcjoge1xuICAgIGJvcmRlclRvcFdpZHRoOiAxLFxuICAgIGJvcmRlclRvcENvbG9yOiAnI2YzZjRmNicsXG4gIH0sXG4gIHN0YXJ0QnV0dG9uOiB7XG4gICAgcGFkZGluZzogMTIsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICB9LFxuICBidXR0b25UZXh0OiB7XG4gICAgY29sb3I6ICd3aGl0ZScsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIGZvbnRTaXplOiAxNSxcbiAgICBsZXR0ZXJTcGFjaW5nOiAwLjUsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgc3R5bGVzO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQW9ELFNBQUFDLGNBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtJQUFBQyxTQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7SUFBQUMsQ0FBQTtJQUFBQyxlQUFBO0lBQUFmLElBQUE7RUFBQTtFQUFBLElBQUFnQixRQUFBLEdBQUFmLE1BQUEsQ0FBQUUsR0FBQSxNQUFB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