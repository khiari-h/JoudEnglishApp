c091fedb6cc2e129c0d18ae82c46eb6b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _NavigationButtons = _interopRequireDefault(require("../../../../components/exercise-common/NavigationButtons"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_21arux0nd4() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesNavigation\\index.js";
  var hash = "6eaad870815fb0f5d2adbc21e2b087c237890a51";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesNavigation\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "1": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 46,
          column: 4
        }
      },
      "2": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "3": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 65,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 27
          }
        },
        loc: {
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 29
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 25
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 21
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 24
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 28,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 16
          }
        }],
        line: 28
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6eaad870815fb0f5d2adbc21e2b087c237890a51"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_21arux0nd4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21arux0nd4();
cov_21arux0nd4().s[0]++;
var PhrasesNavigation = function PhrasesNavigation(_ref) {
  var onPrevious = _ref.onPrevious,
    onNext = _ref.onNext,
    _ref$disablePrevious = _ref.disablePrevious,
    disablePrevious = _ref$disablePrevious === void 0 ? (cov_21arux0nd4().b[0][0]++, false) : _ref$disablePrevious,
    _ref$disableNext = _ref.disableNext,
    disableNext = _ref$disableNext === void 0 ? (cov_21arux0nd4().b[1][0]++, false) : _ref$disableNext,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_21arux0nd4().b[2][0]++, "#5E60CE") : _ref$levelColor,
    _ref$isLast = _ref.isLast,
    isLast = _ref$isLast === void 0 ? (cov_21arux0nd4().b[3][0]++, false) : _ref$isLast;
  cov_21arux0nd4().f[0]++;
  cov_21arux0nd4().s[1]++;
  return (0, _jsxRuntime.jsx)(_NavigationButtons.default, {
    onNext: onNext,
    onPrevious: onPrevious,
    disablePrevious: disablePrevious,
    disableNext: disableNext,
    primaryColor: levelColor,
    isLast: isLast,
    buttonLabels: {
      next: "Suivant",
      previous: "Précédent",
      finish: "Terminer"
    }
  });
};
cov_21arux0nd4().s[2]++;
PhrasesNavigation.propTypes = {
  onPrevious: _propTypes.default.func.isRequired,
  onNext: _propTypes.default.func.isRequired,
  disablePrevious: _propTypes.default.bool,
  disableNext: _propTypes.default.bool,
  levelColor: _propTypes.default.string,
  isLast: _propTypes.default.bool
};
cov_21arux0nd4().s[3]++;
PhrasesNavigation.defaultProps = {
  disablePrevious: false,
  disableNext: false,
  levelColor: "#5E60CE",
  isLast: false
};
var _default = exports.default = PhrasesNavigation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcHJvcFR5cGVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfTmF2aWdhdGlvbkJ1dHRvbnMiLCJfanN4UnVudGltZSIsImNvdl8yMWFydXgwbmQ0IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIlBocmFzZXNOYXZpZ2F0aW9uIiwiX3JlZiIsIm9uUHJldmlvdXMiLCJvbk5leHQiLCJfcmVmJGRpc2FibGVQcmV2aW91cyIsImRpc2FibGVQcmV2aW91cyIsIl9yZWYkZGlzYWJsZU5leHQiLCJkaXNhYmxlTmV4dCIsIl9yZWYkbGV2ZWxDb2xvciIsImxldmVsQ29sb3IiLCJfcmVmJGlzTGFzdCIsImlzTGFzdCIsImpzeCIsImRlZmF1bHQiLCJwcmltYXJ5Q29sb3IiLCJidXR0b25MYWJlbHMiLCJuZXh0IiwicHJldmlvdXMiLCJmaW5pc2giLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJmdW5jIiwiaXNSZXF1aXJlZCIsImJvb2wiLCJzdHJpbmciLCJkZWZhdWx0UHJvcHMiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIFBocmFzZXNOYXZpZ2F0aW9uL2luZGV4LmpzIC0gVkVSU0lPTiBPUFRJTUlTw4lFIGF2ZWMgUHJvcFR5cGVzXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCBOYXZpZ2F0aW9uQnV0dG9ucyBmcm9tIFwiLi4vLi4vLi4vLi4vY29tcG9uZW50cy9leGVyY2lzZS1jb21tb24vTmF2aWdhdGlvbkJ1dHRvbnNcIjtcclxuXHJcbi8qKlxyXG4gKiDij63vuI8gUGhyYXNlc05hdmlnYXRpb24gLSBWZXJzaW9uIE9wdGltaXPDqWUgYXZlYyBQcm9wVHlwZXNcclxuICogLSBQbHVzIGQnaW5kaWNhdGV1ciBcIjEvMlwiIHJlZG9uZGFudCBcclxuICogLSBVdGlsaXNlIGxlIE5hdmlnYXRpb25CdXR0b25zIG9wdGltaXPDqVxyXG4gKiAtIEludGVyZmFjZSBjb2jDqXJlbnRlIGF2ZWMgVm9jYWJ1bGFyeU5hdmlnYXRpb24gZXQgR3JhbW1hck5hdmlnYXRpb25cclxuICogLSBQcm9wcyBzaW1wbGlmacOpZXNcclxuICogXHJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IG9uUHJldmlvdXMgLSBGb25jdGlvbiBwb3VyIGFsbGVyIGF1IHByw6ljw6lkZW50XHJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IG9uTmV4dCAtIEZvbmN0aW9uIHBvdXIgYWxsZXIgYXUgc3VpdmFudFxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGRpc2FibGVQcmV2aW91cyAtIETDqXNhY3RpdmVyIGxlIGJvdXRvbiBwcsOpY8OpZGVudFxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGRpc2FibGVOZXh0IC0gRMOpc2FjdGl2ZXIgbGUgYm91dG9uIHN1aXZhbnRcclxuICogQHBhcmFtIHtzdHJpbmd9IGxldmVsQ29sb3IgLSBDb3VsZXVyIGR1IG5pdmVhdVxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzTGFzdCAtIFNpIGMnZXN0IGxlIGRlcm5pZXIgw6lsw6ltZW50IChhZmZpY2hlIFwiVGVybWluZXJcIilcclxuICovXHJcbmNvbnN0IFBocmFzZXNOYXZpZ2F0aW9uID0gKHsgXHJcbiAgb25QcmV2aW91cywgXHJcbiAgb25OZXh0LCBcclxuICBkaXNhYmxlUHJldmlvdXMgPSBmYWxzZSwgXHJcbiAgZGlzYWJsZU5leHQgPSBmYWxzZSxcclxuICBsZXZlbENvbG9yID0gXCIjNUU2MENFXCIsXHJcbiAgaXNMYXN0ID0gZmFsc2UsIC8vIE5vdXZlYXUgcHJvcCBzaW1wbGUgcG91ciBcIlRlcm1pbmVyXCJcclxufSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8TmF2aWdhdGlvbkJ1dHRvbnNcclxuICAgICAgb25OZXh0PXtvbk5leHR9XHJcbiAgICAgIG9uUHJldmlvdXM9e29uUHJldmlvdXN9XHJcbiAgICAgIGRpc2FibGVQcmV2aW91cz17ZGlzYWJsZVByZXZpb3VzfVxyXG4gICAgICBkaXNhYmxlTmV4dD17ZGlzYWJsZU5leHR9XHJcbiAgICAgIHByaW1hcnlDb2xvcj17bGV2ZWxDb2xvcn1cclxuICAgICAgaXNMYXN0PXtpc0xhc3R9XHJcbiAgICAgIGJ1dHRvbkxhYmVscz17e1xyXG4gICAgICAgIG5leHQ6IFwiU3VpdmFudFwiLFxyXG4gICAgICAgIHByZXZpb3VzOiBcIlByw6ljw6lkZW50XCIsIFxyXG4gICAgICAgIGZpbmlzaDogXCJUZXJtaW5lclwiXHJcbiAgICAgIH19XHJcbiAgICAgIC8vIPCfp7kgU1VQUFJJTcOJIDogY3VycmVudEluZGV4LCB0b3RhbENvdW50LCBzaG93U2tpcCwgdmFyaWFudCwgd3JhcHBlciBWaWV3XHJcbiAgICAgIC8vIFBsdXMgZGUgXCIxLzJcIiByZWRvbmRhbnQgIVxyXG4gICAgLz5cclxuICApO1xyXG59O1xyXG5cclxuLy8g4pyFIFByb3BUeXBlcyBwb3VyIFBocmFzZXNOYXZpZ2F0aW9uIC0gQ29ycmlnZSB0b3V0ZXMgbGVzIGVycmV1cnNcclxuUGhyYXNlc05hdmlnYXRpb24ucHJvcFR5cGVzID0ge1xyXG4gIG9uUHJldmlvdXM6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXHJcbiAgb25OZXh0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG4gIGRpc2FibGVQcmV2aW91czogUHJvcFR5cGVzLmJvb2wsXHJcbiAgZGlzYWJsZU5leHQ6IFByb3BUeXBlcy5ib29sLFxyXG4gIGxldmVsQ29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgaXNMYXN0OiBQcm9wVHlwZXMuYm9vbCxcclxufTtcclxuXHJcbi8vIOKchSBWYWxldXJzIHBhciBkw6lmYXV0IHBvdXIgUGhyYXNlc05hdmlnYXRpb25cclxuUGhyYXNlc05hdmlnYXRpb24uZGVmYXVsdFByb3BzID0ge1xyXG4gIGRpc2FibGVQcmV2aW91czogZmFsc2UsXHJcbiAgZGlzYWJsZU5leHQ6IGZhbHNlLFxyXG4gIGxldmVsQ29sb3I6IFwiIzVFNjBDRVwiLFxyXG4gIGlzTGFzdDogZmFsc2UsXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQaHJhc2VzTmF2aWdhdGlvbjsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBSUEsSUFBQUEsVUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsa0JBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUF5RixJQUFBRSxXQUFBLEdBQUFGLE9BQUE7QUFBQSxTQUFBRyxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FB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