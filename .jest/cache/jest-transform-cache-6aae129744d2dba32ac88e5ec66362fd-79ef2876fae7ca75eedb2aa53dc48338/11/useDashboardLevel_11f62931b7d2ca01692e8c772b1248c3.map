{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","_constants","ACTIVE_LEVEL_KEY","mapOldToNewLevel","level","mapping","A1","A2","B1","B2","C1","C2","useDashboardLevel","exports","_ref","_LANGUAGE_LEVELS$curr","progressData","progress","_useState","useState","_useState2","_slicedToArray2","default","currentLevel","setCurrentLevel","_useState3","_useState4","isLoaded","setIsLoaded","_useState5","_useState6","levelFoundInStorage","setLevelFoundInStorage","useEffect","loadFromStorage","_ref2","_asyncToGenerator2","savedLevel","AsyncStorage","getItem","LANGUAGE_LEVELS","error","console","apply","arguments","levelFromProgress","mappedLevel","handleChangeActiveLevel","useCallback","_ref3","newLevel","setItem","_x","levelColor","color"],"sources":["useDashboardLevel.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { LANGUAGE_LEVELS } from \"../../../utils/constants\";\r\n\r\nconst ACTIVE_LEVEL_KEY = \"user_active_level\";\r\n\r\n// Fonction de mapping des anciens niveaux (peut être sortie du hook si non dynamique)\r\nconst mapOldToNewLevel = (level) => {\r\n  const mapping = { A1: \"1\", A2: \"2\", B1: \"3\", B2: \"4\", C1: \"5\", C2: \"6\" };\r\n  return mapping[level] || level;\r\n};\r\n\r\nexport const useDashboardLevel = ({ progress: progressData }) => {\r\n  const [currentLevel, setCurrentLevel] = useState(\"1\");\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  \r\n  // État pour savoir si une valeur a été chargée depuis le stockage.\r\n  // null = pas encore vérifié, true = trouvée, false = non trouvée.\r\n  const [levelFoundInStorage, setLevelFoundInStorage] = useState(null);\r\n\r\n  // Effet n°1 : Chargement initial depuis AsyncStorage.\r\n  // Ne s'exécute qu'une seule fois au montage grâce à `[]`.\r\n  useEffect(() => {\r\n    const loadFromStorage = async () => {\r\n      try {\r\n        const savedLevel = await AsyncStorage.getItem(ACTIVE_LEVEL_KEY);\r\n        if (savedLevel && LANGUAGE_LEVELS[savedLevel]) {\r\n          setCurrentLevel(mapOldToNewLevel(savedLevel));\r\n          setLevelFoundInStorage(true);\r\n        } else {\r\n          setLevelFoundInStorage(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur chargement niveau actif:', error);\r\n        setLevelFoundInStorage(false); // En cas d'erreur, on considère que rien n'a été trouvé\r\n      } finally {\r\n        setIsLoaded(true);\r\n      }\r\n    };\r\n\r\n    loadFromStorage();\r\n  }, []); // <-- La dépendance vide est la clé\r\n\r\n  // Effet n°2 : Synchronisation avec le contexte `progress`.\r\n  // S'exécute seulement après le chargement ET si aucun niveau n'a été trouvé en mémoire.\r\n  useEffect(() => {\r\n    // On n'agit que si le chargement est fini et qu'aucun niveau n'a été chargé depuis AsyncStorage\r\n    if (isLoaded && !levelFoundInStorage) {\r\n      const levelFromProgress = progressData?.currentLevel;\r\n      if (levelFromProgress) {\r\n        const mappedLevel = mapOldToNewLevel(levelFromProgress);\r\n        if (LANGUAGE_LEVELS[mappedLevel]) {\r\n          setCurrentLevel(mappedLevel);\r\n        }\r\n      }\r\n    }\r\n  }, [isLoaded, levelFoundInStorage, progressData]);\r\n\r\n  // Le reste du hook est mémorisé avec useCallback pour la performance\r\n  const handleChangeActiveLevel = useCallback(async (newLevel) => {\r\n    if (!LANGUAGE_LEVELS[newLevel]) return;\r\n\r\n    setCurrentLevel(newLevel);\r\n    try {\r\n      await AsyncStorage.setItem(ACTIVE_LEVEL_KEY, newLevel);\r\n      // Si l'utilisateur change de niveau, on considère que la source de vérité est maintenant le stockage\r\n      setLevelFoundInStorage(true); \r\n    } catch (error) {\r\n      console.error('Erreur sauvegarde niveau actif:', error);\r\n    }\r\n  }, []);\r\n\r\n  const levelColor = LANGUAGE_LEVELS[currentLevel]?.color || \"#3B82F6\";\r\n\r\n  return {\r\n    currentLevel,\r\n    handleChangeActiveLevel,\r\n    levelColor,\r\n    isLoaded,\r\n  };\r\n};"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AAEA,IAAMI,gBAAgB,GAAG,mBAAmB;AAG5C,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAK,EAAK;EAClC,IAAMC,OAAO,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAI,CAAC;EACxE,OAAON,OAAO,CAACD,KAAK,CAAC,IAAIA,KAAK;AAChC,CAAC;AAEM,IAAMQ,iBAAiB,GAAAC,OAAA,CAAAD,iBAAA,GAAG,SAApBA,iBAAiBA,CAAAE,IAAA,EAAmC;EAAA,IAAAC,qBAAA;EAAA,IAAnBC,YAAY,GAAAF,IAAA,CAAtBG,QAAQ;EAC1C,IAAAC,SAAA,GAAwC,IAAAC,eAAQ,EAAC,GAAG,CAAC;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAA9CK,YAAY,GAAAH,UAAA;IAAEI,eAAe,GAAAJ,UAAA;EACpC,IAAAK,UAAA,GAAgC,IAAAN,eAAQ,EAAC,KAAK,CAAC;IAAAO,UAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA;IAAxCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAI5B,IAAAG,UAAA,GAAsD,IAAAV,eAAQ,EAAC,IAAI,CAAC;IAAAW,UAAA,OAAAT,eAAA,CAAAC,OAAA,EAAAO,UAAA;IAA7DE,mBAAmB,GAAAD,UAAA;IAAEE,sBAAsB,GAAAF,UAAA;EAIlD,IAAAG,gBAAS,EAAC,YAAM;IACd,IAAMC,eAAe;MAAA,IAAAC,KAAA,OAAAC,kBAAA,CAAAd,OAAA,EAAG,aAAY;QAClC,IAAI;UACF,IAAMe,UAAU,SAASC,qBAAY,CAACC,OAAO,CAACrC,gBAAgB,CAAC;UAC/D,IAAImC,UAAU,IAAIG,0BAAe,CAACH,UAAU,CAAC,EAAE;YAC7Cb,eAAe,CAACrB,gBAAgB,CAACkC,UAAU,CAAC,CAAC;YAC7CL,sBAAsB,CAAC,IAAI,CAAC;UAC9B,CAAC,MAAM;YACLA,sBAAsB,CAAC,KAAK,CAAC;UAC/B;QACF,CAAC,CAAC,OAAOS,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;UACvDT,sBAAsB,CAAC,KAAK,CAAC;QAC/B,CAAC,SAAS;UACRJ,WAAW,CAAC,IAAI,CAAC;QACnB;MACF,CAAC;MAAA,gBAfKM,eAAeA,CAAA;QAAA,OAAAC,KAAA,CAAAQ,KAAA,OAAAC,SAAA;MAAA;IAAA,GAepB;IAEDV,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAIN,IAAAD,gBAAS,EAAC,YAAM;IAEd,IAAIN,QAAQ,IAAI,CAACI,mBAAmB,EAAE;MACpC,IAAMc,iBAAiB,GAAG7B,YAAY,oBAAZA,YAAY,CAAEO,YAAY;MACpD,IAAIsB,iBAAiB,EAAE;QACrB,IAAMC,WAAW,GAAG3C,gBAAgB,CAAC0C,iBAAiB,CAAC;QACvD,IAAIL,0BAAe,CAACM,WAAW,CAAC,EAAE;UAChCtB,eAAe,CAACsB,WAAW,CAAC;QAC9B;MACF;IACF;EACF,CAAC,EAAE,CAACnB,QAAQ,EAAEI,mBAAmB,EAAEf,YAAY,CAAC,CAAC;EAGjD,IAAM+B,uBAAuB,GAAG,IAAAC,kBAAW;IAAA,IAAAC,KAAA,OAAAb,kBAAA,CAAAd,OAAA,EAAC,WAAO4B,QAAQ,EAAK;MAC9D,IAAI,CAACV,0BAAe,CAACU,QAAQ,CAAC,EAAE;MAEhC1B,eAAe,CAAC0B,QAAQ,CAAC;MACzB,IAAI;QACF,MAAMZ,qBAAY,CAACa,OAAO,CAACjD,gBAAgB,EAAEgD,QAAQ,CAAC;QAEtDlB,sBAAsB,CAAC,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAAA,iBAAAW,EAAA;MAAA,OAAAH,KAAA,CAAAN,KAAA,OAAAC,SAAA;IAAA;EAAA,KAAE,EAAE,CAAC;EAEN,IAAMS,UAAU,GAAG,EAAAtC,qBAAA,GAAAyB,0BAAe,CAACjB,YAAY,CAAC,qBAA7BR,qBAAA,CAA+BuC,KAAK,KAAI,SAAS;EAEpE,OAAO;IACL/B,YAAY,EAAZA,YAAY;IACZwB,uBAAuB,EAAvBA,uBAAuB;IACvBM,UAAU,EAAVA,UAAU;IACV1B,QAAQ,EAARA;EACF,CAAC;AACH,CAAC","ignoreList":[]}