{"version":3,"names":["_CategorySelector","_interopRequireDefault","require","_propTypes","_jsxRuntime","cov_sg4vc1wej","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","GrammarRuleSelector","_ref","rules","selectedIndex","onSelectRule","_ref$levelColor","levelColor","formattedRules","map","rule","index","id","title","jsx","default","categories","selectedCategory","undefined","onSelectCategory","primaryColor","propTypes","PropTypes","arrayOf","shape","string","isRequired","number","func","_default","exports"],"sources":["index.js"],"sourcesContent":["import CategorySelector from \"../../../../components/exercise-common/CategorySelector\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Sélecteur de règles grammaticales réutilisant le CategorySelector générique\r\n *\r\n * @param {Array} rules - Liste des règles disponibles\r\n * @param {number} selectedIndex - Index de la règle sélectionnée\r\n * @param {function} onSelectRule - Fonction à appeler lors de la sélection d'une règle\r\n * @param {string} levelColor - Couleur du niveau actuel\r\n */\r\nconst GrammarRuleSelector = ({\r\n  rules,\r\n  selectedIndex,\r\n  onSelectRule,\r\n  levelColor = \"#3b82f6\",\r\n}) => {\r\n  // Transformer les règles pour correspondre au format du CategorySelector\r\n  const formattedRules = rules.map((rule, index) => ({\r\n    id: index,\r\n    name: rule.title,\r\n  }));\r\n\r\n  return (\r\n    <CategorySelector\r\n      categories={formattedRules}\r\n      selectedCategory={selectedIndex === undefined ? 0 : selectedIndex}\r\n      onSelectCategory={onSelectRule}\r\n      primaryColor={levelColor}\r\n    />\r\n  );\r\n};\r\n\r\n// ✅ Définition de PropTypes pour la validation des props\r\nGrammarRuleSelector.propTypes = {\r\n  // 'rules' est manquant dans la validation\r\n  rules: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  // 'selectedIndex' est manquant dans la validation\r\n  selectedIndex: PropTypes.number.isRequired,\r\n  // 'onSelectRule' est manquant dans la validation\r\n  onSelectRule: PropTypes.func.isRequired,\r\n  // 'levelColor' est manquant dans la validation\r\n  levelColor: PropTypes.string,\r\n};\r\n\r\nexport default GrammarRuleSelector;"],"mappings":"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","ignoreList":[]}