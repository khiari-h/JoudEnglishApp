0d89ac47e91d89e34e294800c1dc7c0c
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_idms5h612() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingQuestionCard\\style.js";
  var hash = "d2826ac2519c8a493d64c31bf08f91a4ddf86dca";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingQuestionCard\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 180,
          column: 4
        }
      },
      "1": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 180,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 21
          },
          end: {
            line: 8,
            column: 22
          }
        },
        loc: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 180,
            column: 4
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 8,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 35
          },
          end: {
            line: 8,
            column: 44
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d2826ac2519c8a493d64c31bf08f91a4ddf86dca"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_idms5h612 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_idms5h612();
cov_idms5h612().s[0]++;
var createStyles = function createStyles() {
  var levelColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_idms5h612().b[0][0]++, "#3b82f6");
  cov_idms5h612().f[0]++;
  cov_idms5h612().s[1]++;
  return _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: 16,
      marginVertical: 8
    },
    questionHeader: {
      marginBottom: 16
    },
    optionsContainer: {
      marginTop: 20
    },
    optionsTitle: {
      fontSize: 16,
      fontWeight: "700",
      marginBottom: 16,
      paddingHorizontal: 4,
      textAlign: 'center'
    },
    optionButton: Object.assign({
      backgroundColor: "white",
      borderWidth: 2,
      borderColor: "#e2e8f0",
      borderRadius: 16,
      padding: 18,
      marginBottom: 12,
      position: 'relative',
      overflow: 'hidden'
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: "#000",
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowOpacity: 0.08,
        shadowRadius: 8
      },
      android: {
        elevation: 2
      }
    })),
    optionGradient: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      borderRadius: 14
    },
    optionContent: {
      flexDirection: "row",
      alignItems: "center",
      zIndex: 1
    },
    optionLetterContainer: {
      width: 36,
      height: 36,
      borderRadius: 18,
      justifyContent: 'center',
      alignItems: 'center',
      marginRight: 16,
      borderWidth: 1,
      borderColor: 'rgba(0,0,0,0.05)'
    },
    optionLetter: {
      fontSize: 16,
      fontWeight: "800"
    },
    optionText: {
      fontSize: 16,
      color: "#334155",
      flex: 1,
      lineHeight: 24,
      fontWeight: "500"
    },
    optionSelected: Object.assign({
      backgroundColor: "#eff6ff",
      borderColor: levelColor,
      transform: [{
        scale: 1.02
      }]
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: levelColor,
        shadowOffset: {
          width: 0,
          height: 4
        },
        shadowOpacity: 0.15,
        shadowRadius: 12
      },
      android: {
        elevation: 4
      }
    })),
    optionCorrect: Object.assign({
      backgroundColor: "#f0fdf4",
      borderColor: "#10b981",
      borderWidth: 3
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: "#10b981",
        shadowOffset: {
          width: 0,
          height: 4
        },
        shadowOpacity: 0.2,
        shadowRadius: 12
      },
      android: {
        elevation: 6
      }
    })),
    optionIncorrect: Object.assign({
      backgroundColor: "#fef2f2",
      borderColor: "#ef4444",
      borderWidth: 3
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: "#ef4444",
        shadowOffset: {
          width: 0,
          height: 4
        },
        shadowOpacity: 0.2,
        shadowRadius: 12
      },
      android: {
        elevation: 6
      }
    })),
    optionCorrectText: {
      color: "#10b981",
      fontWeight: "600"
    },
    optionIncorrectText: {
      color: "#ef4444",
      fontWeight: "600"
    },
    confettiContainer: {
      position: 'absolute',
      top: -20,
      left: 0,
      right: 0,
      alignItems: 'center',
      zIndex: 10
    },
    confettiText: {
      fontSize: 24,
      textAlign: 'center',
      letterSpacing: 8
    }
  });
};
var _default = exports.default = createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,