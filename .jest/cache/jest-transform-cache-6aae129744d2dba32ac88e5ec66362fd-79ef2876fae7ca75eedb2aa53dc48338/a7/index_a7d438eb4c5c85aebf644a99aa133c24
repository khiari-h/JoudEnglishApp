e514a252338310f19bdadc353457aaaf
function cov_22ufi2avsy() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingCard\\index.js";
  var hash = "24d496ab1e3e6661a64fca3f0836ec9a140529d9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingCard\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 147,
          column: 1
        }
      },
      "1": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "2": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "3": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "4": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "5": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "6": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "7": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "8": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "9": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 98,
          column: 3
        }
      },
      "10": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "11": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 87,
          column: 8
        }
      },
      "12": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 96,
          column: 8
        }
      },
      "13": {
        start: {
          line: 100,
          column: 2
        },
        end: {
          line: 146,
          column: 4
        }
      },
      "14": {
        start: {
          line: 150,
          column: 0
        },
        end: {
          line: 170,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 22
          }
        },
        loc: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 36,
            column: 33
          }
        },
        loc: {
          start: {
            line: 36,
            column: 38
          },
          end: {
            line: 74,
            column: 3
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 76,
            column: 26
          },
          end: {
            line: 76,
            column: 27
          }
        },
        loc: {
          start: {
            line: 76,
            column: 32
          },
          end: {
            line: 98,
            column: 3
          }
        },
        line: 76
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 38,
            column: 6
          },
          end: {
            line: 46,
            column: 10
          }
        }, {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 56,
            column: 10
          }
        }, {
          start: {
            line: 58,
            column: 6
          },
          end: {
            line: 63,
            column: 10
          }
        }, {
          start: {
            line: 65,
            column: 6
          },
          end: {
            line: 72,
            column: 10
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 35
          }
        }, {
          start: {
            line: 69,
            column: 39
          },
          end: {
            line: 69,
            column: 69
          }
        }],
        line: 69
      },
      "3": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: 88,
            column: 11
          },
          end: {
            line: 97,
            column: 5
          }
        }],
        line: 77
      },
      "4": {
        loc: {
          start: {
            line: 81,
            column: 19
          },
          end: {
            line: 81,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 19
          },
          end: {
            line: 81,
            column: 35
          }
        }, {
          start: {
            line: 81,
            column: 39
          },
          end: {
            line: 81,
            column: 41
          }
        }],
        line: 81
      },
      "5": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 19
          }
        }, {
          start: {
            line: 104,
            column: 23
          },
          end: {
            line: 104,
            column: 43
          }
        }],
        line: 104
      },
      "6": {
        loc: {
          start: {
            line: 107,
            column: 9
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 9
          },
          end: {
            line: 107,
            column: 20
          }
        }, {
          start: {
            line: 108,
            column: 10
          },
          end: {
            line: 110,
            column: 17
          }
        }],
        line: 107
      },
      "7": {
        loc: {
          start: {
            line: 121,
            column: 9
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 9
          },
          end: {
            line: 121,
            column: 22
          }
        }, {
          start: {
            line: 122,
            column: 10
          },
          end: {
            line: 131,
            column: 17
          }
        }],
        line: 121
      },
      "8": {
        loc: {
          start: {
            line: 134,
            column: 9
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 9
          },
          end: {
            line: 134,
            column: 21
          }
        }, {
          start: {
            line: 135,
            column: 10
          },
          end: {
            line: 142,
            column: 17
          }
        }],
        line: 134
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "24d496ab1e3e6661a64fca3f0836ec9a140529d9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_22ufi2avsy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22ufi2avsy();
import { View, Text, ScrollView } from "react-native";
import PropTypes from 'prop-types';
import HeroCard from "../../../../components/ui/HeroCard";
import RevealButton from "../../../../components/ui/RevealButton";
import SpellingInput from "../SpellingInput";
import HomophoneChoices from "../HomophoneChoices";
import SpellingFeedback from "../SpellingFeedback";
import styles from "./style";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_22ufi2avsy().s[0]++;
var SpellingCard = function SpellingCard(_ref) {
  var exercise = _ref.exercise,
    userInput = _ref.userInput,
    showHint = _ref.showHint,
    showFeedback = _ref.showFeedback,
    isCorrect = _ref.isCorrect,
    isCompleted = _ref.isCompleted,
    onChangeText = _ref.onChangeText,
    onToggleHint = _ref.onToggleHint,
    levelColor = _ref.levelColor;
  cov_22ufi2avsy().f[0]++;
  cov_22ufi2avsy().s[1]++;
  if (!exercise) {
    cov_22ufi2avsy().b[0][0]++;
    cov_22ufi2avsy().s[2]++;
    return _jsx(View, {
      style: styles.card,
      children: _jsx(View, {
        style: styles.errorContainer,
        children: _jsx(Text, {
          style: styles.errorText,
          children: "Exercice non trouv\xE9"
        })
      })
    });
  } else {
    cov_22ufi2avsy().b[0][1]++;
  }
  cov_22ufi2avsy().s[3]++;
  var renderExerciseContent = function renderExerciseContent() {
    cov_22ufi2avsy().f[1]++;
    cov_22ufi2avsy().s[4]++;
    switch (exercise.type) {
      case "correction":
        cov_22ufi2avsy().b[1][0]++;
        cov_22ufi2avsy().s[5]++;
        return _jsx(HeroCard, {
          content: exercise.wordToCorrect,
          fontSize: 32,
          levelColor: levelColor,
          showUnderline: true
        });
      case "spelling_rule":
        cov_22ufi2avsy().b[1][1]++;
        cov_22ufi2avsy().s[6]++;
        return _jsx(HeroCard, {
          content: exercise.rule,
          fontSize: 18,
          levelColor: levelColor,
          showUnderline: false
        });
      case "homophones":
        cov_22ufi2avsy().b[1][2]++;
        cov_22ufi2avsy().s[7]++;
        return _jsx(View, {
          style: styles.homophoneHeader,
          children: _jsx(Text, {
            style: styles.instruction,
            children: exercise.instruction
          })
        });
      default:
        cov_22ufi2avsy().b[1][3]++;
        cov_22ufi2avsy().s[8]++;
        return _jsx(View, {
          style: styles.fallbackContainer,
          children: _jsx(Text, {
            style: styles.instruction,
            children: (cov_22ufi2avsy().b[2][0]++, exercise.instruction) || (cov_22ufi2avsy().b[2][1]++, "Instructions non disponibles")
          })
        });
    }
  };
  cov_22ufi2avsy().s[9]++;
  var renderInputArea = function renderInputArea() {
    cov_22ufi2avsy().f[2]++;
    cov_22ufi2avsy().s[10]++;
    if (exercise.type === "homophones") {
      cov_22ufi2avsy().b[3][0]++;
      cov_22ufi2avsy().s[11]++;
      return _jsx(HomophoneChoices, {
        sentence: exercise.sentence,
        choices: (cov_22ufi2avsy().b[4][0]++, exercise.choices) || (cov_22ufi2avsy().b[4][1]++, []),
        selectedChoice: userInput,
        onSelectChoice: onChangeText,
        disabled: showFeedback,
        levelColor: levelColor
      });
    } else {
      cov_22ufi2avsy().b[3][1]++;
      cov_22ufi2avsy().s[12]++;
      return _jsx(SpellingInput, {
        value: userInput,
        onChangeText: onChangeText,
        disabled: showFeedback,
        levelColor: levelColor
      });
    }
  };
  cov_22ufi2avsy().s[13]++;
  return _jsx(ScrollView, {
    style: styles.scrollView,
    showsVerticalScrollIndicator: false,
    children: _jsxs(View, {
      style: [styles.card, (cov_22ufi2avsy().b[5][0]++, isCompleted) && (cov_22ufi2avsy().b[5][1]++, styles.completedCard)],
      children: [(cov_22ufi2avsy().b[6][0]++, isCompleted) && (cov_22ufi2avsy().b[6][1]++, _jsx(View, {
        style: styles.completedBadge,
        children: _jsx(Text, {
          style: styles.completedText,
          children: "\u2713 Compl\xE9t\xE9"
        })
      })), _jsx(View, {
        style: styles.exerciseContent,
        children: renderExerciseContent()
      }), _jsx(View, {
        style: styles.inputSection,
        children: renderInputArea()
      }), (cov_22ufi2avsy().b[7][0]++, exercise.hint) && (cov_22ufi2avsy().b[7][1]++, _jsx(View, {
        style: styles.hintSection,
        children: _jsx(RevealButton, {
          isRevealed: showHint,
          revealedContent: exercise.hint,
          revealText: "Afficher l'indice",
          hideText: "Masquer l'indice",
          onToggle: onToggleHint,
          levelColor: levelColor
        })
      })), (cov_22ufi2avsy().b[8][0]++, showFeedback) && (cov_22ufi2avsy().b[8][1]++, _jsx(View, {
        style: styles.feedbackSection,
        children: _jsx(SpellingFeedback, {
          isCorrect: isCorrect,
          correctAnswer: exercise.correctAnswer,
          explanation: exercise.explanation,
          levelColor: levelColor
        })
      }))]
    })
  });
};
cov_22ufi2avsy().s[14]++;
SpellingCard.propTypes = {
  exercise: PropTypes.shape({
    type: PropTypes.oneOf(['correction', 'spelling_rule', 'homophones']).isRequired,
    wordToCorrect: PropTypes.string,
    rule: PropTypes.string,
    instruction: PropTypes.string,
    sentence: PropTypes.string,
    choices: PropTypes.arrayOf(PropTypes.string),
    hint: PropTypes.string,
    correctAnswer: PropTypes.string,
    explanation: PropTypes.string
  }),
  userInput: PropTypes.string,
  showHint: PropTypes.bool,
  showFeedback: PropTypes.bool,
  isCorrect: PropTypes.bool,
  isCompleted: PropTypes.bool,
  onChangeText: PropTypes.func.isRequired,
  onToggleHint: PropTypes.func.isRequired,
  levelColor: PropTypes.string.isRequired
};
export default SpellingCard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,