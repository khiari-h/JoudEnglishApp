{"version":3,"names":["View","Text","ScrollView","PropTypes","HeroCard","RevealButton","SpellingInput","HomophoneChoices","SpellingFeedback","styles","jsx","_jsx","jsxs","_jsxs","cov_22ufi2avsy","s","SpellingCard","_ref","exercise","userInput","showHint","showFeedback","isCorrect","isCompleted","onChangeText","onToggleHint","levelColor","f","b","style","card","children","errorContainer","errorText","renderExerciseContent","type","content","wordToCorrect","fontSize","showUnderline","rule","homophoneHeader","instruction","fallbackContainer","renderInputArea","sentence","choices","selectedChoice","onSelectChoice","disabled","value","scrollView","showsVerticalScrollIndicator","completedCard","completedBadge","completedText","exerciseContent","inputSection","hint","hintSection","isRevealed","revealedContent","revealText","hideText","onToggle","feedbackSection","correctAnswer","explanation","propTypes","shape","oneOf","isRequired","string","arrayOf","bool","func"],"sources":["index.js"],"sourcesContent":["// SpellingCard/index.js - VERSION PROPRE\r\n\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport HeroCard from \"../../../../components/ui/HeroCard\";\r\nimport RevealButton from \"../../../../components/ui/RevealButton\";\r\nimport SpellingInput from \"../SpellingInput\";\r\nimport HomophoneChoices from \"../HomophoneChoices\";\r\nimport SpellingFeedback from \"../SpellingFeedback\";\r\n\r\nimport styles from \"./style\";\r\n\r\nconst SpellingCard = ({\r\n  exercise,\r\n  userInput,\r\n  showHint,\r\n  showFeedback,\r\n  isCorrect,\r\n  isCompleted,\r\n  onChangeText,\r\n  onToggleHint,\r\n  levelColor,\r\n}) => {\r\n  \r\n  if (!exercise) {\r\n    return (\r\n      <View style={styles.card}>\r\n        <View style={styles.errorContainer}>\r\n          <Text style={styles.errorText}>Exercice non trouvé</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const renderExerciseContent = () => {\r\n    switch (exercise.type) {\r\n      case \"correction\":\r\n        return (\r\n          <HeroCard \r\n            content={exercise.wordToCorrect}\r\n            fontSize={32}\r\n            levelColor={levelColor}\r\n            showUnderline\r\n          />\r\n        );\r\n        \r\n      case \"spelling_rule\":\r\n        return (\r\n          <HeroCard \r\n            content={exercise.rule}\r\n            fontSize={18}\r\n            levelColor={levelColor}\r\n            showUnderline={false}\r\n          />\r\n        );\r\n        \r\n      case \"homophones\":\r\n        return (\r\n          <View style={styles.homophoneHeader}>\r\n            <Text style={styles.instruction}>{exercise.instruction}</Text>\r\n          </View>\r\n        );\r\n        \r\n      default:\r\n        return (\r\n          <View style={styles.fallbackContainer}>\r\n            <Text style={styles.instruction}>\r\n              {exercise.instruction || \"Instructions non disponibles\"}\r\n            </Text>\r\n          </View>\r\n        );\r\n    }\r\n  };\r\n\r\n  const renderInputArea = () => {\r\n    if (exercise.type === \"homophones\") {\r\n      return (\r\n        <HomophoneChoices\r\n          sentence={exercise.sentence}\r\n          choices={exercise.choices || []}\r\n          selectedChoice={userInput}\r\n          onSelectChoice={onChangeText}\r\n          disabled={showFeedback}\r\n          levelColor={levelColor}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <SpellingInput\r\n          value={userInput}\r\n          onChangeText={onChangeText}\r\n          disabled={showFeedback}\r\n          levelColor={levelColor}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\r\n      <View style={[\r\n        styles.card,\r\n        isCompleted && styles.completedCard\r\n      ]}>\r\n        \r\n        {isCompleted && (\r\n          <View style={styles.completedBadge}>\r\n            <Text style={styles.completedText}>✓ Complété</Text>\r\n          </View>\r\n        )}\r\n\r\n        <View style={styles.exerciseContent}>\r\n          {renderExerciseContent()}\r\n        </View>\r\n\r\n        <View style={styles.inputSection}>\r\n          {renderInputArea()}\r\n        </View>\r\n\r\n        {exercise.hint && (\r\n          <View style={styles.hintSection}>\r\n            <RevealButton\r\n              isRevealed={showHint}\r\n              revealedContent={exercise.hint}\r\n              revealText=\"Afficher l'indice\"\r\n              hideText=\"Masquer l'indice\"\r\n              onToggle={onToggleHint}\r\n              levelColor={levelColor}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        {showFeedback && (\r\n          <View style={styles.feedbackSection}>\r\n            <SpellingFeedback\r\n              isCorrect={isCorrect}\r\n              correctAnswer={exercise.correctAnswer}\r\n              explanation={exercise.explanation}\r\n              levelColor={levelColor}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\n// PropTypes pour le composant SpellingCard\r\nSpellingCard.propTypes = {\r\n  exercise: PropTypes.shape({\r\n    type: PropTypes.oneOf(['correction', 'spelling_rule', 'homophones']).isRequired,\r\n    wordToCorrect: PropTypes.string,\r\n    rule: PropTypes.string,\r\n    instruction: PropTypes.string,\r\n    sentence: PropTypes.string,\r\n    choices: PropTypes.arrayOf(PropTypes.string),\r\n    hint: PropTypes.string,\r\n    correctAnswer: PropTypes.string,\r\n    explanation: PropTypes.string,\r\n  }),\r\n  userInput: PropTypes.string,\r\n  showHint: PropTypes.bool,\r\n  showFeedback: PropTypes.bool,\r\n  isCorrect: PropTypes.bool,\r\n  isCompleted: PropTypes.bool,\r\n  onChangeText: PropTypes.func.isRequired,\r\n  onToggleHint: PropTypes.func.isRequired,\r\n  levelColor: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SpellingCard;"],"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","ignoreList":[]}