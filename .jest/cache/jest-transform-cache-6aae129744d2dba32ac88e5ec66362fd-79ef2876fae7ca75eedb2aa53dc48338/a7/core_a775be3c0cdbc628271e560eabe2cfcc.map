{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","configureLayoutAnimationBatch","enumerable","get","_runtimes","createWorkletRuntime","enableLayoutAnimations","_threads","executeOnUIRuntimeSync","getViewProp","initializeSensor","isReanimated3","isConfigured","jsiConfigureProps","_mutables","makeMutable","_shareables","makeShareable","makeShareableCloneRecursive","registerEventHandler","registerSensor","runOnJS","runOnRuntime","runOnUI","setShouldAnimateExitingForTag","_mappers","startMapper","stopMapper","subscribeForKeyboardEvents","unregisterEventHandler","unregisterSensor","unsubscribeFromKeyboardEvents","_NativeReanimated","_PlatformChecker","_initializers","_SensorContainer","_errors","SHOULD_BE_USE_WEB","shouldBeUseWeb","viewTag","propName","component","isFabric","ReanimatedError","Promise","resolve","reject","NativeReanimatedModule","result","substr","getSensorContainer","global","__sensorContainer","SensorContainer","_worklet_256187030140_init_data","code","location","sourceMap","version","eventHandler","eventName","emitterReactTag","arguments","length","undefined","handleAndFlushAnimationFrame","_e","Error","eventTimestamp","event","__frameTimestamp","__flushAnimationFrame","__closure","__workletHash","__initData","__stackDetails","id","_worklet_5321754778769_init_data","options","_options$isStatusBarT","_options$isNavigation","state","height","now","_getAnimationTimestamp","isStatusBarTranslucentAndroid","isNavigationBarTranslucentAndroid","listenerId","sensorType","config","sensorContainer","sensorId","isWeb","initializeUIRuntime","featuresConfig","setByUser","flag","isCallByUser","layoutAnimationsBatch","shouldAnimate","uiProps","nativeProps","configureProps"],"sources":["core.ts"],"sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isWeb, shouldBeUseWeb, isFabric } from './PlatformChecker';\nimport type {\n  AnimatedKeyboardOptions,\n  SensorConfig,\n  SensorType,\n  SharedValue,\n  Value3D,\n  ValueRotation,\n} from './commonTypes';\nimport { makeShareableCloneRecursive } from './shareables';\nimport { initializeUIRuntime } from './initializers';\nimport type { LayoutAnimationBatchItem } from './layoutReanimation/animationBuilder/commonTypes';\nimport { SensorContainer } from './SensorContainer';\nimport { ReanimatedError } from './errors';\n\nexport { startMapper, stopMapper } from './mappers';\nexport { runOnJS, runOnUI, executeOnUIRuntimeSync } from './threads';\nexport { createWorkletRuntime, runOnRuntime } from './runtimes';\nexport type { WorkletRuntime } from './runtimes';\nexport { makeShareable, makeShareableCloneRecursive } from './shareables';\nexport { makeMutable } from './mutables';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\n/** @returns `true` in Reanimated 3, doesn't exist in Reanimated 2 or 1 */\nexport const isReanimated3 = () => true;\n\n// Superseded by check in `/src/threads.ts`.\n// Used by `react-navigation` to detect if using Reanimated 2 or 3.\n/**\n * @deprecated This function was superseded by other checks. We keep it here for\n *   backward compatibility reasons. If you need to check if you are using\n *   Reanimated 3 or Reanimated 2 please use `isReanimated3` function instead.\n * @returns `true` in Reanimated 3, doesn't exist in Reanimated 2\n */\nexport const isConfigured = isReanimated3;\n\nexport function getViewProp<T>(\n  viewTag: number,\n  propName: string,\n  component?: React.Component // required on Fabric\n): Promise<T> {\n  if (isFabric() && !component) {\n    throw new ReanimatedError(\n      'Function `getViewProp` requires a component to be passed as an argument on Fabric.'\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  return new Promise((resolve, reject) => {\n    return NativeReanimatedModule.getViewProp(\n      viewTag,\n      propName,\n      component,\n      (result: T) => {\n        if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n          reject(result);\n        } else {\n          resolve(result);\n        }\n      }\n    );\n  });\n}\n\nfunction getSensorContainer(): SensorContainer {\n  if (!global.__sensorContainer) {\n    global.__sensorContainer = new SensorContainer();\n  }\n  return global.__sensorContainer;\n}\n\nexport function registerEventHandler<T>(\n  eventHandler: (event: T) => void,\n  eventName: string,\n  emitterReactTag = -1\n): number {\n  function handleAndFlushAnimationFrame(eventTimestamp: number, event: T) {\n    'worklet';\n    global.__frameTimestamp = eventTimestamp;\n    eventHandler(event);\n    global.__flushAnimationFrame(eventTimestamp);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.registerEventHandler(\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame),\n    eventName,\n    emitterReactTag\n  );\n}\n\nexport function unregisterEventHandler(id: number): void {\n  return NativeReanimatedModule.unregisterEventHandler(id);\n}\n\nexport function subscribeForKeyboardEvents(\n  eventHandler: (state: number, height: number) => void,\n  options: AnimatedKeyboardOptions\n): number {\n  // TODO: this should really go with the same code path as other events, that is\n  // via registerEventHandler. For now we are copying the code from there.\n  function handleAndFlushAnimationFrame(state: number, height: number) {\n    'worklet';\n    const now = global._getAnimationTimestamp();\n    global.__frameTimestamp = now;\n    eventHandler(state, height);\n    global.__flushAnimationFrame(now);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.subscribeForKeyboardEvents(\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame),\n    options.isStatusBarTranslucentAndroid ?? false,\n    options.isNavigationBarTranslucentAndroid ?? false\n  );\n}\n\nexport function unsubscribeFromKeyboardEvents(listenerId: number): void {\n  return NativeReanimatedModule.unsubscribeFromKeyboardEvents(listenerId);\n}\n\nexport function registerSensor(\n  sensorType: SensorType,\n  config: SensorConfig,\n  eventHandler: (\n    data: Value3D | ValueRotation,\n    orientationDegrees: number\n  ) => void\n): number {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.registerSensor(\n    sensorType,\n    config,\n    makeShareableCloneRecursive(eventHandler)\n  );\n}\n\nexport function initializeSensor(\n  sensorType: SensorType,\n  config: SensorConfig\n): SharedValue<Value3D | ValueRotation> {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.initializeSensor(sensorType, config);\n}\n\nexport function unregisterSensor(sensorId: number): void {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.unregisterSensor(sensorId);\n}\n\nif (!isWeb()) {\n  initializeUIRuntime();\n}\n\ntype FeaturesConfig = {\n  enableLayoutAnimations: boolean;\n  setByUser: boolean;\n};\n\nlet featuresConfig: FeaturesConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false,\n};\n\nexport function enableLayoutAnimations(\n  flag: boolean,\n  isCallByUser = true\n): void {\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true,\n    };\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  } else if (\n    !featuresConfig.setByUser &&\n    featuresConfig.enableLayoutAnimations !== flag\n  ) {\n    featuresConfig.enableLayoutAnimations = flag;\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  }\n}\n\nexport function configureLayoutAnimationBatch(\n  layoutAnimationsBatch: LayoutAnimationBatchItem[]\n): void {\n  NativeReanimatedModule.configureLayoutAnimationBatch(layoutAnimationsBatch);\n}\n\nexport function setShouldAnimateExitingForTag(\n  viewTag: number | HTMLElement,\n  shouldAnimate: boolean\n) {\n  NativeReanimatedModule.setShouldAnimateExitingForTag(\n    viewTag as number,\n    shouldAnimate\n  );\n}\n\nexport function jsiConfigureProps(\n  uiProps: string[],\n  nativeProps: string[]\n): void {\n  if (!SHOULD_BE_USE_WEB) {\n    NativeReanimatedModule.configureProps(uiProps, nativeProps);\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,6BAAA,GAAAA,6BAAA;AAAAJ,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAG,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAC,SAAA,CAAAC,oBAAA;EAAA;AAAA;AAAAN,OAAA,CAAAO,sBAAA,GAAAA,sBAAA;AAAAT,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAG,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAI,QAAA,CAAAC,sBAAA;EAAA;AAAA;AAAAT,OAAA,CAAAU,WAAA,GAAAA,WAAA;AAAAV,OAAA,CAAAW,gBAAA,GAAAA,gBAAA;AAAAX,OAAA,CAAAY,aAAA,GAAAZ,OAAA,CAAAa,YAAA;AAAAb,OAAA,CAAAc,iBAAA,GAAAA,iBAAA;AAAAhB,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAG,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAW,SAAA,CAAAC,WAAA;EAAA;AAAA;AAAAlB,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAG,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAa,WAAA,CAAAC,aAAA;EAAA;AAAA;AAAApB,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAG,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAa,WAAA,CAAAE,2BAAA;EAAA;AAAA;AAAAnB,OAAA,CAAAoB,oBAAA,GAAAA,oBAAA;AAAApB,OAAA,CAAAqB,cAAA,GAAAA,cAAA;AAAAvB,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAG,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAI,QAAA,CAAAc,OAAA;EAAA;AAAA;AAAAxB,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAG,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAC,SAAA,CAAAkB,YAAA;EAAA;AAAA;AAAAzB,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAG,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAI,QAAA,CAAAgB,OAAA;EAAA;AAAA;AAAAxB,OAAA,CAAAyB,6BAAA,GAAAA,6BAAA;AAAA3B,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAG,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAsB,QAAA,CAAAC,WAAA;EAAA;AAAA;AAAA7B,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAG,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAsB,QAAA,CAAAE,UAAA;EAAA;AAAA;AAAA5B,OAAA,CAAA6B,0BAAA,GAAAA,0BAAA;AAAA7B,OAAA,CAAA8B,sBAAA,GAAAA,sBAAA;AAAA9B,OAAA,CAAA+B,gBAAA,GAAAA,gBAAA;AAAA/B,OAAA,CAAAgC,6BAAA,GAAAA,6BAAA;AACb,IAAAC,iBAAA,GAAArC,sBAAA,CAAAC,OAAA;AACA,IAAAqC,gBAAA,GAAArC,OAAA;AASA,IAAAoB,WAAA,GAAApB,OAAA;AACA,IAAAsC,aAAA,GAAAtC,OAAA;AAEA,IAAAuC,gBAAA,GAAAvC,OAAA;AACA,IAAAwC,OAAA,GAAAxC,OAAA;AAEA,IAAA6B,QAAA,GAAA7B,OAAA;AACA,IAAAW,QAAA,GAAAX,OAAA;AACA,IAAAQ,SAAA,GAAAR,OAAA;AAGA,IAAAkB,SAAA,GAAAlB,OAAA;AAEA,IAAMyC,iBAAiB,GAAG,IAAAC,+BAAc,EAAC,CAAC;AAGnC,IAAM3B,aAAa,GAAAZ,OAAA,CAAAY,aAAA,GAAG,SAAhBA,aAAaA,CAAA;EAAA,OAAS,IAAI;AAAA;AAUhC,IAAMC,YAAY,GAAAb,OAAA,CAAAa,YAAA,GAAGD,aAAa;AAElC,SAASF,WAAWA,CACzB8B,OAAe,EACfC,QAAgB,EAChBC,SAA2B,EACf;EACZ,IAAI,IAAAC,yBAAQ,EAAC,CAAC,IAAI,CAACD,SAAS,EAAE;IAC5B,MAAM,IAAIE,uBAAe,CACvB,oFACF,CAAC;EACH;EAGA,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;IACtC,OAAOC,yBAAsB,CAACtC,WAAW,CACvC8B,OAAO,EACPC,QAAQ,EACRC,SAAS,EACT,UAACO,MAAS,EAAK;MACb,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,QAAQ,EAAE;QAClEH,MAAM,CAACE,MAAM,CAAC;MAChB,CAAC,MAAM;QACLH,OAAO,CAACG,MAAM,CAAC;MACjB;IACF,CACF,CAAC;EACH,CAAC,CAAC;AACJ;AAEA,SAASE,kBAAkBA,CAAA,EAAoB;EAC7C,IAAI,CAACC,MAAM,CAACC,iBAAiB,EAAE;IAC7BD,MAAM,CAACC,iBAAiB,GAAG,IAAIC,gCAAe,CAAC,CAAC;EAClD;EACA,OAAOF,MAAM,CAACC,iBAAiB;AACjC;AAAC,IAAAE,+BAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAEM,SAASvC,oBAAoBA,CAClCwC,YAAgC,EAChCC,SAAiB,EAET;EAAA,IADRC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAAG,4BAAA,GAEpB;IAAA,IAAAC,EAAA,QAAAf,MAAA,CAAAgB,KAAA;IAAA,IAAAF,4BAAA,YAAAA,6BAAsCG,cAAsB,EAAEC,KAAQ,EAAE;MAEtElB,MAAM,CAACmB,gBAAgB,GAAGF,cAAc;MACxCT,YAAY,CAACU,KAAK,CAAC;MACnBlB,MAAM,CAACoB,qBAAqB,CAACH,cAAc,CAAC;MAC5CjB,MAAM,CAACmB,gBAAgB,GAAGN,SAAS;IACrC,CAAC;IAAAC,4BAAA,CAAAO,SAAA;MAAAb,YAAA,EAHCA;IAAY;IAAAM,4BAAA,CAAAQ,aAAA;IAAAR,4BAAA,CAAAS,UAAA,GAAApB,+BAAA;IAAAW,4BAAA,CAAAU,cAAA,GAAAT,EAAA;IAAA,OAAAD,4BAAA;EAAA,CAHd;EAOA,OAAOlB,yBAAsB,CAAC5B,oBAAoB,CAChD,IAAAD,uCAA2B,EAAC+C,4BAA4B,CAAC,EACzDL,SAAS,EACTC,eACF,CAAC;AACH;AAEO,SAAShC,sBAAsBA,CAAC+C,EAAU,EAAQ;EACvD,OAAO7B,yBAAsB,CAAClB,sBAAsB,CAAC+C,EAAE,CAAC;AAC1D;AAAC,IAAAC,gCAAA;EAAAtB,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAEM,SAAS9B,0BAA0BA,CACxC+B,YAAqD,EACrDmB,OAAgC,EACxB;EAAA,IAAAC,qBAAA,EAAAC,qBAAA;EAAA,IAAAf,4BAAA,GAGR;IAAA,IAAAC,EAAA,QAAAf,MAAA,CAAAgB,KAAA;IAAA,IAAAF,4BAAA,YAAAA,6BAAsCgB,KAAa,EAAEC,MAAc,EAAE;MAEnE,IAAMC,GAAG,GAAGhC,MAAM,CAACiC,sBAAsB,CAAC,CAAC;MAC3CjC,MAAM,CAACmB,gBAAgB,GAAGa,GAAG;MAC7BxB,YAAY,CAACsB,KAAK,EAAEC,MAAM,CAAC;MAC3B/B,MAAM,CAACoB,qBAAqB,CAACY,GAAG,CAAC;MACjChC,MAAM,CAACmB,gBAAgB,GAAGN,SAAS;IACrC,CAAC;IAAAC,4BAAA,CAAAO,SAAA;MAAAb,YAAA,EAHCA;IAAY;IAAAM,4BAAA,CAAAQ,aAAA;IAAAR,4BAAA,CAAAS,UAAA,GAAAG,gCAAA;IAAAZ,4BAAA,CAAAU,cAAA,GAAAT,EAAA;IAAA,OAAAD,4BAAA;EAAA,CAJd;EAQA,OAAOlB,yBAAsB,CAACnB,0BAA0B,CACtD,IAAAV,uCAA2B,EAAC+C,4BAA4B,CAAC,GAAAc,qBAAA,GACzDD,OAAO,CAACO,6BAA6B,YAAAN,qBAAA,GAAI,KAAK,GAAAC,qBAAA,GAC9CF,OAAO,CAACQ,iCAAiC,YAAAN,qBAAA,GAAI,KAC/C,CAAC;AACH;AAEO,SAASjD,6BAA6BA,CAACwD,UAAkB,EAAQ;EACtE,OAAOxC,yBAAsB,CAAChB,6BAA6B,CAACwD,UAAU,CAAC;AACzE;AAEO,SAASnE,cAAcA,CAC5BoE,UAAsB,EACtBC,MAAoB,EACpB9B,YAGS,EACD;EACR,IAAM+B,eAAe,GAAGxC,kBAAkB,CAAC,CAAC;EAC5C,OAAOwC,eAAe,CAACtE,cAAc,CACnCoE,UAAU,EACVC,MAAM,EACN,IAAAvE,uCAA2B,EAACyC,YAAY,CAC1C,CAAC;AACH;AAEO,SAASjD,gBAAgBA,CAC9B8E,UAAsB,EACtBC,MAAoB,EACkB;EACtC,IAAMC,eAAe,GAAGxC,kBAAkB,CAAC,CAAC;EAC5C,OAAOwC,eAAe,CAAChF,gBAAgB,CAAC8E,UAAU,EAAEC,MAAM,CAAC;AAC7D;AAEO,SAAS3D,gBAAgBA,CAAC6D,QAAgB,EAAQ;EACvD,IAAMD,eAAe,GAAGxC,kBAAkB,CAAC,CAAC;EAC5C,OAAOwC,eAAe,CAAC5D,gBAAgB,CAAC6D,QAAQ,CAAC;AACnD;AAEA,IAAI,CAAC,IAAAC,sBAAK,EAAC,CAAC,EAAE;EACZ,IAAAC,iCAAmB,EAAC,CAAC;AACvB;AAOA,IAAIC,cAA8B,GAAG;EACnCxF,sBAAsB,EAAE,KAAK;EAC7ByF,SAAS,EAAE;AACb,CAAC;AAEM,SAASzF,sBAAsBA,CACpC0F,IAAa,EAEP;EAAA,IADNC,YAAY,GAAAnC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAEnB,IAAImC,YAAY,EAAE;IAChBH,cAAc,GAAG;MACfxF,sBAAsB,EAAE0F,IAAI;MAC5BD,SAAS,EAAE;IACb,CAAC;IACDhD,yBAAsB,CAACzC,sBAAsB,CAAC0F,IAAI,CAAC;EACrD,CAAC,MAAM,IACL,CAACF,cAAc,CAACC,SAAS,IACzBD,cAAc,CAACxF,sBAAsB,KAAK0F,IAAI,EAC9C;IACAF,cAAc,CAACxF,sBAAsB,GAAG0F,IAAI;IAC5CjD,yBAAsB,CAACzC,sBAAsB,CAAC0F,IAAI,CAAC;EACrD;AACF;AAEO,SAAS/F,6BAA6BA,CAC3CiG,qBAAiD,EAC3C;EACNnD,yBAAsB,CAAC9C,6BAA6B,CAACiG,qBAAqB,CAAC;AAC7E;AAEO,SAAS1E,6BAA6BA,CAC3Ce,OAA6B,EAC7B4D,aAAsB,EACtB;EACApD,yBAAsB,CAACvB,6BAA6B,CAClDe,OAAO,EACP4D,aACF,CAAC;AACH;AAEO,SAAStF,iBAAiBA,CAC/BuF,OAAiB,EACjBC,WAAqB,EACf;EACN,IAAI,CAAChE,iBAAiB,EAAE;IACtBU,yBAAsB,CAACuD,cAAc,CAACF,OAAO,EAAEC,WAAW,CAAC;EAC7D;AACF","ignoreList":[]}