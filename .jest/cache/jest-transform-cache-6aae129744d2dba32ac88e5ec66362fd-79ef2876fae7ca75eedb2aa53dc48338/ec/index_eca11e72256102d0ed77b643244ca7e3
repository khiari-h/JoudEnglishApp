c151737e9f775f0418c2e59cea2142cd
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _ExerciseHeader = _interopRequireDefault(require("../../../../components/exercise-common/ExerciseHeader"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_dc1w1on02() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarHeader\\index.js";
  var hash = "a3e096305a63e060c5aa0070f9c228ded90e4643";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarHeader\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "1": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 14,
          column: 4
        }
      },
      "2": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 23,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 22
          },
          end: {
            line: 5,
            column: 23
          }
        },
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a3e096305a63e060c5aa0070f9c228ded90e4643"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_dc1w1on02 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_dc1w1on02();
cov_dc1w1on02().s[0]++;
var GrammarHeader = function GrammarHeader(_ref) {
  var level = _ref.level,
    onBackPress = _ref.onBackPress;
  cov_dc1w1on02().f[0]++;
  cov_dc1w1on02().s[1]++;
  return (0, _jsxRuntime.jsx)(_ExerciseHeader.default, {
    title: "Grammaire",
    level: level,
    exerciseType: "grammar",
    onClose: onBackPress,
    backIcon: "arrow-back"
  });
};
cov_dc1w1on02().s[2]++;
GrammarHeader.propTypes = {
  onBackPress: _propTypes.default.func.isRequired,
  level: _propTypes.default.string.isRequired
};
var _default = exports.default = GrammarHeader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfRXhlcmNpc2VIZWFkZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9wcm9wVHlwZXMiLCJfanN4UnVudGltZSIsImNvdl9kYzF3MW9uMDIiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJHcmFtbWFySGVhZGVyIiwiX3JlZiIsImxldmVsIiwib25CYWNrUHJlc3MiLCJqc3giLCJkZWZhdWx0IiwidGl0bGUiLCJleGVyY2lzZVR5cGUiLCJvbkNsb3NlIiwiYmFja0ljb24iLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJmdW5jIiwiaXNSZXF1aXJlZCIsInN0cmluZyIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDMuIEdyYW1tYXJIZWFkZXIgLSBNSVMgw4AgSk9VUlxyXG5pbXBvcnQgRXhlcmNpc2VIZWFkZXIgZnJvbSBcIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvZXhlcmNpc2UtY29tbW9uL0V4ZXJjaXNlSGVhZGVyXCI7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5jb25zdCBHcmFtbWFySGVhZGVyID0gKHsgbGV2ZWwsIG9uQmFja1ByZXNzIH0pID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPEV4ZXJjaXNlSGVhZGVyXHJcbiAgICAgIHRpdGxlPVwiR3JhbW1haXJlXCJcclxuICAgICAgbGV2ZWw9e2xldmVsfVxyXG4gICAgICBleGVyY2lzZVR5cGU9XCJncmFtbWFyXCIgLy8g4pyFIE5PVVZFQVVcclxuICAgICAgb25DbG9zZT17b25CYWNrUHJlc3N9XHJcbiAgICAgIGJhY2tJY29uPVwiYXJyb3ctYmFja1wiXHJcbiAgICAvPlxyXG4gICk7XHJcbn07XHJcblxyXG4vLyDinIUgRMOpZmluaXRpb24gZGUgUHJvcFR5cGVzIHBvdXIgbGEgdmFsaWRhdGlvbiBkZXMgcHJvcHNcclxuR3JhbW1hckhlYWRlci5wcm9wVHlwZXMgPSB7XHJcbiAgLy8gJ29uQmFja1ByZXNzJyBlc3QgbWFucXVhbnQgZGFucyBsYSB2YWxpZGF0aW9uXHJcbiAgb25CYWNrUHJlc3M6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXHJcbiAgLy8gJ2xldmVsJyBlc3QgbWFucXVhbnQgZGFucyBsYSB2YWxpZGF0aW9uXHJcbiAgbGV2ZWw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEdyYW1tYXJIZWFkZXI7Il0sIm1hcHBpbmdzIjoiOzs7OztBQUNBLElBQUFBLGVBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFVBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUFtQyxJQUFBRSxXQUFBLEdBQUFGLE9BQUE7QUFBQSxTQUFBRyxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtJQUFBQyxlQUFBO0lBQUFsQixJQUFBO0VBQUE7RUFBQSxJQUFBbUIsUUFBQSxHQUFBbEIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFnQixRQUFBLENBQUFwQixJQUFBLEtBQUFvQixRQUFBLENBQUFwQixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBbUIsUUFBQSxDQUFBcEIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBZ0IsY0FBQSxHQUFBRCxRQUFBLENBQUFwQixJQUFBO0VBQUE7SUFBQUQsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQXNCLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUF0QixhQUFBO0FBQUFBLGFBQUEsR0FBQWlCLENBQUE7QUFFbkMsSUFBTU0sYUFBYSxHQUFHLFNBQWhCQSxhQUFhQSxDQUFBQyxJQUFBLEVBQStCO0VBQUEsSUFBekJDLEtBQUssR0FBQUQsSUFBQSxDQUFMQyxLQUFLO0lBQUVDLFdBQVcsR0FBQUYsSUFBQSxDQUFYRSxXQUFXO0VBQUExQixhQUFBLEdBQUFrQixDQUFBO0VBQUFsQixhQUFBLEdBQUFpQixDQUFBO0VBQ3pDLE9BQ0UsSUFBQWxCLFdBQUEsQ0FBQTRCLEdBQUEsRUFBQ2hDLGVBQUEsQ0FBQWlDLE9BQWM7SUFDYkMsS0FBSyxFQUFDLFdBQVc7SUFDakJKLEtBQUssRUFBRUEsS0FBTTtJQUNiSyxZQUFZLEVBQUMsU0FBUztJQUN0QkMsT0FBTyxFQUFFTCxXQUFZO0lBQ3JCTSxRQUFRLEVBQUM7RUFBWSxDQUN0QixDQUFDO0FBRU4sQ0FBQztBQUFDaEMsYUFBQSxHQUFBaUIsQ0FBQTtBQUdGTSxhQUFhLENBQUNVLFNBQVMsR0FBRztFQUV4QlAsV0FBVyxFQUFFUSxrQkFBUyxDQUFDQyxJQUFJLENBQUNDLFVBQVU7RUFFdENYLEtBQUssRUFBRVMsa0JBQVMsQ0FBQ0csTUFBTSxDQUFDRDtBQUMxQixDQUFDO0FBQUMsSUFBQUUsUUFBQSxHQUFBQyxPQUFBLENBQUFYLE9BQUEsR0FFYUwsYUFBYSIsImlnbm9yZUxpc3QiOltdfQ==