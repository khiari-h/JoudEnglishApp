{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ButtonLabel","_jsxRuntime","mockSizeStyles","text","fontSize","mockVariantStyles","color","describe","it","_render","render","jsx","default","title","sizeStyles","variantStyles","uppercase","getByText","expect","toBeTruthy","_render2","_render3","textComponent","props","style","toContain","customTextStyle","fontWeight","_render4","textStyle"],"sources":["ButtonLabel.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport ButtonLabel from '../../../../src/components/ui/Button/ButtonLabel';\r\n\r\n// Mocks des styles pour simplifier les assertions\r\nconst mockSizeStyles = { text: { fontSize: 16 } };\r\nconst mockVariantStyles = { text: { color: 'blue' } };\r\n\r\ndescribe('ButtonLabel', () => {\r\n  it('devrait rendre le titre en majuscules si la prop uppercase est vraie', () => {\r\n    const { getByText } = render(\r\n      <ButtonLabel\r\n        title=\"mon bouton\"\r\n        sizeStyles={mockSizeStyles}\r\n        variantStyles={mockVariantStyles}\r\n        uppercase={true}\r\n      />\r\n    );\r\n    expect(getByText('MON BOUTON')).toBeTruthy();\r\n  });\r\n\r\n  it('ne devrait pas rendre le titre en majuscules si la prop uppercase est fausse', () => {\r\n    const { getByText } = render(\r\n      <ButtonLabel\r\n        title=\"mon bouton\"\r\n        sizeStyles={mockSizeStyles}\r\n        variantStyles={mockVariantStyles}\r\n        uppercase={false}\r\n      />\r\n    );\r\n    expect(getByText('mon bouton')).toBeTruthy();\r\n  });\r\n\r\n  it('devrait appliquer le style de texte correct', () => {\r\n    const { getByText } = render(\r\n      <ButtonLabel\r\n        title=\"Titre\"\r\n        sizeStyles={mockSizeStyles}\r\n        variantStyles={mockVariantStyles}\r\n        uppercase={false}\r\n      />\r\n    );\r\n    const textComponent = getByText('Titre');\r\n    expect(textComponent.props.style).toContain(mockSizeStyles.text);\r\n    expect(textComponent.props.style).toContain(mockVariantStyles.text);\r\n  });\r\n  \r\n  it('devrait appliquer un style de texte personnalisÃ© si fourni', () => {\r\n    const customTextStyle = { fontWeight: 'bold' };\r\n    const { getByText } = render(\r\n      <ButtonLabel\r\n        title=\"Titre\"\r\n        sizeStyles={mockSizeStyles}\r\n        variantStyles={mockVariantStyles}\r\n        textStyle={customTextStyle}\r\n      />\r\n    );\r\n    const textComponent = getByText('Titre');\r\n    expect(textComponent.props.style).toContain(customTextStyle);\r\n  });\r\n});"],"mappings":";AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAH,sBAAA,CAAAC,OAAA;AAA2E,IAAAG,WAAA,GAAAH,OAAA;AAG3E,IAAMI,cAAc,GAAG;EAAEC,IAAI,EAAE;IAAEC,QAAQ,EAAE;EAAG;AAAE,CAAC;AACjD,IAAMC,iBAAiB,GAAG;EAAEF,IAAI,EAAE;IAAEG,KAAK,EAAE;EAAO;AAAE,CAAC;AAErDC,QAAQ,CAAC,aAAa,EAAE,YAAM;EAC5BC,EAAE,CAAC,sEAAsE,EAAE,YAAM;IAC/E,IAAAC,OAAA,GAAsB,IAAAC,mBAAM,EAC1B,IAAAT,WAAA,CAAAU,GAAA,EAACX,YAAA,CAAAY,OAAW;QACVC,KAAK,EAAC,YAAY;QAClBC,UAAU,EAAEZ,cAAe;QAC3Ba,aAAa,EAAEV,iBAAkB;QACjCW,SAAS,EAAE;MAAK,CACjB,CACH,CAAC;MAPOC,SAAS,GAAAR,OAAA,CAATQ,SAAS;IAQjBC,MAAM,CAACD,SAAS,CAAC,YAAY,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC9C,CAAC,CAAC;EAEFX,EAAE,CAAC,8EAA8E,EAAE,YAAM;IACvF,IAAAY,QAAA,GAAsB,IAAAV,mBAAM,EAC1B,IAAAT,WAAA,CAAAU,GAAA,EAACX,YAAA,CAAAY,OAAW;QACVC,KAAK,EAAC,YAAY;QAClBC,UAAU,EAAEZ,cAAe;QAC3Ba,aAAa,EAAEV,iBAAkB;QACjCW,SAAS,EAAE;MAAM,CAClB,CACH,CAAC;MAPOC,SAAS,GAAAG,QAAA,CAATH,SAAS;IAQjBC,MAAM,CAACD,SAAS,CAAC,YAAY,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC9C,CAAC,CAAC;EAEFX,EAAE,CAAC,6CAA6C,EAAE,YAAM;IACtD,IAAAa,QAAA,GAAsB,IAAAX,mBAAM,EAC1B,IAAAT,WAAA,CAAAU,GAAA,EAACX,YAAA,CAAAY,OAAW;QACVC,KAAK,EAAC,OAAO;QACbC,UAAU,EAAEZ,cAAe;QAC3Ba,aAAa,EAAEV,iBAAkB;QACjCW,SAAS,EAAE;MAAM,CAClB,CACH,CAAC;MAPOC,SAAS,GAAAI,QAAA,CAATJ,SAAS;IAQjB,IAAMK,aAAa,GAAGL,SAAS,CAAC,OAAO,CAAC;IACxCC,MAAM,CAACI,aAAa,CAACC,KAAK,CAACC,KAAK,CAAC,CAACC,SAAS,CAACvB,cAAc,CAACC,IAAI,CAAC;IAChEe,MAAM,CAACI,aAAa,CAACC,KAAK,CAACC,KAAK,CAAC,CAACC,SAAS,CAACpB,iBAAiB,CAACF,IAAI,CAAC;EACrE,CAAC,CAAC;EAEFK,EAAE,CAAC,4DAA4D,EAAE,YAAM;IACrE,IAAMkB,eAAe,GAAG;MAAEC,UAAU,EAAE;IAAO,CAAC;IAC9C,IAAAC,QAAA,GAAsB,IAAAlB,mBAAM,EAC1B,IAAAT,WAAA,CAAAU,GAAA,EAACX,YAAA,CAAAY,OAAW;QACVC,KAAK,EAAC,OAAO;QACbC,UAAU,EAAEZ,cAAe;QAC3Ba,aAAa,EAAEV,iBAAkB;QACjCwB,SAAS,EAAEH;MAAgB,CAC5B,CACH,CAAC;MAPOT,SAAS,GAAAW,QAAA,CAATX,SAAS;IAQjB,IAAMK,aAAa,GAAGL,SAAS,CAAC,OAAO,CAAC;IACxCC,MAAM,CAACI,aAAa,CAACC,KAAK,CAACC,KAAK,CAAC,CAACC,SAAS,CAACC,eAAe,CAAC;EAC9D,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}