{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ExerciseCard","_jsxRuntime","describe","baseProps","title","description","icon","color","onPress","jest","fn","afterEach","clearAllMocks","it","_render","render","jsx","default","Object","assign","getByText","expect","toBeTruthy","_render2","progress","getByTestId","queryByText","toHaveStyle","width","toBeNull","_render3","isNew","queryByTestId","_render4","_render5","fireEvent","press","toHaveBeenCalledTimes"],"sources":["ExerciseCard.test.js"],"sourcesContent":["import React from \"react\";\r\nimport { render, fireEvent } from \"@testing-library/react-native\";\r\nimport ExerciseCard from \"../../../src/components/exercise-common/ExerciseCard\";\r\n\r\ndescribe(\"ExerciseCard\", () => {\r\n  const baseProps = {\r\n    title: \"Titre Exercice\",\r\n    description: \"Description de l'exercice\",\r\n    icon: \"ðŸ”¥\",\r\n    color: \"#5E60CE\",\r\n    onPress: jest.fn(),\r\n  };\r\n\r\n  afterEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it(\"affiche correctement le titre, la description et l'icÃ´ne\", () => {\r\n    const { getByText } = render(<ExerciseCard {...baseProps} />);\r\n    expect(getByText(baseProps.title)).toBeTruthy();\r\n    expect(getByText(baseProps.description)).toBeTruthy();\r\n    expect(getByText(baseProps.icon)).toBeTruthy();\r\n  });\r\n\r\n  it(\"affiche la barre de progression quand progress > 0\", () => {\r\n    const { getByText, getByTestId, queryByText } = render(\r\n      <ExerciseCard {...baseProps} progress={45} />\r\n    );\r\n    expect(getByText(\"45%\")).toBeTruthy();\r\n    expect(getByTestId(\"progress-fill\")).toHaveStyle({ width: \"45%\" });\r\n    expect(queryByText(\"Nouveau\")).toBeNull();\r\n  });\r\n\r\n  it(\"affiche le badge 'Nouveau' quand progress = 0 et isNew = true\", () => {\r\n    const { getByText, queryByTestId } = render(\r\n      <ExerciseCard {...baseProps} progress={0} isNew={true} />\r\n    );\r\n    expect(getByText(\"Nouveau\")).toBeTruthy();\r\n    expect(queryByTestId(\"progress-fill\")).toBeNull();\r\n  });\r\n\r\n  it(\"n'affiche ni la barre de progression ni le badge quand progress = 0 et isNew = false\", () => {\r\n    const { queryByText, queryByTestId } = render(\r\n      <ExerciseCard {...baseProps} progress={0} isNew={false} />\r\n    );\r\n    expect(queryByText(\"Nouveau\")).toBeNull();\r\n    expect(queryByTestId(\"progress-fill\")).toBeNull();\r\n  });\r\n\r\n  it(\"appelle onPress quand on clique sur la carte ou le bouton commencer\", () => {\r\n    const { getByText } = render(<ExerciseCard {...baseProps} />);\r\n    fireEvent.press(getByText(baseProps.title)); // toucher le titre (dans la carte)\r\n    fireEvent.press(getByText(\"Commencer\")); // bouton commencer\r\n    expect(baseProps.onPress).toHaveBeenCalledTimes(2);\r\n  });\r\n});\r\n"],"mappings":"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","ignoreList":[]}