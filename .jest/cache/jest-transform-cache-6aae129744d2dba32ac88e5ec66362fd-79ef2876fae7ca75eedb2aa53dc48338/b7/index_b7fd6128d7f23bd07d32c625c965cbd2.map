{"version":3,"names":["View","Text","TouchableOpacity","useCallback","GameInstructions","styles","PropTypes","jsx","_jsx","jsxs","_jsxs","cov_1vcrb1afym","s","CategorizationGame","_ref","game","selectedItems","shuffledOptions","showFeedback","levelColor","onSelectItem","f","handleSelectItem","word","index","b","style","gameContainer","children","instructions","categoryContainer","categoryTitle","color","currentCategory","categorySubtitle","wordsContainer","map","isSelected","some","item","value","wordTile","selectedWordTile","backgroundColor","borderColor","onPress","disabled","wordTileText","propTypes","shape","string","isRequired","arrayOf","bool","func"],"sources":["index.js"],"sourcesContent":["// src/screens/exercises/wordGames/games/CategorizationGame/index.js\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { useCallback } from \"react\";\r\nimport GameInstructions from \"../GameInstructions\";\r\nimport styles from \"./style\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Composant pour le jeu de catégorisation\r\n *\r\n * @param {Object} game - Données du jeu\r\n * @param {Array} selectedItems - Items sélectionnés par l'utilisateur\r\n * @param {Array} shuffledOptions - Options mélangées\r\n * @param {boolean} showFeedback - Indique si le feedback est affiché\r\n * @param {string} levelColor - Couleur associée au niveau\r\n * @param {Function} onSelectItem - Fonction appelée lors de la sélection d'un mot\r\n */\r\nconst CategorizationGame = ({\r\n  game,\r\n  selectedItems,\r\n  shuffledOptions,\r\n  showFeedback,\r\n  levelColor,\r\n  onSelectItem,\r\n}) => {\r\n  // Handler stable pour la sélection d'un mot\r\n  const handleSelectItem = useCallback(\r\n    (word, index) => () => {\r\n      if (!showFeedback) {\r\n        onSelectItem(word, index);\r\n      }\r\n    },\r\n    [onSelectItem, showFeedback]\r\n  );\r\n\r\n  return (\r\n    <View style={styles.gameContainer}>\r\n      <GameInstructions instructions={game.instructions} />\r\n\r\n      <View style={styles.categoryContainer}>\r\n        <Text style={styles.categoryTitle}>\r\n          Category:{\" \"}\r\n          <Text style={{ color: levelColor }}>{game.currentCategory}</Text>\r\n        </Text>\r\n        <Text style={styles.categorySubtitle}>\r\n          Select all words that belong to this category:\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.wordsContainer}>\r\n        {shuffledOptions.map((word, index) => {\r\n          const isSelected = selectedItems.some((item) => item.value === word);\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              key={word}\r\n              style={[\r\n                styles.wordTile,\r\n                isSelected && [\r\n                  styles.selectedWordTile,\r\n                  {\r\n                    backgroundColor: `${levelColor}30`,\r\n                    borderColor: levelColor,\r\n                  },\r\n                ],\r\n              ]}\r\n              onPress={handleSelectItem(word, index)}\r\n              disabled={showFeedback}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.wordTileText,\r\n                  isSelected && { color: levelColor },\r\n                ]}\r\n              >\r\n                {word}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n// ✅ Définition de PropTypes pour valider les props\r\nCategorizationGame.propTypes = {\r\n  // 'game' est manquant dans la validation\r\n  game: PropTypes.shape({\r\n    instructions: PropTypes.string,\r\n    currentCategory: PropTypes.string,\r\n  }).isRequired,\r\n  // 'selectedItems' est manquant\r\n  selectedItems: PropTypes.arrayOf(PropTypes.shape({\r\n    value: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  // 'shuffledOptions' est manquant\r\n  shuffledOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  // 'showFeedback' est manquant\r\n  showFeedback: PropTypes.bool.isRequired,\r\n  // 'levelColor' est manquant\r\n  levelColor: PropTypes.string,\r\n  // 'onSelectItem' est manquant\r\n  onSelectItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategorizationGame;"],"mappings":"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","ignoreList":[]}