035210562431c8b851e0d2a5ea8d907d
function cov_1vcrb1afym() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\CategorizationGame\\index.js";
  var hash = "e6aa54f2de3c50da75ece56c52a687b60456ed70";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\CategorizationGame\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 84,
          column: 1
        }
      },
      "1": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "2": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "3": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "4": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "5": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 83,
          column: 4
        }
      },
      "6": {
        start: {
          line: 52,
          column: 29
        },
        end: {
          line: 52,
          column: 78
        }
      },
      "7": {
        start: {
          line: 52,
          column: 58
        },
        end: {
          line: 52,
          column: 77
        }
      },
      "8": {
        start: {
          line: 54,
          column: 10
        },
        end: {
          line: 79,
          column: 12
        }
      },
      "9": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 105,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 28
          }
        },
        loc: {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 25
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 22
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 51,
            column: 30
          }
        },
        loc: {
          start: {
            line: 51,
            column: 46
          },
          end: {
            line: 80,
            column: 9
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 52,
            column: 49
          }
        },
        loc: {
          start: {
            line: 52,
            column: 58
          },
          end: {
            line: 52,
            column: 77
          }
        },
        line: 52
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 31,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 31,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 65,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 26
          }
        }, {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 65,
            column: 17
          }
        }],
        line: 59
      },
      "2": {
        loc: {
          start: {
            line: 73,
            column: 18
          },
          end: {
            line: 73,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 18
          },
          end: {
            line: 73,
            column: 28
          }
        }, {
          start: {
            line: 73,
            column: 32
          },
          end: {
            line: 73,
            column: 53
          }
        }],
        line: 73
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e6aa54f2de3c50da75ece56c52a687b60456ed70"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1vcrb1afym = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1vcrb1afym();
import { View, Text, TouchableOpacity } from "react-native";
import { useCallback } from "react";
import GameInstructions from "../GameInstructions";
import styles from "./style";
import PropTypes from 'prop-types';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_1vcrb1afym().s[0]++;
var CategorizationGame = function CategorizationGame(_ref) {
  var game = _ref.game,
    selectedItems = _ref.selectedItems,
    shuffledOptions = _ref.shuffledOptions,
    showFeedback = _ref.showFeedback,
    levelColor = _ref.levelColor,
    onSelectItem = _ref.onSelectItem;
  cov_1vcrb1afym().f[0]++;
  var handleSelectItem = (cov_1vcrb1afym().s[1]++, useCallback(function (word, index) {
    cov_1vcrb1afym().f[1]++;
    cov_1vcrb1afym().s[2]++;
    return function () {
      cov_1vcrb1afym().f[2]++;
      cov_1vcrb1afym().s[3]++;
      if (!showFeedback) {
        cov_1vcrb1afym().b[0][0]++;
        cov_1vcrb1afym().s[4]++;
        onSelectItem(word, index);
      } else {
        cov_1vcrb1afym().b[0][1]++;
      }
    };
  }, [onSelectItem, showFeedback]));
  cov_1vcrb1afym().s[5]++;
  return _jsxs(View, {
    style: styles.gameContainer,
    children: [_jsx(GameInstructions, {
      instructions: game.instructions
    }), _jsxs(View, {
      style: styles.categoryContainer,
      children: [_jsxs(Text, {
        style: styles.categoryTitle,
        children: ["Category:", " ", _jsx(Text, {
          style: {
            color: levelColor
          },
          children: game.currentCategory
        })]
      }), _jsx(Text, {
        style: styles.categorySubtitle,
        children: "Select all words that belong to this category:"
      })]
    }), _jsx(View, {
      style: styles.wordsContainer,
      children: shuffledOptions.map(function (word, index) {
        cov_1vcrb1afym().f[3]++;
        var isSelected = (cov_1vcrb1afym().s[6]++, selectedItems.some(function (item) {
          cov_1vcrb1afym().f[4]++;
          cov_1vcrb1afym().s[7]++;
          return item.value === word;
        }));
        cov_1vcrb1afym().s[8]++;
        return _jsx(TouchableOpacity, {
          style: [styles.wordTile, (cov_1vcrb1afym().b[1][0]++, isSelected) && (cov_1vcrb1afym().b[1][1]++, [styles.selectedWordTile, {
            backgroundColor: `${levelColor}30`,
            borderColor: levelColor
          }])],
          onPress: handleSelectItem(word, index),
          disabled: showFeedback,
          children: _jsx(Text, {
            style: [styles.wordTileText, (cov_1vcrb1afym().b[2][0]++, isSelected) && (cov_1vcrb1afym().b[2][1]++, {
              color: levelColor
            })],
            children: word
          })
        }, word);
      })
    })]
  });
};
cov_1vcrb1afym().s[9]++;
CategorizationGame.propTypes = {
  game: PropTypes.shape({
    instructions: PropTypes.string,
    currentCategory: PropTypes.string
  }).isRequired,
  selectedItems: PropTypes.arrayOf(PropTypes.shape({
    value: PropTypes.string.isRequired
  })).isRequired,
  shuffledOptions: PropTypes.arrayOf(PropTypes.string).isRequired,
  showFeedback: PropTypes.bool.isRequired,
  levelColor: PropTypes.string,
  onSelectItem: PropTypes.func.isRequired
};
export default CategorizationGame;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,