c2ac826c77121fb9d628a963e7e31cd1
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _ExerciseHeader = _interopRequireDefault(require("../../../../components/exercise-common/ExerciseHeader"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
var VocabularyHeader = function VocabularyHeader(_ref) {
  var level = _ref.level,
    mode = _ref.mode,
    onBackPress = _ref.onBackPress;
  var getTitle = function getTitle() {
    if (mode === 'fast') return 'Fast';
    return 'Vocabulaire';
  };
  return (0, _jsxRuntime.jsx)(_ExerciseHeader.default, {
    title: getTitle(),
    level: level,
    exerciseType: "vocabulary",
    onClose: onBackPress,
    backIcon: "arrow-back"
  });
};
VocabularyHeader.propTypes = {
  mode: _propTypes.default.oneOf(['fast', 'classic']).isRequired,
  onBackPress: _propTypes.default.func.isRequired,
  level: _propTypes.default.string.isRequired
};
var _default = exports.default = VocabularyHeader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfRXhlcmNpc2VIZWFkZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9wcm9wVHlwZXMiLCJfanN4UnVudGltZSIsIlZvY2FidWxhcnlIZWFkZXIiLCJfcmVmIiwibGV2ZWwiLCJtb2RlIiwib25CYWNrUHJlc3MiLCJnZXRUaXRsZSIsImpzeCIsImRlZmF1bHQiLCJ0aXRsZSIsImV4ZXJjaXNlVHlwZSIsIm9uQ2xvc2UiLCJiYWNrSWNvbiIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9uZU9mIiwiaXNSZXF1aXJlZCIsImZ1bmMiLCJzdHJpbmciLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBWb2NhYnVsYXJ5SGVhZGVyIC0gVmVyc2lvbiDDqXB1csOpZSBtb2JpbGUtZmlyc3RcclxuaW1wb3J0IEV4ZXJjaXNlSGVhZGVyIGZyb20gXCIuLi8uLi8uLi8uLi9jb21wb25lbnRzL2V4ZXJjaXNlLWNvbW1vbi9FeGVyY2lzZUhlYWRlclwiO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5cclxuLyoqXHJcbiAqIPCfjq8gVm9jYWJ1bGFyeUhlYWRlciAtIFZlcnNpb24gTW9iaWxlLUZpcnN0IMOJcHVyw6llXHJcbiAqIC0gVGl0cmVzIGNvdXJ0cyBldCBjbGFpcnNcclxuICogLSBDb2jDqXJlbmNlIGF2ZWMgRXhlcmNpc2VTZWxlY3Rpb25cclxuICogLSBGb2N1cyBzdXIgbCdlc3NlbnRpZWxcclxuICogLSBQYXMgZGUgcmVkb25kYW5jZVxyXG4gKi9cclxuY29uc3QgVm9jYWJ1bGFyeUhlYWRlciA9ICh7IGxldmVsLCBtb2RlLCBvbkJhY2tQcmVzcyB9KSA9PiB7XHJcbiAgLy8g8J+OryBUSVRSRVMgw4lQVVLDiVMgLSBNb2JpbGUtZmlyc3RcclxuICBjb25zdCBnZXRUaXRsZSA9ICgpID0+IHtcclxuICAgIGlmIChtb2RlID09PSAnZmFzdCcpIHJldHVybiAnRmFzdCc7IC8vIFNpbXBsZSBldCBjbGFpciDimqFcclxuICAgIHJldHVybiAnVm9jYWJ1bGFpcmUnOyAvLyBQYXIgZMOpZmF1dCBwb3VyIGNsYXNzaWNcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEV4ZXJjaXNlSGVhZGVyXHJcbiAgICAgIHRpdGxlPXtnZXRUaXRsZSgpfVxyXG4gICAgICBsZXZlbD17bGV2ZWx9XHJcbiAgICAgIGV4ZXJjaXNlVHlwZT1cInZvY2FidWxhcnlcIiAvLyBNw6ptZSB0eXBlLCBzZXVsIGxlIG1vZGUgY2hhbmdlXHJcbiAgICAgIG9uQ2xvc2U9e29uQmFja1ByZXNzfVxyXG4gICAgICBiYWNrSWNvbj1cImFycm93LWJhY2tcIlxyXG4gICAgLz5cclxuICApO1xyXG59O1xyXG5cclxuLy8g4pyFIETDqWZpbml0aW9uIGRlIFByb3BUeXBlcyBwb3VyIGxhIHZhbGlkYXRpb24gZGVzIHByb3BzXHJcblZvY2FidWxhcnlIZWFkZXIucHJvcFR5cGVzID0ge1xyXG4gIC8vICdtb2RlJyBlc3QgbWFucXVhbnQgZGFucyBsYSB2YWxpZGF0aW9uXHJcbiAgbW9kZTogUHJvcFR5cGVzLm9uZU9mKFsnZmFzdCcsICdjbGFzc2ljJ10pLmlzUmVxdWlyZWQsXHJcbiAgLy8gJ29uQmFja1ByZXNzJyBlc3QgbWFucXVhbnQgZGFucyBsYSB2YWxpZGF0aW9uXHJcbiAgb25CYWNrUHJlc3M6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXHJcbiAgLy8gJ2xldmVsJyBlc3QgbWFucXVhbnQgZGFucyBsYSB2YWxpZGF0aW9uXHJcbiAgbGV2ZWw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFZvY2FidWxhcnlIZWFkZXI7Il0sIm1hcHBpbmdzIjoiOzs7OztBQUNBLElBQUFBLGVBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFVBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUFtQyxJQUFBRSxXQUFBLEdBQUFGLE9BQUE7QUFTbkMsSUFBTUcsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFnQkEsQ0FBQUMsSUFBQSxFQUFxQztFQUFBLElBQS9CQyxLQUFLLEdBQUFELElBQUEsQ0FBTEMsS0FBSztJQUFFQyxJQUFJLEdBQUFGLElBQUEsQ0FBSkUsSUFBSTtJQUFFQyxXQUFXLEdBQUFILElBQUEsQ0FBWEcsV0FBVztFQUVsRCxJQUFNQyxRQUFRLEdBQUcsU0FBWEEsUUFBUUEsQ0FBQSxFQUFTO0lBQ3JCLElBQUlGLElBQUksS0FBSyxNQUFNLEVBQUUsT0FBTyxNQUFNO0lBQ2xDLE9BQU8sYUFBYTtFQUN0QixDQUFDO0VBRUQsT0FDRSxJQUFBSixXQUFBLENBQUFPLEdBQUEsRUFBQ1gsZUFBQSxDQUFBWSxPQUFjO0lBQ2JDLEtBQUssRUFBRUgsUUFBUSxDQUFDLENBQUU7SUFDbEJILEtBQUssRUFBRUEsS0FBTTtJQUNiTyxZQUFZLEVBQUMsWUFBWTtJQUN6QkMsT0FBTyxFQUFFTixXQUFZO0lBQ3JCTyxRQUFRLEVBQUM7RUFBWSxDQUN0QixDQUFDO0FBRU4sQ0FBQztBQUdEWCxnQkFBZ0IsQ0FBQ1ksU0FBUyxHQUFHO0VBRTNCVCxJQUFJLEVBQUVVLGtCQUFTLENBQUNDLEtBQUssQ0FBQyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDQyxVQUFVO0VBRXJEWCxXQUFXLEVBQUVTLGtCQUFTLENBQUNHLElBQUksQ0FBQ0QsVUFBVTtFQUV0Q2IsS0FBSyxFQUFFVyxrQkFBUyxDQUFDSSxNQUFNLENBQUNGO0FBQzFCLENBQUM7QUFBQyxJQUFBRyxRQUFBLEdBQUFDLE9BQUEsQ0FBQVosT0FBQSxHQUVhUCxnQkFBZ0IiLCJpZ25vcmVMaXN0IjpbXX0=