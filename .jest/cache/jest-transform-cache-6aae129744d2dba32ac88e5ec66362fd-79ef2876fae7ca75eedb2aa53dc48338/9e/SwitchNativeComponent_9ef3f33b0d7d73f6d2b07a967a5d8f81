932be94feebabf56ad28e7429eb2b299
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.__INTERNAL_VIEW_CONFIG = exports.Commands = void 0;
var _codegenNativeCommands = _interopRequireDefault(require("../../../../Libraries/Utilities/codegenNativeCommands"));
var _codegenNativeComponent = _interopRequireDefault(require("../../../../Libraries/Utilities/codegenNativeComponent"));
var React = _interopRequireWildcard(require("react"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');
var _require = require('react-native/Libraries/NativeComponent/ViewConfigIgnore'),
  ConditionallyIgnoredEventHandlers = _require.ConditionallyIgnoredEventHandlers;
var _require2 = require("react-native/Libraries/ReactNative/RendererProxy"),
  dispatchCommand = _require2.dispatchCommand;
var nativeComponentName = 'RCTSwitch';
var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'RCTSwitch',
  bubblingEventTypes: {
    topChange: {
      phasedRegistrationNames: {
        captured: 'onChangeCapture',
        bubbled: 'onChange'
      }
    }
  },
  validAttributes: Object.assign({
    disabled: true,
    value: true,
    tintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    onTintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    thumbTintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    thumbColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    trackColorForFalse: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    trackColorForTrue: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    }
  }, ConditionallyIgnoredEventHandlers({
    onChange: true
  }))
};
var _default = exports.default = NativeComponentRegistry.get(nativeComponentName, function () {
  return __INTERNAL_VIEW_CONFIG;
});
var Commands = exports.Commands = {
  setValue: function setValue(ref, value) {
    dispatchCommand(ref, "setValue", [value]);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29kZWdlbk5hdGl2ZUNvbW1hbmRzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfY29kZWdlbk5hdGl2ZUNvbXBvbmVudCIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIk5hdGl2ZUNvbXBvbmVudFJlZ2lzdHJ5IiwiX3JlcXVpcmUiLCJDb25kaXRpb25hbGx5SWdub3JlZEV2ZW50SGFuZGxlcnMiLCJfcmVxdWlyZTIiLCJkaXNwYXRjaENvbW1hbmQiLCJuYXRpdmVDb21wb25lbnROYW1lIiwiX19JTlRFUk5BTF9WSUVXX0NPTkZJRyIsImV4cG9ydHMiLCJ1aVZpZXdDbGFzc05hbWUiLCJidWJibGluZ0V2ZW50VHlwZXMiLCJ0b3BDaGFuZ2UiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsImNhcHR1cmVkIiwiYnViYmxlZCIsInZhbGlkQXR0cmlidXRlcyIsImFzc2lnbiIsImRpc2FibGVkIiwidmFsdWUiLCJ0aW50Q29sb3IiLCJwcm9jZXNzIiwib25UaW50Q29sb3IiLCJ0aHVtYlRpbnRDb2xvciIsInRodW1iQ29sb3IiLCJ0cmFja0NvbG9yRm9yRmFsc2UiLCJ0cmFja0NvbG9yRm9yVHJ1ZSIsIm9uQ2hhbmdlIiwiX2RlZmF1bHQiLCJDb21tYW5kcyIsInNldFZhbHVlIiwicmVmIl0sInNvdXJjZXMiOlsiU3dpdGNoTmF0aXZlQ29tcG9uZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgdHlwZSB7Vmlld1Byb3BzfSBmcm9tICcuLi8uLi8uLi8uLi9MaWJyYXJpZXMvQ29tcG9uZW50cy9WaWV3L1ZpZXdQcm9wVHlwZXMnO1xuaW1wb3J0IHR5cGUge0hvc3RDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uLy4uL0xpYnJhcmllcy9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVR5cGVzJztcbmltcG9ydCB0eXBlIHtDb2xvclZhbHVlfSBmcm9tICcuLi8uLi8uLi8uLi9MaWJyYXJpZXMvU3R5bGVTaGVldC9TdHlsZVNoZWV0JztcbmltcG9ydCB0eXBlIHtcbiAgQnViYmxpbmdFdmVudEhhbmRsZXIsXG4gIEludDMyLFxuICBXaXRoRGVmYXVsdCxcbn0gZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL1R5cGVzL0NvZGVnZW5UeXBlcyc7XG5cbmltcG9ydCBjb2RlZ2VuTmF0aXZlQ29tbWFuZHMgZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL1V0aWxpdGllcy9jb2RlZ2VuTmF0aXZlQ29tbWFuZHMnO1xuaW1wb3J0IGNvZGVnZW5OYXRpdmVDb21wb25lbnQgZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL1V0aWxpdGllcy9jb2RlZ2VuTmF0aXZlQ29tcG9uZW50JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxudHlwZSBTd2l0Y2hDaGFuZ2VFdmVudCA9ICRSZWFkT25seTx7fFxuICB2YWx1ZTogYm9vbGVhbixcbiAgdGFyZ2V0OiBJbnQzMixcbnx9PjtcblxudHlwZSBOYXRpdmVQcm9wcyA9ICRSZWFkT25seTx7fFxuICAuLi5WaWV3UHJvcHMsXG5cbiAgLy8gUHJvcHNcbiAgZGlzYWJsZWQ/OiBXaXRoRGVmYXVsdDxib29sZWFuLCBmYWxzZT4sXG4gIHZhbHVlPzogV2l0aERlZmF1bHQ8Ym9vbGVhbiwgZmFsc2U+LFxuICB0aW50Q29sb3I/OiA/Q29sb3JWYWx1ZSxcbiAgb25UaW50Q29sb3I/OiA/Q29sb3JWYWx1ZSxcbiAgdGh1bWJUaW50Q29sb3I/OiA/Q29sb3JWYWx1ZSxcblxuICAvLyBEZXByZWNhdGVkIHByb3BzXG4gIHRodW1iQ29sb3I/OiA/Q29sb3JWYWx1ZSxcbiAgdHJhY2tDb2xvckZvckZhbHNlPzogP0NvbG9yVmFsdWUsXG4gIHRyYWNrQ29sb3JGb3JUcnVlPzogP0NvbG9yVmFsdWUsXG5cbiAgLy8gRXZlbnRzXG4gIG9uQ2hhbmdlPzogP0J1YmJsaW5nRXZlbnRIYW5kbGVyPFN3aXRjaENoYW5nZUV2ZW50Pixcbnx9PjtcblxudHlwZSBDb21wb25lbnRUeXBlID0gSG9zdENvbXBvbmVudDxOYXRpdmVQcm9wcz47XG5cbmludGVyZmFjZSBOYXRpdmVDb21tYW5kcyB7XG4gICtzZXRWYWx1ZTogKHZpZXdSZWY6IFJlYWN0LkVsZW1lbnRSZWY8Q29tcG9uZW50VHlwZT4sIHZhbHVlOiBib29sZWFuKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgQ29tbWFuZHM6IE5hdGl2ZUNvbW1hbmRzID0gY29kZWdlbk5hdGl2ZUNvbW1hbmRzPE5hdGl2ZUNvbW1hbmRzPih7XG4gIHN1cHBvcnRlZENvbW1hbmRzOiBbJ3NldFZhbHVlJ10sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgKGNvZGVnZW5OYXRpdmVDb21wb25lbnQ8TmF0aXZlUHJvcHM+KCdTd2l0Y2gnLCB7XG4gIHBhcGVyQ29tcG9uZW50TmFtZTogJ1JDVFN3aXRjaCcsXG4gIGV4Y2x1ZGVkUGxhdGZvcm1zOiBbJ2FuZHJvaWQnXSxcbn0pOiBDb21wb25lbnRUeXBlKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFtQkEsSUFBQUEsc0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUMs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