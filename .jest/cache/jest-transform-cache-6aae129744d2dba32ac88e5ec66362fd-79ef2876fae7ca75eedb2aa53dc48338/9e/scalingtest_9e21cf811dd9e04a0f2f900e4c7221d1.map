{"version":3,"names":["_reactNative","require","_scaling","describe","beforeEach","jest","clearAllMocks","it","spyOn","Dimensions","mockReturnValue","width","height","expect","scale","toBe","result","toBeGreaterThan","verticalScale","moderateScale","result1","result2","PixelRatio","pixelRound","devices","name","pixelRatio","forEach","device","baseSize","isFinite","largeValue","smallValue","not","toThrow","size","iterations","start","Date","now","i","end","duration","toBeLessThan"],"sources":["scaling.test.js"],"sourcesContent":["// __tests__/utils/scaling.test.js\nimport { Dimensions, PixelRatio } from 'react-native';\nimport {\n  scale,\n  verticalScale,\n  moderateScale,\n  pixelRound\n} from '../../src/utils/scaling';\n\ndescribe('scaling', () => {\n  beforeEach(() => {\n    // Utiliser les mocks déjà définis dans jest.setup.js\n    jest.clearAllMocks();\n  });\n\n  describe('scale (horizontal)', () => {\n    it('devrait calculer le scaling horizontal', () => {\n      // Mock Dimensions pour ce test spécifique\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 667 });\n\n      expect(scale(10)).toBe(10); // Base size\n      expect(scale(20)).toBe(20);\n      expect(scale(0)).toBe(0);\n    });\n\n    it('devrait scaler sur des écrans différents', () => {\n      // Écran plus large\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 414, height: 736 });\n\n      const result = scale(10);\n      expect(typeof result).toBe('number');\n      expect(result).toBeGreaterThan(10); // Devrait être plus grand\n    });\n\n    it('devrait gérer les valeurs négatives', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 667 });\n\n      expect(scale(-10)).toBe(-10);\n    });\n\n    it('devrait gérer les valeurs décimales', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 667 });\n\n      expect(scale(10.5)).toBe(10.5);\n    });\n  });\n\n  describe('verticalScale', () => {\n    it('devrait calculer le scaling vertical', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 667 });\n\n      expect(verticalScale(10)).toBe(10); // Base size\n      expect(verticalScale(20)).toBe(20);\n      expect(verticalScale(0)).toBe(0);\n    });\n\n    it('devrait scaler sur des écrans plus hauts', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 812 });\n\n      const result = verticalScale(10);\n      expect(typeof result).toBe('number');\n      expect(result).toBeGreaterThan(10);\n    });\n\n    it('devrait gérer les valeurs négatives', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 667 });\n\n      expect(verticalScale(-10)).toBe(-10);\n    });\n  });\n\n  describe('moderateScale', () => {\n    it('devrait appliquer un scaling modéré', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 667 });\n\n      const result = moderateScale(20);\n      expect(typeof result).toBe('number');\n      expect(result).toBe(20); // Sur base size, devrait être identique\n    });\n\n    it('devrait respecter le facteur personnalisé', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 414, height: 736 });\n\n      const result1 = moderateScale(20, 0);\n      const result2 = moderateScale(20, 1);\n\n      expect(result1).toBe(20); // Facteur 0 = pas de scaling\n      expect(typeof result2).toBe('number');\n    });\n\n    it('devrait utiliser le facteur par défaut 0.5', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 414, height: 736 });\n\n      const result = moderateScale(20);\n      expect(typeof result).toBe('number');\n    });\n  });\n\n  describe('pixelRound', () => {\n    it('devrait arrondir au pixel le plus proche', () => {\n      jest.spyOn(PixelRatio, 'get').mockReturnValue(2);\n\n      const result1 = pixelRound(10.3);\n      const result2 = pixelRound(10.7);\n\n      expect(typeof result1).toBe('number');\n      expect(typeof result2).toBe('number');\n    });\n\n    it('devrait gérer différentes densités de pixels', () => {\n      jest.spyOn(PixelRatio, 'get').mockReturnValue(3);\n\n      const result = pixelRound(10.2);\n      expect(typeof result).toBe('number');\n    });\n\n    it('devrait gérer la densité 1x', () => {\n      jest.spyOn(PixelRatio, 'get').mockReturnValue(1);\n\n      const result = pixelRound(10.3);\n      expect(typeof result).toBe('number');\n    });\n\n    it('devrait gérer les valeurs nulles et négatives', () => {\n      jest.spyOn(PixelRatio, 'get').mockReturnValue(2);\n\n      expect(pixelRound(0)).toBe(0);\n      expect(typeof pixelRound(-10.3)).toBe('number');\n    });\n  });\n\n  describe('Scénarios d\\'appareils réels', () => {\n    const devices = [\n      { name: 'iPhone SE', width: 320, height: 568, pixelRatio: 2 },\n      { name: 'iPhone 6/7/8', width: 375, height: 667, pixelRatio: 2 },\n      { name: 'iPhone X/XS', width: 375, height: 812, pixelRatio: 3 },\n      { name: 'iPad', width: 768, height: 1024, pixelRatio: 2 }\n    ];\n\n    devices.forEach(device => {\n      it(`devrait scaler correctement sur ${device.name}`, () => {\n        jest.spyOn(Dimensions, 'get').mockReturnValue({\n          width: device.width,\n          height: device.height\n        });\n        jest.spyOn(PixelRatio, 'get').mockReturnValue(device.pixelRatio);\n\n        const baseSize = 16;\n        \n        // Les résultats doivent être des nombres valides\n        expect(typeof scale(baseSize)).toBe('number');\n        expect(typeof verticalScale(baseSize)).toBe('number');\n        expect(typeof moderateScale(baseSize)).toBe('number');\n        expect(typeof pixelRound(baseSize)).toBe('number');\n\n        // Les résultats ne doivent pas être NaN ou Infinity\n        expect(isFinite(scale(baseSize))).toBe(true);\n        expect(isFinite(verticalScale(baseSize))).toBe(true);\n        expect(isFinite(moderateScale(baseSize))).toBe(true);\n        expect(isFinite(pixelRound(baseSize))).toBe(true);\n\n        // Les valeurs scalées doivent être positives pour des entrées positives\n        expect(scale(baseSize)).toBeGreaterThan(0);\n        expect(verticalScale(baseSize)).toBeGreaterThan(0);\n        expect(moderateScale(baseSize)).toBeGreaterThan(0);\n        expect(pixelRound(baseSize)).toBeGreaterThan(0);\n      });\n    });\n  });\n\n  describe('Edge cases et robustesse', () => {\n    it('devrait gérer les dimensions nulles', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 0, height: 0 });\n\n      expect(scale(10)).toBe(0);\n      expect(verticalScale(10)).toBe(0);\n    });\n\n    it('devrait gérer les très grandes valeurs', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 667 });\n\n      const largeValue = 10000;\n\n      expect(typeof scale(largeValue)).toBe('number');\n      expect(typeof verticalScale(largeValue)).toBe('number');\n      expect(typeof moderateScale(largeValue)).toBe('number');\n      expect(isFinite(scale(largeValue))).toBe(true);\n    });\n\n    it('devrait gérer les très petites valeurs', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 667 });\n\n      const smallValue = 0.1;\n\n      expect(typeof scale(smallValue)).toBe('number');\n      expect(typeof verticalScale(smallValue)).toBe('number');\n      expect(typeof moderateScale(smallValue)).toBe('number');\n      expect(isFinite(scale(smallValue))).toBe(true);\n    });\n\n    it('devrait gérer un PixelRatio de 0', () => {\n      jest.spyOn(PixelRatio, 'get').mockReturnValue(0);\n\n      expect(() => pixelRound(10)).not.toThrow();\n    });\n\n    it('devrait être cohérent entre les appels', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 667 });\n\n      const size = 15;\n      const result1 = scale(size);\n      const result2 = scale(size);\n\n      expect(result1).toBe(result2);\n    });\n  });\n\n  describe('Performance', () => {\n    it('devrait être rapide pour de nombreux calculs', () => {\n      jest.spyOn(Dimensions, 'get').mockReturnValue({ width: 375, height: 667 });\n      jest.spyOn(PixelRatio, 'get').mockReturnValue(2);\n\n      const iterations = 100; // Réduit pour éviter les timeouts\n      const start = Date.now();\n\n      for (let i = 0; i < iterations; i++) {\n        scale(10 + i);\n        verticalScale(10 + i);\n        moderateScale(10 + i);\n        pixelRound(10 + i);\n      }\n\n      const end = Date.now();\n      const duration = end - start;\n\n      expect(duration).toBeLessThan(1000); // Moins de 1 seconde pour 100 calculs\n    });\n  });\n\n  describe('Fonctions disponibles', () => {\n    it('devrait exporter toutes les fonctions nécessaires', () => {\n      expect(typeof scale).toBe('function');\n      expect(typeof verticalScale).toBe('function');\n      expect(typeof moderateScale).toBe('function');\n      expect(typeof pixelRound).toBe('function');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}