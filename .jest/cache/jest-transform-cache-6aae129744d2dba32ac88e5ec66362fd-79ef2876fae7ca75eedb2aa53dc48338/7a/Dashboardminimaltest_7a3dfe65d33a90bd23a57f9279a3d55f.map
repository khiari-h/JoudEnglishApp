{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","describe","it","expect","not","toThrow","components","forEach","componentName","hooks","hookName","constants","toBeDefined","toBe","contexts","contextName"],"sources":["Dashboard.minimal.test.js"],"sourcesContent":["// __tests__/screens/Dashboard/Dashboard.minimal.test.js\nimport React from 'react';\nimport { render } from '@testing-library/react-native';\n\n// Mock minimal - on teste juste que le composant peut être importé et rendu\ndescribe('Dashboard - Tests minimalistes', () => {\n  \n  // Test d'import - vérifie que le module peut être chargé\n  it('devrait pouvoir importer le composant Dashboard', () => {\n    expect(() => {\n      require('../../../src/screens/Dashboard');\n    }).not.toThrow();\n  });\n\n  // Test de structure - vérifie que les sous-composants existent\n  it('devrait avoir tous les sous-composants nécessaires', () => {\n    const components = [\n      'ModernHeader',\n      'HeroContinueSection', \n      'QuickActions',\n      'SimpleMetrics',\n      'LearningProgress'\n    ];\n\n    components.forEach(componentName => {\n      expect(() => {\n        require(`../../../src/screens/Dashboard/components/${componentName}`);\n      }).not.toThrow();\n    });\n  });\n\n  // Test des hooks - vérifie que les hooks peuvent être importés\n  it('devrait avoir tous les hooks nécessaires', () => {\n    const hooks = [\n      'useDashboardLevel',\n      'useDashboardState'\n    ];\n\n    hooks.forEach(hookName => {\n      expect(() => {\n        require(`../../../src/screens/Dashboard/hooks/${hookName}`);\n      }).not.toThrow();\n    });\n  });\n\n  // Test de constantes - vérifie que les constantes existent\n  it('devrait pouvoir accéder aux constantes', () => {\n    expect(() => {\n      const constants = require('../../../src/utils/constants');\n      expect(constants).toBeDefined();\n      expect(typeof constants).toBe('object');\n    }).not.toThrow();\n  });\n\n  // Test de contextes - vérifie que les contextes sont disponibles\n  it('devrait pouvoir accéder aux contextes', () => {\n    const contexts = [\n      'ThemeContext',\n      'ProgressContext', \n      'CurrentLevelContext'\n    ];\n\n    contexts.forEach(contextName => {\n      expect(() => {\n        require(`../../../src/contexts/${contextName}`);\n      }).not.toThrow();\n    });\n  });\n});"],"mappings":";AACA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAGAE,QAAQ,CAAC,gCAAgC,EAAE,YAAM;EAG/CC,EAAE,CAAC,iDAAiD,EAAE,YAAM;IAC1DC,MAAM,CAAC,YAAM;MACXJ,OAAO,CAAC,gCAAgC,CAAC;IAC3C,CAAC,CAAC,CAACK,GAAG,CAACC,OAAO,CAAC,CAAC;EAClB,CAAC,CAAC;EAGFH,EAAE,CAAC,oDAAoD,EAAE,YAAM;IAC7D,IAAMI,UAAU,GAAG,CACjB,cAAc,EACd,qBAAqB,EACrB,cAAc,EACd,eAAe,EACf,kBAAkB,CACnB;IAEDA,UAAU,CAACC,OAAO,CAAC,UAAAC,aAAa,EAAI;MAClCL,MAAM,CAAC,YAAM;QACXJ,OAAO,CAAC,6CAA6CS,aAAa,EAAE,CAAC;MACvE,CAAC,CAAC,CAACJ,GAAG,CAACC,OAAO,CAAC,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC;EAGFH,EAAE,CAAC,0CAA0C,EAAE,YAAM;IACnD,IAAMO,KAAK,GAAG,CACZ,mBAAmB,EACnB,mBAAmB,CACpB;IAEDA,KAAK,CAACF,OAAO,CAAC,UAAAG,QAAQ,EAAI;MACxBP,MAAM,CAAC,YAAM;QACXJ,OAAO,CAAC,wCAAwCW,QAAQ,EAAE,CAAC;MAC7D,CAAC,CAAC,CAACN,GAAG,CAACC,OAAO,CAAC,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC;EAGFH,EAAE,CAAC,wCAAwC,EAAE,YAAM;IACjDC,MAAM,CAAC,YAAM;MACX,IAAMQ,SAAS,GAAGZ,OAAO,CAAC,8BAA8B,CAAC;MACzDI,MAAM,CAACQ,SAAS,CAAC,CAACC,WAAW,CAAC,CAAC;MAC/BT,MAAM,CAAC,OAAOQ,SAAS,CAAC,CAACE,IAAI,CAAC,QAAQ,CAAC;IACzC,CAAC,CAAC,CAACT,GAAG,CAACC,OAAO,CAAC,CAAC;EAClB,CAAC,CAAC;EAGFH,EAAE,CAAC,uCAAuC,EAAE,YAAM;IAChD,IAAMY,QAAQ,GAAG,CACf,cAAc,EACd,iBAAiB,EACjB,qBAAqB,CACtB;IAEDA,QAAQ,CAACP,OAAO,CAAC,UAAAQ,WAAW,EAAI;MAC9BZ,MAAM,CAAC,YAAM;QACXJ,OAAO,CAAC,yBAAyBgB,WAAW,EAAE,CAAC;MACjD,CAAC,CAAC,CAACX,GAAG,CAACC,OAAO,CAAC,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}