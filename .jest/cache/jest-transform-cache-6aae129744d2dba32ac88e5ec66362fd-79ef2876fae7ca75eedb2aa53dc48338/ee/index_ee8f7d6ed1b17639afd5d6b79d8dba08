e61583238f8fe55878c422d1426d4f61
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _reactNative = require("react-native");
var _expoLinearGradient = require("expo-linear-gradient");
var _ThemeContext = require("../../../../contexts/ThemeContext");
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1wqkxh06hv() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\ModernHeader\\index.js";
  var hash = "9728c7028e4138cc38aec157774b23f17b18abad";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\ModernHeader\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "1": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "2": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "3": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "4": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 42,
          column: 4
        }
      },
      "5": {
        start: {
          line: 45,
          column: 26
        },
        end: {
          line: 52,
          column: 1
        }
      },
      "6": {
        start: {
          line: 46,
          column: 2
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "7": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 60,
          column: 1
        }
      },
      "8": {
        start: {
          line: 55,
          column: 2
        },
        end: {
          line: 59,
          column: 9
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 12,
            column: 22
          }
        },
        loc: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 45,
            column: 26
          },
          end: {
            line: 45,
            column: 27
          }
        },
        loc: {
          start: {
            line: 46,
            column: 2
          },
          end: {
            line: 51,
            column: 9
          }
        },
        line: 46
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 27
          },
          end: {
            line: 54,
            column: 28
          }
        },
        loc: {
          start: {
            line: 55,
            column: 2
          },
          end: {
            line: 59,
            column: 9
          }
        },
        line: 55
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 13
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 10
          },
          end: {
            line: 13,
            column: 13
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 24
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 17
          },
          end: {
            line: 19,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 17
          },
          end: {
            line: 17,
            column: 37
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 3
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 43
          },
          end: {
            line: 22,
            column: 46
          }
        }, {
          start: {
            line: 22,
            column: 49
          },
          end: {
            line: 22,
            column: 54
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9728c7028e4138cc38aec157774b23f17b18abad"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1wqkxh06hv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wqkxh06hv();
cov_1wqkxh06hv().s[0]++;
var ModernHeader = function ModernHeader(_ref) {
  var _ref$level = _ref.level,
    level = _ref$level === void 0 ? (cov_1wqkxh06hv().b[0][0]++, "1") : _ref$level,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_1wqkxh06hv().b[1][0]++, "#3B82F6") : _ref$levelColor;
  cov_1wqkxh06hv().f[0]++;
  var themeContext = (cov_1wqkxh06hv().s[1]++, (0, _react.useContext)(_ThemeContext.ThemeContext));
  var colors = (cov_1wqkxh06hv().s[2]++, (cov_1wqkxh06hv().b[2][0]++, themeContext == null ? void 0 : themeContext.colors) || (cov_1wqkxh06hv().b[2][1]++, {
    surface: "#FFFFFF"
  }));
  var displayLevel = (cov_1wqkxh06hv().s[3]++, level === "bonus" ? (cov_1wqkxh06hv().b[3][0]++, "B") : (cov_1wqkxh06hv().b[3][1]++, level));
  cov_1wqkxh06hv().s[4]++;
  return (0, _jsxRuntime.jsxs)(_expoLinearGradient.LinearGradient, {
    colors: [levelColor, `${levelColor}DD`],
    start: {
      x: 0,
      y: 0
    },
    end: {
      x: 1,
      y: 1
    },
    style: _style.default.container,
    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
      style: _style.default.backgroundPattern
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: _style.default.content,
      children: [(0, _jsxRuntime.jsx)(HeaderLeftSection, {
        colors: colors,
        localStyles: _style.default
      }), (0, _jsxRuntime.jsx)(HeaderRightSection, {
        displayLevel: displayLevel,
        levelColor: levelColor,
        colors: colors,
        localStyles: _style.default
      })]
    })]
  });
};
cov_1wqkxh06hv().s[5]++;
var HeaderLeftSection = function HeaderLeftSection(_ref2) {
  var colors = _ref2.colors,
    localStyles = _ref2.localStyles;
  cov_1wqkxh06hv().f[1]++;
  cov_1wqkxh06hv().s[6]++;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: localStyles.leftSection,
    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: localStyles.logoContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: localStyles.logoEmoji,
        children: "\uD83C\uDF93"
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: [localStyles.logoText, {
          color: colors.surface
        }],
        children: "JOUD"
      })]
    })
  });
};
cov_1wqkxh06hv().s[7]++;
var HeaderRightSection = function HeaderRightSection(_ref3) {
  var displayLevel = _ref3.displayLevel,
    levelColor = _ref3.levelColor,
    colors = _ref3.colors,
    localStyles = _ref3.localStyles;
  cov_1wqkxh06hv().f[2]++;
  cov_1wqkxh06hv().s[8]++;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: localStyles.rightSection,
    children: (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: [localStyles.levelBadge, {
        backgroundColor: colors.surface
      }],
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: [localStyles.levelText, {
          color: levelColor
        }],
        children: displayLevel
      })
    })
  });
};
var _default = exports.default = ModernHeader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,