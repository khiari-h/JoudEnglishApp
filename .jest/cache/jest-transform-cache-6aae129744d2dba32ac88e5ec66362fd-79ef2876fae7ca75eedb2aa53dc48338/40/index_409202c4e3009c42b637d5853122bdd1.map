{"version":3,"names":["readingTextsA2","readingQuestionsA2","cov_k0shuwx1n","s","combineTextWithQuestions","textId","f","text","find","t","id","questions","q","b","Object","assign","getAllA2Exercises","map","filter","Boolean","getA2ExerciseById","getA2ExercisesByDifficulty","difficulty","filteredTexts","getA2ExercisesByTopic","topic","_text$topics","topics","includes","a2Metadata","level","totalTexts","length","totalQuestions","reduce","sum","averageWordCount","Math","round","wordCount","difficulties","_toConsumableArray","Set","sort","a","localeCompare","flatMap","description","readingA2Data","metadata","exercises","getAll","getById","getByDifficulty","getByTopic","texts"],"sources":["index.js"],"sourcesContent":["// src/data/exercises/reading/readingA2Index.js\n\nimport readingTextsA2 from './categories/readingTextsA2.js';\nimport readingQuestionsA2 from './categories/readingQuestionsA2.js';\n\n// Fonction pour combiner textes et questions\nconst combineTextWithQuestions = (textId) => {\n  const text = readingTextsA2.find(t => t.id === textId);\n  const questions = readingQuestionsA2.find(q => q.textId === textId);\n\n  if (!text || !questions) {\n\n    return null;\n  }\n\n  return {\n    ...text,\n    questions: questions.questions\n  };\n};\n\n// Fonction pour obtenir tous les exercices combinés\nconst getAllA2Exercises = () => {\n  return readingTextsA2.map(text => combineTextWithQuestions(text.id)).filter(Boolean);\n};\n\n// Fonction pour obtenir un exercice par ID\nconst getA2ExerciseById = (textId) => {\n  return combineTextWithQuestions(textId);\n};\n\n// Fonction pour obtenir des exercices par difficulté\nconst getA2ExercisesByDifficulty = (difficulty) => {\n  const filteredTexts = readingTextsA2.filter(text => text.difficulty === difficulty);\n  return filteredTexts.map(text => combineTextWithQuestions(text.id)).filter(Boolean);\n};\n\n// Fonction pour obtenir des exercices par sujet\nconst getA2ExercisesByTopic = (topic) => {\n  const filteredTexts = readingTextsA2.filter(text => \n    text.topics?.includes(topic)\n  );\n  return filteredTexts.map(text => combineTextWithQuestions(text.id)).filter(Boolean);\n};\n\n// Métadonnées du niveau A2\nconst a2Metadata = {\n  level: \"A2\",\n  totalTexts: readingTextsA2.length,\n  totalQuestions: readingQuestionsA2.reduce((sum, q) => sum + q.questions.length, 0),\n  averageWordCount: Math.round(readingTextsA2.reduce((sum, text) => sum + text.wordCount, 0) / readingTextsA2.length),\n  difficulties: [...new Set(readingTextsA2.map(text => text.difficulty))].sort((a, b) => a.localeCompare(b)),\n  topics: [...new Set(readingTextsA2.flatMap(text => text.topics))].sort((a, b) => a.localeCompare(b)),\n  description: \"Elementary level reading comprehension exercises focusing on common situations, past experiences, and simple descriptions.\"\n};\n\n// Export par défaut avec structure complète\nconst readingA2Data = {\n  metadata: a2Metadata,\n  exercises: getAllA2Exercises(),\n\n  // Fonctions utilitaires\n  getAll: getAllA2Exercises,\n  getById: getA2ExerciseById,\n  getByDifficulty: getA2ExercisesByDifficulty,\n  getByTopic: getA2ExercisesByTopic,\n\n  // Accès séparé aux données brutes\n  texts: readingTextsA2,\n  questions: readingQuestionsA2\n};\n\nexport default readingA2Data;\n\n// Exports nommés pour plus de flexibilité\nexport {\n  readingTextsA2,\n  readingQuestionsA2,\n  getAllA2Exercises,\n  getA2ExerciseById,\n  getA2ExercisesByDifficulty,\n  getA2ExercisesByTopic,\n  a2Metadata\n};\n"],"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","ignoreList":[]}