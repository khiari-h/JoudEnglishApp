{"version":3,"names":["_Animated","_interopRequireDefault","require","_react","useAnimatedValue","initialValue","config","ref","useRef","current","Animated","Value"],"sources":["useAnimatedValue.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {AnimatedValueConfig} from './nodes/AnimatedValue';\n\nimport Animated from './Animated';\nimport {useRef} from 'react';\n\nexport default function useAnimatedValue(\n  initialValue: number,\n  config?: ?AnimatedValueConfig,\n): Animated.Value {\n  const ref = useRef<null | Animated.Value>(null);\n  if (ref.current == null) {\n    ref.current = new Animated.Value(initialValue, config);\n  }\n  return ref.current;\n}\n"],"mappings":";;;;;AAYA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEe,SAASE,gBAAgBA,CACtCC,YAAoB,EACpBC,MAA6B,EACb;EAChB,IAAMC,GAAG,GAAG,IAAAC,aAAM,EAAwB,IAAI,CAAC;EAC/C,IAAID,GAAG,CAACE,OAAO,IAAI,IAAI,EAAE;IACvBF,GAAG,CAACE,OAAO,GAAG,IAAIC,iBAAQ,CAACC,KAAK,CAACN,YAAY,EAAEC,MAAM,CAAC;EACxD;EACA,OAAOC,GAAG,CAACE,OAAO;AACpB","ignoreList":[]}