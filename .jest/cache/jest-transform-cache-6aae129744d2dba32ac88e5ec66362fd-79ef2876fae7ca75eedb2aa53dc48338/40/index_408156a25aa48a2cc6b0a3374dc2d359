a89e6903631eed06e8e314000deb93d6
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _CategorySelector = _interopRequireDefault(require("../../../../components/exercise-common/CategorySelector"));
var _react = require("react");
var _jsxRuntime = require("react/jsx-runtime");
var VocabularyCategorySelector = function VocabularyCategorySelector(_ref) {
  var _ref$categories = _ref.categories,
    categories = _ref$categories === void 0 ? [] : _ref$categories,
    _ref$selectedIndex = _ref.selectedIndex,
    selectedIndex = _ref$selectedIndex === void 0 ? 0 : _ref$selectedIndex,
    onSelectCategory = _ref.onSelectCategory,
    levelColor = _ref.levelColor;
  var formattedCategories = categories.map(function (categoryTitle, index) {
    return {
      id: index,
      name: categoryTitle
    };
  });
  var handleCategorySelect = (0, _react.useCallback)(function (categoryId) {
    if (categoryId === null) {
      onSelectCategory(0);
    } else {
      onSelectCategory(categoryId);
    }
  }, [onSelectCategory]);
  return (0, _jsxRuntime.jsx)(_CategorySelector.default, {
    categories: formattedCategories,
    selectedCategory: selectedIndex === undefined ? 0 : selectedIndex,
    onSelectCategory: handleCategorySelect,
    primaryColor: levelColor
  });
};
var _default = exports.default = VocabularyCategorySelector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfQ2F0ZWdvcnlTZWxlY3RvciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX2pzeFJ1bnRpbWUiLCJWb2NhYnVsYXJ5Q2F0ZWdvcnlTZWxlY3RvciIsIl9yZWYiLCJfcmVmJGNhdGVnb3JpZXMiLCJjYXRlZ29yaWVzIiwiX3JlZiRzZWxlY3RlZEluZGV4Iiwic2VsZWN0ZWRJbmRleCIsIm9uU2VsZWN0Q2F0ZWdvcnkiLCJsZXZlbENvbG9yIiwiZm9ybWF0dGVkQ2F0ZWdvcmllcyIsIm1hcCIsImNhdGVnb3J5VGl0bGUiLCJpbmRleCIsImlkIiwibmFtZSIsImhhbmRsZUNhdGVnb3J5U2VsZWN0IiwidXNlQ2FsbGJhY2siLCJjYXRlZ29yeUlkIiwianN4IiwiZGVmYXVsdCIsInNlbGVjdGVkQ2F0ZWdvcnkiLCJ1bmRlZmluZWQiLCJwcmltYXJ5Q29sb3IiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBWb2NhYnVsYXJ5RXhlcmNpc2UvVm9jYWJ1bGFyeUNhdGVnb3J5U2VsZWN0b3IuanNcclxuaW1wb3J0IENhdGVnb3J5U2VsZWN0b3IgZnJvbSBcIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvZXhlcmNpc2UtY29tbW9uL0NhdGVnb3J5U2VsZWN0b3JcIjtcclxuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbi8qKlxyXG4gKiBBZGFwdGF0ZXVyIHBvdXIgbGUgc8OpbGVjdGV1ciBkZSBjYXTDqWdvcmllcyBkZSB2b2NhYnVsYWlyZVxyXG4gKiBSw6l1dGlsaXNlIGxlIGNvbXBvc2FudCBnw6luw6lyaXF1ZSBDYXRlZ29yeVNlbGVjdG9yXHJcbiAqL1xyXG5jb25zdCBWb2NhYnVsYXJ5Q2F0ZWdvcnlTZWxlY3RvciA9ICh7XHJcbiAgY2F0ZWdvcmllcyA9IFtdLFxyXG4gIHNlbGVjdGVkSW5kZXggPSAwLFxyXG4gIG9uU2VsZWN0Q2F0ZWdvcnksXHJcbiAgbGV2ZWxDb2xvcixcclxufSkgPT4ge1xyXG4gIC8vIFRyYW5zZm9ybWF0aW9uIGR1IGZvcm1hdCBkZXMgY2F0w6lnb3JpZXMgcG91ciBjb3JyZXNwb25kcmUgYXUgY29tcG9zYW50IGfDqW7DqXJpcXVlXHJcbiAgY29uc3QgZm9ybWF0dGVkQ2F0ZWdvcmllcyA9IGNhdGVnb3JpZXMubWFwKChjYXRlZ29yeVRpdGxlLCBpbmRleCkgPT4gKHtcclxuICAgIGlkOiBpbmRleCxcclxuICAgIG5hbWU6IGNhdGVnb3J5VGl0bGUsXHJcbiAgfSkpO1xyXG5cclxuICAvLyBGb25jdGlvbiBkZSBjYWxsYmFjayBhZGFwdMOpZSAtIG5vdHJlIGNvbXBvc2FudCB1dGlsaXNlIGRlcyBpbmRpY2VzLFxyXG4gIC8vIGxlIGNvbXBvc2FudCBnw6luw6lyaXF1ZSB1dGlsaXNlIGRlcyBJRHNcclxuICBjb25zdCBoYW5kbGVDYXRlZ29yeVNlbGVjdCA9IHVzZUNhbGxiYWNrKChjYXRlZ29yeUlkKSA9PiB7XHJcbiAgICAvLyBTaSBsJ29wdGlvbiBcIlRvdXNcIiBlc3Qgc8OpbGVjdGlvbm7DqWUgKG51bGwpLCBub3VzIHPDqWxlY3Rpb25ub25zIGxhIHByZW1pw6hyZSBjYXTDqWdvcmllXHJcbiAgICBpZiAoY2F0ZWdvcnlJZCA9PT0gbnVsbCkge1xyXG4gICAgICBvblNlbGVjdENhdGVnb3J5KDApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgb25TZWxlY3RDYXRlZ29yeShjYXRlZ29yeUlkKTtcclxuICAgIH1cclxuICB9LCBbb25TZWxlY3RDYXRlZ29yeV0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPENhdGVnb3J5U2VsZWN0b3JcclxuICAgICAgY2F0ZWdvcmllcz17Zm9ybWF0dGVkQ2F0ZWdvcmllc31cclxuICAgICAgc2VsZWN0ZWRDYXRlZ29yeT17c2VsZWN0ZWRJbmRleCA9PT0gdW5kZWZpbmVkID8gMCA6IHNlbGVjdGVkSW5kZXh9XHJcbiAgICAgIG9uU2VsZWN0Q2F0ZWdvcnk9e2hhbmRsZUNhdGVnb3J5U2VsZWN0fVxyXG4gICAgICBwcmltYXJ5Q29sb3I9e2xldmVsQ29sb3J9XHJcbiAgICAvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBWb2NhYnVsYXJ5Q2F0ZWdvcnlTZWxlY3RvcjtcclxuXHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxJQUFBQSxpQkFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBQW9DLElBQUFFLFdBQUEsR0FBQUYsT0FBQTtBQU1wQyxJQUFNRywwQkFBMEIsR0FBRyxTQUE3QkEsMEJBQTBCQSxDQUFBQyxJQUFBLEVBSzFCO0VBQUEsSUFBQUMsZUFBQSxHQUFBRCxJQUFBLENBSkpFLFVBQVU7SUFBVkEsVUFBVSxHQUFBRCxlQUFBLGNBQUcsRUFBRSxHQUFBQSxlQUFBO0lBQUFFLGtCQUFBLEdBQUFILElBQUEsQ0FDZkksYUFBYTtJQUFiQSxhQUFhLEdBQUFELGtCQUFBLGNBQUcsQ0FBQyxHQUFBQSxrQkFBQTtJQUNqQkUsZ0JBQWdCLEdBQUFMLElBQUEsQ0FBaEJLLGdCQUFnQjtJQUNoQkMsVUFBVSxHQUFBTixJQUFBLENBQVZNLFVBQVU7RUFHVixJQUFNQyxtQkFBbUIsR0FBR0wsVUFBVSxDQUFDTSxHQUFHLENBQUMsVUFBQ0MsYUFBYSxFQUFFQyxLQUFLO0lBQUEsT0FBTTtNQUNwRUMsRUFBRSxFQUFFRCxLQUFLO01BQ1RFLElBQUksRUFBRUg7SUFDUixDQUFDO0VBQUEsQ0FBQyxDQUFDO0VBSUgsSUFBTUksb0JBQW9CLEdBQUcsSUFBQUMsa0JBQVcsRUFBQyxVQUFDQyxVQUFVLEVBQUs7SUFFdkQsSUFBSUEsVUFBVSxLQUFLLElBQUksRUFBRTtNQUN2QlYsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0lBQ3JCLENBQUMsTUFBTTtNQUNMQSxnQkFBZ0IsQ0FBQ1UsVUFBVSxDQUFDO0lBQzlCO0VBQ0YsQ0FBQyxFQUFFLENBQUNWLGdCQUFnQixDQUFDLENBQUM7RUFFdEIsT0FDRSxJQUFBUCxXQUFBLENBQUFrQixHQUFBLEVBQUN0QixpQkFBQSxDQUFBdUIsT0FBZ0I7SUFDZmYsVUFBVSxFQUFFSyxtQkFBb0I7SUFDaENXLGdCQUFnQixFQUFFZCxhQUFhLEtBQUtlLFNBQVMsR0FBRyxDQUFDLEdBQUdmLGFBQWM7SUFDbEVDLGdCQUFnQixFQUFFUSxvQkFBcUI7SUFDdkNPLFlBQVksRUFBRWQ7RUFBVyxDQUMxQixDQUFDO0FBRU4sQ0FBQztBQUFDLElBQUFlLFFBQUEsR0FBQUMsT0FBQSxDQUFBTCxPQUFBLEdBRWFsQiwwQkFBMEIiLCJpZ25vcmVMaXN0IjpbXX0=