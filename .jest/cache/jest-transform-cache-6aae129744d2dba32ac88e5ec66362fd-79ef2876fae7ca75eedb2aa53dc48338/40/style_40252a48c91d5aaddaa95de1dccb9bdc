779453677e82a15484f57e80c0f08b9e
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _default = exports.default = _reactNative.StyleSheet.create({
  container: {
    paddingTop: 16,
    paddingBottom: 20,
    paddingHorizontal: 20,
    borderBottomLeftRadius: 16,
    borderBottomRightRadius: 16,
    position: 'relative',
    overflow: 'hidden'
  },
  backgroundPattern: {
    position: 'absolute',
    top: -30,
    right: -30,
    width: 80,
    height: 80,
    backgroundColor: 'rgba(255, 255, 255, 0.1)',
    borderRadius: 40
  },
  content: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "space-between",
    position: 'relative',
    zIndex: 2
  },
  leftSection: {
    flex: 1
  },
  logoContainer: {
    flexDirection: "row",
    alignItems: "center"
  },
  logoEmoji: {
    fontSize: 24,
    marginRight: 10
  },
  logoText: {
    fontSize: 22,
    fontWeight: "800",
    letterSpacing: -0.5
  },
  rightSection: {
    justifyContent: "center",
    alignItems: "center"
  },
  levelBadge: Object.assign({
    width: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: "center",
    alignItems: "center"
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: "#000",
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.15,
      shadowRadius: 3
    },
    android: {
      elevation: 3
    }
  })),
  levelText: {
    fontSize: 17,
    fontWeight: "800",
    letterSpacing: -0.2
  },
  '@media (max-width: 350)': {
    container: {
      paddingHorizontal: 16
    },
    logoText: {
      fontSize: 20
    },
    levelBadge: {
      width: 36,
      height: 36,
      borderRadius: 18
    },
    levelText: {
      fontSize: 16
    }
  },
  focusable: {},
  fadeIn: {
    opacity: 1
  },
  scaleNormal: {
    transform: [{
      scale: 1
    }]
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJjb250YWluZXIiLCJwYWRkaW5nVG9wIiwicGFkZGluZ0JvdHRvbSIsInBhZGRpbmdIb3Jpem9udGFsIiwiYm9yZGVyQm90dG9tTGVmdFJhZGl1cyIsImJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzIiwicG9zaXRpb24iLCJvdmVyZmxvdyIsImJhY2tncm91bmRQYXR0ZXJuIiwidG9wIiwicmlnaHQiLCJ3aWR0aCIsImhlaWdodCIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsImNvbnRlbnQiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiekluZGV4IiwibGVmdFNlY3Rpb24iLCJmbGV4IiwibG9nb0NvbnRhaW5lciIsImxvZ29FbW9qaSIsImZvbnRTaXplIiwibWFyZ2luUmlnaHQiLCJsb2dvVGV4dCIsImZvbnRXZWlnaHQiLCJsZXR0ZXJTcGFjaW5nIiwicmlnaHRTZWN0aW9uIiwibGV2ZWxCYWRnZSIsIk9iamVjdCIsImFzc2lnbiIsIlBsYXRmb3JtIiwic2VsZWN0IiwiaW9zIiwic2hhZG93Q29sb3IiLCJzaGFkb3dPZmZzZXQiLCJzaGFkb3dPcGFjaXR5Iiwic2hhZG93UmFkaXVzIiwiYW5kcm9pZCIsImVsZXZhdGlvbiIsImxldmVsVGV4dCIsImZvY3VzYWJsZSIsImZhZGVJbiIsIm9wYWNpdHkiLCJzY2FsZU5vcm1hbCIsInRyYW5zZm9ybSIsInNjYWxlIl0sInNvdXJjZXMiOlsic3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3NjcmVlbnMvRGFzaGJvYXJkL2NvbXBvbmVudHMvTW9kZXJuSGVhZGVyL3N0eWxlLmpzXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBQbGF0Zm9ybSB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcblxuZXhwb3J0IGRlZmF1bHQgU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBwYWRkaW5nVG9wOiAxNixcbiAgICBwYWRkaW5nQm90dG9tOiAyMCxcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMjAsXG4gICAgYm9yZGVyQm90dG9tTGVmdFJhZGl1czogMTYsXG4gICAgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6IDE2LFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcblxuICAvLyBQYXR0ZXJuIGTDqWNvcmF0aWYgc3VidGlsXG4gIGJhY2tncm91bmRQYXR0ZXJuOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgdG9wOiAtMzAsXG4gICAgcmlnaHQ6IC0zMCxcbiAgICB3aWR0aDogODAsXG4gICAgaGVpZ2h0OiA4MCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSknLFxuICAgIGJvcmRlclJhZGl1czogNDAsXG4gIH0sXG5cbiAgY29udGVudDoge1xuICAgIGZsZXhEaXJlY3Rpb246IFwicm93XCIsXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICBqdXN0aWZ5Q29udGVudDogXCJzcGFjZS1iZXR3ZWVuXCIsXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgekluZGV4OiAyLFxuICB9LFxuXG4gIC8vID09PT09PT09PT09PT09PT09PT0gU0VDVElPTiBHQVVDSEUgPT09PT09PT09PT09PT09PT09PVxuICBsZWZ0U2VjdGlvbjoge1xuICAgIGZsZXg6IDEsXG4gIH0sXG5cbiAgbG9nb0NvbnRhaW5lcjoge1xuICAgIGZsZXhEaXJlY3Rpb246IFwicm93XCIsXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgfSxcblxuICBsb2dvRW1vamk6IHtcbiAgICBmb250U2l6ZTogMjQsXG4gICAgbWFyZ2luUmlnaHQ6IDEwLFxuICB9LFxuXG4gIGxvZ29UZXh0OiB7XG4gICAgZm9udFNpemU6IDIyLFxuICAgIGZvbnRXZWlnaHQ6IFwiODAwXCIsXG4gICAgbGV0dGVyU3BhY2luZzogLTAuNSxcbiAgfSxcblxuICAvLyA9PT09PT09PT09PT09PT09PT09IFNFQ1RJT04gRFJPSVRFID09PT09PT09PT09PT09PT09PT1cbiAgcmlnaHRTZWN0aW9uOiB7XG4gICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgfSxcblxuICAvLyBCYWRnZSBuaXZlYXVcbiAgbGV2ZWxCYWRnZToge1xuICAgIHdpZHRoOiA0MCxcbiAgICBoZWlnaHQ6IDQwLFxuICAgIGJvcmRlclJhZGl1czogMjAsXG4gICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAuLi5QbGF0Zm9ybS5zZWxlY3Qoe1xuICAgICAgaW9zOiB7XG4gICAgICAgIHNoYWRvd0NvbG9yOiBcIiMwMDBcIixcbiAgICAgICAgc2hhZG93T2Zmc2V0OiB7IHdpZHRoOiAwLCBoZWlnaHQ6IDIgfSxcbiAgICAgICAgc2hhZG93T3BhY2l0eTogMC4xNSxcbiAgICAgICAgc2hhZG93UmFkaXVzOiAzLFxuICAgICAgfSxcbiAgICAgIGFuZHJvaWQ6IHtcbiAgICAgICAgZWxldmF0aW9uOiAzLFxuICAgICAgfSxcbiAgICB9KSxcbiAgfSxcblxuICBsZXZlbFRleHQ6IHtcbiAgICBmb250U2l6ZTogMTcsXG4gICAgZm9udFdlaWdodDogXCI4MDBcIixcbiAgICBsZXR0ZXJTcGFjaW5nOiAtMC4yLFxuICB9LFxuXG4gIC8vID09PT09PT09PT09PT09PT09PT0gUkVTUE9OU0lWRSA9PT09PT09PT09PT09PT09PT09XG4gICdAbWVkaWEgKG1heC13aWR0aDogMzUwKSc6IHtcbiAgICBjb250YWluZXI6IHtcbiAgICAgIHBhZGRpbmdIb3Jpem9udGFsOiAxNixcbiAgICB9LFxuXG4gICAgbG9nb1RleHQ6IHtcbiAgICAgIGZvbnRTaXplOiAyMCxcbiAgICB9LFxuXG4gICAgbGV2ZWxCYWRnZToge1xuICAgICAgd2lkdGg6IDM2LFxuICAgICAgaGVpZ2h0OiAzNixcbiAgICAgIGJvcmRlclJhZGl1czogMTgsXG4gICAgfSxcblxuICAgIGxldmVsVGV4dDoge1xuICAgICAgZm9udFNpemU6IDE2LFxuICAgIH0sXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PSBBQ0NFU1NJQklMSVRZID09PT09PT09PT09PT09PT09PT1cbiAgZm9jdXNhYmxlOiB7XG4gICAgLy8gT3V0bGluZSBzZXJhIGfDqXLDqSBwYXIgbGUgc3lzdMOobWUgbmF0aWZcbiAgfSxcblxuICAvLyA9PT09PT09PT09PT09PT09PT09IEFOSU1BVElPTlMgPT09PT09PT09PT09PT09PT09PVxuICBmYWRlSW46IHtcbiAgICBvcGFjaXR5OiAxLFxuICB9LFxuXG4gIHNjYWxlTm9ybWFsOiB7XG4gICAgdHJhbnNmb3JtOiBbeyBzY2FsZTogMSB9XSxcbiAgfSxcbn0pOyJdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUFvRCxJQUFBQyxRQUFBLEdBQUFDLE9BQUEsQ0FBQUMsT0FBQSxHQUVyQ0MsdUJBQVUsQ0FBQ0MsTUFBTSxDQUFDO0VBQy9CQyxTQUFTLEVBQUU7SUFDVEMsVUFBVSxFQUFFLEVBQUU7SUFDZEMsYUFBYSxFQUFFLEVBQUU7SUFDakJDLGlCQUFpQixFQUFFLEVBQUU7SUFDckJDLHNCQUFzQixFQUFFLEVBQUU7SUFDMUJDLHVCQUF1QixFQUFFLEVBQUU7SUFDM0JDLFFBQVEsRUFBRSxVQUFVO0lBQ3BCQyxRQUFRLEVBQUU7RUFDWixDQUFDO0VBR0RDLGlCQUFpQixFQUFFO0lBQ2pCRixRQUFRLEVBQUUsVUFBVTtJQUNwQkcsR0FBRyxFQUFFLENBQUMsRUFBRTtJQUNSQyxLQUFLLEVBQUUsQ0FBQyxFQUFFO0lBQ1ZDLEtBQUssRUFBRSxFQUFFO0lBQ1RDLE1BQU0sRUFBRSxFQUFFO0lBQ1ZDLGVBQWUsRUFBRSwwQkFBMEI7SUFDM0NDLFlBQVksRUFBRTtFQUNoQixDQUFDO0VBRURDLE9BQU8sRUFBRTtJQUNQQyxhQUFhLEVBQUUsS0FBSztJQUNwQkMsVUFBVSxFQUFFLFFBQVE7SUFDcEJDLGNBQWMsRUFBRSxlQUFlO0lBQy9CWixRQUFRLEVBQUUsVUFBVTtJQUNwQmEsTUFBTSxFQUFFO0VBQ1YsQ0FBQztFQUdEQyxXQUFXLEVBQUU7SUFDWEMsSUFBSSxFQUFFO0VBQ1IsQ0FBQztFQUVEQyxhQUFhLEVBQUU7SUFDYk4sYUFBYSxFQUFFLEtBQUs7SUFDcEJDLFVBQVUsRUFBRTtFQUNkLENBQUM7RUFFRE0sU0FBUyxFQUFFO0lBQ1RDLFFBQVEsRUFBRSxFQUFFO0lBQ1pDLFdBQVcsRUFBRTtFQUNmLENBQUM7RUFFREMsUUFBUSxFQUFFO0lBQ1JGLFFBQVEsRUFBRSxFQUFFO0lBQ1pHLFVBQVUsRUFBRSxLQUFLO0lBQ2pCQyxhQUFhLEVBQUUsQ0FBQztFQUNsQixDQUFDO0VBR0RDLFlBQVksRUFBRTtJQUNaWCxjQUFjLEVBQUUsUUFBUTtJQUN4QkQsVUFBVSxFQUFFO0VBQ2QsQ0FBQztFQUdEYSxVQUFVLEVBQUFDLE1BQUEsQ0FBQUMsTUFBQTtJQUNSckIsS0FBSyxFQUFFLEVBQUU7SUFDVEMsTUFBTSxFQUFFLEVBQUU7SUFDVkUsWUFBWSxFQUFFLEVBQUU7SUFDaEJJLGNBQWMsRUFBRSxRQUFRO0lBQ3hCRCxVQUFVLEVBQUU7RUFBUSxHQUNqQmdCLHFCQUFRLENBQUNDLE1BQU0sQ0FBQztJQUNqQkMsR0FBRyxFQUFFO01BQ0hDLFdBQVcsRUFBRSxNQUFNO01BQ25CQyxZQUFZLEVBQUU7UUFBRTFCLEtBQUssRUFBRSxDQUFDO1FBQUVDLE1BQU0sRUFBRTtNQUFFLENBQUM7TUFDckMwQixhQUFhLEVBQUUsSUFBSTtNQUNuQkMsWUFBWSxFQUFFO0lBQ2hCLENBQUM7SUFDREMsT0FBTyxFQUFFO01BQ1BDLFNBQVMsRUFBRTtJQUNiO0VBQ0YsQ0FBQyxDQUFDLENBQ0g7RUFFREMsU0FBUyxFQUFFO0lBQ1RsQixRQUFRLEVBQUUsRUFBRTtJQUNaRyxVQUFVLEVBQUUsS0FBSztJQUNqQkMsYUFBYSxFQUFFLENBQUM7RUFDbEIsQ0FBQztFQUdELHlCQUF5QixFQUFFO0lBQ3pCNUIsU0FBUyxFQUFFO01BQ1RHLGlCQUFpQixFQUFFO0lBQ3JCLENBQUM7SUFFRHVCLFFBQVEsRUFBRTtNQUNSRixRQUFRLEVBQUU7SUFDWixDQUFDO0lBRURNLFVBQVUsRUFBRTtNQUNWbkIsS0FBSyxFQUFFLEVBQUU7TUFDVEMsTUFBTSxFQUFFLEVBQUU7TUFDVkUsWUFBWSxFQUFFO0lBQ2hCLENBQUM7SUFFRDRCLFNBQVMsRUFBRTtNQUNUbEIsUUFBUSxFQUFFO0lBQ1o7RUFDRixDQUFDO0VBR0RtQixTQUFTLEVBQUUsQ0FFWCxDQUFDO0VBR0RDLE1BQU0sRUFBRTtJQUNOQyxPQUFPLEVBQUU7RUFDWCxDQUFDO0VBRURDLFdBQVcsRUFBRTtJQUNYQyxTQUFTLEVBQUUsQ0FBQztNQUFFQyxLQUFLLEVBQUU7SUFBRSxDQUFDO0VBQzFCO0FBQ0YsQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119