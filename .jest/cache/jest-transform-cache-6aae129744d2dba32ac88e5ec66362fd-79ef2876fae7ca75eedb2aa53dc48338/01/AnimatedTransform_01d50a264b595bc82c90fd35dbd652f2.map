{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_get2","_inherits2","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_NativeAnimatedValidation","_NativeAnimatedHelper","_AnimatedNode","_AnimatedWithChildren2","_callSuper","t","o","e","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_superPropGet","r","p","_shallowNodes","AnimatedTransform","_AnimatedWithChildren","transforms","_this","writable","_transforms","shallowNodes","Array","isArray","ii","length","transform","key","AnimatedNode","push","__makeNative","platformConfig","nodes","node","__getValue","mapTransforms","animatedNode","__getAnimatedValue","__attach","__addChild","__detach","__removeChild","__getNativeConfig","transformsConfig","type","property","nodeTag","__getNativeTag","NativeAnimatedHelper","transformDataType","__DEV__","validateTransform","AnimatedWithChildren","mapFunction","map","result","element","object","propertyName","propertyValue"],"sources":["AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport {validateTransform} from '../../../src/private/animated/NativeAnimatedValidation';\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\ntype Transform<T = AnimatedNode> = {\n  [string]:\n    | number\n    | string\n    | T\n    | $ReadOnlyArray<number | string | T>\n    | {[string]: number | string | T},\n};\n\nexport default class AnimatedTransform extends AnimatedWithChildren {\n  // NOTE: For potentially historical reasons, some operations only operate on\n  // the first level of AnimatedNode instances. This optimizes that bevavior.\n  #shallowNodes: $ReadOnlyArray<AnimatedNode>;\n\n  _transforms: $ReadOnlyArray<Transform<>>;\n\n  constructor(transforms: $ReadOnlyArray<Transform<>>) {\n    super();\n    this._transforms = transforms;\n\n    const shallowNodes = [];\n    // NOTE: This check should not be necessary, but the types are not enforced\n    // as of this writing. This check should be hoisted to instantiation sites.\n    if (Array.isArray(transforms)) {\n      for (let ii = 0, length = transforms.length; ii < length; ii++) {\n        const transform = transforms[ii];\n        // There should be exactly one property in `transform`.\n        for (const key in transform) {\n          const value = transform[key];\n          if (value instanceof AnimatedNode) {\n            shallowNodes.push(value);\n          }\n        }\n      }\n    }\n    this.#shallowNodes = shallowNodes;\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    const nodes = this.#shallowNodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n    }\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue(): $ReadOnlyArray<Transform<any>> {\n    return mapTransforms(this._transforms, animatedNode =>\n      animatedNode.__getValue(),\n    );\n  }\n\n  __getAnimatedValue(): $ReadOnlyArray<Transform<any>> {\n    return mapTransforms(this._transforms, animatedNode =>\n      animatedNode.__getAnimatedValue(),\n    );\n  }\n\n  __attach(): void {\n    const nodes = this.#shallowNodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__addChild(this);\n    }\n  }\n\n  __detach(): void {\n    const nodes = this.#shallowNodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__removeChild(this);\n    }\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    const transformsConfig: Array<any> = [];\n\n    const transforms = this._transforms;\n    for (let ii = 0, length = transforms.length; ii < length; ii++) {\n      const transform = transforms[ii];\n      // There should be exactly one property in `transform`.\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transformsConfig.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transformsConfig.push({\n            type: 'static',\n            property: key,\n            /* $FlowFixMe[incompatible-call] - `value` can be an array or an\n               object. This is not currently handled by `transformDataType`.\n               Migrating to `TransformObject` might solve this. */\n            value: NativeAnimatedHelper.transformDataType(value),\n          });\n        }\n      }\n    }\n\n    if (__DEV__) {\n      validateTransform(transformsConfig);\n    }\n    return {\n      type: 'transform',\n      transforms: transformsConfig,\n    };\n  }\n}\n\nfunction mapTransforms<T>(\n  transforms: $ReadOnlyArray<Transform<>>,\n  mapFunction: AnimatedNode => T,\n): $ReadOnlyArray<Transform<T>> {\n  return transforms.map(transform => {\n    const result: Transform<T> = {};\n    // There should be exactly one property in `transform`.\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        result[key] = mapFunction(value);\n      } else if (Array.isArray(value)) {\n        result[key] = value.map(element =>\n          element instanceof AnimatedNode ? mapFunction(element) : element,\n        );\n      } else if (typeof value === 'object') {\n        const object: {[string]: number | string | T} = {};\n        for (const propertyName in value) {\n          const propertyValue = value[propertyName];\n          object[propertyName] =\n            propertyValue instanceof AnimatedNode\n              ? mapFunction(propertyValue)\n              : propertyValue;\n        }\n        result[key] = object;\n      } else {\n        result[key] = value;\n      }\n    }\n    return result;\n  });\n}\n"],"mappings":"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","ignoreList":[]}