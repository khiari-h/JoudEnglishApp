c4b8a74a11103c8da7fe3dcfc3b3e20e
function cov_21p6np1dte() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\6\\spellingRules6.js";
  var hash = "ad98f341d1e6ef06f0209029a7f6b02740cafb1f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\spelling\\6\\spellingRules6.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ad98f341d1e6ef06f0209029a7f6b02740cafb1f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_21p6np1dte = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21p6np1dte();
export default {
  title: "C2 Mastery Spelling Rules & Expert Patterns",
  description: "Master the most sophisticated spelling rules and archaic patterns at C2 mastery level",
  exercises: [{
    type: "spelling_rule",
    rule: "Archaic English: 'ye' was actually 'the' with different letter",
    instruction: "Apply historical knowledge: What did 'ye' actually represent?",
    correctAnswer: "the",
    hasHint: true,
    hint: "'Ye' in old texts was 'the' written with the obsolete letter thorn (þ).",
    explanation: "Ye in 'ye olde' was 'the' written with thorn (þ), which printers replaced with 'y'."
  }, {
    type: "spelling_rule",
    rule: "Middle English patterns: Double consonants in archaic words",
    instruction: "Apply archaic rule: Spell 'all' with historical double consonant",
    correctAnswer: "alle",
    hasHint: true,
    hint: "Middle English often doubled final consonants and added 'e'.",
    explanation: "Middle English: alle, olde, goode - doubled consonants with final 'e' were common."
  }, {
    type: "spelling_rule",
    rule: "Elizabethan spelling: Variable spelling in Shakespeare's era",
    instruction: "Apply Elizabethan rule: Alternative spelling of 'music' with 'k'",
    correctAnswer: "musick",
    hasHint: true,
    hint: "Elizabethan English often added 'k' to words ending in 'c'.",
    explanation: "Elizabethan variants: musick, publick, logick - added 'k' for pronunciation clarity."
  }, {
    type: "spelling_rule",
    rule: "18th century conventions: 'connexion' family spellings",
    instruction: "Apply 18th century rule: Historical spelling of 'reflection'",
    correctAnswer: "reflexion",
    hasHint: true,
    hint: "18th century preferred 'x' in place of 'ct' in certain words.",
    explanation: "18th century: reflexion, connexion, inflexion - 'x' instead of 'ct' in many words."
  }, {
    type: "spelling_rule",
    rule: "Anglo-Saxon heritage: 'sh' vs 'sc' in historical words",
    instruction: "Apply Anglo-Saxon rule: Original spelling of 'ship' with 'sc'",
    correctAnswer: "scip",
    hasHint: true,
    hint: "Anglo-Saxon used 'sc' where modern English uses 'sh'.",
    explanation: "Anglo-Saxon 'sc' became 'sh': scip→ship, sceap→sheep, scip→ship."
  }, {
    type: "spelling_rule",
    rule: "Norman French influence: 'qu' replacing 'cw'",
    instruction: "Apply Norman rule: Modern spelling of Anglo-Saxon 'cwen'",
    correctAnswer: "queen",
    hasHint: true,
    hint: "Norman French replaced Anglo-Saxon 'cw' with 'qu'.",
    explanation: "Norman influence: cwen→queen, cwic→quick, cweald→quelled."
  }, {
    type: "spelling_rule",
    rule: "Latin scholarly tradition: Maintaining classical spellings",
    instruction: "Apply scholarly rule: Proper spelling of 'sepulchre' vs 'sepulcher'",
    correctAnswer: "sepulchre",
    hasHint: true,
    hint: "British scholarly tradition maintains French-derived 're' endings.",
    explanation: "Scholarly British: sepulchre, theatre, centre - maintains French 're' endings."
  }, {
    type: "spelling_rule",
    rule: "Biblical translation patterns: King James Bible spellings",
    instruction: "Apply biblical rule: KJV spelling of 'show' in archaic form",
    correctAnswer: "shew",
    hasHint: true,
    hint: "King James Bible used archaic forms like 'shew' for 'show'.",
    explanation: "KJV archaisms: shew (show), spake (spoke), brake (broke), sware (swore)."
  }, {
    type: "spelling_rule",
    rule: "Chancery English: Legal document spellings",
    instruction: "Apply Chancery rule: Legal spelling of 'judgment' with 'e'",
    correctAnswer: "judgement",
    hasHint: true,
    hint: "British legal tradition maintains 'e' in certain words.",
    explanation: "British legal: judgement, acknowledgement - maintains 'e' in legal contexts."
  }, {
    type: "spelling_rule",
    rule: "Scots English variants: Highland spelling patterns",
    instruction: "Apply Scots rule: Scots variant of 'church'",
    correctAnswer: "kirk",
    hasHint: true,
    hint: "Scots preserved Germanic 'k' sounds where English used 'ch'.",
    explanation: "Scots variants: kirk (church), birk (birch) - preserved Germanic consonants."
  }, {
    type: "spelling_rule",
    rule: "Irish English patterns: Hiberno-English spellings",
    instruction: "Apply Irish rule: Traditional Irish spelling of 'whiskey'",
    correctAnswer: "whiskey",
    hasHint: true,
    hint: "Irish and American use 'whiskey', Scots use 'whisky'.",
    explanation: "Regional spirits: Irish/American 'whiskey', Scottish 'whisky' - different traditions."
  }, {
    type: "spelling_rule",
    rule: "Colonial American: Webster's reforms",
    instruction: "Apply Webster rule: American simplification of 'colour'",
    correctAnswer: "color",
    hasHint: true,
    hint: "Noah Webster systematically removed 'u' from 'our' endings.",
    explanation: "Webster reforms: color, honor, favor - removed 'u' from British 'our' endings."
  }, {
    type: "spelling_rule",
    rule: "Canadian English: Mixed conventions",
    instruction: "Apply Canadian rule: Canadian spelling of 'centre' vs 'theater'",
    correctAnswer: "centre",
    hasHint: true,
    hint: "Canadian uses British 'centre' but often American 'theater'.",
    explanation: "Canadian mix: centre (British), but program (American) - selective adoption."
  }, {
    type: "spelling_rule",
    rule: "Australian English: -ise vs -ize preferences",
    instruction: "Apply Australian rule: Australian spelling of 'organize'",
    correctAnswer: "organise",
    hasHint: true,
    hint: "Australian English follows British 'ise' preferences.",
    explanation: "Australian patterns: organise, realise, recognise - follows British 'ise' tradition."
  }, {
    type: "spelling_rule",
    rule: "South African English: Unique adaptations",
    instruction: "Apply South African rule: Local adaptation of 'kerb' meaning",
    correctAnswer: "kerb",
    hasHint: true,
    hint: "South African English maintains British spellings with local meanings.",
    explanation: "South African English: kerb, tyre, colour - British forms with unique local usage."
  }, {
    type: "spelling_rule",
    rule: "German compound rules: Maintaining German capitalization",
    instruction: "Apply German rule: Proper writing of 'schadenfreude'",
    correctAnswer: "Schadenfreude",
    hasHint: true,
    hint: "German nouns are capitalized, even when borrowed into English.",
    explanation: "German borrowings: Schadenfreude, Weltanschauung, Zeitgeist - maintain capitalization."
  }, {
    type: "spelling_rule",
    rule: "French accent preservation: Maintaining diacritical marks",
    instruction: "Apply French rule: Proper spelling of 'naive' with marks",
    correctAnswer: "naïve",
    hasHint: true,
    hint: "French diaeresis (¨) shows that vowels are pronounced separately.",
    explanation: "French diacritics: naïve, coöperate, Noël - diaeresis prevents vowel fusion."
  }, {
    type: "spelling_rule",
    rule: "Italian musical preservation: Musical terminology",
    instruction: "Apply Italian rule: Proper plural of 'tempo'",
    correctAnswer: "tempi",
    hasHint: true,
    hint: "Italian musical terms often maintain Italian plural forms.",
    explanation: "Italian musical plurals: tempo→tempi, soprano→soprani, libretto→libretti."
  }, {
    type: "spelling_rule",
    rule: "Spanish phonetic adaptations: Maintaining Spanish sounds",
    instruction: "Apply Spanish rule: English adaptation of Spanish 'cañón'",
    correctAnswer: "canyon",
    hasHint: true,
    hint: "Spanish 'ñ' becomes 'ny' in English to preserve sound.",
    explanation: "Spanish adaptations: cañón→canyon, niño→ninyo (informal), España→Spain."
  }, {
    type: "spelling_rule",
    rule: "Japanese romanization: Hepburn vs Kunrei systems",
    instruction: "Apply Hepburn rule: Standard romanization of 'jiu-jitsu'",
    correctAnswer: "jujitsu",
    hasHint: true,
    hint: "Hepburn romanization reflects actual pronunciation more closely.",
    explanation: "Japanese romanization: jujitsu (Hepburn), jiu-jitsu (variant), judô→judo."
  }, {
    type: "spelling_rule",
    rule: "Arabic transliteration: 'al-' prefix patterns",
    instruction: "Apply Arabic rule: Mathematical term from 'al-jabr'",
    correctAnswer: "algebra",
    hasHint: true,
    hint: "Arabic 'al-' (the) often gets incorporated into English words.",
    explanation: "Arabic 'al-' borrowings: al-jabr→algebra, al-khwarizmi→algorithm, al-kohol→alcohol."
  }, {
    type: "spelling_rule",
    rule: "Hebrew scholarly patterns: Religious terminology",
    instruction: "Apply Hebrew rule: Proper plural of 'cherub'",
    correctAnswer: "cherubim",
    hasHint: true,
    hint: "Hebrew plurals in religious contexts maintain original forms.",
    explanation: "Hebrew religious plurals: cherub→cherubim, seraph→seraphim, kibbutz→kibbutzim."
  }, {
    type: "spelling_rule",
    rule: "Russian transliteration: Cyrillic to Latin systems",
    instruction: "Apply transliteration rule: Standard spelling of царь",
    correctAnswer: "tsar",
    hasHint: true,
    hint: "Multiple transliteration systems exist: tsar, czar, tzar.",
    explanation: "Russian transliterations: царь→tsar/czar/tzar, водка→vodka, борщ→borscht."
  }, {
    type: "spelling_rule",
    rule: "Greek scholarly retention: Academic terminology",
    instruction: "Apply Greek rule: Plural of 'thesis' in academic writing",
    correctAnswer: "theses",
    hasHint: true,
    hint: "Greek academic terms maintain original plural patterns.",
    explanation: "Greek academic plurals: thesis→theses, analysis→analyses, synopsis→synopses."
  }, {
    type: "spelling_rule",
    rule: "Latin legal precision: Legal terminology maintenance",
    instruction: "Apply Latin legal rule: Proper abbreviation of 'versus'",
    correctAnswer: "v.",
    hasHint: true,
    hint: "Legal Latin maintains traditional abbreviations with periods.",
    explanation: "Legal Latin: versus→v., exempli gratia→e.g., id est→i.e., et cetera→etc."
  }, {
    type: "spelling_rule",
    rule: "Yiddish adaptation patterns: Cultural borrowings",
    instruction: "Apply Yiddish rule: English spelling of 'schlemiel'",
    correctAnswer: "schlemiel",
    hasHint: true,
    hint: "Yiddish 'sch' represents the German 'sch' sound.",
    explanation: "Yiddish borrowings: schlemiel, schmaltz, schmuck - 'sch' represents /ʃ/ sound."
  }, {
    type: "spelling_rule",
    rule: "Dutch colonial patterns: Geographic terminology",
    instruction: "Apply Dutch rule: Geographic suffix in 'Johannesburg'",
    correctAnswer: "burg",
    hasHint: true,
    hint: "Dutch 'burg' (fortified place) appears in many place names.",
    explanation: "Dutch geographic: -burg (fortified place), -dam (dam), -dorp (village)."
  }, {
    type: "spelling_rule",
    rule: "Portuguese nautical terms: Maritime vocabulary",
    instruction: "Apply Portuguese rule: Nautical term 'jangada'",
    correctAnswer: "jangada",
    hasHint: true,
    hint: "Portuguese maritime terms maintain original spellings.",
    explanation: "Portuguese nautical: jangada (raft), caravela→caravel, armada→armada."
  }, {
    type: "spelling_rule",
    rule: "Turkish linguistic borrowings: Ottoman influence",
    instruction: "Apply Turkish rule: Military term 'janissary'",
    correctAnswer: "janissary",
    hasHint: true,
    hint: "Turkish military terms adapted through French intermediaries.",
    explanation: "Turkish via French: yeniçeri→janissaire→janissary, köşk→kiosque→kiosk."
  }, {
    type: "spelling_rule",
    rule: "Persian cultural adaptations: Literary terminology",
    instruction: "Apply Persian rule: Literary form 'ghazal'",
    correctAnswer: "ghazal",
    hasHint: true,
    hint: "Persian literary terms maintain 'gh' for غ sound.",
    explanation: "Persian literary: ghazal, ruba'i→rubai, qasida - maintain Arabic script patterns."
  }, {
    type: "spelling_rule",
    rule: "Binomial nomenclature: Scientific species naming",
    instruction: "Apply Linnaean rule: Format for human species name",
    correctAnswer: "Homo sapiens",
    hasHint: true,
    hint: "Genus capitalized, species lowercase, both italicized in print.",
    explanation: "Binomial format: Genus species (Homo sapiens, Tyrannosaurus rex, Rosa gallica)."
  }, {
    type: "spelling_rule",
    rule: "Chemical nomenclature: IUPAC naming conventions",
    instruction: "Apply IUPAC rule: Systematic name for water",
    correctAnswer: "dihydrogen monoxide",
    hasHint: true,
    hint: "IUPAC uses Greek/Latin prefixes for molecular composition.",
    explanation: "IUPAC naming: H₂O = dihydrogen monoxide, CO₂ = carbon dioxide, CH₄ = methane."
  }, {
    type: "spelling_rule",
    rule: "Astronomical nomenclature: Celestial object naming",
    instruction: "Apply IAU rule: Proper designation for star in Orion",
    correctAnswer: "Alpha Orionis",
    hasHint: true,
    hint: "Stars use Greek letters + Latin genitive of constellation name.",
    explanation: "Star naming: Alpha Orionis (Betelgeuse), Alpha Centauri, Beta Persei (Algol)."
  }, {
    type: "spelling_rule",
    rule: "Geological nomenclature: Stratigraphic naming",
    instruction: "Apply geological rule: Proper capitalization of 'jurassic'",
    correctAnswer: "Jurassic",
    hasHint: true,
    hint: "Geological periods are capitalized as proper nouns.",
    explanation: "Geological periods: Jurassic, Cretaceous, Permian - all capitalized as proper nouns."
  }, {
    type: "spelling_rule",
    rule: "Medical nomenclature: Disease classification",
    instruction: "Apply medical rule: Proper form of 'Alzheimer's disease'",
    correctAnswer: "Alzheimer disease",
    hasHint: true,
    hint: "Modern medical style omits possessive apostrophe in eponyms.",
    explanation: "Medical eponyms: Alzheimer disease, Parkinson disease - modern style omits apostrophes."
  }, {
    type: "spelling_rule",
    rule: "Pharmaceutical nomenclature: Drug naming conventions",
    instruction: "Apply pharmaceutical rule: Generic vs brand name format",
    correctAnswer: "acetaminophen",
    hasHint: true,
    hint: "Generic drug names are lowercase, brand names capitalized.",
    explanation: "Drug naming: acetaminophen (generic) vs Tylenol (brand), ibuprofen vs Advil."
  }, {
    type: "spelling_rule",
    rule: "Botanical nomenclature: Plant family naming",
    instruction: "Apply botanical rule: Family name ending for roses",
    correctAnswer: "Rosaceae",
    hasHint: true,
    hint: "Plant families end in '-aceae' and are capitalized.",
    explanation: "Plant families: Rosaceae (roses), Asteraceae (daisies), Poaceae (grasses)."
  }, {
    type: "spelling_rule",
    rule: "Zoological nomenclature: Animal classification",
    instruction: "Apply zoological rule: Order name for primates",
    correctAnswer: "Primates",
    hasHint: true,
    hint: "Taxonomic orders are capitalized and often end in '-es'.",
    explanation: "Animal orders: Primates, Carnivora, Rodentia - capitalized taxonomic ranks."
  }, {
    type: "spelling_rule",
    rule: "Virus nomenclature: ICTV naming standards",
    instruction: "Apply ICTV rule: Proper writing of virus names",
    correctAnswer: "Human immunodeficiency virus",
    hasHint: true,
    hint: "Virus names are not italicized and follow descriptive patterns.",
    explanation: "Virus names: Human immunodeficiency virus (HIV), Severe acute respiratory syndrome coronavirus 2."
  }, {
    type: "spelling_rule",
    rule: "Mineral nomenclature: Crystallographic naming",
    instruction: "Apply IMA rule: Proper mineral name ending",
    correctAnswer: "feldspar",
    hasHint: true,
    hint: "Mineral names often reflect composition or properties.",
    explanation: "Mineral naming: feldspar, quartz, pyrite - often descriptive of properties or composition."
  }, {
    type: "spelling_rule",
    rule: "Enzyme nomenclature: EC classification",
    instruction: "Apply enzyme rule: Systematic naming pattern",
    correctAnswer: "oxidoreductase",
    hasHint: true,
    hint: "Enzyme names describe function and end in '-ase'.",
    explanation: "Enzyme classes: oxidoreductase, transferase, hydrolase, lyase, isomerase, ligase."
  }, {
    type: "spelling_rule",
    rule: "Genetic nomenclature: Gene naming conventions",
    instruction: "Apply genetic rule: Human gene format",
    correctAnswer: "BRCA1",
    hasHint: true,
    hint: "Human genes are written in capital letters.",
    explanation: "Gene naming: human BRCA1 (capitals), mouse Brca1 (initial capital), protein BRCA1."
  }, {
    type: "spelling_rule",
    rule: "Protein nomenclature: Structural classification",
    instruction: "Apply protein rule: Antibody class naming",
    correctAnswer: "immunoglobulin",
    hasHint: true,
    hint: "Protein names describe function and structure.",
    explanation: "Protein naming: immunoglobulin, hemoglobin, myoglobin - descriptive of function."
  }, {
    type: "spelling_rule",
    rule: "Anatomical nomenclature: Terminologia Anatomica",
    instruction: "Apply anatomical rule: Proper term for shoulder blade",
    correctAnswer: "scapula",
    hasHint: true,
    hint: "Anatomical terms use Latin names in official nomenclature.",
    explanation: "Anatomical Latin: scapula (shoulder blade), sternum (breastbone), patella (kneecap)."
  }, {
    type: "spelling_rule",
    rule: "Pharmacological nomenclature: Receptor classification",
    instruction: "Apply receptor rule: Greek letter notation",
    correctAnswer: "alpha-adrenergic",
    hasHint: true,
    hint: "Greek letters classify receptor subtypes.",
    explanation: "Receptor types: alpha-adrenergic, beta-adrenergic, mu-opioid - Greek letter classification."
  }, {
    type: "spelling_rule",
    rule: "APA citation style: Author-date format",
    instruction: "Apply APA rule: In-text citation format",
    correctAnswer: "(Smith, 2023)",
    hasHint: true,
    hint: "APA uses parentheses with author, comma, year.",
    explanation: "APA format: (Smith, 2023), (Jones & Brown, 2022) - parenthetical author-date."
  }, {
    type: "spelling_rule",
    rule: "MLA citation style: Author-page format",
    instruction: "Apply MLA rule: In-text citation with page",
    correctAnswer: "(Smith 45)",
    hasHint: true,
    hint: "MLA uses parentheses with author space page number.",
    explanation: "MLA format: (Smith 45), (Jones and Brown 78) - author space page number."
  }, {
    type: "spelling_rule",
    rule: "Chicago citation style: Footnote numbering",
    instruction: "Apply Chicago rule: Footnote reference format",
    correctAnswer: "¹",
    hasHint: true,
    hint: "Chicago uses superscript numbers for footnote references.",
    explanation: "Chicago footnotes: ¹², ¹³, ¹⁴ - superscript numbers referencing footnotes."
  }, {
    type: "spelling_rule",
    rule: "Harvard referencing: Author-date variation",
    instruction: "Apply Harvard rule: Multiple authors format",
    correctAnswer: "(Smith et al., 2023)",
    hasHint: true,
    hint: "Harvard uses 'et al.' for three or more authors.",
    explanation: "Harvard format: (Smith et al., 2023) for 3+ authors, (Smith & Jones, 2023) for two."
  }, {
    type: "spelling_rule",
    rule: "IEEE citation style: Numerical format",
    instruction: "Apply IEEE rule: Reference number format",
    correctAnswer: "[1]",
    hasHint: true,
    hint: "IEEE uses square brackets with numbers.",
    explanation: "IEEE format: [1], [2], [3] - square brackets with sequential numbers."
  }, {
    type: "spelling_rule",
    rule: "Legal citation: Bluebook format",
    instruction: "Apply Bluebook rule: Case citation format",
    correctAnswer: "Brown v. Board",
    hasHint: true,
    hint: "Legal cases use 'v.' for versus and case name formatting.",
    explanation: "Legal format: Brown v. Board of Education, Miranda v. Arizona - 'v.' for versus."
  }, {
    type: "spelling_rule",
    rule: "Scientific journals: Nature style",
    instruction: "Apply Nature rule: Reference format",
    correctAnswer: "Smith, J. Nature 123, 456 (2023)",
    hasHint: true,
    hint: "Nature uses author, journal, volume, page (year) format.",
    explanation: "Nature format: Smith, J. Nature 123, 456-460 (2023) - compressed citation style."
  }, {
    type: "spelling_rule",
    rule: "Medical journals: NEJM style",
    instruction: "Apply NEJM rule: Medical citation format",
    correctAnswer: "Smith J, Jones M. N Engl J Med 2023;123:456-60",
    hasHint: true,
    hint: "NEJM uses abbreviated journal names and semicolon separators.",
    explanation: "NEJM format: abbreviated names, semicolons, abbreviated journal titles."
  }, {
    type: "spelling_rule",
    rule: "International standards: ISO 690",
    instruction: "Apply ISO rule: Standard reference format",
    correctAnswer: "SMITH, John. Title. Edition. Place: Publisher, Year",
    hasHint: true,
    hint: "ISO 690 uses specific punctuation and capitalization patterns.",
    explanation: "ISO 690: standardized international format for bibliographic references."
  }, {
    type: "spelling_rule",
    rule: "Digital Object Identifiers: DOI format",
    instruction: "Apply DOI rule: Proper DOI format",
    correctAnswer: "https://doi.org/10.1000/123456",
    hasHint: true,
    hint: "DOIs start with 'https://doi.org/' followed by the identifier.",
    explanation: "DOI format: https://doi.org/10.1000/123456 - persistent digital identifiers."
  }, {
    type: "spelling_rule",
    rule: "ORCID identification: Researcher IDs",
    instruction: "Apply ORCID rule: Researcher identifier format",
    correctAnswer: "0000-0000-0000-0000",
    hasHint: true,
    hint: "ORCID uses four groups of four digits separated by hyphens.",
    explanation: "ORCID format: 0000-0000-0000-0000 - unique researcher identifiers."
  }, {
    type: "spelling_rule",
    rule: "Manuscript submission: Title case rules",
    instruction: "Apply title case rule: Proper capitalization of 'of'",
    correctAnswer: "The Effects of Climate Change",
    hasHint: true,
    hint: "In title case, articles, prepositions, and conjunctions are lowercase unless first/last.",
    explanation: "Title case: capitalize major words, lowercase articles/prepositions/conjunctions unless first/last."
  }, {
    type: "spelling_rule",
    rule: "Abstract writing: Keyword formatting",
    instruction: "Apply keyword rule: Proper separation of keywords",
    correctAnswer: "climate; change; temperature; ecology",
    hasHint: true,
    hint: "Keywords are typically separated by semicolons in academic writing.",
    explanation: "Keywords format: semicolon separation for academic abstracts and databases."
  }, {
    type: "spelling_rule",
    rule: "Peer review: Anonymous vs blind",
    instruction: "Apply review rule: Double-blind vs single-blind",
    correctAnswer: "double-blind",
    hasHint: true,
    hint: "Double-blind means neither author nor reviewer knows the other's identity.",
    explanation: "Review types: single-blind (reviewer anonymous), double-blind (both anonymous)."
  }, {
    type: "spelling_rule",
    rule: "Research ethics: Informed consent",
    instruction: "Apply ethics rule: Proper term for agreement",
    correctAnswer: "informed consent",
    hasHint: true,
    hint: "Two words, not hyphenated in standard usage.",
    explanation: "Ethics terminology: informed consent, institutional review board, research ethics."
  }, {
    type: "spelling_rule",
    rule: "Internet terminology: URL formatting",
    instruction: "Apply URL rule: Proper website address format",
    correctAnswer: "https://www.example.com",
    hasHint: true,
    hint: "URLs use specific protocols and punctuation without spaces.",
    explanation: "URL format: protocol://subdomain.domain.extension - no spaces, specific punctuation."
  }, {
    type: "spelling_rule",
    rule: "Social media: Hashtag conventions",
    instruction: "Apply hashtag rule: Proper format for trending topics",
    correctAnswer: "#ClimateChange",
    hasHint: true,
    hint: "Hashtags use # symbol with no spaces, often CamelCase for readability.",
    explanation: "Hashtag format: #ClimateChange, #COVID19 - no spaces, CamelCase for clarity."
  }, {
    type: "spelling_rule",
    rule: "Programming: Variable naming conventions",
    instruction: "Apply coding rule: JavaScript variable format",
    correctAnswer: "firstName",
    hasHint: true,
    hint: "JavaScript uses camelCase for variable names.",
    explanation: "Programming naming: camelCase (JavaScript), snake_case (Python), kebab-case (CSS)."
  }, {
    type: "spelling_rule",
    rule: "Email formatting: Address conventions",
    instruction: "Apply email rule: Proper email format",
    correctAnswer: "user@domain.com",
    hasHint: true,
    hint: "Email format: username@domain.extension with specific punctuation.",
    explanation: "Email format: local-part@domain - @ symbol separates user from domain."
  }, {
    type: "spelling_rule",
    rule: "File naming: Digital conventions",
    instruction: "Apply file rule: Proper filename format",
    correctAnswer: "document-name.pdf",
    hasHint: true,
    hint: "File names avoid spaces, use hyphens or underscores, include extension.",
    explanation: "File naming: use-hyphens-or_underscores.extension - avoid spaces in filenames."
  }, {
    type: "spelling_rule",
    rule: "Cryptocurrency: Digital currency naming",
    instruction: "Apply crypto rule: Proper Bitcoin abbreviation",
    correctAnswer: "BTC",
    hasHint: true,
    hint: "Cryptocurrency symbols are typically three capital letters.",
    explanation: "Crypto symbols: BTC (Bitcoin), ETH (Ethereum), USD (US Dollar) - three-letter codes."
  }, {
    type: "spelling_rule",
    rule: "API documentation: Parameter naming",
    instruction: "Apply API rule: REST endpoint format",
    correctAnswer: "/api/v1/users",
    hasHint: true,
    hint: "API endpoints use forward slashes and lowercase with version numbers.",
    explanation: "API format: /api/v1/resource - structured paths with version control."
  }, {
    type: "spelling_rule",
    rule: "Database design: Table naming",
    instruction: "Apply database rule: SQL table name format",
    correctAnswer: "user_accounts",
    hasHint: true,
    hint: "Database tables typically use snake_case naming convention.",
    explanation: "Database naming: snake_case for tables, camelCase for some systems - consistency key."
  }, {
    type: "spelling_rule",
    rule: "Cloud computing: Service naming",
    instruction: "Apply cloud rule: AWS service abbreviation",
    correctAnswer: "S3",
    hasHint: true,
    hint: "Cloud services often use alphanumeric abbreviations.",
    explanation: "Cloud services: S3 (Simple Storage Service), EC2 (Elastic Compute Cloud) - abbreviated names."
  }, {
    type: "spelling_rule",
    rule: "Machine learning: Algorithm naming",
    instruction: "Apply ML rule: Neural network type",
    correctAnswer: "CNN",
    hasHint: true,
    hint: "ML algorithms use acronyms for complex names.",
    explanation: "ML acronyms: CNN (Convolutional Neural Network), RNN (Recurrent Neural Network)."
  }, {
    type: "spelling_rule",
    rule: "Cybersecurity: Threat classification",
    instruction: "Apply security rule: Malware type naming",
    correctAnswer: "ransomware",
    hasHint: true,
    hint: "Security terms often compound existing words.",
    explanation: "Security terms: ransomware, spyware, adware - compound words describing function."
  }, {
    type: "spelling_rule",
    rule: "Blockchain: Technology terminology",
    instruction: "Apply blockchain rule: Distributed ledger term",
    correctAnswer: "smart contract",
    hasHint: true,
    hint: "Blockchain terms often describe functionality.",
    explanation: "Blockchain terms: smart contract, distributed ledger, consensus mechanism - descriptive compounds."
  }, {
    type: "spelling_rule",
    rule: "Artificial Intelligence: AI terminology",
    instruction: "Apply AI rule: Learning type classification",
    correctAnswer: "unsupervised learning",
    hasHint: true,
    hint: "AI terms describe learning methods and data requirements.",
    explanation: "AI learning: supervised, unsupervised, reinforcement learning - classification by method."
  }, {
    type: "spelling_rule",
    rule: "Internet of Things: IoT naming",
    instruction: "Apply IoT rule: Connected device terminology",
    correctAnswer: "edge computing",
    hasHint: true,
    hint: "IoT terms describe network architecture and data processing.",
    explanation: "IoT terms: edge computing, fog computing, cloud computing - describe processing locations."
  }, {
    type: "spelling_rule",
    rule: "Quantum computing: Quantum terminology",
    instruction: "Apply quantum rule: Basic quantum unit",
    correctAnswer: "qubit",
    hasHint: true,
    hint: "Quantum terms often blend 'quantum' with classical computing terms.",
    explanation: "Quantum terms: qubit (quantum bit), qubyte (quantum byte) - quantum computing units."
  }, {
    type: "spelling_rule",
    rule: "Legal drafting: Contract terminology",
    instruction: "Apply legal rule: Whereas clause format",
    correctAnswer: "WHEREAS",
    hasHint: true,
    hint: "Legal documents traditionally capitalize 'WHEREAS' in recital clauses.",
    explanation: "Legal format: WHEREAS clauses in contracts are traditionally capitalized."
  }, {
    type: "spelling_rule",
    rule: "Medical records: Clinical abbreviations",
    instruction: "Apply medical rule: Patient history abbreviation",
    correctAnswer: "Hx",
    hasHint: true,
    hint: "Medical abbreviations often use 'x' to represent 'history'.",
    explanation: "Medical abbreviations: Hx (history), Dx (diagnosis), Tx (treatment), Rx (prescription)."
  }, {
    type: "spelling_rule",
    rule: "Financial reporting: Accounting terms",
    instruction: "Apply accounting rule: Earnings abbreviation",
    correctAnswer: "EBITDA",
    hasHint: true,
    hint: "Financial acronyms describe specific calculation methods.",
    explanation: "Financial terms: EBITDA (Earnings Before Interest, Taxes, Depreciation, Amortization)."
  }, {
    type: "spelling_rule",
    rule: "Engineering documentation: Technical specifications",
    instruction: "Apply engineering rule: Tolerance notation",
    correctAnswer: "±0.005",
    hasHint: true,
    hint: "Engineering uses plus-minus symbol for dimensional tolerances.",
    explanation: "Engineering notation: ±0.005 (plus or minus), ∅10.5 (diameter), 45° (angle)."
  }, {
    type: "spelling_rule",
    rule: "Architectural drawings: Blueprint conventions",
    instruction: "Apply architectural rule: Scale notation",
    correctAnswer: "1:100",
    hasHint: true,
    hint: "Architectural scales use ratio notation with colon.",
    explanation: "Architectural scales: 1:100, 1:50, 1:200 - ratio of drawing to actual size."
  }, {
    type: "spelling_rule",
    rule: "Scientific notation: Exponential format",
    instruction: "Apply scientific rule: Large number notation",
    correctAnswer: "1.23 × 10⁶",
    hasHint: true,
    hint: "Scientific notation uses coefficient times 10 to a power.",
    explanation: "Scientific notation: 1.23 × 10⁶ (1,230,000) - coefficient × 10^exponent."
  }, {
    type: "spelling_rule",
    rule: "Pharmaceutical labeling: Drug concentration",
    instruction: "Apply pharmaceutical rule: Concentration format",
    correctAnswer: "250mg/5mL",
    hasHint: true,
    hint: "Drug concentrations show amount per volume without spaces.",
    explanation: "Pharmaceutical format: 250mg/5mL, 10mg/kg - concentration and dosing ratios."
  }, {
    type: "spelling_rule",
    rule: "Aviation communication: Flight terminology",
    instruction: "Apply aviation rule: Altitude format",
    correctAnswer: "FL350",
    hasHint: true,
    hint: "Flight levels use FL followed by hundreds of feet.",
    explanation: "Aviation terms: FL350 (35,000 feet), runway 09L/27R - standardized format."
  }, {
    type: "spelling_rule",
    rule: "Maritime navigation: Coordinate format",
    instruction: "Apply maritime rule: GPS coordinate format",
    correctAnswer: "41°24′12.2″N",
    hasHint: true,
    hint: "Navigation uses degrees, minutes, seconds with direction indicators.",
    explanation: "Maritime coordinates: 41°24′12.2″N 2°10′26.5″E - degrees, minutes, seconds, direction."
  }, {
    type: "spelling_rule",
    rule: "Geological survey: Rock formation naming",
    instruction: "Apply geological rule: Formation name format",
    correctAnswer: "Morrison Formation",
    hasHint: true,
    hint: "Geological formations are capitalized proper nouns.",
    explanation: "Geological naming: Morrison Formation, Navajo Sandstone - capitalized formal names."
  }, {
    type: "spelling_rule",
    rule: "Military designation: Equipment naming",
    instruction: "Apply military rule: Aircraft designation",
    correctAnswer: "F-22A",
    hasHint: true,
    hint: "Military aircraft use letter-number-letter designation system.",
    explanation: "Military designations: F-22A (fighter), C-130 (cargo), AH-64 (attack helicopter)."
  }, {
    type: "spelling_rule",
    rule: "Horticultural classification: Cultivar naming",
    instruction: "Apply horticultural rule: Plant variety format",
    correctAnswer: "Rosa 'Peace'",
    hasHint: true,
    hint: "Cultivar names use single quotes around the variety name.",
    explanation: "Horticultural format: Rosa 'Peace', Malus 'Granny Smith' - quotes for cultivars."
  }, {
    type: "spelling_rule",
    rule: "Wine classification: Appellation format",
    instruction: "Apply wine rule: French wine region format",
    correctAnswer: "Appellation d'Origine Contrôlée",
    hasHint: true,
    hint: "French wine classifications maintain original French spelling and accents.",
    explanation: "Wine terms: AOC (Appellation d'Origine Contrôlée), DOC, AVA - classification systems."
  }, {
    type: "spelling_rule",
    rule: "Culinary arts: French technique naming",
    instruction: "Apply culinary rule: Cooking method format",
    correctAnswer: "sous vide",
    hasHint: true,
    hint: "French culinary terms maintain original spelling and spacing.",
    explanation: "Culinary French: sous vide, mise en place, chef de cuisine - original French forms."
  }, {
    type: "spelling_rule",
    rule: "Museum cataloging: Artwork attribution",
    instruction: "Apply museum rule: Artist attribution format",
    correctAnswer: "attributed to",
    hasHint: true,
    hint: "Museum attributions use specific phrases for uncertain authorship.",
    explanation: "Attribution terms: attributed to, after, circle of, studio of - degrees of certainty."
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,