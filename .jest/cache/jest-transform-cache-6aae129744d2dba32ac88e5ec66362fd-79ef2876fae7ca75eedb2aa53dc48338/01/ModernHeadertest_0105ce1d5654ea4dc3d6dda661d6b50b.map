{"version":3,"names":["_getJestObj","mock","LinearGradient","_ref","children","props","_objectWithoutProperties2","default","_excluded","_require","require","View","_jsxRuntime","jsx","Object","assign","_interopRequireDefault","_react","_reactNative","_ModernHeader","_ThemeContext","_require2","jest","describe","mockThemeContext","colors","surface","text","primary","renderWithTheme","component","themeValue","arguments","length","undefined","render","ThemeContext","Provider","value","it","_renderWithTheme","getByText","expect","toBeTruthy","_renderWithTheme2","_renderWithTheme3","level","_renderWithTheme4","customColor","_renderWithTheme5","levelColor","_renderWithTheme6","_render","incompleteTheme","_renderWithTheme7","levels","expectedDisplays","forEach","index","_renderWithTheme8","unmount","_renderWithTheme9","_renderWithTheme0","_renderWithTheme1","_renderWithTheme10"],"sources":["ModernHeader.test.js"],"sourcesContent":["// __tests__/screens/Dashboard/components/ModernHeader.test.js\nimport React from 'react';\nimport { render } from '@testing-library/react-native';\nimport ModernHeader from '../../../../src/screens/Dashboard/components/ModernHeader';\nimport { ThemeContext } from '../../../../src/contexts/ThemeContext';\n\n// Mock du LinearGradient\njest.mock('expo-linear-gradient', () => ({\n  LinearGradient: ({ children, ...props }) => {\n    const { View } = require('react-native');\n    return <View {...props}>{children}</View>;\n  }\n}));\n\ndescribe('ModernHeader', () => {\n  const mockThemeContext = {\n    colors: {\n      surface: '#FFFFFF',\n      text: '#1F2937',\n      primary: '#3B82F6'\n    }\n  };\n\n  const renderWithTheme = (component, themeValue = mockThemeContext) => {\n    return render(\n      <ThemeContext.Provider value={themeValue}>\n        {component}\n      </ThemeContext.Provider>\n    );\n  };\n\n  it('devrait afficher le logo JOUD avec l\\'emoji', () => {\n    const { getByText } = renderWithTheme(<ModernHeader />);\n    \n    expect(getByText('ðŸŽ“')).toBeTruthy();\n    expect(getByText('JOUD')).toBeTruthy();\n  });\n\n  it('devrait afficher le niveau par dÃ©faut (1)', () => {\n    const { getByText } = renderWithTheme(<ModernHeader />);\n    \n    expect(getByText('1')).toBeTruthy();\n  });\n\n  it('devrait afficher le niveau spÃ©cifiÃ©', () => {\n    const { getByText } = renderWithTheme(<ModernHeader level=\"3\" />);\n    \n    expect(getByText('3')).toBeTruthy();\n  });\n\n  it('devrait afficher \"B\" pour le niveau bonus', () => {\n    const { getByText } = renderWithTheme(<ModernHeader level=\"bonus\" />);\n    \n    expect(getByText('B')).toBeTruthy();\n  });\n\n  it('devrait utiliser la couleur de niveau spÃ©cifiÃ©e', () => {\n    const customColor = '#FF5722';\n    const { getByText } = renderWithTheme(\n      <ModernHeader level=\"2\" levelColor={customColor} />\n    );\n    \n    // VÃ©rifier que le composant se rend sans erreur avec la couleur personnalisÃ©e\n    expect(getByText('2')).toBeTruthy();\n    expect(getByText('JOUD')).toBeTruthy();\n  });\n\n  it('devrait utiliser la couleur par dÃ©faut si aucune couleur n\\'est spÃ©cifiÃ©e', () => {\n    const { getByText } = renderWithTheme(<ModernHeader level=\"1\" />);\n    \n    expect(getByText('1')).toBeTruthy();\n    expect(getByText('JOUD')).toBeTruthy();\n  });\n\n  it('devrait fonctionner sans contexte de thÃ¨me', () => {\n    const { getByText } = render(<ModernHeader level=\"4\" />);\n    \n    expect(getByText('ðŸŽ“')).toBeTruthy();\n    expect(getByText('JOUD')).toBeTruthy();\n    expect(getByText('4')).toBeTruthy();\n  });\n\n  it('devrait utiliser les couleurs par dÃ©faut si le contexte de thÃ¨me est incomplet', () => {\n    const incompleteTheme = {\n      colors: {\n        // surface manquant\n        text: '#1F2937'\n      }\n    };\n\n    const { getByText } = renderWithTheme(\n      <ModernHeader level=\"5\" />, \n      incompleteTheme\n    );\n    \n    expect(getByText('5')).toBeTruthy();\n    expect(getByText('JOUD')).toBeTruthy();\n  });\n\n  it('devrait afficher tous les niveaux possibles correctement', () => {\n    const levels = ['1', '2', '3', '4', '5', '6', 'bonus'];\n    const expectedDisplays = ['1', '2', '3', '4', '5', '6', 'B'];\n\n    levels.forEach((level, index) => {\n      const { getByText, unmount } = renderWithTheme(\n        <ModernHeader level={level} />\n      );\n      \n      expect(getByText(expectedDisplays[index])).toBeTruthy();\n      expect(getByText('JOUD')).toBeTruthy();\n      expect(getByText('ðŸŽ“')).toBeTruthy();\n      \n      unmount();\n    });\n  });\n\n  it('devrait avoir la structure correcte avec les sections gauche et droite', () => {\n    const { getByText } = renderWithTheme(<ModernHeader level=\"2\" />);\n    \n    // Section gauche : Logo\n    expect(getByText('ðŸŽ“')).toBeTruthy();\n    expect(getByText('JOUD')).toBeTruthy();\n    \n    // Section droite : Badge niveau\n    expect(getByText('2')).toBeTruthy();\n  });\n\n  it('devrait gÃ©rer les props undefined gracieusement', () => {\n    const { getByText } = renderWithTheme(\n      <ModernHeader level={undefined} levelColor={undefined} />\n    );\n    \n    // Devrait utiliser les valeurs par dÃ©faut\n    expect(getByText('1')).toBeTruthy(); // niveau par dÃ©faut\n    expect(getByText('JOUD')).toBeTruthy();\n    expect(getByText('ðŸŽ“')).toBeTruthy();\n  });\n\n  it('devrait gÃ©rer les niveaux non-standard', () => {\n    // Test avec un niveau qui n'est pas dans la liste standard\n    const { getByText } = renderWithTheme(<ModernHeader level=\"7\" />);\n    \n    expect(getByText('7')).toBeTruthy(); // Devrait afficher tel quel\n    expect(getByText('JOUD')).toBeTruthy();\n  });\n\n  it('devrait appliquer le LinearGradient avec les bonnes props', () => {\n    const customColor = '#8B5CF6';\n    const { getByText } = renderWithTheme(\n      <ModernHeader level=\"3\" levelColor={customColor} />\n    );\n    \n    // VÃ©rifier que le composant se rend correctement\n    expect(getByText('3')).toBeTruthy();\n    expect(getByText('JOUD')).toBeTruthy();\n  });\n});"],"mappings":"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","ignoreList":[]}