{"version":3,"names":["_getJestObj","mock","mockLockService","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_LockContext","_jsxRuntime","_require","jest","isEnabled","fn","verifyPin","disableLock","enableLock","Consumer","_useLock","useLock","isLocked","unlockWithPin","disable","enable","isLoading","jsxs","Fragment","children","jsx","testID","String","onPress","TestText","_ref","TestButton","_ref2","describe","beforeEach","clearAllMocks","mockResolvedValue","ok","it","default","ui","render","LockProvider","waitFor","expect","queryByTestId","toBeNull","getByTestId","props","toBe","act","fireEvent","press","mockResolvedValueOnce","reason","result","toEqual"],"sources":["LockContext.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render, act, fireEvent, waitFor } from '@testing-library/react-native';\r\nimport { LockProvider, useLock } from '../../src/contexts/LockContext';\r\n\r\n// 1. Déplacer le mock en haut du fichier pour qu'il soit exécuté en premier\r\nconst mockLockService = {\r\n  isEnabled: jest.fn(),\r\n  verifyPin: jest.fn(),\r\n  disableLock: jest.fn(),\r\n  enableLock: jest.fn(),\r\n};\r\njest.mock('../../src/services/lockService', () => mockLockService);\r\n\r\nconst Consumer = () => {\r\n  const { isEnabled, isLocked, unlockWithPin, disable, enable, isLoading } = useLock();\r\n  return (\r\n    <>\r\n      {isLoading && <text testID=\"loading\">Loading...</text>}\r\n      <text testID=\"enabled\">{String(isEnabled)}</text>\r\n      <text testID=\"locked\">{String(isLocked)}</text>\r\n      <button testID=\"unlock-correct-pin\" onPress={() => unlockWithPin('1234')} />\r\n      <button testID=\"unlock-wrong-pin\" onPress={() => unlockWithPin('0000')} />\r\n      <button testID=\"unlock-lockout\" onPress={() => unlockWithPin('0000')} />\r\n      <button testID=\"disable\" onPress={disable} />\r\n      <button testID=\"enable\" onPress={enable} />\r\n    </>\r\n  );\r\n};\r\n\r\n// Tiny shims to avoid importing RN primitives\r\nconst TestText = ({ children, testID }) => (<text testID={testID}>{children}</text>);\r\nconst TestButton = ({ onPress, testID }) => (<button testID={testID} onPress={onPress} />);\r\n\r\ndescribe('LockContext', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    // Par défaut, le verrou est activé\r\n    mockLockService.isEnabled.mockResolvedValue(true);\r\n    // Par défaut, le PIN est correct\r\n    mockLockService.verifyPin.mockResolvedValue({ ok: true });\r\n    mockLockService.disableLock.mockResolvedValue(true);\r\n    mockLockService.enableLock.mockResolvedValue(true);\r\n  });\r\n\r\n  // Test 1: Comportement initial (cas de succès)\r\n  it('initializes locked when enabled, unlocks with correct PIN, and can disable', async () => {\r\n    const ui = render(<LockProvider><Consumer /></LockProvider>);\r\n\r\n    // Attendre le chargement initial\r\n    await waitFor(() => expect(ui.queryByTestId('loading')).toBeNull());\r\n    \r\n    // Vérifier l'état initial\r\n    expect(ui.getByTestId('enabled').props.children).toBe('true');\r\n    expect(ui.getByTestId('locked').props.children).toBe('true');\r\n\r\n    // Déverrouillage réussi\r\n    await act(async () => {\r\n      fireEvent.press(ui.getByTestId('unlock-correct-pin'));\r\n    });\r\n    expect(ui.getByTestId('locked').props.children).toBe('false');\r\n\r\n    // Désactivation du verrou\r\n    await act(async () => {\r\n      fireEvent.press(ui.getByTestId('disable'));\r\n    });\r\n    expect(ui.getByTestId('enabled').props.children).toBe('false');\r\n  });\r\n\r\n  // Test 2: Gérer l'état initial désactivé\r\n  it('initializes unlocked when not enabled', async () => {\r\n    mockLockService.isEnabled.mockResolvedValueOnce(false);\r\n    const ui = render(<LockProvider><Consumer /></LockProvider>);\r\n\r\n    await waitFor(() => expect(ui.queryByTestId('loading')).toBeNull());\r\n\r\n    expect(ui.getByTestId('enabled').props.children).toBe('false');\r\n    expect(ui.getByTestId('locked').props.children).toBe('false');\r\n  });\r\n\r\n  // Test 3: Gérer le PIN incorrect\r\n  it('should not unlock with an incorrect PIN', async () => {\r\n    // 2. Mock du PIN incorrect AVANT le rendu\r\n    mockLockService.verifyPin.mockResolvedValue({ ok: false });\r\n    const ui = render(<LockProvider><Consumer /></LockProvider>);\r\n    await waitFor(() => expect(ui.queryByTestId('loading')).toBeNull());\r\n\r\n    expect(ui.getByTestId('locked').props.children).toBe('true');\r\n\r\n    await act(async () => {\r\n      fireEvent.press(ui.getByTestId('unlock-wrong-pin'));\r\n    });\r\n    // Le verrou ne doit pas changer d'état\r\n    expect(ui.getByTestId('locked').props.children).toBe('true');\r\n  });\r\n\r\n  // Test 4: Gérer la raison \"lockout\"\r\n  it('should return lockout reason when pin verification fails with lockout', async () => {\r\n    mockLockService.verifyPin.mockResolvedValue({ ok: false, reason: 'lockout' });\r\n    const ui = render(<LockProvider><Consumer /></LockProvider>);\r\n    await waitFor(() => expect(ui.queryByTestId('loading')).toBeNull());\r\n\r\n    let result;\r\n    await act(async () => {\r\n      // capture le résultat de l'appel à unlockWithPin pour le vérifier\r\n      result = await ui.getByTestId('unlock-lockout').props.onPress();\r\n    });\r\n\r\n    expect(ui.getByTestId('locked').props.children).toBe('true');\r\n    expect(result).toEqual({ ok: false, reason: 'lockout' });\r\n  });\r\n\r\n  // Test 5: Activer le verrouillage\r\n  it('should enable the lock', async () => {\r\n    mockLockService.isEnabled.mockResolvedValueOnce(false);\r\n    const ui = render(<LockProvider><Consumer /></LockProvider>);\r\n    await waitFor(() => expect(ui.queryByTestId('loading')).toBeNull());\r\n\r\n    // Vérifier l'état initial désactivé\r\n    expect(ui.getByTestId('enabled').props.children).toBe('false');\r\n    expect(ui.getByTestId('locked').props.children).toBe('false');\r\n\r\n    await act(async () => {\r\n      fireEvent.press(ui.getByTestId('enable'));\r\n    });\r\n\r\n    // Vérifier que l'état a basculé\r\n    expect(ui.getByTestId('enabled').props.children).toBe('true');\r\n    expect(ui.getByTestId('locked').props.children).toBe('true');\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}