{"version":3,"names":["_reactNative","require","_propTypes","_interopRequireDefault","_HeroCard","_RevealButton","_ContentSection","_style","_jsxRuntime","VocabularyWordCard","_ref","word","translation","definition","example","showTranslation","onToggleTranslation","_ref$levelColor","levelColor","styles","createStyles","jsxs","View","style","container","children","jsx","default","content","fontSize","showUnderline","isRevealed","revealedContent","revealText","hideText","onToggle","title","isItalic","backgroundColor","propTypes","PropTypes","string","isRequired","bool","func","defaultProps","_default","exports"],"sources":["index.js"],"sourcesContent":["// VocabularyWordCard/index.js - VERSION REFACTORIS√âE avec PropTypes (280 ‚Üí 50 lignes)\r\n\r\nimport { View } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport HeroCard from \"../../../../components/ui/HeroCard\";\r\nimport RevealButton from \"../../../../components/ui/RevealButton\";\r\nimport ContentSection from \"../../../../components/ui/ContentSection\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * üèÜ VocabularyWordCard - Version Refactoris√©e avec composants g√©n√©riques\r\n * 280 lignes ‚Üí 50 lignes (-82% de code)\r\n * M√™me qualit√© visuelle, architecture optimis√©e\r\n * \r\n * @param {string} word - Mot principal √† afficher\r\n * @param {string} translation - Traduction du mot\r\n * @param {string} definition - D√©finition (optionnel)\r\n * @param {string} example - Exemple d'utilisation\r\n * @param {boolean} showTranslation - √âtat d'affichage de la traduction\r\n * @param {function} onToggleTranslation - Fonction pour toggle traduction\r\n * @param {string} levelColor - Couleur du niveau\r\n */\r\nconst VocabularyWordCard = ({\r\n  word,\r\n  translation,\r\n  definition,\r\n  example,\r\n  showTranslation,\r\n  onToggleTranslation,\r\n  levelColor = \"#5E60CE\",\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* üéØ HERO SECTION - Le mot principal */}\r\n      <HeroCard \r\n        content={word}\r\n        fontSize={42}  // Taille spectaculaire pour mots\r\n        levelColor={levelColor}\r\n        showUnderline\r\n      />\r\n      \r\n      {/* üîò BOUTON REVEAL/HIDE avec glassmorphism */}\r\n      <RevealButton\r\n        isRevealed={showTranslation}\r\n        revealedContent={translation}\r\n        revealText=\"Reveal Translation\"\r\n        hideText=\"Hide Translation\"\r\n        onToggle={onToggleTranslation}\r\n        levelColor={levelColor}\r\n      />\r\n      \r\n      {/* üìù SECTION EXEMPLE */}\r\n      {example && (\r\n        <ContentSection\r\n          title=\"Example\"\r\n          content={example}\r\n          levelColor={levelColor}\r\n          isItalic\r\n          backgroundColor=\"#FAFBFC\"\r\n        />\r\n      )}\r\n\r\n      {/* üìù SECTION D√âFINITION (si disponible) */}\r\n      {definition && (\r\n        <ContentSection\r\n          title=\"Definition\"\r\n          content={definition}\r\n          levelColor={levelColor}\r\n          backgroundColor=\"#F8F9FA\"\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\n// ‚úÖ PropTypes - Corrige toutes les erreurs de validation\r\nVocabularyWordCard.propTypes = {\r\n  word: PropTypes.string.isRequired,\r\n  translation: PropTypes.string.isRequired,\r\n  definition: PropTypes.string,\r\n  example: PropTypes.string,\r\n  showTranslation: PropTypes.bool.isRequired,\r\n  onToggleTranslation: PropTypes.func.isRequired,\r\n  levelColor: PropTypes.string,\r\n};\r\n\r\n// ‚úÖ Valeurs par d√©faut\r\nVocabularyWordCard.defaultProps = {\r\n  definition: null,\r\n  example: null,\r\n  levelColor: \"#5E60CE\",\r\n};\r\n\r\nexport default VocabularyWordCard;"],"mappings":";;;;;AAEA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,SAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,aAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,eAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,MAAA,GAAAJ,sBAAA,CAAAF,OAAA;AAAmC,IAAAO,WAAA,GAAAP,OAAA;AAenC,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAQlB;EAAA,IAPJC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IACXC,UAAU,GAAAH,IAAA,CAAVG,UAAU;IACVC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;IACPC,eAAe,GAAAL,IAAA,CAAfK,eAAe;IACfC,mBAAmB,GAAAN,IAAA,CAAnBM,mBAAmB;IAAAC,eAAA,GAAAP,IAAA,CACnBQ,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,SAAS,GAAAA,eAAA;EAEtB,IAAME,MAAM,GAAG,IAAAC,cAAY,EAACF,UAAU,CAAC;EAEvC,OACE,IAAAV,WAAA,CAAAa,IAAA,EAACrB,YAAA,CAAAsB,IAAI;IAACC,KAAK,EAAEJ,MAAM,CAACK,SAAU;IAAAC,QAAA,GAE5B,IAAAjB,WAAA,CAAAkB,GAAA,EAACtB,SAAA,CAAAuB,OAAQ;MACPC,OAAO,EAAEjB,IAAK;MACdkB,QAAQ,EAAE,EAAG;MACbX,UAAU,EAAEA,UAAW;MACvBY,aAAa;IAAA,CACd,CAAC,EAGF,IAAAtB,WAAA,CAAAkB,GAAA,EAACrB,aAAA,CAAAsB,OAAY;MACXI,UAAU,EAAEhB,eAAgB;MAC5BiB,eAAe,EAAEpB,WAAY;MAC7BqB,UAAU,EAAC,oBAAoB;MAC/BC,QAAQ,EAAC,kBAAkB;MAC3BC,QAAQ,EAAEnB,mBAAoB;MAC9BE,UAAU,EAAEA;IAAW,CACxB,CAAC,EAGDJ,OAAO,IACN,IAAAN,WAAA,CAAAkB,GAAA,EAACpB,eAAA,CAAAqB,OAAc;MACbS,KAAK,EAAC,SAAS;MACfR,OAAO,EAAEd,OAAQ;MACjBI,UAAU,EAAEA,UAAW;MACvBmB,QAAQ;MACRC,eAAe,EAAC;IAAS,CAC1B,CACF,EAGAzB,UAAU,IACT,IAAAL,WAAA,CAAAkB,GAAA,EAACpB,eAAA,CAAAqB,OAAc;MACbS,KAAK,EAAC,YAAY;MAClBR,OAAO,EAAEf,UAAW;MACpBK,UAAU,EAAEA,UAAW;MACvBoB,eAAe,EAAC;IAAS,CAC1B,CACF;EAAA,CACG,CAAC;AAEX,CAAC;AAGD7B,kBAAkB,CAAC8B,SAAS,GAAG;EAC7B5B,IAAI,EAAE6B,kBAAS,CAACC,MAAM,CAACC,UAAU;EACjC9B,WAAW,EAAE4B,kBAAS,CAACC,MAAM,CAACC,UAAU;EACxC7B,UAAU,EAAE2B,kBAAS,CAACC,MAAM;EAC5B3B,OAAO,EAAE0B,kBAAS,CAACC,MAAM;EACzB1B,eAAe,EAAEyB,kBAAS,CAACG,IAAI,CAACD,UAAU;EAC1C1B,mBAAmB,EAAEwB,kBAAS,CAACI,IAAI,CAACF,UAAU;EAC9CxB,UAAU,EAAEsB,kBAAS,CAACC;AACxB,CAAC;AAGDhC,kBAAkB,CAACoC,YAAY,GAAG;EAChChC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,IAAI;EACbI,UAAU,EAAE;AACd,CAAC;AAAC,IAAA4B,QAAA,GAAAC,OAAA,CAAApB,OAAA,GAEalB,kBAAkB","ignoreList":[]}