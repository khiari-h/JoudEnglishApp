{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","isFirstReactRender","isReactRendering","_react","getCurrentReactOwner","_ReactSharedInternals","ReactSharedInternals","React","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","ReactCurrentOwner","current","currentOwner","alternate"],"sources":["reactUtils.ts"],"sourcesContent":["'use strict';\nimport React from 'react';\n\nfunction getCurrentReactOwner() {\n  const ReactSharedInternals =\n    // @ts-expect-error React secret internals aren't typed\n    React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED ||\n    // @ts-expect-error React secret internals aren't typed\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n  return ReactSharedInternals?.ReactCurrentOwner?.current;\n}\n\nexport function isReactRendering() {\n  return !!getCurrentReactOwner();\n}\n\nexport function isFirstReactRender() {\n  const currentOwner = getCurrentReactOwner();\n  // alternate is not null only after the first render and stores all the\n  // data from the previous component render\n  return currentOwner && !currentOwner?.alternate;\n}\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,kBAAA,GAAAA,kBAAA;AAAAF,OAAA,CAAAG,gBAAA,GAAAA,gBAAA;AACb,IAAAC,MAAA,GAAAR,sBAAA,CAAAC,OAAA;AAEA,SAASQ,oBAAoBA,CAAA,EAAG;EAAA,IAAAC,qBAAA;EAC9B,IAAMC,oBAAoB,GAExBC,cAAK,CAACC,kDAAkD,IAExDD,cAAK,CAACE,+DAA+D;EACvE,OAAOH,oBAAoB,aAAAD,qBAAA,GAApBC,oBAAoB,CAAEI,iBAAiB,qBAAvCL,qBAAA,CAAyCM,OAAO;AACzD;AAEO,SAAST,gBAAgBA,CAAA,EAAG;EACjC,OAAO,CAAC,CAACE,oBAAoB,CAAC,CAAC;AACjC;AAEO,SAASH,kBAAkBA,CAAA,EAAG;EACnC,IAAMW,YAAY,GAAGR,oBAAoB,CAAC,CAAC;EAG3C,OAAOQ,YAAY,IAAI,EAACA,YAAY,YAAZA,YAAY,CAAEC,SAAS;AACjD","ignoreList":[]}