f207879ce97756ee1977a7bdc71a4be1
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _ProgressCard = _interopRequireDefault(require("../../../../components/ui/ProgressCard"));
var _vocabularyStats = require("../../../../utils/vocabulary/vocabularyStats");
var _jsxRuntime = require("react/jsx-runtime");
function cov_2aahjkxngn() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyProgress\\index.js";
  var hash = "850af4ad8a2e6434c06053f1ad4214e1ff9bf512";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyProgress\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 77,
          column: 1
        }
      },
      "1": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "2": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "3": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 39
        }
      },
      "4": {
        start: {
          line: 37,
          column: 11
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "5": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 38
        }
      },
      "6": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 14
        }
      },
      "7": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 34
        }
      },
      "8": {
        start: {
          line: 47,
          column: 26
        },
        end: {
          line: 47,
          column: 56
        }
      },
      "9": {
        start: {
          line: 48,
          column: 30
        },
        end: {
          line: 48,
          column: 74
        }
      },
      "10": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 49,
          column: 73
        }
      },
      "11": {
        start: {
          line: 52,
          column: 31
        },
        end: {
          line: 52,
          column: 83
        }
      },
      "12": {
        start: {
          line: 55,
          column: 32
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "13": {
        start: {
          line: 55,
          column: 72
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "14": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 76,
          column: 4
        }
      },
      "15": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 90,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 28
          }
        },
        loc: {
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 33,
            column: 24
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 42,
            column: 3
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 55,
            column: 57
          },
          end: {
            line: 55,
            column: 58
          }
        },
        loc: {
          start: {
            line: 55,
            column: 72
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 55
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 27,
            column: 13
          },
          end: {
            line: 27,
            column: 18
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: 37,
            column: 11
          },
          end: {
            line: 40,
            column: 5
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 34
          }
        }, {
          start: {
            line: 34,
            column: 38
          },
          end: {
            line: 34,
            column: 78
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 11
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 11
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 40
          }
        }, {
          start: {
            line: 37,
            column: 44
          },
          end: {
            line: 37,
            column: 83
          }
        }],
        line: 37
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "850af4ad8a2e6434c06053f1ad4214e1ff9bf512"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2aahjkxngn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2aahjkxngn();
cov_2aahjkxngn().s[0]++;
var VocabularyProgress = function VocabularyProgress(_ref) {
  var vocabularyData = _ref.vocabularyData,
    completedWords = _ref.completedWords,
    levelColor = _ref.levelColor,
    _ref$expanded = _ref.expanded,
    expanded = _ref$expanded === void 0 ? (cov_2aahjkxngn().b[0][0]++, false) : _ref$expanded,
    onToggleExpand = _ref.onToggleExpand,
    onCategoryPress = _ref.onCategoryPress;
  cov_2aahjkxngn().f[0]++;
  cov_2aahjkxngn().s[1]++;
  var getDataArray = function getDataArray() {
    cov_2aahjkxngn().f[1]++;
    cov_2aahjkxngn().s[2]++;
    if ((cov_2aahjkxngn().b[2][0]++, vocabularyData != null && vocabularyData.categories) && (cov_2aahjkxngn().b[2][1]++, Array.isArray(vocabularyData.categories))) {
      cov_2aahjkxngn().b[1][0]++;
      cov_2aahjkxngn().s[3]++;
      return vocabularyData.categories;
    } else {
      cov_2aahjkxngn().b[1][1]++;
      cov_2aahjkxngn().s[4]++;
      if ((cov_2aahjkxngn().b[4][0]++, vocabularyData != null && vocabularyData.exercises) && (cov_2aahjkxngn().b[4][1]++, Array.isArray(vocabularyData.exercises))) {
        cov_2aahjkxngn().b[3][0]++;
        cov_2aahjkxngn().s[5]++;
        return vocabularyData.exercises;
      } else {
        cov_2aahjkxngn().b[3][1]++;
      }
    }
    cov_2aahjkxngn().s[6]++;
    return [];
  };
  var dataArray = (cov_2aahjkxngn().s[7]++, getDataArray());
  var totalWordsCount = (cov_2aahjkxngn().s[8]++, (0, _vocabularyStats.calculateTotalWords)(dataArray));
  var completedWordsCount = (cov_2aahjkxngn().s[9]++, (0, _vocabularyStats.calculateCompletedWordsCount)(completedWords));
  var totalProgress = (cov_2aahjkxngn().s[10]++, (0, _vocabularyStats.calculateTotalProgress)(dataArray, completedWords));
  var categoryProgressData = (cov_2aahjkxngn().s[11]++, (0, _vocabularyStats.calculateCategoryProgress)(dataArray, completedWords));
  var formattedCategoryData = (cov_2aahjkxngn().s[12]++, categoryProgressData.map(function (category) {
    cov_2aahjkxngn().f[2]++;
    cov_2aahjkxngn().s[13]++;
    return {
      title: category.title,
      completed: category.completedWords,
      total: category.totalWords,
      progress: category.progress
    };
  }));
  cov_2aahjkxngn().s[14]++;
  return (0, _jsxRuntime.jsx)(_ProgressCard.default, {
    title: "Progression",
    progress: totalProgress,
    completed: completedWordsCount,
    total: totalWordsCount,
    unit: "mots",
    levelColor: levelColor,
    expandable: true,
    expanded: expanded,
    onToggleExpand: onToggleExpand,
    categoryData: formattedCategoryData,
    onCategoryPress: onCategoryPress
  });
};
cov_2aahjkxngn().s[15]++;
VocabularyProgress.propTypes = {
  vocabularyData: _propTypes.default.shape({
    categories: _propTypes.default.arrayOf(_propTypes.default.object),
    exercises: _propTypes.default.arrayOf(_propTypes.default.object)
  }),
  completedWords: _propTypes.default.object,
  levelColor: _propTypes.default.string.isRequired,
  expanded: _propTypes.default.bool,
  onToggleExpand: _propTypes.default.func,
  onCategoryPress: _propTypes.default.func
};
var _default = exports.default = VocabularyProgress;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,