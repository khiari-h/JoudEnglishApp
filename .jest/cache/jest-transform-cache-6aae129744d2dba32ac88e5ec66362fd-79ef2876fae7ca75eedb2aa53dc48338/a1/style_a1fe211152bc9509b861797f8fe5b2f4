1323b75a0fc73e6b717576bde973768b
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var styles = _reactNative.StyleSheet.create({
  container: {
    overflow: 'hidden',
    backgroundColor: 'white',
    borderRadius: 12,
    position: 'relative'
  },
  containerCompact: {
    borderRadius: 10
  },
  shadow: Object.assign({}, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.08,
      shadowRadius: 8
    },
    android: {}
  })),
  elevated: Object.assign({}, _reactNative.Platform.select({
    android: {
      elevation: 2
    }
  })),
  bordered: {
    borderWidth: 0.5,
    borderColor: '#E5E7EB'
  },
  withSideBorder: {
    borderLeftWidth: 3,
    borderLeftColor: '#5E60CE'
  },
  margin: {
    marginVertical: 6,
    marginHorizontal: 0
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 12,
    paddingHorizontal: 16,
    borderBottomWidth: 0
  },
  headerCompact: {
    paddingVertical: 8
  },
  headerColumn: {
    flexDirection: 'column',
    alignItems: 'flex-start'
  },
  headerLeft: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1
  },
  headerLeftColumn: {
    flexDirection: 'column',
    alignItems: 'flex-start',
    width: '100%'
  },
  headerIconContainer: {
    width: 32,
    height: 32,
    borderRadius: 8,
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 10
  },
  headerIconContainerCompact: {
    width: 28,
    height: 28,
    borderRadius: 6,
    marginRight: 8
  },
  headerIcon: {
    marginRight: 10
  },
  headerTextContainer: {
    flex: 1
  },
  titleWithBadgeContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 2
  },
  title: {
    fontSize: 16,
    fontWeight: '600',
    color: '#1F2937',
    letterSpacing: 0.1,
    marginRight: 8
  },
  titleCompact: {
    fontSize: 15
  },
  titleBadge: Object.assign({
    paddingHorizontal: 8,
    paddingVertical: 3,
    borderRadius: 8,
    minWidth: 24,
    alignItems: 'center',
    justifyContent: 'center'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 1
      },
      shadowOpacity: 0.1,
      shadowRadius: 2
    },
    android: {
      elevation: 1
    }
  })),
  titleBadgeCompact: {
    paddingHorizontal: 6,
    paddingVertical: 2,
    borderRadius: 6,
    minWidth: 20
  },
  titleBadgeText: {
    fontSize: 12,
    fontWeight: '700',
    color: 'white',
    textAlign: 'center'
  },
  titleBadgeTextCompact: {
    fontSize: 11
  },
  subtitle: {
    fontSize: 14,
    color: '#6B7280',
    marginTop: 1,
    lineHeight: 18
  },
  subtitleCompact: {
    fontSize: 13,
    lineHeight: 16
  },
  headerRight: {
    marginLeft: 12,
    alignItems: 'center'
  },
  rightIconText: {
    fontSize: 22
  },
  rightIconTextCompact: {
    fontSize: 20
  },
  content: {
    flexGrow: 1
  },
  contentPadding: {
    padding: 16
  },
  contentCompact: {
    padding: 12
  },
  footer: {
    paddingVertical: 10,
    paddingHorizontal: 16,
    borderTopWidth: 0.5,
    borderTopColor: '#F3F4F6'
  },
  activeCard: {
    borderColor: '#5E60CE',
    borderWidth: 1
  },
  cardBadge: {
    position: 'absolute',
    top: 8,
    right: 8,
    paddingHorizontal: 6,
    paddingVertical: 2,
    borderRadius: 6,
    zIndex: 1
  },
  badgeText: {
    fontSize: 10,
    fontWeight: '600',
    color: '#5E60CE'
  },
  overlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: 'rgba(248, 249, 250, 0.9)',
    borderRadius: 12,
    justifyContent: 'center',
    alignItems: 'center',
    zIndex: 2
  }
});
var _default = exports.default = styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,