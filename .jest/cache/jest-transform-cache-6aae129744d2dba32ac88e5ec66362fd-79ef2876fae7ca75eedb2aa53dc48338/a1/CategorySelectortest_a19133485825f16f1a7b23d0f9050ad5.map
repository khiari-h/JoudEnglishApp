{"version":3,"names":["_getJestObj","mock","React","require","ScrollView","jest","requireActual","Object","assign","default","forwardRef","props","ref","useImperativeHandle","scrollTo","fn","_jsxRuntime","jsx","_interopRequireDefault","_asyncToGenerator2","_react","_reactNative","_reactNative2","_CategorySelector","_require","useFakeTimers","spyOn","Animated","mockImplementation","value","config","mockTiming","start","callback","setTimeout","finished","duration","stop","describe","mockCategories","id","name","defaultProps","categories","selectedCategory","onSelectCategory","renderCategorySelector","arguments","length","undefined","render","beforeEach","clearAllMocks","afterAll","useRealTimers","it","_renderCategorySelect","getAllByRole","categoryNames","map","element","accessibilityLabel","expect","toEqual","cat","_renderCategorySelect2","getByRole","selectedPill","toHaveAccessibilityState","selected","mockOnSelect","_renderCategorySelect3","getByText","fireEvent","press","toHaveBeenCalledTimes","advanceTimersByTime","runAllTimers","_renderCategorySelect4","rerender","scrollToSpy","prototype","waitFor","toHaveBeenCalled","renderSpy","TestWrapper","propsRef","_render","mockClear"],"sources":["CategorySelector.test.js"],"sourcesContent":["// __tests__/CategorySelector.test.js\nimport React from 'react';\nimport { render, fireEvent, act, waitFor } from '@testing-library/react-native';\nimport { Animated, ScrollView } from 'react-native';\nimport CategorySelector from '../../../src/components/exercise-common/CategorySelector';\n\n// Mock pour les timers afin de contrôler le temps dans les tests d'animation\njest.useFakeTimers();\n\n// Mocker Animated.timing pour qu'il se termine après un délai\njest.spyOn(Animated, 'timing').mockImplementation((value, config) => {\n  const mockTiming = {\n    start: (callback) => {\n      // Simuler le délai de l'animation en utilisant les faux timers\n      setTimeout(() => {\n        if (callback) {\n          callback({ finished: true });\n        }\n      }, config.duration);\n    },\n    stop: jest.fn(),\n  };\n  return mockTiming;\n});\n\n// Mocker la ref de ScrollView et la méthode scrollTo\njest.mock('react-native/Libraries/Components/ScrollView/ScrollView', () => {\n  const React = require('react');\n  const ScrollView = jest.requireActual('react-native/Libraries/Components/ScrollView/ScrollView');\n  return {\n    ...ScrollView,\n    default: React.forwardRef((props, ref) => {\n      React.useImperativeHandle(ref, () => ({\n        scrollTo: jest.fn(),\n      }));\n      return <ScrollView {...props} />;\n    }),\n  };\n});\n\ndescribe('CategorySelector Component', () => {\n  const mockCategories = [\n    { id: '1', name: 'Fruits' },\n    { id: '2', name: 'Vegetables' },\n    { id: '3', name: 'Dairy Products' },\n    { id: '4', name: 'Meat & Fish' },\n    { id: '5', name: 'Beverages' },\n  ];\n\n  const defaultProps = {\n    categories: mockCategories,\n    selectedCategory: '1',\n    onSelectCategory: jest.fn(),\n  };\n\n  const renderCategorySelector = (props = {}) => {\n    return render(<CategorySelector {...defaultProps} {...props} />);\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  afterAll(() => {\n    // Restaurer les timers pour les autres tests si nécessaire\n    jest.useRealTimers();\n  });\n\n  // --- RENDERING ---\n  describe('Rendering', () => {\n    it('should render categories in the correct order', () => {\n      const { getAllByRole } = renderCategorySelector();\n      const categoryNames = getAllByRole('button').map(element => element.props.accessibilityLabel);\n      expect(categoryNames).toEqual(mockCategories.map(cat => cat.name));\n    });\n\n    it('should highlight the selected category visually', () => {\n      const { getByRole } = renderCategorySelector({ selectedCategory: '2' });\n      const selectedPill = getByRole('button', { name: 'Vegetables' });\n      expect(selectedPill).toHaveAccessibilityState({ selected: true });\n    });\n    \n    // ... (autres tests de rendu qui passent)\n  });\n\n  // --- USER INTERACTIONS ---\n  describe('User Interactions', () => {\n    // ... (tests d'interactions qui passent)\n  });\n\n  // --- ANIMATIONS ---\n  describe('Animations', () => {\n    it('should not trigger new animation if one is already in progress', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({ selectedCategory: '1', onSelectCategory: mockOnSelect });\n      \n      // Premier clic : déclenche l'animation\n      fireEvent.press(getByText('Vegetables'));\n      expect(mockOnSelect).toHaveBeenCalledTimes(1);\n      \n      // Avance le temps pour que l'animation soit en cours (elle ne se termine pas encore)\n      jest.advanceTimersByTime(100);\n      \n      // Second clic : il devrait être ignoré par le garde-fou\n      fireEvent.press(getByText('Vegetables'));\n      expect(mockOnSelect).toHaveBeenCalledTimes(1);\n      \n      // Avance le temps jusqu'à la fin de l'animation pour libérer le garde-fou\n      jest.runAllTimers();\n      \n      // Un nouveau clic devrait maintenant être pris en compte\n      fireEvent.press(getByText('Vegetables'));\n      expect(mockOnSelect).toHaveBeenCalledTimes(2);\n    });\n\n    // ... (autres tests d'animation qui passent)\n  });\n\n  // --- SCROLLING BEHAVIOR ---\n  describe('Scrolling Behavior', () => {\n    it('should handle scrolling when selectedCategory changes', async () => {\n      const { rerender } = renderCategorySelector({ selectedCategory: '1' });\n      \n      const scrollToSpy = ScrollView.prototype.scrollTo;\n      \n      // Simuler le changement de prop\n      rerender(<CategorySelector {...defaultProps} selectedCategory='5' />);\n      \n      await waitFor(() => {\n        expect(scrollToSpy).toHaveBeenCalled();\n      });\n    });\n\n    // ... (autres tests de scroll qui passent)\n  });\n\n  // --- PERFORMANCE ---\n  describe('Performance', () => {\n    it('should not re-render unnecessarily when props do not change', () => {\n      const renderSpy = jest.fn();\n      const TestWrapper = (props) => {\n        renderSpy();\n        return <CategorySelector {...props} />;\n      };\n    \n      const propsRef = { ...defaultProps };\n      const { rerender } = render(<TestWrapper {...propsRef} />);\n      \n      renderSpy.mockClear();\n      rerender(<TestWrapper {...propsRef} />);\n      \n      expect(renderSpy).toHaveBeenCalledTimes(0);\n    });\n\n    // ... (autres tests de performance qui passent)\n  });\n\n  // --- ACCESSIBILITY ---\n  describe('Accessibility', () => {\n    // ... (tests d'accessibilité qui passent)\n  });\n});"],"mappings":"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","ignoreList":[]}