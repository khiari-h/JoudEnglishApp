{"version":3,"names":["_reactNative","require","_Button","_interopRequireDefault","_jsxRuntime","describe","it","_render","render","jsx","default","title","onPress","getByText","expect","toBeTruthy","mockOnPress","jest","fn","_render2","fireEvent","press","toHaveBeenCalledTimes","_render3","disabled","not","toHaveBeenCalled","_render4","loading","queryByTestId","_render5","toBeNull"],"sources":["Button.test.js"],"sourcesContent":["import { render, fireEvent } from '@testing-library/react-native';\r\n\r\nimport Button from '../../../../src/components/ui/Button';\r\n\r\n\r\n\r\ndescribe('Button', () => {\r\n\r\n  it('devrait rendre le texte correct', () => {\r\n\r\n    const { getByText } = render(<Button title=\"Mon Bouton\" onPress={() => {}} />);\r\n\r\n    expect(getByText('Mon Bouton')).toBeTruthy();\r\n\r\n  });\r\n\r\n\r\n\r\n  it('devrait appeler la fonction onPress quand le bouton est pressé', () => {\r\n\r\n    const mockOnPress = jest.fn();\r\n\r\n    const { getByText } = render(<Button title=\"Mon Bouton\" onPress={mockOnPress} />);\r\n\r\n    fireEvent.press(getByText('Mon Bouton'));\r\n\r\n    expect(mockOnPress).toHaveBeenCalledTimes(1);\r\n\r\n  });\r\n\r\n\r\n\r\n  it('ne devrait pas appeler la fonction onPress quand le bouton est désactivé', () => {\r\n\r\n    const mockOnPress = jest.fn();\r\n\r\n    const { getByText } = render(<Button title=\"Mon Bouton\" onPress={mockOnPress} disabled />);\r\n\r\n    fireEvent.press(getByText('Mon Bouton'));\r\n\r\n    expect(mockOnPress).not.toHaveBeenCalled();\r\n\r\n  });\r\n\r\n\r\n\r\n  it('devrait afficher un indicateur de chargement si loading est vrai', () => {\r\n\r\n    const { queryByTestId } = render(<Button title=\"Mon Bouton\" onPress={() => {}} loading />);\r\n\r\n    expect(queryByTestId('button-loader')).toBeTruthy();\r\n\r\n  });\r\n\r\n\r\n\r\n  it('ne devrait pas afficher un indicateur de chargement si loading est faux', () => {\r\n\r\n    const { queryByTestId } = render(<Button title=\"Mon Bouton\" onPress={() => {}} loading={false} />);\r\n\r\n    expect(queryByTestId('button-loader')).toBeNull();\r\n\r\n  });\r\n\r\n});\r\n\r\n"],"mappings":";AAAA,IAAAA,YAAA,GAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA0D,IAAAG,WAAA,GAAAH,OAAA;AAI1DI,QAAQ,CAAC,QAAQ,EAAE,YAAM;EAEvBC,EAAE,CAAC,iCAAiC,EAAE,YAAM;IAE1C,IAAAC,OAAA,GAAsB,IAAAC,mBAAM,EAAC,IAAAJ,WAAA,CAAAK,GAAA,EAACP,OAAA,CAAAQ,OAAM;QAACC,KAAK,EAAC,YAAY;QAACC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ,CAAC;MAAE,CAAE,CAAC,CAAC;MAAtEC,SAAS,GAAAN,OAAA,CAATM,SAAS;IAEjBC,MAAM,CAACD,SAAS,CAAC,YAAY,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAE9C,CAAC,CAAC;EAIFT,EAAE,CAAC,gEAAgE,EAAE,YAAM;IAEzE,IAAMU,WAAW,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;IAE7B,IAAAC,QAAA,GAAsB,IAAAX,mBAAM,EAAC,IAAAJ,WAAA,CAAAK,GAAA,EAACP,OAAA,CAAAQ,OAAM;QAACC,KAAK,EAAC,YAAY;QAACC,OAAO,EAAEI;MAAY,CAAE,CAAC,CAAC;MAAzEH,SAAS,GAAAM,QAAA,CAATN,SAAS;IAEjBO,sBAAS,CAACC,KAAK,CAACR,SAAS,CAAC,YAAY,CAAC,CAAC;IAExCC,MAAM,CAACE,WAAW,CAAC,CAACM,qBAAqB,CAAC,CAAC,CAAC;EAE9C,CAAC,CAAC;EAIFhB,EAAE,CAAC,0EAA0E,EAAE,YAAM;IAEnF,IAAMU,WAAW,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;IAE7B,IAAAK,QAAA,GAAsB,IAAAf,mBAAM,EAAC,IAAAJ,WAAA,CAAAK,GAAA,EAACP,OAAA,CAAAQ,OAAM;QAACC,KAAK,EAAC,YAAY;QAACC,OAAO,EAAEI,WAAY;QAACQ,QAAQ;MAAA,CAAE,CAAC,CAAC;MAAlFX,SAAS,GAAAU,QAAA,CAATV,SAAS;IAEjBO,sBAAS,CAACC,KAAK,CAACR,SAAS,CAAC,YAAY,CAAC,CAAC;IAExCC,MAAM,CAACE,WAAW,CAAC,CAACS,GAAG,CAACC,gBAAgB,CAAC,CAAC;EAE5C,CAAC,CAAC;EAIFpB,EAAE,CAAC,kEAAkE,EAAE,YAAM;IAE3E,IAAAqB,QAAA,GAA0B,IAAAnB,mBAAM,EAAC,IAAAJ,WAAA,CAAAK,GAAA,EAACP,OAAA,CAAAQ,OAAM;QAACC,KAAK,EAAC,YAAY;QAACC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ,CAAC,CAAE;QAACgB,OAAO;MAAA,CAAE,CAAC,CAAC;MAAlFC,aAAa,GAAAF,QAAA,CAAbE,aAAa;IAErBf,MAAM,CAACe,aAAa,CAAC,eAAe,CAAC,CAAC,CAACd,UAAU,CAAC,CAAC;EAErD,CAAC,CAAC;EAIFT,EAAE,CAAC,yEAAyE,EAAE,YAAM;IAElF,IAAAwB,QAAA,GAA0B,IAAAtB,mBAAM,EAAC,IAAAJ,WAAA,CAAAK,GAAA,EAACP,OAAA,CAAAQ,OAAM;QAACC,KAAK,EAAC,YAAY;QAACC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ,CAAC,CAAE;QAACgB,OAAO,EAAE;MAAM,CAAE,CAAC,CAAC;MAA1FC,aAAa,GAAAC,QAAA,CAAbD,aAAa;IAErBf,MAAM,CAACe,aAAa,CAAC,eAAe,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC;EAEnD,CAAC,CAAC;AAEJ,CAAC,CAAC","ignoreList":[]}