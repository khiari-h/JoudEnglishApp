ce9eb704b496f3bfdf3de842d32e39de
function cov_10seczq4r3() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingProgress\\index.js";
  var hash = "23a89b773cca64f23a0f70f2eafeda1c2b72df99";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingProgress\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "2": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "3": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 43
        }
      },
      "4": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "5": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 97
        }
      },
      "6": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 35,
          column: 6
        }
      },
      "7": {
        start: {
          line: 38,
          column: 55
        },
        end: {
          line: 38,
          column: 67
        }
      },
      "8": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 81,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 26
          }
        },
        loc: {
          start: {
            line: 21,
            column: 6
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 32
          }
        },
        loc: {
          start: {
            line: 26,
            column: 37
          },
          end: {
            line: 36,
            column: 3
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 14
          },
          end: {
            line: 18,
            column: 16
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 19,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 25
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 2
          },
          end: {
            line: 20,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 24
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 21
          },
          end: {
            line: 29,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 42
          },
          end: {
            line: 29,
            column: 93
          }
        }, {
          start: {
            line: 29,
            column: 96
          },
          end: {
            line: 29,
            column: 97
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "23a89b773cca64f23a0f70f2eafeda1c2b72df99"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_10seczq4r3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10seczq4r3();
import { View, Text, useMemo } from "react-native";
import { LinearGradient } from "expo-linear-gradient";
import createStyles from "./style";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_10seczq4r3().s[0]++;
var SpellingProgress = function SpellingProgress(_ref) {
  var _ref$exercises = _ref.exercises,
    exercises = _ref$exercises === void 0 ? (cov_10seczq4r3().b[0][0]++, []) : _ref$exercises,
    _ref$completedExercis = _ref.completedExercises,
    completedExercises = _ref$completedExercis === void 0 ? (cov_10seczq4r3().b[1][0]++, []) : _ref$completedExercis,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_10seczq4r3().b[2][0]++, "#3b82f6") : _ref$levelColor;
  cov_10seczq4r3().f[0]++;
  var styles = (cov_10seczq4r3().s[1]++, createStyles(levelColor));
  var progressData = (cov_10seczq4r3().s[2]++, useMemo(function () {
    cov_10seczq4r3().f[1]++;
    var totalExercises = (cov_10seczq4r3().s[3]++, exercises.length);
    var completedCount = (cov_10seczq4r3().s[4]++, completedExercises.length);
    var progress = (cov_10seczq4r3().s[5]++, totalExercises > 0 ? (cov_10seczq4r3().b[3][0]++, Math.round(completedCount / totalExercises * 100)) : (cov_10seczq4r3().b[3][1]++, 0));
    cov_10seczq4r3().s[6]++;
    return {
      totalExercises: totalExercises,
      completedCount: completedCount,
      progress: progress
    };
  }, [exercises, completedExercises]));
  var _ref2 = (cov_10seczq4r3().s[7]++, progressData),
    totalExercises = _ref2.totalExercises,
    completedCount = _ref2.completedCount,
    progress = _ref2.progress;
  cov_10seczq4r3().s[8]++;
  return _jsx(View, {
    style: styles.container,
    children: _jsxs(LinearGradient, {
      colors: [`${levelColor}08`, `${levelColor}04`, 'transparent'],
      start: {
        x: 0,
        y: 0
      },
      end: {
        x: 1,
        y: 1
      },
      style: styles.gradient,
      children: [_jsxs(View, {
        style: styles.header,
        children: [_jsx(Text, {
          style: styles.title,
          children: "Progression"
        }), _jsxs(Text, {
          style: [styles.stats, {
            color: levelColor
          }],
          children: [completedCount, "/", totalExercises, " exercices"]
        })]
      }), _jsxs(View, {
        style: styles.progressBarContainer,
        children: [_jsx(View, {
          style: [styles.progressBarTrack, {
            backgroundColor: `${levelColor}20`
          }],
          children: _jsx(View, {
            style: [styles.progressBarFill, {
              backgroundColor: levelColor,
              width: `${progress}%`
            }]
          })
        }), _jsxs(Text, {
          style: [styles.percentage, {
            color: levelColor
          }],
          children: [progress, "%"]
        })]
      })]
    })
  });
};
export default SpellingProgress;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,