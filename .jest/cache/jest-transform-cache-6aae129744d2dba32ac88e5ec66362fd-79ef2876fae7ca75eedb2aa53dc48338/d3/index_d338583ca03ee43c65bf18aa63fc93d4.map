{"version":3,"names":["_react","require","_reactNative","_native","_expoRouter","_Container","_interopRequireWildcard","_GrammarHeader","_interopRequireDefault","_GrammarRuleSelector","_GrammarProgress","_GrammarRuleContent","_GrammarExerciceRenderer","_GrammarFeedback","_GrammarNavigation","_useGrammar","_grammarDataHelper","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","cov_1mx66fnjdn","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","b","_coverageSchema","coverage","actualCoverage","GrammarExercise","_ref","route","navigation","useNavigation","_ref2","params","_ref2$level","level","styles","createStyles","levelColor","useMemo","getLevelColor","grammarData","getGrammarData","_ref3","useGrammar","ruleIndex","exerciseIndex","selectedOption","setSelectedOption","inputText","setInputText","showFeedback","isCorrect","attempts","completedExercises","loaded","showDetailedProgress","currentRule","currentExercise","canCheckAnswer","isFirstExercise","isLastExercise","changeRule","submitAnswer","nextExercise","previousExercise","retryExercise","toggleDetailedProgress","handleBackPress","useCallback","router","push","pathname","handleCheckAnswer","handleNextExercise","goBack","handlePreviousExercise","handleRetryExercise","handleSkipExercise","handleRuleChange","index","handleRuleProgressPress","handleToggleProgressDetails","isLoading","length","jsx","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","ALL","backgroundColor","statusBarStyle","children","View","style","loadingContainer","ActivityIndicator","size","color","testID","jsxs","withScrollView","withPadding","scrollViewProps","showsVerticalScrollIndicator","contentContainerStyle","scrollContent","onBackPress","rules","selectedIndex","onSelectRule","expanded","onToggleExpand","onRulePress","rule","exercise","isVisible","explanation","correctAnswer","answer","onCheckAnswer","onPreviousExercise","onNextExercise","onRetryExercise","onSkipExercise","_default","exports"],"sources":["index.js"],"sourcesContent":["// GrammarExercise/index.js - VERSION TOTALEMENT RECODÃ‰E\n\nimport { useMemo, useCallback } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { router } from \"expo-router\";\n\n// Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\n\n// Components\nimport GrammarHeader from \"./GrammarHeader\";\nimport GrammarRuleSelector from \"./GrammarRuleSelector\";\nimport GrammarProgress from \"./GrammarProgress\";\nimport GrammarRuleContent from \"./GrammarRuleContent\";\nimport GrammarExerciseRenderer from \"./GrammarExerciceRenderer\";\nimport GrammarFeedback from \"./GrammarFeedback\";\nimport GrammarNavigation from \"./GrammarNavigation\";\n\n// Hook & Utils\nimport useGrammar from \"./hooks/useGrammar\";\nimport { getGrammarData, getLevelColor } from \"../../../utils/grammar/grammarDataHelper\";\nimport createStyles from \"./style\";\n\n/**\n * ðŸŽ¯ GrammarExercise - VERSION TOTALEMENT RECODÃ‰E AVEC OPTIMISATIONS COMPLÃˆTES\n * âœ… MÃ©morisation complÃ¨te avec useMemo et useCallback\n * âœ… useEffect optimisÃ© pour saveActivity\n * âœ… Gestion des handlers mÃ©morisÃ©s\n * âœ… Performance maximale\n */\nconst GrammarExercise = ({ route }) => {\n  const navigation = useNavigation();\n  const { level = \"A1\" } = route?.params || {};\n  const styles = createStyles();\n\n  // Hook pour sauvegarder l'activitÃ©\n  // const { saveActivity } = useLastActivity(); // supprimÃ© car inutilisÃ©\n\n  // âœ… MÃ‰MORISER les donnÃ©es principales\n  const levelColor = useMemo(() => getLevelColor(level), [level]);\n  const grammarData = useMemo(() => getGrammarData(level), [level]);\n\n  // Hook unifiÃ©\n  const {\n    ruleIndex,\n    exerciseIndex,\n    selectedOption,\n    setSelectedOption,\n    inputText,\n    setInputText,\n    showFeedback,\n    isCorrect,\n    attempts,\n    completedExercises,\n    loaded,\n    showDetailedProgress,\n    currentRule,\n    currentExercise,\n    canCheckAnswer,\n    isFirstExercise,\n    isLastExercise,\n    changeRule,\n    submitAnswer,\n    nextExercise,\n    previousExercise,\n    retryExercise,\n    toggleDetailedProgress,\n  } = useGrammar(grammarData, level);\n\n  // âœ… CORRECTION FINALE : Suppression de la double sauvegarde\n  // Le hook useGrammar gÃ¨re dÃ©jÃ  la sauvegarde, pas besoin de doublon\n  // Si on veut vraiment sauvegarder l'activitÃ©, on peut le faire Ã  des moments spÃ©cifiques\n  // comme quand on change de rÃ¨gle ou termine un exercice\n\n  // âœ… TOUS LES HANDLERS MÃ‰MORISÃ‰S pour Ã©viter les re-renders\nconst handleBackPress = useCallback(() => {\n  router.push({\n    pathname: \"/tabs/exerciseSelection\",\n    params: { level }\n  });\n}, [level]);\n  \n  const handleCheckAnswer = useCallback(() => {\n    submitAnswer();\n  }, [submitAnswer]);\n  \n  const handleNextExercise = useCallback(() => {\n    if (!nextExercise()) {\n      // All exercises completed\n      navigation.goBack();\n    }\n  }, [nextExercise, navigation]);\n\n  const handlePreviousExercise = useCallback(() => {\n    previousExercise();\n  }, [previousExercise]);\n\n  const handleRetryExercise = useCallback(() => {\n    retryExercise();\n  }, [retryExercise]);\n\n  const handleSkipExercise = useCallback(() => {\n    handleNextExercise();\n  }, [handleNextExercise]);\n\n  const handleRuleChange = useCallback((index) => {\n    changeRule(index);\n  }, [changeRule]);\n\n  const handleRuleProgressPress = useCallback((index) => {\n    changeRule(index);\n  }, [changeRule]);\n\n  const handleToggleProgressDetails = useCallback(() => {\n    toggleDetailedProgress();\n  }, [toggleDetailedProgress]);\n\n  // âœ… MÃ‰MORISER les conditions de rendu\n  const isLoading = useMemo(() => {\n    return !loaded || !grammarData.length;\n  }, [loaded, grammarData.length]);\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <Container\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#f8fafc\"\n        statusBarStyle=\"dark-content\"\n      >\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={levelColor} testID=\"activity-indicator\" />\n        </View>\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      withScrollView\n      backgroundColor=\"#f8fafc\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      scrollViewProps={{\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: styles.scrollContent,\n      }}\n    >\n      {/* Header */}\n      <GrammarHeader\n        level={level}\n        onBackPress={handleBackPress}\n      />\n\n      {/* Rule Selector */}\n      <GrammarRuleSelector\n        rules={grammarData}\n        selectedIndex={ruleIndex}\n        onSelectRule={handleRuleChange}\n        levelColor={levelColor}\n      />\n\n      {/* Progress */}\n      <GrammarProgress\n        grammarData={grammarData}\n        completedExercises={completedExercises}\n        levelColor={levelColor}\n        expanded={showDetailedProgress}\n        onToggleExpand={handleToggleProgressDetails}\n        onRulePress={handleRuleProgressPress}\n      />\n\n      {/* Rule Content */}\n      <GrammarRuleContent \n        rule={currentRule} \n        levelColor={levelColor}\n      />\n\n      {/* Exercise Renderer */}\n      {currentExercise && (\n        <View key={`exercise-${exerciseIndex}-${attempts}`}>\n          <GrammarExerciseRenderer\n            exercise={currentExercise}\n            selectedOption={selectedOption}\n            setSelectedOption={setSelectedOption}\n            inputText={inputText}\n            setInputText={setInputText}\n            showFeedback={showFeedback}\n            isCorrect={isCorrect}\n            exerciseIndex={exerciseIndex}\n            attempts={attempts}\n          />\n        </View>\n      )}\n\n      {/* Feedback */}\n      <GrammarFeedback\n        isVisible={showFeedback}\n        isCorrect={isCorrect}\n        explanation={currentExercise?.explanation}\n        correctAnswer={currentExercise?.answer}\n        attempts={attempts}\n      />\n\n      {/* Navigation */}\n      <GrammarNavigation\n        testID=\"grammar-navigation\"\n        showFeedback={showFeedback}\n        isCorrect={isCorrect}\n        canCheckAnswer={canCheckAnswer}\n        onCheckAnswer={handleCheckAnswer}\n        onPreviousExercise={handlePreviousExercise}\n        onNextExercise={handleNextExercise}\n        onRetryExercise={handleRetryExercise}\n        onSkipExercise={handleSkipExercise}\n        isFirstExercise={isFirstExercise}\n        isLastExercise={isLastExercise}\n        attempts={attempts}\n        levelColor={levelColor}\n      />\n    </Container>\n  );\n};\n\nexport default GrammarExercise;"],"mappings":"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","ignoreList":[]}