5e1ae02ae5eba19880c73dcf3c6bfad4
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _expoLinearGradient = require("expo-linear-gradient");
var _Card = _interopRequireDefault(require("../Card"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_18eq8xe0xs() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\RevealButton\\index.js";
  var hash = "cfb5ca884d97bc9e6eba14c89edfe7ddb2b4f925";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\ui\\RevealButton\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 153,
          column: 1
        }
      },
      "1": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "2": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 55
        }
      },
      "3": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 58
        }
      },
      "4": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 51,
          column: 35
        }
      },
      "5": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "6": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 47,
          column: 17
        }
      },
      "7": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 33
        }
      },
      "8": {
        start: {
          line: 54,
          column: 28
        },
        end: {
          line: 70,
          column: 29
        }
      },
      "9": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "10": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 37
        }
      },
      "11": {
        start: {
          line: 69,
          column: 21
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "12": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 89,
          column: 29
        }
      },
      "13": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 87,
          column: 15
        }
      },
      "14": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 37
        }
      },
      "15": {
        start: {
          line: 88,
          column: 21
        },
        end: {
          line: 88,
          column: 31
        }
      },
      "16": {
        start: {
          line: 91,
          column: 2
        },
        end: {
          line: 152,
          column: 4
        }
      },
      "17": {
        start: {
          line: 156,
          column: 0
        },
        end: {
          line: 164,
          column: 2
        }
      },
      "18": {
        start: {
          line: 167,
          column: 0
        },
        end: {
          line: 174,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 25,
            column: 21
          },
          end: {
            line: 25,
            column: 22
          }
        },
        loc: {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 33
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 41,
            column: 18
          },
          end: {
            line: 41,
            column: 19
          }
        },
        loc: {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 51,
            column: 3
          }
        },
        line: 41
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 40
          },
          end: {
            line: 54,
            column: 41
          }
        },
        loc: {
          start: {
            line: 54,
            column: 46
          },
          end: {
            line: 70,
            column: 3
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 16
          }
        },
        loc: {
          start: {
            line: 69,
            column: 21
          },
          end: {
            line: 69,
            column: 31
          }
        },
        line: 69
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 73,
            column: 38
          },
          end: {
            line: 73,
            column: 39
          }
        },
        loc: {
          start: {
            line: 73,
            column: 44
          },
          end: {
            line: 89,
            column: 3
          }
        },
        line: 73
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 88,
            column: 15
          },
          end: {
            line: 88,
            column: 16
          }
        },
        loc: {
          start: {
            line: 88,
            column: 21
          },
          end: {
            line: 88,
            column: 31
          }
        },
        line: 88
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 20
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 28,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 35
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 13
          },
          end: {
            line: 29,
            column: 31
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 22
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 31,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 24
          }
        }],
        line: 31
      },
      "5": {
        loc: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 19
          }
        }],
        line: 32
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 50,
            column: 5
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 7
          },
          end: {
            line: 150,
            column: 7
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 130,
            column: 15
          }
        }, {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 149,
            column: 24
          }
        }],
        line: 98
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cfb5ca884d97bc9e6eba14c89edfe7ddb2b4f925"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_18eq8xe0xs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18eq8xe0xs();
cov_18eq8xe0xs().s[0]++;
var RevealButton = function RevealButton(_ref) {
  var _ref$isRevealed = _ref.isRevealed,
    isRevealed = _ref$isRevealed === void 0 ? (cov_18eq8xe0xs().b[0][0]++, false) : _ref$isRevealed,
    onToggle = _ref.onToggle,
    _ref$revealText = _ref.revealText,
    revealText = _ref$revealText === void 0 ? (cov_18eq8xe0xs().b[1][0]++, "Reveal Translation") : _ref$revealText,
    _ref$hideText = _ref.hideText,
    hideText = _ref$hideText === void 0 ? (cov_18eq8xe0xs().b[2][0]++, "Hide Translation") : _ref$hideText,
    _ref$revealedContent = _ref.revealedContent,
    revealedContent = _ref$revealedContent === void 0 ? (cov_18eq8xe0xs().b[3][0]++, "") : _ref$revealedContent,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_18eq8xe0xs().b[4][0]++, "#5E60CE") : _ref$levelColor,
    _ref$contentStyle = _ref.contentStyle,
    contentStyle = _ref$contentStyle === void 0 ? (cov_18eq8xe0xs().b[5][0]++, {}) : _ref$contentStyle;
  cov_18eq8xe0xs().f[0]++;
  var styles = (cov_18eq8xe0xs().s[1]++, (0, _style.default)(levelColor));
  var _ref2 = (cov_18eq8xe0xs().s[2]++, (0, _react.useState)(new _reactNative.Animated.Value(1))),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 1),
    buttonScale = _ref3[0];
  var _ref4 = (cov_18eq8xe0xs().s[3]++, (0, _react.useState)(new _reactNative.Animated.Value(0))),
    _ref5 = (0, _slicedToArray2.default)(_ref4, 1),
    contentOpacity = _ref5[0];
  cov_18eq8xe0xs().s[4]++;
  _react.default.useEffect(function () {
    cov_18eq8xe0xs().f[1]++;
    cov_18eq8xe0xs().s[5]++;
    if (isRevealed) {
      cov_18eq8xe0xs().b[6][0]++;
      cov_18eq8xe0xs().s[6]++;
      _reactNative.Animated.timing(contentOpacity, {
        toValue: 1,
        duration: 300,
        useNativeDriver: true
      }).start();
    } else {
      cov_18eq8xe0xs().b[6][1]++;
      cov_18eq8xe0xs().s[7]++;
      contentOpacity.setValue(0);
    }
  }, [isRevealed, contentOpacity]);
  var handleRevealPress = (cov_18eq8xe0xs().s[8]++, (0, _react.useCallback)(function () {
    cov_18eq8xe0xs().f[2]++;
    cov_18eq8xe0xs().s[9]++;
    _reactNative.Animated.sequence([_reactNative.Animated.spring(buttonScale, {
      toValue: 0.96,
      tension: 400,
      friction: 10,
      useNativeDriver: true
    }), _reactNative.Animated.spring(buttonScale, {
      toValue: 1,
      tension: 300,
      friction: 8,
      useNativeDriver: true
    })]).start();
    cov_18eq8xe0xs().s[10]++;
    setTimeout(function () {
      cov_18eq8xe0xs().f[3]++;
      cov_18eq8xe0xs().s[11]++;
      return onToggle();
    }, 60);
  }, [buttonScale, onToggle]));
  var handleHidePress = (cov_18eq8xe0xs().s[12]++, (0, _react.useCallback)(function () {
    cov_18eq8xe0xs().f[4]++;
    cov_18eq8xe0xs().s[13]++;
    _reactNative.Animated.sequence([_reactNative.Animated.spring(buttonScale, {
      toValue: 0.96,
      tension: 400,
      friction: 10,
      useNativeDriver: true
    }), _reactNative.Animated.spring(buttonScale, {
      toValue: 1,
      tension: 300,
      friction: 8,
      useNativeDriver: true
    })]).start();
    cov_18eq8xe0xs().s[14]++;
    setTimeout(function () {
      cov_18eq8xe0xs().f[5]++;
      cov_18eq8xe0xs().s[15]++;
      return onToggle();
    }, 60);
  }, [buttonScale, onToggle]));
  cov_18eq8xe0xs().s[16]++;
  return (0, _jsxRuntime.jsx)(_Card.default, {
    withShadow: true,
    borderRadius: 18,
    style: styles.card,
    contentStyle: styles.cardContent,
    children: isRevealed ? (cov_18eq8xe0xs().b[7][0]++, (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.revealedContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Animated.View, {
        style: [styles.contentWrapper, {
          opacity: contentOpacity
        }],
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: [styles.revealedText, {
            color: levelColor
          }, contentStyle],
          children: revealedContent
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {
        style: {
          transform: [{
            scale: buttonScale
          }]
        },
        children: (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
          style: styles.hideButton,
          onPress: handleHidePress,
          activeOpacity: 0.8,
          accessibilityRole: "button",
          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: [styles.hideButtonText, {
              color: levelColor
            }],
            children: hideText
          })
        })
      })]
    })) : (cov_18eq8xe0xs().b[7][1]++, (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {
      style: {
        transform: [{
          scale: buttonScale
        }]
      },
      children: (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.revealButtonContainer,
        onPress: handleRevealPress,
        activeOpacity: 0.9,
        accessibilityRole: "button",
        children: (0, _jsxRuntime.jsx)(_expoLinearGradient.LinearGradient, {
          colors: [levelColor, `${levelColor}E6`],
          start: {
            x: 0,
            y: 0
          },
          end: {
            x: 1,
            y: 1
          },
          style: styles.revealButton,
          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.revealButtonText,
            children: revealText
          })
        })
      })
    }))
  });
};
cov_18eq8xe0xs().s[17]++;
RevealButton.propTypes = {
  isRevealed: _propTypes.default.bool,
  onToggle: _propTypes.default.func.isRequired,
  revealText: _propTypes.default.string,
  hideText: _propTypes.default.string,
  revealedContent: _propTypes.default.string,
  levelColor: _propTypes.default.string,
  contentStyle: _propTypes.default.object
};
cov_18eq8xe0xs().s[18]++;
RevealButton.defaultProps = {
  isRevealed: false,
  revealText: "Reveal Translation",
  hideText: "Hide Translation",
  revealedContent: "",
  levelColor: "#5E60CE",
  contentStyle: {}
};
var _default = exports.default = RevealButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,