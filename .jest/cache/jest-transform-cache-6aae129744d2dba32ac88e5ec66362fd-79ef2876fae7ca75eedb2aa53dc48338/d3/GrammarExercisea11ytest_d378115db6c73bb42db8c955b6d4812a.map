{"version":3,"names":["_getJestObj","mock","router","push","jest","fn","useFocusEffect","getLevelColor","getGrammarData","title","exercises","type","question","options","answer","loadGrammarData","_asyncToGenerator2","default","__esModule","ruleIndex","exerciseIndex","selectedOption","setSelectedOption","inputText","setInputText","showFeedback","isCorrect","attempts","completedExercises","loaded","showDetailedProgress","currentRule","currentExercise","canCheckAnswer","isFirstExercise","isLastExercise","changeRule","submitAnswer","nextExercise","previousExercise","retryExercise","toggleDetailedProgress","_interopRequireDefault","require","_react","_reactNative","_grammar","_jsxRuntime","_require","describe","it","params","level","_render","render","jsx","route","getAllByRole","buttons","expect","length","toBeGreaterThan"],"sources":["GrammarExercise.a11y.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport GrammarExercise from '../../src/screens/exercises/grammar';\r\n\r\njest.mock('expo-router', () => ({ router: { push: jest.fn() }, useFocusEffect: jest.fn(() => {}) }));\r\n\r\njest.mock('../../src/utils/grammar/grammarDataHelper', () => ({\r\n  getLevelColor: jest.fn(() => '#007AFF'),\r\n  getGrammarData: jest.fn(() => ([{ title: 'Rule', exercises: [{ type: 'fillInTheBlank', question: 'Q?', options: ['a','b'], answer: 'a' }] }])),\r\n  loadGrammarData: jest.fn(async () => ([{ title: 'Rule', exercises: [{ type: 'fillInTheBlank', question: 'Q?', options: ['a','b'], answer: 'a' }] }])),\r\n}));\r\n\r\njest.mock('../../src/screens/exercises/grammar/hooks/useGrammar', () => ({\r\n  __esModule: true,\r\n  default: jest.fn(() => ({\r\n    ruleIndex: 0,\r\n    exerciseIndex: 0,\r\n    selectedOption: null,\r\n    setSelectedOption: jest.fn(),\r\n    inputText: '',\r\n    setInputText: jest.fn(),\r\n    showFeedback: false,\r\n    isCorrect: false,\r\n    attempts: 0,\r\n    completedExercises: {},\r\n    loaded: true,\r\n    showDetailedProgress: false,\r\n    currentRule: { title: 'Rule' },\r\n    currentExercise: { type: 'fillInTheBlank', question: 'Q?', options: ['a','b'], answer: 'a' },\r\n    canCheckAnswer: true,\r\n    isFirstExercise: true,\r\n    isLastExercise: false,\r\n    changeRule: jest.fn(),\r\n    submitAnswer: jest.fn(),\r\n    nextExercise: jest.fn(),\r\n    previousExercise: jest.fn(),\r\n    retryExercise: jest.fn(),\r\n    toggleDetailedProgress: jest.fn(),\r\n  })),\r\n}));\r\n\r\ndescribe('GrammarExercise accessibility', () => {\r\n  it('should render navigation check/next buttons with role button', () => {\r\n    const params = { level: 'A1' };\r\n    const { getAllByRole } = render(<GrammarExercise route={{ params }} />);\r\n    const buttons = getAllByRole('button');\r\n    expect(buttons.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}