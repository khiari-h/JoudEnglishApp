9c999689d9413e3d7525f50f54853154
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _errorCorrectionA1Full = _interopRequireDefault(require("./categories/errorCorrectionA1Full"));
var _errorCorrectionA1Identify = _interopRequireDefault(require("./categories/errorCorrectionA1Identify"));
var _errorCorrectionA1MultipleChoice = _interopRequireDefault(require("./categories/errorCorrectionA1MultipleChoice"));
var allExercises = [].concat((0, _toConsumableArray2.default)(_errorCorrectionA1Full.default), (0, _toConsumableArray2.default)(_errorCorrectionA1Identify.default), (0, _toConsumableArray2.default)(_errorCorrectionA1MultipleChoice.default));
allExercises.sort(function (a, b) {
  if (a.categoryId !== b.categoryId) {
    return a.categoryId - b.categoryId;
  }
  var typeOrder = {
    'full': 1,
    'identify': 2,
    'multiple_choice': 3
  };
  return typeOrder[a.type] - typeOrder[b.type];
});
var errorCorrectionA1 = {
  level: "A1",
  totalExercises: allExercises.length,
  statistics: {
    full: _errorCorrectionA1Full.default.length,
    identify: _errorCorrectionA1Identify.default.length,
    multiple_choice: _errorCorrectionA1MultipleChoice.default.length,
    byCategory: {
      1: {
        name: "Articles",
        count: 5
      },
      2: {
        name: "Verb to Be",
        count: 5
      },
      3: {
        name: "Simple Present",
        count: 5
      },
      4: {
        name: "Pronouns",
        count: 4
      },
      5: {
        name: "Sentence Structure",
        count: 5
      }
    }
  },
  categories: [{
    id: 1,
    name: "Articles",
    description: "Practicing correct usage of 'a', 'an', and 'the'",
    exerciseCount: 5,
    difficulty: "Basic",
    color: "#3b82f6"
  }, {
    id: 2,
    name: "Verb to Be",
    description: "Correcting errors with the verb 'to be'",
    exerciseCount: 5,
    difficulty: "Basic",
    color: "#10b981"
  }, {
    id: 3,
    name: "Simple Present",
    description: "Fixing mistakes in simple present tense",
    exerciseCount: 5,
    difficulty: "Basic",
    color: "#f59e0b"
  }, {
    id: 4,
    name: "Pronouns",
    description: "Identifying and correcting pronoun errors",
    exerciseCount: 4,
    difficulty: "Basic",
    color: "#8b5cf6"
  }, {
    id: 5,
    name: "Sentence Structure",
    description: "Improving basic sentence construction",
    exerciseCount: 5,
    difficulty: "Basic",
    color: "#ef4444"
  }],
  exercises: allExercises,
  getExercisesByCategory: function getExercisesByCategory(categoryId) {
    return allExercises.filter(function (exercise) {
      return exercise.categoryId === categoryId;
    });
  },
  getExercisesByType: function getExercisesByType(type) {
    return allExercises.filter(function (exercise) {
      return exercise.type === type;
    });
  },
  getExercisesByCategoryAndType: function getExercisesByCategoryAndType(categoryId, type) {
    return allExercises.filter(function (exercise) {
      return exercise.categoryId === categoryId && exercise.type === type;
    });
  },
  validateStructure: function validateStructure() {
    var requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];
    var validTypes = ['full', 'identify', 'multiple_choice'];
    return allExercises.every(function (exercise) {
      var hasRequiredFields = requiredFields.every(function (field) {
        return Object.prototype.hasOwnProperty.call(exercise, field) && exercise[field] !== undefined;
      });
      var hasValidType = validTypes.includes(exercise.type);
      var hasTypeSpecificFields = true;
      if (exercise.type === 'multiple_choice') {
        hasTypeSpecificFields = exercise.choices && exercise.correctChoiceIndex !== undefined;
      } else {
        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);
      }
      return hasRequiredFields && hasValidType && hasTypeSpecificFields;
    });
  }
};
if (!errorCorrectionA1.validateStructure()) {}
var _default = exports.default = errorCorrectionA1;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,