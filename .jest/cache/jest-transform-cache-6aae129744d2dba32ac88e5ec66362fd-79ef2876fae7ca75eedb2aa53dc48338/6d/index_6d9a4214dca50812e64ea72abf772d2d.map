{"version":3,"names":["_react","require","_reactNative","_expoRouter","_Container","_interopRequireWildcard","_ConversationHeader","_interopRequireDefault","_ConversationSelector","_ConversationProgress","_ConversationScenarioDescription","_ConversationMessageList","_ConversationSuggestions","_ConversationInput","_useConversation2","_useLastActivity2","_conversationDataHelper","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ConversationExercise","_ref","route","_ref2","params","_ref2$level","level","_useLastActivity","useLastActivity","saveActivity","levelColor","getLevelColor","conversationData","useMemo","getConversationData","_useConversation","useConversation","currentScenarioIndex","conversation","message","setMessage","isTyping","suggestions","showHelp","completedScenarios","conversationHistory","loaded","showDetailedProgress","currentScenario","totalScenarios","hasValidData","changeScenario","sendMessage","useSuggestion","toggleHelp","toggleDetailedProgress","isConversationStarted","stats","display","activityMetadata","scenario","step","currentStep","totalSteps","scenarioName","title","handleSaveActivity","useCallback","type","metadata","useEffect","handleBackPress","router","push","pathname","handleScenarioChange","index","handleSendMessage","handleUseSuggestion","suggestion","handleToggleHelp","handleToggleProgressDetails","handleScenarioChangeCb","apply","arguments","handleToggleProgressDetailsCb","handleToggleHelpCb","handleBackPressCb","jsx","testID","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","ALL","backgroundColor","statusBarStyle","jsxs","withPadding","style","styles","children","onBackPress","scenarios","exercises","selectedIndex","onSelectScenario","progress","completionProgress","expanded","onToggleExpand","onScenarioPress","description","helpText","currentHelp","KeyboardAvoidingView","chatContainer","behavior","Platform","OS","keyboardVerticalOffset","messages","onPressSuggestion","onChangeMessage","onSendMessage","_default","exports"],"sources":["index.js"],"sourcesContent":["// ConversationExercise/index.js - VERSION CORRIGÃ‰E\nimport { useMemo, useEffect, useCallback } from \"react\";\nimport { KeyboardAvoidingView, Platform } from \"react-native\";\nimport { router } from \"expo-router\";\n\n// Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\n\n// Components\nimport ConversationHeader from \"./ConversationHeader\";\nimport ConversationSelector from \"./ConversationSelector\";\nimport ConversationProgress from \"./ConversationProgress\";\nimport ConversationScenarioDescription from \"./ConversationScenarioDescription\";\nimport ConversationMessageList from \"./ConversationMessageList\";\nimport ConversationSuggestions from \"./ConversationSuggestions\";\nimport ConversationInput from \"./ConversationInput\";\n\n// Hook & Utils\nimport useConversation from \"./hooks/useConversation\";\nimport useLastActivity from \"../../../hooks/useLastActivity\";\nimport { getConversationData, getLevelColor } from \"../../../utils/conversation/conversationDataHelper\";\nimport styles from \"./style\";\n\n/**\n * ðŸŽ¯ ConversationExercise - VERSION CORRIGÃ‰E\n */\nconst ConversationExercise = ({ route }) => {\n  // const navigation = useNavigation(); // supprimÃ© car inutilisÃ©\n  const { level = \"A1\" } = route?.params || {};\n\n  // Hook pour sauvegarder l'activitÃ©\n  const { saveActivity } = useLastActivity();\n\n  // Data\n  const levelColor = getLevelColor(level);\n  const conversationData = useMemo(() => getConversationData(level), [level]);\n\n  // Hook unifiÃ©\n  const {\n    currentScenarioIndex,\n    conversation,\n    message,\n    setMessage,\n    isTyping,\n    suggestions,\n    showHelp,\n    completedScenarios,\n    conversationHistory,\n    loaded,\n    showDetailedProgress,\n    currentScenario,\n    totalScenarios,\n    hasValidData,\n    changeScenario,\n    sendMessage,\n    useSuggestion,\n    toggleHelp,\n    toggleDetailedProgress,\n    isConversationStarted,\n    stats,\n    display,\n  } = useConversation(conversationData, level);\n\n  // âœ… CORRECTION : MÃ©moriser les mÃ©tadonnÃ©es\n  const activityMetadata = useMemo(() => ({\n    scenario: currentScenarioIndex,\n    step: stats.currentStep || 0,\n    totalSteps: stats.totalSteps || 1,\n    scenarioName: currentScenario?.title || `ScÃ©nario ${currentScenarioIndex + 1}`,\n    totalScenarios\n  }), [currentScenarioIndex, stats.currentStep, stats.totalSteps, currentScenario?.title, totalScenarios]);\n\n  // âœ… CORRECTION : Callback mÃ©morisÃ© pour saveActivity\n  const handleSaveActivity = useCallback(() => {\n    if (loaded && hasValidData && currentScenario && isConversationStarted) {\n      saveActivity({\n        title: \"Conversations\",\n        level,\n        type: \"conversations\",\n        metadata: activityMetadata\n      });\n    }\n  }, [loaded, hasValidData, currentScenario, isConversationStarted, level, saveActivity, activityMetadata]);\n\n  // âœ… CORRECTION : useEffect optimisÃ©\n  useEffect(() => {\n    handleSaveActivity();\n  }, [handleSaveActivity]);\n\n  // Handlers\n  const handleBackPress = useCallback(() => {\n    router.push({\n      pathname: \"/tabs/exerciseSelection\",\n      params: { level }\n    });\n  }, [level]);\n\n  const handleScenarioChange = useCallback((index) => changeScenario(index), [changeScenario]);\n\n  const handleSendMessage = useCallback(() => sendMessage(), [sendMessage]);\n\n  const handleUseSuggestion = useCallback((suggestion) => useSuggestion(suggestion), [useSuggestion]);\n\n  const handleToggleHelp = useCallback(() => toggleHelp(), [toggleHelp]);\n\n  const handleToggleProgressDetails = useCallback(() => toggleDetailedProgress(), [toggleDetailedProgress]);\n\n  // Callbacks mÃ©morisÃ©s pour Ã©viter les arrow functions dans le JSX\n  const handleScenarioChangeCb = useCallback((...args) => handleScenarioChange(...args), [handleScenarioChange]);\n  const handleToggleProgressDetailsCb = useCallback(() => handleToggleProgressDetails(), [handleToggleProgressDetails]);\n  const handleToggleHelpCb = useCallback(() => handleToggleHelp(), [handleToggleHelp]);\n  const handleBackPressCb = useCallback(() => handleBackPress(), [handleBackPress]);\n\n  // Loading state\n  if (!loaded || !hasValidData) {\n    return (\n      <Container\n        testID=\"conversation-container\"\n        safeArea\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n        backgroundColor=\"#FAFBFC\"\n        statusBarStyle=\"dark-content\"\n      >\n        {/* Loading content can be added here */}\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n     testID=\"conversation-container\" \n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\n      backgroundColor=\"#FAFBFC\"\n      statusBarStyle=\"dark-content\"\n      withPadding={false}\n      style={styles.safeArea}\n    >\n      {/* Header */}\n      <ConversationHeader\n        level={level}\n        onBackPress={handleBackPressCb}\n        levelColor={levelColor}\n      />\n\n      {/* Scenario Selector */}\n      <ConversationSelector\n        scenarios={conversationData.exercises}\n        selectedIndex={currentScenarioIndex}\n        onSelectScenario={handleScenarioChangeCb}\n        levelColor={levelColor}\n      />\n\n      {/* Progress */}\n      <ConversationProgress\n        progress={stats.completionProgress}\n        currentStep={stats.currentStep}\n        totalSteps={stats.totalSteps}\n        levelColor={levelColor}\n        conversationData={conversationData.exercises}\n        completedScenarios={completedScenarios}\n        conversationHistory={conversationHistory}\n        expanded={showDetailedProgress}\n        onToggleExpand={handleToggleProgressDetailsCb}\n        onScenarioPress={handleScenarioChangeCb}\n      />\n\n      {/* Scenario Description */}\n      <ConversationScenarioDescription\n        description={currentScenario.description}\n        helpText={display.currentHelp}\n        showHelp={showHelp}\n        toggleHelp={handleToggleHelpCb}\n        levelColor={levelColor}\n      />\n\n      {/* Chat Area */}\n      <KeyboardAvoidingView\n        style={styles.chatContainer}\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        keyboardVerticalOffset={Platform.OS === \"ios\" ? 90 : 0}\n      >\n        {/* Message List */}\n        <ConversationMessageList\n          messages={conversation}\n          isTyping={isTyping}\n          levelColor={levelColor}\n        />\n\n        {/* Suggestions */}\n        <ConversationSuggestions\n          suggestions={suggestions}\n          onPressSuggestion={handleUseSuggestion}\n          levelColor={levelColor}\n        />\n\n        {/* Input */}\n        <ConversationInput\n          message={message}\n          onChangeMessage={setMessage}\n          onSendMessage={handleSendMessage}\n          levelColor={levelColor}\n        />\n      </KeyboardAvoidingView>\n    </Container>\n  );\n};\n\nexport default ConversationExercise;"],"mappings":";;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAGA,IAAAG,UAAA,GAAAC,uBAAA,CAAAJ,OAAA;AAGA,IAAAK,mBAAA,GAAAC,sBAAA,CAAAN,OAAA;AACA,IAAAO,qBAAA,GAAAD,sBAAA,CAAAN,OAAA;AACA,IAAAQ,qBAAA,GAAAF,sBAAA,CAAAN,OAAA;AACA,IAAAS,gCAAA,GAAAH,sBAAA,CAAAN,OAAA;AACA,IAAAU,wBAAA,GAAAJ,sBAAA,CAAAN,OAAA;AACA,IAAAW,wBAAA,GAAAL,sBAAA,CAAAN,OAAA;AACA,IAAAY,kBAAA,GAAAN,sBAAA,CAAAN,OAAA;AAGA,IAAAa,iBAAA,GAAAP,sBAAA,CAAAN,OAAA;AACA,IAAAc,iBAAA,GAAAR,sBAAA,CAAAN,OAAA;AACA,IAAAe,uBAAA,GAAAf,OAAA;AACA,IAAAgB,MAAA,GAAAV,sBAAA,CAAAN,OAAA;AAA6B,IAAAiB,WAAA,GAAAjB,OAAA;AAAA,SAAAI,wBAAAc,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAhB,uBAAA,YAAAA,wBAAAc,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAK7B,IAAMmB,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAEnC,IAAAC,KAAA,GAAyB,CAAAD,KAAK,oBAALA,KAAK,CAAEE,MAAM,KAAI,CAAC,CAAC;IAAAC,WAAA,GAAAF,KAAA,CAApCG,KAAK;IAALA,KAAK,GAAAD,WAAA,cAAG,IAAI,GAAAA,WAAA;EAGpB,IAAAE,gBAAA,GAAyB,IAAAC,yBAAe,EAAC,CAAC;IAAlCC,YAAY,GAAAF,gBAAA,CAAZE,YAAY;EAGpB,IAAMC,UAAU,GAAG,IAAAC,qCAAa,EAACL,KAAK,CAAC;EACvC,IAAMM,gBAAgB,GAAG,IAAAC,cAAO,EAAC;IAAA,OAAM,IAAAC,2CAAmB,EAACR,KAAK,CAAC;EAAA,GAAE,CAACA,KAAK,CAAC,CAAC;EAG3E,IAAAS,gBAAA,GAuBI,IAAAC,yBAAe,EAACJ,gBAAgB,EAAEN,KAAK,CAAC;IAtB1CW,oBAAoB,GAAAF,gBAAA,CAApBE,oBAAoB;IACpBC,YAAY,GAAAH,gBAAA,CAAZG,YAAY;IACZC,OAAO,GAAAJ,gBAAA,CAAPI,OAAO;IACPC,UAAU,GAAAL,gBAAA,CAAVK,UAAU;IACVC,QAAQ,GAAAN,gBAAA,CAARM,QAAQ;IACRC,WAAW,GAAAP,gBAAA,CAAXO,WAAW;IACXC,QAAQ,GAAAR,gBAAA,CAARQ,QAAQ;IACRC,kBAAkB,GAAAT,gBAAA,CAAlBS,kBAAkB;IAClBC,mBAAmB,GAAAV,gBAAA,CAAnBU,mBAAmB;IACnBC,MAAM,GAAAX,gBAAA,CAANW,MAAM;IACNC,oBAAoB,GAAAZ,gBAAA,CAApBY,oBAAoB;IACpBC,eAAe,GAAAb,gBAAA,CAAfa,eAAe;IACfC,cAAc,GAAAd,gBAAA,CAAdc,cAAc;IACdC,YAAY,GAAAf,gBAAA,CAAZe,YAAY;IACZC,cAAc,GAAAhB,gBAAA,CAAdgB,cAAc;IACdC,WAAW,GAAAjB,gBAAA,CAAXiB,WAAW;IACXC,aAAa,GAAAlB,gBAAA,CAAbkB,aAAa;IACbC,UAAU,GAAAnB,gBAAA,CAAVmB,UAAU;IACVC,sBAAsB,GAAApB,gBAAA,CAAtBoB,sBAAsB;IACtBC,qBAAqB,GAAArB,gBAAA,CAArBqB,qBAAqB;IACrBC,KAAK,GAAAtB,gBAAA,CAALsB,KAAK;IACLC,OAAO,GAAAvB,gBAAA,CAAPuB,OAAO;EAIT,IAAMC,gBAAgB,GAAG,IAAA1B,cAAO,EAAC;IAAA,OAAO;MACtC2B,QAAQ,EAAEvB,oBAAoB;MAC9BwB,IAAI,EAAEJ,KAAK,CAACK,WAAW,IAAI,CAAC;MAC5BC,UAAU,EAAEN,KAAK,CAACM,UAAU,IAAI,CAAC;MACjCC,YAAY,EAAE,CAAAhB,eAAe,oBAAfA,eAAe,CAAEiB,KAAK,KAAI,YAAY5B,oBAAoB,GAAG,CAAC,EAAE;MAC9EY,cAAc,EAAdA;IACF,CAAC;EAAA,CAAC,EAAE,CAACZ,oBAAoB,EAAEoB,KAAK,CAACK,WAAW,EAAEL,KAAK,CAACM,UAAU,EAAEf,eAAe,oBAAfA,eAAe,CAAEiB,KAAK,EAAEhB,cAAc,CAAC,CAAC;EAGxG,IAAMiB,kBAAkB,GAAG,IAAAC,kBAAW,EAAC,YAAM;IAC3C,IAAIrB,MAAM,IAAII,YAAY,IAAIF,eAAe,IAAIQ,qBAAqB,EAAE;MACtE3B,YAAY,CAAC;QACXoC,KAAK,EAAE,eAAe;QACtBvC,KAAK,EAALA,KAAK;QACL0C,IAAI,EAAE,eAAe;QACrBC,QAAQ,EAAEV;MACZ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACb,MAAM,EAAEI,YAAY,EAAEF,eAAe,EAAEQ,qBAAqB,EAAE9B,KAAK,EAAEG,YAAY,EAAE8B,gBAAgB,CAAC,CAAC;EAGzG,IAAAW,gBAAS,EAAC,YAAM;IACdJ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAGxB,IAAMK,eAAe,GAAG,IAAAJ,kBAAW,EAAC,YAAM;IACxCK,kBAAM,CAACC,IAAI,CAAC;MACVC,QAAQ,EAAE,yBAAyB;MACnClD,MAAM,EAAE;QAAEE,KAAK,EAALA;MAAM;IAClB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,IAAMiD,oBAAoB,GAAG,IAAAR,kBAAW,EAAC,UAACS,KAAK;IAAA,OAAKzB,cAAc,CAACyB,KAAK,CAAC;EAAA,GAAE,CAACzB,cAAc,CAAC,CAAC;EAE5F,IAAM0B,iBAAiB,GAAG,IAAAV,kBAAW,EAAC;IAAA,OAAMf,WAAW,CAAC,CAAC;EAAA,GAAE,CAACA,WAAW,CAAC,CAAC;EAEzE,IAAM0B,mBAAmB,GAAG,IAAAX,kBAAW,EAAC,UAACY,UAAU;IAAA,OAAK1B,aAAa,CAAC0B,UAAU,CAAC;EAAA,GAAE,CAAC1B,aAAa,CAAC,CAAC;EAEnG,IAAM2B,gBAAgB,GAAG,IAAAb,kBAAW,EAAC;IAAA,OAAMb,UAAU,CAAC,CAAC;EAAA,GAAE,CAACA,UAAU,CAAC,CAAC;EAEtE,IAAM2B,2BAA2B,GAAG,IAAAd,kBAAW,EAAC;IAAA,OAAMZ,sBAAsB,CAAC,CAAC;EAAA,GAAE,CAACA,sBAAsB,CAAC,CAAC;EAGzG,IAAM2B,sBAAsB,GAAG,IAAAf,kBAAW,EAAC;IAAA,OAAaQ,oBAAoB,CAAAQ,KAAA,SAAAC,SAAQ,CAAC;EAAA,GAAE,CAACT,oBAAoB,CAAC,CAAC;EAC9G,IAAMU,6BAA6B,GAAG,IAAAlB,kBAAW,EAAC;IAAA,OAAMc,2BAA2B,CAAC,CAAC;EAAA,GAAE,CAACA,2BAA2B,CAAC,CAAC;EACrH,IAAMK,kBAAkB,GAAG,IAAAnB,kBAAW,EAAC;IAAA,OAAMa,gBAAgB,CAAC,CAAC;EAAA,GAAE,CAACA,gBAAgB,CAAC,CAAC;EACpF,IAAMO,iBAAiB,GAAG,IAAApB,kBAAW,EAAC;IAAA,OAAMI,eAAe,CAAC,CAAC;EAAA,GAAE,CAACA,eAAe,CAAC,CAAC;EAGjF,IAAI,CAACzB,MAAM,IAAI,CAACI,YAAY,EAAE;IAC5B,OACE,IAAAnD,WAAA,CAAAyF,GAAA,EAACvG,UAAA,CAAAyB,OAAS;MACR+E,MAAM,EAAC,wBAAwB;MAC/BC,QAAQ;MACRC,aAAa,EAAEC,+BAAoB,CAACC,GAAI;MACxCC,eAAe,EAAC,SAAS;MACzBC,cAAc,EAAC;IAAc,CAGpB,CAAC;EAEhB;EAEA,OACE,IAAAhG,WAAA,CAAAiG,IAAA,EAAC/G,UAAA,CAAAyB,OAAS;IACT+E,MAAM,EAAC,wBAAwB;IAC9BC,QAAQ;IACRC,aAAa,EAAEC,+BAAoB,CAACC,GAAI;IACxCC,eAAe,EAAC,SAAS;IACzBC,cAAc,EAAC,cAAc;IAC7BE,WAAW,EAAE,KAAM;IACnBC,KAAK,EAAEC,cAAM,CAACT,QAAS;IAAAU,QAAA,GAGvB,IAAArG,WAAA,CAAAyF,GAAA,EAACrG,mBAAA,CAAAuB,OAAkB;MACjBgB,KAAK,EAAEA,KAAM;MACb2E,WAAW,EAAEd,iBAAkB;MAC/BzD,UAAU,EAAEA;IAAW,CACxB,CAAC,EAGF,IAAA/B,WAAA,CAAAyF,GAAA,EAACnG,qBAAA,CAAAqB,OAAoB;MACnB4F,SAAS,EAAEtE,gBAAgB,CAACuE,SAAU;MACtCC,aAAa,EAAEnE,oBAAqB;MACpCoE,gBAAgB,EAAEvB,sBAAuB;MACzCpD,UAAU,EAAEA;IAAW,CACxB,CAAC,EAGF,IAAA/B,WAAA,CAAAyF,GAAA,EAAClG,qBAAA,CAAAoB,OAAoB;MACnBgG,QAAQ,EAAEjD,KAAK,CAACkD,kBAAmB;MACnC7C,WAAW,EAAEL,KAAK,CAACK,WAAY;MAC/BC,UAAU,EAAEN,KAAK,CAACM,UAAW;MAC7BjC,UAAU,EAAEA,UAAW;MACvBE,gBAAgB,EAAEA,gBAAgB,CAACuE,SAAU;MAC7C3D,kBAAkB,EAAEA,kBAAmB;MACvCC,mBAAmB,EAAEA,mBAAoB;MACzC+D,QAAQ,EAAE7D,oBAAqB;MAC/B8D,cAAc,EAAExB,6BAA8B;MAC9CyB,eAAe,EAAE5B;IAAuB,CACzC,CAAC,EAGF,IAAAnF,WAAA,CAAAyF,GAAA,EAACjG,gCAAA,CAAAmB,OAA+B;MAC9BqG,WAAW,EAAE/D,eAAe,CAAC+D,WAAY;MACzCC,QAAQ,EAAEtD,OAAO,CAACuD,WAAY;MAC9BtE,QAAQ,EAAEA,QAAS;MACnBW,UAAU,EAAEgC,kBAAmB;MAC/BxD,UAAU,EAAEA;IAAW,CACxB,CAAC,EAGF,IAAA/B,WAAA,CAAAiG,IAAA,EAACjH,YAAA,CAAAmI,oBAAoB;MACnBhB,KAAK,EAAEC,cAAM,CAACgB,aAAc;MAC5BC,QAAQ,EAAEC,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,SAAS,GAAG,QAAS;MACvDC,sBAAsB,EAAEF,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,EAAE,GAAG,CAAE;MAAAlB,QAAA,GAGvD,IAAArG,WAAA,CAAAyF,GAAA,EAAChG,wBAAA,CAAAkB,OAAuB;QACtB8G,QAAQ,EAAElF,YAAa;QACvBG,QAAQ,EAAEA,QAAS;QACnBX,UAAU,EAAEA;MAAW,CACxB,CAAC,EAGF,IAAA/B,WAAA,CAAAyF,GAAA,EAAC/F,wBAAA,CAAAiB,OAAuB;QACtBgC,WAAW,EAAEA,WAAY;QACzB+E,iBAAiB,EAAE3C,mBAAoB;QACvChD,UAAU,EAAEA;MAAW,CACxB,CAAC,EAGF,IAAA/B,WAAA,CAAAyF,GAAA,EAAC9F,kBAAA,CAAAgB,OAAiB;QAChB6B,OAAO,EAAEA,OAAQ;QACjBmF,eAAe,EAAElF,UAAW;QAC5BmF,aAAa,EAAE9C,iBAAkB;QACjC/C,UAAU,EAAEA;MAAW,CACxB,CAAC;IAAA,CACkB,CAAC;EAAA,CACd,CAAC;AAEhB,CAAC;AAAC,IAAA8F,QAAA,GAAAC,OAAA,CAAAnH,OAAA,GAEaU,oBAAoB","ignoreList":[]}