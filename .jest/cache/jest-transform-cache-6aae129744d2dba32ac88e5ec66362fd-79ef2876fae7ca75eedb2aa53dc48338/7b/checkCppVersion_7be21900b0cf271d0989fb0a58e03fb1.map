{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","checkCppVersion","matchVersion","_slicedToArray2","_jsVersion","_logger","_errors","cppVersion","global","_REANIMATED_VERSION_CPP","undefined","logger","warn","ok","jsVersion","ReanimatedError","version1","version2","match","_version1$split","split","_version1$split2","default","major1","minor1","_version2$split","_version2$split2","major2","minor2"],"sources":["checkCppVersion.ts"],"sourcesContent":["'use strict';\n\nimport { jsVersion } from './jsVersion';\nimport { logger } from '../logger';\nimport { ReanimatedError } from '../errors';\n\nexport function checkCppVersion() {\n  const cppVersion = global._REANIMATED_VERSION_CPP;\n  if (cppVersion === undefined) {\n    logger.warn(\n      `Couldn't determine the version of the native part of Reanimated.\n    See \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#couldnt-determine-the-version-of-the-native-part-of-reanimated\\` for more details.`\n    );\n    return;\n  }\n  const ok = matchVersion(jsVersion, cppVersion);\n  if (!ok) {\n    throw new ReanimatedError(\n      `Mismatch between JavaScript part and native part of Reanimated (${jsVersion} vs ${cppVersion}).\n    See \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-part-and-native-part-of-reanimated\\` for more details.`\n    );\n  }\n}\n\n// This is used only in test files, therefore it is reported by ts-prune (which is desired)\n// ts-prune-ignore-next\nexport function matchVersion(version1: string, version2: string) {\n  if (version1.match(/^\\d+\\.\\d+\\.\\d+$/) && version2.match(/^\\d+\\.\\d+\\.\\d+$/)) {\n    // x.y.z, compare only major and minor, skip patch\n    const [major1, minor1] = version1.split('.');\n    const [major2, minor2] = version2.split('.');\n    return major1 === major2 && minor1 === minor2;\n  } else {\n    // alpha, beta or rc, compare everything\n    return version1 === version2;\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,eAAA,GAAAA,eAAA;AAAAF,OAAA,CAAAG,YAAA,GAAAA,YAAA;AAAA,IAAAC,eAAA,GAAAR,sBAAA,CAAAC,OAAA;AAEb,IAAAQ,UAAA,GAAAR,OAAA;AACA,IAAAS,OAAA,GAAAT,OAAA;AACA,IAAAU,OAAA,GAAAV,OAAA;AAEO,SAASK,eAAeA,CAAA,EAAG;EAChC,IAAMM,UAAU,GAAGC,MAAM,CAACC,uBAAuB;EACjD,IAAIF,UAAU,KAAKG,SAAS,EAAE;IAC5BC,cAAM,CAACC,IAAI,CACT;AACN,4KACI,CAAC;IACD;EACF;EACA,IAAMC,EAAE,GAAGX,YAAY,CAACY,oBAAS,EAAEP,UAAU,CAAC;EAC9C,IAAI,CAACM,EAAE,EAAE;IACP,MAAM,IAAIE,uBAAe,CACvB,mEAAmED,oBAAS,OAAOP,UAAU;AACnG,4KACI,CAAC;EACH;AACF;AAIO,SAASL,YAAYA,CAACc,QAAgB,EAAEC,QAAgB,EAAE;EAC/D,IAAID,QAAQ,CAACE,KAAK,CAAC,iBAAiB,CAAC,IAAID,QAAQ,CAACC,KAAK,CAAC,iBAAiB,CAAC,EAAE;IAE1E,IAAAC,eAAA,GAAyBH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC;MAAAC,gBAAA,OAAAlB,eAAA,CAAAmB,OAAA,EAAAH,eAAA;MAArCI,MAAM,GAAAF,gBAAA;MAAEG,MAAM,GAAAH,gBAAA;IACrB,IAAAI,eAAA,GAAyBR,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;MAAAM,gBAAA,OAAAvB,eAAA,CAAAmB,OAAA,EAAAG,eAAA;MAArCE,MAAM,GAAAD,gBAAA;MAAEE,MAAM,GAAAF,gBAAA;IACrB,OAAOH,MAAM,KAAKI,MAAM,IAAIH,MAAM,KAAKI,MAAM;EAC/C,CAAC,MAAM;IAEL,OAAOZ,QAAQ,KAAKC,QAAQ;EAC9B;AACF","ignoreList":[]}