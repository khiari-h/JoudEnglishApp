6e75182432b080e9ed97ec1dbc1ea24f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var styles = _reactNative.StyleSheet.create({
  container: {
    backgroundColor: 'white',
    paddingHorizontal: 20,
    paddingTop: _reactNative.Platform.OS === 'ios' ? 16 : 12,
    paddingBottom: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#f1f5f9'
  },
  content: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between'
  },
  leftSection: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1
  },
  backButton: {
    width: 40,
    height: 40,
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 12,
    marginRight: 16
  },
  titleSection: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1
  },
  exerciseIcon: {
    fontSize: 24,
    marginRight: 12,
    opacity: 0.8
  },
  title: {
    fontSize: 20,
    fontWeight: '600',
    letterSpacing: 0.2,
    flex: 1
  },
  levelBadge: {
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 12
  },
  levelText: {
    color: 'white',
    fontWeight: '600',
    fontSize: 15,
    letterSpacing: 0.3
  }
});
var _default = exports.default = styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwic3R5bGVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImNvbnRhaW5lciIsImJhY2tncm91bmRDb2xvciIsInBhZGRpbmdIb3Jpem9udGFsIiwicGFkZGluZ1RvcCIsIlBsYXRmb3JtIiwiT1MiLCJwYWRkaW5nQm90dG9tIiwiYm9yZGVyQm90dG9tV2lkdGgiLCJib3JkZXJCb3R0b21Db2xvciIsImNvbnRlbnQiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwibGVmdFNlY3Rpb24iLCJmbGV4IiwiYmFja0J1dHRvbiIsIndpZHRoIiwiaGVpZ2h0IiwiYm9yZGVyUmFkaXVzIiwibWFyZ2luUmlnaHQiLCJ0aXRsZVNlY3Rpb24iLCJleGVyY2lzZUljb24iLCJmb250U2l6ZSIsIm9wYWNpdHkiLCJ0aXRsZSIsImZvbnRXZWlnaHQiLCJsZXR0ZXJTcGFjaW5nIiwibGV2ZWxCYWRnZSIsInBhZGRpbmdWZXJ0aWNhbCIsImxldmVsVGV4dCIsImNvbG9yIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbInN0eWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNvbXBvbmVudHMvZXhlcmNpc2UtY29tbW9uL0V4ZXJjaXNlSGVhZGVyL3N0eWxlLmpzIC0gVkVSU0lPTiBIVU1BSU5FICYgw4lQVVLDiUVcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFBsYXRmb3JtIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuLyoqXG4gKiDwn5WK77iPIFN0eWxlcyBIdW1haW5zICYgw4lwdXLDqXMgcG91ciBFeGVyY2lzZUhlYWRlclxuICogLSBCbGFuYyBwdXIgdW5pdmVyc2VsXG4gKiAtIFJlc3BpcmFudCBldCBmb25jdGlvbm5lbFxuICogLSBaw6lybyBzdXBlcmZsdSwgesOpcm8gZWZmZXRcbiAqIC0gw4lsw6lnYW5jZSBkYW5zIGxhIHNpbXBsaWNpdMOpXG4gKiAtIERlc2lnbiBcImludmlzaWJsZVwiIHF1aSBsYWlzc2UgcGxhY2UgYXUgY29udGVudVxuICovXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIC8vID09PT09PT09PT09PT09PT09PT0gQ09OVEFJTkVSIFBSSU5DSVBBTCA9PT09PT09PT09PT09PT09PT09XG4gIGNvbnRhaW5lcjoge1xuICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMjAsXG4gICAgcGFkZGluZ1RvcDogUGxhdGZvcm0uT1MgPT09ICdpb3MnID8gMTYgOiAxMixcbiAgICBwYWRkaW5nQm90dG9tOiAxNixcbiAgICBib3JkZXJCb3R0b21XaWR0aDogMSxcbiAgICBib3JkZXJCb3R0b21Db2xvcjogJyNmMWY1ZjknLCAvLyBTw6lwYXJhdGlvbiB1bHRyYS1kaXNjcsOodGVcbiAgfSxcblxuICAvLyA9PT09PT09PT09PT09PT09PT09IENPTlRFTlUgUFJJTkNJUEFMID09PT09PT09PT09PT09PT09PT1cbiAgY29udGVudDoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PSBTRUNUSU9OIEdBVUNIRSA9PT09PT09PT09PT09PT09PT09XG4gIGxlZnRTZWN0aW9uOiB7XG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgZmxleDogMSxcbiAgfSxcblxuICAvLyA9PT09PT09PT09PT09PT09PT09IEJPVVRPTiBSRVRPVVIgLSBVbHRyYS1zaW1wbGUgPT09PT09PT09PT09PT09PT09PVxuICBiYWNrQnV0dG9uOiB7XG4gICAgd2lkdGg6IDQwLFxuICAgIGhlaWdodDogNDAsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGJvcmRlclJhZGl1czogMTIsXG4gICAgbWFyZ2luUmlnaHQ6IDE2LFxuICAgIC8vIFBhcyBkJ29tYnJlLCBwYXMgZCdlZmZldCAtIGp1c3RlIGZvbmN0aW9ubmVsXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PSBTRUNUSU9OIFRJVFJFID09PT09PT09PT09PT09PT09PT1cbiAgdGl0bGVTZWN0aW9uOiB7XG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgZmxleDogMSxcbiAgfSxcblxuICAvLyA9PT09PT09PT09PT09PT09PT09IElDw5RORSBFWEVSQ0lDRSAtIFNpbXBsZSA9PT09PT09PT09PT09PT09PT09XG4gIGV4ZXJjaXNlSWNvbjoge1xuICAgIGZvbnRTaXplOiAyNCxcbiAgICBtYXJnaW5SaWdodDogMTIsXG4gICAgb3BhY2l0eTogMC44LCAvLyBEaXNjcmV0XG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PSBUSVRSRSAtIFR5cG9ncmFwaHkgw6lwdXLDqWUgPT09PT09PT09PT09PT09PT09PVxuICB0aXRsZToge1xuICAgIGZvbnRTaXplOiAyMCxcbiAgICBmb250V2VpZ2h0OiAnNjAwJywgLy8gTWVkaXVtIHdlaWdodCAtIHBhcyB0cm9wIGdyYXNcbiAgICBsZXR0ZXJTcGFjaW5nOiAwLjIsIC8vIFN1YnRsZVxuICAgIGZsZXg6IDEsXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PSBCQURHRSBOSVZFQVUgLSBNaW5pbWFsID09PT09PT09PT09PT09PT09PT1cbiAgbGV2ZWxCYWRnZToge1xuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAxMixcbiAgICBwYWRkaW5nVmVydGljYWw6IDYsXG4gICAgYm9yZGVyUmFkaXVzOiAxMixcbiAgICAvLyBQYXMgZCdvbWJyZSwgcGFzIGQnZWZmZXQgLSBqdXN0ZSBsYSBjb3VsZXVyIHB1cmVcbiAgfSxcbiAgbGV2ZWxUZXh0OiB7XG4gICAgY29sb3I6ICd3aGl0ZScsXG4gICAgZm9udFdlaWdodDogJzYwMCcsXG4gICAgZm9udFNpemU6IDE1LFxuICAgIGxldHRlclNwYWNpbmc6IDAuMyxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBzdHlsZXM7Il0sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBVUEsSUFBTUMsTUFBTSxHQUFHQyx1QkFBVSxDQUFDQyxNQUFNLENBQUM7RUFFL0JDLFNBQVMsRUFBRTtJQUNUQyxlQUFlLEVBQUUsT0FBTztJQUN4QkMsaUJBQWlCLEVBQUUsRUFBRTtJQUNyQkMsVUFBVSxFQUFFQyxxQkFBUSxDQUFDQyxFQUFFLEtBQUssS0FBSyxHQUFHLEVBQUUsR0FBRyxFQUFFO0lBQzNDQyxhQUFhLEVBQUUsRUFBRTtJQUNqQkMsaUJBQWlCLEVBQUUsQ0FBQztJQUNwQkMsaUJBQWlCLEVBQUU7RUFDckIsQ0FBQztFQUdEQyxPQUFPLEVBQUU7SUFDUEMsYUFBYSxFQUFFLEtBQUs7SUFDcEJDLFVBQVUsRUFBRSxRQUFRO0lBQ3BCQyxjQUFjLEVBQUU7RUFDbEIsQ0FBQztFQUdEQyxXQUFXLEVBQUU7SUFDWEgsYUFBYSxFQUFFLEtBQUs7SUFDcEJDLFVBQVUsRUFBRSxRQUFRO0lBQ3BCRyxJQUFJLEVBQUU7RUFDUixDQUFDO0VBR0RDLFVBQVUsRUFBRTtJQUNWQyxLQUFLLEVBQUUsRUFBRTtJQUNUQyxNQUFNLEVBQUUsRUFBRTtJQUNWTCxjQUFjLEVBQUUsUUFBUTtJQUN4QkQsVUFBVSxFQUFFLFFBQVE7SUFDcEJPLFlBQVksRUFBRSxFQUFFO0lBQ2hCQyxXQUFXLEVBQUU7RUFFZixDQUFDO0VBR0RDLFlBQVksRUFBRTtJQUNaVixhQUFhLEVBQUUsS0FBSztJQUNwQkMsVUFBVSxFQUFFLFFBQVE7SUFDcEJHLElBQUksRUFBRTtFQUNSLENBQUM7RUFHRE8sWUFBWSxFQUFFO0lBQ1pDLFFBQVEsRUFBRSxFQUFFO0lBQ1pILFdBQVcsRUFBRSxFQUFFO0lBQ2ZJLE9BQU8sRUFBRTtFQUNYLENBQUM7RUFHREMsS0FBSyxFQUFFO0lBQ0xGLFFBQVEsRUFBRSxFQUFFO0lBQ1pHLFVBQVUsRUFBRSxLQUFLO0lBQ2pCQyxhQUFhLEVBQUUsR0FBRztJQUNsQlosSUFBSSxFQUFFO0VBQ1IsQ0FBQztFQUdEYSxVQUFVLEVBQUU7SUFDVnpCLGlCQUFpQixFQUFFLEVBQUU7SUFDckIwQixlQUFlLEVBQUUsQ0FBQztJQUNsQlYsWUFBWSxFQUFFO0VBRWhCLENBQUM7RUFDRFcsU0FBUyxFQUFFO0lBQ1RDLEtBQUssRUFBRSxPQUFPO0lBQ2RMLFVBQVUsRUFBRSxLQUFLO0lBQ2pCSCxRQUFRLEVBQUUsRUFBRTtJQUNaSSxhQUFhLEVBQUU7RUFDakI7QUFDRixDQUFDLENBQUM7QUFBQyxJQUFBSyxRQUFBLEdBQUFDLE9BQUEsQ0FBQUMsT0FBQSxHQUVZcEMsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==