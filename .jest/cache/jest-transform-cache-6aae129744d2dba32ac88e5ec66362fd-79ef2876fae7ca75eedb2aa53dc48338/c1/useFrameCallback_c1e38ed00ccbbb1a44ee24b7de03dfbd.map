{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useFrameCallback","_react","_FrameCallbackRegistryJS","frameCallbackRegistry","FrameCallbackRegistryJS","callback","autostart","arguments","length","undefined","ref","useRef","setActive","isActive","manageStateFrameCallback","current","callbackId","useEffect","registerFrameCallback","memoizedFrameCallback","unregisterFrameCallback"],"sources":["useFrameCallback.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport FrameCallbackRegistryJS from '../frameCallback/FrameCallbackRegistryJS';\nimport type { FrameInfo } from '../frameCallback/FrameCallbackRegistryUI';\n\n/**\n * @param setActive - A function that lets you start the frame callback or stop\n *   it from running.\n * @param isActive - A boolean indicating whether a callback is running.\n * @param callbackId - A number indicating a unique identifier of the frame\n *   callback.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useFrameCallback#returns\n */\nexport type FrameCallback = {\n  setActive: (isActive: boolean) => void;\n  isActive: boolean;\n  callbackId: number;\n};\nconst frameCallbackRegistry = new FrameCallbackRegistryJS();\n\n/**\n * Lets you run a function on every frame update.\n *\n * @param callback - A function executed on every frame update.\n * @param autostart - Whether the callback should start automatically. Defaults\n *   to `true`.\n * @returns A frame callback object - {@link FrameCallback}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useFrameCallback\n */\nexport function useFrameCallback(\n  callback: (frameInfo: FrameInfo) => void,\n  autostart = true\n): FrameCallback {\n  const ref = useRef<FrameCallback>({\n    setActive: (isActive: boolean) => {\n      frameCallbackRegistry.manageStateFrameCallback(\n        ref.current.callbackId,\n        isActive\n      );\n      ref.current.isActive = isActive;\n    },\n    isActive: autostart,\n    callbackId: -1,\n  });\n\n  useEffect(() => {\n    ref.current.callbackId =\n      frameCallbackRegistry.registerFrameCallback(callback);\n    const memoizedFrameCallback = ref.current;\n    ref.current.setActive(ref.current.isActive);\n\n    return () => {\n      frameCallbackRegistry.unregisterFrameCallback(\n        memoizedFrameCallback.callbackId\n      );\n      memoizedFrameCallback.callbackId = -1;\n    };\n  }, [callback, autostart]);\n\n  return ref.current;\n}\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,gBAAA,GAAAA,gBAAA;AACb,IAAAC,MAAA,GAAAN,OAAA;AACA,IAAAO,wBAAA,GAAAR,sBAAA,CAAAC,OAAA;AAgBA,IAAMQ,qBAAqB,GAAG,IAAIC,gCAAuB,CAAC,CAAC;AAWpD,SAASJ,gBAAgBA,CAC9BK,QAAwC,EAEzB;EAAA,IADfC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAEhB,IAAMG,GAAG,GAAG,IAAAC,aAAM,EAAgB;IAChCC,SAAS,EAAE,SAAXA,SAASA,CAAGC,QAAiB,EAAK;MAChCV,qBAAqB,CAACW,wBAAwB,CAC5CJ,GAAG,CAACK,OAAO,CAACC,UAAU,EACtBH,QACF,CAAC;MACDH,GAAG,CAACK,OAAO,CAACF,QAAQ,GAAGA,QAAQ;IACjC,CAAC;IACDA,QAAQ,EAAEP,SAAS;IACnBU,UAAU,EAAE,CAAC;EACf,CAAC,CAAC;EAEF,IAAAC,gBAAS,EAAC,YAAM;IACdP,GAAG,CAACK,OAAO,CAACC,UAAU,GACpBb,qBAAqB,CAACe,qBAAqB,CAACb,QAAQ,CAAC;IACvD,IAAMc,qBAAqB,GAAGT,GAAG,CAACK,OAAO;IACzCL,GAAG,CAACK,OAAO,CAACH,SAAS,CAACF,GAAG,CAACK,OAAO,CAACF,QAAQ,CAAC;IAE3C,OAAO,YAAM;MACXV,qBAAqB,CAACiB,uBAAuB,CAC3CD,qBAAqB,CAACH,UACxB,CAAC;MACDG,qBAAqB,CAACH,UAAU,GAAG,CAAC,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACX,QAAQ,EAAEC,SAAS,CAAC,CAAC;EAEzB,OAAOI,GAAG,CAACK,OAAO;AACpB","ignoreList":[]}