{"version":3,"names":["_getJestObj","mock","useDashboardState","jest","fn","showLevelProgress","setShowLevelProgress","openLevelProgressModal","closeLevelProgressModal","refreshing","activeTab","setActiveTab","onRefresh","mockResolvedValue","getLevelProgress","refresh","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_expoRouter","_Dashboard","LastActivity","_interopRequireWildcard","_ProgressContext","_ThemeContext","_CurrentLevelContext","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_require","mockLastActivityData","type","level","title","timestamp","Date","now","metadata","categoryIndex","word","totalWords","describe","beforeEach","clearAllMocks","router","push","mockClear","it","mockReturnValue","lastActivity","isLoading","saveActivity","clearActivity","reload","_render","render","jsx","ThemeProvider","children","ProgressProvider","CurrentLevelProvider","getByTestId","getByText","waitFor","expect","toBeTruthy","timeout","continueButton","fireEvent","press","toHaveBeenCalledWith","pathname","params","_render2","startButton"],"sources":["resume-last-activity.test.js"],"sourcesContent":["// __tests__/integration/resume-last-activity.test.js\nimport React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport { router } from 'expo-router';\nimport Dashboard from '../../src/screens/Dashboard';\nimport * as LastActivity from '../../src/hooks/useLastActivity';\nimport { ProgressProvider } from '../../src/contexts/ProgressContext';\nimport { ThemeProvider } from '../../src/contexts/ThemeContext';\nimport { CurrentLevelProvider } from '../../src/contexts/CurrentLevelContext';\n\n// Mock useDashboardState pour éviter les boucles infinies\njest.mock('../../src/screens/Dashboard/hooks/useDashboardState', () => ({\n  useDashboardState: jest.fn(() => ({\n    showLevelProgress: false,\n    setShowLevelProgress: jest.fn(),\n    openLevelProgressModal: jest.fn(),\n    closeLevelProgressModal: jest.fn(),\n    refreshing: false,\n    activeTab: \"home\",\n    setActiveTab: jest.fn(),\n    onRefresh: jest.fn().mockResolvedValue(),\n  })),\n}));\n\n// Mock de useLastActivity avec fonction stable\njest.mock('../../src/hooks/useLastActivity');\n\n// Mock de useRealTimeProgress\njest.mock('../../src/hooks/useRealTimeProgress', () => () => ({\n  getLevelProgress: jest.fn(() => 50),\n  refresh: jest.fn(),\n}));\n\nconst mockLastActivityData = {\n  type: 'grammar',\n  level: 'A1',\n  title: 'Grammaire de base',\n  timestamp: Date.now(),\n  metadata: {\n    categoryIndex: 1,\n    word: 5,\n    totalWords: 15,\n  },\n};\n\ndescribe('Scénario 2: Reprise de la dernière activité', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    router.push.mockClear();\n  });\n\n  it('devrait afficher la section \"Continuer\" et naviguer correctement', async () => {\n    // Mock avec activité existante\n    LastActivity.default.mockReturnValue({\n      lastActivity: mockLastActivityData,\n      isLoading: false,\n      saveActivity: jest.fn(),\n      clearActivity: jest.fn(),\n      reload: jest.fn(),\n    });\n\n    const { getByTestId, getByText } = render(\n      <ThemeProvider>\n        <ProgressProvider>\n          <CurrentLevelProvider>\n            <Dashboard />\n          </CurrentLevelProvider>\n        </ProgressProvider>\n      </ThemeProvider>\n    );\n\n    // Attendre que le composant soit stable\n    await waitFor(() => {\n      expect(getByTestId('hero-continue-section')).toBeTruthy();\n    }, { timeout: 5000 });\n\n    expect(getByText('Grammaire de base')).toBeTruthy();\n    expect(getByText(/Niv A1/)).toBeTruthy();\n    expect(getByText(/Mot 6\\/15/)).toBeTruthy();\n\n    // Cliquer sur le bouton \"Continuer\"\n    const continueButton = getByTestId('continue-activity-button');\n    fireEvent.press(continueButton);\n\n    // Vérifier la navigation\n    await waitFor(() => {\n      expect(router.push).toHaveBeenCalledWith({\n        pathname: '/tabs/grammarExercise',\n        params: {\n          level: 'A1',\n        },\n      });\n    });\n  });\n\n  it('devrait afficher la section vide s\\'il n\\'y a pas de dernière activité', async () => {\n    // Mock sans activité\n    LastActivity.default.mockReturnValue({\n      lastActivity: null,\n      isLoading: false,\n      saveActivity: jest.fn(),\n      clearActivity: jest.fn(),\n      reload: jest.fn(),\n    });\n\n    const { getByTestId, getByText } = render(\n      <ThemeProvider>\n        <ProgressProvider>\n          <CurrentLevelProvider>\n            <Dashboard />\n          </CurrentLevelProvider>\n        </ProgressProvider>\n      </ThemeProvider>\n    );\n\n    // Attendre que le composant soit stable\n    await waitFor(() => {\n      expect(getByTestId('hero-empty-section')).toBeTruthy();\n    }, { timeout: 5000 });\n\n    expect(getByText(\"Commencer l'apprentissage\")).toBeTruthy();\n\n    // Cliquer sur le bouton pour commencer\n    const startButton = getByTestId('level-selection-button');\n    fireEvent.press(startButton);\n\n    // Vérifier la navigation\n    await waitFor(() => {\n      expect(router.push).toHaveBeenCalledWith('/tabs/levelSelection');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}