{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","SkipEnteringContext","LayoutAnimationConfig","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_react","_interopRequireWildcard","_core","_findNodeHandle","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","getOwnPropertyDescriptor","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","createContext","SkipEntering","props","skipValueRef","useRef","shouldSkip","useEffect","current","jsx","Provider","children","_Component","arguments","key","getMaybeWrappedChildren","Children","count","skipExiting","map","child","setShouldAnimateExiting","tag","findNodeHandle","setShouldAnimateExitingForTag","componentWillUnmount","undefined","render","skipEntering","Component"],"sources":["LayoutAnimationConfig.tsx"],"sourcesContent":["'use strict';\nimport React, {\n  Children,\n  Component,\n  createContext,\n  useEffect,\n  useRef,\n} from 'react';\nimport type { ReactNode } from 'react';\nimport { setShouldAnimateExitingForTag } from '../core';\nimport { findNodeHandle } from '../platformFunctions/findNodeHandle';\n\nexport const SkipEnteringContext =\n  createContext<React.MutableRefObject<boolean> | null>(null);\n\n// skipEntering - don't animate entering of children on wrapper mount\n// skipExiting - don't animate exiting of children on wrapper unmount\ninterface LayoutAnimationConfigProps {\n  skipEntering?: boolean;\n  skipExiting?: boolean;\n  children: ReactNode;\n}\n\nfunction SkipEntering(props: { shouldSkip: boolean; children: ReactNode }) {\n  const skipValueRef = useRef(props.shouldSkip);\n\n  useEffect(() => {\n    skipValueRef.current = false;\n  }, [skipValueRef]);\n\n  return (\n    <SkipEnteringContext.Provider value={skipValueRef}>\n      {props.children}\n    </SkipEnteringContext.Provider>\n  );\n}\n\n// skipExiting (unlike skipEntering) cannot be done by conditionally\n// configuring the animation in `createAnimatedComponent`, since at this stage\n// we don't know if the wrapper is going to be unmounted or not.\n// That's why we need to pass the skipExiting flag to the native side\n// when the wrapper is unmounted to prevent the animation.\n// Since `ReactNode` can be a list of nodes, we wrap every child with our wrapper\n// so we are able to access its tag with `findNodeHandle`.\n/**\n * A component that lets you skip entering and exiting animations.\n *\n * @param skipEntering - A boolean indicating whether children's entering\n *   animations should be skipped when `LayoutAnimationConfig` is mounted.\n * @param skipExiting - A boolean indicating whether children's exiting\n *   animations should be skipped when LayoutAnimationConfig is unmounted.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-animation-config/\n */\nexport class LayoutAnimationConfig extends Component<LayoutAnimationConfigProps> {\n  getMaybeWrappedChildren() {\n    return Children.count(this.props.children) > 1 && this.props.skipExiting\n      ? Children.map(this.props.children, (child) => (\n          <LayoutAnimationConfig skipExiting>{child}</LayoutAnimationConfig>\n        ))\n      : this.props.children;\n  }\n\n  setShouldAnimateExiting() {\n    if (Children.count(this.props.children) === 1) {\n      const tag = findNodeHandle(this);\n      if (tag) {\n        setShouldAnimateExitingForTag(tag, !this.props.skipExiting);\n      }\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.props.skipExiting !== undefined) {\n      this.setShouldAnimateExiting();\n    }\n  }\n\n  render(): ReactNode {\n    const children = this.getMaybeWrappedChildren();\n\n    if (this.props.skipEntering === undefined) {\n      return children;\n    }\n\n    return (\n      <SkipEntering shouldSkip={this.props.skipEntering}>\n        {children}\n      </SkipEntering>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}