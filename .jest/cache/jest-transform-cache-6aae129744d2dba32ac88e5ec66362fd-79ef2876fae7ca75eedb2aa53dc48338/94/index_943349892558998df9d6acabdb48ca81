c3030da3d146bf745ed2670f0f3467fd
function cov_254ivapfmc() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingInput\\index.js";
  var hash = "f57bb60470561edc503cec39b28c7e219235eea6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingInput\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 58,
          column: 1
        }
      },
      "1": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "2": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "3": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "4": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "5": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "6": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 57,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 22
          },
          end: {
            line: 7,
            column: 23
          }
        },
        loc: {
          start: {
            line: 14,
            column: 6
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 27,
            column: 40
          }
        },
        loc: {
          start: {
            line: 27,
            column: 49
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 27
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 12
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 10
          },
          end: {
            line: 8,
            column: 12
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 10,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 13
          },
          end: {
            line: 10,
            column: 18
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 24
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 44
          }
        }],
        line: 12
      },
      "4": {
        loc: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 13,
            column: 27
          }
        }],
        line: 13
      },
      "5": {
        loc: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "6": {
        loc: {
          start: {
            line: 39,
            column: 10
          },
          end: {
            line: 39,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 10
          },
          end: {
            line: 39,
            column: 18
          }
        }, {
          start: {
            line: 39,
            column: 22
          },
          end: {
            line: 39,
            column: 42
          }
        }],
        line: 39
      },
      "7": {
        loc: {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 36
          },
          end: {
            line: 40,
            column: 45
          }
        }, {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 58
          }
        }],
        line: 40
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f57bb60470561edc503cec39b28c7e219235eea6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_254ivapfmc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_254ivapfmc();
import { View, TextInput, Text } from "react-native";
import { useCallback } from "react";
import createStyles from "./style";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_254ivapfmc().s[0]++;
var SpellingInput = function SpellingInput(_ref) {
  var _ref$value = _ref.value,
    value = _ref$value === void 0 ? (cov_254ivapfmc().b[0][0]++, "") : _ref$value,
    onChangeText = _ref.onChangeText,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? (cov_254ivapfmc().b[1][0]++, false) : _ref$disabled,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_254ivapfmc().b[2][0]++, "#3b82f6") : _ref$levelColor,
    _ref$placeholder = _ref.placeholder,
    placeholder = _ref$placeholder === void 0 ? (cov_254ivapfmc().b[3][0]++, "Tapez votre r√©ponse ici...") : _ref$placeholder,
    _ref$testID = _ref.testID,
    testID = _ref$testID === void 0 ? (cov_254ivapfmc().b[4][0]++, "spelling-input") : _ref$testID;
  cov_254ivapfmc().f[0]++;
  var styles = (cov_254ivapfmc().s[1]++, createStyles(levelColor));
  cov_254ivapfmc().s[2]++;
  if (!onChangeText) {
    cov_254ivapfmc().b[5][0]++;
    cov_254ivapfmc().s[3]++;
    return _jsx(View, {
      style: styles.container,
      children: _jsx(Text, {
        style: styles.errorText,
        children: "Erreur: fonction onChangeText manquante"
      })
    });
  } else {
    cov_254ivapfmc().b[5][1]++;
  }
  var handleChangeText = (cov_254ivapfmc().s[4]++, useCallback(function (text) {
    cov_254ivapfmc().f[1]++;
    cov_254ivapfmc().s[5]++;
    onChangeText(text);
  }, [onChangeText]));
  cov_254ivapfmc().s[6]++;
  return _jsxs(View, {
    style: styles.container,
    children: [_jsx(Text, {
      style: styles.label,
      children: "Votre r\xE9ponse :"
    }), _jsx(TextInput, {
      testID: testID,
      style: [styles.input, (cov_254ivapfmc().b[6][0]++, disabled) && (cov_254ivapfmc().b[6][1]++, styles.disabledInput), {
        borderColor: disabled ? (cov_254ivapfmc().b[7][0]++, "#e2e8f0") : (cov_254ivapfmc().b[7][1]++, levelColor)
      }],
      value: value,
      onChangeText: handleChangeText,
      placeholder: placeholder,
      placeholderTextColor: "#94a3b8",
      autoCapitalize: "none",
      autoCorrect: false,
      editable: !disabled,
      selectTextOnFocus: !disabled,
      returnKeyType: "done",
      blurOnSubmit: true,
      accessible: true,
      accessibilityLabel: "Zone de saisie pour votre r\xE9ponse",
      accessibilityHint: "Tapez votre r\xE9ponse \xE0 l'exercice d'orthographe"
    })]
  });
};
export default SpellingInput;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWaWV3IiwiVGV4dElucHV0IiwiVGV4dCIsInVzZUNhbGxiYWNrIiwiY3JlYXRlU3R5bGVzIiwianN4IiwiX2pzeCIsImpzeHMiLCJfanN4cyIsImNvdl8yNTRpdmFwZm1jIiwicyIsIlNwZWxsaW5nSW5wdXQiLCJfcmVmIiwiX3JlZiR2YWx1ZSIsInZhbHVlIiwiYiIsIm9uQ2hhbmdlVGV4dCIsIl9yZWYkZGlzYWJsZWQiLCJkaXNhYmxlZCIsIl9yZWYkbGV2ZWxDb2xvciIsImxldmVsQ29sb3IiLCJfcmVmJHBsYWNlaG9sZGVyIiwicGxhY2Vob2xkZXIiLCJfcmVmJHRlc3RJRCIsInRlc3RJRCIsImYiLCJzdHlsZXMiLCJzdHlsZSIsImNvbnRhaW5lciIsImNoaWxkcmVuIiwiZXJyb3JUZXh0IiwiaGFuZGxlQ2hhbmdlVGV4dCIsInRleHQiLCJsYWJlbCIsImlucHV0IiwiZGlzYWJsZWRJbnB1dCIsImJvcmRlckNvbG9yIiwicGxhY2Vob2xkZXJUZXh0Q29sb3IiLCJhdXRvQ2FwaXRhbGl6ZSIsImF1dG9Db3JyZWN0IiwiZWRpdGFibGUiLCJzZWxlY3RUZXh0T25Gb2N1cyIsInJldHVybktleVR5cGUiLCJibHVyT25TdWJtaXQiLCJhY2Nlc3NpYmxlIiwiYWNjZXNzaWJpbGl0eUxhYmVsIiwiYWNjZXNzaWJpbGl0eUhpbnQiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTcGVsbGluZ0lucHV0L2luZGV4LmpzIC0gVkVSU0lPTiBTQU5TIERFQlVHXHJcblxyXG5pbXBvcnQgeyBWaWV3LCBUZXh0SW5wdXQsIFRleHQgfSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XHJcbmltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBjcmVhdGVTdHlsZXMgZnJvbSBcIi4vc3R5bGVcIjtcclxuXHJcbmNvbnN0IFNwZWxsaW5nSW5wdXQgPSAoeyBcclxuICB2YWx1ZSA9IFwiXCIsIFxyXG4gIG9uQ2hhbmdlVGV4dCwgXHJcbiAgZGlzYWJsZWQgPSBmYWxzZSwgXHJcbiAgbGV2ZWxDb2xvciA9IFwiIzNiODJmNlwiLFxyXG4gIHBsYWNlaG9sZGVyID0gXCJUYXBleiB2b3RyZSByw6lwb25zZSBpY2kuLi5cIixcclxuICB0ZXN0SUQgPSBcInNwZWxsaW5nLWlucHV0XCJcclxufSkgPT4ge1xyXG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZVN0eWxlcyhsZXZlbENvbG9yKTtcclxuXHJcbiAgaWYgKCFvbkNoYW5nZVRleHQpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cclxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmVycm9yVGV4dH0+XHJcbiAgICAgICAgICBFcnJldXI6IGZvbmN0aW9uIG9uQ2hhbmdlVGV4dCBtYW5xdWFudGVcclxuICAgICAgICA8L1RleHQ+XHJcbiAgICAgIDwvVmlldz5cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBjb25zdCBoYW5kbGVDaGFuZ2VUZXh0ID0gdXNlQ2FsbGJhY2soKHRleHQpID0+IHtcclxuICAgIG9uQ2hhbmdlVGV4dCh0ZXh0KTtcclxuICB9LCBbb25DaGFuZ2VUZXh0XSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XHJcbiAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMubGFiZWx9PlZvdHJlIHLDqXBvbnNlIDo8L1RleHQ+XHJcbiAgICAgIFxyXG4gICAgICA8VGV4dElucHV0XHJcbiAgICAgICAgdGVzdElEPXt0ZXN0SUR9XHJcbiAgICAgICAgc3R5bGU9e1tcclxuICAgICAgICAgIHN0eWxlcy5pbnB1dCxcclxuICAgICAgICAgIGRpc2FibGVkICYmIHN0eWxlcy5kaXNhYmxlZElucHV0LFxyXG4gICAgICAgICAgeyBib3JkZXJDb2xvcjogZGlzYWJsZWQgPyBcIiNlMmU4ZjBcIiA6IGxldmVsQ29sb3IgfVxyXG4gICAgICAgIF19XHJcbiAgICAgICAgdmFsdWU9e3ZhbHVlfVxyXG4gICAgICAgIG9uQ2hhbmdlVGV4dD17aGFuZGxlQ2hhbmdlVGV4dH1cclxuICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XHJcbiAgICAgICAgcGxhY2Vob2xkZXJUZXh0Q29sb3I9XCIjOTRhM2I4XCJcclxuICAgICAgICBhdXRvQ2FwaXRhbGl6ZT1cIm5vbmVcIlxyXG4gICAgICAgIGF1dG9Db3JyZWN0PXtmYWxzZX1cclxuICAgICAgICBlZGl0YWJsZT17IWRpc2FibGVkfVxyXG4gICAgICAgIHNlbGVjdFRleHRPbkZvY3VzPXshZGlzYWJsZWR9XHJcbiAgICAgICAgcmV0dXJuS2V5VHlwZT1cImRvbmVcIlxyXG4gICAgICAgIGJsdXJPblN1Ym1pdFxyXG4gICAgICAgIGFjY2Vzc2libGVcclxuICAgICAgICBhY2Nlc3NpYmlsaXR5TGFiZWw9XCJab25lIGRlIHNhaXNpZSBwb3VyIHZvdHJlIHLDqXBvbnNlXCJcclxuICAgICAgICBhY2Nlc3NpYmlsaXR5SGludD1cIlRhcGV6IHZvdHJlIHLDqXBvbnNlIMOgIGwnZXhlcmNpY2UgZCdvcnRob2dyYXBoZVwiXHJcbiAgICAgIC8+XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNwZWxsaW5nSW5wdXQ7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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