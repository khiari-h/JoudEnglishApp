{"version":3,"names":["_react","require","_reactNative","useVocabularyNavigation","_ref","exercises","level","mode","categoryIndex","wordIndex","totalWordsInCategory","setCategoryIndex","setWordIndex","setShowTranslation","completedWords","setCompletedWords","changeCategory","useCallback","newCategoryIndex","goToNextWord","prev","goToPreviousWord","markWordAsCompleted","catIndex","wIndex","categoryCompleted","isAlreadyCompleted","find","word","newWordEntry","timestamp","Date","now","date","toDateString","Object","assign","_defineProperty2","default","concat","_toConsumableArray2","findNextUncompletedCategory","numCategories","length","i","_completedWords$nextI","_category$words","nextIndex","category","completedInCategory","totalInCategory","words","handleNext","nextCategoryIndex","completionMessage","Alert","alert","completed","handlePrevious","_previousCategory$wor","previousCategoryIndex","previousCategory","lastWordIndex"],"sources":["useVocabularyNavigation.js"],"sourcesContent":["// src/screens/exercises/vocabulary/hooks/internal/useVocabularyNavigation.js\r\nimport { useCallback } from 'react';\r\nimport { Alert } from 'react-native';\r\n\r\nexport default function useVocabularyNavigation({\r\n  exercises,\r\n  level,\r\n  mode,\r\n  categoryIndex,\r\n  wordIndex,\r\n  totalWordsInCategory,\r\n  setCategoryIndex,\r\n  setWordIndex,\r\n  setShowTranslation,\r\n  completedWords,\r\n  setCompletedWords,\r\n}) {\r\n  const changeCategory = useCallback((newCategoryIndex) => {\r\n    setCategoryIndex(newCategoryIndex);\r\n    setWordIndex(0);\r\n    setShowTranslation(false);\r\n  }, [setCategoryIndex, setWordIndex, setShowTranslation]);\r\n\r\n  const goToNextWord = useCallback(() => {\r\n    setWordIndex((prev) => prev + 1);\r\n    setShowTranslation(false);\r\n  }, [setWordIndex, setShowTranslation]);\r\n\r\n  const goToPreviousWord = useCallback(() => {\r\n    if (wordIndex > 0) {\r\n      setWordIndex((prev) => prev - 1);\r\n      setShowTranslation(false);\r\n      return true;\r\n    }\r\n    return false;\r\n  }, [wordIndex, setWordIndex, setShowTranslation]);\r\n\r\n  const markWordAsCompleted = useCallback((catIndex, wIndex) => {\r\n    setCompletedWords((prev) => {\r\n      const categoryCompleted = prev[catIndex] || [];\r\n      const isAlreadyCompleted = categoryCompleted.find((word) =>\r\n        (typeof word === 'number' && word === wIndex) ||\r\n        (typeof word === 'object' && word.wordIndex === wIndex)\r\n      );\r\n      if (!isAlreadyCompleted) {\r\n        const newWordEntry = { wordIndex: wIndex, timestamp: Date.now(), date: new Date().toDateString() };\r\n        return { ...prev, [catIndex]: [...categoryCompleted, newWordEntry] };\r\n      }\r\n      return prev;\r\n    });\r\n  }, [setCompletedWords]);\r\n\r\n  const findNextUncompletedCategory = useCallback(() => {\r\n    const numCategories = exercises.length;\r\n    for (let i = 1; i <= numCategories; i++) {\r\n      const nextIndex = (categoryIndex + i) % numCategories;\r\n      const category = exercises[nextIndex];\r\n      const completedInCategory = completedWords[nextIndex]?.length || 0;\r\n      const totalInCategory = category.words?.length || 0;\r\n      if (completedInCategory < totalInCategory) return nextIndex;\r\n    }\r\n    return -1;\r\n  }, [exercises, categoryIndex, completedWords]);\r\n\r\n  const handleNext = useCallback(() => {\r\n    markWordAsCompleted(categoryIndex, wordIndex);\r\n    if (wordIndex < totalWordsInCategory - 1) {\r\n      goToNextWord();\r\n    } else {\r\n      const nextCategoryIndex = findNextUncompletedCategory();\r\n      if (nextCategoryIndex === -1) {\r\n        const completionMessage = mode === 'fast'\r\n          ? `Félicitations ! Vous avez terminé le Fast Vocabulary ${level} !`\r\n          : `Félicitations ! Vous avez terminé le vocabulaire ${level} !`;\r\n        Alert.alert('Félicitations', completionMessage);\r\n        return { completed: true };\r\n      } else {\r\n        changeCategory(nextCategoryIndex);\r\n      }\r\n    }\r\n    return { completed: false };\r\n  }, [categoryIndex, wordIndex, totalWordsInCategory, markWordAsCompleted, goToNextWord, findNextUncompletedCategory, changeCategory, mode, level]);\r\n\r\n  const handlePrevious = useCallback(() => {\r\n    if (wordIndex > 0) {\r\n      goToPreviousWord();\r\n      return;\r\n    }\r\n    if (categoryIndex > 0) {\r\n      const previousCategoryIndex = categoryIndex - 1;\r\n      const previousCategory = exercises[previousCategoryIndex];\r\n      const lastWordIndex = (previousCategory.words?.length || 1) - 1;\r\n      setCategoryIndex(previousCategoryIndex);\r\n      setWordIndex(lastWordIndex);\r\n      setShowTranslation(false);\r\n    }\r\n  }, [wordIndex, categoryIndex, exercises, goToPreviousWord, setCategoryIndex, setWordIndex, setShowTranslation]);\r\n\r\n  return {\r\n    changeCategory,\r\n    goToNextWord,\r\n    goToPreviousWord,\r\n    markWordAsCompleted,\r\n    findNextUncompletedCategory,\r\n    handleNext,\r\n    handlePrevious,\r\n  };\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}