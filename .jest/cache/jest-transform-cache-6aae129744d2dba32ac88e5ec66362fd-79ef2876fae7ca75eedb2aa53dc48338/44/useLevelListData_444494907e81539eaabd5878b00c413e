0308461d478e67ccca8754d231e3a5db
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useLevelListData;
var _react = require("react");
var _constants = require("../../../utils/constants");
function cov_12wtj7y9ke() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\LevelSelection\\hooks\\useLevelListData.js";
  var hash = "a3b349d7e4924e3f3d89e1f0f52c177b0bf8702c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\LevelSelection\\hooks\\useLevelListData.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 27
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 11,
          column: 5
        }
      },
      "2": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 18
        }
      },
      "3": {
        start: {
          line: 8,
          column: 6
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "4": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 17
        }
      },
      "5": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 13
        }
      },
      "6": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 15,
          column: 60
        }
      },
      "7": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 43,
          column: 37
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "9": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 49
        }
      },
      "10": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 49
        }
      },
      "11": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "12": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 41,
          column: 8
        }
      },
      "13": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 45,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "useLevelListData",
        decl: {
          start: {
            line: 5,
            column: 24
          },
          end: {
            line: 5,
            column: 40
          }
        },
        loc: {
          start: {
            line: 5,
            column: 76
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 35
          },
          end: {
            line: 6,
            column: 36
          }
        },
        loc: {
          start: {
            line: 6,
            column: 41
          },
          end: {
            line: 13,
            column: 3
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 26
          }
        },
        loc: {
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 43,
            column: 3
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 28
          }
        },
        loc: {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 6
          },
          end: {
            line: 10,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 6
          },
          end: {
            line: 10,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 31,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 43
          }
        }, {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 40
          }
        }, {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 40
          }
        }, {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 40
          }
        }, {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 41
          }
        }, {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 48
          }
        }, {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 42
          }
        }, {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 43
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0, 0, 0, 0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a3b349d7e4924e3f3d89e1f0f52c177b0bf8702c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_12wtj7y9ke = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12wtj7y9ke();
function useLevelListData(_ref) {
  var getLevelProgress = _ref.getLevelProgress,
    hasProgress = _ref.hasProgress;
  cov_12wtj7y9ke().f[0]++;
  var currentUserLevel = (cov_12wtj7y9ke().s[0]++, (0, _react.useMemo)(function () {
    cov_12wtj7y9ke().f[1]++;
    cov_12wtj7y9ke().s[1]++;
    for (var i = (cov_12wtj7y9ke().s[2]++, 1); i <= 6; i++) {
      cov_12wtj7y9ke().s[3]++;
      if (getLevelProgress(i.toString()) === 0) {
        cov_12wtj7y9ke().b[0][0]++;
        cov_12wtj7y9ke().s[4]++;
        return i;
      } else {
        cov_12wtj7y9ke().b[0][1]++;
      }
    }
    cov_12wtj7y9ke().s[5]++;
    return 6;
  }, [getLevelProgress]));
  var currentLevelData = (cov_12wtj7y9ke().s[6]++, _constants.LANGUAGE_LEVELS[currentUserLevel]);
  var levels = (cov_12wtj7y9ke().s[7]++, (0, _react.useMemo)(function () {
    cov_12wtj7y9ke().f[2]++;
    cov_12wtj7y9ke().s[8]++;
    return _constants.LEVELS_LIST.map(function (levelKey) {
      cov_12wtj7y9ke().f[3]++;
      var levelInfo = (cov_12wtj7y9ke().s[9]++, _constants.LANGUAGE_LEVELS[levelKey]);
      var progress = (cov_12wtj7y9ke().s[10]++, getLevelProgress(levelKey));
      var started = (cov_12wtj7y9ke().s[11]++, (cov_12wtj7y9ke().b[1][0]++, hasProgress("vocabulary", levelKey)) || (cov_12wtj7y9ke().b[1][1]++, hasProgress("phrases", levelKey)) || (cov_12wtj7y9ke().b[1][2]++, hasProgress("grammar", levelKey)) || (cov_12wtj7y9ke().b[1][3]++, hasProgress("reading", levelKey)) || (cov_12wtj7y9ke().b[1][4]++, hasProgress("spelling", levelKey)) || (cov_12wtj7y9ke().b[1][5]++, hasProgress("conversations", levelKey)) || (cov_12wtj7y9ke().b[1][6]++, hasProgress("errorCorrection", levelKey)) || (cov_12wtj7y9ke().b[1][7]++, hasProgress("wordGames", levelKey)) || (cov_12wtj7y9ke().b[1][8]++, hasProgress("assessment", levelKey)));
      cov_12wtj7y9ke().s[12]++;
      return {
        id: levelKey,
        title: levelInfo.title,
        progress: progress,
        color: levelInfo.color,
        icon: levelInfo.icon,
        hasProgress: progress > 0,
        hasStarted: started
      };
    });
  }, [getLevelProgress, hasProgress]));
  cov_12wtj7y9ke().s[13]++;
  return {
    currentUserLevel: currentUserLevel,
    currentLevelData: currentLevelData,
    levels: levels
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX2NvbnN0YW50cyIsImNvdl8xMnd0ajd5OWtlIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsInVzZUxldmVsTGlzdERhdGEiLCJfcmVmIiwiZ2V0TGV2ZWxQcm9ncmVzcyIsImhhc1Byb2dyZXNzIiwiY3VycmVudFVzZXJMZXZlbCIsInVzZU1lbW8iLCJpIiwidG9TdHJpbmciLCJjdXJyZW50TGV2ZWxEYXRhIiwiTEFOR1VBR0VfTEVWRUxTIiwibGV2ZWxzIiwiTEVWRUxTX0xJU1QiLCJtYXAiLCJsZXZlbEtleSIsImxldmVsSW5mbyIsInByb2dyZXNzIiwic3RhcnRlZCIsImlkIiwidGl0bGUiLCJjb2xvciIsImljb24iLCJoYXNTdGFydGVkIl0sInNvdXJjZXMiOlsidXNlTGV2ZWxMaXN0RGF0YS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc2NyZWVucy9MZXZlbFNlbGVjdGlvbi9ob29rcy91c2VMZXZlbExpc3REYXRhLmpzXHJcbmltcG9ydCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgTEFOR1VBR0VfTEVWRUxTLCBMRVZFTFNfTElTVCB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9jb25zdGFudHNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZUxldmVsTGlzdERhdGEoeyBnZXRMZXZlbFByb2dyZXNzLCBoYXNQcm9ncmVzcyB9KSB7XHJcbiAgY29uc3QgY3VycmVudFVzZXJMZXZlbCA9IHVzZU1lbW8oKCkgPT4ge1xyXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gNjsgaSsrKSB7XHJcbiAgICAgIGlmIChnZXRMZXZlbFByb2dyZXNzKGkudG9TdHJpbmcoKSkgPT09IDApIHtcclxuICAgICAgICByZXR1cm4gaTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIDY7XHJcbiAgfSwgW2dldExldmVsUHJvZ3Jlc3NdKTtcclxuXHJcbiAgY29uc3QgY3VycmVudExldmVsRGF0YSA9IExBTkdVQUdFX0xFVkVMU1tjdXJyZW50VXNlckxldmVsXTtcclxuXHJcbiAgY29uc3QgbGV2ZWxzID0gdXNlTWVtbygoKSA9PiB7XHJcbiAgICByZXR1cm4gTEVWRUxTX0xJU1QubWFwKChsZXZlbEtleSkgPT4ge1xyXG4gICAgICBjb25zdCBsZXZlbEluZm8gPSBMQU5HVUFHRV9MRVZFTFNbbGV2ZWxLZXldO1xyXG4gICAgICBjb25zdCBwcm9ncmVzcyA9IGdldExldmVsUHJvZ3Jlc3MobGV2ZWxLZXkpO1xyXG5cclxuICAgICAgY29uc3Qgc3RhcnRlZCA9XHJcbiAgICAgICAgaGFzUHJvZ3Jlc3MoXCJ2b2NhYnVsYXJ5XCIsIGxldmVsS2V5KSB8fFxyXG4gICAgICAgIGhhc1Byb2dyZXNzKFwicGhyYXNlc1wiLCBsZXZlbEtleSkgfHxcclxuICAgICAgICBoYXNQcm9ncmVzcyhcImdyYW1tYXJcIiwgbGV2ZWxLZXkpIHx8XHJcbiAgICAgICAgaGFzUHJvZ3Jlc3MoXCJyZWFkaW5nXCIsIGxldmVsS2V5KSB8fFxyXG4gICAgICAgIGhhc1Byb2dyZXNzKFwic3BlbGxpbmdcIiwgbGV2ZWxLZXkpIHx8XHJcbiAgICAgICAgaGFzUHJvZ3Jlc3MoXCJjb252ZXJzYXRpb25zXCIsIGxldmVsS2V5KSB8fFxyXG4gICAgICAgIGhhc1Byb2dyZXNzKFwiZXJyb3JDb3JyZWN0aW9uXCIsIGxldmVsS2V5KSB8fFxyXG4gICAgICAgIGhhc1Byb2dyZXNzKFwid29yZEdhbWVzXCIsIGxldmVsS2V5KSB8fFxyXG4gICAgICAgIGhhc1Byb2dyZXNzKFwiYXNzZXNzbWVudFwiLCBsZXZlbEtleSk7XHJcblxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGlkOiBsZXZlbEtleSxcclxuICAgICAgICB0aXRsZTogbGV2ZWxJbmZvLnRpdGxlLFxyXG4gICAgICAgIHByb2dyZXNzLFxyXG4gICAgICAgIGNvbG9yOiBsZXZlbEluZm8uY29sb3IsXHJcbiAgICAgICAgaWNvbjogbGV2ZWxJbmZvLmljb24sXHJcbiAgICAgICAgaGFzUHJvZ3Jlc3M6IHByb2dyZXNzID4gMCxcclxuICAgICAgICBoYXNTdGFydGVkOiBzdGFydGVkLFxyXG4gICAgICB9O1xyXG4gICAgfSk7XHJcbiAgfSwgW2dldExldmVsUHJvZ3Jlc3MsIGhhc1Byb2dyZXNzXSk7XHJcblxyXG4gIHJldHVybiB7IGN1cnJlbnRVc2VyTGV2ZWwsIGN1cnJlbnRMZXZlbERhdGEsIGxldmVscyB9O1xyXG59XHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsVUFBQSxHQUFBRCxPQUFBO0FBQXdFLFNBQUFFLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lB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QXpDLGNBQUEsR0FBQW9CLENBQUEsUUFBR1EsZ0JBQWdCLENBQUNXLFFBQVEsQ0FBQztNQUUzQyxJQUFNRyxPQUFPLElBQUExQyxjQUFBLEdBQUFvQixDQUFBLFFBQ1gsQ0FBQXBCLGNBQUEsR0FBQXNCLENBQUEsVUFBQU8sV0FBVyxDQUFDLFlBQVksRUFBRVUsUUFBUSxDQUFDLE1BQUF2QyxjQUFBLEdBQUFzQixDQUFBLFVBQ25DTyxXQUFXLENBQUMsU0FBUyxFQUFFVSxRQUFRLENBQUMsTUFBQXZDLGNBQUEsR0FBQXNCLENBQUEsVUFDaENPLFdBQVcsQ0FBQyxTQUFTLEVBQUVVLFFBQVEsQ0FBQyxNQUFBdkMsY0FBQSxHQUFBc0IsQ0FBQSxVQUNoQ08sV0FBVyxDQUFDLFNBQVMsRUFBRVUsUUFBUSxDQUFDLE1BQUF2QyxjQUFBLEdBQUFzQixDQUFBLFVBQ2hDTyxXQUFXLENBQUMsVUFBVSxFQUFFVSxRQUFRLENBQUMsTUFBQXZDLGNBQUEsR0FBQXNCLENBQUEsVUFDakNPLFdBQVcsQ0FBQyxlQUFlLEVBQUVVLFFBQVEsQ0FBQyxNQUFBdkMsY0FBQSxHQUFBc0IsQ0FBQSxVQUN0Q08sV0FBVyxDQUFDLGlCQUFpQixFQUFFVSxRQUFRLENBQUMsTUFBQXZDLGNBQUEsR0FBQXNCLENBQUEsVUFDeENPLFdBQVcsQ0FBQyxXQUFXLEVBQUVVLFFBQVEsQ0FBQyxNQUFBdkMsY0FBQSxHQUFBc0IsQ0FBQSxVQUNsQ08sV0FBVyxDQUFDLFlBQVksRUFBRVUsUUFBUSxDQUFDO01BQUN2QyxjQUFBLEdBQUFvQixDQUFBO01BRXRDLE9BQU87UUFDTHVCLEVBQUUsRUFBRUosUUFBUTtRQUNaSyxLQUFLLEVBQUVKLFNBQVMsQ0FBQ0ksS0FBSztRQUN0QkgsUUFBUSxFQUFSQSxRQUFRO1FBQ1JJLEtBQUssRUFBRUwsU0FBUyxDQUFDSyxLQUFLO1FBQ3RCQyxJQUFJLEVBQUVOLFNBQVMsQ0FBQ00sSUFBSTtRQUNwQmpCLFdBQVcsRUFBRVksUUFBUSxHQUFHLENBQUM7UUFDekJNLFVBQVUsRUFBRUw7TUFDZCxDQUFDO0lBQ0gsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxFQUFFLENBQUNkLGdCQUFnQixFQUFFQyxXQUFXLENBQUMsQ0FBQztFQUFDN0IsY0FBQSxHQUFBb0IsQ0FBQTtFQUVwQyxPQUFPO0lBQUVVLGdCQUFnQixFQUFoQkEsZ0JBQWdCO0lBQUVJLGdCQUFnQixFQUFoQkEsZ0JBQWdCO0lBQUVFLE1BQU0sRUFBTkE7RUFBTyxDQUFDO0FBQ3ZEIiwiaWdub3JlTGlzdCI6W119