{"version":3,"names":["_getJestObj","mock","router","push","jest","fn","_interopRequireDefault","require","_react","_reactNative","_expoRouter","_errorCorrection","_useErrorCorrection","_useLastActivity","_errorCorrectionDataHelper","_jsxRuntime","_require","describe","mockSaveActivity","mockChangeCategory","mockStartExercise","mockCheckAnswer","mockHandleNext","mockErrorData","categories","id","name","exercises","sentence","mockCurrentExercise","sentence_to_correct","possible_errors","correct_sentence","setupMocks","overrides","arguments","length","undefined","defaultMocks","useErrorCorrection","Object","assign","selectedCategory","currentExerciseIndex","correctionMode","showFeedback","isCorrect","showResults","loaded","showDetailedProgress","userCorrection","selectedErrorIndices","selectedChoiceIndex","currentExercise","changeCategory","startExercise","toggleDetailedProgress","handleNext","handlePrevious","checkAnswer","handleWordPress","handleChoiceSelect","setUserCorrection","setShowResults","isLastExerciseInCategory","hasValidData","stats","completedExercises","score","display","exerciseCounter","useLastActivity","saveActivity","getErrorsData","getLevelColor","mockReturnValue","beforeEach","clearAllMocks","it","render","jsx","default","route","params","level"],"sources":["ErrorCorrection.test.js"],"sourcesContent":["\n// __tests__/screens/exercises/errorCorrection/ErrorCorrection.test.js\nimport React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react-native';\nimport { router } from 'expo-router';\nimport ErrorCorrectionExercise from '../../../../src/screens/exercises/errorCorrection';\n\n// Mocks\njest.mock('expo-router', () => ({\n  router: {\n    push: jest.fn(),\n  },\n}));\n\njest.mock('../../../../src/screens/exercises/errorCorrection/hooks/useErrorCorrection');\njest.mock('../../../../src/hooks/useLastActivity');\njest.mock('../../../../src/utils/errorCorrection/errorCorrectionDataHelper');\n\n// Mock des composants enfants\njest.mock('../../../../src/screens/exercises/errorCorrection/ErrorCorrectionHeader', () => 'ErrorCorrectionHeader');\njest.mock('../../../../src/screens/exercises/errorCorrection/ErrorCorrectionCategorySelector', () => 'ErrorCorrectionCategorySelector');\njest.mock('../../../../src/screens/exercises/errorCorrection/ErrorCorrectionModeSelector', () => 'ErrorCorrectionModeSelector');\njest.mock('../../../../src/screens/exercises/errorCorrection/ErrorCorrectionProgress', () => 'ErrorCorrectionProgress');\njest.mock('../../../../src/screens/exercises/errorCorrection/ErrorCorrectionWordSection', () => 'ErrorCorrectionWordSection');\njest.mock('../../../../src/screens/exercises/errorCorrection/ErrorCorrectionNavigation', () => 'ErrorCorrectionNavigation');\njest.mock('../../../../src/screens/exercises/errorCorrection/ErrorCorrectionResultsCard', () => 'ErrorCorrectionResultsCard');\n\n// Import des mocks après la déclaration\nimport useErrorCorrection from '../../../../src/screens/exercises/errorCorrection/hooks/useErrorCorrection';\nimport useLastActivity from '../../../../src/hooks/useLastActivity';\nimport { getErrorsData, getLevelColor } from '../../../../src/utils/errorCorrection/errorCorrectionDataHelper';\n\ndescribe('ErrorCorrectionExercise - Tests Complets', () => {\n  // Variables de test communes\n  const mockSaveActivity = jest.fn();\n  const mockChangeCategory = jest.fn();\n  const mockStartExercise = jest.fn();\n  const mockCheckAnswer = jest.fn();\n  const mockHandleNext = jest.fn();\n\n  // Mock data\n  const mockErrorData = {\n    categories: [{ id: 'verbs', name: 'Verbes' }],\n    exercises: [{ id: '1', sentence: 'This is a test.' }],\n  };\n\n  const mockCurrentExercise = {\n    sentence_to_correct: 'I is happy.',\n    possible_errors: ['is'],\n    correct_sentence: 'I am happy.',\n  };\n\n  // Setup par défaut des mocks\n  const setupMocks = (overrides = {}) => {\n    const defaultMocks = {\n      useErrorCorrection: {\n        selectedCategory: 'verbs',\n        currentExerciseIndex: 0,\n        correctionMode: 'full',\n        showFeedback: false,\n        isCorrect: false,\n        showResults: false,\n        loaded: true,\n        showDetailedProgress: false,\n        userCorrection: '',\n        selectedErrorIndices: [],\n        selectedChoiceIndex: null,\n        currentExercise: mockCurrentExercise,\n        exercises: mockErrorData.exercises,\n        changeCategory: mockChangeCategory,\n        startExercise: mockStartExercise,\n        toggleDetailedProgress: jest.fn(),\n        handleNext: mockHandleNext,\n        handlePrevious: jest.fn(),\n        checkAnswer: mockCheckAnswer,\n        handleWordPress: jest.fn(),\n        handleChoiceSelect: jest.fn(),\n        setUserCorrection: jest.fn(),\n        setShowResults: jest.fn(),\n        isLastExerciseInCategory: false,\n        hasValidData: true,\n        stats: { completedExercises: {}, score: 0 },\n        display: { exerciseCounter: '1 / 1' },\n        ...overrides.useErrorCorrection,\n      },\n      useLastActivity: {\n        saveActivity: mockSaveActivity,\n        ...overrides.useLastActivity,\n      },\n      getErrorsData: mockErrorData,\n      getLevelColor: '#007AFF',\n    };\n\n    useErrorCorrection.mockReturnValue(defaultMocks.useErrorCorrection);\n    useLastActivity.mockReturnValue(defaultMocks.useLastActivity);\n    getErrorsData.mockReturnValue(defaultMocks.getErrorsData);\n    getLevelColor.mockReturnValue(defaultMocks.getLevelColor);\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    setupMocks();\n  });\n\n  // Test de base pour vérifier que tout est en place\n  it('should render without crashing', () => {\n    render(<ErrorCorrectionExercise route={{ params: { level: 'A1' } }} />);\n    // Nous ajouterons des assertions plus spécifiques plus tard\n  });\n\n  describe('Core Functionality', () => {\n    it('should render in browse mode and start an exercise', () => {\n      // À implémenter\n    });\n  });\n\n  describe('States and Edge Cases', () => {\n    it('should handle loading and invalid data states', () => {\n      // À implémenter\n    });\n  });\n\n  describe('Performance Optimizations', () => {\n    it('should keep callbacks stable on re-renders', () => {\n      // À implémenter\n    });\n  });\n\n  describe('Hooks Integration', () => {\n    it('should call hooks and utils with correct parameters', () => {\n      // À implémenter\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}