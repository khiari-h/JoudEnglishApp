{"version":3,"names":["_react","require","_reactNative","_native","_propTypes","_interopRequireDefault","_Container","_SpellingHeader","_SpellingProgress","_SpellingCard","_SpellingActions","_useSpelling2","_useLastActivity2","_spellingDataHelper","_style","_jsxRuntime","SpellingExercise","_ref","route","_ref2","params","_ref2$level","level","_ref2$exerciseType","exerciseType","navigation","useNavigation","styles","createStyles","_useLastActivity","useLastActivity","saveActivity","levelColor","getLevelColor","getExerciseTypeName","exerciseTypeName","spellingData","useMemo","getSpellingData","error","console","warn","_useSpelling","useSpelling","currentExerciseIndex","userInput","showHint","showFeedback","isCorrect","loaded","currentExercise","totalExercises","setUserInput","toggleHint","checkAnswer","handleNext","retryExercise","isLastExercise","hasValidData","log","useEffect","saveActivityAsync","_ref3","_asyncToGenerator2","default","title","type","metadata","word","totalWords","content","wordToCorrect","apply","arguments","handleBack","useCallback","goBack","jsxs","children","jsx","onBack","View","style","loadingContainer","ActivityIndicator","size","color","testID","Text","fontSize","textAlign","exercise","onChangeText","onToggleHint","onCheckAnswer","onNext","onRetry","onCheck","_default","exports","propTypes","PropTypes","shape","string","isRequired"],"sources":["index.js"],"sourcesContent":["// SpellingExercise/index.js - VERSION PROPRE\r\n\r\nimport { useMemo, useEffect, useCallback } from \"react\";\r\nimport { View, ActivityIndicator, Text } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from \"../../../components/layout/Container\";\r\nimport SpellingHeader from \"./SpellingHeader\";\r\nimport SpellingProgress from \"./SpellingProgress\";\r\nimport SpellingCard from \"./SpellingCard\";\r\nimport SpellingActions from \"./SpellingActions\";\r\n\r\nimport useSpelling from \"./hooks/useSpelling\";\r\nimport useLastActivity from \"../../../hooks/useLastActivity\";\r\nimport { getSpellingData, getLevelColor } from \"../../../utils/spelling/spellingDataHelper\";\r\nimport createStyles from \"./style\";\r\n\r\nconst SpellingExercise = ({ route }) => {\r\n  const { level = \"1\", exerciseType = \"correction\" } = route.params || {};\r\n  const navigation = useNavigation();\r\n  const styles = createStyles();\r\n  const { saveActivity } = useLastActivity();\r\n\r\n  const levelColor = getLevelColor(level);\r\n\r\n  // ✅ Extraction de la logique conditionnelle pour améliorer la lisibilité\r\n  const getExerciseTypeName = () => {\r\n    if (exerciseType === \"correction\") return \"Correction\";\r\n    if (exerciseType === \"rules\") return \"Règles\";\r\n    return \"Homophones\";\r\n  };\r\n  \r\n  // Définir exerciseTypeName pour tout le composant\r\n  const exerciseTypeName = getExerciseTypeName();\r\n  \r\n  const spellingData = useMemo(() => {\r\n    try {\r\n      return getSpellingData(level, exerciseType);\r\n    } catch (error) {\r\n      // ✅ Gestion d'erreur appropriée\r\n      console.warn(`Error getting spelling data for level ${level}, type ${exerciseType}:`, error);\r\n      return null;\r\n    }\r\n  }, [level, exerciseType]);\r\n\r\n  const {\r\n    currentExerciseIndex,\r\n    userInput,\r\n    showHint,\r\n    showFeedback,\r\n    isCorrect,\r\n    loaded,\r\n    currentExercise,\r\n    totalExercises,\r\n    setUserInput,\r\n    toggleHint,\r\n    checkAnswer,\r\n    handleNext,\r\n    retryExercise,\r\n    isLastExercise,\r\n    hasValidData,\r\n  } = useSpelling(spellingData, level, exerciseType);\r\n\r\n  // ✅ AJOUTÉ : Debug pour voir ce que le composant reçoit du hook\r\n  console.log('🔍 DEBUG SpellingExercise Component:', {\r\n    loaded,\r\n    hasValidData,\r\n    currentExercise: !!currentExercise,\r\n    currentExerciseIndex,\r\n    totalExercises,\r\n    spellingData: !!spellingData,\r\n    level,\r\n    exerciseType\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (loaded && hasValidData && currentExercise) {\r\n      const saveActivityAsync = async () => {\r\n        try {\r\n          await saveActivity({\r\n            title: `Orthographe ${exerciseTypeName}`,\r\n            level,\r\n            type: \"spelling\",\r\n            metadata: {\r\n              word: currentExerciseIndex,           // ✅ Index actuel (pour progression)\r\n              totalWords: totalExercises,           // ✅ Total (pour progression)\r\n              exerciseType,\r\n              content: currentExercise.wordToCorrect || `Exercice ${currentExerciseIndex + 1}` // ✅ Contenu de l'exercice\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error saving activity:\", error);\r\n        }\r\n      };\r\n\r\n      saveActivityAsync();\r\n    }\r\n  }, [loaded, hasValidData, currentExercise, level, exerciseType, currentExerciseIndex, totalExercises, saveActivity]);\r\n\r\n  const handleBack = useCallback(() => navigation.goBack(), [navigation]);\r\n\r\n  if (!loaded) {\r\n    return (\r\n      <Container>\r\n        <SpellingHeader\r\n          title={`Orthographe ${exerciseTypeName}`}\r\n          level={level}\r\n          levelColor={levelColor}\r\n          onBack={handleBack}\r\n        />\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color={levelColor} testID=\"activity-indicator\" />\r\n          {/* ✅ MODERNISÉ : Supprimé le texte de chargement pour être cohérent avec les autres modules */}\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!hasValidData) {\r\n    return (\r\n      <Container>\r\n        <SpellingHeader\r\n          title={`Orthographe ${exerciseTypeName}`}\r\n          level={level}\r\n          levelColor={levelColor}\r\n          onBack={handleBack}\r\n        />\r\n        {/* ✅ MODERNISÉ : Utilise un message simple au lieu de styles d'erreur personnalisés */}\r\n        <View style={styles.loadingContainer}>\r\n          <Text style={{ fontSize: 16, color: '#64748b', textAlign: 'center' }}>\r\n            Aucune donnée trouvée pour ce niveau.\r\n          </Text>\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SpellingHeader\r\n        title={`Orthographe ${exerciseTypeName}`}\r\n        level={level}\r\n        levelColor={levelColor}\r\n        onBack={handleBack}\r\n      />\r\n      <SpellingProgress\r\n        currentExerciseIndex={currentExerciseIndex + 1}\r\n        totalExercises={totalExercises}\r\n        levelColor={levelColor}\r\n      />\r\n      <SpellingCard\r\n        exercise={currentExercise}\r\n        userInput={userInput}\r\n        showHint={showHint}\r\n        showFeedback={showFeedback}\r\n        isCorrect={isCorrect}\r\n        onChangeText={setUserInput}\r\n        onToggleHint={toggleHint}\r\n        onCheckAnswer={checkAnswer}\r\n        onNext={handleNext}\r\n        onRetry={retryExercise}\r\n        isLastExercise={isLastExercise}\r\n        levelColor={levelColor}\r\n      />\r\n      <SpellingActions\r\n        showFeedback={showFeedback}\r\n        isCorrect={isCorrect}\r\n        userInput={userInput}\r\n        isLastExercise={isLastExercise}\r\n        exerciseType={exerciseType}\r\n        levelColor={levelColor}\r\n        onCheck={checkAnswer}\r\n        onNext={handleNext}\r\n        onRetry={retryExercise}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SpellingExercise;\r\n\r\n// ✅ Ajout de la validation des props\r\nSpellingExercise.propTypes = {\r\n  route: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      level: PropTypes.string,\r\n      exerciseType: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};"],"mappings":"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","ignoreList":[]}