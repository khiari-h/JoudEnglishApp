{"version":3,"names":["Object","defineProperty","exports","value","rubberBandDecay","_utils","require","DERIVATIVE_EPS","_worklet_5974929077163_init_data","code","location","sourceMap","version","_e","global","Error","animation","now","config","lastTimestamp","startTimestamp","current","velocity","deltaTime","Math","min","clampIndex","abs","clamp","derivative","v","exp","deceleration","SLOPE_FACTOR","rubberBandFactor","springActive","VELOCITY_EPS","velocityFactor","__closure","__workletHash","__initData","__stackDetails"],"sources":["rubberBandDecay.ts"],"sourcesContent":["'use strict';\nimport type { RubberBandDecayConfig, InnerDecayAnimation } from './utils';\nimport { SLOPE_FACTOR, VELOCITY_EPS } from './utils';\n\nconst DERIVATIVE_EPS = 0.1;\n\nexport function rubberBandDecay(\n  animation: InnerDecayAnimation,\n  now: number,\n  config: RubberBandDecayConfig\n): boolean {\n  'worklet';\n  const { lastTimestamp, startTimestamp, current, velocity } = animation;\n\n  const deltaTime = Math.min(now - lastTimestamp, 64);\n  const clampIndex =\n    Math.abs(current - config.clamp[0]) < Math.abs(current - config.clamp[1])\n      ? 0\n      : 1;\n\n  let derivative = 0;\n  if (current < config.clamp[0] || current > config.clamp[1]) {\n    derivative = current - config.clamp[clampIndex];\n  }\n\n  const v =\n    velocity *\n      Math.exp(\n        -(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR\n      ) -\n    derivative * config.rubberBandFactor;\n\n  if (Math.abs(derivative) > DERIVATIVE_EPS) {\n    animation.springActive = true;\n  } else if (animation.springActive) {\n    animation.current = config.clamp[clampIndex];\n    return true;\n  } else if (Math.abs(v) < VELOCITY_EPS) {\n    return true;\n  }\n\n  animation.current = current + (v * config.velocityFactor * deltaTime) / 1000;\n  animation.velocity = v;\n  animation.lastTimestamp = now;\n  return false;\n}\n"],"mappings":"AAAA,YAAY;;AAACA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,eAAA;AAEb,IAAAC,MAAA,GAAAC,OAAA;AAEA,IAAMC,cAAc,GAAG,GAAG;AAAC,IAAAC,gCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,IAAAR,eAAA,GAAAF,OAAA,CAAAE,eAAA,GAEpB;EAAA,IAAAS,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAX,eAAA,YAAAA,gBACLY,SAA8B,EAC9BC,GAAW,EACXC,MAA6B,EACpB;IAET,IAAQC,aAAa,GAAwCH,SAAS,CAA9DG,aAAa;MAAEC,cAAc,GAAwBJ,SAAS,CAA/CI,cAAc;MAAEC,OAAO,GAAeL,SAAS,CAA/BK,OAAO;MAAEC,QAAQ,GAAKN,SAAS,CAAtBM,QAAQ;IAExD,IAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACR,GAAG,GAAGE,aAAa,EAAE,EAAE,CAAC;IACnD,IAAMO,UAAU,GACdF,IAAI,CAACG,GAAG,CAACN,OAAO,GAAGH,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGJ,IAAI,CAACG,GAAG,CAACN,OAAO,GAAGH,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,GACrE,CAAC,GACD,CAAC;IAEP,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIR,OAAO,GAAGH,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,IAAIP,OAAO,GAAGH,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,EAAE;MAC1DC,UAAU,GAAGR,OAAO,GAAGH,MAAM,CAACU,KAAK,CAACF,UAAU,CAAC;IACjD;IAEA,IAAMI,CAAC,GACLR,QAAQ,GACNE,IAAI,CAACO,GAAG,CACN,EAAE,CAAC,GAAGb,MAAM,CAACc,YAAY,CAAC,IAAIf,GAAG,GAAGG,cAAc,CAAC,GAAGa,mBACxD,CAAC,GACHJ,UAAU,GAAGX,MAAM,CAACgB,gBAAgB;IAEtC,IAAIV,IAAI,CAACG,GAAG,CAACE,UAAU,CAAC,GAAGtB,cAAc,EAAE;MACzCS,SAAS,CAACmB,YAAY,GAAG,IAAI;IAC/B,CAAC,MAAM,IAAInB,SAAS,CAACmB,YAAY,EAAE;MACjCnB,SAAS,CAACK,OAAO,GAAGH,MAAM,CAACU,KAAK,CAACF,UAAU,CAAC;MAC5C,OAAO,IAAI;IACb,CAAC,MAAM,IAAIF,IAAI,CAACG,GAAG,CAACG,CAAC,CAAC,GAAGM,mBAAY,EAAE;MACrC,OAAO,IAAI;IACb;IAEApB,SAAS,CAACK,OAAO,GAAGA,OAAO,GAAIS,CAAC,GAAGZ,MAAM,CAACmB,cAAc,GAAGd,SAAS,GAAI,IAAI;IAC5EP,SAAS,CAACM,QAAQ,GAAGQ,CAAC;IACtBd,SAAS,CAACG,aAAa,GAAGF,GAAG;IAC7B,OAAO,KAAK;EACd,CAAC;EAAAb,eAAA,CAAAkC,SAAA;IAAAL,YAAA,EAjB6DA,mBAAY;IAAA1B,cAAA,EAI7CA,cAAc;IAAA6B,YAAA,EAKhBA;EAAY;EAAAhC,eAAA,CAAAmC,aAAA;EAAAnC,eAAA,CAAAoC,UAAA,GAAAhC,gCAAA;EAAAJ,eAAA,CAAAqC,cAAA,GAAA5B,EAAA;EAAA,OAAAT,eAAA;AAAA,CA/BhC","ignoreList":[]}