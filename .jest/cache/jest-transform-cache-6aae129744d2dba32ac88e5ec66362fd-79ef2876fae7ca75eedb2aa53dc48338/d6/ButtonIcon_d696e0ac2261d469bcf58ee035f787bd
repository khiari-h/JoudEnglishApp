d055d8e49f054c38cbf1c3279e045dd7
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconOnly = IconOnly;
exports.LeftIcon = LeftIcon;
exports.RightIcon = RightIcon;
var _reactNative = require("react-native");
var _vectorIcons = require("@expo/vector-icons");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function LeftIcon(_ref) {
  var name = _ref.name,
    size = _ref.size,
    color = _ref.color;
  if (!name) return null;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: _style.default.leftIconContainer,
    children: (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
      name: name,
      size: size,
      color: color
    })
  });
}
LeftIcon.propTypes = {
  name: _propTypes.default.string,
  size: _propTypes.default.number,
  color: _propTypes.default.string
};
function RightIcon(_ref2) {
  var name = _ref2.name,
    size = _ref2.size,
    color = _ref2.color;
  if (!name) return null;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: _style.default.rightIconContainer,
    children: (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
      name: name,
      size: size,
      color: color
    })
  });
}
RightIcon.propTypes = {
  name: _propTypes.default.string,
  size: _propTypes.default.number,
  color: _propTypes.default.string
};
function IconOnly(_ref3) {
  var name = _ref3.name,
    size = _ref3.size,
    color = _ref3.color;
  if (!name) return null;
  return (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
    name: name,
    size: size,
    color: color
  });
}
IconOnly.propTypes = {
  name: _propTypes.default.string,
  size: _propTypes.default.number,
  color: _propTypes.default.string
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3ZlY3Rvckljb25zIiwiX3Byb3BUeXBlcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfc3R5bGUiLCJfanN4UnVudGltZSIsIkxlZnRJY29uIiwiX3JlZiIsIm5hbWUiLCJzaXplIiwiY29sb3IiLCJqc3giLCJWaWV3Iiwic3R5bGUiLCJzdHlsZXMiLCJsZWZ0SWNvbkNvbnRhaW5lciIsImNoaWxkcmVuIiwiSW9uaWNvbnMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJudW1iZXIiLCJSaWdodEljb24iLCJfcmVmMiIsInJpZ2h0SWNvbkNvbnRhaW5lciIsIkljb25Pbmx5IiwiX3JlZjMiXSwic291cmNlcyI6WyJCdXR0b25JY29uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb21wb25lbnRzL3VpL0J1dHRvbi9CdXR0b25JY29uLmpzXHJcbmltcG9ydCB7IFZpZXcgfSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XHJcbmltcG9ydCB7IElvbmljb25zIH0gZnJvbSBcIkBleHBvL3ZlY3Rvci1pY29uc1wiO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gXCIuL3N0eWxlXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gTGVmdEljb24oeyBuYW1lLCBzaXplLCBjb2xvciB9KSB7XHJcbiAgaWYgKCFuYW1lKSByZXR1cm4gbnVsbDtcclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5sZWZ0SWNvbkNvbnRhaW5lcn0+XHJcbiAgICAgIDxJb25pY29ucyBuYW1lPXtuYW1lfSBzaXplPXtzaXplfSBjb2xvcj17Y29sb3J9IC8+XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufVxyXG5cclxuTGVmdEljb24ucHJvcFR5cGVzID0ge1xyXG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgc2l6ZTogUHJvcFR5cGVzLm51bWJlcixcclxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBSaWdodEljb24oeyBuYW1lLCBzaXplLCBjb2xvciB9KSB7XHJcbiAgaWYgKCFuYW1lKSByZXR1cm4gbnVsbDtcclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5yaWdodEljb25Db250YWluZXJ9PlxyXG4gICAgICA8SW9uaWNvbnMgbmFtZT17bmFtZX0gc2l6ZT17c2l6ZX0gY29sb3I9e2NvbG9yfSAvPlxyXG4gICAgPC9WaWV3PlxyXG4gICk7XHJcbn1cclxuXHJcblJpZ2h0SWNvbi5wcm9wVHlwZXMgPSB7XHJcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxyXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIEljb25Pbmx5KHsgbmFtZSwgc2l6ZSwgY29sb3IgfSkge1xyXG4gIGlmICghbmFtZSkgcmV0dXJuIG51bGw7XHJcbiAgcmV0dXJuIDxJb25pY29ucyBuYW1lPXtuYW1lfSBzaXplPXtzaXplfSBjb2xvcj17Y29sb3J9IC8+O1xyXG59XHJcblxyXG5JY29uT25seS5wcm9wVHlwZXMgPSB7XHJcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxyXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG59O1xyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLFVBQUEsR0FBQUMsc0JBQUEsQ0FBQUgsT0FBQTtBQUNBLElBQUFJLE1BQUEsR0FBQUQsc0JBQUEsQ0FBQUgsT0FBQTtBQUE2QixJQUFBSyxXQUFBLEdBQUFMLE9BQUE7QUFFdEIsU0FBU00s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