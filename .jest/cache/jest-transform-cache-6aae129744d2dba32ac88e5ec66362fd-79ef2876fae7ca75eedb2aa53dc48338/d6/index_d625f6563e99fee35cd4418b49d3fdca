6395867509aab0d77770911609a5a3a9
function cov_2guavzd6d6() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesNavigation\\index.js";
  var hash = "81c20976df213579cdc186e0b6cd6c0262c0a787";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesNavigation\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "1": {
        start: {
          line: 33,
          column: 17
        },
        end: {
          line: 33,
          column: 41
        }
      },
      "2": {
        start: {
          line: 36,
          column: 35
        },
        end: {
          line: 36,
          column: 67
        }
      },
      "3": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "4": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 38,
          column: 66
        }
      },
      "5": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "6": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 59,
          column: 6
        }
      },
      "7": {
        start: {
          line: 63,
          column: 2
        },
        end: {
          line: 71,
          column: 3
        }
      },
      "8": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 70,
          column: 6
        }
      },
      "9": {
        start: {
          line: 74,
          column: 2
        },
        end: {
          line: 91,
          column: 4
        }
      },
      "10": {
        start: {
          line: 95,
          column: 0
        },
        end: {
          line: 107,
          column: 2
        }
      },
      "11": {
        start: {
          line: 110,
          column: 0
        },
        end: {
          line: 113,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 22,
            column: 29
          }
        },
        loc: {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 20
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 28,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 24
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 38,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 38,
            column: 50
          }
        }, {
          start: {
            line: 38,
            column: 54
          },
          end: {
            line: 38,
            column: 66
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 6
          },
          end: {
            line: 41,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 6
          },
          end: {
            line: 41,
            column: 19
          }
        }, {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 41,
            column: 61
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 27
          }
        }, {
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 47,
            column: 52
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 48
          },
          end: {
            line: 48,
            column: 58
          }
        }, {
          start: {
            line: 48,
            column: 61
          },
          end: {
            line: 48,
            column: 70
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 13
          },
          end: {
            line: 55,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 42
          }
        }, {
          start: {
            line: 55,
            column: 45
          },
          end: {
            line: 55,
            column: 68
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 63,
            column: 2
          },
          end: {
            line: 71,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 2
          },
          end: {
            line: 71,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "9": {
        loc: {
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 63,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 63,
            column: 19
          }
        }, {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 55
          }
        }],
        line: 63
      },
      "10": {
        loc: {
          start: {
            line: 78,
            column: 20
          },
          end: {
            line: 78,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 78,
            column: 46
          }
        }, {
          start: {
            line: 78,
            column: 49
          },
          end: {
            line: 78,
            column: 58
          }
        }],
        line: 78
      },
      "11": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 29
          },
          end: {
            line: 84,
            column: 42
          }
        }, {
          start: {
            line: 84,
            column: 45
          },
          end: {
            line: 84,
            column: 56
          }
        }],
        line: 84
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "81c20976df213579cdc186e0b6cd6c0262c0a787"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2guavzd6d6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2guavzd6d6();
import { View, TouchableOpacity, Text } from "react-native";
import PropTypes from 'prop-types';
import NavigationButtons from "../../../../components/exercise-common/NavigationButtons";
import createStyles from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
cov_2guavzd6d6().s[0]++;
var WordGamesNavigation = function WordGamesNavigation(_ref) {
  var currentGame = _ref.currentGame,
    showFeedback = _ref.showFeedback,
    _ref$selectedItems = _ref.selectedItems,
    selectedItems = _ref$selectedItems === void 0 ? (cov_2guavzd6d6().b[0][0]++, []) : _ref$selectedItems,
    isLastGame = _ref.isLastGame,
    canGoPrevious = _ref.canGoPrevious,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_2guavzd6d6().b[1][0]++, "#3b82f6") : _ref$levelColor,
    onCheckAnswer = _ref.onCheckAnswer,
    onNext = _ref.onNext,
    onPrevious = _ref.onPrevious;
  cov_2guavzd6d6().f[0]++;
  var styles = (cov_2guavzd6d6().s[1]++, createStyles(levelColor));
  var isMatchingOrAutoComplete = (cov_2guavzd6d6().s[2]++, (currentGame == null ? void 0 : currentGame.type) === "matching");
  var hasSelection = (cov_2guavzd6d6().s[3]++, selectedItems.length > 0);
  var canCheckAnswer = (cov_2guavzd6d6().s[4]++, (cov_2guavzd6d6().b[2][0]++, !isMatchingOrAutoComplete) && (cov_2guavzd6d6().b[2][1]++, hasSelection));
  cov_2guavzd6d6().s[5]++;
  if ((cov_2guavzd6d6().b[4][0]++, !showFeedback) && (cov_2guavzd6d6().b[4][1]++, (currentGame == null ? void 0 : currentGame.type) === "categorization")) {
    cov_2guavzd6d6().b[3][0]++;
    cov_2guavzd6d6().s[6]++;
    return _jsx(View, {
      style: styles.container,
      children: _jsx(TouchableOpacity, {
        style: [styles.checkButton, (cov_2guavzd6d6().b[5][0]++, !canCheckAnswer) && (cov_2guavzd6d6().b[5][1]++, styles.disabledButton), {
          backgroundColor: canCheckAnswer ? (cov_2guavzd6d6().b[6][0]++, levelColor) : (cov_2guavzd6d6().b[6][1]++, "#cbd5e1")
        }],
        onPress: onCheckAnswer,
        disabled: !canCheckAnswer,
        activeOpacity: 0.8,
        children: _jsx(Text, {
          style: styles.checkButtonText,
          children: hasSelection ? (cov_2guavzd6d6().b[7][0]++, "Check Answer") : (cov_2guavzd6d6().b[7][1]++, "Select items to check")
        })
      })
    });
  } else {
    cov_2guavzd6d6().b[3][1]++;
  }
  cov_2guavzd6d6().s[7]++;
  if ((cov_2guavzd6d6().b[9][0]++, !showFeedback) && (cov_2guavzd6d6().b[9][1]++, (currentGame == null ? void 0 : currentGame.type) === "matching")) {
    cov_2guavzd6d6().b[8][0]++;
    cov_2guavzd6d6().s[8]++;
    return _jsx(View, {
      style: styles.container,
      children: _jsx(View, {
        style: styles.instructionContainer,
        children: _jsx(Text, {
          style: styles.instructionText,
          children: "Find all matching pairs"
        })
      })
    });
  } else {
    cov_2guavzd6d6().b[8][1]++;
  }
  cov_2guavzd6d6().s[9]++;
  return _jsx(View, {
    style: styles.container,
    children: _jsx(NavigationButtons, {
      onNext: onNext,
      onPrevious: canGoPrevious ? (cov_2guavzd6d6().b[10][0]++, onPrevious) : (cov_2guavzd6d6().b[10][1]++, undefined),
      disablePrevious: !canGoPrevious,
      disableNext: false,
      primaryColor: levelColor,
      isLast: isLastGame,
      buttonLabels: {
        next: isLastGame ? (cov_2guavzd6d6().b[11][0]++, "See Results") : (cov_2guavzd6d6().b[11][1]++, "Next Game"),
        previous: "Previous Game",
        finish: "See Results"
      },
      layout: "full"
    })
  });
};
cov_2guavzd6d6().s[10]++;
WordGamesNavigation.propTypes = {
  currentGame: PropTypes.shape({
    type: PropTypes.string.isRequired
  }).isRequired,
  showFeedback: PropTypes.bool.isRequired,
  selectedItems: PropTypes.array,
  isLastGame: PropTypes.bool.isRequired,
  canGoPrevious: PropTypes.bool.isRequired,
  levelColor: PropTypes.string,
  onCheckAnswer: PropTypes.func.isRequired,
  onNext: PropTypes.func.isRequired,
  onPrevious: PropTypes.func.isRequired
};
cov_2guavzd6d6().s[11]++;
WordGamesNavigation.defaultProps = {
  selectedItems: [],
  levelColor: "#3b82f6"
};
export default WordGamesNavigation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,