{"version":3,"names":["View","TouchableOpacity","Text","PropTypes","NavigationButtons","createStyles","jsx","_jsx","cov_2guavzd6d6","s","WordGamesNavigation","_ref","currentGame","showFeedback","_ref$selectedItems","selectedItems","b","isLastGame","canGoPrevious","_ref$levelColor","levelColor","onCheckAnswer","onNext","onPrevious","f","styles","isMatchingOrAutoComplete","type","hasSelection","length","canCheckAnswer","style","container","children","checkButton","disabledButton","backgroundColor","onPress","disabled","activeOpacity","checkButtonText","instructionContainer","instructionText","undefined","disablePrevious","disableNext","primaryColor","isLast","buttonLabels","next","previous","finish","layout","propTypes","shape","string","isRequired","bool","array","func","defaultProps"],"sources":["index.js"],"sourcesContent":["// WordGamesNavigation/index.js - VERSION REFACTORIS√âE avec NavigationButtons\r\n\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * üéØ WordGamesNavigation - Version Refactoris√©e\r\n * Utilise NavigationButtons pour la navigation + bouton Check Answer custom\r\n * \r\n * @param {object} currentGame - Jeu actuel\r\n * @param {boolean} showFeedback - Afficher le feedback ou non\r\n * @param {array} selectedItems - Items s√©lectionn√©s\r\n * @param {boolean} isLastGame - Dernier jeu\r\n * @param {boolean} canGoPrevious - Peut aller en arri√®re\r\n * @param {string} levelColor - Couleur du niveau\r\n * @param {function} onCheckAnswer - V√©rifier la r√©ponse\r\n * @param {function} onNext - Jeu suivant\r\n * @param {function} onPrevious - Jeu pr√©c√©dent\r\n */\r\nconst WordGamesNavigation = ({\r\n  currentGame,\r\n  showFeedback,\r\n  selectedItems = [],\r\n  isLastGame,\r\n  canGoPrevious,\r\n  levelColor = \"#3b82f6\",\r\n  onCheckAnswer,\r\n  onNext,\r\n  onPrevious,\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n\r\n  // D√©terminer si le bouton Check Answer doit √™tre disponible\r\n  const isMatchingOrAutoComplete = currentGame?.type === \"matching\";\r\n  const hasSelection = selectedItems.length > 0;\r\n  const canCheckAnswer = !isMatchingOrAutoComplete && hasSelection;\r\n\r\n  // Phase 1: Check Answer (pour categorization seulement)\r\n  if (!showFeedback && currentGame?.type === \"categorization\") {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.checkButton,\r\n            !canCheckAnswer && styles.disabledButton,\r\n            { backgroundColor: canCheckAnswer ? levelColor : \"#cbd5e1\" },\r\n          ]}\r\n          onPress={onCheckAnswer}\r\n          disabled={!canCheckAnswer}\r\n          activeOpacity={0.8}\r\n        >\r\n          <Text style={styles.checkButtonText}>\r\n            {hasSelection ? \"Check Answer\" : \"Select items to check\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Phase 2: Matching games (auto-complete, pas de bouton Check)\r\n  if (!showFeedback && currentGame?.type === \"matching\") {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.instructionContainer}>\r\n          <Text style={styles.instructionText}>Find all matching pairs</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Phase 3: Navigation apr√®s feedback (tous types de jeux)\r\n  return (\r\n    <View style={styles.container}>\r\n      <NavigationButtons\r\n        onNext={onNext}\r\n        onPrevious={canGoPrevious ? onPrevious : undefined}\r\n        disablePrevious={!canGoPrevious}\r\n        disableNext={false}\r\n        primaryColor={levelColor}\r\n        isLast={isLastGame}\r\n        buttonLabels={{\r\n          next: isLastGame ? \"See Results\" : \"Next Game\",\r\n          previous: \"Previous Game\",\r\n          finish: \"See Results\"\r\n        }}\r\n        layout=\"full\" // Utilise toute la largeur\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n// PropTypes pour la validation des props\r\nWordGamesNavigation.propTypes = {\r\n  currentGame: PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  showFeedback: PropTypes.bool.isRequired,\r\n  selectedItems: PropTypes.array,\r\n  isLastGame: PropTypes.bool.isRequired,\r\n  canGoPrevious: PropTypes.bool.isRequired,\r\n  levelColor: PropTypes.string,\r\n  onCheckAnswer: PropTypes.func.isRequired,\r\n  onNext: PropTypes.func.isRequired,\r\n  onPrevious: PropTypes.func.isRequired,\r\n};\r\n\r\n// Valeurs par d√©faut\r\nWordGamesNavigation.defaultProps = {\r\n  selectedItems: [],\r\n  levelColor: \"#3b82f6\",\r\n};\r\n\r\nexport default WordGamesNavigation;"],"mappings":"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","ignoreList":[]}