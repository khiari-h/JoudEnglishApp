e2438feb0276cf87868de0bb24c654b2
function cov_21968dlece() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\basic-needs.js";
  var hash = "ebeb80442d5e2896629367a5c3b20a424a9dd6c7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\1\\categories\\basic-needs.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 19
        },
        end: {
          line: 245,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ebeb80442d5e2896629367a5c3b20a424a9dd6c7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_21968dlece = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21968dlece();
var basicNeeds = (cov_21968dlece().s[0]++, [{
  categoryId: 3,
  english: "I'm hungry.",
  translation: "J'ai faim.",
  context: "Pour exprimer la faim",
  examples: [{
    english: "I'm very hungry. Is there a restaurant nearby?",
    translation: "J'ai très faim. Y a-t-il un restaurant à proximité ?"
  }]
}, {
  categoryId: 3,
  english: "I'm thirsty.",
  translation: "J'ai soif.",
  context: "Pour exprimer la soif",
  examples: [{
    english: "I'm thirsty. Can I have some water?",
    translation: "J'ai soif. Puis-je avoir de l'eau ?"
  }]
}, {
  categoryId: 3,
  english: "I'm tired.",
  translation: "Je suis fatigué(e).",
  context: "Pour exprimer la fatigue",
  examples: [{
    english: "I'm tired. I need to rest.",
    translation: "Je suis fatigué(e). J'ai besoin de me reposer."
  }]
}, {
  categoryId: 3,
  english: "I'm cold.",
  translation: "J'ai froid.",
  context: "Pour exprimer qu'on ressent le froid",
  examples: [{
    english: "I'm cold. Can you close the window?",
    translation: "J'ai froid. Pouvez-vous fermer la fenêtre ?"
  }]
}, {
  categoryId: 3,
  english: "I'm hot.",
  translation: "J'ai chaud.",
  context: "Pour exprimer qu'on ressent la chaleur",
  examples: [{
    english: "I'm hot. Can we turn on the air conditioning?",
    translation: "J'ai chaud. Peut-on allumer la climatisation ?"
  }]
}, {
  categoryId: 3,
  english: "I'm sick.",
  translation: "Je suis malade.",
  context: "Pour indiquer qu'on ne se sent pas bien",
  examples: [{
    english: "I'm sick. I need to see a doctor.",
    translation: "Je suis malade. J'ai besoin de voir un médecin."
  }]
}, {
  categoryId: 3,
  english: "I need to use the bathroom.",
  translation: "J'ai besoin d'aller aux toilettes.",
  context: "Pour exprimer le besoin d'utiliser les toilettes",
  examples: [{
    english: "Excuse me, I need to use the bathroom.",
    translation: "Excusez-moi, j'ai besoin d'aller aux toilettes."
  }],
  notes: "Version polie et neutre, adaptée à toutes situations"
}, {
  categoryId: 3,
  english: "Where is the bathroom?",
  translation: "Où sont les toilettes ?",
  context: "Pour demander où se trouvent les toilettes",
  examples: [{
    english: "Excuse me, where is the bathroom?",
    translation: "Excusez-moi, où sont les toilettes ?"
  }]
}, {
  categoryId: 3,
  english: "I need to sleep.",
  translation: "J'ai besoin de dormir.",
  context: "Pour exprimer le besoin de sommeil",
  examples: [{
    english: "I need to sleep. I'm very tired.",
    translation: "J'ai besoin de dormir. Je suis très fatigué(e)."
  }]
}, {
  categoryId: 3,
  english: "I'm happy.",
  translation: "Je suis heureux/heureuse.",
  context: "Pour exprimer la joie ou le bonheur",
  examples: [{
    english: "I'm happy to see you!",
    translation: "Je suis heureux/heureuse de te voir !"
  }]
}, {
  categoryId: 3,
  english: "I'm sad.",
  translation: "Je suis triste.",
  context: "Pour exprimer la tristesse",
  examples: [{
    english: "I'm sad about the news.",
    translation: "Je suis triste à cause de cette nouvelle."
  }]
}, {
  categoryId: 3,
  english: "I'm scared.",
  translation: "J'ai peur.",
  context: "Pour exprimer la peur",
  examples: [{
    english: "I'm scared of the dark.",
    translation: "J'ai peur du noir."
  }]
}, {
  categoryId: 3,
  english: "I'm nervous.",
  translation: "Je suis nerveux/nerveuse.",
  context: "Pour exprimer l'anxiété ou la nervosité",
  examples: [{
    english: "I'm nervous about the exam.",
    translation: "Je suis nerveux/nerveuse à cause de l'examen."
  }]
}, {
  categoryId: 3,
  english: "I need help.",
  translation: "J'ai besoin d'aide.",
  context: "Pour demander de l'aide de façon générale",
  examples: [{
    english: "Excuse me, I need help with my luggage.",
    translation: "Excusez-moi, j'ai besoin d'aide avec mes bagages."
  }]
}, {
  categoryId: 3,
  english: "I need water.",
  translation: "J'ai besoin d'eau.",
  context: "Pour demander de l'eau",
  examples: [{
    english: "I need water, please.",
    translation: "J'ai besoin d'eau, s'il vous plaît."
  }]
}, {
  categoryId: 3,
  english: "I need food.",
  translation: "J'ai besoin de nourriture.",
  context: "Pour exprimer le besoin de manger",
  examples: [{
    english: "I need food. Is there a restaurant near here?",
    translation: "J'ai besoin de nourriture. Y a-t-il un restaurant près d'ici ?"
  }]
}, {
  categoryId: 3,
  english: "I need medicine.",
  translation: "J'ai besoin de médicaments.",
  context: "Pour exprimer le besoin de médicaments",
  examples: [{
    english: "I need medicine for a headache.",
    translation: "J'ai besoin de médicaments pour un mal de tête."
  }]
}, {
  categoryId: 3,
  english: "I'm fine.",
  translation: "Je vais bien.",
  context: "Pour indiquer qu'on se sent bien",
  examples: [{
    english: "Don't worry, I'm fine.",
    translation: "Ne t'inquiète pas, je vais bien."
  }]
}, {
  categoryId: 3,
  english: "I don't feel well.",
  translation: "Je ne me sens pas bien.",
  context: "Pour indiquer qu'on ne se sent pas bien",
  examples: [{
    english: "I don't feel well. I think I'm sick.",
    translation: "Je ne me sens pas bien. Je pense que je suis malade."
  }]
}, {
  categoryId: 3,
  english: "I need to rest.",
  translation: "J'ai besoin de me reposer.",
  context: "Pour exprimer le besoin de repos",
  examples: [{
    english: "I need to rest for a while.",
    translation: "J'ai besoin de me reposer un moment."
  }]
}]);
export default basicNeeds;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,