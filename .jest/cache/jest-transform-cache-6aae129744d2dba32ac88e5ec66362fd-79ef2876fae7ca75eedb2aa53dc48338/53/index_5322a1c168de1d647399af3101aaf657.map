{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_propTypes","_interopRequireDefault","_Card","_ThemeContext","_constants","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","LevelsCircleRow","_ref","levels","currentLevel","onLevelPress","getLevelLabel","colors","primaryColor","styles","handlers","useMemo","map","forEach","level","id","jsx","View","style","levelsContainer","children","_level$progress","isActive","TouchableOpacity","testID","levelButton","onPress","activeOpacity","accessibilityRole","accessibilityLabel","accessibilityValue","min","max","now","progress","levelCircle","activeLevelCircle","backgroundColor","color","futureLevelCircle","Text","levelText","activeLevelText","futureLevelText","textSecondary","propTypes","PropTypes","array","isRequired","string","func","object","GlobalProgressBar","_ref2","jsxs","globalProgressContainer","globalProgressTrack","globalProgressFill","width","Math","progressLabel","number","ProgressHeader","_ref3","levelInfo","levelLabel","header","progressInfo","progressTitle","text","title","progressSubtitle","icon","progressBadge","progressPercentage","LearningProgress","_ref4","_ref4$levels","_ref4$currentLevel","onSelectLevel","onChangeLevelVisual","_ref4$primaryColor","_ref4$globalProgress","globalProgress","_ref5","useContext","ThemeContext","_ref5$colors","themeColors","surface","effectiveLevels","length","entries","LANGUAGE_LEVELS","_ref6","_ref7","_slicedToArray2","data","currentLevelInfo","handleLevelPress","useCallback","levelId","handleExplorePress","container","sectionTitle","card","actionButton","borderColor","actionButtonText","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/screens/Dashboard/components/LearningProgress/index.js\r\nimport React, { useContext, useCallback, useMemo } from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Card from \"../../../../components/ui/Card\";\r\nimport { ThemeContext } from \"../../../../contexts/ThemeContext\";\r\nimport { LANGUAGE_LEVELS } from \"../../../../utils/constants\";\r\nimport styles from \"./style\";\r\n\r\n/**\r\n * Cercle pour chaque niveau avec gestion du clic\r\n */\r\nconst LevelsCircleRow = ({\r\n  levels,\r\n  currentLevel,\r\n  onLevelPress,\r\n  getLevelLabel,\r\n  colors,\r\n  primaryColor,\r\n  styles,\r\n}) => {\r\n  // Memoriser handlers pour √©viter re-cr√©ation inline\r\n  const handlers = useMemo(() => {\r\n    const map = {};\r\n    levels.forEach((level) => {\r\n      map[level.id] = () => onLevelPress(level.id);\r\n    });\r\n    return map;\r\n  }, [levels, onLevelPress]);\r\n\r\n  return (\r\n    <View style={styles.levelsContainer}>\r\n      {levels.map((level) => {\r\n        const isActive = level.id === currentLevel;\r\n        return (\r\n          <TouchableOpacity\r\n            key={level.id}\r\n            testID={`level-${level.id}-button`}\r\n            style={styles.levelButton}\r\n            onPress={handlers[level.id]}\r\n            activeOpacity={0.7}\r\n            accessibilityRole=\"button\"\r\n            accessibilityLabel={`Niveau ${getLevelLabel(level.id)}`}\r\n            accessibilityValue={{ min: 0, max: 100, now: level.progress ?? 0 }}\r\n          >\r\n            <View\r\n              style={[\r\n                styles.levelCircle,\r\n                isActive\r\n                  ? [styles.activeLevelCircle, { backgroundColor: level.color || primaryColor }]\r\n                  : styles.futureLevelCircle,\r\n              ]}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.levelText,\r\n                  isActive\r\n                    ? styles.activeLevelText\r\n                    : [styles.futureLevelText, { color: colors.textSecondary }],\r\n                ]}\r\n              >\r\n                {getLevelLabel(level.id)}\r\n              </Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n};\r\n\r\nLevelsCircleRow.propTypes = {\r\n  levels: PropTypes.array.isRequired,\r\n  currentLevel: PropTypes.string.isRequired,\r\n  onLevelPress: PropTypes.func.isRequired,\r\n  getLevelLabel: PropTypes.func.isRequired,\r\n  colors: PropTypes.object.isRequired,\r\n  primaryColor: PropTypes.string.isRequired,\r\n  styles: PropTypes.object.isRequired,\r\n};\r\n\r\n/**\r\n * Barre de progression globale\r\n */\r\nconst GlobalProgressBar = ({ progress, primaryColor, colors, styles }) => (\r\n  <View style={styles.globalProgressContainer}>\r\n    <View style={[styles.globalProgressTrack, { backgroundColor: `${primaryColor}15` }]}>\r\n      <View\r\n        style={[\r\n          styles.globalProgressFill,\r\n          {\r\n            width: `${Math.min(progress, 100)}%`,\r\n            backgroundColor: primaryColor,\r\n          },\r\n        ]}\r\n      />\r\n    </View>\r\n    <Text style={[styles.progressLabel, { color: colors.textSecondary }]}>Progression globale</Text>\r\n  </View>\r\n);\r\n\r\nGlobalProgressBar.propTypes = {\r\n  progress: PropTypes.number.isRequired,\r\n  primaryColor: PropTypes.string.isRequired,\r\n  colors: PropTypes.object.isRequired,\r\n  styles: PropTypes.object.isRequired,\r\n};\r\n\r\n/**\r\n * En-t√™te avec infos du niveau courant\r\n */\r\nconst ProgressHeader = ({ levelInfo, levelLabel, progress, primaryColor, colors, styles }) => (\r\n  <View style={styles.header}>\r\n    <View style={styles.progressInfo}>\r\n      <Text style={[styles.progressTitle, { color: colors.text }]}>\r\n        {levelInfo.title || `Niveau ${levelLabel}`}\r\n      </Text>\r\n      <Text style={[styles.progressSubtitle, { color: colors.textSecondary }]}>\r\n        Continuez votre apprentissage {levelInfo.icon}\r\n      </Text>\r\n    </View>\r\n    <View style={styles.progressBadge}>\r\n      <Text style={[styles.progressPercentage, { color: primaryColor }]}>{progress}%</Text>\r\n    </View>\r\n  </View>\r\n);\r\n\r\nProgressHeader.propTypes = {\r\n  levelInfo: PropTypes.object.isRequired,\r\n  levelLabel: PropTypes.string.isRequired,\r\n  progress: PropTypes.number.isRequired,\r\n  primaryColor: PropTypes.string.isRequired,\r\n  colors: PropTypes.object.isRequired,\r\n  styles: PropTypes.object.isRequired,\r\n};\r\n\r\n/**\r\n * Composant principal LearningProgress\r\n */\r\nconst LearningProgress = ({\r\n  levels = [],\r\n  currentLevel = \"1\",\r\n  onSelectLevel,\r\n  onChangeLevelVisual,\r\n  primaryColor = \"#3B82F6\",\r\n  globalProgress = 0,\r\n}) => {\r\n  const { colors: themeColors = {} } = useContext(ThemeContext) || {};\r\n\r\n  const colors = {\r\n    surface: themeColors.surface || \"#FFFFFF\",\r\n    text: themeColors.text || \"#1F2937\",\r\n    textSecondary: themeColors.textSecondary || \"#6B7280\",\r\n  };\r\n\r\n  // Si pas de niveaux fournis, prendre ceux par d√©faut\r\n  const effectiveLevels = levels.length\r\n    ? levels\r\n    : Object.entries(LANGUAGE_LEVELS).map(([id, data]) => ({\r\n        id,\r\n        color: data.color,\r\n      }));\r\n\r\n  const currentLevelInfo = LANGUAGE_LEVELS[currentLevel] || LANGUAGE_LEVELS[\"1\"];\r\n  const getLevelLabel = (id) => (id === \"bonus\" ? \"B\" : id);\r\n\r\n  // Handler clique sur cercle (changement visuel)\r\n  const handleLevelPress = useCallback(\r\n    (levelId) => {\r\n      if (onChangeLevelVisual) onChangeLevelVisual(levelId);\r\n    },\r\n    [onChangeLevelVisual]\r\n  );\r\n\r\n  // Handler clique sur bouton explorer (navigation)\r\n  const handleExplorePress = useCallback(() => {\r\n    if (onSelectLevel) onSelectLevel(currentLevel);\r\n  }, [onSelectLevel, currentLevel]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>üèÜ Progression g√©n√©rale</Text>\r\n      <Card style={[styles.card, { backgroundColor: colors.surface }]}>\r\n        <ProgressHeader\r\n          levelInfo={currentLevelInfo}\r\n          levelLabel={getLevelLabel(currentLevel)}\r\n          progress={globalProgress}\r\n          primaryColor={primaryColor}\r\n          colors={colors}\r\n          styles={styles}\r\n        />\r\n        <GlobalProgressBar\r\n          progress={globalProgress}\r\n          primaryColor={primaryColor}\r\n          colors={colors}\r\n          styles={styles}\r\n        />\r\n        <LevelsCircleRow\r\n          levels={effectiveLevels}\r\n          currentLevel={currentLevel}\r\n          onLevelPress={handleLevelPress}\r\n          getLevelLabel={getLevelLabel}\r\n          colors={colors}\r\n          primaryColor={primaryColor}\r\n          styles={styles}\r\n        />\r\n        <TouchableOpacity\r\n          testID=\"explore-level-button\"\r\n          style={[styles.actionButton, { borderColor: primaryColor }]}\r\n          onPress={handleExplorePress}\r\n          activeOpacity={0.7}\r\n          accessibilityRole=\"button\"\r\n          accessibilityLabel={`Explorer le niveau ${getLevelLabel(currentLevel)}`}\r\n        >\r\n          <Text style={[styles.actionButtonText, { color: primaryColor }]}>\r\n            Explorer le niveau {getLevelLabel(currentLevel)}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </Card>\r\n    </View>\r\n  );\r\n};\r\n\r\nLearningProgress.propTypes = {\r\n  levels: PropTypes.array,\r\n  currentLevel: PropTypes.string,\r\n  onSelectLevel: PropTypes.func,\r\n  onChangeLevelVisual: PropTypes.func,\r\n  primaryColor: PropTypes.string,\r\n  globalProgress: PropTypes.number,\r\n};\r\n\r\n\r\n\r\nexport default LearningProgress;\r\n"],"mappings":"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","ignoreList":[]}