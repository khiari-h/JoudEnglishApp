{"version":3,"names":["_react","require","_constants","cov_aszyuzt7p","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","useDashboardData","exports","progressContext","currentLevel","lastActivity","currentStreak","_ref","_ref$progress","progress","_ref$calculateGlobalP","calculateGlobalProgress","_ref$calculateLevelPr","calculateLevelProgress","globalProgress","useMemo","levelProgress","allLevels","Object","keys","LANGUAGE_LEVELS","map","levelKey","id","color","isActive","getAllLearningLevels","title"],"sources":["useDashboardData.js"],"sourcesContent":["// src/screens/Dashboard/hooks/useDashboardData.js - VERSION NETTOYÉE\nimport { useMemo } from \"react\";\nimport { LANGUAGE_LEVELS } from \"../../../utils/constants\";\n\nexport const useDashboardData = (\n  progressContext,\n  currentLevel,\n  lastActivity,\n  currentStreak\n) => {\n  const {\n    progress = {},\n    calculateGlobalProgress = () => 0,\n    calculateLevelProgress = () => 0,\n  } = progressContext || {};\n\n  // Mémoriser les calculs lourds pour éviter les re-calculs inutiles\n  const globalProgress = useMemo(() => {\n    return calculateGlobalProgress();\n  }, [calculateGlobalProgress]);\n\n  const levelProgress = useMemo(() => {\n    return calculateLevelProgress(currentLevel);\n  }, [calculateLevelProgress, currentLevel]);\n\n  // Mémoriser la liste des niveaux pour éviter les re-créations\n  const allLevels = useMemo(() => {\n    return Object.keys(LANGUAGE_LEVELS).map((levelKey) => ({\n      id: levelKey,\n      color: LANGUAGE_LEVELS[levelKey].color,\n      isActive: levelKey === currentLevel,\n    }));\n  }, [currentLevel]);\n\n  // Mémoriser les niveaux d'apprentissage avec progress\n  const getAllLearningLevels = useMemo(() => {\n    return Object.keys(LANGUAGE_LEVELS).map((levelKey) => ({\n      id: levelKey,\n      title: LANGUAGE_LEVELS[levelKey].title,\n      color: LANGUAGE_LEVELS[levelKey].color,\n      progress: calculateLevelProgress(levelKey),\n      isActive: levelKey === currentLevel,\n    }));\n  }, [calculateLevelProgress, currentLevel]);\n\n  // ✅ SUPPRIMÉ : Plus besoin d'exerciseTimeStats fake !\n  // RecommendationsSection récupère maintenant ses vraies données\n  // via useExerciseTracking directement\n\n  return {\n    progress,\n    globalProgress,\n    levelProgress,\n    allLevels,\n    getAllLearningLevels,\n    // exerciseTimeStats, ← SUPPRIMÉ !\n    lastActivity,\n    currentStreak,\n  };\n};"],"mappings":"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","ignoreList":[]}