{"version":3,"names":["_getJestObj","mock","getItem","jest","fn","getVocabularyData","_interopRequireDefault","require","_asyncToGenerator2","_reactNative","_asyncStorage","_useRealTimeProgress","_require2","describe","mockVocabularyData","exercises","words","word","beforeEach","clearAllMocks","_require","mockReturnValue","it","AsyncStorage","mockResolvedValue","_renderHook","renderHook","useRealTimeProgress","result","expect","current","isLoading","toBe","levelProgress","toBeDefined","exerciseProgress","default","mockStorageData","completedWords","mockImplementation","key","Promise","resolve","JSON","stringify","_renderHook2","waitFor","getExerciseProgress","toBeGreaterThan","_renderHook3","getLevelProgress","hasProgress","hasVocabularyStarted","hasVocabularyFastStarted","refresh","_renderHook4","act"],"sources":["useRealTimeProgress.test.js"],"sourcesContent":["// __tests__/hooks/useRealTimeProgress.test.js\nimport { renderHook, act, waitFor } from '@testing-library/react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useRealTimeProgress from '../../src/hooks/useRealTimeProgress';\n\njest.mock('@react-native-async-storage/async-storage', () => ({\n  getItem: jest.fn(),\n}));\n\njest.mock('../../src/utils/vocabulary/vocabularyDataHelper', () => ({\n  getVocabularyData: jest.fn()\n}));\n\ndescribe('useRealTimeProgress', () => {\n  const mockVocabularyData = {\n    exercises: [\n      { words: [{ word: 'hello' }, { word: 'world' }] },\n      { words: [{ word: 'test' }] }\n    ]\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    const { getVocabularyData } = require('../../src/utils/vocabulary/vocabularyDataHelper');\n    getVocabularyData.mockReturnValue(mockVocabularyData);\n  });\n\n  it('devrait initialiser avec les bonnes valeurs', () => {\n    AsyncStorage.getItem.mockResolvedValue(null);\n    const { result } = renderHook(() => useRealTimeProgress());\n\n    expect(result.current.isLoading).toBe(true);\n    expect(result.current.levelProgress).toBeDefined();\n    expect(result.current.exerciseProgress).toBeDefined();\n  });\n\n  it('devrait calculer la progression vocabulaire', async () => {\n    const mockStorageData = {\n      completedWords: {\n        '0': ['word1', 'word2'],\n        '1': ['word3']\n      }\n    };\n\n    AsyncStorage.getItem.mockImplementation((key) => {\n      if (key === 'vocabulary_1_classic') {\n        return Promise.resolve(JSON.stringify(mockStorageData));\n      }\n      return Promise.resolve(null);\n    });\n\n    const { result } = renderHook(() => useRealTimeProgress());\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n      expect(result.current.getExerciseProgress('vocabulary', '1')).toBeGreaterThan(0);\n    });\n  });\n\n  it('devrait avoir toutes les fonctions utilitaires', () => {\n    AsyncStorage.getItem.mockResolvedValue(null);\n    const { result } = renderHook(() => useRealTimeProgress());\n\n    expect(typeof result.current.getLevelProgress).toBe('function');\n    expect(typeof result.current.getExerciseProgress).toBe('function');\n    expect(typeof result.current.hasProgress).toBe('function');\n    expect(typeof result.current.hasVocabularyStarted).toBe('function');\n    expect(typeof result.current.hasVocabularyFastStarted).toBe('function');\n    expect(typeof result.current.refresh).toBe('function');\n  });\n\n  it('devrait permettre de refresh', async () => {\n    AsyncStorage.getItem.mockResolvedValue(null);\n    const { result } = renderHook(() => useRealTimeProgress());\n\n    await act(async () => {\n      result.current.refresh();\n    });\n\n    expect(typeof result.current.refresh).toBe('function');\n  });\n});"],"mappings":"AAKAA,WAAA,GAAKC,IAAI,CAAC,2CAA2C,EAAE;EAAA,OAAO;IAC5DC,OAAO,EAAEC,IAAI,CAACC,EAAE,CAAC;EACnB,CAAC;AAAA,CAAC,CAAC;AAEHJ,WAAA,GAAKC,IAAI,CAAC,iDAAiD,EAAE;EAAA,OAAO;IAClEI,iBAAiB,EAAEF,IAAI,CAACC,EAAE,CAAC;EAC7B,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAE,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAVJ,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,oBAAA,GAAAL,sBAAA,CAAAC,OAAA;AAAsE,SAAAP,YAAA;EAAA,IAAAY,SAAA,GAAAL,OAAA;IAAAJ,IAAA,GAAAS,SAAA,CAAAT,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAUtEU,QAAQ,CAAC,qBAAqB,EAAE,YAAM;EACpC,IAAMC,kBAAkB,GAAG;IACzBC,SAAS,EAAE,CACT;MAAEC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC,EAAE;QAAEA,IAAI,EAAE;MAAQ,CAAC;IAAE,CAAC,EACjD;MAAED,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAO,CAAC;IAAE,CAAC;EAEjC,CAAC;EAEDC,UAAU,CAAC,YAAM;IACff,IAAI,CAACgB,aAAa,CAAC,CAAC;IACpB,IAAAC,QAAA,GAA8Bb,OAAO,CAAC,iDAAiD,CAAC;MAAhFF,iBAAiB,GAAAe,QAAA,CAAjBf,iBAAiB;IACzBA,iBAAiB,CAACgB,eAAe,CAACP,kBAAkB,CAAC;EACvD,CAAC,CAAC;EAEFQ,EAAE,CAAC,6CAA6C,EAAE,YAAM;IACtDC,qBAAY,CAACrB,OAAO,CAACsB,iBAAiB,CAAC,IAAI,CAAC;IAC5C,IAAAC,WAAA,GAAmB,IAAAC,uBAAU,EAAC;QAAA,OAAM,IAAAC,4BAAmB,EAAC,CAAC;MAAA,EAAC;MAAlDC,MAAM,GAAAH,WAAA,CAANG,MAAM;IAEdC,MAAM,CAACD,MAAM,CAACE,OAAO,CAACC,SAAS,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAC3CH,MAAM,CAACD,MAAM,CAACE,OAAO,CAACG,aAAa,CAAC,CAACC,WAAW,CAAC,CAAC;IAClDL,MAAM,CAACD,MAAM,CAACE,OAAO,CAACK,gBAAgB,CAAC,CAACD,WAAW,CAAC,CAAC;EACvD,CAAC,CAAC;EAEFZ,EAAE,CAAC,6CAA6C,MAAAd,kBAAA,CAAA4B,OAAA,EAAE,aAAY;IAC5D,IAAMC,eAAe,GAAG;MACtBC,cAAc,EAAE;QACd,GAAG,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;QACvB,GAAG,EAAE,CAAC,OAAO;MACf;IACF,CAAC;IAEDf,qBAAY,CAACrB,OAAO,CAACqC,kBAAkB,CAAC,UAACC,GAAG,EAAK;MAC/C,IAAIA,GAAG,KAAK,sBAAsB,EAAE;QAClC,OAAOC,OAAO,CAACC,OAAO,CAACC,IAAI,CAACC,SAAS,CAACP,eAAe,CAAC,CAAC;MACzD;MACA,OAAOI,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;IAC9B,CAAC,CAAC;IAEF,IAAAG,YAAA,GAAmB,IAAAnB,uBAAU,EAAC;QAAA,OAAM,IAAAC,4BAAmB,EAAC,CAAC;MAAA,EAAC;MAAlDC,MAAM,GAAAiB,YAAA,CAANjB,MAAM;IAEd,MAAM,IAAAkB,oBAAO,EAAC,YAAM;MAClBjB,MAAM,CAACD,MAAM,CAACE,OAAO,CAACC,SAAS,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;MAC5CH,MAAM,CAACD,MAAM,CAACE,OAAO,CAACiB,mBAAmB,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC;IAClF,CAAC,CAAC;EACJ,CAAC,EAAC;EAEF1B,EAAE,CAAC,gDAAgD,EAAE,YAAM;IACzDC,qBAAY,CAACrB,OAAO,CAACsB,iBAAiB,CAAC,IAAI,CAAC;IAC5C,IAAAyB,YAAA,GAAmB,IAAAvB,uBAAU,EAAC;QAAA,OAAM,IAAAC,4BAAmB,EAAC,CAAC;MAAA,EAAC;MAAlDC,MAAM,GAAAqB,YAAA,CAANrB,MAAM;IAEdC,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACoB,gBAAgB,CAAC,CAAClB,IAAI,CAAC,UAAU,CAAC;IAC/DH,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACiB,mBAAmB,CAAC,CAACf,IAAI,CAAC,UAAU,CAAC;IAClEH,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACqB,WAAW,CAAC,CAACnB,IAAI,CAAC,UAAU,CAAC;IAC1DH,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACsB,oBAAoB,CAAC,CAACpB,IAAI,CAAC,UAAU,CAAC;IACnEH,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACuB,wBAAwB,CAAC,CAACrB,IAAI,CAAC,UAAU,CAAC;IACvEH,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACwB,OAAO,CAAC,CAACtB,IAAI,CAAC,UAAU,CAAC;EACxD,CAAC,CAAC;EAEFV,EAAE,CAAC,8BAA8B,MAAAd,kBAAA,CAAA4B,OAAA,EAAE,aAAY;IAC7Cb,qBAAY,CAACrB,OAAO,CAACsB,iBAAiB,CAAC,IAAI,CAAC;IAC5C,IAAA+B,YAAA,GAAmB,IAAA7B,uBAAU,EAAC;QAAA,OAAM,IAAAC,4BAAmB,EAAC,CAAC;MAAA,EAAC;MAAlDC,MAAM,GAAA2B,YAAA,CAAN3B,MAAM;IAEd,MAAM,IAAA4B,gBAAG,MAAAhD,kBAAA,CAAA4B,OAAA,EAAC,aAAY;MACpBR,MAAM,CAACE,OAAO,CAACwB,OAAO,CAAC,CAAC;IAC1B,CAAC,EAAC;IAEFzB,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACwB,OAAO,CAAC,CAACtB,IAAI,CAAC,UAAU,CAAC;EACxD,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}