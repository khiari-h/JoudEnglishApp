68e862039011fb7af4144dd48b1668f6
function cov_1ze4igkleu() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionModeSelector\\index.js";
  var hash = "2aec84379ee1dc9f8d87a144c94721a9309c35a5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionModeSelector\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 36
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "1": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "2": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "3": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 42,
          column: 93
        }
      },
      "4": {
        start: {
          line: 42,
          column: 50
        },
        end: {
          line: 42,
          column: 76
        }
      },
      "5": {
        start: {
          line: 42,
          column: 56
        },
        end: {
          line: 42,
          column: 76
        }
      },
      "6": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 72,
          column: 4
        }
      },
      "7": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 69,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 13,
            column: 37
          }
        },
        loc: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 38
          },
          end: {
            line: 42,
            column: 39
          }
        },
        loc: {
          start: {
            line: 42,
            column: 50
          },
          end: {
            line: 42,
            column: 76
          }
        },
        line: 42
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 50
          },
          end: {
            line: 42,
            column: 51
          }
        },
        loc: {
          start: {
            line: 42,
            column: 56
          },
          end: {
            line: 42,
            column: 76
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 18
          }
        },
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 69,
            column: 27
          }
        },
        line: 49
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 2
          },
          end: {
            line: 15,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 18
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 24
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 35
          },
          end: {
            line: 51,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 35
          },
          end: {
            line: 51,
            column: 43
          }
        }, {
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 66
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 58,
            column: 19
          },
          end: {
            line: 58,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 58,
            column: 39
          }
        }, {
          start: {
            line: 58,
            column: 42
          },
          end: {
            line: 58,
            column: 52
          }
        }],
        line: 58
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 44
          },
          end: {
            line: 62,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 44
          },
          end: {
            line: 62,
            column: 52
          }
        }, {
          start: {
            line: 62,
            column: 56
          },
          end: {
            line: 62,
            column: 75
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 50
          },
          end: {
            line: 65,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 50
          },
          end: {
            line: 65,
            column: 58
          }
        }, {
          start: {
            line: 65,
            column: 62
          },
          end: {
            line: 65,
            column: 81
          }
        }],
        line: 65
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2aec84379ee1dc9f8d87a144c94721a9309c35a5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1ze4igkleu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ze4igkleu();
import { View, Text, TouchableOpacity } from "react-native";
import { Ionicons } from "@expo/vector-icons";
import createStyles from "./style";
import { useCallback } from "react";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_1ze4igkleu().s[0]++;
var ErrorCorrectionModeSelector = function ErrorCorrectionModeSelector(_ref) {
  var onSelectMode = _ref.onSelectMode,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? (cov_1ze4igkleu().b[0][0]++, false) : _ref$disabled,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_1ze4igkleu().b[1][0]++, "#5E60CE") : _ref$levelColor;
  cov_1ze4igkleu().f[0]++;
  var styles = (cov_1ze4igkleu().s[1]++, createStyles(levelColor));
  var modes = (cov_1ze4igkleu().s[2]++, [{
    id: "full",
    title: "Correction complète",
    description: "Corriger la phrase entière",
    icon: "create-outline"
  }, {
    id: "identify",
    title: "Identifier erreurs",
    description: "Toucher les mots erronés",
    icon: "search-outline"
  }, {
    id: "multiple_choice",
    title: "Choix multiple",
    description: "Choisir la bonne réponse",
    icon: "list-outline"
  }]);
  var handleModePress = (cov_1ze4igkleu().s[3]++, useCallback(function (modeId) {
    cov_1ze4igkleu().f[1]++;
    cov_1ze4igkleu().s[4]++;
    return function () {
      cov_1ze4igkleu().f[2]++;
      cov_1ze4igkleu().s[5]++;
      return onSelectMode(modeId);
    };
  }, [onSelectMode]));
  cov_1ze4igkleu().s[6]++;
  return _jsxs(View, {
    style: styles.container,
    children: [_jsx(Text, {
      style: styles.title,
      children: "Choisir un mode :"
    }), modes.map(function (mode) {
      cov_1ze4igkleu().f[3]++;
      cov_1ze4igkleu().s[7]++;
      return _jsxs(TouchableOpacity, {
        style: [styles.modeCard, (cov_1ze4igkleu().b[2][0]++, disabled) && (cov_1ze4igkleu().b[2][1]++, styles.disabledCard)],
        onPress: handleModePress(mode.id),
        disabled: disabled,
        children: [_jsx(Ionicons, {
          name: mode.icon,
          size: 24,
          color: disabled ? (cov_1ze4igkleu().b[3][0]++, "#94a3b8") : (cov_1ze4igkleu().b[3][1]++, levelColor),
          style: styles.icon
        }), _jsxs(View, {
          style: styles.modeInfo,
          children: [_jsx(Text, {
            style: [styles.modeTitle, (cov_1ze4igkleu().b[4][0]++, disabled) && (cov_1ze4igkleu().b[4][1]++, styles.disabledText)],
            children: mode.title
          }), _jsx(Text, {
            style: [styles.modeDescription, (cov_1ze4igkleu().b[5][0]++, disabled) && (cov_1ze4igkleu().b[5][1]++, styles.disabledText)],
            children: mode.description
          })]
        })]
      }, mode.id);
    })]
  });
};
export default ErrorCorrectionModeSelector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWaWV3IiwiVGV4dCIsIlRvdWNoYWJsZU9wYWNpdHkiLCJJb25pY29ucyIsImNyZWF0ZVN0eWxlcyIsInVzZUNhbGxiYWNrIiwianN4IiwiX2pzeCIsImpzeHMiLCJfanN4cyIsImNvdl8xemU0aWdrbGV1IiwicyIsIkVycm9yQ29ycmVjdGlvbk1vZGVTZWxlY3RvciIsIl9yZWYiLCJvblNlbGVjdE1vZGUiLCJfcmVmJGRpc2FibGVkIiwiZGlzYWJsZWQiLCJiIiwiX3JlZiRsZXZlbENvbG9yIiwibGV2ZWxDb2xvciIsImYiLCJzdHlsZXMiLCJtb2RlcyIsImlkIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImljb24iLCJoYW5kbGVNb2RlUHJlc3MiLCJtb2RlSWQiLCJzdHlsZSIsImNvbnRhaW5lciIsImNoaWxkcmVuIiwibWFwIiwibW9kZSIsIm1vZGVDYXJkIiwiZGlzYWJsZWRDYXJkIiwib25QcmVzcyIsIm5hbWUiLCJzaXplIiwiY29sb3IiLCJtb2RlSW5mbyIsIm1vZGVUaXRsZSIsImRpc2FibGVkVGV4dCIsIm1vZGVEZXNjcmlwdGlvbiJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEVycm9yQ29ycmVjdGlvbk1vZGVTZWxlY3Rvci9pbmRleC5qcyAtIFZFUlNJT04gU0lNUExJRknDiUUgKDgwIOKGkiAzNSBsaWduZXMpXHJcblxyXG5pbXBvcnQgeyBWaWV3LCBUZXh0LCBUb3VjaGFibGVPcGFjaXR5IH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xyXG5pbXBvcnQgeyBJb25pY29ucyB9IGZyb20gXCJAZXhwby92ZWN0b3ItaWNvbnNcIjtcclxuaW1wb3J0IGNyZWF0ZVN0eWxlcyBmcm9tIFwiLi9zdHlsZVwiO1xyXG5pbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xyXG5cclxuLyoqXHJcbiAqIPCfjq8gRXJyb3JDb3JyZWN0aW9uTW9kZVNlbGVjdG9yIC0gVmVyc2lvbiBVbHRyYS1TaW1wbGlmacOpZVxyXG4gKiA4MCBsaWduZXMg4oaSIDM1IGxpZ25lcyAoLTU2JSBkZSBjb2RlKVxyXG4gKiBMb2dpcXVlIMOpcHVyw6llLCBkZXNpZ24gY2xlYW5cclxuICovXHJcbmNvbnN0IEVycm9yQ29ycmVjdGlvbk1vZGVTZWxlY3RvciA9ICh7XHJcbiAgb25TZWxlY3RNb2RlLFxyXG4gIGRpc2FibGVkID0gZmFsc2UsXHJcbiAgbGV2ZWxDb2xvciA9IFwiIzVFNjBDRVwiLFxyXG59KSA9PiB7XHJcbiAgY29uc3Qgc3R5bGVzID0gY3JlYXRlU3R5bGVzKGxldmVsQ29sb3IpO1xyXG5cclxuICBjb25zdCBtb2RlcyA9IFtcclxuICAgIHtcclxuICAgICAgaWQ6IFwiZnVsbFwiLFxyXG4gICAgICB0aXRsZTogXCJDb3JyZWN0aW9uIGNvbXBsw6h0ZVwiLFxyXG4gICAgICBkZXNjcmlwdGlvbjogXCJDb3JyaWdlciBsYSBwaHJhc2UgZW50acOocmVcIixcclxuICAgICAgaWNvbjogXCJjcmVhdGUtb3V0bGluZVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6IFwiaWRlbnRpZnlcIixcclxuICAgICAgdGl0bGU6IFwiSWRlbnRpZmllciBlcnJldXJzXCIsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiBcIlRvdWNoZXIgbGVzIG1vdHMgZXJyb27DqXNcIixcclxuICAgICAgaWNvbjogXCJzZWFyY2gtb3V0bGluZVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6IFwibXVsdGlwbGVfY2hvaWNlXCIsXHJcbiAgICAgIHRpdGxlOiBcIkNob2l4IG11bHRpcGxlXCIsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkNob2lzaXIgbGEgYm9ubmUgcsOpcG9uc2VcIixcclxuICAgICAgaWNvbjogXCJsaXN0LW91dGxpbmVcIixcclxuICAgIH0sXHJcbiAgXTtcclxuXHJcbiAgLy8gRmFjdG9yeSBkZSBoYW5kbGVyIHBvdXIgw6l2aXRlciBsYSBjcsOpYXRpb24gZGUgZm9uY3Rpb25zIGlubGluZVxyXG4gIGNvbnN0IGhhbmRsZU1vZGVQcmVzcyA9IHVzZUNhbGxiYWNrKChtb2RlSWQpID0+ICgpID0+IG9uU2VsZWN0TW9kZShtb2RlSWQpLCBbb25TZWxlY3RNb2RlXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XHJcbiAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGl0bGV9PkNob2lzaXIgdW4gbW9kZSA6PC9UZXh0PlxyXG5cclxuICAgICAge21vZGVzLm1hcCgobW9kZSkgPT4gKFxyXG4gICAgICAgIDxUb3VjaGFibGVPcGFjaXR5XHJcbiAgICAgICAgICBrZXk9e21vZGUuaWR9XHJcbiAgICAgICAgICBzdHlsZT17W3N0eWxlcy5tb2RlQ2FyZCwgZGlzYWJsZWQgJiYgc3R5bGVzLmRpc2FibGVkQ2FyZF19XHJcbiAgICAgICAgICBvblByZXNzPXtoYW5kbGVNb2RlUHJlc3MobW9kZS5pZCl9XHJcbiAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPElvbmljb25zXHJcbiAgICAgICAgICAgIG5hbWU9e21vZGUuaWNvbn1cclxuICAgICAgICAgICAgc2l6ZT17MjR9XHJcbiAgICAgICAgICAgIGNvbG9yPXtkaXNhYmxlZCA/IFwiIzk0YTNiOFwiIDogbGV2ZWxDb2xvcn1cclxuICAgICAgICAgICAgc3R5bGU9e3N0eWxlcy5pY29ufVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMubW9kZUluZm99PlxyXG4gICAgICAgICAgICA8VGV4dCBzdHlsZT17W3N0eWxlcy5tb2RlVGl0bGUsIGRpc2FibGVkICYmIHN0eWxlcy5kaXNhYmxlZFRleHRdfT5cclxuICAgICAgICAgICAgICB7bW9kZS50aXRsZX1cclxuICAgICAgICAgICAgPC9UZXh0PlxyXG4gICAgICAgICAgICA8VGV4dCBzdHlsZT17W3N0eWxlcy5tb2RlRGVzY3JpcHRpb24sIGRpc2FibGVkICYmIHN0eWxlcy5kaXNhYmxlZFRleHRdfT5cclxuICAgICAgICAgICAgICB7bW9kZS5kZXNjcmlwdGlvbn1cclxuICAgICAgICAgICAgPC9UZXh0PlxyXG4gICAgICAgICAgPC9WaWV3PlxyXG4gICAgICAgIDwvVG91Y2hhYmxlT3BhY2l0eT5cclxuICAgICAgKSl9XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEVycm9yQ29ycmVjdGlvbk1vZGVTZWxlY3RvcjsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxTQUFTQSxJQUFJLEVBQUVDLElBQUksRUFBRUMsZ0JBQWdCLFFBQVEsY0FBYztBQUMzRCxTQUFTQyxRQUFRLFFBQVEsb0JBQW9CO0FBQzdDLE9BQU9DLFlBQVksTUFBTSxTQUFTO0FBQ2xDLFNBQVNDLFdBQVcsUUFBUSxPQUFPO0FBQUMsU0FBQUMsR0FBQSxJQUFBQyxJQUFBLEVBQUFDLElBQUEsSUFBQUMsS0FBQTtBQUFBQyxjQUFBLEdBQUFDLENBQUE7QUFPcEMsSUFBTUMsMkJBQTJCLEdBQUcsU0FBOUJBLDJCQUEyQkEs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