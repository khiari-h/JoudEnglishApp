{"version":3,"names":["_react","require","_reactNative","_vectorIcons","_style","_interopRequireDefault","_jsxRuntime","OptionsList","_ref","_ref$options","options","_ref$selectedOptionId","selectedOptionId","onSelectOption","_ref$correctOptionId","correctOptionId","_ref$showCorrectAnswe","showCorrectAnswer","_ref$disabled","disabled","_ref$primaryColor","primaryColor","_ref$layout","layout","isCorrectOption","optionId","isIncorrectSelection","getOptionStyle","styles","correctOption","incorrectOption","Object","assign","selectedOption","borderColor","option","getOptionTextStyle","correctOptionText","incorrectOptionText","selectedOptionText","color","optionText","handleOptionPress","useCallback","renderVerticalOptions","jsx","View","style","verticalContainer","children","map","jsxs","TouchableOpacity","optionItem","id","onPress","accessibilityRole","accessibilityLabel","String","text","accessibilityState","selected","Text","optionItemText","Ionicons","name","size","selectedIndicator","backgroundColor","renderGridOptions","gridContainer","gridOptionItem","width","Math","min","length","gridOptionText","areEqual","prevProps","nextProps","_default","exports","default","memo"],"sources":["index.js"],"sourcesContent":["// src/components/exercise-common/OptionsList/index.js\r\nimport { memo, useCallback } from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport styles from \"./style\";\r\n\r\n/**\r\n * Liste d'options sélectionnables pour les exercices à choix multiples\r\n */\r\nconst OptionsList = ({\r\n  options = [],\r\n  selectedOptionId = null,\r\n  onSelectOption,\r\n  correctOptionId = null,\r\n  showCorrectAnswer = false,\r\n  disabled = false,\r\n  primaryColor = \"#5E60CE\",\r\n  layout = \"vertical\", // 'vertical' ou 'grid'\r\n}) => {\r\n  // Détermine si une option est correcte (utile pour l'affichage des réponses)\r\n  const isCorrectOption = (optionId) => {\r\n    return showCorrectAnswer && optionId === correctOptionId;\r\n  };\r\n\r\n  // Détermine si une option est incorrecte (utile pour l'affichage des réponses)\r\n  const isIncorrectSelection = (optionId) => {\r\n    return (\r\n      showCorrectAnswer &&\r\n      selectedOptionId === optionId &&\r\n      optionId !== correctOptionId\r\n    );\r\n  };\r\n\r\n  // Définit le style pour chaque option\r\n  const getOptionStyle = (optionId) => {\r\n    if (isCorrectOption(optionId)) {\r\n      return styles.correctOption;\r\n    }\r\n    if (isIncorrectSelection(optionId)) {\r\n      return styles.incorrectOption;\r\n    }\r\n    if (selectedOptionId === optionId) {\r\n      return {\r\n        ...styles.selectedOption,\r\n        borderColor: primaryColor,\r\n      };\r\n    }\r\n    return styles.option;\r\n  };\r\n\r\n  // Définit le style du texte pour chaque option\r\n  const getOptionTextStyle = (optionId) => {\r\n    if (isCorrectOption(optionId)) {\r\n      return styles.correctOptionText;\r\n    }\r\n    if (isIncorrectSelection(optionId)) {\r\n      return styles.incorrectOptionText;\r\n    }\r\n    if (selectedOptionId === optionId) {\r\n      return {\r\n        ...styles.selectedOptionText,\r\n        color: primaryColor,\r\n      };\r\n    }\r\n    return styles.optionText;\r\n  };\r\n\r\n  // Factory de handler pour éviter la création de fonctions inline\r\n  const handleOptionPress = useCallback((optionId) => () => {\r\n    if (!disabled) onSelectOption(optionId);\r\n  }, [onSelectOption, disabled]);\r\n\r\n  // Rendu pour la mise en page verticale\r\n  const renderVerticalOptions = () => (\r\n    <View style={styles.verticalContainer}>\r\n      {options.map((option) => (\r\n        <TouchableOpacity\r\n          key={option.id}\r\n          style={[styles.optionItem, getOptionStyle(option.id)]}\r\n          onPress={handleOptionPress(option.id)}\r\n          disabled={disabled}\r\n          accessibilityRole=\"button\"\r\n          accessibilityLabel={String(option.text)}\r\n          accessibilityState={{\r\n            disabled,\r\n            selected: selectedOptionId === option.id,\r\n          }}\r\n        >\r\n          <Text style={[styles.optionItemText, getOptionTextStyle(option.id)]}>\r\n            {option.text}\r\n          </Text>\r\n\r\n          {isCorrectOption(option.id) && (\r\n            <Ionicons name=\"checkmark-circle\" size={24} color=\"#10B981\" />\r\n          )}\r\n\r\n          {isIncorrectSelection(option.id) && (\r\n            <Ionicons name=\"close-circle\" size={24} color=\"#EF4444\" />\r\n          )}\r\n\r\n          {selectedOptionId === option.id && !showCorrectAnswer && (\r\n            <View\r\n              style={[\r\n                styles.selectedIndicator,\r\n                { backgroundColor: primaryColor },\r\n              ]}\r\n            />\r\n          )}\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n  // Rendu pour la mise en page en grille\r\n  const renderGridOptions = () => (\r\n    <View style={styles.gridContainer}>\r\n      {options.map((option) => (\r\n        <TouchableOpacity\r\n          key={option.id}\r\n          style={[\r\n            styles.gridOptionItem,\r\n            getOptionStyle(option.id),\r\n            { width: `${100 / Math.min(options.length, 2) - 2}%` },\r\n          ]}\r\n          onPress={handleOptionPress(option.id)}\r\n          disabled={disabled}\r\n          accessibilityRole=\"button\"\r\n          accessibilityLabel={String(option.text)}\r\n          accessibilityState={{\r\n            disabled,\r\n            selected: selectedOptionId === option.id,\r\n          }}\r\n        >\r\n          <Text style={[styles.gridOptionText, getOptionTextStyle(option.id)]}>\r\n            {option.text}\r\n          </Text>\r\n\r\n          {isCorrectOption(option.id) && (\r\n            <Ionicons name=\"checkmark-circle\" size={24} color=\"#10B981\" />\r\n          )}\r\n\r\n          {isIncorrectSelection(option.id) && (\r\n            <Ionicons name=\"close-circle\" size={24} color=\"#EF4444\" />\r\n          )}\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n  return layout === \"vertical\" ? renderVerticalOptions() : renderGridOptions();\r\n};\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return (\r\n    prevProps.selectedOptionId === nextProps.selectedOptionId &&\r\n    prevProps.correctOptionId === nextProps.correctOptionId &&\r\n    prevProps.showCorrectAnswer === nextProps.showCorrectAnswer &&\r\n    prevProps.disabled === nextProps.disabled &&\r\n    prevProps.primaryColor === nextProps.primaryColor &&\r\n    prevProps.layout === nextProps.layout &&\r\n    prevProps.options === nextProps.options\r\n  );\r\n}\r\n\r\nexport default memo(OptionsList, areEqual);\r\n\r\n"],"mappings":"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","ignoreList":[]}