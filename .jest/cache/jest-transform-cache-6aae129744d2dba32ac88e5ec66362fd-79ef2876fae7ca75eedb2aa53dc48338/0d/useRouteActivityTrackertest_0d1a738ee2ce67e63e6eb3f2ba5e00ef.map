{"version":3,"names":["_getJestObj","mock","useSegments","jest","fn","usePathname","__esModule","default","_interopRequireDefault","require","_reactNative","_useRouteActivityTracker","_require20","describe","mockStartSession","mockEndSession","mockUpdateStreak","beforeEach","clearAllMocks","useActivityMetrics","mockReturnValue","startSession","endSession","updateStreak","it","_require","renderHook","useRouteActivityTracker","expect","toHaveBeenCalledWith","_require2","_require3","_require4","_require5","not","toHaveBeenCalled","_require6","_renderHook","rerender","_require7","_renderHook2","_require8","_renderHook3","toHaveBeenCalledTimes","_require9","mockImplementation","Error","toThrow","_require0","_renderHook4","_require1","_renderHook5","_require10","_renderHook6","unmount","_require11","_renderHook7","_require12","_renderHook8","exerciseTypes","forEach","exerciseType","_require13","assessmentTypes","assessmentType","_require14","_require15","_require16","_require17","_require18","_renderHook9","_require19","_renderHook0","undefined"],"sources":["useRouteActivityTracker.test.js"],"sourcesContent":["// __tests__/hooks/useRouteActivityTracker.test.js\nimport { renderHook } from '@testing-library/react-native';\nimport useRouteActivityTracker from '../../src/hooks/useRouteActivityTracker';\n\n// Mock expo-router\njest.mock('expo-router', () => ({\n  useSegments: jest.fn(),\n  usePathname: jest.fn(),\n}));\n\n// Mock useActivityMetrics\njest.mock('../../src/hooks/useActivityMetrics', () => ({\n  __esModule: true,\n  default: jest.fn(),\n}));\n\ndescribe('useRouteActivityTracker', () => {\n  const mockStartSession = jest.fn();\n  const mockEndSession = jest.fn();\n  const mockUpdateStreak = jest.fn();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    \n    // Mock useActivityMetrics\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: mockEndSession,\n      updateStreak: mockUpdateStreak,\n    });\n  });\n\n  describe('Détection des exercices', () => {\n    it('devrait démarrer une session pour un exercice', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n    });\n\n    it('devrait démarrer une session pour un assessment', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'Assessment']);\n      usePathname.mockReturnValue('/level/Assessment');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('Assessment');\n    });\n\n    it('devrait détecter les exercices avec \"exercise\" en minuscules', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'grammar-exercise']);\n      usePathname.mockReturnValue('/level/grammar-exercise');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('grammar-exercise');\n    });\n\n    it('devrait détecter les assessments avec \"assessment\" en minuscules', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'reading-assessment']);\n      usePathname.mockReturnValue('/level/reading-assessment');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('reading-assessment');\n    });\n\n    it('ne devrait pas démarrer de session pour une page normale', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['home', 'dashboard']);\n      usePathname.mockReturnValue('/home/dashboard');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Changement de route', () => {\n    it('devrait terminer la session précédente et en démarrer une nouvelle', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      \n      // Premier render - exercice de vocabulaire\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n\n      // Changement vers exercice de grammaire\n      useSegments.mockReturnValue(['level', 'GrammarExercise']);\n      usePathname.mockReturnValue('/level/GrammarExercise');\n\n      rerender();\n\n      expect(mockEndSession).toHaveBeenCalled();\n      expect(mockUpdateStreak).toHaveBeenCalled();\n      expect(mockStartSession).toHaveBeenCalledWith('GrammarExercise');\n    });\n\n    it('devrait terminer la session en quittant un exercice', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      \n      // Premier render - exercice\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n\n      // Changement vers page normale\n      useSegments.mockReturnValue(['home', 'dashboard']);\n      usePathname.mockReturnValue('/home/dashboard');\n\n      rerender();\n\n      expect(mockEndSession).toHaveBeenCalled();\n      expect(mockUpdateStreak).toHaveBeenCalled();\n    });\n\n    it('ne devrait pas redéclencher si le pathname ne change pas', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      \n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      // Même pathname\n      rerender();\n\n      expect(mockStartSession).toHaveBeenCalledTimes(1); // Pas d'appel supplémentaire\n    });\n  });\n\n  describe('Gestion des erreurs', () => {\n    it('devrait gérer les erreurs lors du démarrage de session', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      mockStartSession.mockImplementation(() => {\n        throw new Error('Start session error');\n      });\n\n      // Ne devrait pas planter\n      expect(() => {\n        renderHook(() => useRouteActivityTracker());\n      }).not.toThrow();\n    });\n\n    it('devrait gérer les erreurs lors de la fin de session', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      \n      // Premier render - exercice\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      mockEndSession.mockImplementation(() => {\n        throw new Error('End session error');\n      });\n\n      // Changement vers page normale\n      useSegments.mockReturnValue(['home', 'dashboard']);\n      usePathname.mockReturnValue('/home/dashboard');\n\n      // Ne devrait pas planter\n      expect(() => {\n        rerender();\n      }).not.toThrow();\n    });\n\n    it('devrait gérer les erreurs lors de la mise à jour du streak', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      \n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      mockUpdateStreak.mockImplementation(() => {\n        throw new Error('Update streak error');\n      });\n\n      // Changement vers page normale\n      useSegments.mockReturnValue(['home', 'dashboard']);\n      usePathname.mockReturnValue('/home/dashboard');\n\n      // Ne devrait pas planter\n      expect(() => {\n        rerender();\n      }).not.toThrow();\n    });\n  });\n\n  describe('Cleanup', () => {\n    it('devrait terminer la session lors du démontage', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { unmount } = renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalled();\n\n      unmount();\n\n      expect(mockEndSession).toHaveBeenCalled();\n    });\n\n    it('devrait gérer les erreurs lors du cleanup', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      mockEndSession.mockImplementation(() => {\n        throw new Error('Cleanup error');\n      });\n\n      const { unmount } = renderHook(() => useRouteActivityTracker());\n\n      // Ne devrait pas planter lors du cleanup\n      expect(() => {\n        unmount();\n      }).not.toThrow();\n    });\n\n    it('ne devrait pas terminer de session si aucune n\\'est active', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['home', 'dashboard']);\n      usePathname.mockReturnValue('/home/dashboard');\n\n      const { unmount } = renderHook(() => useRouteActivityTracker());\n\n      unmount();\n\n      expect(mockEndSession).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Détection de types d\\'exercices variés', () => {\n    const exerciseTypes = [\n      'VocabularyExercise',\n      'GrammarExercise',\n      'ReadingExercise',\n      'SpellingExercise',\n      'ConversationExercise',\n      'PhrasesExercise',\n      'WordGamesExercise',\n      'ErrorCorrectionExercise'\n    ];\n\n    exerciseTypes.forEach(exerciseType => {\n      it(`devrait détecter ${exerciseType}`, () => {\n        const { useSegments, usePathname } = require('expo-router');\n        useSegments.mockReturnValue(['level', exerciseType]);\n        usePathname.mockReturnValue(`/level/${exerciseType}`);\n\n        renderHook(() => useRouteActivityTracker());\n\n        expect(mockStartSession).toHaveBeenCalledWith(exerciseType);\n      });\n    });\n\n    const assessmentTypes = [\n      'VocabularyAssessment',\n      'GrammarAssessment',\n      'ReadingAssessment',\n      'OverallAssessment'\n    ];\n\n    assessmentTypes.forEach(assessmentType => {\n      it(`devrait détecter ${assessmentType}`, () => {\n        const { useSegments, usePathname } = require('expo-router');\n        useSegments.mockReturnValue(['level', assessmentType]);\n        usePathname.mockReturnValue(`/level/${assessmentType}`);\n\n        renderHook(() => useRouteActivityTracker());\n\n        expect(mockStartSession).toHaveBeenCalledWith(assessmentType);\n      });\n    });\n  });\n\n  describe('Segments complexes', () => {\n    it('devrait détecter les exercices dans des segments profonds', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['app', 'levels', '1', 'vocabulary', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/app/levels/1/vocabulary/VocabularyExercise');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n    });\n\n    it('devrait utiliser le dernier segment comme type d\\'exercice', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['app', 'exercise', 'GrammarExercise']);\n      usePathname.mockReturnValue('/app/exercise/GrammarExercise');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('GrammarExercise');\n    });\n\n    it('devrait gérer les segments vides', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue([]);\n      usePathname.mockReturnValue('/');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Prévention des boucles', () => {\n    it('ne devrait pas redémarrer la même session', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      // Même exercice, même pathname\n      rerender();\n\n      expect(mockStartSession).toHaveBeenCalledTimes(1); // Pas d'appel supplémentaire\n      expect(mockEndSession).not.toHaveBeenCalled();\n    });\n\n    it('devrait redémarrer si le type d\\'exercice change', () => {\n      const { useSegments, usePathname } = require('expo-router');\n      \n      // Premier exercice\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n\n      // Même niveau mais exercice différent\n      useSegments.mockReturnValue(['level', 'GrammarExercise']);\n      usePathname.mockReturnValue('/level/GrammarExercise');\n\n      rerender();\n\n      expect(mockEndSession).toHaveBeenCalled();\n      expect(mockStartSession).toHaveBeenCalledWith('GrammarExercise');\n    });\n  });\n\n  describe('Intégration avec useActivityMetrics', () => {\n    it('devrait utiliser les bonnes fonctions de useActivityMetrics', () => {\n      const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n      \n      renderHook(() => useRouteActivityTracker());\n\n      expect(useActivityMetrics).toHaveBeenCalled();\n    });\n\n    it('devrait gérer l\\'absence de useActivityMetrics', () => {\n      const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n      useActivityMetrics.mockReturnValue({\n        startSession: undefined,\n        endSession: undefined,\n        updateStreak: undefined,\n      });\n\n      // Ne devrait pas planter\n      expect(() => {\n        renderHook(() => useRouteActivityTracker());\n      }).not.toThrow();\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}