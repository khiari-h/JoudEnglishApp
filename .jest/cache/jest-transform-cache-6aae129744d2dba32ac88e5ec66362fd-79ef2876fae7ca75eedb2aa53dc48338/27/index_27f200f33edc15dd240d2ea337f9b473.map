{"version":3,"names":["_errorCorrectionA1Full","_interopRequireDefault","require","_errorCorrectionA1Identify","_errorCorrectionA1MultipleChoice","allExercises","concat","_toConsumableArray2","default","errorCorrectionA1Full","errorCorrectionA1Identify","errorCorrectionA1MultipleChoice","sort","a","b","categoryId","typeOrder","type","errorCorrectionA1","level","totalExercises","length","statistics","full","identify","multiple_choice","byCategory","name","count","categories","id","description","exerciseCount","difficulty","color","exercises","getExercisesByCategory","filter","exercise","getExercisesByType","getExercisesByCategoryAndType","validateStructure","requiredFields","validTypes","every","hasRequiredFields","field","Object","prototype","hasOwnProperty","call","undefined","hasValidType","includes","hasTypeSpecificFields","choices","correctChoiceIndex","errorPositions","Array","isArray","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/data/exercises/errorCorrection/A1/index.js\r\n\r\nimport errorCorrectionA1Full from './categories/errorCorrectionA1Full';\r\nimport errorCorrectionA1Identify from './categories/errorCorrectionA1Identify';\r\nimport errorCorrectionA1MultipleChoice from './categories/errorCorrectionA1MultipleChoice';\r\n\r\n// Combine all exercises from the 3 files\r\nconst allExercises = [\r\n  ...errorCorrectionA1Full,\r\n  ...errorCorrectionA1Identify,\r\n  ...errorCorrectionA1MultipleChoice\r\n];\r\n\r\n// Sort exercises by categoryId to maintain logical order\r\nallExercises.sort((a, b) => {\r\n  if (a.categoryId !== b.categoryId) {\r\n    return a.categoryId - b.categoryId;\r\n  }\r\n  // Within same category, order by type: full, identify, multiple_choice\r\n  const typeOrder = { 'full': 1, 'identify': 2, 'multiple_choice': 3 };\r\n  return typeOrder[a.type] - typeOrder[b.type];\r\n});\r\n\r\nconst errorCorrectionA1 = {\r\n  level: \"A1\",\r\n  totalExercises: allExercises.length,\r\n\r\n  // Statistics by type\r\n  statistics: {\r\n    full: errorCorrectionA1Full.length,\r\n    identify: errorCorrectionA1Identify.length,\r\n    multiple_choice: errorCorrectionA1MultipleChoice.length,\r\n    byCategory: {\r\n      1: { name: \"Articles\", count: 5 },        // 2 full + 2 identify + 1 multiple_choice\r\n      2: { name: \"Verb to Be\", count: 5 },      // 2 full + 2 identify + 1 multiple_choice\r\n      3: { name: \"Simple Present\", count: 5 },  // 1 full + 2 identify + 2 multiple_choice\r\n      4: { name: \"Pronouns\", count: 4 },        // 1 full + 2 identify + 1 multiple_choice\r\n      5: { name: \"Sentence Structure\", count: 5 } // 1 full + 2 identify + 2 multiple_choice\r\n    }\r\n  },\r\n\r\n  // Categories metadata (maintained for compatibility)\r\n  categories: [\r\n    {\r\n      id: 1,\r\n      name: \"Articles\",\r\n      description: \"Practicing correct usage of 'a', 'an', and 'the'\",\r\n      exerciseCount: 5,\r\n      difficulty: \"Basic\",\r\n      color: \"#3b82f6\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Verb to Be\",\r\n      description: \"Correcting errors with the verb 'to be'\",\r\n      exerciseCount: 5,\r\n      difficulty: \"Basic\", \r\n      color: \"#10b981\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Simple Present\",\r\n      description: \"Fixing mistakes in simple present tense\",\r\n      exerciseCount: 5,\r\n      difficulty: \"Basic\",\r\n      color: \"#f59e0b\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Pronouns\",\r\n      description: \"Identifying and correcting pronoun errors\",\r\n      exerciseCount: 4,\r\n      difficulty: \"Basic\",\r\n      color: \"#8b5cf6\"\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Sentence Structure\",\r\n      description: \"Improving basic sentence construction\",\r\n      exerciseCount: 5,\r\n      difficulty: \"Basic\",\r\n      color: \"#ef4444\"\r\n    },\r\n  ],\r\n\r\n  // All exercises combined and sorted\r\n  exercises: allExercises,\r\n\r\n  // Helper methods for filtering exercises\r\n  getExercisesByCategory: (categoryId) => {\r\n    return allExercises.filter(exercise => exercise.categoryId === categoryId);\r\n  },\r\n\r\n  getExercisesByType: (type) => {\r\n    return allExercises.filter(exercise => exercise.type === type);\r\n  },\r\n\r\n  getExercisesByCategoryAndType: (categoryId, type) => {\r\n    return allExercises.filter(exercise => \r\n      exercise.categoryId === categoryId && exercise.type === type\r\n    );\r\n  },\r\n\r\n  // Validation\r\n  validateStructure: () => {\r\n    const requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];\r\n    const validTypes = ['full', 'identify', 'multiple_choice'];\r\n\r\n    return allExercises.every(exercise => {\r\n      // Check required fields\r\n      const hasRequiredFields = requiredFields.every(field => \r\n        Object.prototype.hasOwnProperty.call(exercise, field) && exercise[field] !== undefined\r\n      );\r\n\r\n      // Check valid type\r\n      const hasValidType = validTypes.includes(exercise.type);\r\n\r\n      // Check type-specific fields\r\n      let hasTypeSpecificFields = true;\r\n      if (exercise.type === 'multiple_choice') {\r\n        hasTypeSpecificFields = exercise.choices && exercise.correctChoiceIndex !== undefined;\r\n      } else {\r\n        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);\r\n      }\r\n\r\n      return hasRequiredFields && hasValidType && hasTypeSpecificFields;\r\n    });\r\n  }\r\n};\r\n\r\n// Validate structure on export\r\nif (!errorCorrectionA1.validateStructure()) {\r\n  // empty: structure invalid, handle if needed\r\n}\r\n\r\nexport default errorCorrectionA1;\r\n"],"mappings":"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","ignoreList":[]}