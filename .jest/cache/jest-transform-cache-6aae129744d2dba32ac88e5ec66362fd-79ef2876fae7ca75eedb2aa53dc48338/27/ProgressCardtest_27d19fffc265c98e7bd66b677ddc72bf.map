{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ProgressCard","_jsxRuntime","describe","it","render","jsx","default","expect","screen","getByText","toBeOnTheScreen","title","subtitle","progress","completed","total","handleToggleExpand","jest","fn","expandable","expanded","onToggleExpand","categoryData","id","queryByText","toBeNull","fireEvent","press","toHaveBeenCalledTimes","handleCategoryPress","onCategoryPress","toHaveBeenCalledWith","not","toHaveBeenCalled"],"sources":["ProgressCard.test.js"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react-native';\nimport ProgressCard from '../../../src/components/ui/ProgressCard';\n\ndescribe('ProgressCard', () => {\n  it('renders correctly with default props', () => {\n    render(<ProgressCard />);\n    \n    expect(screen.getByText('Progression')).toBeOnTheScreen();\n    \n    // Les textes sont séparés selon le render tree montré\n    expect(screen.getByText('0')).toBeOnTheScreen();\n    expect(screen.getByText('/')).toBeOnTheScreen();\n    expect(screen.getByText('0%')).toBeOnTheScreen();\n  });\n\n  it('renders with custom title and subtitle', () => {\n    render(<ProgressCard title=\"My Progress\" subtitle=\"Daily Goals\" />);\n    expect(screen.getByText('My Progress')).toBeOnTheScreen();\n    expect(screen.getByText('Daily Goals')).toBeOnTheScreen();\n  });\n\n  it('displays correct progress values', () => {\n    render(<ProgressCard progress={50} completed={5} total={10} />);\n    \n    // Chercher les textes individuellement\n    expect(screen.getByText('5')).toBeOnTheScreen();\n    expect(screen.getByText('/')).toBeOnTheScreen();\n    expect(screen.getByText('10')).toBeOnTheScreen();\n    expect(screen.getByText('50%')).toBeOnTheScreen();\n  });\n\n  it('expands and collapses when expandable and onToggleExpand are provided', () => {\n    const handleToggleExpand = jest.fn();\n    render(\n      <ProgressCard\n        expandable={true}\n        expanded={false}\n        onToggleExpand={handleToggleExpand}\n        categoryData={[{ id: '1', title: 'Category 1', completed: 1, total: 2, progress: 50 }]}\n      />\n    );\n\n    // Initially collapsed, category data should not be visible\n    expect(screen.queryByText('Par catégorie')).toBeNull();\n\n    // Tap to expand\n    fireEvent.press(screen.getByText('Progression'));\n    expect(handleToggleExpand).toHaveBeenCalledTimes(1);\n\n    // Re-render with expanded state\n    render(\n      <ProgressCard\n        expandable={true}\n        expanded={true}\n        onToggleExpand={handleToggleExpand}\n        categoryData={[{ id: '1', title: 'Category 1', completed: 1, total: 2, progress: 50 }]}\n      />\n    );\n    expect(screen.getByText('Par catégorie')).toBeOnTheScreen();\n    expect(screen.getByText('Category 1')).toBeOnTheScreen();\n  });\n\n  it('calls onCategoryPress when a category is pressed', () => {\n    const handleCategoryPress = jest.fn();\n    const categoryData = [{ id: '1', title: 'Category 1', completed: 1, total: 2, progress: 50 }];\n    render(\n      <ProgressCard\n        expandable={true}\n        expanded={true}\n        categoryData={categoryData}\n        onCategoryPress={handleCategoryPress}\n      />\n    );\n\n    fireEvent.press(screen.getByText('Category 1'));\n    expect(handleCategoryPress).toHaveBeenCalledWith(0);\n  });\n\n  it('does not expand when expandable is false', () => {\n    const handleToggleExpand = jest.fn();\n    render(\n      <ProgressCard\n        expandable={false}\n        onToggleExpand={handleToggleExpand}\n        categoryData={[{ id: '1', title: 'Category 1', completed: 1, total: 2, progress: 50 }]}\n      />\n    );\n\n    fireEvent.press(screen.getByText('Progression'));\n    expect(handleToggleExpand).not.toHaveBeenCalled();\n  });\n});"],"mappings":"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","ignoreList":[]}