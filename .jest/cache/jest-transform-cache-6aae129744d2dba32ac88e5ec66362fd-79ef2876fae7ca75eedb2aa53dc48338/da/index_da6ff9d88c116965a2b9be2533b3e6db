52e98ffe19dbcf1cf8c72c86f9a157d9
function cov_1unz7h4wh3() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationMessage\\index.js";
  var hash = "d6225c4176cbfab68d73467c9f2c60339f2c2167";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationMessage\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "2": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 39,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 12,
            column: 29
          }
        },
        loc: {
          start: {
            line: 12,
            column: 57
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 39
          }
        }, {
          start: {
            line: 19,
            column: 42
          },
          end: {
            line: 19,
            column: 59
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 22,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 50
          }
        }, {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 43
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 10
          },
          end: {
            line: 28,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 25
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 66
          }
        }],
        line: 28
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d6225c4176cbfab68d73467c9f2c60339f2c2167"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1unz7h4wh3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1unz7h4wh3();
import { View, Text } from 'react-native';
import styles from './style';
import { jsx as _jsx } from "react/jsx-runtime";
cov_1unz7h4wh3().s[0]++;
var ConversationMessage = function ConversationMessage(_ref) {
  var message = _ref.message,
    levelColor = _ref.levelColor;
  cov_1unz7h4wh3().f[0]++;
  var isBotMessage = (cov_1unz7h4wh3().s[1]++, message.sender === 'bot');
  cov_1unz7h4wh3().s[2]++;
  return _jsx(View, {
    style: [styles.messageBubble, isBotMessage ? (cov_1unz7h4wh3().b[0][0]++, styles.botBubble) : (cov_1unz7h4wh3().b[0][1]++, styles.userBubble), isBotMessage ? (cov_1unz7h4wh3().b[1][0]++, {
      backgroundColor: `${levelColor}15`
    }) : (cov_1unz7h4wh3().b[1][1]++, {
      backgroundColor: levelColor
    })],
    children: _jsx(Text, {
      style: [styles.messageText, isBotMessage ? (cov_1unz7h4wh3().b[2][0]++, {
        color: '#1f2937'
      }) : (cov_1unz7h4wh3().b[2][1]++, {
        color: 'white'
      })],
      children: message.text
    })
  });
};
export default ConversationMessage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWaWV3IiwiVGV4dCIsInN0eWxlcyIsImpzeCIsIl9qc3giLCJjb3ZfMXVuejdoNHdoMyIsInMiLCJDb252ZXJzYXRpb25NZXNzYWdlIiwiX3JlZiIsIm1lc3NhZ2UiLCJsZXZlbENvbG9yIiwiZiIsImlzQm90TWVzc2FnZSIsInNlbmRlciIsInN0eWxlIiwibWVzc2FnZUJ1YmJsZSIsImIiLCJib3RCdWJibGUiLCJ1c2VyQnViYmxlIiwiYmFja2dyb3VuZENvbG9yIiwiY2hpbGRyZW4iLCJtZXNzYWdlVGV4dCIsImNvbG9yIiwidGV4dCJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvbnZlcnNhdGlvbk1lc3NhZ2UvaW5kZXguanMgLSBWRVJTSU9OIENMRUFOIFNBTlMgVElNRVNUQU1QXHJcbmltcG9ydCB7IFZpZXcsIFRleHQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vc3R5bGUnO1xyXG5cclxuLyoqXHJcbiAqIENvbXBvc2FudCBwb3VyIGFmZmljaGVyIHVuIG1lc3NhZ2UgZGFucyBsZSBDb252ZXJzYXRpb25cclxuICogVkVSU0lPTiBDTEVBTiA6IFRpbWVzdGFtcCBpbnV0aWxlIHN1cHByaW3DqSDinIVcclxuICogXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBtZXNzYWdlIC0gT2JqZXQgY29udGVuYW50IGxlcyBpbmZvcm1hdGlvbnMgZHUgbWVzc2FnZVxyXG4gKiBAcGFyYW0ge3N0cmluZ30gbGV2ZWxDb2xvciAtIENvdWxldXIgYXNzb2Npw6llIGF1IG5pdmVhdSBjb3VyYW50XHJcbiAqL1xyXG5jb25zdCBDb252ZXJzYXRpb25NZXNzYWdlID0gKHsgbWVzc2FnZSwgbGV2ZWxDb2xvciB9KSA9PiB7XHJcbiAgY29uc3QgaXNCb3RNZXNzYWdlID0gbWVzc2FnZS5zZW5kZXIgPT09ICdib3QnO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXdcclxuICAgICAgc3R5bGU9e1tcclxuICAgICAgICBzdHlsZXMubWVzc2FnZUJ1YmJsZSxcclxuICAgICAgICBpc0JvdE1lc3NhZ2UgPyBzdHlsZXMuYm90QnViYmxlIDogc3R5bGVzLnVzZXJCdWJibGUsXHJcbiAgICAgICAgaXNCb3RNZXNzYWdlXHJcbiAgICAgICAgICA/IHsgYmFja2dyb3VuZENvbG9yOiBgJHtsZXZlbENvbG9yfTE1YCB9XHJcbiAgICAgICAgICA6IHsgYmFja2dyb3VuZENvbG9yOiBsZXZlbENvbG9yIH0sXHJcbiAgICAgIF19XHJcbiAgICA+XHJcbiAgICAgIDxUZXh0XHJcbiAgICAgICAgc3R5bGU9e1tcclxuICAgICAgICAgIHN0eWxlcy5tZXNzYWdlVGV4dCxcclxuICAgICAgICAgIGlzQm90TWVzc2FnZSA/IHsgY29sb3I6ICcjMWYyOTM3JyB9IDogeyBjb2xvcjogJ3doaXRlJyB9LFxyXG4gICAgICAgIF19XHJcbiAgICAgID5cclxuICAgICAgICB7bWVzc2FnZS50ZXh0fVxyXG4gICAgICA8L1RleHQ+XHJcblxyXG4gICAgICB7Lyog4p2MIFNVUFBSSU3DiSA6IFRpbWVzdGFtcCBpbnV0aWxlICovfVxyXG4gICAgICB7LyogPFRleHQgc3R5bGU9e3N0eWxlcy5tZXNzYWdlVGltZX0+XHJcbiAgICAgICAge21lc3NhZ2UudGltZXN0YW1wfVxyXG4gICAgICA8L1RleHQ+ICovfVxyXG4gICAgPC9WaWV3PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb252ZXJzYXRpb25NZXNzYWdlOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsU0FBU0EsSUFBSSxFQUFFQyxJQUFJLFFBQVEsY0FBYztBQUN6QyxPQUFPQyxNQUFNLE1BQU0sU0FBUztBQUFDLFNBQUFDLEdBQUEsSUFBQUMsSUFBQTtBQUFBQyxjQUFBLEdBQUFDLENBQUE7QUFTN0IsSUFBTUMsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFtQkEsQ0FBQUMsSUFBQSxFQUFnQztFQUFBLElBQTFCQyxPQUFPLEdBQUFELElBQUEsQ0FBUEMsT0FBTztJQUFFQyxVQUFVLEdBQUFGLElBQUEsQ0FBVkUsVUFBVTtFQUFBTCxjQUFBLEdBQUFNLENBQUE7RUFDaEQsSUFBTUMsWUFBWSxJQUFBUCxjQUFBLEdBQUFDLENBQUEsT0FBR0csT0FBTyxDQUFDSSxNQUFNLEtBQUssS0FBSztFQUFDUixjQUFBLEdBQUFDLENBQUE7RUFFOUMsT0FDRUYsSUFBQSxDQUFDSixJQUFJO0lBQ0hjLEtBQUssRUFBRSxDQUNMWixNQUFNLENBQUNhLGFBQWEsRUFDcEJILFlBQVksSUFBQVAsY0FBQSxHQUFBVyxDQUFBLFVBQUdkLE1BQU0sQ0FBQ2UsU0FBUyxLQUFBWixjQUFBLEdBQUFXLENBQUEsVUFBR2QsTUFBTSxDQUFDZ0IsVUFBVSxHQUNuRE4sWUFBWSxJQUFBUCxjQUFBLEdBQUFXLENBQUEsVUFDUjtNQUFFRyxlQUFlLEVBQUUsR0FBR1QsVUFBVTtJQUFLLENBQUMsS0FBQUwsY0FBQSxHQUFBVyxDQUFBLFVBQ3RDO01BQUVHLGVBQWUsRUFBRVQ7SUFBVyxDQUFDLEVBQ25DO0lBQUFVLFFBQUEsRUFFRmhCLElBQUEsQ0FBQ0gsSUFBSTtNQUNIYSxLQUFLLEVBQUUsQ0FDTFosTUFBTSxDQUFDbUIsV0FBVyxFQUNsQlQsWUFBWSxJQUFBUCxjQUFBLEdBQUFXLENBQUEsVUFBRztRQUFFTSxLQUFLLEVBQUU7TUFBVSxDQUFDLEtBQUFqQixjQUFBLEdBQUFXLENBQUEsVUFBRztRQUFFTSxLQUFLLEVBQUU7TUFBUSxDQUFDLEVBQ3hEO01BQUFGLFFBQUEsRUFFRFgsT0FBTyxDQUFDYztJQUFJLENBQ1Q7RUFBQyxDQU1ILENBQUM7QUFFWCxDQUFDO0FBRUQsZUFBZWhCLG1CQUFtQiIsImlnbm9yZUxpc3QiOltdfQ==