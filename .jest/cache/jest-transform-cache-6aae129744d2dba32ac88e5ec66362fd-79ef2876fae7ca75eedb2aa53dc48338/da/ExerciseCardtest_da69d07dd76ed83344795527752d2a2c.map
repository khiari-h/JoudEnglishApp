{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_ExerciseCard","_jsxRuntime","describe","defaultProps","title","description","icon","onPress","jest","fn","afterEach","clearAllMocks","it","_render","render","jsx","default","Object","assign","getByText","expect","toBeTruthy","_render2","fireEvent","press","toHaveBeenCalledTimes","_render3","_render4","progress","getByTestId","progressFill","flatStyle","StyleSheet","flatten","props","style","width","toBe","_render5","queryByTestId","toBeNull","_render6","isNew","queryByText","rerender","_render7"],"sources":["ExerciseCard.test.js"],"sourcesContent":["// __tests__/components/exercise-common/ExerciseCard.test.js\nimport React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport { StyleSheet } from 'react-native';\nimport ExerciseCard from '../../../src/components/exercise-common/ExerciseCard';\n\ndescribe('ExerciseCard', () => {\n  const defaultProps = {\n    title: 'Vocabulary Practice',\n    description: 'Expand your word knowledge',\n    icon: 'ðŸ“š',\n    onPress: jest.fn(),\n  };\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('renders the basic card information correctly', () => {\n    const { getByText } = render(<ExerciseCard {...defaultProps} />);\n    expect(getByText('Vocabulary Practice')).toBeTruthy();\n    expect(getByText('Expand your word knowledge')).toBeTruthy();\n    expect(getByText('ðŸ“š')).toBeTruthy();\n  });\n\n  it('calls onPress when the card is pressed', () => {\n    const { getByText } = render(<ExerciseCard {...defaultProps} />);\n    fireEvent.press(getByText('Vocabulary Practice'));\n    expect(defaultProps.onPress).toHaveBeenCalledTimes(1);\n  });\n\n  it('calls onPress when the \"Commencer\" button is pressed', () => {\n    const { getByText } = render(<ExerciseCard {...defaultProps} />);\n    fireEvent.press(getByText('Commencer'));\n    expect(defaultProps.onPress).toHaveBeenCalledTimes(1);\n  });\n\n  it('displays the progress bar correctly', () => {\n    const { getByText, getByTestId } = render(\n      <ExerciseCard {...defaultProps} progress={50} />\n    );\n    expect(getByText('50%')).toBeTruthy();\n    const progressFill = getByTestId('progress-fill');\n    const flatStyle = StyleSheet.flatten(progressFill.props.style);\n    expect(flatStyle.width).toBe('50%');\n  });\n\n  it('does not display the progress bar when progress is 0', () => {\n    const { queryByTestId } = render(\n      <ExerciseCard {...defaultProps} progress={0} />\n    );\n    expect(queryByTestId('progress-fill')).toBeNull();\n  });\n\n  it('displays the \"Nouveau\" badge only when isNew is true and progress is 0', () => {\n    const { getByText, queryByText, rerender } = render(\n      <ExerciseCard {...defaultProps} progress={0} isNew={true} />\n    );\n    expect(getByText('Nouveau')).toBeTruthy();\n\n    // progress > 0, isNew = true\n    rerender(<ExerciseCard {...defaultProps} progress={50} isNew={true} />);\n    expect(queryByText('Nouveau')).toBeNull();\n\n    // progress = 0, isNew = false\n    rerender(<ExerciseCard {...defaultProps} progress={0} isNew={false} />);\n    expect(queryByText('Nouveau')).toBeNull();\n\n    // progress > 0, isNew = false\n    rerender(<ExerciseCard {...defaultProps} progress={50} isNew={false} />);\n    expect(queryByText('Nouveau')).toBeNull();\n  });\n\n  it('returns null for bottom content when progress is 0 and isNew is false', () => {\n    const { queryByTestId, queryByText } = render(\n      <ExerciseCard {...defaultProps} progress={0} isNew={false} />\n    );\n    expect(queryByTestId('progress-fill')).toBeNull();\n    expect(queryByText('Nouveau')).toBeNull();\n  });\n});\n"],"mappings":"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","ignoreList":[]}