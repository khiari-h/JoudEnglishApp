{"version":3,"names":["Object","defineProperty","exports","value","useAnimatedGestureHandler","_useHandler2","require","_useEvent","EVENT_TYPE","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END","_worklet_251895770429_init_data","code","location","sourceMap","version","handlers","dependencies","_useHandler","useHandler","context","doDependenciesDiffer","useWeb","handler","_e","global","Error","useAnimatedGestureHandlerTs1","e","event","nativeEvent","state","onStart","onActive","oldState","onEnd","onFail","onCancel","onFinish","__closure","__workletHash","__initData","__stackDetails","useEvent"],"sources":["useAnimatedGestureHandler.ts"],"sourcesContent":["'use strict';\nimport type {\n  DependencyList,\n  NativeEventWrapper,\n  ReanimatedEvent,\n} from './commonTypes';\nimport { useHandler } from './useHandler';\nimport { useEvent } from './useEvent';\n\nconst EVENT_TYPE = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n} as const;\n\ntype StateType = (typeof EVENT_TYPE)[keyof typeof EVENT_TYPE];\n\n// This type comes from React Native Gesture Handler\n// import type { PanGestureHandlerGestureEvent as DefaultEvent } from 'react-native-gesture-handler';\ntype DefaultEvent = {\n  nativeEvent: {\n    readonly handlerTag: number;\n    readonly numberOfPointers: number;\n    readonly state: (typeof EVENT_TYPE)[keyof typeof EVENT_TYPE];\n    readonly x: number;\n    readonly y: number;\n    readonly absoluteX: number;\n    readonly absoluteY: number;\n    readonly translationX: number;\n    readonly translationY: number;\n    readonly velocityX: number;\n    readonly velocityY: number;\n  };\n};\n\ninterface PropsUsedInUseAnimatedGestureHandler {\n  handlerTag?: number;\n  numberOfPointers?: number;\n  state?: StateType;\n  oldState?: StateType;\n}\n\nexport type GestureHandlerEvent<Event extends object> =\n  | ReanimatedEvent<Event>\n  | Event;\n\ntype GestureHandler<\n  Event extends NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler>,\n  Context extends Record<string, unknown>,\n> = (\n  eventPayload: ReanimatedEvent<Event>,\n  context: Context,\n  isCanceledOrFailed?: boolean\n) => void;\n\nexport interface GestureHandlers<\n  Event extends NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler>,\n  Context extends Record<string, unknown>,\n> {\n  [key: string]: GestureHandler<Event, Context> | undefined;\n  onStart?: GestureHandler<Event, Context>;\n  onActive?: GestureHandler<Event, Context>;\n  onEnd?: GestureHandler<Event, Context>;\n  onFail?: GestureHandler<Event, Context>;\n  onCancel?: GestureHandler<Event, Context>;\n  onFinish?: GestureHandler<Event, Context>;\n}\n\n/**\n * @deprecated UseAnimatedGestureHandler is an old API which is no longer\n *   supported.\n *\n *   Please check\n *   https://docs.swmansion.com/react-native-gesture-handler/docs/guides/upgrading-to-2/\n *   for information about how to migrate to `react-native-gesture-handler` v2\n */\nexport function useAnimatedGestureHandler<\n  Event extends\n    NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler> = DefaultEvent,\n  Context extends Record<string, unknown> = Record<string, unknown>,\n>(handlers: GestureHandlers<Event, Context>, dependencies?: DependencyList) {\n  type WebOrNativeEvent = Event | ReanimatedEvent<Event>;\n\n  const { context, doDependenciesDiffer, useWeb } = useHandler<Event, Context>(\n    handlers,\n    dependencies\n  );\n  const handler = (e: WebOrNativeEvent) => {\n    'worklet';\n    const event = useWeb\n      ? // On Web we get events straight from React Native and they don't have\n        // the `eventName` field there. To simplify the types here we just\n        // cast it as the field was available.\n        ((e as Event).nativeEvent as ReanimatedEvent<Event>)\n      : (e as ReanimatedEvent<Event>);\n\n    if (event.state === EVENT_TYPE.BEGAN && handlers.onStart) {\n      handlers.onStart(event, context);\n    }\n    if (event.state === EVENT_TYPE.ACTIVE && handlers.onActive) {\n      handlers.onActive(event, context);\n    }\n    if (\n      event.oldState === EVENT_TYPE.ACTIVE &&\n      event.state === EVENT_TYPE.END &&\n      handlers.onEnd\n    ) {\n      handlers.onEnd(event, context);\n    }\n    if (\n      event.oldState === EVENT_TYPE.BEGAN &&\n      event.state === EVENT_TYPE.FAILED &&\n      handlers.onFail\n    ) {\n      handlers.onFail(event, context);\n    }\n    if (\n      event.oldState === EVENT_TYPE.ACTIVE &&\n      event.state === EVENT_TYPE.CANCELLED &&\n      handlers.onCancel\n    ) {\n      handlers.onCancel(event, context);\n    }\n    if (\n      (event.oldState === EVENT_TYPE.BEGAN ||\n        event.oldState === EVENT_TYPE.ACTIVE) &&\n      event.state !== EVENT_TYPE.BEGAN &&\n      event.state !== EVENT_TYPE.ACTIVE &&\n      handlers.onFinish\n    ) {\n      handlers.onFinish(\n        event,\n        context,\n        event.state === EVENT_TYPE.CANCELLED ||\n          event.state === EVENT_TYPE.FAILED\n      );\n    }\n  };\n\n  if (useWeb) {\n    return handler;\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useEvent<Event>(\n    handler,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    doDependenciesDiffer\n    // This is not correct but we want to make GH think it receives a function.\n  ) as unknown as (e: Event) => void;\n}\n"],"mappings":"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","ignoreList":[]}