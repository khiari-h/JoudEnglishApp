{"version":3,"names":["_ProgressCard","_interopRequireDefault","require","_phrasesStats","_jsxRuntime","PhrasesProgress","_ref","_ref$levelColor","levelColor","_ref$phrasesData","phrasesData","_ref$completedPhrases","completedPhrases","_ref$expanded","expanded","_ref$onToggleExpand","onToggleExpand","_ref$onCategoryPress","onCategoryPress","categories","phrases","totalPhrasesCount","calculateTotalPhrases","completedPhrasesCount","calculateCompletedPhrasesCount","totalProgress","calculateTotalPhrasesProgress","categoryProgressData","calculateCategoryPhrasesProgress","formattedCategoryData","map","category","title","completed","total","totalPhrases","progress","jsx","default","unit","expandable","length","categoryData","_default","exports"],"sources":["index.js"],"sourcesContent":["// PhrasesProgress/index.js - VERSION CORRIGÃ‰E AVEC PHRASESTATS\r\n\r\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\r\nimport {\r\n  calculateTotalPhrases,\r\n  calculateCompletedPhrasesCount,\r\n  calculateTotalPhrasesProgress,\r\n  calculateCategoryPhrasesProgress,\r\n} from \"../../../../utils/phrases/phrasesStats\";\r\n\r\n/**\r\n * ðŸ“Š PhrasesProgress - Version CorrigÃ©e avec phrasesStats\r\n * âœ… Utilise les vraies fonctions de calcul\r\n * âœ… GÃ¨re correctement la structure des donnÃ©es phrases\r\n * \r\n * @param {number} progress - Pourcentage de progression (0-100) [IGNORÃ‰ - recalculÃ©]\r\n * @param {number} currentPhrase - Phrase actuelle (1-based) [IGNORÃ‰ - recalculÃ©]\r\n * @param {number} totalPhrases - Nombre total de phrases [IGNORÃ‰ - recalculÃ©]\r\n * @param {number} completedCount - Nombre de phrases complÃ©tÃ©es [IGNORÃ‰ - recalculÃ©]\r\n * @param {string} levelColor - Couleur du niveau\r\n * @param {object} phrasesData - DonnÃ©es des phrases\r\n * @param {object} completedPhrases - Phrases complÃ©tÃ©es par catÃ©gorie\r\n * @param {boolean} expanded - Ã‰tat d'expansion\r\n * @param {function} onToggleExpand - Fonction pour toggle expansion\r\n * @param {function} onCategoryPress - Fonction appelÃ©e lors du clic sur catÃ©gorie\r\n */\r\nconst PhrasesProgress = ({\r\n  levelColor = \"#5E60CE\",\r\n  phrasesData = null,\r\n  completedPhrases = {},\r\n  expanded = false,\r\n  onToggleExpand = () => { /* intentionally empty: default no-op to avoid errors if not provided */ },\r\n  onCategoryPress = () => { /* intentionally empty: default no-op to avoid errors if not provided */ },\r\n}) => {\r\n  \r\n  // âœ… CORRECTION : Utilise les vraies fonctions de calcul\r\n  const categories = phrasesData?.categories || [];\r\n  const phrases = phrasesData?.phrases || [];\r\n  \r\n  const totalPhrasesCount = calculateTotalPhrases(categories, phrases);\r\n  const completedPhrasesCount = calculateCompletedPhrasesCount(completedPhrases);\r\n  const totalProgress = calculateTotalPhrasesProgress(categories, phrases, completedPhrases);\r\n  const categoryProgressData = calculateCategoryPhrasesProgress(categories, phrases, completedPhrases);\r\n\r\n  // Transformation pour le format ProgressCard\r\n  const formattedCategoryData = categoryProgressData.map((category) => ({\r\n    title: category.title,\r\n    completed: category.completedPhrases,\r\n    total: category.totalPhrases,\r\n    progress: category.progress,\r\n  }));\r\n\r\n  return (\r\n    <ProgressCard\r\n      title=\"Progression\"\r\n      progress={totalProgress} // âœ… Utilise le calcul correct\r\n      completed={completedPhrasesCount} // âœ… Utilise le calcul correct\r\n      total={totalPhrasesCount} // âœ… Utilise le calcul correct\r\n      unit=\"phrases\"\r\n      levelColor={levelColor}\r\n      expandable={categoryProgressData.length > 0}\r\n      expanded={expanded}\r\n      onToggleExpand={onToggleExpand}\r\n      categoryData={formattedCategoryData}\r\n      onCategoryPress={onCategoryPress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhrasesProgress;\r\n"],"mappings":";;;;;AAEA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AAKgD,IAAAE,WAAA,GAAAF,OAAA;AAkBhD,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAOf;EAAA,IAAAC,eAAA,GAAAD,IAAA,CANJE,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,SAAS,GAAAA,eAAA;IAAAE,gBAAA,GAAAH,IAAA,CACtBI,WAAW;IAAXA,WAAW,GAAAD,gBAAA,cAAG,IAAI,GAAAA,gBAAA;IAAAE,qBAAA,GAAAL,IAAA,CAClBM,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG,CAAC,CAAC,GAAAA,qBAAA;IAAAE,aAAA,GAAAP,IAAA,CACrBQ,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,mBAAA,GAAAT,IAAA,CAChBU,cAAc;IAAdA,cAAc,GAAAD,mBAAA,cAAG,YAAM,CAA2E,CAAC,GAAAA,mBAAA;IAAAE,oBAAA,GAAAX,IAAA,CACnGY,eAAe;IAAfA,eAAe,GAAAD,oBAAA,cAAG,YAAM,CAA2E,CAAC,GAAAA,oBAAA;EAIpG,IAAME,UAAU,GAAG,CAAAT,WAAW,oBAAXA,WAAW,CAAES,UAAU,KAAI,EAAE;EAChD,IAAMC,OAAO,GAAG,CAAAV,WAAW,oBAAXA,WAAW,CAAEU,OAAO,KAAI,EAAE;EAE1C,IAAMC,iBAAiB,GAAG,IAAAC,mCAAqB,EAACH,UAAU,EAAEC,OAAO,CAAC;EACpE,IAAMG,qBAAqB,GAAG,IAAAC,4CAA8B,EAACZ,gBAAgB,CAAC;EAC9E,IAAMa,aAAa,GAAG,IAAAC,2CAA6B,EAACP,UAAU,EAAEC,OAAO,EAAER,gBAAgB,CAAC;EAC1F,IAAMe,oBAAoB,GAAG,IAAAC,8CAAgC,EAACT,UAAU,EAAEC,OAAO,EAAER,gBAAgB,CAAC;EAGpG,IAAMiB,qBAAqB,GAAGF,oBAAoB,CAACG,GAAG,CAAC,UAACC,QAAQ;IAAA,OAAM;MACpEC,KAAK,EAAED,QAAQ,CAACC,KAAK;MACrBC,SAAS,EAAEF,QAAQ,CAACnB,gBAAgB;MACpCsB,KAAK,EAAEH,QAAQ,CAACI,YAAY;MAC5BC,QAAQ,EAAEL,QAAQ,CAACK;IACrB,CAAC;EAAA,CAAC,CAAC;EAEH,OACE,IAAAhC,WAAA,CAAAiC,GAAA,EAACrC,aAAA,CAAAsC,OAAY;IACXN,KAAK,EAAC,aAAa;IACnBI,QAAQ,EAAEX,aAAc;IACxBQ,SAAS,EAAEV,qBAAsB;IACjCW,KAAK,EAAEb,iBAAkB;IACzBkB,IAAI,EAAC,SAAS;IACd/B,UAAU,EAAEA,UAAW;IACvBgC,UAAU,EAAEb,oBAAoB,CAACc,MAAM,GAAG,CAAE;IAC5C3B,QAAQ,EAAEA,QAAS;IACnBE,cAAc,EAAEA,cAAe;IAC/B0B,YAAY,EAAEb,qBAAsB;IACpCX,eAAe,EAAEA;EAAgB,CAClC,CAAC;AAEN,CAAC;AAAC,IAAAyB,QAAA,GAAAC,OAAA,CAAAN,OAAA,GAEajC,eAAe","ignoreList":[]}