c338f9e6d68ead8d347fe15d06e142bf
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.measure = void 0;
var _PlatformChecker = require("../PlatformChecker");
var _logger = require("../logger");
var measure;
var _worklet_10147140729772_init_data = {
  code: "function measureFabric_measureTs1(animatedRef){const{logger}=this.__closure;if(!_WORKLET){return null;}const viewTag=animatedRef();if(viewTag===-1){logger.warn(\"The view with tag \"+viewTag+\" is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\");return null;}const measured=global._measureFabric(viewTag);if(measured===null){logger.warn(\"The view has some undefined, not-yet-computed or meaningless value of `LayoutMetrics` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\");return null;}else if(measured.x===-1234567){logger.warn(\"The view returned an invalid measurement response. Please make sure the view is currently rendered.\");return null;}else if(isNaN(measured.x)){logger.warn(\"The view gets view-flattened on Android. To disable view-flattening, set `collapsable={false}` on this component.\");return null;}else{return measured;}}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\platformFunctions\\measure.ts",
  sourceMap: "{\"version\":3,\"names\":[\"measureFabric_measureTs1\",\"animatedRef\",\"logger\",\"__closure\",\"_WORKLET\",\"viewTag\",\"warn\",\"measured\",\"global\",\"_measureFabric\",\"x\",\"isNaN\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/platformFunctions/measure.ts\"],\"mappings\":\"AAiCA,SAAAA,wBAAuBA,CAAAC,WAAgD,QAAAC,MAAA,OAAAC,SAAA,CAErE,GAAI,CAACC,QAAQ,CAAE,CACb,MAAO,KAAI,CACb,CAEA,KAAM,CAAAC,OAAO,CAAGJ,WAAW,CAAC,CAAC,CAC7B,GAAII,OAAO,GAAK,CAAC,CAAC,CAAE,CAClBH,MAAM,CAACI,IAAI,sBACYD,OAAO,6JAC9B,CAAC,CACD,MAAO,KAAI,CACb,CAEA,KAAM,CAAAE,QAAQ,CAAGC,MAAM,CAACC,cAAc,CAAEJ,OAA4B,CAAC,CACrE,GAAIE,QAAQ,GAAK,IAAI,CAAE,CACrBL,MAAM,CAACI,IAAI,iNAEX,CAAC,CACD,MAAO,KAAI,CACb,CAAC,IAAM,IAAIC,QAAQ,CAACG,CAAC,GAAK,CAAC,OAAO,CAAE,CAClCR,MAAM,CAACI,IAAI,sGAEX,CAAC,CACD,MAAO,KAAI,CACb,CAAC,IAAM,IAAIK,KAAK,CAACJ,QAAQ,CAACG,CAAC,CAAC,CAAE,CAC5BR,MAAM,CAACI,IAAI,oHAEX,CAAC,CACD,MAAO,KAAI,CACb,CAAC,IAAM,CACL,MAAO,CAAAC,QAAQ,CACjB,CACF\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var measureFabric = function () {
  var _e = [new global.Error(), -2, -27];
  var measureFabric = function measureFabric(animatedRef) {
    if (!_WORKLET) {
      return null;
    }
    var viewTag = animatedRef();
    if (viewTag === -1) {
      _logger.logger.warn(`The view with tag ${viewTag} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);
      return null;
    }
    var measured = global._measureFabric(viewTag);
    if (measured === null) {
      _logger.logger.warn(`The view has some undefined, not-yet-computed or meaningless value of \`LayoutMetrics\` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);
      return null;
    } else if (measured.x === -1234567) {
      _logger.logger.warn(`The view returned an invalid measurement response. Please make sure the view is currently rendered.`);
      return null;
    } else if (isNaN(measured.x)) {
      _logger.logger.warn(`The view gets view-flattened on Android. To disable view-flattening, set \`collapsable={false}\` on this component.`);
      return null;
    } else {
      return measured;
    }
  };
  measureFabric.__closure = {
    logger: _logger.logger
  };
  measureFabric.__workletHash = 10147140729772;
  measureFabric.__initData = _worklet_10147140729772_init_data;
  measureFabric.__stackDetails = _e;
  return measureFabric;
}();
var _worklet_16650190976416_init_data = {
  code: "function measurePaper_measureTs2(animatedRef){const{logger}=this.__closure;if(!_WORKLET){return null;}const viewTag=animatedRef();if(viewTag===-1){logger.warn(\"The view with tag \"+viewTag+\" is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\");return null;}const measured=global._measurePaper(viewTag);if(measured===null){logger.warn(\"The view with tag \"+viewTag+\" has some undefined, not-yet-computed or meaningless value of `LayoutMetrics` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\");return null;}else if(measured.x===-1234567){logger.warn(\"The view with tag \"+viewTag+\" returned an invalid measurement response. Please make sure the view is currently rendered.\");return null;}else if(isNaN(measured.x)){logger.warn(\"The view with tag \"+viewTag+\" gets view-flattened on Android. To disable view-flattening, set `collapsable={false}` on this component.\");return null;}else{return measured;}}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\platformFunctions\\measure.ts",
  sourceMap: "{\"version\":3,\"names\":[\"measurePaper_measureTs2\",\"animatedRef\",\"logger\",\"__closure\",\"_WORKLET\",\"viewTag\",\"warn\",\"measured\",\"global\",\"_measurePaper\",\"x\",\"isNaN\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/platformFunctions/measure.ts\"],\"mappings\":\"AAoEA,SAAAA,uBAAsBA,CAAAC,WAAgD,QAAAC,MAAA,OAAAC,SAAA,CAEpE,GAAI,CAACC,QAAQ,CAAE,CACb,MAAO,KAAI,CACb,CAEA,KAAM,CAAAC,OAAO,CAAGJ,WAAW,CAAC,CAAC,CAC7B,GAAII,OAAO,GAAK,CAAC,CAAC,CAAE,CAClBH,MAAM,CAACI,IAAI,sBACYD,OAAO,6JAC9B,CAAC,CACD,MAAO,KAAI,CACb,CAEA,KAAM,CAAAE,QAAQ,CAAGC,MAAM,CAACC,aAAa,CAAEJ,OAAiB,CAAC,CACzD,GAAIE,QAAQ,GAAK,IAAI,CAAE,CACrBL,MAAM,CAACI,IAAI,sBAEPD,OAAO,yMAEX,CAAC,CACD,MAAO,KAAI,CACb,CAAC,IAAM,IAAIE,QAAQ,CAACG,CAAC,GAAK,CAAC,OAAO,CAAE,CAClCR,MAAM,CAACI,IAAI,sBAEPD,OAAO,8FAEX,CAAC,CACD,MAAO,KAAI,CACb,CAAC,IAAM,IAAIM,KAAK,CAACJ,QAAQ,CAACG,CAAC,CAAC,CAAE,CAC5BR,MAAM,CAACI,IAAI,sBAEPD,OAAO,4GAEX,CAAC,CACD,MAAO,KAAI,CACb,CAAC,IAAM,CACL,MAAO,CAAAE,QAAQ,CACjB,CACF\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var measurePaper = function () {
  var _e = [new global.Error(), -2, -27];
  var measurePaper = function measurePaper(animatedRef) {
    if (!_WORKLET) {
      return null;
    }
    var viewTag = animatedRef();
    if (viewTag === -1) {
      _logger.logger.warn(`The view with tag ${viewTag} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);
      return null;
    }
    var measured = global._measurePaper(viewTag);
    if (measured === null) {
      _logger.logger.warn(`The view with tag ${viewTag} has some undefined, not-yet-computed or meaningless value of \`LayoutMetrics\` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);
      return null;
    } else if (measured.x === -1234567) {
      _logger.logger.warn(`The view with tag ${viewTag} returned an invalid measurement response. Please make sure the view is currently rendered.`);
      return null;
    } else if (isNaN(measured.x)) {
      _logger.logger.warn(`The view with tag ${viewTag} gets view-flattened on Android. To disable view-flattening, set \`collapsable={false}\` on this component.`);
      return null;
    } else {
      return measured;
    }
  };
  measurePaper.__closure = {
    logger: _logger.logger
  };
  measurePaper.__workletHash = 16650190976416;
  measurePaper.__initData = _worklet_16650190976416_init_data;
  measurePaper.__stackDetails = _e;
  return measurePaper;
}();
function measureJest() {
  _logger.logger.warn('measure() cannot be used with Jest.');
  return null;
}
function measureChromeDebugger() {
  _logger.logger.warn('measure() cannot be used with Chrome Debugger.');
  return null;
}
function measureDefault() {
  _logger.logger.warn('measure() is not supported on this configuration.');
  return null;
}
if (!(0, _PlatformChecker.shouldBeUseWeb)()) {
  if ((0, _PlatformChecker.isFabric)()) {
    exports.measure = measure = measureFabric;
  } else {
    exports.measure = measure = measurePaper;
  }
} else if ((0, _PlatformChecker.isJest)()) {
  exports.measure = measure = measureJest;
} else if ((0, _PlatformChecker.isChromeDebugger)()) {
  exports.measure = measure = measureChromeDebugger;
} else {
  exports.measure = measure = measureDefault;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,