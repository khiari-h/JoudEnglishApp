{"version":3,"names":["_reactNative","require","_style","_interopRequireDefault","_jsxRuntime","ConversationHelpPanel","_ref","helpText","isVisible","onToggle","levelColor","jsx","TouchableOpacity","style","styles","helpButton","onPress","children","Text","helpButtonText","color","jsxs","View","container","borderColor","headerContainer","title","closeButton","closeButtonText","_default","exports","default"],"sources":["index.js"],"sourcesContent":["import { View, Text, TouchableOpacity } from 'react-native';\r\nimport styles from './style';\r\n\r\n/**\r\n * Composant qui affiche un panneau d'aide pour l'utilisateur\r\n * \r\n * @param {string} helpText - Texte d'aide à afficher\r\n * @param {boolean} isVisible - Indique si le panneau est visible\r\n * @param {Function} onToggle - Fonction pour afficher/masquer le panneau\r\n * @param {string} levelColor - Couleur associée au niveau courant\r\n */\r\nconst ConversationHelpPanel = ({ helpText, isVisible, onToggle, levelColor }) => {\r\n  // Si le panneau n'est pas visible, afficher seulement le bouton\r\n  if (!isVisible) {\r\n    return (\r\n      <TouchableOpacity \r\n        style={styles.helpButton} \r\n        onPress={onToggle}\r\n      >\r\n        <Text style={[styles.helpButtonText, { color: levelColor }]}>\r\n          Show Help\r\n        </Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={[styles.container, { borderColor: `${levelColor}30` }]}>\r\n      <View style={styles.headerContainer}>\r\n        <Text style={styles.title}>Hint:</Text>\r\n        <TouchableOpacity\r\n          style={styles.closeButton}\r\n          onPress={onToggle}\r\n        >\r\n          <Text style={[styles.closeButtonText, { color: levelColor }]}>\r\n            Hide\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Text style={styles.helpText}>\r\n        {helpText || \"No hint available for this step.\"}\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ConversationHelpPanel;\r\n"],"mappings":";;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA6B,IAAAG,WAAA,GAAAH,OAAA;AAU7B,IAAMI,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAAsD;EAAA,IAAhDC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;IAAEC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;EAExE,IAAI,CAACF,SAAS,EAAE;IACd,OACE,IAAAJ,WAAA,CAAAO,GAAA,EAACX,YAAA,CAAAY,gBAAgB;MACfC,KAAK,EAAEC,cAAM,CAACC,UAAW;MACzBC,OAAO,EAAEP,QAAS;MAAAQ,QAAA,EAElB,IAAAb,WAAA,CAAAO,GAAA,EAACX,YAAA,CAAAkB,IAAI;QAACL,KAAK,EAAE,CAACC,cAAM,CAACK,cAAc,EAAE;UAAEC,KAAK,EAAEV;QAAW,CAAC,CAAE;QAAAO,QAAA,EAAC;MAE7D,CAAM;IAAC,CACS,CAAC;EAEvB;EAEA,OACE,IAAAb,WAAA,CAAAiB,IAAA,EAACrB,YAAA,CAAAsB,IAAI;IAACT,KAAK,EAAE,CAACC,cAAM,CAACS,SAAS,EAAE;MAAEC,WAAW,EAAE,GAAGd,UAAU;IAAK,CAAC,CAAE;IAAAO,QAAA,GAClE,IAAAb,WAAA,CAAAiB,IAAA,EAACrB,YAAA,CAAAsB,IAAI;MAACT,KAAK,EAAEC,cAAM,CAACW,eAAgB;MAAAR,QAAA,GAClC,IAAAb,WAAA,CAAAO,GAAA,EAACX,YAAA,CAAAkB,IAAI;QAACL,KAAK,EAAEC,cAAM,CAACY,KAAM;QAAAT,QAAA,EAAC;MAAK,CAAM,CAAC,EACvC,IAAAb,WAAA,CAAAO,GAAA,EAACX,YAAA,CAAAY,gBAAgB;QACfC,KAAK,EAAEC,cAAM,CAACa,WAAY;QAC1BX,OAAO,EAAEP,QAAS;QAAAQ,QAAA,EAElB,IAAAb,WAAA,CAAAO,GAAA,EAACX,YAAA,CAAAkB,IAAI;UAACL,KAAK,EAAE,CAACC,cAAM,CAACc,eAAe,EAAE;YAAER,KAAK,EAAEV;UAAW,CAAC,CAAE;UAAAO,QAAA,EAAC;QAE9D,CAAM;MAAC,CACS,CAAC;IAAA,CACf,CAAC,EACP,IAAAb,WAAA,CAAAO,GAAA,EAACX,YAAA,CAAAkB,IAAI;MAACL,KAAK,EAAEC,cAAM,CAACP,QAAS;MAAAU,QAAA,EAC1BV,QAAQ,IAAI;IAAkC,CAC3C,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAAC,IAAAsB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEa1B,qBAAqB","ignoreList":[]}