{"version":3,"names":["_react","require","_expoRouter","_useActivityMetrics","_interopRequireDefault","cov_csidh0vi2","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","useRouteActivityTracker","segments","useSegments","pathname","usePathname","_ref","useActivityMetrics","startSession","endSession","updateStreak","currentSessionRef","useRef","isTrackingRef","lastPathnameRef","useEffect","current","isExercise","some","segment","includes","exerciseType","length","error","console","warn","_default","exports","default"],"sources":["useRouteActivityTracker.js"],"sourcesContent":["// src/hooks/useRouteActivityTracker.js - VERSION CORRIGÉE SANS BOUCLE\r\nimport { useEffect, useRef } from 'react';\r\nimport { useSegments, usePathname } from 'expo-router';\r\nimport useActivityMetrics from './useActivityMetrics';\r\n\r\nconst useRouteActivityTracker = () => {\r\n  const segments = useSegments();\r\n  const pathname = usePathname();\r\n  const { startSession, endSession, updateStreak } = useActivityMetrics();\r\n  \r\n  // ✅ CORRECTION : Refs pour éviter les appels en boucle\r\n  const currentSessionRef = useRef(null);\r\n  const isTrackingRef = useRef(false);\r\n  const lastPathnameRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // ✅ CORRECTION : Eviter les re-déclenchements inutiles\r\n    if (lastPathnameRef.current === pathname) {\r\n      return;\r\n    }\r\n    lastPathnameRef.current = pathname;\r\n\r\n    // Vérifier si c'est un exercice\r\n    const isExercise = segments.some(segment => \r\n      segment.includes('Exercise') ||\r\n      segment.includes('exercise') ||\r\n      segment.includes('Assessment') ||\r\n      segment.includes('assessment')\r\n    );\r\n\r\n    if (isExercise) {\r\n      // Récupérer le type d'exercice (dernier segment)\r\n      const exerciseType = segments[segments.length - 1];\r\n      \r\n      // ✅ CORRECTION : Logique directe sans callbacks\r\n      if (!isTrackingRef.current || currentSessionRef.current !== exerciseType) {\r\n        // Arrêter la session précédente si elle existe\r\n        if (isTrackingRef.current) {\r\n          try {\r\n            endSession();\r\n            updateStreak();\r\n          } catch (error) {\r\n            console.warn('Erreur lors de la fin de session:', error);\r\n          }\r\n        }\r\n        \r\n        // Démarrer la nouvelle session\r\n        try {\r\n          isTrackingRef.current = true;\r\n          currentSessionRef.current = exerciseType;\r\n          startSession(exerciseType);\r\n        } catch (error) {\r\n          console.warn('Erreur lors du démarrage de session:', error);\r\n          isTrackingRef.current = false;\r\n          currentSessionRef.current = null;\r\n        }\r\n      }\r\n    } else {\r\n      // Si on n'est plus sur un exercice, arrêter la session\r\n      if (isTrackingRef.current) {\r\n        try {\r\n          isTrackingRef.current = false;\r\n          currentSessionRef.current = null;\r\n          endSession();\r\n          updateStreak();\r\n        } catch (error) {\r\n          console.warn('Erreur lors de la fin de session:', error);\r\n        }\r\n      }\r\n    }\r\n\r\n    // ✅ CORRECTION : Cleanup unique et stable\r\n    return () => {\r\n      if (isTrackingRef.current) {\r\n        try {\r\n          isTrackingRef.current = false;\r\n          currentSessionRef.current = null;\r\n          endSession();\r\n        } catch (error) {\r\n          console.warn('Erreur lors du cleanup:', error);\r\n        }\r\n      }\r\n      // Suppression du return null (aucun return attendu)\r\n    };\r\n  }, [segments, pathname]); // ✅ CORRIGÉ : Seulement les vraies dépendances\r\n\r\n  // ✅ CORRECTION : Cleanup final seulement au démontage\r\n  useEffect(() => {\r\n    return () => {\r\n      if (isTrackingRef.current) {\r\n        try {\r\n          endSession();\r\n        } catch (error) {\r\n          console.warn('Erreur lors du cleanup final:', error);\r\n        }\r\n      }\r\n    };\r\n  }, []); // ✅ CORRIGÉ : Aucune dépendance = seulement au démontage\r\n\r\n  // Pas de rendu\r\n};\r\n\r\nexport default useRouteActivityTracker;"],"mappings":";;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,mBAAA,GAAAC,sBAAA,CAAAH,OAAA;AAAsD,SAAAI,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;U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","ignoreList":[]}