{"version":3,"names":["_reactNative","require","_style","_interopRequireDefault","_react","_jsxRuntime","ConversationSuggestions","_ref","suggestions","onPressSuggestion","levelColor","length","handleSuggestionPress","useCallback","suggestion","jsx","ScrollView","horizontal","showsHorizontalScrollIndicator","style","styles","container","contentContainerStyle","contentContainer","children","map","TouchableOpacity","suggestionBubble","borderColor","onPress","Text","suggestionText","color","_default","exports","default"],"sources":["index.js"],"sourcesContent":["import { ScrollView, TouchableOpacity, Text } from 'react-native';\r\nimport styles from './style';\r\nimport { useCallback } from 'react';\r\n\r\n/**\r\n * Composant qui affiche les suggestions de messages que l'utilisateur peut envoyer\r\n * \r\n * @param {Array} suggestions - Liste des suggestions à afficher\r\n * @param {Function} onPressSuggestion - Fonction à appeler quand une suggestion est choisie\r\n * @param {string} levelColor - Couleur associée au niveau courant\r\n */\r\nconst ConversationSuggestions = ({ suggestions, onPressSuggestion, levelColor }) => {\r\n  // S'il n'y a pas de suggestions, ne rien afficher\r\n  if (!suggestions || suggestions.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const handleSuggestionPress = useCallback((suggestion) => () => onPressSuggestion(suggestion), [onPressSuggestion]);\r\n\r\n  return (\r\n    <ScrollView\r\n      horizontal\r\n      showsHorizontalScrollIndicator={false}\r\n      style={styles.container}\r\n      contentContainerStyle={styles.contentContainer}\r\n    >\r\n      {suggestions.map((suggestion) => (\r\n        <TouchableOpacity\r\n          key={suggestion}\r\n          style={[styles.suggestionBubble, { borderColor: levelColor }]}\r\n          onPress={handleSuggestionPress(suggestion)}\r\n        >\r\n          <Text style={[styles.suggestionText, { color: levelColor }]}>\r\n            {suggestion}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ConversationSuggestions;\r\n"],"mappings":";;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AAAoC,IAAAI,WAAA,GAAAJ,OAAA;AASpC,IAAMK,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAAC,IAAA,EAAuD;EAAA,IAAjDC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IAAEC,iBAAiB,GAAAF,IAAA,CAAjBE,iBAAiB;IAAEC,UAAU,GAAAH,IAAA,CAAVG,UAAU;EAE3E,IAAI,CAACF,WAAW,IAAIA,WAAW,CAACG,MAAM,KAAK,CAAC,EAAE;IAC5C,OAAO,IAAI;EACb;EAEA,IAAMC,qBAAqB,GAAG,IAAAC,kBAAW,EAAC,UAACC,UAAU;IAAA,OAAK;MAAA,OAAML,iBAAiB,CAACK,UAAU,CAAC;IAAA;EAAA,GAAE,CAACL,iBAAiB,CAAC,CAAC;EAEnH,OACE,IAAAJ,WAAA,CAAAU,GAAA,EAACf,YAAA,CAAAgB,UAAU;IACTC,UAAU;IACVC,8BAA8B,EAAE,KAAM;IACtCC,KAAK,EAAEC,cAAM,CAACC,SAAU;IACxBC,qBAAqB,EAAEF,cAAM,CAACG,gBAAiB;IAAAC,QAAA,EAE9ChB,WAAW,CAACiB,GAAG,CAAC,UAACX,UAAU;MAAA,OAC1B,IAAAT,WAAA,CAAAU,GAAA,EAACf,YAAA,CAAA0B,gBAAgB;QAEfP,KAAK,EAAE,CAACC,cAAM,CAACO,gBAAgB,EAAE;UAAEC,WAAW,EAAElB;QAAW,CAAC,CAAE;QAC9DmB,OAAO,EAAEjB,qBAAqB,CAACE,UAAU,CAAE;QAAAU,QAAA,EAE3C,IAAAnB,WAAA,CAAAU,GAAA,EAACf,YAAA,CAAA8B,IAAI;UAACX,KAAK,EAAE,CAACC,cAAM,CAACW,cAAc,EAAE;YAAEC,KAAK,EAAEtB;UAAW,CAAC,CAAE;UAAAc,QAAA,EACzDV;QAAU,CACP;MAAC,GANFA,UAOW,CAAC;IAAA,CACpB;EAAC,CACQ,CAAC;AAEjB,CAAC;AAAC,IAAAmB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEa7B,uBAAuB","ignoreList":[]}