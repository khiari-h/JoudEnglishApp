{"version":3,"names":["_react","require","_reactNative","_style","_interopRequireDefault","_jsxRuntime","ConversationTypingIndicator","_ref","levelColor","typingAnimation","useRef","Animated","Value","current","useEffect","startAnimation","loop","sequence","timing","toValue","duration","useNativeDriver","start","stopAnimation","jsx","View","style","styles","messageBubble","botBubble","backgroundColor","children","jsxs","typingContainer","typingDot","opacity","marginHorizontal","_default","exports","default"],"sources":["index.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\r\nimport { View, Animated } from 'react-native';\r\nimport styles from './style';\r\n\r\n/**\r\n * Composant qui affiche une animation indiquant que le bot est en train de taper\r\n * \r\n * @param {string} levelColor - Couleur associée au niveau courant\r\n */\r\nconst ConversationTypingIndicator = ({ levelColor }) => {\r\n  // Animation pour faire pulser les points\r\n  const typingAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n  // Lancer l'animation en boucle\r\n  useEffect(() => {\r\n    const startAnimation = () => {\r\n      Animated.loop(\r\n        Animated.sequence([\r\n          Animated.timing(typingAnimation, {\r\n            toValue: 1,\r\n            duration: 500,\r\n            useNativeDriver: true,\r\n          }),\r\n          Animated.timing(typingAnimation, {\r\n            toValue: 0,\r\n            duration: 500,\r\n            useNativeDriver: true,\r\n          }),\r\n        ])\r\n      ).start();\r\n    };\r\n\r\n    startAnimation();\r\n\r\n    return () => {\r\n      // Arrêter l'animation quand le composant est démonté\r\n      typingAnimation.stopAnimation();\r\n    };\r\n  }, [typingAnimation]);\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.messageBubble,\r\n        styles.botBubble,\r\n        { backgroundColor: `${levelColor}15` },\r\n      ]}\r\n    >\r\n      <View style={styles.typingContainer}>\r\n        <Animated.View\r\n          style={[styles.typingDot, { opacity: typingAnimation }]}\r\n        />\r\n        <Animated.View\r\n          style={[\r\n            styles.typingDot,\r\n            { opacity: typingAnimation, marginHorizontal: 4 },\r\n          ]}\r\n        />\r\n        <Animated.View\r\n          style={[styles.typingDot, { opacity: typingAnimation }]}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ConversationTypingIndicator;\r\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAC,sBAAA,CAAAH,OAAA;AAA6B,IAAAI,WAAA,GAAAJ,OAAA;AAO7B,IAAMK,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAE/C,IAAMC,eAAe,GAAG,IAAAC,aAAM,EAAC,IAAIC,qBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAG7D,IAAAC,gBAAS,EAAC,YAAM;IACd,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;MAC3BJ,qBAAQ,CAACK,IAAI,CACXL,qBAAQ,CAACM,QAAQ,CAAC,CAChBN,qBAAQ,CAACO,MAAM,CAACT,eAAe,EAAE;QAC/BU,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,GAAG;QACbC,eAAe,EAAE;MACnB,CAAC,CAAC,EACFV,qBAAQ,CAACO,MAAM,CAACT,eAAe,EAAE;QAC/BU,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,GAAG;QACbC,eAAe,EAAE;MACnB,CAAC,CAAC,CACH,CACH,CAAC,CAACC,KAAK,CAAC,CAAC;IACX,CAAC;IAEDP,cAAc,CAAC,CAAC;IAEhB,OAAO,YAAM;MAEXN,eAAe,CAACc,aAAa,CAAC,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,CAACd,eAAe,CAAC,CAAC;EAErB,OACE,IAAAJ,WAAA,CAAAmB,GAAA,EAACtB,YAAA,CAAAuB,IAAI;IACHC,KAAK,EAAE,CACLC,cAAM,CAACC,aAAa,EACpBD,cAAM,CAACE,SAAS,EAChB;MAAEC,eAAe,EAAE,GAAGtB,UAAU;IAAK,CAAC,CACtC;IAAAuB,QAAA,EAEF,IAAA1B,WAAA,CAAA2B,IAAA,EAAC9B,YAAA,CAAAuB,IAAI;MAACC,KAAK,EAAEC,cAAM,CAACM,eAAgB;MAAAF,QAAA,GAClC,IAAA1B,WAAA,CAAAmB,GAAA,EAACtB,YAAA,CAAAS,QAAQ,CAACc,IAAI;QACZC,KAAK,EAAE,CAACC,cAAM,CAACO,SAAS,EAAE;UAAEC,OAAO,EAAE1B;QAAgB,CAAC;MAAE,CACzD,CAAC,EACF,IAAAJ,WAAA,CAAAmB,GAAA,EAACtB,YAAA,CAAAS,QAAQ,CAACc,IAAI;QACZC,KAAK,EAAE,CACLC,cAAM,CAACO,SAAS,EAChB;UAAEC,OAAO,EAAE1B,eAAe;UAAE2B,gBAAgB,EAAE;QAAE,CAAC;MACjD,CACH,CAAC,EACF,IAAA/B,WAAA,CAAAmB,GAAA,EAACtB,YAAA,CAAAS,QAAQ,CAACc,IAAI;QACZC,KAAK,EAAE,CAACC,cAAM,CAACO,SAAS,EAAE;UAAEC,OAAO,EAAE1B;QAAgB,CAAC;MAAE,CACzD,CAAC;IAAA,CACE;EAAC,CACH,CAAC;AAEX,CAAC;AAAC,IAAA4B,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEajC,2BAA2B","ignoreList":[]}