{"version":3,"names":["_getJestObj","mock","useSegments","jest","fn","usePathname","__esModule","default","startSession","endSession","updateStreak","_interopRequireDefault","require","_reactNative","_useRouteActivityTracker","_require1","describe","beforeEach","clearAllMocks","it","_require","mockReturnValue","hook","renderHook","useRouteActivityTracker","expect","result","current","toBeDefined","mockStartSession","mockEndSession","mockUpdateStreak","useActivityMetrics","_require2","toHaveBeenCalledWith","toHaveBeenCalledTimes","toHaveBeenCalled","mockImplementation","Error","_require3","not","toThrow","_require4","_require5","unmount","_require6","_require7","_require8","_require9","_require0"],"sources":["useRouteActivityTracker.test.js"],"sourcesContent":["// __tests__/hooks/useRouteActivityTracker.test.js\nimport { renderHook } from '@testing-library/react-native';\nimport useRouteActivityTracker from '../../src/hooks/useRouteActivityTracker';\n\njest.mock('expo-router', () => ({\n  useSegments: jest.fn(() => []),\n  usePathname: jest.fn(() => '/'),\n}));\n\njest.mock('../../src/hooks/useActivityMetrics', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    startSession: jest.fn(),\n    endSession: jest.fn(),\n    updateStreak: jest.fn(),\n  })),\n}));\n\ndescribe('useRouteActivityTracker', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Fonctions utilitaires extraites', () => {\n    it('devrait détecter correctement les exercices', () => {\n      const { useSegments } = require('expo-router');\n      \n      // Test avec différents types d'exercices\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      let hook = renderHook(() => useRouteActivityTracker());\n      expect(hook.result.current).toBeDefined();\n\n      useSegments.mockReturnValue(['level', 'GrammarExercise']);\n      hook = renderHook(() => useRouteActivityTracker());\n      expect(hook.result.current).toBeDefined();\n\n      useSegments.mockReturnValue(['level', 'Assessment']);\n      hook = renderHook(() => useRouteActivityTracker());\n      expect(hook.result.current).toBeDefined();\n    });\n\n    it('devrait gérer les transitions entre exercices', () => {\n      const mockStartSession = jest.fn();\n      const mockEndSession = jest.fn();\n      const mockUpdateStreak = jest.fn();\n      \n      const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n      useActivityMetrics.mockReturnValue({\n        startSession: mockStartSession,\n        endSession: mockEndSession,\n        updateStreak: mockUpdateStreak,\n      });\n\n      const { useSegments, usePathname } = require('expo-router');\n      \n      // Premier exercice\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n      let hook = renderHook(() => useRouteActivityTracker());\n      \n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      // Deuxième exercice (devrait arrêter le premier et démarrer le second)\n      useSegments.mockReturnValue(['level', 'GrammarExercise']);\n      usePathname.mockReturnValue('/level/GrammarExercise');\n      hook = renderHook(() => useRouteActivityTracker());\n      \n      expect(mockEndSession).toHaveBeenCalled();\n      expect(mockUpdateStreak).toHaveBeenCalled();\n      expect(mockStartSession).toHaveBeenCalledWith('GrammarExercise');\n    });\n\n    it('devrait gérer les erreurs de session gracieusement', () => {\n      const mockStartSession = jest.fn().mockImplementation(() => {\n        throw new Error('Erreur de session');\n      });\n      const mockEndSession = jest.fn();\n      const mockUpdateStreak = jest.fn();\n      \n      const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n      useActivityMetrics.mockReturnValue({\n        startSession: mockStartSession,\n        endSession: mockEndSession,\n        updateStreak: mockUpdateStreak,\n      });\n\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      // Ne devrait pas planter malgré l'erreur\n      expect(() => {\n        renderHook(() => useRouteActivityTracker());\n      }).not.toThrow();\n    });\n\n    it('devrait éviter les re-déclenchements inutiles', () => {\n      const mockStartSession = jest.fn();\n      const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n      useActivityMetrics.mockReturnValue({\n        startSession: mockStartSession,\n        endSession: jest.fn(),\n        updateStreak: jest.fn(),\n      });\n\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      // Premier rendu\n      let hook = renderHook(() => useRouteActivityTracker());\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      // Même pathname, ne devrait pas redémarrer\n      hook = renderHook(() => useRouteActivityTracker());\n      expect(mockStartSession).toHaveBeenCalledTimes(1); // Toujours 1, pas 2\n    });\n\n    it('devrait nettoyer correctement lors du démontage', () => {\n      const mockEndSession = jest.fn();\n      const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n      useActivityMetrics.mockReturnValue({\n        startSession: jest.fn(),\n        endSession: mockEndSession,\n        updateStreak: jest.fn(),\n      });\n\n      const { useSegments, usePathname } = require('expo-router');\n      useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      usePathname.mockReturnValue('/level/VocabularyExercise');\n\n      // Démarrer une session\n      let hook = renderHook(() => useRouteActivityTracker());\n      \n      // Simuler le démontage\n      hook.unmount();\n      \n      // Vérifier que endSession a été appelé\n      expect(mockEndSession).toHaveBeenCalled();\n    });\n  });\n\n  it('devrait s\\'initialiser sans erreur', () => {\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['home']);\n    usePathname.mockReturnValue('/home');\n\n    expect(() => {\n      renderHook(() => useRouteActivityTracker());\n    }).not.toThrow();\n  });\n\n  it('devrait détecter un exercice de vocabulaire', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['level', 'VocabularyExercise']);\n    usePathname.mockReturnValue('/level/VocabularyExercise');\n\n    renderHook(() => useRouteActivityTracker());\n\n    expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n  });\n\n  it('devrait détecter un assessment', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['level', 'Assessment']);\n    usePathname.mockReturnValue('/level/Assessment');\n\n    renderHook(() => useRouteActivityTracker());\n\n    expect(mockStartSession).toHaveBeenCalledWith('Assessment');\n  });\n\n  it('ne devrait pas démarrer de session pour une page normale', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue(['home', 'dashboard']);\n    usePathname.mockReturnValue('/home/dashboard');\n\n    renderHook(() => useRouteActivityTracker());\n\n    expect(mockStartSession).not.toHaveBeenCalled();\n  });\n\n  it('devrait gérer les segments vides', () => {\n    const mockStartSession = jest.fn();\n    const useActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    useActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: jest.fn(),\n      updateStreak: jest.fn(),\n    });\n\n    const { useSegments, usePathname } = require('expo-router');\n    useSegments.mockReturnValue([]);\n    usePathname.mockReturnValue('/');\n\n    expect(() => {\n      renderHook(() => useRouteActivityTracker());\n    }).not.toThrow();\n\n    expect(mockStartSession).not.toHaveBeenCalled();\n  });\n});"],"mappings":"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","ignoreList":[]}