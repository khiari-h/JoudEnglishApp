{"version":3,"names":["_ProgressCard","_interopRequireDefault","require","_phrasesStats","_jsxRuntime","cov_2r967td18q","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","PhrasesProgress","_ref","_ref$levelColor","levelColor","_ref$phrasesData","phrasesData","_ref$completedPhrases","completedPhrases","_ref$expanded","expanded","_ref$onToggleExpand","onToggleExpand","_ref$onCategoryPress","onCategoryPress","categories","phrases","totalPhrasesCount","calculateTotalPhrases","completedPhrasesCount","calculateCompletedPhrasesCount","totalProgress","calculateTotalPhrasesProgress","categoryProgressData","calculateCategoryPhrasesProgress","formattedCategoryData","map","category","title","completed","total","totalPhrases","progress","jsx","default","unit","expandable","length","categoryData","_default","exports"],"sources":["index.js"],"sourcesContent":["// PhrasesProgress/index.js - VERSION CORRIGÃ‰E AVEC PHRASESTATS\r\n\r\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\r\nimport {\r\n  calculateTotalPhrases,\r\n  calculateCompletedPhrasesCount,\r\n  calculateTotalPhrasesProgress,\r\n  calculateCategoryPhrasesProgress,\r\n} from \"../../../../utils/phrases/phrasesStats\";\r\n\r\n/**\r\n * ðŸ“Š PhrasesProgress - Version CorrigÃ©e avec phrasesStats\r\n * âœ… Utilise les vraies fonctions de calcul\r\n * âœ… GÃ¨re correctement la structure des donnÃ©es phrases\r\n * \r\n * @param {number} progress - Pourcentage de progression (0-100) [IGNORÃ‰ - recalculÃ©]\r\n * @param {number} currentPhrase - Phrase actuelle (1-based) [IGNORÃ‰ - recalculÃ©]\r\n * @param {number} totalPhrases - Nombre total de phrases [IGNORÃ‰ - recalculÃ©]\r\n * @param {number} completedCount - Nombre de phrases complÃ©tÃ©es [IGNORÃ‰ - recalculÃ©]\r\n * @param {string} levelColor - Couleur du niveau\r\n * @param {object} phrasesData - DonnÃ©es des phrases\r\n * @param {object} completedPhrases - Phrases complÃ©tÃ©es par catÃ©gorie\r\n * @param {boolean} expanded - Ã‰tat d'expansion\r\n * @param {function} onToggleExpand - Fonction pour toggle expansion\r\n * @param {function} onCategoryPress - Fonction appelÃ©e lors du clic sur catÃ©gorie\r\n */\r\nconst PhrasesProgress = ({\r\n  levelColor = \"#5E60CE\",\r\n  phrasesData = null,\r\n  completedPhrases = {},\r\n  expanded = false,\r\n  onToggleExpand = () => { /* intentionally empty: default no-op to avoid errors if not provided */ },\r\n  onCategoryPress = () => { /* intentionally empty: default no-op to avoid errors if not provided */ },\r\n}) => {\r\n  \r\n  // âœ… CORRECTION : Utilise les vraies fonctions de calcul\r\n  const categories = phrasesData?.categories || [];\r\n  const phrases = phrasesData?.phrases || [];\r\n  \r\n  const totalPhrasesCount = calculateTotalPhrases(categories, phrases);\r\n  const completedPhrasesCount = calculateCompletedPhrasesCount(completedPhrases);\r\n  const totalProgress = calculateTotalPhrasesProgress(categories, phrases, completedPhrases);\r\n  const categoryProgressData = calculateCategoryPhrasesProgress(categories, phrases, completedPhrases);\r\n\r\n  // Transformation pour le format ProgressCard\r\n  const formattedCategoryData = categoryProgressData.map((category) => ({\r\n    title: category.title,\r\n    completed: category.completedPhrases,\r\n    total: category.totalPhrases,\r\n    progress: category.progress,\r\n  }));\r\n\r\n  return (\r\n    <ProgressCard\r\n      title=\"Progression\"\r\n      progress={totalProgress} // âœ… Utilise le calcul correct\r\n      completed={completedPhrasesCount} // âœ… Utilise le calcul correct\r\n      total={totalPhrasesCount} // âœ… Utilise le calcul correct\r\n      unit=\"phrases\"\r\n      levelColor={levelColor}\r\n      expandable={categoryProgressData.length > 0}\r\n      expanded={expanded}\r\n      onToggleExpand={onToggleExpand}\r\n      categoryData={formattedCategoryData}\r\n      onCategoryPress={onCategoryPress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhrasesProgress;\r\n"],"mappings":"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","ignoreList":[]}