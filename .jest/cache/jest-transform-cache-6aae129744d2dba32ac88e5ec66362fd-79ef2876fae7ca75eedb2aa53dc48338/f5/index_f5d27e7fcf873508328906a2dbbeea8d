6dfd370f0ceaa9d449ef99a676f7711c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactNative = require("react-native");
var _expoLinearGradient = require("expo-linear-gradient");
var _vectorIcons = require("@expo/vector-icons");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _ContentSection = _interopRequireDefault(require("../../../../components/ui/ContentSection"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_e9ialbldr() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarRuleContent\\index.js";
  var hash = "bb331a5476e66c29be4ef3bc86ca288df9d4b6f1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\GrammarRuleContent\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "1": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "2": {
        start: {
          line: 20,
          column: 34
        },
        end: {
          line: 20,
          column: 49
        }
      },
      "3": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 54
        }
      },
      "4": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 33,
          column: 28
        }
      },
      "5": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "6": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 31,
          column: 15
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "8": {
        start: {
          line: 32,
          column: 26
        },
        end: {
          line: 32,
          column: 31
        }
      },
      "9": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 39,
          column: 4
        }
      },
      "10": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 45,
          column: 4
        }
      },
      "11": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "12": {
        start: {
          line: 48,
          column: 13
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "13": {
        start: {
          line: 50,
          column: 2
        },
        end: {
          line: 61,
          column: 4
        }
      },
      "14": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 80,
          column: 1
        }
      },
      "15": {
        start: {
          line: 66,
          column: 2
        },
        end: {
          line: 79,
          column: 21
        }
      },
      "16": {
        start: {
          line: 83,
          column: 29
        },
        end: {
          line: 98,
          column: 1
        }
      },
      "17": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "18": {
        start: {
          line: 100,
          column: 27
        },
        end: {
          line: 112,
          column: 1
        }
      },
      "19": {
        start: {
          line: 101,
          column: 2
        },
        end: {
          line: 111,
          column: 18
        }
      },
      "20": {
        start: {
          line: 115,
          column: 32
        },
        end: {
          line: 152,
          column: 1
        }
      },
      "21": {
        start: {
          line: 116,
          column: 2
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "22": {
        start: {
          line: 130,
          column: 10
        },
        end: {
          line: 130,
          column: 68
        }
      },
      "23": {
        start: {
          line: 143,
          column: 10
        },
        end: {
          line: 143,
          column: 37
        }
      },
      "24": {
        start: {
          line: 155,
          column: 0
        },
        end: {
          line: 162,
          column: 2
        }
      },
      "25": {
        start: {
          line: 164,
          column: 0
        },
        end: {
          line: 170,
          column: 2
        }
      },
      "26": {
        start: {
          line: 172,
          column: 0
        },
        end: {
          line: 178,
          column: 2
        }
      },
      "27": {
        start: {
          line: 180,
          column: 0
        },
        end: {
          line: 191,
          column: 2
        }
      },
      "28": {
        start: {
          line: 194,
          column: 0
        },
        end: {
          line: 205,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 28
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 24,
            column: 38
          }
        },
        loc: {
          start: {
            line: 24,
            column: 43
          },
          end: {
            line: 33,
            column: 3
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 17
          }
        },
        loc: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 32,
            column: 31
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 27
          }
        },
        loc: {
          start: {
            line: 66,
            column: 2
          },
          end: {
            line: 79,
            column: 21
          }
        },
        line: 66
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 83,
            column: 29
          },
          end: {
            line: 83,
            column: 30
          }
        },
        loc: {
          start: {
            line: 84,
            column: 2
          },
          end: {
            line: 97,
            column: 9
          }
        },
        line: 84
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 100,
            column: 27
          },
          end: {
            line: 100,
            column: 28
          }
        },
        loc: {
          start: {
            line: 101,
            column: 2
          },
          end: {
            line: 111,
            column: 18
          }
        },
        line: 101
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 115,
            column: 32
          },
          end: {
            line: 115,
            column: 33
          }
        },
        loc: {
          start: {
            line: 116,
            column: 2
          },
          end: {
            line: 151,
            column: 9
          }
        },
        line: 116
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 129,
            column: 35
          },
          end: {
            line: 129,
            column: 36
          }
        },
        loc: {
          start: {
            line: 130,
            column: 10
          },
          end: {
            line: 130,
            column: 68
          }
        },
        line: 130
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 142,
            column: 32
          },
          end: {
            line: 142,
            column: 33
          }
        },
        loc: {
          start: {
            line: 143,
            column: 10
          },
          end: {
            line: 143,
            column: 37
          }
        },
        line: 143
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 36
          },
          end: {
            line: 18,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 49
          },
          end: {
            line: 18,
            column: 58
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 32
          }
        }, {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 25,
            column: 36
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 2
          },
          end: {
            line: 48,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 2
          },
          end: {
            line: 48,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 92,
            column: 62
          },
          end: {
            line: 92,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 73
          },
          end: {
            line: 92,
            column: 79
          }
        }, {
          start: {
            line: 92,
            column: 82
          },
          end: {
            line: 92,
            column: 88
          }
        }],
        line: 92
      },
      "4": {
        loc: {
          start: {
            line: 126,
            column: 5
          },
          end: {
            line: 137,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 5
          },
          end: {
            line: 126,
            column: 18
          }
        }, {
          start: {
            line: 126,
            column: 22
          },
          end: {
            line: 126,
            column: 46
          }
        }, {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 136,
            column: 8
          }
        }],
        line: 126
      },
      "5": {
        loc: {
          start: {
            line: 139,
            column: 5
          },
          end: {
            line: 150,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 5
          },
          end: {
            line: 139,
            column: 15
          }
        }, {
          start: {
            line: 139,
            column: 19
          },
          end: {
            line: 139,
            column: 40
          }
        }, {
          start: {
            line: 140,
            column: 6
          },
          end: {
            line: 149,
            column: 8
          }
        }],
        line: 139
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bb331a5476e66c29be4ef3bc86ca288df9d4b6f1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_e9ialbldr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_e9ialbldr();
cov_e9ialbldr().s[0]++;
var GrammarRuleContent = function GrammarRuleContent(_ref) {
  var rule = _ref.rule,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_e9ialbldr().b[0][0]++, "#3b82f6") : _ref$levelColor;
  cov_e9ialbldr().f[0]++;
  var styles = (cov_e9ialbldr().s[1]++, (0, _style.default)(levelColor));
  var _ref2 = (cov_e9ialbldr().s[2]++, (0, _react.useState)(false)),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    expanded = _ref3[0],
    setExpanded = _ref3[1];
  var _ref4 = (cov_e9ialbldr().s[3]++, (0, _react.useState)(new _reactNative.Animated.Value(0))),
    _ref5 = (0, _slicedToArray2.default)(_ref4, 1),
    expandAnim = _ref5[0];
  var toggleExpanded = (cov_e9ialbldr().s[4]++, (0, _react.useCallback)(function () {
    cov_e9ialbldr().f[1]++;
    var toValue = (cov_e9ialbldr().s[5]++, expanded ? (cov_e9ialbldr().b[1][0]++, 0) : (cov_e9ialbldr().b[1][1]++, 1));
    cov_e9ialbldr().s[6]++;
    _reactNative.Animated.spring(expandAnim, {
      toValue: toValue,
      useNativeDriver: false,
      tension: 100,
      friction: 8
    }).start();
    cov_e9ialbldr().s[7]++;
    setExpanded(function (prev) {
      cov_e9ialbldr().f[2]++;
      cov_e9ialbldr().s[8]++;
      return !prev;
    });
  }, [expanded, expandAnim]));
  var contentHeight = (cov_e9ialbldr().s[9]++, expandAnim.interpolate({
    inputRange: [0, 1],
    outputRange: [0, 600]
  }));
  var iconRotation = (cov_e9ialbldr().s[10]++, expandAnim.interpolate({
    inputRange: [0, 1],
    outputRange: ['0deg', '180deg']
  }));
  cov_e9ialbldr().s[11]++;
  if (!rule) {
    cov_e9ialbldr().b[2][0]++;
    cov_e9ialbldr().s[12]++;
    return null;
  } else {
    cov_e9ialbldr().b[2][1]++;
  }
  cov_e9ialbldr().s[13]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(CollapsibleHeader, {
      expanded: expanded,
      toggleExpanded: toggleExpanded,
      expandAnim: expandAnim,
      iconRotation: iconRotation,
      rule: rule,
      levelColor: levelColor,
      styles: styles
    }), (0, _jsxRuntime.jsx)(RuleContentSection, {
      expandAnim: expandAnim,
      contentHeight: contentHeight,
      rule: rule,
      levelColor: levelColor,
      styles: styles
    })]
  });
};
cov_e9ialbldr().s[14]++;
var CollapsibleHeader = function CollapsibleHeader(_ref6) {
  var expanded = _ref6.expanded,
    toggleExpanded = _ref6.toggleExpanded,
    iconRotation = _ref6.iconRotation,
    rule = _ref6.rule,
    levelColor = _ref6.levelColor,
    styles = _ref6.styles;
  cov_e9ialbldr().f[3]++;
  cov_e9ialbldr().s[15]++;
  return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
    style: styles.headerContainer,
    onPress: toggleExpanded,
    activeOpacity: 0.8,
    children: (0, _jsxRuntime.jsx)(_expoLinearGradient.LinearGradient, {
      colors: [`${levelColor}08`, `${levelColor}04`, 'transparent'],
      start: {
        x: 0,
        y: 0
      },
      end: {
        x: 1,
        y: 1
      },
      style: styles.headerGradient,
      children: (0, _jsxRuntime.jsx)(HeaderContentSection, {
        expanded: expanded,
        iconRotation: iconRotation,
        rule: rule,
        levelColor: levelColor,
        styles: styles
      })
    })
  });
};
cov_e9ialbldr().s[16]++;
var HeaderContentSection = function HeaderContentSection(_ref7) {
  var expanded = _ref7.expanded,
    iconRotation = _ref7.iconRotation,
    rule = _ref7.rule,
    levelColor = _ref7.levelColor,
    styles = _ref7.styles;
  cov_e9ialbldr().f[4]++;
  cov_e9ialbldr().s[17]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.headerContent,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.headerLeft,
      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
        style: [styles.ruleIcon, {
          backgroundColor: `${levelColor}15`
        }],
        children: (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
          name: "book-outline",
          size: 16,
          color: levelColor
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.ruleTitle,
        numberOfLines: 1,
        children: rule.title
      })]
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.headerRight,
      children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {
        style: [styles.hintText, {
          color: levelColor
        }],
        children: [expanded ? (cov_e9ialbldr().b[3][0]++, 'Hide') : (cov_e9ialbldr().b[3][1]++, 'Show'), " rule"]
      }), (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {
        style: {
          transform: [{
            rotate: iconRotation
          }]
        },
        children: (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {
          name: "chevron-down",
          size: 16,
          color: levelColor
        })
      })]
    })]
  });
};
cov_e9ialbldr().s[18]++;
var RuleContentSection = function RuleContentSection(_ref8) {
  var expandAnim = _ref8.expandAnim,
    contentHeight = _ref8.contentHeight,
    rule = _ref8.rule,
    levelColor = _ref8.levelColor,
    styles = _ref8.styles;
  cov_e9ialbldr().f[5]++;
  cov_e9ialbldr().s[19]++;
  return (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {
    style: [styles.contentWrapper, {
      height: contentHeight,
      opacity: expandAnim
    }],
    children: (0, _jsxRuntime.jsx)(RuleContentInnerSection, {
      rule: rule,
      levelColor: levelColor,
      styles: styles
    })
  });
};
cov_e9ialbldr().s[20]++;
var RuleContentInnerSection = function RuleContentInnerSection(_ref9) {
  var rule = _ref9.rule,
    levelColor = _ref9.levelColor,
    styles = _ref9.styles;
  cov_e9ialbldr().f[6]++;
  cov_e9ialbldr().s[21]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.contentContainer,
    children: [(0, _jsxRuntime.jsx)(_ContentSection.default, {
      title: "Explanation",
      content: rule.explanation,
      levelColor: levelColor,
      backgroundColor: "white",
      showIcon: true
    }), (cov_e9ialbldr().b[4][0]++, rule.examples) && (cov_e9ialbldr().b[4][1]++, rule.examples.length > 0) && (cov_e9ialbldr().b[4][2]++, (0, _jsxRuntime.jsx)(_ContentSection.default, {
      title: "Examples",
      content: rule.examples.map(function (example, index) {
        cov_e9ialbldr().f[7]++;
        cov_e9ialbldr().s[22]++;
        return `${index + 1}. ${example.english}\n   → ${example.french}`;
      }).join('\n\n'),
      levelColor: levelColor,
      backgroundColor: "#F8FAFC",
      showIcon: true,
      isItalic: false
    })), (cov_e9ialbldr().b[5][0]++, rule.rules) && (cov_e9ialbldr().b[5][1]++, rule.rules.length > 0) && (cov_e9ialbldr().b[5][2]++, (0, _jsxRuntime.jsx)(_ContentSection.default, {
      title: "Rules",
      content: rule.rules.map(function (ruleItem, index) {
        cov_e9ialbldr().f[8]++;
        cov_e9ialbldr().s[23]++;
        return `${index + 1}. ${ruleItem}`;
      }).join('\n\n'),
      levelColor: levelColor,
      backgroundColor: "#F1F5F9",
      showIcon: true,
      isItalic: false
    }))]
  });
};
cov_e9ialbldr().s[24]++;
CollapsibleHeader.propTypes = {
  expanded: _propTypes.default.bool.isRequired,
  toggleExpanded: _propTypes.default.func.isRequired,
  iconRotation: _propTypes.default.object.isRequired,
  rule: _propTypes.default.object.isRequired,
  levelColor: _propTypes.default.string.isRequired,
  styles: _propTypes.default.object.isRequired
};
cov_e9ialbldr().s[25]++;
HeaderContentSection.propTypes = {
  expanded: _propTypes.default.bool.isRequired,
  iconRotation: _propTypes.default.object.isRequired,
  rule: _propTypes.default.object.isRequired,
  levelColor: _propTypes.default.string.isRequired,
  styles: _propTypes.default.object.isRequired
};
cov_e9ialbldr().s[26]++;
RuleContentSection.propTypes = {
  expandAnim: _propTypes.default.object.isRequired,
  contentHeight: _propTypes.default.object.isRequired,
  rule: _propTypes.default.object.isRequired,
  levelColor: _propTypes.default.string.isRequired,
  styles: _propTypes.default.object.isRequired
};
cov_e9ialbldr().s[27]++;
RuleContentInnerSection.propTypes = {
  rule: _propTypes.default.shape({
    explanation: _propTypes.default.string,
    examples: _propTypes.default.arrayOf(_propTypes.default.shape({
      english: _propTypes.default.string,
      french: _propTypes.default.string
    })),
    rules: _propTypes.default.arrayOf(_propTypes.default.string)
  }).isRequired,
  levelColor: _propTypes.default.string.isRequired,
  styles: _propTypes.default.object.isRequired
};
cov_e9ialbldr().s[28]++;
GrammarRuleContent.propTypes = {
  rule: _propTypes.default.shape({
    title: _propTypes.default.string.isRequired,
    explanation: _propTypes.default.string,
    examples: _propTypes.default.arrayOf(_propTypes.default.shape({
      english: _propTypes.default.string,
      french: _propTypes.default.string
    })),
    rules: _propTypes.default.arrayOf(_propTypes.default.string)
  }),
  levelColor: _propTypes.default.string
};
var _default = exports.default = GrammarRuleContent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,