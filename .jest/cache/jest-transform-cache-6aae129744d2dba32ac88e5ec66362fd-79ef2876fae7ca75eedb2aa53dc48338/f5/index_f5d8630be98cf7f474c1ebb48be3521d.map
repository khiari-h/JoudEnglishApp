{"version":3,"names":["_reactNative","require","_vectorIcons","_native","_react","_propTypes","_interopRequireDefault","_constants","_style","_jsxRuntime","ExerciseHeader","_ref","title","level","_ref$exerciseType","exerciseType","onClose","_ref$backIcon","backIcon","navigation","useNavigation","exerciseInfo","EXERCISE_TYPES","vocabulary","exerciseColor","color","exerciseIcon","icon","levelInfo","LANGUAGE_LEVELS","levelColor","displayLevel","handleClose","useCallback","goBack","jsx","View","style","styles","container","children","jsxs","content","HeaderLeftSection","localStyles","LevelBadge","_ref2","leftSection","TouchableOpacity","testID","backButton","onPress","hitSlop","top","bottom","left","right","activeOpacity","accessibilityRole","Ionicons","name","size","titleSection","Text","_ref3","levelBadge","backgroundColor","levelText","propTypes","PropTypes","string","isRequired","func","_default","exports","default"],"sources":["index.js"],"sourcesContent":["// components/exercise-common/ExerciseHeader/index.js - VERSION HUMAINE & ÉPURÉE\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useCallback } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { EXERCISE_TYPES, LANGUAGE_LEVELS } from \"../../../utils/constants\";\r\nimport styles from \"./style\";\r\n\r\n/**\r\n * 🕊️ ExerciseHeader - Version Humaine & Épurée\r\n * - Design \"invisible\" qui met en avant le contenu\r\n * - Blanc pur universel\r\n * - Simplicité et fonctionnalité\r\n * - Zéro superflu, zéro bling-bling\r\n * - Élégance dans la sobriété\r\n */\r\nconst ExerciseHeader = ({\r\n  title,\r\n  level,\r\n  exerciseType = \"vocabulary\",\r\n  onClose,\r\n  backIcon = \"arrow-back\",\r\n}) => {\r\n  const navigation = useNavigation();\r\n\r\n  // Récupérer les infos de l'exercice (seule la couleur nous intéresse)\r\n  const exerciseInfo = EXERCISE_TYPES[exerciseType] || EXERCISE_TYPES.vocabulary;\r\n  const exerciseColor = exerciseInfo.color;\r\n  const exerciseIcon = exerciseInfo.icon;\r\n\r\n  // Récupérer la couleur du niveau\r\n  const levelInfo = LANGUAGE_LEVELS[level] || LANGUAGE_LEVELS[\"1\"];\r\n  const levelColor = levelInfo.color;\r\n\r\n  // Affichage du niveau\r\n  const displayLevel = level === \"bonus\" ? \"B\" : level;\r\n\r\n  const handleClose = useCallback(() => {\r\n    if (onClose) {\r\n      onClose();\r\n    } else {\r\n      navigation.goBack();\r\n    }\r\n  }, [onClose, navigation]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.content}>\r\n        {/* =================== SECTION GAUCHE =================== */}\r\n        <HeaderLeftSection\r\n          handleClose={handleClose}\r\n          backIcon={backIcon}\r\n          exerciseIcon={exerciseIcon}\r\n          title={title}\r\n          exerciseColor={exerciseColor}\r\n          localStyles={styles}\r\n        />\r\n\r\n        {/* =================== BADGE NIVEAU - Minimal =================== */}\r\n        <LevelBadge\r\n          displayLevel={displayLevel}\r\n          levelColor={levelColor}\r\n          localStyles={styles}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst HeaderLeftSection = ({ handleClose, backIcon, exerciseIcon, title, exerciseColor, localStyles }) => (\r\n  <View style={localStyles.leftSection}>\r\n    <TouchableOpacity\r\n      testID=\"back-button\"\r\n      style={localStyles.backButton}\r\n      onPress={handleClose}\r\n      hitSlop={{ top: 12, bottom: 12, left: 12, right: 12 }}\r\n      activeOpacity={0.6}\r\n      accessibilityRole=\"button\"\r\n    >\r\n      <Ionicons name={backIcon} size={22} color=\"#64748b\" />\r\n    </TouchableOpacity>\r\n    <View style={localStyles.titleSection}>\r\n      <Text style={localStyles.exerciseIcon}>{exerciseIcon}</Text>\r\n      <Text style={[localStyles.title, { color: exerciseColor }]}>{title}</Text>\r\n    </View>\r\n  </View>\r\n);\r\n\r\nconst LevelBadge = ({ displayLevel, levelColor, localStyles }) => (\r\n  <View style={[localStyles.levelBadge, { backgroundColor: levelColor }]}> \r\n    <Text style={localStyles.levelText}>{displayLevel}</Text>\r\n  </View>\r\n);\r\n\r\n// PropTypes pour le composant principal ExerciseHeader\r\nExerciseHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  level: PropTypes.string.isRequired,\r\n  exerciseType: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  backIcon: PropTypes.string,\r\n};\r\n\r\nexport default ExerciseHeader;"],"mappings":"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","ignoreList":[]}