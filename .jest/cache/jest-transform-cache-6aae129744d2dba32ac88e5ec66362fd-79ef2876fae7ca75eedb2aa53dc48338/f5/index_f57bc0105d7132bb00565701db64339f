aa1dc5b4a0ccf1bd4621199df16b75ae
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _HeroCard = _interopRequireDefault(require("../../../../components/ui/HeroCard"));
var _RevealButton = _interopRequireDefault(require("../../../../components/ui/RevealButton"));
var _ContentSection = _interopRequireDefault(require("../../../../components/ui/ContentSection"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var VocabularyWordCard = function VocabularyWordCard(_ref) {
  var word = _ref.word,
    translation = _ref.translation,
    definition = _ref.definition,
    example = _ref.example,
    showTranslation = _ref.showTranslation,
    onToggleTranslation = _ref.onToggleTranslation,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? "#5E60CE" : _ref$levelColor;
  var styles = (0, _style.default)(levelColor);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_HeroCard.default, {
      content: word,
      fontSize: 42,
      levelColor: levelColor,
      showUnderline: true
    }), (0, _jsxRuntime.jsx)(_RevealButton.default, {
      isRevealed: showTranslation,
      revealedContent: translation,
      revealText: "Reveal Translation",
      hideText: "Hide Translation",
      onToggle: onToggleTranslation,
      levelColor: levelColor
    }), example && (0, _jsxRuntime.jsx)(_ContentSection.default, {
      title: "Example",
      content: example,
      levelColor: levelColor,
      isItalic: true,
      backgroundColor: "#FAFBFC"
    }), definition && (0, _jsxRuntime.jsx)(_ContentSection.default, {
      title: "Definition",
      content: definition,
      levelColor: levelColor,
      backgroundColor: "#F8F9FA"
    })]
  });
};
var _default = exports.default = VocabularyWordCard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX0hlcm9DYXJkIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9SZXZlYWxCdXR0b24iLCJfQ29udGVudFNlY3Rpb24iLCJfc3R5bGUiLCJfanN4UnVudGltZSIsIlZvY2FidWxhcnlXb3JkQ2FyZCIsIl9yZWYiLCJ3b3JkIiwidHJhbnNsYXRpb24iLCJkZWZpbml0aW9uIiwiZXhhbXBsZSIsInNob3dUcmFuc2xhdGlvbiIsIm9uVG9nZ2xlVHJhbnNsYXRpb24iLCJfcmVmJGxldmVsQ29sb3IiLCJsZXZlbENvbG9yIiwic3R5bGVzIiwiY3JlYXRlU3R5bGVzIiwianN4cyIsIlZpZXciLCJzdHlsZSIsImNvbnRhaW5lciIsImNoaWxkcmVuIiwianN4IiwiZGVmYXVsdCIsImNvbnRlbnQiLCJmb250U2l6ZSIsInNob3dVbmRlcmxpbmUiLCJpc1JldmVhbGVkIiwicmV2ZWFsZWRDb250ZW50IiwicmV2ZWFsVGV4dCIsImhpZGVUZXh0Iiwib25Ub2dnbGUiLCJ0aXRsZSIsImlzSXRhbGljIiwiYmFja2dyb3VuZENvbG9yIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVm9jYWJ1bGFyeVdvcmRDYXJkL2luZGV4LmpzIC0gVkVSU0lPTiBSRUZBQ1RPUklTw4lFICgyODAg4oaSIDUwIGxpZ25lcylcclxuXHJcbmltcG9ydCB7IFZpZXcgfSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XHJcbmltcG9ydCBIZXJvQ2FyZCBmcm9tIFwiLi4vLi4vLi4vLi4vY29tcG9uZW50cy91aS9IZXJvQ2FyZFwiO1xyXG5pbXBvcnQgUmV2ZWFsQnV0dG9uIGZyb20gXCIuLi8uLi8uLi8uLi9jb21wb25lbnRzL3VpL1JldmVhbEJ1dHRvblwiO1xyXG5pbXBvcnQgQ29udGVudFNlY3Rpb24gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvdWkvQ29udGVudFNlY3Rpb25cIjtcclxuaW1wb3J0IGNyZWF0ZVN0eWxlcyBmcm9tIFwiLi9zdHlsZVwiO1xyXG5cclxuLyoqXHJcbiAqIPCfj4YgVm9jYWJ1bGFyeVdvcmRDYXJkIC0gVmVyc2lvbiBSZWZhY3Rvcmlzw6llIGF2ZWMgY29tcG9zYW50cyBnw6luw6lyaXF1ZXNcclxuICogMjgwIGxpZ25lcyDihpIgNTAgbGlnbmVzICgtODIlIGRlIGNvZGUpXHJcbiAqIE3Dqm1lIHF1YWxpdMOpIHZpc3VlbGxlLCBhcmNoaXRlY3R1cmUgb3B0aW1pc8OpZVxyXG4gKiBcclxuICogQHBhcmFtIHtzdHJpbmd9IHdvcmQgLSBNb3QgcHJpbmNpcGFsIMOgIGFmZmljaGVyXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0cmFuc2xhdGlvbiAtIFRyYWR1Y3Rpb24gZHUgbW90XHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBkZWZpbml0aW9uIC0gRMOpZmluaXRpb24gKG9wdGlvbm5lbClcclxuICogQHBhcmFtIHtzdHJpbmd9IGV4YW1wbGUgLSBFeGVtcGxlIGQndXRpbGlzYXRpb25cclxuICogQHBhcmFtIHtib29sZWFufSBzaG93VHJhbnNsYXRpb24gLSDDiXRhdCBkJ2FmZmljaGFnZSBkZSBsYSB0cmFkdWN0aW9uXHJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IG9uVG9nZ2xlVHJhbnNsYXRpb24gLSBGb25jdGlvbiBwb3VyIHRvZ2dsZSB0cmFkdWN0aW9uXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbENvbG9yIC0gQ291bGV1ciBkdSBuaXZlYXVcclxuICovXHJcbmNvbnN0IFZvY2FidWxhcnlXb3JkQ2FyZCA9ICh7XHJcbiAgd29yZCxcclxuICB0cmFuc2xhdGlvbixcclxuICBkZWZpbml0aW9uLFxyXG4gIGV4YW1wbGUsXHJcbiAgc2hvd1RyYW5zbGF0aW9uLFxyXG4gIG9uVG9nZ2xlVHJhbnNsYXRpb24sXHJcbiAgbGV2ZWxDb2xvciA9IFwiIzVFNjBDRVwiLFxyXG59KSA9PiB7XHJcbiAgY29uc3Qgc3R5bGVzID0gY3JlYXRlU3R5bGVzKGxldmVsQ29sb3IpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxyXG4gICAgICB7Lyog8J+OryBIRVJPIFNFQ1RJT04gLSBMZSBtb3QgcHJpbmNpcGFsICovfVxyXG4gICAgICA8SGVyb0NhcmQgXHJcbiAgICAgICAgY29udGVudD17d29yZH1cclxuICAgICAgICBmb250U2l6ZT17NDJ9ICAvLyBUYWlsbGUgc3BlY3RhY3VsYWlyZSBwb3VyIG1vdHNcclxuICAgICAgICBsZXZlbENvbG9yPXtsZXZlbENvbG9yfVxyXG4gICAgICAgIHNob3dVbmRlcmxpbmVcclxuICAgICAgLz5cclxuICAgICAgXHJcbiAgICAgIHsvKiDwn5SYIEJPVVRPTiBSRVZFQUwvSElERSBhdmVjIGdsYXNzbW9ycGhpc20gKi99XHJcbiAgICAgIDxSZXZlYWxCdXR0b25cclxuICAgICAgICBpc1JldmVhbGVkPXtzaG93VHJhbnNsYXRpb259XHJcbiAgICAgICAgcmV2ZWFsZWRDb250ZW50PXt0cmFuc2xhdGlvbn1cclxuICAgICAgICByZXZlYWxUZXh0PVwiUmV2ZWFsIFRyYW5zbGF0aW9uXCJcclxuICAgICAgICBoaWRlVGV4dD1cIkhpZGUgVHJhbnNsYXRpb25cIlxyXG4gICAgICAgIG9uVG9nZ2xlPXtvblRvZ2dsZVRyYW5zbGF0aW9ufVxyXG4gICAgICAgIGxldmVsQ29sb3I9e2xldmVsQ29sb3J9XHJcbiAgICAgIC8+XHJcbiAgICAgIFxyXG4gICAgICB7Lyog8J+TnSBTRUNUSU9OIEVYRU1QTEUgKi99XHJcbiAgICAgIHtleGFtcGxlICYmIChcclxuICAgICAgICA8Q29udGVudFNlY3Rpb25cclxuICAgICAgICAgIHRpdGxlPVwiRXhhbXBsZVwiXHJcbiAgICAgICAgICBjb250ZW50PXtleGFtcGxlfVxyXG4gICAgICAgICAgbGV2ZWxDb2xvcj17bGV2ZWxDb2xvcn1cclxuICAgICAgICAgIGlzSXRhbGljXHJcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I9XCIjRkFGQkZDXCJcclxuICAgICAgICAvPlxyXG4gICAgICApfVxyXG5cclxuICAgICAgey8qIPCfk50gU0VDVElPTiBEw4lGSU5JVElPTiAoc2kgZGlzcG9uaWJsZSkgKi99XHJcbiAgICAgIHtkZWZpbml0aW9uICYmIChcclxuICAgICAgICA8Q29udGVudFNlY3Rpb25cclxuICAgICAgICAgIHRpdGxlPVwiRGVmaW5pdGlvblwiXHJcbiAgICAgICAgICBjb250ZW50PXtkZWZpbml0aW9ufVxyXG4gICAgICAgICAgbGV2ZWxDb2xvcj17bGV2ZWxDb2xvcn1cclxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcj1cIiNGOEY5RkFcIlxyXG4gICAgICAgIC8+XHJcbiAgICAgICl9XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFZvY2FidWxhcnlXb3JkQ2FyZDsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUEsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsU0FBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsYUFBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUksZUFBQSxHQUFBRixzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUssTUFBQSxHQUFBSCxzQkFBQSxDQUFBRixPQUFBO0FBQW1DLElBQUFNLFdBQUEsR0FBQU4sT0FBQTtBQWVuQyxJQUFNTyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQWtCQSxDQUFBQyxJQUFBLEVBUWxCO0VBQUEsSUFQSkMsSUFBSSxHQUFBRCxJQUFBLENBQUpDLElBQUk7SUFDSkMsV0FBVyxHQUFBRixJQUFBLENBQVhFLFdBQVc7SUFDWEMsVUFBVSxHQUFBSCxJQUFBLENBQVZHLFVBQVU7SUFDVkMsT0FBTyxHQUFBSixJQUFBLENBQVBJLE9BQU87SUFDUEMsZUFBZSxHQUFBTCxJQUFBLENBQWZLLGVBQWU7SUFDZkMsbUJBQW1CLEdBQUFOLElBQUEsQ0FBbkJNLG1CQUFtQjtJQUFBQyxlQUFBLEdBQUFQLElBQUEsQ0FDbkJRLFVBQVU7SUFBVkEsVUFBVSxHQUFBRCxlQUFBLGNBQUcsU0FBUyxHQUFBQSxlQUFBO0VBRXRCLElBQU1FLE1BQU0sR0FBRyxJQUFBQyxjQUFZLEVBQUNGLFVBQVUsQ0FBQztFQUV2QyxPQUNFLElBQUFWLFdBQUEsQ0FBQWEsSUFBQSxFQUFDcEIsWUFBQSxDQUFBcUIsSUFBSTtJQUFDQyxLQUFLLEVBQUVKLE1BQU0sQ0FBQ0ssU0FBVTtJQUFBQyxRQUFBLEdBRTVCLElBQUFqQixXQUFBLENBQUFrQixHQUFBLEVBQUN2QixTQUFBLENBQUF3QixPQUFRO01BQ1BDLE9BQU8sRUFBRWpCLElBQUs7TUFDZGtCLFFBQVEsRUFBRSxFQUFHO01BQ2JYLFVBQVUsRUFBRUEsVUFBVztNQUN2QlksYUFBYTtJQUFBLENBQ2QsQ0FBQyxFQUdGLElBQUF0QixXQUFBLENBQUFrQixHQUFBLEVBQUNyQixhQUFBLENBQUFzQixPQUFZO01BQ1hJLFVBQVUsRUFBRWhCLGVBQWdCO01BQzVCaUIsZUFBZSxFQUFFcEIsV0FBWTtNQUM3QnFCLFVBQVUsRUFBQyxvQkFBb0I7TUFDL0JDLFFBQVEsRUFBQyxrQkFBa0I7TUFDM0JDLFFBQVEsRUFBRW5CLG1CQUFvQjtNQUM5QkUsVUFBVSxFQUFFQTtJQUFXLENBQ3hCLENBQUMsRUFHREosT0FBTyxJQUNOLElBQUFOLFdBQUEsQ0FBQWtCLEdBQUEsRUFBQ3BCLGVBQUEsQ0FBQXFCLE9BQWM7TUFDYlMsS0FBSyxFQUFDLFNBQVM7TUFDZlIsT0FBTyxFQUFFZCxPQUFRO01BQ2pCSSxVQUFVLEVBQUVBLFVBQVc7TUFDdkJtQixRQUFRO01BQ1JDLGVBQWUsRUFBQztJQUFTLENBQzFCLENBQ0YsRUFHQXpCLFVBQVUsSUFDVCxJQUFBTCxXQUFBLENBQUFrQixHQUFBLEVBQUNwQixlQUFBLENBQUFxQixPQUFjO01BQ2JTLEtBQUssRUFBQyxZQUFZO01BQ2xCUixPQUFPLEVBQUVmLFVBQVc7TUFDcEJLLFVBQVUsRUFBRUEsVUFBVztNQUN2Qm9CLGVBQWUsRUFBQztJQUFTLENBQzFCLENBQ0Y7RUFBQSxDQUNHLENBQUM7QUFFWCxDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFiLE9BQUEsR0FFYWxCLGtCQUFrQiIsImlnbm9yZUxpc3QiOltdfQ==