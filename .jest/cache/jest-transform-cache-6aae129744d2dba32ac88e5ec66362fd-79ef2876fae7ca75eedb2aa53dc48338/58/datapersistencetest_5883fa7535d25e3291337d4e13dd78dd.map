{"version":3,"names":["_getJestObj","mock","setItem","jest","fn","getItem","removeItem","clear","useFocusEffect","callback","router","push","Stack","_ref","children","_jsxRuntime","jsx","Fragment","useLocalSearchParams","useNavigation","navigate","goBack","canGoBack","addListener","isFocused","lastActivity","isLoading","saveActivity","clearActivity","reload","currentStreak","wordsToday","timeToday","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_reactNative2","_asyncStorage","_ProgressContext","_ThemeContext","_CurrentLevelContext","_require","FakeDataManager","_progress$levels","_progress$levels2","_progress$levels3","_useProgress","useProgress","updateProgress","progress","saveData","_ref2","default","AsyncStorage","JSON","stringify","apply","arguments","loadData","_ref3","data","parse","simulateExercise","jsxs","Text","testID","levels","A1","vocabulary","grammar","reading","TouchableOpacity","onPress","describe","beforeEach","clearAllMocks","it","_render","render","ThemeProvider","ProgressProvider","getByTestId","fireEvent","press","waitFor","expect","toHaveBeenCalledWith","stringContaining","savedProgress","mockResolvedValue","_render2","_render3","toBeTruthy","_render4","rerender","toHaveBeenCalled","savedData","mockRejectedValue","Error","_render5","_render6","CurrentLevelProvider","_render7","act"],"sources":["data-persistence.test.js"],"sourcesContent":["// __tests__/integration/data-persistence.test.js\r\nimport React from 'react';\r\nimport { render, fireEvent, waitFor, act } from '@testing-library/react-native';\r\nimport { TouchableOpacity, Text } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ProgressProvider, useProgress } from '../../src/contexts/ProgressContext';\r\nimport { ThemeProvider } from '../../src/contexts/ThemeContext';\r\nimport { CurrentLevelProvider } from '../../src/contexts/CurrentLevelContext';\r\n\r\n// Mock AsyncStorage\r\njest.mock('@react-native-async-storage/async-storage', () => ({\r\n  setItem: jest.fn(),\r\n  getItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn(),\r\n}));\r\n\r\n// Mock de expo-router\r\njest.mock('expo-router', () => ({\r\n  useFocusEffect: jest.fn(callback => callback()),\r\n  router: {\r\n    push: jest.fn(),\r\n  },\r\n  Stack: ({ children }) => <>{children}</>,\r\n  useLocalSearchParams: () => ({}),\r\n  useNavigation: () => ({\r\n    navigate: jest.fn(),\r\n    goBack: jest.fn(),\r\n    canGoBack: jest.fn(() => true),\r\n    addListener: jest.fn(),\r\n    isFocused: jest.fn(() => true),\r\n  }),\r\n}));\r\n\r\n// Mock des hooks\r\njest.mock('../../src/hooks/useLastActivity', () => () => ({\r\n  lastActivity: null,\r\n  isLoading: false,\r\n  saveActivity: jest.fn(),\r\n  clearActivity: jest.fn(),\r\n  reload: jest.fn(),\r\n}));\r\n\r\njest.mock('../../src/hooks/useActivityMetrics', () => () => ({\r\n  currentStreak: 5,\r\n  wordsToday: 0,\r\n  timeToday: 0,\r\n  isLoading: false,\r\n}));\r\n\r\n// Composant de test pour simuler la sauvegarde et le chargement\r\nconst FakeDataManager = () => {\r\n  const { updateProgress, progress } = useProgress();\r\n\r\n  const saveData = async () => {\r\n    await AsyncStorage.setItem('progress', JSON.stringify(progress));\r\n  };\r\n\r\n  const loadData = async () => {\r\n    const data = await AsyncStorage.getItem('progress');\r\n    return data ? JSON.parse(data) : null;\r\n  };\r\n\r\n  const simulateExercise = () => {\r\n    updateProgress('A1', 'vocabulary', 75);\r\n    updateProgress('A1', 'grammar', 50);\r\n    updateProgress('A1', 'reading', 25);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Text testID=\"progress-display\">\r\n        Vocabulaire: {progress.levels?.A1?.vocabulary || 0}% | \r\n        Grammaire: {progress.levels?.A1?.grammar || 0}% | \r\n        Lecture: {progress.levels?.A1?.reading || 0}%\r\n      </Text>\r\n      <TouchableOpacity testID=\"simulate-exercise\" onPress={simulateExercise}>\r\n        <Text>Simuler exercice</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity testID=\"save-data\" onPress={saveData}>\r\n        <Text>Sauvegarder</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity testID=\"load-data\" onPress={loadData}>\r\n        <Text>Charger</Text>\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\ndescribe('Scénario 1: Persistance des données de progression', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    AsyncStorage.clear();\r\n  });\r\n\r\n  it(\"devrait sauvegarder les données de progression dans AsyncStorage\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeDataManager />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Simuler un exercice\r\n    fireEvent.press(getByTestId('simulate-exercise'));\r\n\r\n    // Sauvegarder les données\r\n    fireEvent.press(getByTestId('save-data'));\r\n\r\n    await waitFor(() => {\r\n      expect(AsyncStorage.setItem).toHaveBeenCalledWith(\r\n        'progress',\r\n        expect.stringContaining('\"vocabulary\":75')\r\n      );\r\n    });\r\n  });\r\n\r\n  it(\"devrait charger les données sauvegardées depuis AsyncStorage\", async () => {\r\n    // Préparer des données sauvegardées\r\n    const savedProgress = {\r\n      levels: {\r\n        A1: {\r\n          vocabulary: 80,\r\n          grammar: 60,\r\n          reading: 40\r\n        }\r\n      }\r\n    };\r\n\r\n    AsyncStorage.getItem.mockResolvedValue(JSON.stringify(savedProgress));\r\n\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeDataManager />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Charger les données\r\n    fireEvent.press(getByTestId('load-data'));\r\n\r\n    await waitFor(() => {\r\n      expect(AsyncStorage.getItem).toHaveBeenCalledWith('progress');\r\n    });\r\n  });\r\n\r\n  it(\"devrait gérer les cas où aucune donnée n'est sauvegardée\", async () => {\r\n    AsyncStorage.getItem.mockResolvedValue(null);\r\n\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeDataManager />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Charger les données (aucune sauvegardée)\r\n    fireEvent.press(getByTestId('load-data'));\r\n\r\n    await waitFor(() => {\r\n      expect(AsyncStorage.getItem).toHaveBeenCalledWith('progress');\r\n    });\r\n\r\n    // Vérifier que l'état reste cohérent\r\n    expect(getByTestId('progress-display')).toBeTruthy();\r\n  });\r\n});\r\n\r\ndescribe('Scénario 2: Cohérence des données entre sessions', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    AsyncStorage.clear();\r\n  });\r\n\r\n  it(\"devrait maintenir la cohérence des métriques après redémarrage\", async () => {\r\n    const { getByTestId, rerender } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeDataManager />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Phase 1: Première session - progression\r\n    fireEvent.press(getByTestId('simulate-exercise'));\r\n    \r\n    // Vérifier l'affichage\r\n    expect(getByTestId('progress-display')).toBeTruthy();\r\n    \r\n    // Sauvegarder\r\n    fireEvent.press(getByTestId('save-data'));\r\n\r\n    await waitFor(() => {\r\n      expect(AsyncStorage.setItem).toHaveBeenCalled();\r\n    });\r\n\r\n    // Phase 2: Simuler un redémarrage (nouveau composant)\r\n    const savedData = {\r\n      levels: {\r\n        A1: {\r\n          vocabulary: 75,\r\n          grammar: 50,\r\n          reading: 25\r\n        }\r\n      }\r\n    };\r\n\r\n    AsyncStorage.getItem.mockResolvedValue(JSON.stringify(savedData));\r\n\r\n    // Rerender pour simuler un nouveau démarrage\r\n    rerender(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeDataManager />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Charger les données\r\n    fireEvent.press(getByTestId('load-data'));\r\n\r\n    await waitFor(() => {\r\n      expect(AsyncStorage.getItem).toHaveBeenCalledWith('progress');\r\n    });\r\n  });\r\n\r\n  it(\"devrait gérer les erreurs de sauvegarde/chargement\", async () => {\r\n    // Simuler une erreur de sauvegarde\r\n    AsyncStorage.setItem.mockRejectedValue(new Error('Erreur de sauvegarde'));\r\n\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeDataManager />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Simuler un exercice\r\n    fireEvent.press(getByTestId('simulate-exercise'));\r\n\r\n    // Tenter de sauvegarder (devrait échouer)\r\n    fireEvent.press(getByTestId('save-data'));\r\n\r\n    await waitFor(() => {\r\n      expect(AsyncStorage.setItem).toHaveBeenCalled();\r\n    });\r\n\r\n    // L'application devrait continuer à fonctionner malgré l'erreur\r\n    expect(getByTestId('progress-display')).toBeTruthy();\r\n  });\r\n});\r\n\r\ndescribe('Scénario 3: Intégration avec les composants réels', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    AsyncStorage.clear();\r\n  });\r\n\r\n  it(\"devrait synchroniser les données entre différents composants\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <CurrentLevelProvider>\r\n            <FakeDataManager />\r\n          </CurrentLevelProvider>\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Vérifier l'état initial\r\n    expect(getByTestId('progress-display')).toBeTruthy();\r\n\r\n    // Simuler des exercices\r\n    fireEvent.press(getByTestId('simulate-exercise'));\r\n\r\n    // Sauvegarder\r\n    fireEvent.press(getByTestId('save-data'));\r\n\r\n    await waitFor(() => {\r\n      expect(AsyncStorage.setItem).toHaveBeenCalled();\r\n    });\r\n\r\n    // Vérifier que l'affichage est cohérent\r\n    expect(getByTestId('progress-display')).toBeTruthy();\r\n  });\r\n\r\n  it(\"devrait gérer la concurrence des mises à jour\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeDataManager />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Simuler plusieurs exercices rapidement\r\n    act(() => {\r\n      fireEvent.press(getByTestId('simulate-exercise'));\r\n      fireEvent.press(getByTestId('simulate-exercise'));\r\n    });\r\n\r\n    // Sauvegarder\r\n    fireEvent.press(getByTestId('save-data'));\r\n\r\n    await waitFor(() => {\r\n      expect(AsyncStorage.setItem).toHaveBeenCalled();\r\n    });\r\n\r\n    // L'état final devrait être cohérent\r\n    expect(getByTestId('progress-display')).toBeTruthy();\r\n  });\r\n});\r\n"],"mappings":"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","ignoreList":[]}