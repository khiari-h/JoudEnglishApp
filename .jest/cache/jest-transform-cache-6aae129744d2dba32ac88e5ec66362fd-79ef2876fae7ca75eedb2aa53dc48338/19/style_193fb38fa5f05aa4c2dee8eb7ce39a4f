6c28252fbde962f2a4923b6838592d6b
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var styles = _reactNative.StyleSheet.create({
  scrollView: {
    flex: 1
  },
  card: Object.assign({
    backgroundColor: "white",
    borderRadius: 20,
    marginVertical: 8,
    position: "relative",
    overflow: 'hidden'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: "#64748b",
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.1,
      shadowRadius: 12
    },
    android: {
      elevation: 6
    }
  })),
  completedCard: {
    borderLeftWidth: 6,
    borderLeftColor: "#10b981"
  },
  errorContainer: {
    padding: 40,
    alignItems: 'center',
    justifyContent: 'center'
  },
  errorText: {
    fontSize: 16,
    color: '#ef4444',
    fontWeight: '600',
    textAlign: 'center'
  },
  completedBadge: Object.assign({
    position: "absolute",
    top: 16,
    right: 16,
    backgroundColor: "#10b981",
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 12,
    zIndex: 10
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: "#10b981",
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.3,
      shadowRadius: 4
    },
    android: {
      elevation: 4
    }
  })),
  completedText: {
    color: "white",
    fontSize: 12,
    fontWeight: "700"
  },
  exerciseContent: {
    paddingTop: 24,
    paddingHorizontal: 20
  },
  inputSection: {
    paddingHorizontal: 20,
    paddingVertical: 16
  },
  hintSection: {
    paddingHorizontal: 20,
    paddingVertical: 8
  },
  feedbackSection: {
    paddingHorizontal: 20,
    paddingVertical: 16
  },
  homophoneHeader: {
    marginBottom: 16
  },
  fallbackContainer: {
    backgroundColor: '#fef3c7',
    borderRadius: 12,
    padding: 16,
    borderLeftWidth: 4,
    borderLeftColor: '#f59e0b'
  },
  instruction: {
    fontSize: 18,
    fontWeight: "600",
    color: "#1e293b",
    textAlign: "center",
    lineHeight: 26
  },
  debugSection: {
    backgroundColor: '#fef2f2',
    margin: 16,
    padding: 12,
    borderRadius: 8,
    borderLeftWidth: 4,
    borderLeftColor: '#ef4444'
  },
  debugText: {
    fontSize: 12,
    color: '#7f1d1d',
    fontFamily: _reactNative.Platform.OS === 'ios' ? 'Courier' : 'monospace'
  }
});
var _default = exports.default = styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,