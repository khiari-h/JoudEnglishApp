{"version":3,"names":["_errorCorrectionB2Full","_interopRequireDefault","require","_errorCorrectionB2Identify","_errorCorrectionB2MultipleChoice","allExercises","concat","_toConsumableArray2","default","errorCorrectionB2Full","errorCorrectionB2Identify","errorCorrectionB2MultipleChoice","sort","a","b","categoryId","typeOrder","type","errorCorrectionB2","level","totalExercises","length","statistics","full","identify","multiple_choice","byCategory","name","count","categories","id","description","exerciseCount","difficulty","color","topics","commonErrors","skillsTargeted","exercises","getExercisesByCategory","filter","exercise","getExercisesByType","getExercisesByCategoryAndType","getExercisesBySkill","skill","category","find","cat","includes","getAdvancedExercises","wordCount","text","split","errorCount","errorPositions","getFormalRegisterExercises","explanation","toLowerCase","getAcademicPreparationExercises","academicKeywords","some","keyword","hint","validateStructure","requiredFields","validTypes","every","hasRequiredFields","field","Object","prototype","hasOwnProperty","call","undefined","hasValidType","hasValidCategory","hasMinimumComplexity","hasAdvancedVocabulary","hasTypeSpecificFields","choices","Array","isArray","correctChoiceIndex","getSummary","totalErrorPositions","ex","reduce","sum","totalTextLength","complexExercises","formalExercises","focus","progression","distribution","complexity","averageTextLength","Math","round","averageWordCount","averageErrorsPerExercise","complexExercisesPercentage","formalRegisterFocus","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/data/exercises/errorCorrection/B2/index.js\r\n\r\nimport errorCorrectionB2Full from './categories/errorCorrectionB2Full';\r\nimport errorCorrectionB2Identify from './categories/errorCorrectionB2Identify';\r\nimport errorCorrectionB2MultipleChoice from './categories/errorCorrectionB2MultipleChoice';\r\n\r\n// Combine all exercises from the 3 files\r\nconst allExercises = [\r\n  ...errorCorrectionB2Full,\r\n  ...errorCorrectionB2Identify,\r\n  ...errorCorrectionB2MultipleChoice\r\n];\r\n\r\n// Sort exercises by categoryId to maintain logical order\r\nallExercises.sort((a, b) => {\r\n  if (a.categoryId !== b.categoryId) {\r\n    return a.categoryId - b.categoryId;\r\n  }\r\n  // Within same category, order by type: full, identify, multiple_choice\r\n  const typeOrder = { 'full': 1, 'identify': 2, 'multiple_choice': 3 };\r\n  return typeOrder[a.type] - typeOrder[b.type];\r\n});\r\n\r\nconst errorCorrectionB2 = {\r\n  level: \"B2\",\r\n  totalExercises: allExercises.length,\r\n\r\n  // Statistics by type\r\n  statistics: {\r\n    full: errorCorrectionB2Full.length,\r\n    identify: errorCorrectionB2Identify.length,\r\n    multiple_choice: errorCorrectionB2MultipleChoice.length,\r\n    byCategory: {\r\n      1: { name: \"Advanced Conditionals\", count: 8 },        // 3 full + 3 identify + 2 multiple_choice\r\n      2: { name: \"Subjunctive & Formal Grammar\", count: 8 }, // 3 full + 3 identify + 2 multiple_choice\r\n      3: { name: \"Advanced Passive & Causative\", count: 9 }, // 3 full + 4 identify + 2 multiple_choice\r\n      4: { name: \"Discourse & Cohesion\", count: 9 },         // 3 full + 4 identify + 2 multiple_choice\r\n      5: { name: \"Register & Style\", count: 8 }              // 2 full + 3 identify + 3 multiple_choice\r\n    }\r\n  },\r\n\r\n  // Categories metadata for B2 advanced level\r\n  categories: [\r\n    {\r\n      id: 1,\r\n      name: \"Advanced Conditionals\",\r\n      description: \"Mixed conditionals, complex hypothetical situations, advanced conditional patterns\",\r\n      exerciseCount: 8,\r\n      difficulty: \"Advanced\",\r\n      color: \"#3b82f6\",\r\n      topics: [\"mixed conditionals\", \"complex hypotheticals\", \"conditional with modals\", \"implied conditionals\", \"formal conditional conjunctions\"],\r\n      commonErrors: [\"would have in if-clauses\", \"tense mixing\", \"inappropriate conjunctions\"],\r\n      skillsTargeted: [\"hypothetical reasoning\", \"complex time relationships\", \"formal register\"]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Subjunctive & Formal Grammar\",\r\n      description: \"Subjunctive mood, formal constructions, advanced verb patterns\",\r\n      exerciseCount: 8,\r\n      difficulty: \"Advanced\", \r\n      color: \"#10b981\",\r\n      topics: [\"subjunctive mood\", \"formal registers\", \"complex verb patterns\", \"inversion\", \"mandative subjunctive\"],\r\n      commonErrors: [\"indicative instead of subjunctive\", \"incorrect formal inversions\", \"should instead of subjunctive\"],\r\n      skillsTargeted: [\"formal register awareness\", \"advanced grammar structures\", \"academic writing\"]\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Advanced Passive & Causative\",\r\n      description: \"Complex passive constructions, causative forms, advanced passive patterns\",\r\n      exerciseCount: 9,\r\n      difficulty: \"Advanced\",\r\n      color: \"#f59e0b\",\r\n      topics: [\"complex passives\", \"causative have/get\", \"passive reporting\", \"perfect infinitives\", \"passive with modals\"],\r\n      commonErrors: [\"incorrect causative structures\", \"wrong infinitive forms\", \"missing auxiliaries\"],\r\n      skillsTargeted: [\"complex sentence transformation\", \"causative understanding\", \"passive mastery\"]\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Discourse & Cohesion\",\r\n      description: \"Advanced linking devices, discourse markers, text cohesion\",\r\n      exerciseCount: 9,\r\n      difficulty: \"Advanced\",\r\n      color: \"#8b5cf6\",\r\n      topics: [\"discourse markers\", \"cohesive devices\", \"substitution\", \"ellipsis\", \"advanced connectors\"],\r\n      commonErrors: [\"inappropriate connectors\", \"wordiness\", \"repetition\", \"informal markers in formal text\"],\r\n      skillsTargeted: [\"text organization\", \"coherence\", \"advanced writing skills\", \"academic discourse\"]\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Register & Style\",\r\n      description: \"Formal vs informal register, academic writing, stylistic appropriateness\",\r\n      exerciseCount: 8,\r\n      difficulty: \"Advanced\",\r\n      color: \"#ef4444\",\r\n      topics: [\"register awareness\", \"academic style\", \"formal language\", \"appropriateness\", \"professional communication\"],\r\n      commonErrors: [\"mixed registers\", \"inappropriate informality\", \"lack of precision\", \"colloquial expressions\"],\r\n      skillsTargeted: [\"register sensitivity\", \"professional communication\", \"academic writing\", \"stylistic awareness\"]\r\n    },\r\n  ],\r\n\r\n  // All exercises combined and sorted\r\n  exercises: allExercises,\r\n\r\n  // Advanced helper methods for B2 level\r\n  getExercisesByCategory: (categoryId) => {\r\n    return allExercises.filter(exercise => exercise.categoryId === categoryId);\r\n  },\r\n\r\n  getExercisesByType: (type) => {\r\n    return allExercises.filter(exercise => exercise.type === type);\r\n  },\r\n\r\n  getExercisesByCategoryAndType: (categoryId, type) => {\r\n    return allExercises.filter(exercise => \r\n      exercise.categoryId === categoryId && exercise.type === type\r\n    );\r\n  },\r\n\r\n  // Get exercises by specific skills\r\n  getExercisesBySkill: (skill) => {\r\n    return allExercises.filter(exercise => {\r\n      const category = errorCorrectionB2.categories.find(cat => cat.id === exercise.categoryId);\r\n      return category?.skillsTargeted.includes(skill);\r\n    });\r\n  },\r\n\r\n  // Get exercises by difficulty within B2\r\n  getAdvancedExercises: () => {\r\n    return allExercises.filter(exercise => {\r\n      const wordCount = exercise.text.split(' ').length;\r\n      const errorCount = exercise.errorPositions ? exercise.errorPositions.length : 1;\r\n      // B2 advanced: longer texts (10+ words) or multiple errors (3+)\r\n      return wordCount >= 10 || errorCount >= 3;\r\n    });\r\n  },\r\n\r\n  // Get exercises focusing on formal register\r\n  getFormalRegisterExercises: () => {\r\n    return allExercises.filter(exercise => {\r\n      return exercise.categoryId === 2 || exercise.categoryId === 5 || \r\n             exercise.explanation.toLowerCase().includes('formal');\r\n    });\r\n  },\r\n\r\n  // Get exercises for academic preparation\r\n  getAcademicPreparationExercises: () => {\r\n    return allExercises.filter(exercise => {\r\n      const academicKeywords = ['academic', 'formal', 'discourse', 'register', 'subjunctive'];\r\n      return academicKeywords.some(keyword => \r\n        exercise.explanation.toLowerCase().includes(keyword) ||\r\n        exercise.hint.toLowerCase().includes(keyword)\r\n      );\r\n    });\r\n  },\r\n\r\n  // Enhanced validation for B2 level\r\n  validateStructure: () => {\r\n    const requiredFields = ['categoryId', 'type', 'text', 'correctedText', 'hint', 'explanation'];\r\n    const validTypes = ['full', 'identify', 'multiple_choice'];\r\n\r\n    return allExercises.every(exercise => {\r\n      // Check required fields\r\n      const hasRequiredFields = requiredFields.every(field => \r\n        Object.prototype.hasOwnProperty.call(exercise, field) && exercise[field] !== undefined\r\n      );\r\n\r\n      // Check valid type\r\n      const hasValidType = validTypes.includes(exercise.type);\r\n\r\n      // Check valid category (1-5 for B2)\r\n      const hasValidCategory = exercise.categoryId >= 1 && exercise.categoryId <= 5;\r\n\r\n      // Check B2 level complexity (minimum text length and sophistication)\r\n      const hasMinimumComplexity = exercise.text.split(' ').length >= 8;\r\n      const hasAdvancedVocabulary = exercise.text.length > 50; // More sophisticated texts\r\n\r\n      // Check type-specific fields with B2 standards\r\n      let hasTypeSpecificFields = true;\r\n      if (exercise.type === 'multiple_choice') {\r\n        hasTypeSpecificFields = exercise.choices && \r\n                               Array.isArray(exercise.choices) &&\r\n                               exercise.choices.length >= 4 && // B2 should have 4 choices for complexity\r\n                               exercise.correctChoiceIndex !== undefined &&\r\n                               exercise.correctChoiceIndex >= 0 &&\r\n                               exercise.correctChoiceIndex < exercise.choices.length;\r\n      } else {\r\n        hasTypeSpecificFields = exercise.errorPositions && Array.isArray(exercise.errorPositions);\r\n      }\r\n\r\n      return hasRequiredFields && hasValidType && hasValidCategory && \r\n             hasMinimumComplexity && hasAdvancedVocabulary && hasTypeSpecificFields;\r\n    });\r\n  },\r\n\r\n  // Comprehensive B2 summary with advanced metrics\r\n  getSummary: () => {\r\n    const totalErrorPositions = allExercises\r\n      .filter(ex => ex.errorPositions)\r\n      .reduce((sum, ex) => sum + ex.errorPositions.length, 0);\r\n\r\n    const totalTextLength = allExercises.reduce((sum, ex) => sum + ex.text.length, 0);\r\n    const complexExercises = errorCorrectionB2.getAdvancedExercises().length;\r\n    const formalExercises = errorCorrectionB2.getFormalRegisterExercises().length;\r\n\r\n    return {\r\n      level: \"B2\",\r\n      totalExercises: allExercises.length,\r\n      categories: errorCorrectionB2.categories.length,\r\n      difficulty: \"Advanced\",\r\n      focus: \"Complex grammatical structures, register awareness, and discourse competence\",\r\n      progression: \"Builds on B1 with mixed conditionals, subjunctive, advanced passive, discourse markers, and register sensitivity\",\r\n      distribution: {\r\n        full: errorCorrectionB2Full.length,\r\n        identify: errorCorrectionB2Identify.length,\r\n        multiple_choice: errorCorrectionB2MultipleChoice.length\r\n      },\r\n      complexity: {\r\n        averageTextLength: Math.round(totalTextLength / allExercises.length),\r\n        averageWordCount: Math.round(allExercises.reduce((sum, ex) => sum + ex.text.split(' ').length, 0) / allExercises.length),\r\n        totalErrorPositions,\r\n        averageErrorsPerExercise: Math.round(totalErrorPositions / allExercises.filter(ex => ex.errorPositions).length * 10) / 10,\r\n        complexExercisesPercentage: Math.round((complexExercises / allExercises.length) * 100),\r\n        formalRegisterFocus: Math.round((formalExercises / allExercises.length) * 100)\r\n      },\r\n      skillsTargeted: [\r\n        \"Advanced grammatical competence\",\r\n        \"Register and style awareness\", \r\n        \"Discourse organization\",\r\n        \"Academic writing preparation\",\r\n        \"Professional communication\"\r\n      ]\r\n    };\r\n  }\r\n};\r\n\r\n// Validate structure on export\r\nif (!errorCorrectionB2.validateStructure()) {\r\n  // empty: structure invalid, handle if needed\r\n} else {\r\n  // empty: structure valid, nothing to do\r\n}\r\n\r\nexport default errorCorrectionB2;\r\n"],"mappings":"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","ignoreList":[]}