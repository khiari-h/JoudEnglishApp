{"version":3,"names":["_react","require","_constants","cov_12wtj7y9ke","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","useLevelListData","_ref","getLevelProgress","hasProgress","currentUserLevel","useMemo","i","toString","currentLevelData","LANGUAGE_LEVELS","levels","LEVELS_LIST","map","levelKey","levelInfo","progress","started","id","title","color","icon","hasStarted"],"sources":["useLevelListData.js"],"sourcesContent":["// src/screens/LevelSelection/hooks/useLevelListData.js\r\nimport { useMemo } from \"react\";\r\nimport { LANGUAGE_LEVELS, LEVELS_LIST } from \"../../../utils/constants\";\r\n\r\nexport default function useLevelListData({ getLevelProgress, hasProgress }) {\r\n  const currentUserLevel = useMemo(() => {\r\n    for (let i = 1; i <= 6; i++) {\r\n      if (getLevelProgress(i.toString()) === 0) {\r\n        return i;\r\n      }\r\n    }\r\n    return 6;\r\n  }, [getLevelProgress]);\r\n\r\n  const currentLevelData = LANGUAGE_LEVELS[currentUserLevel];\r\n\r\n  const levels = useMemo(() => {\r\n    return LEVELS_LIST.map((levelKey) => {\r\n      const levelInfo = LANGUAGE_LEVELS[levelKey];\r\n      const progress = getLevelProgress(levelKey);\r\n\r\n      const started =\r\n        hasProgress(\"vocabulary\", levelKey) ||\r\n        hasProgress(\"phrases\", levelKey) ||\r\n        hasProgress(\"grammar\", levelKey) ||\r\n        hasProgress(\"reading\", levelKey) ||\r\n        hasProgress(\"spelling\", levelKey) ||\r\n        hasProgress(\"conversations\", levelKey) ||\r\n        hasProgress(\"errorCorrection\", levelKey) ||\r\n        hasProgress(\"wordGames\", levelKey) ||\r\n        hasProgress(\"assessment\", levelKey);\r\n\r\n      return {\r\n        id: levelKey,\r\n        title: levelInfo.title,\r\n        progress,\r\n        color: levelInfo.color,\r\n        icon: levelInfo.icon,\r\n        hasProgress: progress > 0,\r\n        hasStarted: started,\r\n      };\r\n    });\r\n  }, [getLevelProgress, hasProgress]);\r\n\r\n  return { currentUserLevel, currentLevelData, levels };\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}