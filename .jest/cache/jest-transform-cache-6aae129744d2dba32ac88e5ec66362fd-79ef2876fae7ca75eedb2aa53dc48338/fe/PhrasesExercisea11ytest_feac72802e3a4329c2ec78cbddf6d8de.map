{"version":3,"names":["_getJestObj","mock","router","push","jest","fn","useFocusEffect","getLevelColor","getPhrasesData","categories","id","name","phrases","categoryId","text","loadPhrasesData","_asyncToGenerator2","default","__esModule","categoryIndex","phraseIndex","showTranslation","completedPhrases","loaded","showDetailedProgress","currentPhrase","currentPhrases","totalPhrasesInCategory","hasValidData","changeCategory","toggleTranslation","toggleDetailedProgress","handleNext","completed","handlePrevious","canGoToPrevious","isLastPhraseInCategory","stats","completionProgress","completedPhrasesCount","display","_interopRequireDefault","require","_react","_reactNative","_phrases","_jsxRuntime","_require","describe","it","params","level","_render","render","jsx","route","getAllByRole","buttons","expect","length","toBeGreaterThan"],"sources":["PhrasesExercise.a11y.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport PhrasesExercise from '../../src/screens/exercises/phrases';\r\n\r\njest.mock('expo-router', () => ({ router: { push: jest.fn() }, useFocusEffect: jest.fn(() => {}) }));\r\n\r\njest.mock('../../src/utils/phrases/phrasesDataHelper', () => ({\r\n  getLevelColor: jest.fn(() => '#007AFF'),\r\n  getPhrasesData: jest.fn(() => ({\r\n    categories: [{ id: 0, name: 'Greetings' }],\r\n    phrases: [{ categoryId: 0, text: 'Hello' }]\r\n  })),\r\n  loadPhrasesData: jest.fn(async () => ({\r\n    categories: [{ id: 0, name: 'Greetings' }],\r\n    phrases: [{ categoryId: 0, text: 'Hello' }]\r\n  })),\r\n}));\r\n\r\njest.mock('../../src/screens/exercises/phrases/hooks/usePhrases', () => ({\r\n  __esModule: true,\r\n  default: jest.fn(() => ({\r\n    categoryIndex: 0,\r\n    phraseIndex: 0,\r\n    showTranslation: false,\r\n    completedPhrases: {},\r\n    loaded: true,\r\n    showDetailedProgress: false,\r\n    currentPhrase: { text: 'Hello' },\r\n    currentPhrases: [{ text: 'Hello' }],\r\n    totalPhrasesInCategory: 1,\r\n    hasValidData: true,\r\n    changeCategory: jest.fn(),\r\n    toggleTranslation: jest.fn(),\r\n    toggleDetailedProgress: jest.fn(),\r\n    handleNext: jest.fn(() => ({ completed: false })),\r\n    handlePrevious: jest.fn(),\r\n    canGoToPrevious: false,\r\n    isLastPhraseInCategory: false,\r\n    stats: { completionProgress: 0, completedPhrasesCount: 0 },\r\n    display: { categories: [{ name: 'Greetings' }] },\r\n  })),\r\n}));\r\n\r\ndescribe('PhrasesExercise accessibility', () => {\r\n  it('should render navigation buttons as role button', () => {\r\n    const params = { level: '1' };\r\n    const { getAllByRole } = render(<PhrasesExercise route={{ params }} />);\r\n    const buttons = getAllByRole('button');\r\n    expect(buttons.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}