7044239911c5754f86e8fb7895d226d0
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addHTMLMutationObserver = addHTMLMutationObserver;
exports.areDOMRectsEqual = areDOMRectsEqual;
exports.configureWebLayoutAnimations = configureWebLayoutAnimations;
exports.insertWebAnimation = insertWebAnimation;
exports.scheduleAnimationCleanup = scheduleAnimationCleanup;
var _PlatformChecker = require("../../PlatformChecker.js");
var _componentStyle = require("./componentStyle.js");
var _config = require("./config.js");
var _index = require("../../logger/index.js");
var _errors = require("../../errors.js");
var PREDEFINED_WEB_ANIMATIONS_ID = 'ReanimatedPredefinedWebAnimationsStyle';
var CUSTOM_WEB_ANIMATIONS_ID = 'ReanimatedCustomWebAnimationsStyle';
var animationNameToIndex = new Map();
var animationNameList = [];
var isObserverSet = false;
function configureWebLayoutAnimations() {
  if (!(0, _PlatformChecker.isWindowAvailable)() || document.getElementById(PREDEFINED_WEB_ANIMATIONS_ID) !== null) {
    return;
  }
  var predefinedAnimationsStyleTag = document.createElement('style');
  predefinedAnimationsStyleTag.id = PREDEFINED_WEB_ANIMATIONS_ID;
  predefinedAnimationsStyleTag.onload = function () {
    if (!predefinedAnimationsStyleTag.sheet) {
      _index.logger.error('Failed to create layout animations stylesheet.');
      return;
    }
    for (var animationName in _config.Animations) {
      predefinedAnimationsStyleTag.sheet.insertRule(_config.Animations[animationName].style);
    }
  };
  var customAnimationsStyleTag = document.createElement('style');
  customAnimationsStyleTag.id = CUSTOM_WEB_ANIMATIONS_ID;
  document.head.appendChild(predefinedAnimationsStyleTag);
  document.head.appendChild(customAnimationsStyleTag);
}
function insertWebAnimation(animationName, keyframe) {
  if (!(0, _PlatformChecker.isWindowAvailable)()) {
    return;
  }
  var styleTag = document.getElementById(CUSTOM_WEB_ANIMATIONS_ID);
  if (!styleTag.sheet) {
    _index.logger.error('Failed to create layout animations stylesheet.');
    return;
  }
  styleTag.sheet.insertRule(keyframe, 0);
  animationNameList.unshift(animationName);
  animationNameToIndex.set(animationName, 0);
  for (var i = 1; i < animationNameList.length; ++i) {
    var nextAnimationName = animationNameList[i];
    var nextAnimationIndex = animationNameToIndex.get(nextAnimationName);
    if (nextAnimationIndex === undefined) {
      throw new _errors.ReanimatedError('Failed to obtain animation index.');
    }
    animationNameToIndex.set(animationNameList[i], nextAnimationIndex + 1);
  }
}
function removeWebAnimation(animationName, animationRemoveCallback) {
  var _styleTag$sheet;
  if (!(0, _PlatformChecker.isWindowAvailable)()) {
    return;
  }
  var styleTag = document.getElementById(CUSTOM_WEB_ANIMATIONS_ID);
  var currentAnimationIndex = animationNameToIndex.get(animationName);
  if (currentAnimationIndex === undefined) {
    throw new _errors.ReanimatedError('Failed to obtain animation index.');
  }
  animationRemoveCallback();
  (_styleTag$sheet = styleTag.sheet) == null || _styleTag$sheet.deleteRule(currentAnimationIndex);
  animationNameList.splice(currentAnimationIndex, 1);
  animationNameToIndex.delete(animationName);
  for (var i = currentAnimationIndex; i < animationNameList.length; ++i) {
    var nextAnimationName = animationNameList[i];
    var nextAnimationIndex = animationNameToIndex.get(nextAnimationName);
    if (nextAnimationIndex === undefined) {
      throw new _errors.ReanimatedError('Failed to obtain animation index.');
    }
    animationNameToIndex.set(animationNameList[i], nextAnimationIndex - 1);
  }
}
var timeoutScale = 1.25;
var frameDurationMs = 16;
var minimumFrames = 10;
function scheduleAnimationCleanup(animationName, animationDuration, animationRemoveCallback) {
  var timeoutValue = Math.max(animationDuration * timeoutScale * 1000, animationDuration + frameDurationMs * minimumFrames);
  setTimeout(function () {
    return removeWebAnimation(animationName, animationRemoveCallback);
  }, timeoutValue);
}
function reattachElementToAncestor(child, parent) {
  var childSnapshot = _componentStyle.snapshots.get(child);
  if (!childSnapshot) {
    _index.logger.error('Failed to obtain snapshot.');
    return;
  }
  child.removedAfterAnimation = true;
  parent.appendChild(child);
  (0, _componentStyle.setElementPosition)(child, childSnapshot);
  var originalOnAnimationEnd = child.onanimationend;
  child.onanimationend = function (event) {
    parent.removeChild(child);
    originalOnAnimationEnd == null || originalOnAnimationEnd.call(this, event);
  };
}
function findDescendantWithExitingAnimation(node, root) {
  if (!(node instanceof HTMLElement)) {
    return;
  }
  if (node.reanimatedDummy && node.removedAfterAnimation === undefined) {
    reattachElementToAncestor(node, root);
  }
  var children = Array.from(node.children);
  for (var i = 0; i < children.length; ++i) {
    findDescendantWithExitingAnimation(children[i], root);
  }
}
function checkIfScreenWasChanged(mutationTarget) {
  var _mutationTarget$react;
  var reactFiberKey = '__reactFiber';
  for (var key of Object.keys(mutationTarget)) {
    if (key.startsWith('__reactFiber')) {
      reactFiberKey = key;
      break;
    }
  }
  return ((_mutationTarget$react = mutationTarget[reactFiberKey]) == null || (_mutationTarget$react = _mutationTarget$react.child) == null || (_mutationTarget$react = _mutationTarget$react.memoizedProps) == null ? void 0 : _mutationTarget$react.navigation) !== undefined;
}
function addHTMLMutationObserver() {
  if (isObserverSet || !(0, _PlatformChecker.isWindowAvailable)()) {
    return;
  }
  isObserverSet = true;
  var observer = new MutationObserver(function (mutationsList) {
    var rootMutation = mutationsList[mutationsList.length - 1];
    if (checkIfScreenWasChanged(rootMutation.target)) {
      return;
    }
    for (var i = 0; i < rootMutation.removedNodes.length; ++i) {
      findDescendantWithExitingAnimation(rootMutation.removedNodes[i], rootMutation.target);
    }
  });
  observer.observe(document.body, {
    childList: true,
    subtree: true
  });
}
function areDOMRectsEqual(r1, r2) {
  return r1.x === r2.x && r1.y === r2.y && r1.width === r2.width && r1.height === r2.height;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,