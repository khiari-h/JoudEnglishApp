8c2e4b343e2c5469bee18a61ec729d14
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactNative = require("react-native");
var _native = require("@react-navigation/native");
var _expoRouter = require("expo-router");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Container = _interopRequireWildcard(require("../../../components/layout/Container"));
var _GrammarHeader = _interopRequireDefault(require("./GrammarHeader"));
var _GrammarRuleSelector = _interopRequireDefault(require("./GrammarRuleSelector"));
var _GrammarProgress = _interopRequireDefault(require("./GrammarProgress"));
var _GrammarRuleContent = _interopRequireDefault(require("./GrammarRuleContent"));
var _GrammarExerciceRenderer = _interopRequireDefault(require("./GrammarExerciceRenderer"));
var _GrammarFeedback = _interopRequireDefault(require("./GrammarFeedback"));
var _GrammarNavigation = _interopRequireDefault(require("./GrammarNavigation"));
var _useGrammar = _interopRequireDefault(require("./hooks/useGrammar"));
var _grammarDataHelper = require("../../../utils/grammar/grammarDataHelper");
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_1mx66fnjdn() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\index.js";
  var hash = "00a23e18af00a12b238866ed9407c9b03042d5a3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\grammar\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 235,
          column: 1
        }
      },
      "1": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 34,
          column: 36
        }
      },
      "2": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "3": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 36,
          column: 31
        }
      },
      "4": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 63,
          column: 36
        }
      },
      "5": {
        start: {
          line: 66,
          column: 21
        },
        end: {
          line: 66,
          column: 65
        }
      },
      "6": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 66,
          column: 55
        }
      },
      "7": {
        start: {
          line: 67,
          column: 40
        },
        end: {
          line: 67,
          column: 52
        }
      },
      "8": {
        start: {
          line: 69,
          column: 2
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "9": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 24
        }
      },
      "10": {
        start: {
          line: 71,
          column: 17
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "11": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "12": {
        start: {
          line: 73,
          column: 21
        },
        end: {
          line: 73,
          column: 42
        }
      },
      "13": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 44
        }
      },
      "14": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 74,
          column: 44
        }
      },
      "15": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 15
        }
      },
      "16": {
        start: {
          line: 77,
          column: 19
        },
        end: {
          line: 77,
          column: 47
        }
      },
      "17": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 42
        }
      },
      "18": {
        start: {
          line: 78,
          column: 21
        },
        end: {
          line: 78,
          column: 42
        }
      },
      "19": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "20": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 40
        }
      },
      "21": {
        start: {
          line: 81,
          column: 19
        },
        end: {
          line: 81,
          column: 37
        }
      },
      "22": {
        start: {
          line: 85,
          column: 26
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "23": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "24": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 94,
          column: 20
        }
      },
      "25": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 19
        }
      },
      "26": {
        start: {
          line: 96,
          column: 29
        },
        end: {
          line: 101,
          column: 32
        }
      },
      "27": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "28": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 99,
          column: 26
        }
      },
      "29": {
        start: {
          line: 103,
          column: 33
        },
        end: {
          line: 105,
          column: 24
        }
      },
      "30": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 23
        }
      },
      "31": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 109,
          column: 21
        }
      },
      "32": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 20
        }
      },
      "33": {
        start: {
          line: 111,
          column: 29
        },
        end: {
          line: 113,
          column: 26
        }
      },
      "34": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 25
        }
      },
      "35": {
        start: {
          line: 115,
          column: 27
        },
        end: {
          line: 117,
          column: 18
        }
      },
      "36": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 22
        }
      },
      "37": {
        start: {
          line: 119,
          column: 34
        },
        end: {
          line: 121,
          column: 18
        }
      },
      "38": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 22
        }
      },
      "39": {
        start: {
          line: 123,
          column: 38
        },
        end: {
          line: 125,
          column: 30
        }
      },
      "40": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 29
        }
      },
      "41": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 130,
          column: 34
        }
      },
      "42": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 42
        }
      },
      "43": {
        start: {
          line: 133,
          column: 2
        },
        end: {
          line: 146,
          column: 3
        }
      },
      "44": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 145,
          column: 6
        }
      },
      "45": {
        start: {
          line: 148,
          column: 2
        },
        end: {
          line: 234,
          column: 4
        }
      },
      "46": {
        start: {
          line: 238,
          column: 0
        },
        end: {
          line: 244,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 25
          }
        },
        loc: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 235,
            column: 1
          }
        },
        line: 33
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 66,
            column: 30
          }
        },
        loc: {
          start: {
            line: 66,
            column: 35
          },
          end: {
            line: 66,
            column: 55
          }
        },
        line: 66
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        loc: {
          start: {
            line: 69,
            column: 18
          },
          end: {
            line: 82,
            column: 3
          }
        },
        line: 69
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 71,
            column: 17
          },
          end: {
            line: 71,
            column: 18
          }
        },
        loc: {
          start: {
            line: 71,
            column: 29
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 71
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 81,
            column: 11
          },
          end: {
            line: 81,
            column: 12
          }
        },
        loc: {
          start: {
            line: 81,
            column: 17
          },
          end: {
            line: 81,
            column: 39
          }
        },
        line: 81
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 85,
            column: 38
          },
          end: {
            line: 85,
            column: 39
          }
        },
        loc: {
          start: {
            line: 85,
            column: 44
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 85
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 92,
            column: 40
          },
          end: {
            line: 92,
            column: 41
          }
        },
        loc: {
          start: {
            line: 92,
            column: 46
          },
          end: {
            line: 94,
            column: 3
          }
        },
        line: 92
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 96,
            column: 42
          }
        },
        loc: {
          start: {
            line: 96,
            column: 47
          },
          end: {
            line: 101,
            column: 3
          }
        },
        line: 96
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 103,
            column: 45
          },
          end: {
            line: 103,
            column: 46
          }
        },
        loc: {
          start: {
            line: 103,
            column: 51
          },
          end: {
            line: 105,
            column: 3
          }
        },
        line: 103
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 107,
            column: 42
          },
          end: {
            line: 107,
            column: 43
          }
        },
        loc: {
          start: {
            line: 107,
            column: 48
          },
          end: {
            line: 109,
            column: 3
          }
        },
        line: 107
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 111,
            column: 41
          },
          end: {
            line: 111,
            column: 42
          }
        },
        loc: {
          start: {
            line: 111,
            column: 47
          },
          end: {
            line: 113,
            column: 3
          }
        },
        line: 111
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 115,
            column: 39
          },
          end: {
            line: 115,
            column: 40
          }
        },
        loc: {
          start: {
            line: 115,
            column: 50
          },
          end: {
            line: 117,
            column: 3
          }
        },
        line: 115
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 119,
            column: 46
          },
          end: {
            line: 119,
            column: 47
          }
        },
        loc: {
          start: {
            line: 119,
            column: 57
          },
          end: {
            line: 121,
            column: 3
          }
        },
        line: 119
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 123,
            column: 50
          },
          end: {
            line: 123,
            column: 51
          }
        },
        loc: {
          start: {
            line: 123,
            column: 56
          },
          end: {
            line: 125,
            column: 3
          }
        },
        line: 123
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 128,
            column: 28
          },
          end: {
            line: 128,
            column: 29
          }
        },
        loc: {
          start: {
            line: 128,
            column: 34
          },
          end: {
            line: 130,
            column: 3
          }
        },
        line: 128
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 10
          },
          end: {
            line: 35,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 18
          },
          end: {
            line: 35,
            column: 22
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 35,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 35,
            column: 40
          }
        }, {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 35,
            column: 46
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 6
          },
          end: {
            line: 76,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 6
          },
          end: {
            line: 76,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 74,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 74,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "4": {
        loc: {
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 78,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 78,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "5": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "6": {
        loc: {
          start: {
            line: 129,
            column: 11
          },
          end: {
            line: 129,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 11
          },
          end: {
            line: 129,
            column: 18
          }
        }, {
          start: {
            line: 129,
            column: 22
          },
          end: {
            line: 129,
            column: 41
          }
        }],
        line: 129
      },
      "7": {
        loc: {
          start: {
            line: 133,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "8": {
        loc: {
          start: {
            line: 192,
            column: 7
          },
          end: {
            line: 206,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 7
          },
          end: {
            line: 192,
            column: 22
          }
        }, {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 205,
            column: 15
          }
        }],
        line: 192
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "00a23e18af00a12b238866ed9407c9b03042d5a3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1mx66fnjdn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mx66fnjdn();
cov_1mx66fnjdn().s[0]++;
var GrammarExercise = function GrammarExercise(_ref) {
  var route = _ref.route;
  cov_1mx66fnjdn().f[0]++;
  var navigation = (cov_1mx66fnjdn().s[1]++, (0, _native.useNavigation)());
  var _ref2 = (cov_1mx66fnjdn().s[2]++, (cov_1mx66fnjdn().b[1][0]++, route == null ? void 0 : route.params) || (cov_1mx66fnjdn().b[1][1]++, {})),
    _ref2$level = _ref2.level,
    level = _ref2$level === void 0 ? (cov_1mx66fnjdn().b[0][0]++, "A1") : _ref2$level;
  var styles = (cov_1mx66fnjdn().s[3]++, (0, _style.default)());
  var _ref3 = (cov_1mx66fnjdn().s[4]++, (0, _useGrammar.default)(grammarData, level)),
    ruleIndex = _ref3.ruleIndex,
    exerciseIndex = _ref3.exerciseIndex,
    selectedOption = _ref3.selectedOption,
    setSelectedOption = _ref3.setSelectedOption,
    inputText = _ref3.inputText,
    setInputText = _ref3.setInputText,
    showFeedback = _ref3.showFeedback,
    isCorrect = _ref3.isCorrect,
    attempts = _ref3.attempts,
    completedExercises = _ref3.completedExercises,
    loaded = _ref3.loaded,
    showDetailedProgress = _ref3.showDetailedProgress,
    currentRule = _ref3.currentRule,
    currentExercise = _ref3.currentExercise,
    canCheckAnswer = _ref3.canCheckAnswer,
    isFirstExercise = _ref3.isFirstExercise,
    isLastExercise = _ref3.isLastExercise,
    changeRule = _ref3.changeRule,
    submitAnswer = _ref3.submitAnswer,
    nextExercise = _ref3.nextExercise,
    previousExercise = _ref3.previousExercise,
    retryExercise = _ref3.retryExercise,
    toggleDetailedProgress = _ref3.toggleDetailedProgress;
  var levelColor = (cov_1mx66fnjdn().s[5]++, (0, _react.useMemo)(function () {
    cov_1mx66fnjdn().f[1]++;
    cov_1mx66fnjdn().s[6]++;
    return (0, _grammarDataHelper.getLevelColor)(level);
  }, [level]));
  var _ref4 = (cov_1mx66fnjdn().s[7]++, (0, _react.useState)([])),
    _ref5 = (0, _slicedToArray2.default)(_ref4, 2),
    grammarData = _ref5[0],
    setGrammarData = _ref5[1];
  cov_1mx66fnjdn().s[8]++;
  (0, _react.useEffect)(function () {
    cov_1mx66fnjdn().f[2]++;
    var isMounted = (cov_1mx66fnjdn().s[9]++, true);
    cov_1mx66fnjdn().s[10]++;
    var load = function () {
      var _ref6 = (0, _asyncToGenerator2.default)(function* () {
        cov_1mx66fnjdn().f[3]++;
        cov_1mx66fnjdn().s[11]++;
        if (process.env.JEST_WORKER_ID) {
          cov_1mx66fnjdn().b[2][0]++;
          var _data = (cov_1mx66fnjdn().s[12]++, (0, _grammarDataHelper.getGrammarData)(level));
          cov_1mx66fnjdn().s[13]++;
          if (isMounted) {
            cov_1mx66fnjdn().b[3][0]++;
            cov_1mx66fnjdn().s[14]++;
            setGrammarData(_data);
          } else {
            cov_1mx66fnjdn().b[3][1]++;
          }
          cov_1mx66fnjdn().s[15]++;
          return;
        } else {
          cov_1mx66fnjdn().b[2][1]++;
        }
        var data = (cov_1mx66fnjdn().s[16]++, yield (0, _grammarDataHelper.loadGrammarData)(level));
        cov_1mx66fnjdn().s[17]++;
        if (isMounted) {
          cov_1mx66fnjdn().b[4][0]++;
          cov_1mx66fnjdn().s[18]++;
          setGrammarData(data);
        } else {
          cov_1mx66fnjdn().b[4][1]++;
        }
      });
      return function load() {
        return _ref6.apply(this, arguments);
      };
    }();
    cov_1mx66fnjdn().s[19]++;
    load();
    cov_1mx66fnjdn().s[20]++;
    return function () {
      cov_1mx66fnjdn().f[4]++;
      cov_1mx66fnjdn().s[21]++;
      isMounted = false;
    };
  }, [level]);
  var handleBackPress = (cov_1mx66fnjdn().s[22]++, (0, _react.useCallback)(function () {
    cov_1mx66fnjdn().f[5]++;
    cov_1mx66fnjdn().s[23]++;
    _expoRouter.router.push({
      pathname: "/tabs/exerciseSelection",
      params: {
        level: level
      }
    });
  }, [level]));
  var handleCheckAnswer = (cov_1mx66fnjdn().s[24]++, (0, _react.useCallback)(function () {
    cov_1mx66fnjdn().f[6]++;
    cov_1mx66fnjdn().s[25]++;
    submitAnswer();
  }, [submitAnswer]));
  var handleNextExercise = (cov_1mx66fnjdn().s[26]++, (0, _react.useCallback)(function () {
    cov_1mx66fnjdn().f[7]++;
    cov_1mx66fnjdn().s[27]++;
    if (!nextExercise()) {
      cov_1mx66fnjdn().b[5][0]++;
      cov_1mx66fnjdn().s[28]++;
      navigation.goBack();
    } else {
      cov_1mx66fnjdn().b[5][1]++;
    }
  }, [nextExercise, navigation]));
  var handlePreviousExercise = (cov_1mx66fnjdn().s[29]++, (0, _react.useCallback)(function () {
    cov_1mx66fnjdn().f[8]++;
    cov_1mx66fnjdn().s[30]++;
    previousExercise();
  }, [previousExercise]));
  var handleRetryExercise = (cov_1mx66fnjdn().s[31]++, (0, _react.useCallback)(function () {
    cov_1mx66fnjdn().f[9]++;
    cov_1mx66fnjdn().s[32]++;
    retryExercise();
  }, [retryExercise]));
  var handleSkipExercise = (cov_1mx66fnjdn().s[33]++, (0, _react.useCallback)(function () {
    cov_1mx66fnjdn().f[10]++;
    cov_1mx66fnjdn().s[34]++;
    handleNextExercise();
  }, [handleNextExercise]));
  var handleRuleChange = (cov_1mx66fnjdn().s[35]++, (0, _react.useCallback)(function (index) {
    cov_1mx66fnjdn().f[11]++;
    cov_1mx66fnjdn().s[36]++;
    changeRule(index);
  }, [changeRule]));
  var handleRuleProgressPress = (cov_1mx66fnjdn().s[37]++, (0, _react.useCallback)(function (index) {
    cov_1mx66fnjdn().f[12]++;
    cov_1mx66fnjdn().s[38]++;
    changeRule(index);
  }, [changeRule]));
  var handleToggleProgressDetails = (cov_1mx66fnjdn().s[39]++, (0, _react.useCallback)(function () {
    cov_1mx66fnjdn().f[13]++;
    cov_1mx66fnjdn().s[40]++;
    toggleDetailedProgress();
  }, [toggleDetailedProgress]));
  var isLoading = (cov_1mx66fnjdn().s[41]++, (0, _react.useMemo)(function () {
    cov_1mx66fnjdn().f[14]++;
    cov_1mx66fnjdn().s[42]++;
    return (cov_1mx66fnjdn().b[6][0]++, !loaded) || (cov_1mx66fnjdn().b[6][1]++, !grammarData.length);
  }, [loaded, grammarData.length]));
  cov_1mx66fnjdn().s[43]++;
  if (isLoading) {
    cov_1mx66fnjdn().b[7][0]++;
    cov_1mx66fnjdn().s[44]++;
    return (0, _jsxRuntime.jsx)(_Container.default, {
      safeArea: true,
      safeAreaEdges: _Container.CONTAINER_SAFE_EDGES.ALL,
      backgroundColor: "#f8fafc",
      statusBarStyle: "dark-content",
      children: (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.loadingContainer,
        children: (0, _jsxRuntime.jsx)(_reactNative.ActivityIndicator, {
          size: "large",
          color: levelColor,
          testID: "activity-indicator"
        })
      })
    });
  } else {
    cov_1mx66fnjdn().b[7][1]++;
  }
  cov_1mx66fnjdn().s[45]++;
  return (0, _jsxRuntime.jsxs)(_Container.default, {
    safeArea: true,
    safeAreaEdges: _Container.CONTAINER_SAFE_EDGES.ALL,
    withScrollView: true,
    backgroundColor: "#f8fafc",
    statusBarStyle: "dark-content",
    withPadding: false,
    scrollViewProps: {
      showsVerticalScrollIndicator: false,
      contentContainerStyle: styles.scrollContent
    },
    children: [(0, _jsxRuntime.jsx)(_GrammarHeader.default, {
      level: level,
      onBackPress: handleBackPress
    }), (0, _jsxRuntime.jsx)(_GrammarRuleSelector.default, {
      rules: grammarData,
      selectedIndex: ruleIndex,
      onSelectRule: handleRuleChange,
      levelColor: levelColor
    }), (0, _jsxRuntime.jsx)(_GrammarProgress.default, {
      grammarData: grammarData,
      completedExercises: completedExercises,
      levelColor: levelColor,
      expanded: showDetailedProgress,
      onToggleExpand: handleToggleProgressDetails,
      onRulePress: handleRuleProgressPress
    }), (0, _jsxRuntime.jsx)(_GrammarRuleContent.default, {
      rule: currentRule,
      levelColor: levelColor
    }), (cov_1mx66fnjdn().b[8][0]++, currentExercise) && (cov_1mx66fnjdn().b[8][1]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
      children: (0, _jsxRuntime.jsx)(_GrammarExerciceRenderer.default, {
        exercise: currentExercise,
        selectedOption: selectedOption,
        setSelectedOption: setSelectedOption,
        inputText: inputText,
        setInputText: setInputText,
        showFeedback: showFeedback,
        isCorrect: isCorrect,
        exerciseIndex: exerciseIndex,
        attempts: attempts
      })
    }, `exercise-${exerciseIndex}-${attempts}`)), (0, _jsxRuntime.jsx)(_GrammarFeedback.default, {
      isVisible: showFeedback,
      isCorrect: isCorrect,
      explanation: currentExercise == null ? void 0 : currentExercise.explanation,
      correctAnswer: currentExercise == null ? void 0 : currentExercise.answer,
      attempts: attempts
    }), (0, _jsxRuntime.jsx)(_GrammarNavigation.default, {
      testID: "grammar-navigation",
      showFeedback: showFeedback,
      isCorrect: isCorrect,
      canCheckAnswer: canCheckAnswer,
      onCheckAnswer: handleCheckAnswer,
      onPreviousExercise: handlePreviousExercise,
      onNextExercise: handleNextExercise,
      onRetryExercise: handleRetryExercise,
      onSkipExercise: handleSkipExercise,
      isFirstExercise: isFirstExercise,
      isLastExercise: isLastExercise,
      attempts: attempts,
      levelColor: levelColor
    })]
  });
};
cov_1mx66fnjdn().s[46]++;
GrammarExercise.propTypes = {
  route: _propTypes.default.shape({
    params: _propTypes.default.shape({
      level: _propTypes.default.string.isRequired
    })
  }).isRequired
};
var _default = exports.default = GrammarExercise;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,