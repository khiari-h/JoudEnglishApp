{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","makeShareableCloneOnUIRecursive","makeShareable","makeShareableCloneRecursive","_slicedToArray2","_NativeReanimated","_commonTypes","_PlatformChecker","_errors","_jsVersion","_shareableMappingCache","_logger","SHOULD_BE_USE_WEB","shouldBeUseWeb","MAGIC_KEY","_worklet_613424034394_init_data","code","location","sourceMap","version","isHostObject","_e","global","Error","__closure","__workletHash","__initData","__stackDetails","isPlainJSObject","object","getPrototypeOf","prototype","_worklet_9702693387857_init_data","INACCESSIBLE_OBJECT","__init","shareablesTs2","Proxy","get","_","prop","ReanimatedError","String","set","VALID_ARRAY_VIEWS_NAMES","DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD","processedObjectAtThresholdDepth","_worklet_2697482436430_init_data","_worklet_11559130916616_init_data","_worklet_668559731389_init_data","_worklet_13613282510746_init_data","shouldPersistRemote","arguments","length","undefined","depth","type","isTypeObject","isTypeFunction","cached","shareableMappingCache","shareableMappingFlag","toAdapt","Array","isArray","map","element","freezeObjectIfDev","isWorkletFunction","__workletContextObjectFactory","workletContextObjectFactory","handle","shareablesTs3","__DEV__","babelVersion","jsVersion","getWorkletCode","registerWorkletStackDetails","_ref","entries","_ref2","default","key","RegExp","pattern","source","flags","shareablesTs4","name","message","stack","shareablesTs5","error","ArrayBuffer","isView","buffer","typeName","constructor","shareablesTs6","includes","inaccessibleObject","adapted","NativeReanimatedModule","makeShareableClone","WORKLET_CODE_THRESHOLD","_value$__initData","substring","_worklet_4172653887548_init_data","isRemoteFunction","__remoteFunction","forEach","_ref3","_ref4","descriptor","getOwnPropertyDescriptor","configurable","logger","warn","preventExtensions","_worklet_11102795333770_init_data","cloneRecursive","_makeShareableClone","_ref5","_ref6","makeShareableJS","_worklet_13060559198821_init_data","makeShareableNative","shareablesTs9"],"sources":["shareables.ts"],"sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isWorkletFunction } from './commonTypes';\nimport type {\n  ShareableRef,\n  FlatShareableRef,\n  WorkletFunction,\n} from './commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { ReanimatedError, registerWorkletStackDetails } from './errors';\nimport { jsVersion } from './platform-specific/jsVersion';\nimport {\n  shareableMappingCache,\n  shareableMappingFlag,\n} from './shareableMappingCache';\nimport { logger } from './logger';\n\n// for web/chrome debugger/jest environments this file provides a stub implementation\n// where no shareable references are used. Instead, the objects themselves are used\n// instead of shareable references, because of the fact that we don't have to deal with\n// running the code on separate VMs.\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nconst MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\n\nfunction isHostObject(value: NonNullable<object>) {\n  'worklet';\n  // We could use JSI to determine whether an object is a host object, however\n  // the below workaround works well and is way faster than an additional JSI call.\n  // We use the fact that host objects have broken implementation of `hasOwnProperty`\n  // and hence return true for all `in` checks regardless of the key we ask for.\n  return MAGIC_KEY in value;\n}\n\nfunction isPlainJSObject(object: object) {\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\n\n// The below object is used as a replacement for objects that cannot be transferred\n// as shareable values. In makeShareableCloneRecursive we detect if an object is of\n// a plain Object.prototype and only allow such objects to be transferred. This lets\n// us avoid all sorts of react internals from leaking into the UI runtime. To make it\n// possible to catch errors when someone actually tries to access such object on the UI\n// runtime, we use the below Proxy object which is instantiated on the UI runtime and\n// throws whenever someone tries to access its fields.\nconst INACCESSIBLE_OBJECT = {\n  __init: () => {\n    'worklet';\n    return new Proxy(\n      {},\n      {\n        get: (_: unknown, prop: string | symbol) => {\n          if (\n            prop === '_isReanimatedSharedValue' ||\n            prop === '__remoteFunction'\n          ) {\n            // not very happy about this check here, but we need to allow for\n            // \"inaccessible\" objects to be tested with isSharedValue check\n            // as it is being used in the mappers when extracting inputs recursively\n            // as well as with isRemoteFunction when cloning objects recursively.\n            // Apparently we can't check if a key exists there as HostObjects always\n            // return true for such tests, so the only possibility for us is to\n            // actually access that key and see if it is set to true. We therefore\n            // need to allow for this key to be accessed here.\n            return false;\n          }\n          throw new ReanimatedError(\n            `Trying to access property \\`${String(\n              prop\n            )}\\` of an object which cannot be sent to the UI runtime.`\n          );\n        },\n        set: () => {\n          throw new ReanimatedError(\n            'Trying to write to an object which cannot be sent to the UI runtime.'\n          );\n        },\n      }\n    );\n  },\n};\n\nconst VALID_ARRAY_VIEWS_NAMES = [\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array',\n  'DataView',\n];\n\nconst DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\n// Below variable stores object that we process in makeShareableCloneRecursive at the specified depth.\n// We use it to check if later on the function reenters with the same object\nlet processedObjectAtThresholdDepth: unknown;\n\nexport function makeShareableCloneRecursive<T>(\n  value: any,\n  shouldPersistRemote = false,\n  depth = 0\n): ShareableRef<T> {\n  if (SHOULD_BE_USE_WEB) {\n    return value;\n  }\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    // if we reach certain recursion depth we suspect that we are dealing with a cyclic object.\n    // this type of objects are not supported and cannot be transferred as shareable, so we\n    // implement a simple detection mechanism that remembers the value at a given depth and\n    // tests whether we try reenter this method later on with the same value. If that happens\n    // we throw an appropriate error.\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new ReanimatedError(\n        'Trying to convert a cyclic object to a shareable. This is not supported.'\n      );\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n  // This one actually may be worth to be moved to c++, we also need similar logic to run on the UI thread\n  const type = typeof value;\n  const isTypeObject = type === 'object';\n  const isTypeFunction = type === 'function';\n  if ((isTypeObject || isTypeFunction) && value !== null) {\n    const cached = shareableMappingCache.get(value);\n    if (cached === shareableMappingFlag) {\n      return value;\n    } else if (cached !== undefined) {\n      return cached as ShareableRef<T>;\n    } else {\n      let toAdapt: any;\n      if (Array.isArray(value)) {\n        toAdapt = value.map((element) =>\n          makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1)\n        );\n        freezeObjectIfDev(value);\n      } else if (isTypeFunction && !isWorkletFunction(value)) {\n        // this is a remote function\n        toAdapt = value;\n        freezeObjectIfDev(value);\n      } else if (isHostObject(value)) {\n        // for host objects we pass the reference to the object as shareable and\n        // then recreate new host object wrapping the same instance on the UI thread.\n        // there is no point of iterating over keys as we do for regular objects.\n        toAdapt = value;\n      } else if (\n        isPlainJSObject(value) &&\n        value.__workletContextObjectFactory\n      ) {\n        const workletContextObjectFactory = value.__workletContextObjectFactory;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            return workletContextObjectFactory();\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (isPlainJSObject(value) || isTypeFunction) {\n        toAdapt = {};\n        if (isWorkletFunction(value)) {\n          if (__DEV__) {\n            const babelVersion = value.__initData.version;\n            if (babelVersion !== undefined && babelVersion !== jsVersion) {\n              throw new ReanimatedError(`Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${babelVersion}).        \nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-reanimated-babel-plugin-version\\` for more details.\nOffending code was: \\`${getWorkletCode(value)}\\``);\n            }\n            registerWorkletStackDetails(\n              value.__workletHash,\n              value.__stackDetails!\n            );\n          }\n          if (value.__stackDetails) {\n            // `Error` type of value cannot be copied to the UI thread, so we\n            // remove it after we handled it in dev mode or delete it to ignore it in production mode.\n            // Not removing this would cause an infinite loop in production mode and it just\n            // seems more elegant to handle it this way.\n            delete value.__stackDetails;\n          }\n          // to save on transferring static __initData field of worklet structure\n          // we request shareable value to persist its UI counterpart. This means\n          // that the __initData field that contains long strings representing the\n          // worklet code, source map, and location, will always be\n          // serialized/deserialized once.\n          toAdapt.__initData = makeShareableCloneRecursive(\n            value.__initData,\n            true,\n            depth + 1\n          );\n        }\n\n        for (const [key, element] of Object.entries(value)) {\n          if (key === '__initData' && toAdapt.__initData !== undefined) {\n            continue;\n          }\n          toAdapt[key] = makeShareableCloneRecursive(\n            element,\n            shouldPersistRemote,\n            depth + 1\n          );\n        }\n        freezeObjectIfDev(value);\n      } else if (value instanceof RegExp) {\n        const pattern = value.source;\n        const flags = value.flags;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            return new RegExp(pattern, flags);\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (value instanceof Error) {\n        const { name, message, stack } = value;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            // eslint-disable-next-line reanimated/use-reanimated-error\n            const error = new Error();\n            error.name = name;\n            error.message = message;\n            error.stack = stack;\n            return error;\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (value instanceof ArrayBuffer) {\n        toAdapt = value;\n      } else if (ArrayBuffer.isView(value)) {\n        // typed array (e.g. Int32Array, Uint8ClampedArray) or DataView\n        const buffer = value.buffer;\n        const typeName = value.constructor.name;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            if (!VALID_ARRAY_VIEWS_NAMES.includes(typeName)) {\n              throw new ReanimatedError(\n                `Invalid array view name \\`${typeName}\\`.`\n              );\n            }\n            const constructor = global[typeName as keyof typeof global];\n            if (constructor === undefined) {\n              throw new ReanimatedError(\n                `Constructor for \\`${typeName}\\` not found.`\n              );\n            }\n            return new constructor(buffer);\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else {\n        // This is reached for object types that are not of plain Object.prototype.\n        // We don't support such objects from being transferred as shareables to\n        // the UI runtime and hence we replace them with \"inaccessible object\"\n        // which is implemented as a Proxy object that throws on any attempt\n        // of accessing its fields. We argue that such objects can sometimes leak\n        // as attributes of objects being captured by worklets but should never\n        // be used on the UI runtime regardless. If they are being accessed, the user\n        // will get an appropriate error message.\n        const inaccessibleObject =\n          makeShareableCloneRecursive<T>(INACCESSIBLE_OBJECT);\n        shareableMappingCache.set(value, inaccessibleObject);\n        return inaccessibleObject;\n      }\n      const adapted = NativeReanimatedModule.makeShareableClone(\n        toAdapt,\n        shouldPersistRemote,\n        value\n      );\n      shareableMappingCache.set(value, adapted);\n      shareableMappingCache.set(adapted);\n      return adapted;\n    }\n  }\n  return NativeReanimatedModule.makeShareableClone(\n    value,\n    shouldPersistRemote,\n    undefined\n  );\n}\n\nconst WORKLET_CODE_THRESHOLD = 255;\n\nfunction getWorkletCode(value: WorkletFunction) {\n  // @ts-ignore this is fine\n  const code = value?.__initData?.code;\n  if (!code) {\n    return 'unknown';\n  }\n  if (code.length > WORKLET_CODE_THRESHOLD) {\n    return `${code.substring(0, WORKLET_CODE_THRESHOLD)}...`;\n  }\n  return code;\n}\n\ntype RemoteFunction<T> = {\n  __remoteFunction: FlatShareableRef<T>;\n};\n\nfunction isRemoteFunction<T>(value: {\n  __remoteFunction?: unknown;\n}): value is RemoteFunction<T> {\n  'worklet';\n  return !!value.__remoteFunction;\n}\n\n/**\n * We freeze\n *\n * - Arrays,\n * - Remote functions,\n * - Plain JS objects,\n *\n * That are transformed to a shareable with a meaningful warning. This should\n * help detect issues when someone modifies data after it's been converted.\n * Meaning that they may be doing a faulty assumption in their code expecting\n * that the updates are going to automatically propagate to the object sent to\n * the UI thread. If the user really wants some objects to be mutable they\n * should use shared values instead.\n */\nfunction freezeObjectIfDev<T extends object>(value: T) {\n  if (!__DEV__) {\n    return;\n  }\n  Object.entries(value).forEach(([key, element]) => {\n    const descriptor = Object.getOwnPropertyDescriptor(value, key)!;\n    if (!descriptor.configurable) {\n      return;\n    }\n    Object.defineProperty(value, key, {\n      get() {\n        return element;\n      },\n      set() {\n        logger.warn(\n          `Tried to modify key \\`${key}\\` of an object which has been already passed to a worklet. See \nhttps://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-modify-key-of-an-object-which-has-been-converted-to-a-shareable \nfor more details.`\n        );\n      },\n    });\n  });\n  Object.preventExtensions(value);\n}\n\nexport function makeShareableCloneOnUIRecursive<T>(\n  value: T\n): FlatShareableRef<T> {\n  'worklet';\n  if (SHOULD_BE_USE_WEB) {\n    // @ts-ignore web is an interesting place where we don't run a secondary VM on the UI thread\n    // see more details in the comment where USE_STUB_IMPLEMENTATION is defined.\n    return value;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  function cloneRecursive(value: T): FlatShareableRef<T> {\n    if (\n      (typeof value === 'object' && value !== null) ||\n      typeof value === 'function'\n    ) {\n      if (isHostObject(value)) {\n        // We call `_makeShareableClone` to wrap the provided HostObject\n        // inside ShareableJSRef.\n        return global._makeShareableClone(\n          value,\n          undefined\n        ) as FlatShareableRef<T>;\n      }\n      if (isRemoteFunction<T>(value)) {\n        // RemoteFunctions are created by us therefore they are\n        // a Shareable out of the box and there is no need to\n        // call `_makeShareableClone`.\n        return value.__remoteFunction;\n      }\n      if (Array.isArray(value)) {\n        return global._makeShareableClone(\n          value.map(cloneRecursive),\n          undefined\n        ) as FlatShareableRef<T>;\n      }\n      const toAdapt: Record<string, FlatShareableRef<T>> = {};\n      for (const [key, element] of Object.entries(value)) {\n        toAdapt[key] = cloneRecursive(element);\n      }\n      return global._makeShareableClone(toAdapt, value) as FlatShareableRef<T>;\n    }\n    return global._makeShareableClone(value, undefined);\n  }\n  return cloneRecursive(value);\n}\n\nfunction makeShareableJS<T extends object>(value: T): T {\n  return value;\n}\n\nfunction makeShareableNative<T extends object>(value: T): T {\n  if (shareableMappingCache.get(value)) {\n    return value;\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return value;\n    },\n  });\n  shareableMappingCache.set(value, handle);\n  return value;\n}\n\n/**\n * This function creates a value on UI with persistent state - changes to it on\n * the UI thread will be seen by all worklets. Use it when you want to create a\n * value that is read and written only on the UI thread.\n */\nexport const makeShareable = SHOULD_BE_USE_WEB\n  ? makeShareableJS\n  : makeShareableNative;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,+BAAA,GAAAF,OAAA,CAAAG,aAAA;AAAAH,OAAA,CAAAI,2BAAA,GAAAA,2BAAA;AAAA,IAAAC,eAAA,GAAAT,sBAAA,CAAAC,OAAA;AACb,IAAAS,iBAAA,GAAAV,sBAAA,CAAAC,OAAA;AACA,IAAAU,YAAA,GAAAV,OAAA;AAMA,IAAAW,gBAAA,GAAAX,OAAA;AACA,IAAAY,OAAA,GAAAZ,OAAA;AACA,IAAAa,UAAA,GAAAb,OAAA;AACA,IAAAc,sBAAA,GAAAd,OAAA;AAIA,IAAAe,OAAA,GAAAf,OAAA;AAMA,IAAMgB,iBAAiB,GAAG,IAAAC,+BAAc,EAAC,CAAC;AAE1C,IAAMC,SAAS,GAAG,sBAAsB;AAAC,IAAAC,+BAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,IAAAC,YAAA,GAEzC;EAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAH,YAAA,YAAAA,aAAsBpB,KAA0B,EAAE;IAMhD,OAAOc,SAAS,IAAId,KAAK;EAC3B,CAAC;EAAAoB,YAAA,CAAAI,SAAA;IAAAV,SAAA,EADQA;EAAS;EAAAM,YAAA,CAAAK,aAAA;EAAAL,YAAA,CAAAM,UAAA,GAAAX,+BAAA;EAAAK,YAAA,CAAAO,cAAA,GAAAN,EAAA;EAAA,OAAAD,YAAA;AAAA,CANlB;AASA,SAASQ,eAAeA,CAACC,MAAc,EAAE;EACvC,OAAOhC,MAAM,CAACiC,cAAc,CAACD,MAAM,CAAC,KAAKhC,MAAM,CAACkC,SAAS;AAC3D;AAAC,IAAAC,gCAAA;EAAAhB,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AASD,IAAMc,mBAAmB,GAAG;EAC1BC,MAAM,EAAE;IAAA,IAAAb,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,IAAAY,aAAA,YAAAA,cAAA,EAAM;MAEZ,OAAO,IAAIC,KAAK,CACd,CAAC,CAAC,EACF;QACEC,GAAG,EAAE,SAALA,GAAGA,CAAGC,CAAU,EAAEC,IAAqB,EAAK;UAC1C,IACEA,IAAI,KAAK,0BAA0B,IACnCA,IAAI,KAAK,kBAAkB,EAC3B;YASA,OAAO,KAAK;UACd;UACA,MAAM,IAAIC,uBAAe,CACvB,+BAA+BC,MAAM,CACnCF,IACF,CAAC,yDACH,CAAC;QACH,CAAC;QACDG,GAAG,EAAE,SAALA,GAAGA,CAAA,EAAQ;UACT,MAAM,IAAIF,uBAAe,CACvB,sEACF,CAAC;QACH;MACF,CACF,CAAC;IACH,CAAC;IAAAL,aAAA,CAAAX,SAAA;IAAAW,aAAA,CAAAV,aAAA;IAAAU,aAAA,CAAAT,UAAA,GAAAM,gCAAA;IAAAG,aAAA,CAAAR,cAAA,GAAAN,EAAA;IAAA,OAAAc,aAAA;EAAA,CAjCO;AAkCV,CAAC;AAED,IAAMQ,uBAAuB,GAAG,CAC9B,WAAW,EACX,YAAY,EACZ,mBAAmB,EACnB,YAAY,EACZ,aAAa,EACb,YAAY,EACZ,aAAa,EACb,cAAc,EACd,cAAc,EACd,eAAe,EACf,gBAAgB,EAChB,UAAU,CACX;AAED,IAAMC,oCAAoC,GAAG,EAAE;AAG/C,IAAIC,+BAAwC;AAAC,IAAAC,gCAAA;EAAA9B,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,IAAA4B,iCAAA;EAAA/B,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,IAAA6B,+BAAA;EAAAhC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,IAAA8B,iCAAA;EAAAjC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAEtC,SAAShB,2BAA2BA,CACzCH,KAAU,EAGO;EAAA,IAFjBkD,mBAAmB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAAA,IAC3BG,KAAK,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAET,IAAIvC,iBAAiB,EAAE;IACrB,OAAOZ,KAAK;EACd;EACA,IAAIsD,KAAK,IAAIV,oCAAoC,EAAE;IAMjD,IAAIU,KAAK,KAAKV,oCAAoC,EAAE;MAClDC,+BAA+B,GAAG7C,KAAK;IACzC,CAAC,MAAM,IAAIA,KAAK,KAAK6C,+BAA+B,EAAE;MACpD,MAAM,IAAIL,uBAAe,CACvB,0EACF,CAAC;IACH;EACF,CAAC,MAAM;IACLK,+BAA+B,GAAGQ,SAAS;EAC7C;EAEA,IAAME,IAAI,GAAG,OAAOvD,KAAK;EACzB,IAAMwD,YAAY,GAAGD,IAAI,KAAK,QAAQ;EACtC,IAAME,cAAc,GAAGF,IAAI,KAAK,UAAU;EAC1C,IAAI,CAACC,YAAY,IAAIC,cAAc,KAAKzD,KAAK,KAAK,IAAI,EAAE;IACtD,IAAM0D,MAAM,GAAGC,4CAAqB,CAACtB,GAAG,CAACrC,KAAK,CAAC;IAC/C,IAAI0D,MAAM,KAAKE,2CAAoB,EAAE;MACnC,OAAO5D,KAAK;IACd,CAAC,MAAM,IAAI0D,MAAM,KAAKL,SAAS,EAAE;MAC/B,OAAOK,MAAM;IACf,CAAC,MAAM;MACL,IAAIG,OAAY;MAChB,IAAIC,KAAK,CAACC,OAAO,CAAC/D,KAAK,CAAC,EAAE;QACxB6D,OAAO,GAAG7D,KAAK,CAACgE,GAAG,CAAC,UAACC,OAAO;UAAA,OAC1B9D,2BAA2B,CAAC8D,OAAO,EAAEf,mBAAmB,EAAEI,KAAK,GAAG,CAAC,CAAC;QAAA,CACtE,CAAC;QACDY,iBAAiB,CAAClE,KAAK,CAAC;MAC1B,CAAC,MAAM,IAAIyD,cAAc,IAAI,CAAC,IAAAU,8BAAiB,EAACnE,KAAK,CAAC,EAAE;QAEtD6D,OAAO,GAAG7D,KAAK;QACfkE,iBAAiB,CAAClE,KAAK,CAAC;MAC1B,CAAC,MAAM,IAAIoB,YAAY,CAACpB,KAAK,CAAC,EAAE;QAI9B6D,OAAO,GAAG7D,KAAK;MACjB,CAAC,MAAM,IACL4B,eAAe,CAAC5B,KAAK,CAAC,IACtBA,KAAK,CAACoE,6BAA6B,EACnC;QACA,IAAMC,2BAA2B,GAAGrE,KAAK,CAACoE,6BAA6B;QACvE,IAAME,MAAM,GAAGnE,2BAA2B,CAAC;UACzC+B,MAAM,EAAE;YAAA,IAAAb,EAAA,QAAAC,MAAA,CAAAC,KAAA;YAAA,IAAAgD,aAAA,YAAAA,cAAA,EAAM;cAEZ,OAAOF,2BAA2B,CAAC,CAAC;YACtC,CAAC;YAAAE,aAAA,CAAA/C,SAAA;cAAA6C,2BAAA,EADQA;YAA2B;YAAAE,aAAA,CAAA9C,aAAA;YAAA8C,aAAA,CAAA7C,UAAA,GAAAoB,gCAAA;YAAAyB,aAAA,CAAA5C,cAAA,GAAAN,EAAA;YAAA,OAAAkD,aAAA;UAAA,CAF5B;QAIV,CAAC,CAAC;QACFZ,4CAAqB,CAACjB,GAAG,CAAC1C,KAAK,EAAEsE,MAAM,CAAC;QACxC,OAAOA,MAAM;MACf,CAAC,MAAM,IAAI1C,eAAe,CAAC5B,KAAK,CAAC,IAAIyD,cAAc,EAAE;QACnDI,OAAO,GAAG,CAAC,CAAC;QACZ,IAAI,IAAAM,8BAAiB,EAACnE,KAAK,CAAC,EAAE;UAC5B,IAAIwE,OAAO,EAAE;YACX,IAAMC,YAAY,GAAGzE,KAAK,CAAC0B,UAAU,CAACP,OAAO;YAC7C,IAAIsD,YAAY,KAAKpB,SAAS,IAAIoB,YAAY,KAAKC,oBAAS,EAAE;cAC5D,MAAM,IAAIlC,uBAAe,CAAC,iFAAiFkC,oBAAS,QAAQD,YAAY;AACtJ;AACA,wBAAwBE,cAAc,CAAC3E,KAAK,CAAC,IAAI,CAAC;YACtC;YACA,IAAA4E,mCAA2B,EACzB5E,KAAK,CAACyB,aAAa,EACnBzB,KAAK,CAAC2B,cACR,CAAC;UACH;UACA,IAAI3B,KAAK,CAAC2B,cAAc,EAAE;YAKxB,OAAO3B,KAAK,CAAC2B,cAAc;UAC7B;UAMAkC,OAAO,CAACnC,UAAU,GAAGvB,2BAA2B,CAC9CH,KAAK,CAAC0B,UAAU,EAChB,IAAI,EACJ4B,KAAK,GAAG,CACV,CAAC;QACH;QAEA,SAAAuB,IAAA,IAA6BhF,MAAM,CAACiF,OAAO,CAAC9E,KAAK,CAAC,EAAE;UAAA,IAAA+E,KAAA,OAAA3E,eAAA,CAAA4E,OAAA,EAAAH,IAAA;UAAA,IAAxCI,GAAG,GAAAF,KAAA;UAAA,IAAEd,OAAO,GAAAc,KAAA;UACtB,IAAIE,GAAG,KAAK,YAAY,IAAIpB,OAAO,CAACnC,UAAU,KAAK2B,SAAS,EAAE;YAC5D;UACF;UACAQ,OAAO,CAACoB,GAAG,CAAC,GAAG9E,2BAA2B,CACxC8D,OAAO,EACPf,mBAAmB,EACnBI,KAAK,GAAG,CACV,CAAC;QACH;QACAY,iBAAiB,CAAClE,KAAK,CAAC;MAC1B,CAAC,MAAM,IAAIA,KAAK,YAAYkF,MAAM,EAAE;QAClC,IAAMC,OAAO,GAAGnF,KAAK,CAACoF,MAAM;QAC5B,IAAMC,KAAK,GAAGrF,KAAK,CAACqF,KAAK;QACzB,IAAMf,OAAM,GAAGnE,2BAA2B,CAAC;UACzC+B,MAAM,EAAE;YAAA,IAAAb,EAAA,QAAAC,MAAA,CAAAC,KAAA;YAAA,IAAA+D,aAAA,YAAAA,cAAA,EAAM;cAEZ,OAAO,IAAIJ,MAAM,CAACC,OAAO,EAAEE,KAAK,CAAC;YACnC,CAAC;YAAAC,aAAA,CAAA9D,SAAA;cAAA2D,OAAA,EADmBA,OAAO;cAAAE,KAAA,EAAEA;YAAK;YAAAC,aAAA,CAAA7D,aAAA;YAAA6D,aAAA,CAAA5D,UAAA,GAAAqB,iCAAA;YAAAuC,aAAA,CAAA3D,cAAA,GAAAN,EAAA;YAAA,OAAAiE,aAAA;UAAA,CAF1B;QAIV,CAAC,CAAC;QACF3B,4CAAqB,CAACjB,GAAG,CAAC1C,KAAK,EAAEsE,OAAM,CAAC;QACxC,OAAOA,OAAM;MACf,CAAC,MAAM,IAAItE,KAAK,YAAYuB,KAAK,EAAE;QACjC,IAAQgE,IAAI,GAAqBvF,KAAK,CAA9BuF,IAAI;UAAEC,OAAO,GAAYxF,KAAK,CAAxBwF,OAAO;UAAEC,KAAK,GAAKzF,KAAK,CAAfyF,KAAK;QAC5B,IAAMnB,QAAM,GAAGnE,2BAA2B,CAAC;UACzC+B,MAAM,EAAE;YAAA,IAAAb,EAAA,QAAAC,MAAA,CAAAC,KAAA;YAAA,IAAAmE,aAAA,YAAAA,cAAA,EAAM;cAGZ,IAAMC,KAAK,GAAG,IAAIpE,KAAK,CAAC,CAAC;cACzBoE,KAAK,CAACJ,IAAI,GAAGA,IAAI;cACjBI,KAAK,CAACH,OAAO,GAAGA,OAAO;cACvBG,KAAK,CAACF,KAAK,GAAGA,KAAK;cACnB,OAAOE,KAAK;YACd,CAAC;YAAAD,aAAA,CAAAlE,SAAA;cAAA+D,IAAA,EAJcA,IAAI;cAAAC,OAAA,EACDA,OAAO;cAAAC,KAAA,EACTA;YAAK;YAAAC,aAAA,CAAAjE,aAAA;YAAAiE,aAAA,CAAAhE,UAAA,GAAAsB,+BAAA;YAAA0C,aAAA,CAAA/D,cAAA,GAAAN,EAAA;YAAA,OAAAqE,aAAA;UAAA,CANb;QASV,CAAC,CAAC;QACF/B,4CAAqB,CAACjB,GAAG,CAAC1C,KAAK,EAAEsE,QAAM,CAAC;QACxC,OAAOA,QAAM;MACf,CAAC,MAAM,IAAItE,KAAK,YAAY4F,WAAW,EAAE;QACvC/B,OAAO,GAAG7D,KAAK;MACjB,CAAC,MAAM,IAAI4F,WAAW,CAACC,MAAM,CAAC7F,KAAK,CAAC,EAAE;QAEpC,IAAM8F,MAAM,GAAG9F,KAAK,CAAC8F,MAAM;QAC3B,IAAMC,QAAQ,GAAG/F,KAAK,CAACgG,WAAW,CAACT,IAAI;QACvC,IAAMjB,QAAM,GAAGnE,2BAA2B,CAAC;UACzC+B,MAAM,EAAE;YAAA,IAAAb,EAAA,QAAAC,MAAA,CAAAC,KAAA;YAAA,IAAA0E,aAAA,YAAAA,cAAA,EAAM;cAEZ,IAAI,CAACtD,uBAAuB,CAACuD,QAAQ,CAACH,QAAQ,CAAC,EAAE;gBAC/C,MAAM,IAAIvD,uBAAe,CACvB,6BAA6BuD,QAAQ,KACvC,CAAC;cACH;cACA,IAAMC,WAAW,GAAG1E,MAAM,CAACyE,QAAQ,CAAwB;cAC3D,IAAIC,WAAW,KAAK3C,SAAS,EAAE;gBAC7B,MAAM,IAAIb,uBAAe,CACvB,qBAAqBuD,QAAQ,eAC/B,CAAC;cACH;cACA,OAAO,IAAIC,WAAW,CAACF,MAAM,CAAC;YAChC,CAAC;YAAAG,aAAA,CAAAzE,SAAA;cAAAmB,uBAAA,EAZMA,uBAAuB;cAAAoD,QAAA,EAAUA,QAAQ;cAAAD,MAAA,EAWvBA;YAAM;YAAAG,aAAA,CAAAxE,aAAA;YAAAwE,aAAA,CAAAvE,UAAA,GAAAuB,iCAAA;YAAAgD,aAAA,CAAAtE,cAAA,GAAAN,EAAA;YAAA,OAAA4E,aAAA;UAAA,CAbvB;QAeV,CAAC,CAAC;QACFtC,4CAAqB,CAACjB,GAAG,CAAC1C,KAAK,EAAEsE,QAAM,CAAC;QACxC,OAAOA,QAAM;MACf,CAAC,MAAM;QASL,IAAM6B,kBAAkB,GACtBhG,2BAA2B,CAAI8B,mBAAmB,CAAC;QACrD0B,4CAAqB,CAACjB,GAAG,CAAC1C,KAAK,EAAEmG,kBAAkB,CAAC;QACpD,OAAOA,kBAAkB;MAC3B;MACA,IAAMC,OAAO,GAAGC,yBAAsB,CAACC,kBAAkB,CACvDzC,OAAO,EACPX,mBAAmB,EACnBlD,KACF,CAAC;MACD2D,4CAAqB,CAACjB,GAAG,CAAC1C,KAAK,EAAEoG,OAAO,CAAC;MACzCzC,4CAAqB,CAACjB,GAAG,CAAC0D,OAAO,CAAC;MAClC,OAAOA,OAAO;IAChB;EACF;EACA,OAAOC,yBAAsB,CAACC,kBAAkB,CAC9CtG,KAAK,EACLkD,mBAAmB,EACnBG,SACF,CAAC;AACH;AAEA,IAAMkD,sBAAsB,GAAG,GAAG;AAElC,SAAS5B,cAAcA,CAAC3E,KAAsB,EAAE;EAAA,IAAAwG,iBAAA;EAE9C,IAAMxF,IAAI,GAAGhB,KAAK,aAAAwG,iBAAA,GAALxG,KAAK,CAAE0B,UAAU,qBAAjB8E,iBAAA,CAAmBxF,IAAI;EACpC,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,SAAS;EAClB;EACA,IAAIA,IAAI,CAACoC,MAAM,GAAGmD,sBAAsB,EAAE;IACxC,OAAO,GAAGvF,IAAI,CAACyF,SAAS,CAAC,CAAC,EAAEF,sBAAsB,CAAC,KAAK;EAC1D;EACA,OAAOvF,IAAI;AACb;AAAC,IAAA0F,gCAAA;EAAA1F,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,IAAAwF,gBAAA,GAMD;EAAA,IAAAtF,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAoF,gBAAA,YAAAA,iBAA6B3G,KAE5B,EAA8B;IAE7B,OAAO,CAAC,CAACA,KAAK,CAAC4G,gBAAgB;EACjC,CAAC;EAAAD,gBAAA,CAAAnF,SAAA;EAAAmF,gBAAA,CAAAlF,aAAA;EAAAkF,gBAAA,CAAAjF,UAAA,GAAAgF,gCAAA;EAAAC,gBAAA,CAAAhF,cAAA,GAAAN,EAAA;EAAA,OAAAsF,gBAAA;AAAA,CALD;AAqBA,SAASzC,iBAAiBA,CAAmBlE,KAAQ,EAAE;EACrD,IAAI,CAACwE,OAAO,EAAE;IACZ;EACF;EACA3E,MAAM,CAACiF,OAAO,CAAC9E,KAAK,CAAC,CAAC6G,OAAO,CAAC,UAAAC,KAAA,EAAoB;IAAA,IAAAC,KAAA,OAAA3G,eAAA,CAAA4E,OAAA,EAAA8B,KAAA;MAAlB7B,GAAG,GAAA8B,KAAA;MAAE9C,OAAO,GAAA8C,KAAA;IAC1C,IAAMC,UAAU,GAAGnH,MAAM,CAACoH,wBAAwB,CAACjH,KAAK,EAAEiF,GAAG,CAAE;IAC/D,IAAI,CAAC+B,UAAU,CAACE,YAAY,EAAE;MAC5B;IACF;IACArH,MAAM,CAACC,cAAc,CAACE,KAAK,EAAEiF,GAAG,EAAE;MAChC5C,GAAG,WAAHA,GAAGA,CAAA,EAAG;QACJ,OAAO4B,OAAO;MAChB,CAAC;MACDvB,GAAG,WAAHA,GAAGA,CAAA,EAAG;QACJyE,cAAM,CAACC,IAAI,CACT,yBAAyBnC,GAAG;AACtC;AACA,kBACQ,CAAC;MACH;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACFpF,MAAM,CAACwH,iBAAiB,CAACrH,KAAK,CAAC;AACjC;AAAC,IAAAsH,iCAAA;EAAAtG,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,IAAAlB,+BAAA,GAAAF,OAAA,CAAAE,+BAAA,GAEM;EAAA,IAAAoB,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAtB,+BAAA,YAAAA,gCACLD,KAAQ,EACa;IAErB,IAAIY,iBAAiB,EAAE;MAGrB,OAAOZ,KAAK;IACd;IAEA,SAASuH,cAAcA,CAACvH,KAAQ,EAAuB;MACrD,IACG,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,IAC5C,OAAOA,KAAK,KAAK,UAAU,EAC3B;QACA,IAAIoB,YAAY,CAACpB,KAAK,CAAC,EAAE;UAGvB,OAAOsB,MAAM,CAACkG,mBAAmB,CAC/BxH,KAAK,EACLqD,SACF,CAAC;QACH;QACA,IAAIsD,gBAAgB,CAAI3G,KAAK,CAAC,EAAE;UAI9B,OAAOA,KAAK,CAAC4G,gBAAgB;QAC/B;QACA,IAAI9C,KAAK,CAACC,OAAO,CAAC/D,KAAK,CAAC,EAAE;UACxB,OAAOsB,MAAM,CAACkG,mBAAmB,CAC/BxH,KAAK,CAACgE,GAAG,CAACuD,cAAc,CAAC,EACzBlE,SACF,CAAC;QACH;QACA,IAAMQ,OAA4C,GAAG,CAAC,CAAC;QACvD,SAAA4D,KAAA,IAA6B5H,MAAM,CAACiF,OAAO,CAAC9E,KAAK,CAAC,EAAE;UAAA,IAAA0H,KAAA,OAAAtH,eAAA,CAAA4E,OAAA,EAAAyC,KAAA;UAAA,IAAxCxC,GAAG,GAAAyC,KAAA;UAAA,IAAEzD,OAAO,GAAAyD,KAAA;UACtB7D,OAAO,CAACoB,GAAG,CAAC,GAAGsC,cAAc,CAACtD,OAAO,CAAC;QACxC;QACA,OAAO3C,MAAM,CAACkG,mBAAmB,CAAC3D,OAAO,EAAE7D,KAAK,CAAC;MACnD;MACA,OAAOsB,MAAM,CAACkG,mBAAmB,CAACxH,KAAK,EAAEqD,SAAS,CAAC;IACrD;IACA,OAAOkE,cAAc,CAACvH,KAAK,CAAC;EAC9B,CAAC;EAAAC,+BAAA,CAAAuB,SAAA;IAAAZ,iBAAA,EAxCKA,iBAAiB;IAAAQ,YAAA,EAWbA,YAAY;IAAAuF,gBAAA,EAQZA;EAAgB;EAAA1G,+BAAA,CAAAwB,aAAA;EAAAxB,+BAAA,CAAAyB,UAAA,GAAA4F,iCAAA;EAAArH,+BAAA,CAAA0B,cAAA,GAAAN,EAAA;EAAA,OAAApB,+BAAA;AAAA,CAvBnB;AA8CP,SAAS0H,eAAeA,CAAmB3H,KAAQ,EAAK;EACtD,OAAOA,KAAK;AACd;AAAC,IAAA4H,iCAAA;EAAA5G,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAED,SAAS0G,mBAAmBA,CAAmB7H,KAAQ,EAAK;EAC1D,IAAI2D,4CAAqB,CAACtB,GAAG,CAACrC,KAAK,CAAC,EAAE;IACpC,OAAOA,KAAK;EACd;EACA,IAAMsE,MAAM,GAAGnE,2BAA2B,CAAC;IACzC+B,MAAM,EAAE;MAAA,IAAAb,EAAA,QAAAC,MAAA,CAAAC,KAAA;MAAA,IAAAuG,aAAA,YAAAA,cAAA,EAAM;QAEZ,OAAO9H,KAAK;MACd,CAAC;MAAA8H,aAAA,CAAAtG,SAAA;QAAAxB,KAAA,EADQA;MAAK;MAAA8H,aAAA,CAAArG,aAAA;MAAAqG,aAAA,CAAApG,UAAA,GAAAkG,iCAAA;MAAAE,aAAA,CAAAnG,cAAA,GAAAN,EAAA;MAAA,OAAAyG,aAAA;IAAA,CAFN;EAIV,CAAC,CAAC;EACFnE,4CAAqB,CAACjB,GAAG,CAAC1C,KAAK,EAAEsE,MAAM,CAAC;EACxC,OAAOtE,KAAK;AACd;AAOO,IAAME,aAAa,GAAAH,OAAA,CAAAG,aAAA,GAAGU,iBAAiB,GAC1C+G,eAAe,GACfE,mBAAmB","ignoreList":[]}