{"version":3,"names":["_react","require","_reactNative","_expoLinearGradient","_expoRouter","_ThemeContext","_ProgressContext","_CurrentLevelContext","_useRealTimeProgress2","_interopRequireDefault","_useDashboardLevel2","_useDashboardState2","_useLastActivity2","_Container","_interopRequireWildcard","_ModernHeader","_HeroContinueSection","_QuickActions","_SimpleMetrics","_LearningProgress","_RevisionOrchestrator","_style","_useDashboardRefresh2","_useDashboardNavigation","_useDashboardSelectors","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Dashboard","themeContext","useContext","ThemeContext","progressData","useProgressRead","_useRealTimeProgress","useRealTimeProgress","getLevelProgress","refreshProgress","refresh","colors","background","primary","surface","text","textSecondary","_useDashboardLevel","useDashboardLevel","progress","currentLevel","handleChangeActiveLevel","levelColor","_useCurrentLevel","useCurrentLevel","setCurrentLevel","_useLastActivity","useLastActivity","lastActivity","isActivityLoading","isLoading","reloadActivity","reload","_useDashboardState","useDashboardState","refreshing","originalOnRefresh","onRefresh","_useDashboardRefresh","useDashboardRefresh","refreshKey","useFocusEffect","useCallback","_useDashboardNavigati","useDashboardNavigation","handleContinue","handleChangeLevelVisual","handleLevelSelect","_useDashboardSelector","useDashboardSelectors","allLevels","globalProgress","backgroundGradient","locations","jsx","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","NO_BOTTOM","withScrollView","backgroundColor","statusBarStyle","withPadding","children","jsxs","LinearGradient","start","x","y","end","style","styles","container","level","ScrollView","scrollView","contentContainerStyle","scrollContent","showsVerticalScrollIndicator","refreshControl","RefreshControl","tintColor","onPress","accentColor","accessibilityLabel","accessibilityRole","progressContext","levels","onSelectLevel","onChangeLevelVisual","primaryColor","View","bottomSpacer","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/screens/Dashboard/index.js - VERSION CORRIG√âE - RAFRA√éCHISSEMENT COMPLET\n\nimport { useContext, useCallback } from \"react\";\nimport { RefreshControl, ScrollView, View } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { useFocusEffect } from \"expo-router\";\n\n// Contextes\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { useProgressRead } from \"../../contexts/ProgressContext\";\nimport { useCurrentLevel } from '../../contexts/CurrentLevelContext';\n\n// üöÄ HOOK PROGRESSION TEMPS R√âEL - JUSTE POUR LES CHIFFRES\nimport useRealTimeProgress from \"../../hooks/useRealTimeProgress\";\n\n// Hooks\nimport { useDashboardLevel } from \"./hooks/useDashboardLevel\";\nimport { useDashboardState } from \"./hooks/useDashboardState\";\nimport useLastActivity from \"../../hooks/useLastActivity\";\n\n// Composants Layout\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../components/layout/Container\";\n\n// Composants Dashboard\nimport ModernHeader from \"./components/ModernHeader\";\nimport HeroContinueSection from \"./components/HeroContinueSection\";\nimport QuickActions from \"./components/QuickActions\";\nimport SimpleMetrics from \"./components/SimpleMetrics\";\nimport LearningProgress from \"./components/LearningProgress\";\n\n// üöÄ R√âVISION\nimport RevisionOrchestrator from \"../VocabularyRevision/RevisionOrchestrator\";\n\n// Constantes\nimport styles from \"./style\";\nimport useDashboardRefresh from \"./hooks/useDashboardRefresh\";\nimport useDashboardNavigation from \"./hooks/useDashboardNavigation\";\nimport useDashboardSelectors from \"./hooks/useDashboardSelectors\";\n\nconst Dashboard = () => {\n  \n  // =================== √âTAT LOCAL RAFRA√éCHISSEMENT ===================\n  // G√©r√© par useDashboardRefresh\n  \n  // =================== CONTEXTES ===================\n  const themeContext = useContext(ThemeContext);\n  const progressData = useProgressRead();\n\n  // üöÄ PROGRESSION TEMPS R√âEL\n  const { getLevelProgress, refresh: refreshProgress } = useRealTimeProgress();\n\n  const colors = themeContext?.colors || {\n    background: \"#F8FAFC\",\n    primary: \"#3B82F6\", \n    surface: \"#FFFFFF\",\n    text: \"#1F2937\",\n    textSecondary: \"#6B7280\",\n  };\n\n  // =================== HOOKS DASHBOARD ===================\n  const { currentLevel, handleChangeActiveLevel, levelColor } = useDashboardLevel({ \n    progress: progressData.progress \n  });\n  const { setCurrentLevel } = useCurrentLevel();\n  \n  const { lastActivity, isLoading: isActivityLoading, reload: reloadActivity } = useLastActivity();\n  \n  const { refreshing, onRefresh: originalOnRefresh } = useDashboardState(reloadActivity);\n  const { refreshKey, onRefresh } = useDashboardRefresh({ originalOnRefresh, refreshProgress });\n\n  useFocusEffect(\n    useCallback(() => {\n      onRefresh();\n    }, [onRefresh])\n  );\n\n  // =================== NAVIGATION ===================\n  const { handleContinue, handleChangeLevelVisual, handleLevelSelect } = useDashboardNavigation({\n    setCurrentLevel,\n    handleChangeActiveLevel,\n  });\n\n  // =================== NIVEAUX ===================\n  \n  const { allLevels, globalProgress } = useDashboardSelectors({ getLevelProgress, currentLevel });\n\n  // Note: on ne bloque plus l'affichage sur isLoading; les sections se rafra√Æchiront via refreshKey\n\n  // =================== BACKGROUND ===================\n  \n  const backgroundGradient = {\n    colors: [`${levelColor}05`, colors.background, `${levelColor}08`],\n    locations: [0, 0.6, 1],\n  };\n\n  // =================== RENDER ===================\n  \n  return (\n    <Container\n      safeArea\n      safeAreaEdges={CONTAINER_SAFE_EDGES.NO_BOTTOM}\n      withScrollView={false}\n      backgroundColor=\"transparent\"\n      statusBarStyle=\"light-content\"\n      withPadding={false}\n    >\n      <LinearGradient\n        colors={backgroundGradient.colors}\n        locations={backgroundGradient.locations}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 0, y: 1 }}\n        style={styles.container}\n      >\n        {/* Header */}\n        <ModernHeader\n          level={currentLevel}\n          levelColor={levelColor}\n        />\n\n        {/* Contenu principal */}\n        <ScrollView\n          style={styles.scrollView}\n          contentContainerStyle={styles.scrollContent}\n          showsVerticalScrollIndicator={false}\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={onRefresh}\n              colors={[levelColor]}\n              tintColor={levelColor}\n            />\n          }\n        >\n          {/* Section Continue */}\n          <HeroContinueSection\n            key={`continue-${refreshKey}`} // üî• Force le re-render\n            lastActivity={lastActivity}\n            onPress={handleContinue}\n            accentColor={levelColor}\n            isLoading={isActivityLoading}\n            accessibilityLabel=\"Continuer l'activit√©\"\n            accessibilityRole=\"button\"\n          />\n\n          {/* Actions rapides */}\n          <QuickActions\n            key={`actions-${refreshKey}`} // üî• Force le re-render\n            currentLevel={currentLevel}\n            progressContext={progressData}\n            accentColor={levelColor}\n          />\n\n          {/* M√©triques */}\n          <SimpleMetrics \n            key={`metrics-${refreshKey}`} // üî• Force le re-render\n            accentColor={levelColor} \n            refreshKey={refreshKey} // üî• Passe la cl√© de rafra√Æchissement\n          />\n\n          {/* Progression */}\n          <LearningProgress\n            key={`progress-${refreshKey}`} // üî• Force le re-render\n            globalProgress={globalProgress}\n            levels={allLevels}\n            currentLevel={currentLevel}\n            onSelectLevel={handleLevelSelect}\n            onChangeLevelVisual={handleChangeLevelVisual}\n            primaryColor={levelColor}\n            accessibilityLabel=\"Progression g√©n√©rale\"\n          />\n\n          {/* Espace en bas */}\n          <View style={styles.bottomSpacer} />\n        </ScrollView>\n\n        {/* Syst√®me de r√©vision */}\n        <RevisionOrchestrator \n          key={`revision-${refreshKey}`} // üî• Force le re-render\n          currentLevel={currentLevel} \n          refreshKey={refreshKey} // üî• Passe la cl√© de rafra√Æchissement\n        />\n      </LinearGradient>\n    </Container>\n  );\n};\n\nexport default Dashboard;"],"mappings":";;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,mBAAA,GAAAF,OAAA;AACA,IAAAG,WAAA,GAAAH,OAAA;AAGA,IAAAI,aAAA,GAAAJ,OAAA;AACA,IAAAK,gBAAA,GAAAL,OAAA;AACA,IAAAM,oBAAA,GAAAN,OAAA;AAGA,IAAAO,qBAAA,GAAAC,sBAAA,CAAAR,OAAA;AAGA,IAAAS,mBAAA,GAAAT,OAAA;AACA,IAAAU,mBAAA,GAAAV,OAAA;AACA,IAAAW,iBAAA,GAAAH,sBAAA,CAAAR,OAAA;AAGA,IAAAY,UAAA,GAAAC,uBAAA,CAAAb,OAAA;AAGA,IAAAc,aAAA,GAAAN,sBAAA,CAAAR,OAAA;AACA,IAAAe,oBAAA,GAAAP,sBAAA,CAAAR,OAAA;AACA,IAAAgB,aAAA,GAAAR,sBAAA,CAAAR,OAAA;AACA,IAAAiB,cAAA,GAAAT,sBAAA,CAAAR,OAAA;AACA,IAAAkB,iBAAA,GAAAV,sBAAA,CAAAR,OAAA;AAGA,IAAAmB,qBAAA,GAAAX,sBAAA,CAAAR,OAAA;AAGA,IAAAoB,MAAA,GAAAZ,sBAAA,CAAAR,OAAA;AACA,IAAAqB,qBAAA,GAAAb,sBAAA,CAAAR,OAAA;AACA,IAAAsB,uBAAA,GAAAd,sBAAA,CAAAR,OAAA;AACA,IAAAuB,sBAAA,GAAAf,sBAAA,CAAAR,OAAA;AAAkE,IAAAwB,WAAA,GAAAxB,OAAA;AAAA,SAAAa,wBAAAY,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAd,uBAAA,YAAAA,wBAAAY,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAElE,IAAMmB,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EAMtB,IAAMC,YAAY,GAAG,IAAAC,iBAAU,EAACC,0BAAY,CAAC;EAC7C,IAAMC,YAAY,GAAG,IAAAC,gCAAe,EAAC,CAAC;EAGtC,IAAAC,oBAAA,GAAuD,IAAAC,6BAAmB,EAAC,CAAC;IAApEC,gBAAgB,GAAAF,oBAAA,CAAhBE,gBAAgB;IAAWC,eAAe,GAAAH,oBAAA,CAAxBI,OAAO;EAEjC,IAAMC,MAAM,GAAG,CAAAV,YAAY,oBAAZA,YAAY,CAAEU,MAAM,KAAI;IACrCC,UAAU,EAAE,SAAS;IACrBC,OAAO,EAAE,SAAS;IAClBC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE,SAAS;IACfC,aAAa,EAAE;EACjB,CAAC;EAGD,IAAAC,kBAAA,GAA8D,IAAAC,qCAAiB,EAAC;MAC9EC,QAAQ,EAAEf,YAAY,CAACe;IACzB,CAAC,CAAC;IAFMC,YAAY,GAAAH,kBAAA,CAAZG,YAAY;IAAEC,uBAAuB,GAAAJ,kBAAA,CAAvBI,uBAAuB;IAAEC,UAAU,GAAAL,kBAAA,CAAVK,UAAU;EAGzD,IAAAC,gBAAA,GAA4B,IAAAC,oCAAe,EAAC,CAAC;IAArCC,eAAe,GAAAF,gBAAA,CAAfE,eAAe;EAEvB,IAAAC,gBAAA,GAA+E,IAAAC,yBAAe,EAAC,CAAC;IAAxFC,YAAY,GAAAF,gBAAA,CAAZE,YAAY;IAAaC,iBAAiB,GAAAH,gBAAA,CAA5BI,SAAS;IAA6BC,cAAc,GAAAL,gBAAA,CAAtBM,MAAM;EAE1D,IAAAC,kBAAA,GAAqD,IAAAC,qCAAiB,EAACH,cAAc,CAAC;IAA9EI,UAAU,GAAAF,kBAAA,CAAVE,UAAU;IAAaC,iBAAiB,GAAAH,kBAAA,CAA5BI,SAAS;EAC7B,IAAAC,oBAAA,GAAkC,IAAAC,6BAAmB,EAAC;MAAEH,iBAAiB,EAAjBA,iBAAiB;MAAE3B,eAAe,EAAfA;IAAgB,CAAC,CAAC;IAArF+B,UAAU,GAAAF,oBAAA,CAAVE,UAAU;IAAEH,SAAS,GAAAC,oBAAA,CAATD,SAAS;EAE7B,IAAAI,0BAAc,EACZ,IAAAC,kBAAW,EAAC,YAAM;IAChBL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAChB,CAAC;EAGD,IAAAM,qBAAA,GAAuE,IAAAC,+BAAsB,EAAC;MAC5FnB,eAAe,EAAfA,eAAe;MACfJ,uBAAuB,EAAvBA;IACF,CAAC,CAAC;IAHMwB,cAAc,GAAAF,qBAAA,CAAdE,cAAc;IAAEC,uBAAuB,GAAAH,qBAAA,CAAvBG,uBAAuB;IAAEC,iBAAiB,GAAAJ,qBAAA,CAAjBI,iBAAiB;EAOlE,IAAAC,qBAAA,GAAsC,IAAAC,8BAAqB,EAAC;MAAEzC,gBAAgB,EAAhBA,gBAAgB;MAAEY,YAAY,EAAZA;IAAa,CAAC,CAAC;IAAvF8B,SAAS,GAAAF,qBAAA,CAATE,SAAS;IAAEC,cAAc,GAAAH,qBAAA,CAAdG,cAAc;EAMjC,IAAMC,kBAAkB,GAAG;IACzBzC,MAAM,EAAE,CAAC,GAAGW,UAAU,IAAI,EAAEX,MAAM,CAACC,UAAU,EAAE,GAAGU,UAAU,IAAI,CAAC;IACjE+B,SAAS,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC;EACvB,CAAC;EAID,OACE,IAAA1E,WAAA,CAAA2E,GAAA,EAACvF,UAAA,CAAAuB,OAAS;IACRiE,QAAQ;IACRC,aAAa,EAAEC,+BAAoB,CAACC,SAAU;IAC9CC,cAAc,EAAE,KAAM;IACtBC,eAAe,EAAC,aAAa;IAC7BC,cAAc,EAAC,eAAe;IAC9BC,WAAW,EAAE,KAAM;IAAAC,QAAA,EAEnB,IAAApF,WAAA,CAAAqF,IAAA,EAAC3G,mBAAA,CAAA4G,cAAc;MACbtD,MAAM,EAAEyC,kBAAkB,CAACzC,MAAO;MAClC0C,SAAS,EAAED,kBAAkB,CAACC,SAAU;MACxCa,KAAK,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MACtBC,GAAG,EAAE;QAAEF,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MACpBE,KAAK,EAAEC,cAAM,CAACC,SAAU;MAAAT,QAAA,GAGxB,IAAApF,WAAA,CAAA2E,GAAA,EAACrF,aAAA,CAAAqB,OAAY;QACXmF,KAAK,EAAErD,YAAa;QACpBE,UAAU,EAAEA;MAAW,CACxB,CAAC,EAGF,IAAA3C,WAAA,CAAAqF,IAAA,EAAC5G,YAAA,CAAAsH,UAAU;QACTJ,KAAK,EAAEC,cAAM,CAACI,UAAW;QACzBC,qBAAqB,EAAEL,cAAM,CAACM,aAAc;QAC5CC,4BAA4B,EAAE,KAAM;QACpCC,cAAc,EACZ,IAAApG,WAAA,CAAA2E,GAAA,EAAClG,YAAA,CAAA4H,cAAc;UACb7C,UAAU,EAAEA,UAAW;UACvBE,SAAS,EAAEA,SAAU;UACrB1B,MAAM,EAAE,CAACW,UAAU,CAAE;UACrB2D,SAAS,EAAE3D;QAAW,CACvB,CACF;QAAAyC,QAAA,GAGD,IAAApF,WAAA,CAAA2E,GAAA,EAACpF,oBAAA,CAAAoB,OAAmB;UAElBsC,YAAY,EAAEA,YAAa;UAC3BsD,OAAO,EAAErC,cAAe;UACxBsC,WAAW,EAAE7D,UAAW;UACxBQ,SAAS,EAAED,iBAAkB;UAC7BuD,kBAAkB,EAAC,yBAAsB;UACzCC,iBAAiB,EAAC;QAAQ,GANrB,YAAY7C,UAAU,EAO5B,CAAC,EAGF,IAAA7D,WAAA,CAAA2E,GAAA,EAACnF,aAAA,CAAAmB,OAAY;UAEX8B,YAAY,EAAEA,YAAa;UAC3BkE,eAAe,EAAElF,YAAa;UAC9B+E,WAAW,EAAE7D;QAAW,GAHnB,WAAWkB,UAAU,EAI3B,CAAC,EAGF,IAAA7D,WAAA,CAAA2E,GAAA,EAAClF,cAAA,CAAAkB,OAAa;UAEZ6F,WAAW,EAAE7D,UAAW;UACxBkB,UAAU,EAAEA;QAAW,GAFlB,WAAWA,UAAU,EAG3B,CAAC,EAGF,IAAA7D,WAAA,CAAA2E,GAAA,EAACjF,iBAAA,CAAAiB,OAAgB;UAEf6D,cAAc,EAAEA,cAAe;UAC/BoC,MAAM,EAAErC,SAAU;UAClB9B,YAAY,EAAEA,YAAa;UAC3BoE,aAAa,EAAEzC,iBAAkB;UACjC0C,mBAAmB,EAAE3C,uBAAwB;UAC7C4C,YAAY,EAAEpE,UAAW;UACzB8D,kBAAkB,EAAC;QAAsB,GAPpC,YAAY5C,UAAU,EAQ5B,CAAC,EAGF,IAAA7D,WAAA,CAAA2E,GAAA,EAAClG,YAAA,CAAAuI,IAAI;UAACrB,KAAK,EAAEC,cAAM,CAACqB;QAAa,CAAE,CAAC;MAAA,CAC1B,CAAC,EAGb,IAAAjH,WAAA,CAAA2E,GAAA,EAAChF,qBAAA,CAAAgB,OAAoB;QAEnB8B,YAAY,EAAEA,YAAa;QAC3BoB,UAAU,EAAEA;MAAW,GAFlB,YAAYA,UAAU,EAG5B,CAAC;IAAA,CACY;EAAC,CACR,CAAC;AAEhB,CAAC;AAAC,IAAAqD,QAAA,GAAAC,OAAA,CAAAxG,OAAA,GAEaU,SAAS","ignoreList":[]}