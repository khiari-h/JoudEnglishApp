{"version":3,"names":["_getJestObj","mock","require","Object","assign","jest","requireActual","useNavigation","navigate","fn","goBack","useRoute","params","_interopRequireDefault","_asyncToGenerator2","_react","_reactNative","_layout","_AppProvider","_asyncStorage","_jsxRuntime","_require","describe","beforeEach","default","AsyncStorage","clear","it","_render","render","jsx","AppProvider","children","getByText","findByText","unmount","progress","A1","vocabulary","setItem","JSON","stringify","_render2","getByTextAfterRestart","continueButton","expect","toBeTruthy"],"sources":["session-resume.test.js"],"sourcesContent":["\nimport React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport App from '../../app/_layout';\nimport { AppProvider } from '../../src/contexts/AppProvider';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// Mock AsyncStorage pour contrôler le stockage\njest.mock('@react-native-async-storage/async-storage', () => require('@react-native-async-storage/async-storage/jest/async-storage-mock'));\n\njest.mock('@react-navigation/native', () => ({\n  ...jest.requireActual('@react-navigation/native'),\n  useNavigation: () => ({ navigate: jest.fn(), goBack: jest.fn() }),\n  useRoute: () => ({ params: {} }),\n}));\n\ndescribe('Session Resume Integration Test', () => {\n  beforeEach(async () => {\n    // Nettoyer le stockage avant chaque test\n    await AsyncStorage.clear();\n  });\n\n  it('should persist and resume progress after app restart', async () => {\n    const { getByText, findByText, unmount } = render(\n      <AppProvider><App /></AppProvider>\n    );\n\n    // 1. Effectuer une action qui modifie la progression\n    // (Simplification : nous allons directement manipuler le stockage pour simuler une session précédente)\n    const progress = { A1: { vocabulary: { progress: 50 } } };\n    await AsyncStorage.setItem('progress', JSON.stringify(progress));\n\n    // 2. Simuler la fermeture de l'application\n    unmount();\n\n    // 3. Simuler la réouverture de l'application\n    const { getByText: getByTextAfterRestart } = render(\n      <AppProvider><App /></AppProvider>\n    );\n\n    // 4. Vérifier que la progression a été restaurée sur le Dashboard\n    // (La vérification exacte dépend de la façon dont votre Dashboard affiche la progression)\n    const continueButton = await findByText(/Continuer/i);\n    expect(continueButton).toBeTruthy();\n\n    // Idéalement, vérifier une barre de progression ou un texte spécifique\n    // const progressText = await findByText(/50%/);\n    // expect(progressText).toBeTruthy();\n  });\n});\n"],"mappings":"AAQAA,WAAA,GAAKC,IAAI,CAAC,2CAA2C,EAAE;EAAA,OAAMC,OAAO,CAAC,mEAAmE,CAAC;AAAA,EAAC;AAE1IF,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE;EAAA,OAAAE,MAAA,CAAAC,MAAA,KACjCC,IAAI,CAACC,aAAa,CAAC,0BAA0B,CAAC;IACjDC,aAAa,EAAE,SAAfA,aAAaA,CAAA;MAAA,OAAS;QAAEC,QAAQ,EAAEH,IAAI,CAACI,EAAE,CAAC,CAAC;QAAEC,MAAM,EAAEL,IAAI,CAACI,EAAE,CAAC;MAAE,CAAC;IAAA,CAAC;IACjEE,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAS;QAAEC,MAAM,EAAE,CAAC;MAAE,CAAC;IAAA;EAAC;AAAA,CAChC,CAAC;AAAC,IAAAC,sBAAA,GAAAX,OAAA;AAAA,IAAAY,kBAAA,GAAAD,sBAAA,CAAAX,OAAA;AAbJ,IAAAa,MAAA,GAAAF,sBAAA,CAAAX,OAAA;AACA,IAAAc,YAAA,GAAAd,OAAA;AACA,IAAAe,OAAA,GAAAJ,sBAAA,CAAAX,OAAA;AACA,IAAAgB,YAAA,GAAAhB,OAAA;AACA,IAAAiB,aAAA,GAAAN,sBAAA,CAAAX,OAAA;AAAqE,IAAAkB,WAAA,GAAAlB,OAAA;AAAA,SAAAF,YAAA;EAAA,IAAAqB,QAAA,GAAAnB,OAAA;IAAAG,IAAA,GAAAgB,QAAA,CAAAhB,IAAA;EAAAL,WAAA,YAAAA,YAAA;IAAA,OAAAK,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAWrEiB,QAAQ,CAAC,iCAAiC,EAAE,YAAM;EAChDC,UAAU,KAAAT,kBAAA,CAAAU,OAAA,EAAC,aAAY;IAErB,MAAMC,qBAAY,CAACC,KAAK,CAAC,CAAC;EAC5B,CAAC,EAAC;EAEFC,EAAE,CAAC,sDAAsD,MAAAb,kBAAA,CAAAU,OAAA,EAAE,aAAY;IACrE,IAAAI,OAAA,GAA2C,IAAAC,mBAAM,EAC/C,IAAAT,WAAA,CAAAU,GAAA,EAACZ,YAAA,CAAAa,WAAW;QAAAC,QAAA,EAAC,IAAAZ,WAAA,CAAAU,GAAA,EAACb,OAAA,CAAAO,OAAG,IAAE;MAAC,CAAa,CACnC,CAAC;MAFOS,SAAS,GAAAL,OAAA,CAATK,SAAS;MAAEC,UAAU,GAAAN,OAAA,CAAVM,UAAU;MAAEC,OAAO,GAAAP,OAAA,CAAPO,OAAO;IAMtC,IAAMC,QAAQ,GAAG;MAAEC,EAAE,EAAE;QAAEC,UAAU,EAAE;UAAEF,QAAQ,EAAE;QAAG;MAAE;IAAE,CAAC;IACzD,MAAMX,qBAAY,CAACc,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;IAGhED,OAAO,CAAC,CAAC;IAGT,IAAAO,QAAA,GAA6C,IAAAb,mBAAM,EACjD,IAAAT,WAAA,CAAAU,GAAA,EAACZ,YAAA,CAAAa,WAAW;QAAAC,QAAA,EAAC,IAAAZ,WAAA,CAAAU,GAAA,EAACb,OAAA,CAAAO,OAAG,IAAE;MAAC,CAAa,CACnC,CAAC;MAFkBmB,qBAAqB,GAAAD,QAAA,CAAhCT,SAAS;IAMjB,IAAMW,cAAc,SAASV,UAAU,CAAC,YAAY,CAAC;IACrDW,MAAM,CAACD,cAAc,CAAC,CAACE,UAAU,CAAC,CAAC;EAKrC,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}