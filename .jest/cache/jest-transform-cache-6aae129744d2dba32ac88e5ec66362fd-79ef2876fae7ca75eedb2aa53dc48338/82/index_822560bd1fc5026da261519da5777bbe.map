{"version":3,"names":["_react","require","_reactNative","_style","_interopRequireDefault","_jsxRuntime","ProgressBar","_ref","_ref$progress","progress","_ref$showPercentage","showPercentage","_ref$showValue","showValue","_ref$total","total","_ref$height","height","_ref$backgroundColor","backgroundColor","_ref$fillColor","fillColor","_ref$borderRadius","borderRadius","_ref$animated","animated","_ref$animationDuratio","animationDuration","label","_ref$labelPosition","labelPosition","style","_ref$valueFormatter","valueFormatter","value","totalValue","_ref$percentageFormat","percentageFormatter","percentage","Math","round","testID","styles","createStyles","validProgress","min","max","progressAnim","useRef","Animated","Value","current","useEffect","timing","toValue","duration","useNativeDriver","start","setValue","width","interpolate","inputRange","outputRange","renderLabel","jsx","Text","children","renderValue","calculatedValue","renderPercentage","color","renderTopContent","jsxs","View","topContentContainer","valuesContainer","container","progressBarContainer","progressTrack","progressFill","inlinePercentage","_default","exports","default"],"sources":["index.js"],"sourcesContent":["// src/components/ui/ProgressBar/index.js - Version Mobile-First Simple\r\nimport { useEffect, useRef } from \"react\";\r\nimport { View, Text, Animated } from \"react-native\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ðŸŽ¯ ProgressBar - Version Mobile-First Ultra-Simple\r\n * - Focus sur l'essentiel : progression claire\r\n * - Pas de surcharge visuelle\r\n * - Animation fluide et subtile\r\n * - Lecture immÃ©diate sur mobile\r\n */\r\nconst ProgressBar = ({\r\n  progress = 0, // 0 Ã  100\r\n  showPercentage = false,\r\n  showValue = false,\r\n  total = 100,\r\n  height = 8,\r\n  backgroundColor = \"#E5E7EB\",\r\n  fillColor = \"#5E60CE\",\r\n  borderRadius = 4,\r\n  animated = true,\r\n  animationDuration = 600,\r\n  label,\r\n  labelPosition = \"top\",\r\n  style,\r\n  valueFormatter = (value, totalValue) => `${value}/${totalValue}`,\r\n  percentageFormatter = (percentage) => `${Math.round(percentage)}%`,\r\n  testID,\r\n}) => {\r\n  const styles = createStyles(fillColor, height, borderRadius);\r\n  \r\n  // Calculer le pourcentage validÃ©\r\n  const validProgress = Math.min(Math.max(progress, 0), 100);\r\n\r\n  // Animation simple de la barre\r\n  const progressAnim = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    if (animated) {\r\n      Animated.timing(progressAnim, {\r\n        toValue: validProgress,\r\n        duration: animationDuration,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    } else {\r\n      progressAnim.setValue(validProgress);\r\n    }\r\n  }, [validProgress, animated, animationDuration]);\r\n\r\n  // Largeur animÃ©e\r\n  const width = progressAnim.interpolate({\r\n    inputRange: [0, 100],\r\n    outputRange: [\"0%\", \"100%\"],\r\n  });\r\n\r\n  // Rendu du label\r\n  const renderLabel = () => {\r\n    if (!label) return null;\r\n    return <Text style={styles.label}>{label}</Text>;\r\n  };\r\n\r\n  // Rendu de la valeur\r\n  const renderValue = () => {\r\n    if (!showValue) return null;\r\n    const calculatedValue = Math.round((validProgress / 100) * total);\r\n    return (\r\n      <Text style={styles.value}>{valueFormatter(calculatedValue, total)}</Text>\r\n    );\r\n  };\r\n\r\n  // Rendu du pourcentage\r\n  const renderPercentage = () => {\r\n    if (!showPercentage) return null;\r\n    return (\r\n      <Text style={[styles.percentage, { color: fillColor }]}>\r\n        {percentageFormatter(validProgress)}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  // Contenu au-dessus\r\n  const renderTopContent = () => {\r\n    if (labelPosition !== \"top\") return null;\r\n    return (\r\n      <View style={styles.topContentContainer}>\r\n        {renderLabel()}\r\n        <View style={styles.valuesContainer}>\r\n          {renderValue()}\r\n          {renderPercentage()}\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, style]} testID={testID}>\r\n      {/* Contenu au-dessus */}\r\n      {renderTopContent()}\r\n\r\n      {/* ðŸ“Š BARRE DE PROGRESSION SIMPLE ET CLAIRE */}\r\n      <View style={styles.progressBarContainer}>\r\n        {/* Track de fond simple */}\r\n        <View style={[styles.progressTrack, { backgroundColor, borderRadius }]} />\r\n        \r\n        {/* Barre de progression */}\r\n        <Animated.View\r\n          style={[\r\n            styles.progressFill,\r\n            {\r\n              width,\r\n              backgroundColor: fillColor,\r\n              borderRadius,\r\n            },\r\n          ]}\r\n        />\r\n      </View>\r\n\r\n      {/* Pourcentage en ligne si pas au-dessus */}\r\n      {labelPosition !== \"top\" && showPercentage && (\r\n        <View style={styles.inlinePercentage}>\r\n          {renderPercentage()}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;"],"mappings":"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","ignoreList":[]}