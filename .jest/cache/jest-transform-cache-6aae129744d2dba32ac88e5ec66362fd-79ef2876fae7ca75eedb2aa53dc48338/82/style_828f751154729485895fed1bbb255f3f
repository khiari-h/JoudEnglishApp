0a70f1a5258244df53b9b2f8e7b398aa
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_wnw24s1v9() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\HeroContinueSection\\style.js";
  var hash = "21e4c092b0a09302a42d889e9b781c19a0e74dab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\Dashboard\\components\\HeroContinueSection\\style.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "21e4c092b0a09302a42d889e9b781c19a0e74dab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_wnw24s1v9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wnw24s1v9();
var _default = exports.default = _reactNative.StyleSheet.create({
  container: {
    paddingHorizontal: 20,
    marginBottom: 24
  },
  card: Object.assign({
    borderRadius: 16
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: "#000",
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.1,
      shadowRadius: 8
    },
    android: {
      elevation: 4
    }
  })),
  content: {
    padding: 20
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12
  },
  emoji: {
    fontSize: 24,
    marginRight: 12
  },
  label: {
    fontSize: 12,
    fontWeight: "600",
    textTransform: "uppercase",
    letterSpacing: 1,
    opacity: 0.8
  },
  title: {
    fontSize: 22,
    fontWeight: "700",
    marginBottom: 8,
    letterSpacing: -0.3
  },
  subtitle: {
    fontSize: 14,
    fontWeight: "500",
    marginBottom: 16
  },
  progressContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 20,
    gap: 12
  },
  progressTrack: {
    flex: 1,
    height: 6,
    borderRadius: 3,
    overflow: 'hidden'
  },
  progressFill: {
    height: 6,
    borderRadius: 3
  },
  progressText: {
    fontSize: 14,
    fontWeight: "600",
    minWidth: 40
  },
  button: Object.assign({
    alignItems: "center",
    justifyContent: "center",
    paddingHorizontal: 24,
    paddingVertical: 14,
    borderRadius: 12
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: "#000",
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.15,
      shadowRadius: 4
    },
    android: {
      elevation: 3
    }
  })),
  buttonText: {
    color: "white",
    fontSize: 16,
    fontWeight: "600"
  },
  loadingContainer: {
    padding: 20,
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center"
  },
  loadingText: {
    fontSize: 14,
    marginLeft: 12,
    fontWeight: "500"
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY292X3dudzI0czF2OSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0IiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImNvbnRhaW5lciIsInBhZGRpbmdIb3Jpem9udGFsIiwibWFyZ2luQm90dG9tIiwiY2FyZCIsIk9iamVjdCIsImFzc2lnbiIsImJvcmRlclJhZGl1cyIsIlBsYXRmb3JtIiwic2VsZWN0IiwiaW9zIiwic2hhZG93Q29sb3IiLCJzaGFkb3dPZmZzZXQiLCJ3aWR0aCIsImhlaWdodCIsInNoYWRvd09wYWNpdHkiLCJzaGFkb3dSYWRpdXMiLCJhbmRyb2lkIiwiZWxldmF0aW9uIiwiY29udGVudCIsInBhZGRpbmciLCJoZWFkZXIiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImVtb2ppIiwiZm9udFNpemUiLCJtYXJnaW5SaWdodCIsImxhYmVsIiwiZm9udFdlaWdodCIsInRleHRUcmFuc2Zvcm0iLCJsZXR0ZXJTcGFjaW5nIiwib3BhY2l0eSIsInRpdGxlIiwic3VidGl0bGUiLCJwcm9ncmVzc0NvbnRhaW5lciIsImdhcCIsInByb2dyZXNzVHJhY2siLCJmbGV4Iiwib3ZlcmZsb3ciLCJwcm9ncmVzc0ZpbGwiLCJwcm9ncmVzc1RleHQiLCJtaW5XaWR0aCIsImJ1dHRvbiIsImp1c3RpZnlDb250ZW50IiwicGFkZGluZ1ZlcnRpY2FsIiwiYnV0dG9uVGV4dCIsImNvbG9yIiwibG9hZGluZ0NvbnRhaW5lciIsImxvYWRpbmdUZXh0IiwibWFyZ2luTGVmdCJdLCJzb3VyY2VzIjpbInN0eWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zY3JlZW5zL0Rhc2hib2FyZC9jb21wb25lbnRzL0hlcm9Db250aW51ZVNlY3Rpb24vc3R5bGUuanMgLSBWRVJTSU9OIENPTVBMw4hURSBTSU1QTEVcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFBsYXRmb3JtIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuZXhwb3J0IGRlZmF1bHQgU3R5bGVTaGVldC5jcmVhdGUoe1xuICAvLyA9PT09PT09PT09PT09PT09PT09IENPTlRBSU5FUiA9PT09PT09PT09PT09PT09PT09XG4gIGNvbnRhaW5lcjoge1xuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAyMCxcbiAgICBtYXJnaW5Cb3R0b206IDI0LFxuICB9LFxuICBcbiAgY2FyZDoge1xuICAgIGJvcmRlclJhZGl1czogMTYsXG4gICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcbiAgICAgIGlvczoge1xuICAgICAgICBzaGFkb3dDb2xvcjogXCIjMDAwXCIsXG4gICAgICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiA0IH0sXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMSxcbiAgICAgICAgc2hhZG93UmFkaXVzOiA4LFxuICAgICAgfSxcbiAgICAgIGFuZHJvaWQ6IHtcbiAgICAgICAgZWxldmF0aW9uOiA0LFxuICAgICAgfSxcbiAgICB9KSxcbiAgfSxcbiAgXG4gIGNvbnRlbnQ6IHtcbiAgICBwYWRkaW5nOiAyMCxcbiAgfSxcblxuICAvLyA9PT09PT09PT09PT09PT09PT09IEhFQURFUiA9PT09PT09PT09PT09PT09PT09XG4gIGhlYWRlcjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIG1hcmdpbkJvdHRvbTogMTIsXG4gIH0sXG4gIFxuICBlbW9qaToge1xuICAgIGZvbnRTaXplOiAyNCxcbiAgICBtYXJnaW5SaWdodDogMTIsXG4gIH0sXG4gIFxuICBsYWJlbDoge1xuICAgIGZvbnRTaXplOiAxMixcbiAgICBmb250V2VpZ2h0OiBcIjYwMFwiLFxuICAgIHRleHRUcmFuc2Zvcm06IFwidXBwZXJjYXNlXCIsXG4gICAgbGV0dGVyU3BhY2luZzogMSxcbiAgICBvcGFjaXR5OiAwLjgsXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PSBDT05URU5VID09PT09PT09PT09PT09PT09PT1cbiAgdGl0bGU6IHtcbiAgICBmb250U2l6ZTogMjIsXG4gICAgZm9udFdlaWdodDogXCI3MDBcIixcbiAgICBtYXJnaW5Cb3R0b206IDgsXG4gICAgbGV0dGVyU3BhY2luZzogLTAuMyxcbiAgfSxcbiAgXG4gIHN1YnRpdGxlOiB7XG4gICAgZm9udFNpemU6IDE0LFxuICAgIGZvbnRXZWlnaHQ6IFwiNTAwXCIsXG4gICAgbWFyZ2luQm90dG9tOiAxNixcbiAgfSxcblxuICAvLyA9PT09PT09PT09PT09PT09PT09IFBST0dSRVNTSU9OID09PT09PT09PT09PT09PT09PT1cbiAgcHJvZ3Jlc3NDb250YWluZXI6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBtYXJnaW5Cb3R0b206IDIwLFxuICAgIGdhcDogMTIsXG4gIH0sXG4gIFxuICBwcm9ncmVzc1RyYWNrOiB7XG4gICAgZmxleDogMSxcbiAgICBoZWlnaHQ6IDYsXG4gICAgYm9yZGVyUmFkaXVzOiAzLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcbiAgXG4gIHByb2dyZXNzRmlsbDoge1xuICAgIGhlaWdodDogNixcbiAgICBib3JkZXJSYWRpdXM6IDMsXG4gIH0sXG4gIFxuICBwcm9ncmVzc1RleHQ6IHtcbiAgICBmb250U2l6ZTogMTQsXG4gICAgZm9udFdlaWdodDogXCI2MDBcIixcbiAgICBtaW5XaWR0aDogNDAsXG4gIH0sXG5cbiAgLy8gPT09PT09PT09PT09PT09PT09PSBCT1VUT04gPT09PT09PT09PT09PT09PT09PVxuICBidXR0b246IHtcbiAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAyNCxcbiAgICBwYWRkaW5nVmVydGljYWw6IDE0LFxuICAgIGJvcmRlclJhZGl1czogMTIsXG4gICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcbiAgICAgIGlvczoge1xuICAgICAgICBzaGFkb3dDb2xvcjogXCIjMDAwXCIsXG4gICAgICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiAyIH0sXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMTUsXG4gICAgICAgIHNoYWRvd1JhZGl1czogNCxcbiAgICAgIH0sXG4gICAgICBhbmRyb2lkOiB7XG4gICAgICAgIGVsZXZhdGlvbjogMyxcbiAgICAgIH0sXG4gICAgfSksXG4gIH0sXG4gIFxuICBidXR0b25UZXh0OiB7XG4gICAgY29sb3I6IFwid2hpdGVcIixcbiAgICBmb250U2l6ZTogMTYsXG4gICAgZm9udFdlaWdodDogXCI2MDBcIixcbiAgfSxcblxuICAvLyA9PT09PT09PT09PT09PT09PT09IExPQURJTkcgPT09PT09PT09PT09PT09PT09PVxuICBsb2FkaW5nQ29udGFpbmVyOiB7XG4gICAgcGFkZGluZzogMjAsXG4gICAgZmxleERpcmVjdGlvbjogXCJyb3dcIixcbiAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICB9LFxuICBcbiAgbG9hZGluZ1RleHQ6IHtcbiAgICBmb250U2l6ZTogMTQsXG4gICAgbWFyZ2luTGVmdDogMTIsXG4gICAgZm9udFdlaWdodDogXCI1MDBcIixcbiAgfSxcbn0pOyJdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUFvRCxTQUFBQyxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VB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