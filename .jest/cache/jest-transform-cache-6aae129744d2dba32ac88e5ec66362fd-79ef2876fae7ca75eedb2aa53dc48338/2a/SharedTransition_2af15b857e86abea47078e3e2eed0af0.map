{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","SharedTransition","_classCallCheck2","_createClass2","_animation","_commonTypes","_commonTypes2","_ProgressTransitionManager","_UpdateLayoutAnimations","_util","_errors","SUPPORTED_PROPS","_worklet_10899602899845_init_data","code","location","sourceMap","version","_worklet_15082723599963_init_data","_worklet_5181943484063_init_data","default","_customAnimationFactory","_transitionDuration","_reduceMotion","ReduceMotion","System","_customProgressAnimation","undefined","_progressAnimation","_defaultTransitionType","key","custom","customAnimationFactory","progressAnimation","progressAnimationCallback","_e","global","Error","SharedTransitionTs1","viewTag","values","progress","newStyles","_notifyAboutProgress","__closure","__workletHash","__initData","__stackDetails","duration","reduceMotion","defaultTransitionType","transitionType","registerTransition","sharedTransitionTag","isUnmounting","arguments","length","getReduceMotionFromConfig","getReduceMotion","transitionAnimation","getTransitionAnimation","getProgressAnimation","SharedTransitionType","ANIMATION","PROGRESS_ANIMATION","layoutAnimationType","LayoutAnimationType","SHARED_ELEMENT_TRANSITION","SHARED_ELEMENT_TRANSITION_PROGRESS","updateLayoutAnimations","_progressTransitionManager","addProgressAnimation","unregisterTransition","removeProgressAnimation","buildAnimation","buildProgressAnimation","animationFactory","transitionDuration","SharedTransitionTs2","animations","initialValues","includes","ReanimatedError","propName","matrix","targetTransformMatrix","transformMatrix","withTiming","capitalizedPropName","charAt","toUpperCase","slice","keyToTargetValue","currentTransformMatrix","keyToCurrentValue","SharedTransitionTs3","propertyName","currentMatrix","targetMatrix","newMatrix","Array","i","PropertyName","currentPropertyName","targetPropertyName","currentValue","targetValue","ProgressTransitionManager"],"sources":["SharedTransition.ts"],"sourcesContent":["'use strict';\nimport { withTiming } from '../../animation';\nimport type {\n  SharedTransitionAnimationsFunction,\n  SharedTransitionAnimationsValues,\n  CustomProgressAnimation,\n  ProgressAnimation,\n  LayoutAnimationsOptions,\n} from '../animationBuilder/commonTypes';\nimport {\n  LayoutAnimationType,\n  SharedTransitionType,\n} from '../animationBuilder/commonTypes';\nimport type { StyleProps } from '../../commonTypes';\nimport { ReduceMotion } from '../../commonTypes';\nimport { ProgressTransitionManager } from './ProgressTransitionManager';\nimport { updateLayoutAnimations } from '../../UpdateLayoutAnimations';\nimport { getReduceMotionFromConfig } from '../../animation/util';\nimport { ReanimatedError } from '../../errors';\n\nconst SUPPORTED_PROPS = [\n  'width',\n  'height',\n  'originX',\n  'originY',\n  'transform',\n  'borderRadius',\n  'borderTopLeftRadius',\n  'borderTopRightRadius',\n  'borderBottomLeftRadius',\n  'borderBottomRightRadius',\n] as const;\n\ntype AnimationFactory = (\n  values: SharedTransitionAnimationsValues\n) => StyleProps;\n\n/**\n * A SharedTransition builder class.\n *\n * @experimental\n * @see https://docs.swmansion.com/react-native-reanimated/docs/shared-element-transitions/overview\n */\nexport class SharedTransition {\n  private _customAnimationFactory: AnimationFactory | null = null;\n  private _animation: SharedTransitionAnimationsFunction | null = null;\n  private _transitionDuration = 500;\n  private _reduceMotion: ReduceMotion = ReduceMotion.System;\n  private _customProgressAnimation?: ProgressAnimation = undefined;\n  private _progressAnimation?: ProgressAnimation = undefined;\n  private _defaultTransitionType?: SharedTransitionType = undefined;\n  private static _progressTransitionManager = new ProgressTransitionManager();\n\n  public custom(customAnimationFactory: AnimationFactory): SharedTransition {\n    this._customAnimationFactory = customAnimationFactory;\n    return this;\n  }\n\n  public progressAnimation(\n    progressAnimationCallback: CustomProgressAnimation\n  ): SharedTransition {\n    this._customProgressAnimation = (viewTag, values, progress) => {\n      'worklet';\n      const newStyles = progressAnimationCallback(values, progress);\n      global._notifyAboutProgress(viewTag, newStyles, true);\n    };\n    return this;\n  }\n\n  public duration(duration: number): SharedTransition {\n    this._transitionDuration = duration;\n    return this;\n  }\n\n  public reduceMotion(_reduceMotion: ReduceMotion): this {\n    this._reduceMotion = _reduceMotion;\n    return this;\n  }\n\n  public defaultTransitionType(\n    transitionType: SharedTransitionType\n  ): SharedTransition {\n    this._defaultTransitionType = transitionType;\n    return this;\n  }\n\n  public registerTransition(\n    viewTag: number,\n    sharedTransitionTag: string,\n    isUnmounting = false\n  ) {\n    if (getReduceMotionFromConfig(this.getReduceMotion())) {\n      return;\n    }\n\n    const transitionAnimation = this.getTransitionAnimation();\n    const progressAnimation = this.getProgressAnimation();\n    if (!this._defaultTransitionType) {\n      if (this._customAnimationFactory && !this._customProgressAnimation) {\n        this._defaultTransitionType = SharedTransitionType.ANIMATION;\n      } else {\n        this._defaultTransitionType = SharedTransitionType.PROGRESS_ANIMATION;\n      }\n    }\n    const layoutAnimationType =\n      this._defaultTransitionType === SharedTransitionType.ANIMATION\n        ? LayoutAnimationType.SHARED_ELEMENT_TRANSITION\n        : LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS;\n    updateLayoutAnimations(\n      viewTag,\n      layoutAnimationType,\n      transitionAnimation,\n      sharedTransitionTag,\n      isUnmounting\n    );\n    SharedTransition._progressTransitionManager.addProgressAnimation(\n      viewTag,\n      progressAnimation\n    );\n  }\n\n  public unregisterTransition(viewTag: number, isUnmounting = false): void {\n    const layoutAnimationType =\n      this._defaultTransitionType === SharedTransitionType.ANIMATION\n        ? LayoutAnimationType.SHARED_ELEMENT_TRANSITION\n        : LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS;\n    updateLayoutAnimations(\n      viewTag,\n      layoutAnimationType,\n      undefined,\n      undefined,\n      isUnmounting\n    );\n    SharedTransition._progressTransitionManager.removeProgressAnimation(\n      viewTag,\n      isUnmounting\n    );\n  }\n\n  public getReduceMotion(): ReduceMotion {\n    return this._reduceMotion;\n  }\n\n  private getTransitionAnimation(): SharedTransitionAnimationsFunction {\n    if (!this._animation) {\n      this.buildAnimation();\n    }\n    return this._animation!;\n  }\n\n  private getProgressAnimation(): ProgressAnimation {\n    if (!this._progressAnimation) {\n      this.buildProgressAnimation();\n    }\n    return this._progressAnimation!;\n  }\n\n  private buildAnimation() {\n    const animationFactory = this._customAnimationFactory;\n    const transitionDuration = this._transitionDuration;\n    const reduceMotion = this._reduceMotion;\n    this._animation = (values: SharedTransitionAnimationsValues) => {\n      'worklet';\n      let animations: {\n        [key: string]: unknown;\n      } = {};\n      const initialValues: {\n        [key: string]: unknown;\n      } = {};\n\n      if (animationFactory) {\n        animations = animationFactory(values);\n        for (const key in animations) {\n          if (!(SUPPORTED_PROPS as readonly string[]).includes(key)) {\n            throw new ReanimatedError(\n              `The prop '${key}' is not supported yet.`\n            );\n          }\n        }\n      } else {\n        for (const propName of SUPPORTED_PROPS) {\n          if (propName === 'transform') {\n            const matrix = values.targetTransformMatrix;\n            animations.transformMatrix = withTiming(matrix, {\n              reduceMotion,\n              duration: transitionDuration,\n            });\n          } else {\n            const capitalizedPropName = `${propName\n              .charAt(0)\n              .toUpperCase()}${propName.slice(\n              1\n            )}` as Capitalize<LayoutAnimationsOptions>;\n            const keyToTargetValue = `target${capitalizedPropName}` as const;\n            animations[propName] = withTiming(values[keyToTargetValue], {\n              reduceMotion,\n              duration: transitionDuration,\n            });\n          }\n        }\n      }\n\n      for (const propName in animations) {\n        if (propName === 'transform') {\n          initialValues.transformMatrix = values.currentTransformMatrix;\n        } else {\n          const capitalizedPropName = (propName.charAt(0).toUpperCase() +\n            propName.slice(1)) as Capitalize<LayoutAnimationsOptions>;\n          const keyToCurrentValue = `current${capitalizedPropName}` as const;\n          initialValues[propName] = values[keyToCurrentValue];\n        }\n      }\n\n      return { initialValues, animations };\n    };\n  }\n\n  private buildProgressAnimation() {\n    if (this._customProgressAnimation) {\n      this._progressAnimation = this._customProgressAnimation;\n      return;\n    }\n    this._progressAnimation = (viewTag, values, progress) => {\n      'worklet';\n      const newStyles: { [key: string]: number | number[] } = {};\n      for (const propertyName of SUPPORTED_PROPS) {\n        if (propertyName === 'transform') {\n          // this is not the perfect solution, but at this moment it just interpolates the whole\n          // matrix instead of interpolating scale, translate, rotate, etc. separately\n          const currentMatrix = values.currentTransformMatrix;\n          const targetMatrix = values.targetTransformMatrix;\n          const newMatrix = new Array(9);\n          for (let i = 0; i < 9; i++) {\n            newMatrix[i] =\n              progress * (targetMatrix[i] - currentMatrix[i]) +\n              currentMatrix[i];\n          }\n          newStyles.transformMatrix = newMatrix;\n        } else {\n          // PropertyName == propertyName with capitalized fist letter, (width -> Width)\n          const PropertyName = (propertyName.charAt(0).toUpperCase() +\n            propertyName.slice(1)) as Capitalize<LayoutAnimationsOptions>;\n          const currentPropertyName = `current${PropertyName}` as const;\n          const targetPropertyName = `target${PropertyName}` as const;\n\n          const currentValue = values[currentPropertyName];\n          const targetValue = values[targetPropertyName];\n\n          newStyles[propertyName] =\n            progress * (targetValue - currentValue) + currentValue;\n        }\n      }\n      global._notifyAboutProgress(viewTag, newStyles, true);\n    };\n  }\n\n  // static builder methods i.e. shared transition modifiers\n\n  /**\n   * Lets you create a custom shared transition animation. Other shared\n   * transition modifiers can be chained alongside this modifier.\n   *\n   * @param customAnimationFactory - Callback function that have to return an\n   *   object with styles for the custom shared transition.\n   * @returns A {@link SharedTransition} object. Styles returned from this\n   *   function need to be to the `sharedTransitionStyle` prop.\n   * @experimental\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/shared-element-transitions/overview\n   */\n  public static custom(\n    customAnimationFactory: AnimationFactory\n  ): SharedTransition {\n    return new SharedTransition().custom(customAnimationFactory);\n  }\n\n  /**\n   * Lets you change the duration of the shared transition. Other shared\n   * transition modifiers can be chained alongside this modifier.\n   *\n   * @param duration - The duration of the shared transition animation in\n   *   milliseconds.\n   * @experimental\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/shared-element-transitions/overview\n   */\n  public static duration(duration: number): SharedTransition {\n    return new SharedTransition().duration(duration);\n  }\n\n  /**\n   * Lets you create a shared transition animation bound to the progress between\n   * navigation screens. Other shared transition modifiers can be chained\n   * alongside this modifier.\n   *\n   * @param progressAnimationCallback - A callback called with the current\n   *   progress value on every animation frame. It should return an object with\n   *   styles for the shared transition.\n   * @experimental\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/shared-element-transitions/overview\n   */\n  public static progressAnimation(\n    progressAnimationCallback: CustomProgressAnimation\n  ): SharedTransition {\n    return new SharedTransition().progressAnimation(progressAnimationCallback);\n  }\n\n  /**\n   * Whether the transition is progress-bound or not. Other shared transition\n   * modifiers can be chained alongside this modifier.\n   *\n   * @param transitionType - Type of the transition. Configured with\n   *   {@link SharedTransitionType} enum.\n   * @experimental\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/shared-element-transitions/overview\n   */\n  public static defaultTransitionType(\n    transitionType: SharedTransitionType\n  ): SharedTransition {\n    return new SharedTransition().defaultTransitionType(transitionType);\n  }\n\n  /**\n   * Lets you adjust the behavior when the device's reduced motion accessibility\n   * setting is turned on. Other shared transition modifiers can be chained\n   * alongside this modifier.\n   *\n   * @param reduceMotion - Determines how the animation responds to the device's\n   *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n   *   {@link ReduceMotion}.\n   * @experimental\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/shared-element-transitions/overview\n   */\n  public static reduceMotion(reduceMotion: ReduceMotion): SharedTransition {\n    return new SharedTransition().reduceMotion(reduceMotion);\n  }\n}\n"],"mappings":"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","ignoreList":[]}