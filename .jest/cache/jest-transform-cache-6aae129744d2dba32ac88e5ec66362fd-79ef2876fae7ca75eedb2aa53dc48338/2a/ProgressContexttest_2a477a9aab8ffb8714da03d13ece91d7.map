{"version":3,"names":["_getJestObj","mock","setItem","jest","fn","Promise","resolve","getItem","removeItem","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_reactNative2","_ProgressContext","_asyncStorage","_constants","_jsxRuntime","_require","TestComponent","_progress$exercises$v","_useProgress","useProgress","progress","isLoading","updateExerciseProgress","updateStats","calculateGlobalProgress","calculateLevelProgress","resetProgress","jsx","Text","testID","children","jsxs","Fragment","exercises","vocabulary","completed","stats","streak","Button","title","onPress","ComponentWithoutProvider","describe","beforeEach","useFakeTimers","AsyncStorage","mockClear","afterEach","runOnlyPendingTimers","useRealTimers","it","default","mockProgress","Object","assign","createInitialProgress","levels","total","mockResolvedValueOnce","JSON","stringify","render","ProgressProvider","expect","screen","getByTestId","toBeTruthy","act","runAllTimers","queryByTestId","toBeNull","level1ProgressText","props","join","toBe","streakDisplay","fireEvent","press","getByText","savedProgress","parse","calls","level1Text","newType","mockRejectedValueOnce","Error","consoleErrorSpy","spyOn","console","toHaveBeenCalledWith","any","globalProgressText","mockRestore","mockInitialProgress","originalError","error","toThrow"],"sources":["ProgressContext.test.js"],"sourcesContent":["import React from 'react';\nimport { render, screen, act, fireEvent } from '@testing-library/react-native';\nimport { Text, Button } from 'react-native';\nimport { ProgressProvider, useProgress, createInitialProgress } from '../../src/contexts/ProgressContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { STORAGE_KEYS } from '../../src/utils/constants';\n\n// Mock AsyncStorage\njest.mock('@react-native-async-storage/async-storage', () => ({\n  setItem: jest.fn(() => Promise.resolve()),\n  getItem: jest.fn(() => Promise.resolve(null)),\n  removeItem: jest.fn(() => Promise.resolve()),\n}));\n\n// Un composant de test pour consommer le contexte\nconst TestComponent = () => {\n  const {\n    progress,\n    isLoading,\n    updateExerciseProgress,\n    updateStats,\n    calculateGlobalProgress,\n    calculateLevelProgress,\n    resetProgress,\n  } = useProgress();\n\n  if (isLoading) {\n    return <Text testID=\"loading-status\">Loading...</Text>;\n  }\n\n  return (\n    <>\n      <Text testID=\"global-progress\">Global: {calculateGlobalProgress()}%</Text>\n      <Text testID=\"level1-progress\">Level 1: {calculateLevelProgress('1')}%</Text>\n      <Text testID=\"level-bonus-progress\">Level Bonus: {calculateLevelProgress('bonus')}%</Text>\n      <Text testID=\"vocab-level1-completed\">\n        Vocab Level 1 Completed: {progress.exercises.vocabulary?.['1']?.completed || 0}\n      </Text>\n      <Text testID=\"streak\">Streak: {progress.stats.streak}</Text>\n\n      <Button title=\"Update Vocab Level 1\" onPress={() => updateExerciseProgress('vocabulary', '1', 50)} />\n      <Button title=\"Update Streak\" onPress={() => updateStats({ streak: 5 })} />\n      <Button title=\"Reset Progress\" onPress={resetProgress} />\n      <Button title=\"Update Vocab Bonus\" onPress={() => updateExerciseProgress('vocabulary', 'bonus', 75)} />\n      <Button title=\"Update Grammar Bonus\" onPress={() => updateExerciseProgress('grammar', 'bonus', 50)} />\n      <Button title=\"Add New Exercise Type\" onPress={() => updateExerciseProgress('newType', '1', 25)} />\n    </>\n  );\n};\n\n// Un composant pour tester le hook en dehors du provider\nconst ComponentWithoutProvider = () => {\n  useProgress();\n  return null;\n};\n\ndescribe('ProgressContext', () => {\n  beforeEach(() => {\n    jest.useFakeTimers();\n    AsyncStorage.getItem.mockClear();\n    AsyncStorage.setItem.mockClear();\n    AsyncStorage.removeItem.mockClear();\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n  });\n\n  // Tests principaux\n  it('loads initial progress from AsyncStorage', async () => {\n    const mockProgress = {\n      ...createInitialProgress(),\n      levels: { '1': { completed: 25, total: 100 } },\n      exercises: { vocabulary: { '1': { completed: 25, total: 100 } } },\n      stats: { streak: 1 },\n    };\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify(mockProgress));\n\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    expect(screen.getByTestId('loading-status')).toBeTruthy();\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    expect(screen.queryByTestId('loading-status')).toBeNull();\n    const level1ProgressText = screen.getByTestId('level1-progress').props.children.join('');\n    expect(level1ProgressText).toBe('Level 1: 25%');\n    const streakDisplay = screen.getByTestId('streak').props.children.join('');\n    expect(streakDisplay).toBe('Streak: 1');\n  });\n\n  it('updates exercise progress and recalculates level progress', async () => {\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    fireEvent.press(screen.getByText('Update Vocab Level 1'));\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    const savedProgress = JSON.parse(AsyncStorage.setItem.mock.calls[0][1]);\n    expect(savedProgress.exercises.vocabulary['1'].completed).toBe(50);\n    // Le calcul de la moyenne est (50+0+0...)/9 = 5.5, arrondi à 6.\n    expect(savedProgress.levels['1'].completed).toBe(6);\n  });\n\n  it('updates progress for a new exercise type and calculates average', async () => {\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n    \n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    fireEvent.press(screen.getByText('Add New Exercise Type'));\n    \n    const level1Text = screen.getByTestId('level1-progress').props.children.join('');\n    // Les 9 exercices initiaux ont 0% + le nouvel exercice avec 25%\n    // (0+0+0+0+0+0+0+0+25) / 9 = 2.77 -> 3%\n    expect(level1Text).toBe('Level 1: 3%');\n    \n    await act(async () => {\n      jest.runAllTimers();\n    });\n    \n    const savedProgress = JSON.parse(AsyncStorage.setItem.mock.calls[0][1]);\n    expect(savedProgress.exercises.newType['1'].completed).toBe(25);\n  });\n\n  // Tests pour les cas d'erreur\n  it('handles errors during initial loading', async () => {\n    AsyncStorage.getItem.mockRejectedValueOnce(new Error('Mock AsyncStorage Error'));\n    const consoleErrorSpy = jest.spyOn(console, 'error');\n\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    expect(consoleErrorSpy).toHaveBeenCalledWith(\n      'Erreur chargement progression:',\n      expect.any(Error)\n    );\n    expect(screen.queryByTestId('loading-status')).toBeNull();\n    const globalProgressText = screen.getByTestId('global-progress').props.children.join('');\n    expect(globalProgressText).toBe('Global: 0%');\n    consoleErrorSpy.mockRestore();\n  });\n\n  it('handles errors during saving progress', async () => {\n    AsyncStorage.setItem.mockRejectedValueOnce(new Error('Mock AsyncStorage Save Error'));\n    const consoleErrorSpy = jest.spyOn(console, 'error');\n\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    fireEvent.press(screen.getByText('Update Streak'));\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    expect(consoleErrorSpy).toHaveBeenCalledWith(\n      'Erreur sauvegarde progression:',\n      expect.any(Error)\n    );\n    consoleErrorSpy.mockRestore();\n  });\n\n  // Test pour le cas où il n'y a pas d'exercices\n  it('calculates level progress correctly when there are no exercises for a level', async () => {\n    // Crée une progression vide pour simuler le cas où aucun exercice n'existe\n    const mockInitialProgress = {\n      ...createInitialProgress(),\n      exercises: {},\n      levels: {\n        ...createInitialProgress().levels,\n        '1': { completed: 0, total: 100 }\n      }\n    };\n    \n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify(mockInitialProgress));\n\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    const level1Text = screen.getByTestId('level1-progress').props.children.join('');\n    // Comme il n'y a pas d'exercices, le calcul de la moyenne est de 0\n    expect(level1Text).toBe('Level 1: 0%');\n  });\n\n  // Test de la non-utilisation du Provider\n  it('throws an error if useProgress is used outside of ProgressProvider', () => {\n    const originalError = console.error;\n    console.error = jest.fn();\n\n    expect(() => render(<ComponentWithoutProvider />)).toThrow(\n      'useProgress must be used within a ProgressProvider'\n    );\n\n    console.error = originalError;\n  });\n});"],"mappings":"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","ignoreList":[]}