b842c53e2691674d126522300eb56f38
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _Dimensions$get = _reactNative.Dimensions.get('window'),
  width = _Dimensions$get.width;
var _default = exports.default = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F8FAFC'
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 20,
    paddingTop: _reactNative.Platform.OS === 'ios' ? 50 : 20,
    paddingBottom: 16
  },
  backButton: Object.assign({
    width: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#FFFFFF'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.1,
      shadowRadius: 4
    },
    android: {
      elevation: 3
    }
  })),
  backButtonText: {
    fontSize: 18,
    fontWeight: '600'
  },
  headerCenter: {
    alignItems: 'center'
  },
  questionCounter: {
    fontSize: 18,
    fontWeight: '700'
  },
  totalQuestions: {
    fontSize: 14,
    fontWeight: '500',
    marginTop: 2
  },
  scoreChip: Object.assign({
    minWidth: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: 'center',
    alignItems: 'center'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#3B82F6',
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.3,
      shadowRadius: 8
    },
    android: {
      elevation: 4
    }
  })),
  scoreChipText: {
    color: 'white',
    fontSize: 16,
    fontWeight: '700'
  },
  progressSection: {
    paddingHorizontal: 20,
    marginBottom: 24,
    flexDirection: 'row',
    alignItems: 'center',
    gap: 12
  },
  progressTrack: {
    flex: 1,
    height: 6,
    backgroundColor: '#F3F4F6',
    borderRadius: 3
  },
  progressBarQuiz: {
    height: 6,
    borderRadius: 3
  },
  progressText: {
    fontSize: 14,
    fontWeight: '600',
    minWidth: 40,
    textAlign: 'right'
  },
  questionSection: {
    paddingHorizontal: 20,
    marginBottom: 32
  },
  questionCard: Object.assign({
    backgroundColor: '#FFFFFF',
    borderRadius: 24,
    padding: 24,
    alignItems: 'center',
    borderTopWidth: 4,
    borderTopColor: '#3B82F6'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 8
      },
      shadowOpacity: 0.07,
      shadowRadius: 16
    },
    android: {
      elevation: 5
    }
  })),
  questionLabelContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 8,
    marginBottom: 16
  },
  questionLabelIcon: {
    fontSize: 20
  },
  questionLabel: {
    fontSize: 18,
    fontWeight: '700',
    color: '#6B7280'
  },
  wordToTranslate: {
    fontSize: 36,
    fontWeight: '800',
    textAlign: 'center',
    marginBottom: 8
  },
  levelInfo: {
    fontSize: 12,
    fontWeight: '500',
    fontStyle: 'italic'
  },
  choicesSection: {
    flex: 1,
    paddingHorizontal: 20,
    gap: 16,
    justifyContent: 'center',
    paddingBottom: 20
  },
  choiceButton: Object.assign({
    backgroundColor: '#FFFFFF',
    borderRadius: 20,
    borderWidth: 2,
    borderColor: '#E5E7EB'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.08,
      shadowRadius: 12
    },
    android: {
      elevation: 3
    }
  }), {
    overflow: 'hidden'
  }),
  choiceButtonInner: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 18,
    paddingHorizontal: 20,
    gap: 16
  },
  choiceNumberContainer: {
    width: 32,
    height: 32,
    borderRadius: 16,
    backgroundColor: '#F3F4F6',
    justifyContent: 'center',
    alignItems: 'center'
  },
  choiceNumberText: {
    fontSize: 16,
    fontWeight: '700',
    color: '#6B7280'
  },
  choiceText: {
    fontSize: 17,
    fontWeight: '600',
    flex: 1
  },
  choiceSelected: {
    borderColor: '#3B82F6',
    backgroundColor: '#EFF6FF'
  },
  choiceCorrect: {
    borderColor: '#10B981',
    backgroundColor: '#DCFCE7'
  },
  choiceWrong: {
    borderColor: '#EF4444',
    backgroundColor: '#FEE2E2'
  },
  choiceTextCorrect: {
    color: '#059669'
  },
  choiceTextWrong: {
    color: '#DC2626'
  },
  choiceIcon: {
    fontSize: 24,
    fontWeight: '700'
  },
  feedbackContainer: {
    paddingHorizontal: 20,
    paddingTop: 16,
    paddingBottom: _reactNative.Platform.OS === 'ios' ? 34 : 20,
    borderTopWidth: 1,
    borderTopColor: '#E5E7EB',
    gap: 16
  },
  feedbackMessageRow: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    gap: 8
  },
  feedbackIcon: {
    fontSize: 20
  },
  feedbackText: {
    fontSize: 16,
    fontWeight: '600',
    textAlign: 'center'
  },
  continueButton: Object.assign({
    flexDirection: 'row',
    borderRadius: 20,
    paddingVertical: 18,
    alignItems: 'center',
    justifyContent: 'center'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 6
      },
      shadowOpacity: 0.25,
      shadowRadius: 12
    },
    android: {
      elevation: 6
    }
  })),
  continueButtonText: {
    fontSize: 18,
    fontWeight: '700',
    color: '#FFFFFF',
    marginRight: 8
  },
  continueButtonIcon: {
    fontSize: 22,
    color: '#FFFFFF'
  },
  resultContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 32
  },
  resultEmoji: {
    fontSize: 64,
    marginBottom: 24
  },
  resultTitle: {
    fontSize: 28,
    fontWeight: '800',
    textAlign: 'center',
    marginBottom: 8
  },
  resultMessage: {
    fontSize: 18,
    fontWeight: '500',
    textAlign: 'center',
    marginBottom: 32,
    lineHeight: 24
  },
  scoreCard: Object.assign({
    backgroundColor: '#FFFFFF',
    borderRadius: 24,
    padding: 32,
    alignItems: 'center',
    marginBottom: 24,
    minWidth: width * 0.7
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 12
      },
      shadowOpacity: 0.15,
      shadowRadius: 24
    },
    android: {
      elevation: 8
    }
  })),
  scoreRow: {
    flexDirection: 'row',
    alignItems: 'baseline',
    marginBottom: 20
  },
  scoreNumber: {
    fontSize: 48,
    fontWeight: '900'
  },
  scoreSlash: {
    fontSize: 24,
    fontWeight: '600',
    marginLeft: 4
  },
  progressBar: {
    width: '100%',
    height: 8,
    borderRadius: 4,
    marginBottom: 16,
    overflow: 'hidden'
  },
  progressFill: {
    height: 8,
    borderRadius: 4
  },
  percentageText: {
    fontSize: 18,
    fontWeight: '700'
  },
  sourceText: {
    fontSize: 14,
    fontWeight: '500',
    textAlign: 'center',
    marginBottom: 32,
    fontStyle: 'italic'
  },
  buttonsContainer: {
    flexDirection: 'row',
    gap: 16,
    width: '100%',
    maxWidth: 320
  },
  buttonContent: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    gap: 6
  },
  restartButton: Object.assign({
    flex: 1,
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    paddingVertical: 18,
    paddingHorizontal: 16,
    borderWidth: 2,
    borderColor: '#E5E7EB'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.1,
      shadowRadius: 8
    },
    android: {
      elevation: 4
    }
  })),
  restartIcon: {
    fontSize: 16
  },
  restartText: {
    fontSize: 15,
    fontWeight: '600',
    color: '#1F2937'
  },
  finishButton: Object.assign({
    flex: 1,
    borderRadius: 16,
    paddingVertical: 18,
    paddingHorizontal: 16
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 6
      },
      shadowOpacity: 0.25,
      shadowRadius: 12
    },
    android: {
      elevation: 6
    }
  })),
  finishIcon: {
    fontSize: 16,
    color: '#FFFFFF'
  },
  finishText: {
    fontSize: 15,
    fontWeight: '700',
    color: '#FFFFFF'
  },
  emptyContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 32
  },
  emptyEmoji: {
    fontSize: 64,
    marginBottom: 24
  },
  emptyTitle: {
    fontSize: 24,
    fontWeight: '700',
    textAlign: 'center',
    marginBottom: 8
  },
  emptyMessage: {
    fontSize: 16,
    fontWeight: '500',
    textAlign: 'center',
    marginBottom: 32,
    lineHeight: 24
  },
  emptyButton: Object.assign({
    borderRadius: 12,
    paddingVertical: 14,
    paddingHorizontal: 24
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.2,
      shadowRadius: 8
    },
    android: {
      elevation: 4
    }
  })),
  emptyButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: '600',
    textAlign: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX0RpbWVuc2lvbnMkZ2V0IiwiRGltZW5zaW9ucyIsImdldCIsIndpZHRoIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJjb250YWluZXIiLCJmbGV4IiwiYmFja2dyb3VuZENvbG9yIiwiaGVhZGVyIiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsInBhZGRpbmdIb3Jpem9udGFsIiwicGFkZGluZ1RvcCIsIlBsYXRmb3JtIiwiT1MiLCJwYWRkaW5nQm90dG9tIiwiYmFja0J1dHRvbiIsIk9iamVjdCIsImFzc2lnbiIsImhlaWdodCIsImJvcmRlclJhZGl1cyIsInNlbGVjdCIsImlvcyIsInNoYWRvd0NvbG9yIiwic2hhZG93T2Zmc2V0Iiwic2hhZG93T3BhY2l0eSIsInNoYWRvd1JhZGl1cyIsImFuZHJvaWQiLCJlbGV2YXRpb24iLCJiYWNrQnV0dG9uVGV4dCIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImhlYWRlckNlbnRlciIsInF1ZXN0aW9uQ291bnRlciIsInRvdGFsUXVlc3Rpb25zIiwibWFyZ2luVG9wIiwic2NvcmVDaGlwIiwibWluV2lkdGgiLCJzY29yZUNoaXBUZXh0IiwiY29sb3IiLCJwcm9ncmVzc1NlY3Rpb24iLCJtYXJnaW5Cb3R0b20iLCJnYXAiLCJwcm9ncmVzc1RyYWNrIiwicHJvZ3Jlc3NCYXJRdWl6IiwicHJvZ3Jlc3NUZXh0IiwidGV4dEFsaWduIiwicXVlc3Rpb25TZWN0aW9uIiwicXVlc3Rpb25DYXJkIiwicGFkZGluZyIsImJvcmRlclRvcFdpZHRoIiwiYm9yZGVyVG9wQ29sb3IiLCJxdWVzdGlvbkxhYmVsQ29udGFpbmVyIiwicXVlc3Rpb25MYWJlbEljb24iLCJxdWVzdGlvbkxhYmVsIiwid29yZFRvVHJhbnNsYXRlIiwibGV2ZWxJbmZvIiwiZm9udFN0eWxlIiwiY2hvaWNlc1NlY3Rpb24iLCJjaG9pY2VCdXR0b24iLCJib3JkZXJXaWR0aCIsImJvcmRlckNvbG9yIiwib3ZlcmZsb3ciLCJjaG9pY2VCdXR0b25Jbm5lciIsInBhZGRpbmdWZXJ0aWNhbCIsImNob2ljZU51bWJlckNvbnRhaW5lciIsImNob2ljZU51bWJlclRleHQiLCJjaG9pY2VUZXh0IiwiY2hvaWNlU2VsZWN0ZWQiLCJjaG9pY2VDb3JyZWN0IiwiY2hvaWNlV3JvbmciLCJjaG9pY2VUZXh0Q29ycmVjdCIsImNob2ljZVRleHRXcm9uZyIsImNob2ljZUljb24iLCJmZWVkYmFja0NvbnRhaW5lciIsImZlZWRiYWNrTWVzc2FnZVJvdyIsImZlZWRiYWNrSWNvbiIsImZlZWRiYWNrVGV4dCIsImNvbnRpbnVlQnV0dG9uIiwiY29udGludWVCdXR0b25UZXh0IiwibWFyZ2luUmlnaHQiLCJjb250aW51ZUJ1dHRvbkljb24iLCJyZXN1bHRDb250YWluZXIiLCJyZXN1bHRFbW9qaSIsInJlc3VsdFRpdGxlIiwicmVzdWx0TWVzc2FnZSIsImxpbmVIZWlnaHQiLCJzY29yZUNhcmQiLCJzY29yZVJvdyIsInNjb3JlTnVtYmVyIiwic2NvcmVTbGFzaCIsIm1hcmdpbkxlZnQiLCJwcm9ncmVzc0JhciIsInByb2dyZXNzRmlsbCIsInBlcmNlbnRhZ2VUZXh0Iiwic291cmNlVGV4dCIsImJ1dHRvbnNDb250YWluZXIiLCJtYXhXaWR0aCIsImJ1dHRvbkNvbnRlbnQiLCJyZXN0YXJ0QnV0dG9uIiwicmVzdGFydEljb24iLCJyZXN0YXJ0VGV4dCIsImZpbmlzaEJ1dHRvbiIsImZpbmlzaEljb24iLCJmaW5pc2hUZXh0IiwiZW1wdHlDb250YWluZXIiLCJlbXB0eUVtb2ppIiwiZW1wdHlUaXRsZSIsImVtcHR5TWVzc2FnZSIsImVtcHR5QnV0dG9uIiwiZW1wdHlCdXR0b25UZXh0Il0sInNvdXJjZXMiOlsic3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3NjcmVlbnMvVm9jYWJ1bGFyeVJldmlzaW9uL3N0eWxlLmpzIC0gU1RZTEVTIFBST1BSRVMgRVQgTU9ERVJORVNcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgRGltZW5zaW9ucywgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5cclxuY29uc3QgeyB3aWR0aCB9ID0gRGltZW5zaW9ucy5nZXQoJ3dpbmRvdycpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gIC8vID09PT09PT09PT09PT09PT09PT0gQ09OVEFJTkVSID09PT09PT09PT09PT09PT09PT1cclxuICBjb250YWluZXI6IHtcclxuICAgIGZsZXg6IDEsXHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRjhGQUZDJyxcclxuICB9LFxyXG5cclxuICAvLyA9PT09PT09PT09PT09PT09PT09IEhFQURFUiBQUk9QUkUgPT09PT09PT09PT09PT09PT09PVxyXG4gIGhlYWRlcjoge1xyXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXHJcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMjAsXHJcbiAgICBwYWRkaW5nVG9wOiBQbGF0Zm9ybS5PUyA9PT0gJ2lvcycgPyA1MCA6IDIwLFxyXG4gICAgcGFkZGluZ0JvdHRvbTogMTYsXHJcbiAgfSxcclxuXHJcbiAgYmFja0J1dHRvbjoge1xyXG4gICAgd2lkdGg6IDQwLFxyXG4gICAgaGVpZ2h0OiA0MCxcclxuICAgIGJvcmRlclJhZGl1czogMjAsXHJcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgIGJhY2tncm91bmRDb2xvcjogJyNGRkZGRkYnLFxyXG4gICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcclxuICAgICAgaW9zOiB7XHJcbiAgICAgICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogMiB9LFxyXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMSxcclxuICAgICAgICBzaGFkb3dSYWRpdXM6IDQsXHJcbiAgICAgIH0sXHJcbiAgICAgIGFuZHJvaWQ6IHtcclxuICAgICAgICBlbGV2YXRpb246IDMsXHJcbiAgICAgIH0sXHJcbiAgICB9KSxcclxuICB9LFxyXG5cclxuICBiYWNrQnV0dG9uVGV4dDoge1xyXG4gICAgZm9udFNpemU6IDE4LFxyXG4gICAgZm9udFdlaWdodDogJzYwMCcsXHJcbiAgfSxcclxuXHJcbiAgaGVhZGVyQ2VudGVyOiB7XHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICB9LFxyXG5cclxuICBxdWVzdGlvbkNvdW50ZXI6IHtcclxuICAgIGZvbnRTaXplOiAxOCxcclxuICAgIGZvbnRXZWlnaHQ6ICc3MDAnLFxyXG4gIH0sXHJcblxyXG4gIHRvdGFsUXVlc3Rpb25zOiB7XHJcbiAgICBmb250U2l6ZTogMTQsXHJcbiAgICBmb250V2VpZ2h0OiAnNTAwJyxcclxuICAgIG1hcmdpblRvcDogMixcclxuICB9LFxyXG5cclxuICBzY29yZUNoaXA6IHtcclxuICAgIG1pbldpZHRoOiA0MCxcclxuICAgIGhlaWdodDogNDAsXHJcbiAgICBib3JkZXJSYWRpdXM6IDIwLFxyXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICAuLi5QbGF0Zm9ybS5zZWxlY3Qoe1xyXG4gICAgICBpb3M6IHtcclxuICAgICAgICBzaGFkb3dDb2xvcjogJyMzQjgyRjYnLFxyXG4gICAgICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiA0IH0sXHJcbiAgICAgICAgc2hhZG93T3BhY2l0eTogMC4zLFxyXG4gICAgICAgIHNoYWRvd1JhZGl1czogOCxcclxuICAgICAgfSxcclxuICAgICAgYW5kcm9pZDoge1xyXG4gICAgICAgIGVsZXZhdGlvbjogNCxcclxuICAgICAgfSxcclxuICAgIH0pLFxyXG4gIH0sXHJcblxyXG4gIHNjb3JlQ2hpcFRleHQ6IHtcclxuICAgIGNvbG9yOiAnd2hpdGUnLFxyXG4gICAgZm9udFNpemU6IDE2LFxyXG4gICAgZm9udFdlaWdodDogJzcwMCcsXHJcbiAgfSxcclxuXHJcbiAgLy8gPT09PT09PT09PT09PT09PT09PSBQUk9HUkVTUyA9PT09PT09PT09PT09PT09PT09XHJcbiAgcHJvZ3Jlc3NTZWN0aW9uOiB7XHJcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMjAsXHJcbiAgICBtYXJnaW5Cb3R0b206IDI0LFxyXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgIGdhcDogMTIsXHJcbiAgfSxcclxuXHJcbiAgcHJvZ3Jlc3NUcmFjazoge1xyXG4gICAgZmxleDogMSxcclxuICAgIGhlaWdodDogNixcclxuICAgIGJhY2tncm91bmRDb2xvcjogJyNGM0Y0RjYnLFxyXG4gICAgYm9yZGVyUmFkaXVzOiAzLFxyXG4gIH0sXHJcblxyXG4gIHByb2dyZXNzQmFyUXVpejoge1xyXG4gICAgaGVpZ2h0OiA2LFxyXG4gICAgYm9yZGVyUmFkaXVzOiAzLFxyXG4gIH0sXHJcblxyXG4gIHByb2dyZXNzVGV4dDoge1xyXG4gICAgZm9udFNpemU6IDE0LFxyXG4gICAgZm9udFdlaWdodDogJzYwMCcsXHJcbiAgICBtaW5XaWR0aDogNDAsXHJcbiAgICB0ZXh0QWxpZ246ICdyaWdodCcsXHJcbiAgfSxcclxuXHJcbiAgLy8gPT09PT09PT09PT09PT09PT09PSBRVUVTVElPTiA9PT09PT09PT09PT09PT09PT09XHJcbiAgcXVlc3Rpb25TZWN0aW9uOiB7XHJcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMjAsXHJcbiAgICBtYXJnaW5Cb3R0b206IDMyLFxyXG4gIH0sXHJcblxyXG4gIHF1ZXN0aW9uQ2FyZDoge1xyXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI0ZGRkZGRicsXHJcbiAgICBib3JkZXJSYWRpdXM6IDI0LFxyXG4gICAgcGFkZGluZzogMjQsXHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgIGJvcmRlclRvcFdpZHRoOiA0LFxyXG4gICAgYm9yZGVyVG9wQ29sb3I6ICcjM0I4MkY2JywgLy8gb3IgeW91ciBpbnRlbmRlZCBjb2xvclxyXG4gICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcclxuICAgICAgaW9zOiB7XHJcbiAgICAgICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogOCB9LFxyXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMDcsXHJcbiAgICAgICAgc2hhZG93UmFkaXVzOiAxNixcclxuICAgICAgfSxcclxuICAgICAgYW5kcm9pZDoge1xyXG4gICAgICAgIGVsZXZhdGlvbjogNSxcclxuICAgICAgfSxcclxuICAgIH0pLFxyXG4gIH0sXHJcbiAgcXVlc3Rpb25MYWJlbENvbnRhaW5lcjoge1xyXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgIGdhcDogOCxcclxuICAgIG1hcmdpbkJvdHRvbTogMTYsXHJcbiAgfSxcclxuXHJcbiAgcXVlc3Rpb25MYWJlbEljb246IHtcclxuICAgIGZvbnRTaXplOiAyMCxcclxuICB9LFxyXG5cclxuICBxdWVzdGlvbkxhYmVsOiB7XHJcbiAgICBmb250U2l6ZTogMTgsXHJcbiAgICBmb250V2VpZ2h0OiAnNzAwJyxcclxuICAgIGNvbG9yOiAnIzZCNzI4MCcsXHJcbiAgfSxcclxuXHJcbiAgd29yZFRvVHJhbnNsYXRlOiB7XHJcbiAgICBmb250U2l6ZTogMzYsXHJcbiAgICBmb250V2VpZ2h0OiAnODAwJyxcclxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgICBtYXJnaW5Cb3R0b206IDgsXHJcbiAgfSxcclxuXHJcbiAgbGV2ZWxJbmZvOiB7XHJcbiAgICBmb250U2l6ZTogMTIsXHJcbiAgICBmb250V2VpZ2h0OiAnNTAwJyxcclxuICAgIGZvbnRTdHlsZTogJ2l0YWxpYycsXHJcbiAgfSxcclxuXHJcbiAgLy8gPT09PT09PT09PT09PT09PT09PSBDSE9JWCAoUkVERVNJR04pID09PT09PT09PT09PT09PT09PT1cclxuICBjaG9pY2VzU2VjdGlvbjoge1xyXG4gICAgZmxleDogMSxcclxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAyMCxcclxuICAgIGdhcDogMTYsXHJcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsIC8vIFBvdXIgY2VudHJlciBsZXMgY2hvaXggcydpbHMgc29udCBwZXUgbm9tYnJldXhcclxuICAgIHBhZGRpbmdCb3R0b206IDIwLFxyXG4gIH0sXHJcblxyXG4gIGNob2ljZUJ1dHRvbjoge1xyXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI0ZGRkZGRicsXHJcbiAgICBib3JkZXJSYWRpdXM6IDIwLFxyXG4gICAgYm9yZGVyV2lkdGg6IDIsXHJcbiAgICBib3JkZXJDb2xvcjogJyNFNUU3RUInLFxyXG4gICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcclxuICAgICAgaW9zOiB7XHJcbiAgICAgICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogNCB9LFxyXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMDgsXHJcbiAgICAgICAgc2hhZG93UmFkaXVzOiAxMixcclxuICAgICAgfSxcclxuICAgICAgYW5kcm9pZDoge1xyXG4gICAgICAgIGVsZXZhdGlvbjogMyxcclxuICAgICAgfSxcclxuICAgIH0pLFxyXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxyXG4gIH0sXHJcblxyXG4gIGNob2ljZUJ1dHRvbklubmVyOiB7XHJcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcclxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgcGFkZGluZ1ZlcnRpY2FsOiAxOCxcclxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAyMCxcclxuICAgIGdhcDogMTYsXHJcbiAgfSxcclxuXHJcbiAgY2hvaWNlTnVtYmVyQ29udGFpbmVyOiB7XHJcbiAgICB3aWR0aDogMzIsXHJcbiAgICBoZWlnaHQ6IDMyLFxyXG4gICAgYm9yZGVyUmFkaXVzOiAxNixcclxuICAgIGJhY2tncm91bmRDb2xvcjogJyNGM0Y0RjYnLFxyXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgfSxcclxuXHJcbiAgY2hvaWNlTnVtYmVyVGV4dDoge1xyXG4gICAgZm9udFNpemU6IDE2LFxyXG4gICAgZm9udFdlaWdodDogJzcwMCcsXHJcbiAgICBjb2xvcjogJyM2QjcyODAnLFxyXG4gIH0sXHJcblxyXG4gIGNob2ljZVRleHQ6IHtcclxuICAgIGZvbnRTaXplOiAxNyxcclxuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxyXG4gICAgZmxleDogMSxcclxuICB9LFxyXG5cclxuICBjaG9pY2VTZWxlY3RlZDoge1xyXG4gICAgYm9yZGVyQ29sb3I6ICcjM0I4MkY2JyxcclxuICAgIGJhY2tncm91bmRDb2xvcjogJyNFRkY2RkYnLFxyXG4gIH0sXHJcblxyXG4gIGNob2ljZUNvcnJlY3Q6IHtcclxuICAgIGJvcmRlckNvbG9yOiAnIzEwQjk4MScsXHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRENGQ0U3JyxcclxuICB9LFxyXG5cclxuICBjaG9pY2VXcm9uZzoge1xyXG4gICAgYm9yZGVyQ29sb3I6ICcjRUY0NDQ0JyxcclxuICAgIGJhY2tncm91bmRDb2xvcjogJyNGRUUyRTInLFxyXG4gIH0sXHJcblxyXG4gIGNob2ljZVRleHRDb3JyZWN0OiB7XHJcbiAgICBjb2xvcjogJyMwNTk2NjknLFxyXG4gIH0sXHJcbiAgY2hvaWNlVGV4dFdyb25nOiB7XHJcbiAgICBjb2xvcjogJyNEQzI2MjYnLFxyXG4gIH0sXHJcblxyXG4gIGNob2ljZUljb246IHtcclxuICAgIGZvbnRTaXplOiAyNCxcclxuICAgIGZvbnRXZWlnaHQ6ICc3MDAnLFxyXG4gIH0sXHJcblxyXG4gIC8vID09PT09PT09PT09PT09PT09PT0gRkVFREJBQ0sgJiBBQ1RJT04gRk9PVEVSID09PT09PT09PT09PT09PT09PT1cclxuICBmZWVkYmFja0NvbnRhaW5lcjoge1xyXG4gICAgcGFkZGluZ0hvcml6b250YWw6IDIwLFxyXG4gICAgcGFkZGluZ1RvcDogMTYsXHJcbiAgICBwYWRkaW5nQm90dG9tOiBQbGF0Zm9ybS5PUyA9PT0gJ2lvcycgPyAzNCA6IDIwLFxyXG4gICAgYm9yZGVyVG9wV2lkdGg6IDEsXHJcbiAgICBib3JkZXJUb3BDb2xvcjogJyNFNUU3RUInLFxyXG4gICAgZ2FwOiAxNiwgLy8gRXNwYWNlIGVudHJlIGxlIG1lc3NhZ2UgZXQgbGUgYm91dG9uXHJcbiAgfSxcclxuXHJcbiAgZmVlZGJhY2tNZXNzYWdlUm93OiB7XHJcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcclxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgZ2FwOiA4LFxyXG4gIH0sXHJcblxyXG4gIGZlZWRiYWNrSWNvbjoge1xyXG4gICAgZm9udFNpemU6IDIwLFxyXG4gIH0sXHJcblxyXG4gIGZlZWRiYWNrVGV4dDoge1xyXG4gICAgZm9udFNpemU6IDE2LFxyXG4gICAgZm9udFdlaWdodDogJzYwMCcsXHJcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxyXG4gIH0sXHJcblxyXG4gIGNvbnRpbnVlQnV0dG9uOiB7XHJcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JywgLy8gUG91ciBhbGlnbmVyIGxlIHRleHRlIGV0IGwnaWPDtG5lXHJcbiAgICBib3JkZXJSYWRpdXM6IDIwLFxyXG4gICAgcGFkZGluZ1ZlcnRpY2FsOiAxOCxcclxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcclxuICAgICAgaW9zOiB7XHJcbiAgICAgICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogNiB9LFxyXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMjUsXHJcbiAgICAgICAgc2hhZG93UmFkaXVzOiAxMixcclxuICAgICAgfSxcclxuICAgICAgYW5kcm9pZDoge1xyXG4gICAgICAgIGVsZXZhdGlvbjogNixcclxuICAgICAgfSxcclxuICAgIH0pLFxyXG4gIH0sXHJcblxyXG4gIGNvbnRpbnVlQnV0dG9uVGV4dDoge1xyXG4gICAgZm9udFNpemU6IDE4LFxyXG4gICAgZm9udFdlaWdodDogJzcwMCcsXHJcbiAgICBjb2xvcjogJyNGRkZGRkYnLFxyXG4gICAgbWFyZ2luUmlnaHQ6IDgsIC8vIEVzcGFjZSBlbnRyZSBsZSB0ZXh0ZSBldCBsJ2ljw7RuZVxyXG4gIH0sXHJcblxyXG4gIGNvbnRpbnVlQnV0dG9uSWNvbjoge1xyXG4gICAgZm9udFNpemU6IDIyLFxyXG4gICAgY29sb3I6ICcjRkZGRkZGJyxcclxuICB9LFxyXG5cclxuICAvLyA9PT09PT09PT09PT09PT09PT09IFLDiVNVTFRBVFMgTU9ERVJORVMgPT09PT09PT09PT09PT09PT09PVxyXG4gIHJlc3VsdENvbnRhaW5lcjoge1xyXG4gICAgZmxleDogMSxcclxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcclxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgcGFkZGluZ0hvcml6b250YWw6IDMyLFxyXG4gIH0sXHJcblxyXG4gIHJlc3VsdEVtb2ppOiB7XHJcbiAgICBmb250U2l6ZTogNjQsXHJcbiAgICBtYXJnaW5Cb3R0b206IDI0LFxyXG4gIH0sXHJcblxyXG4gIHJlc3VsdFRpdGxlOiB7XHJcbiAgICBmb250U2l6ZTogMjgsXHJcbiAgICBmb250V2VpZ2h0OiAnODAwJyxcclxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgICBtYXJnaW5Cb3R0b206IDgsXHJcbiAgfSxcclxuXHJcbiAgcmVzdWx0TWVzc2FnZToge1xyXG4gICAgZm9udFNpemU6IDE4LFxyXG4gICAgZm9udFdlaWdodDogJzUwMCcsXHJcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxyXG4gICAgbWFyZ2luQm90dG9tOiAzMixcclxuICAgIGxpbmVIZWlnaHQ6IDI0LFxyXG4gIH0sXHJcblxyXG4gIC8vID09PT09PT09PT09PT09PT09PT0gU0NPUkUgQ0FSRCBNT0RFUk5FID09PT09PT09PT09PT09PT09PT1cclxuICBzY29yZUNhcmQ6IHtcclxuICAgIGJhY2tncm91bmRDb2xvcjogJyNGRkZGRkYnLFxyXG4gICAgYm9yZGVyUmFkaXVzOiAyNCxcclxuICAgIHBhZGRpbmc6IDMyLFxyXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICBtYXJnaW5Cb3R0b206IDI0LFxyXG4gICAgbWluV2lkdGg6IHdpZHRoICogMC43LFxyXG4gICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcclxuICAgICAgaW9zOiB7XHJcbiAgICAgICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogMTIgfSxcclxuICAgICAgICBzaGFkb3dPcGFjaXR5OiAwLjE1LFxyXG4gICAgICAgIHNoYWRvd1JhZGl1czogMjQsXHJcbiAgICAgIH0sXHJcbiAgICAgIGFuZHJvaWQ6IHtcclxuICAgICAgICBlbGV2YXRpb246IDgsXHJcbiAgICAgIH0sXHJcbiAgICB9KSxcclxuICB9LFxyXG5cclxuICBzY29yZVJvdzoge1xyXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXHJcbiAgICBhbGlnbkl0ZW1zOiAnYmFzZWxpbmUnLFxyXG4gICAgbWFyZ2luQm90dG9tOiAyMCxcclxuICB9LFxyXG5cclxuICBzY29yZU51bWJlcjoge1xyXG4gICAgZm9udFNpemU6IDQ4LFxyXG4gICAgZm9udFdlaWdodDogJzkwMCcsXHJcbiAgfSxcclxuXHJcbiAgc2NvcmVTbGFzaDoge1xyXG4gICAgZm9udFNpemU6IDI0LFxyXG4gICAgZm9udFdlaWdodDogJzYwMCcsXHJcbiAgICBtYXJnaW5MZWZ0OiA0LFxyXG4gIH0sXHJcblxyXG4gIHByb2dyZXNzQmFyOiB7XHJcbiAgICB3aWR0aDogJzEwMCUnLFxyXG4gICAgaGVpZ2h0OiA4LFxyXG4gICAgYm9yZGVyUmFkaXVzOiA0LFxyXG4gICAgbWFyZ2luQm90dG9tOiAxNixcclxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcclxuICB9LFxyXG5cclxuICBwcm9ncmVzc0ZpbGw6IHtcclxuICAgIGhlaWdodDogOCxcclxuICAgIGJvcmRlclJhZGl1czogNCxcclxuICB9LFxyXG5cclxuICBwZXJjZW50YWdlVGV4dDoge1xyXG4gICAgZm9udFNpemU6IDE4LFxyXG4gICAgZm9udFdlaWdodDogJzcwMCcsXHJcbiAgfSxcclxuXHJcbiAgc291cmNlVGV4dDoge1xyXG4gICAgZm9udFNpemU6IDE0LFxyXG4gICAgZm9udFdlaWdodDogJzUwMCcsXHJcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxyXG4gICAgbWFyZ2luQm90dG9tOiAzMixcclxuICAgIGZvbnRTdHlsZTogJ2l0YWxpYycsXHJcbiAgfSxcclxuXHJcbiAgLy8gPT09PT09PT09PT09PT09PT09PSBCT1VUT05TIE1PREVSTkVTID09PT09PT09PT09PT09PT09PT1cclxuICBidXR0b25zQ29udGFpbmVyOiB7XHJcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcclxuICAgIGdhcDogMTYsXHJcbiAgICB3aWR0aDogJzEwMCUnLFxyXG4gICAgbWF4V2lkdGg6IDMyMCxcclxuICB9LFxyXG5cclxuICBidXR0b25Db250ZW50OiB7XHJcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcclxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgZ2FwOiA2LCAvLyDinIUgUsOpZHVpdCBkZSA4IMOgIDZcclxuICB9LFxyXG5cclxuICByZXN0YXJ0QnV0dG9uOiB7XHJcbiAgICBmbGV4OiAxLFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI0ZGRkZGRicsXHJcbiAgICBib3JkZXJSYWRpdXM6IDE2LFxyXG4gICAgcGFkZGluZ1ZlcnRpY2FsOiAxOCxcclxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAxNiwgLy8g4pyFIFLDqWR1aXQgZGUgMjAgw6AgMTZcclxuICAgIGJvcmRlcldpZHRoOiAyLFxyXG4gICAgYm9yZGVyQ29sb3I6ICcjRTVFN0VCJyxcclxuICAgIC4uLlBsYXRmb3JtLnNlbGVjdCh7XHJcbiAgICAgIGlvczoge1xyXG4gICAgICAgIHNoYWRvd0NvbG9yOiAnIzAwMCcsXHJcbiAgICAgICAgc2hhZG93T2Zmc2V0OiB7IHdpZHRoOiAwLCBoZWlnaHQ6IDQgfSxcclxuICAgICAgICBzaGFkb3dPcGFjaXR5OiAwLjEsXHJcbiAgICAgICAgc2hhZG93UmFkaXVzOiA4LFxyXG4gICAgICB9LFxyXG4gICAgICBhbmRyb2lkOiB7XHJcbiAgICAgICAgZWxldmF0aW9uOiA0LFxyXG4gICAgICB9LFxyXG4gICAgfSksXHJcbiAgfSxcclxuXHJcbiAgcmVzdGFydEljb246IHtcclxuICAgIGZvbnRTaXplOiAxNiwgLy8g4pyFIFLDqWR1aXQgZGUgMTggw6AgMTZcclxuICB9LFxyXG5cclxuICByZXN0YXJ0VGV4dDoge1xyXG4gICAgZm9udFNpemU6IDE1LCAvLyDinIUgUsOpZHVpdCBkZSAxNiDDoCAxNVxyXG4gICAgZm9udFdlaWdodDogJzYwMCcsXHJcbiAgICBjb2xvcjogJyMxRjI5MzcnLFxyXG4gIH0sXHJcblxyXG4gIGZpbmlzaEJ1dHRvbjoge1xyXG4gICAgZmxleDogMSxcclxuICAgIGJvcmRlclJhZGl1czogMTYsXHJcbiAgICBwYWRkaW5nVmVydGljYWw6IDE4LFxyXG4gICAgcGFkZGluZ0hvcml6b250YWw6IDE2LCAvLyDinIUgUsOpZHVpdCBkZSAyMCDDoCAxNlxyXG4gICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcclxuICAgICAgaW9zOiB7XHJcbiAgICAgICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogNiB9LFxyXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMjUsXHJcbiAgICAgICAgc2hhZG93UmFkaXVzOiAxMixcclxuICAgICAgfSxcclxuICAgICAgYW5kcm9pZDoge1xyXG4gICAgICAgIGVsZXZhdGlvbjogNixcclxuICAgICAgfSxcclxuICAgIH0pLFxyXG4gIH0sXHJcblxyXG4gIGZpbmlzaEljb246IHtcclxuICAgIGZvbnRTaXplOiAxNiwgLy8g4pyFIFLDqWR1aXQgZGUgMTggw6AgMTZcclxuICAgIGNvbG9yOiAnI0ZGRkZGRicsXHJcbiAgfSxcclxuXHJcbiAgZmluaXNoVGV4dDoge1xyXG4gICAgZm9udFNpemU6IDE1LCAvLyDinIUgUsOpZHVpdCBkZSAxNiDDoCAxNVxyXG4gICAgZm9udFdlaWdodDogJzcwMCcsXHJcbiAgICBjb2xvcjogJyNGRkZGRkYnLFxyXG4gIH0sXHJcblxyXG4gIC8vID09PT09PT09PT09PT09PT09PT0gRU1QVFkgU1RBVEUgPT09PT09PT09PT09PT09PT09PVxyXG4gIGVtcHR5Q29udGFpbmVyOiB7XHJcbiAgICBmbGV4OiAxLFxyXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMzIsXHJcbiAgfSxcclxuXHJcbiAgZW1wdHlFbW9qaToge1xyXG4gICAgZm9udFNpemU6IDY0LFxyXG4gICAgbWFyZ2luQm90dG9tOiAyNCxcclxuICB9LFxyXG5cclxuICBlbXB0eVRpdGxlOiB7XHJcbiAgICBmb250U2l6ZTogMjQsXHJcbiAgICBmb250V2VpZ2h0OiAnNzAwJyxcclxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgICBtYXJnaW5Cb3R0b206IDgsXHJcbiAgfSxcclxuXHJcbiAgZW1wdHlNZXNzYWdlOiB7XHJcbiAgICBmb250U2l6ZTogMTYsXHJcbiAgICBmb250V2VpZ2h0OiAnNTAwJyxcclxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgICBtYXJnaW5Cb3R0b206IDMyLFxyXG4gICAgbGluZUhlaWdodDogMjQsXHJcbiAgfSxcclxuXHJcbiAgZW1wdHlCdXR0b246IHtcclxuICAgIGJvcmRlclJhZGl1czogMTIsXHJcbiAgICBwYWRkaW5nVmVydGljYWw6IDE0LFxyXG4gICAgcGFkZGluZ0hvcml6b250YWw6IDI0LFxyXG4gICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcclxuICAgICAgaW9zOiB7XHJcbiAgICAgICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogNCB9LFxyXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMixcclxuICAgICAgICBzaGFkb3dSYWRpdXM6IDgsXHJcbiAgICAgIH0sXHJcbiAgICAgIGFuZHJvaWQ6IHtcclxuICAgICAgICBlbGV2YXRpb246IDQsXHJcbiAgICAgIH0sXHJcbiAgICB9KSxcclxuICB9LFxyXG5cclxuICBlbXB0eUJ1dHRvblRleHQ6IHtcclxuICAgIGNvbG9yOiAnI0ZGRkZGRicsXHJcbiAgICBmb250U2l6ZTogMTYsXHJcbiAgICBmb250V2VpZ2h0OiAnNjAwJyxcclxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgfSxcclxufSk7Il0sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBRUEsSUFBQUMsZUFBQSxHQUFrQkMsdUJBQVUsQ0FBQ0MsR0FBRyxDQUFDLFFBQVEsQ0FBQztFQUFsQ0MsS0FBSyxHQUFBSCxlQUFBLENBQUxHLEtBQUs7QUFBOEIsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEs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