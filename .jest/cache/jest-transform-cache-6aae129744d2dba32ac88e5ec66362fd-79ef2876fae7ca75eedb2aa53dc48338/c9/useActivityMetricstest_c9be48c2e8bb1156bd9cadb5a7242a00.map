{"version":3,"names":["_getJestObj","mock","setItem","jest","fn","Promise","resolve","getItem","removeItem","_interopRequireDefault","require","_asyncToGenerator2","_react","_asyncStorage","_useActivityMetrics","_require","describe","MOCK_DATE","Date","MOCK_TODAY_STRING","toDateString","beforeEach","useFakeTimers","setSystemTime","AsyncStorage","mockClear","afterEach","runOnlyPendingTimers","useRealTimers","it","default","mockResolvedValueOnce","JSON","stringify","someMetric","_renderHook","renderHook","useActivityMetrics","result","waitForNextUpdate","expect","current","isLoading","toBe","currentStreak","todayMinutes","formattedTime","metrics","toEqual","toHaveBeenCalledWith","_renderHook2","act","startSession","advanceTimersByTime","endSession","getTime","_renderHook3","updateStreak","_renderHook4","_renderHook5","not","any","String","_renderHook6","rerender","streakTrend","toBeNull","_renderHook7"],"sources":["useActivityMetrics.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport { renderHook, act } from '@testing-library/react';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useActivityMetrics from '../../src/hooks/useActivityMetrics';\n\n// Mock AsyncStorage\njest.mock('@react-native-async-storage/async-storage', () => ({\n  setItem: jest.fn(() => Promise.resolve()),\n  getItem: jest.fn(() => Promise.resolve(null)),\n  removeItem: jest.fn(() => Promise.resolve()),\n}));\n\ndescribe('useActivityMetrics', () => {\n  const MOCK_DATE = new Date('2025-01-01T12:00:00.000Z');\n  const MOCK_TODAY_STRING = MOCK_DATE.toDateString();\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n    jest.setSystemTime(MOCK_DATE);\n    AsyncStorage.getItem.mockClear();\n    AsyncStorage.setItem.mockClear();\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n  });\n\n  it('initializes with default values and loads metrics', async () => {\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify({ someMetric: 1 }));\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n\n    expect(result.current.isLoading).toBe(true);\n    expect(result.current.currentStreak).toBe(0);\n    expect(result.current.todayMinutes).toBe(0);\n    expect(result.current.formattedTime).toBe('0min');\n\n    await waitForNextUpdate();\n\n    expect(result.current.isLoading).toBe(false);\n    expect(result.current.metrics).toEqual({ someMetric: 1 });\n    expect(AsyncStorage.getItem).toHaveBeenCalledWith('activity_metrics');\n  });\n\n  it('starts and ends a session, updating todayMinutes and saving', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate(); // Wait for initial load\n\n    act(() => {\n      result.current.startSession();\n    });\n\n    jest.advanceTimersByTime(120 * 1000); // Advance by 2 minutes\n\n    await act(async () => {\n      await result.current.endSession();\n    });\n\n    expect(result.current.todayMinutes).toBe(2);\n    expect(result.current.formattedTime).toBe('2min');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('today_minutes', '2');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('last_time_date', MOCK_TODAY_STRING);\n  });\n\n  it('updates streak for a consecutive day', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(null) // No initial metrics\n      .mockResolvedValueOnce(JSON.stringify({ currentStreak: 1 })) // Mock initial streak\n      .mockResolvedValueOnce(new Date(MOCK_DATE.getTime() - 24 * 60 * 60 * 1000).toDateString()); // last_activity_date was yesterday\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate(); // Initial load\n\n    act(() => {\n      result.current.updateStreak();\n    });\n\n    await waitForNextUpdate(); // Wait for streak update\n\n    expect(result.current.currentStreak).toBe(2);\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('current_streak', '2');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('last_activity_date', MOCK_TODAY_STRING);\n  });\n\n  it('resets streak if not consecutive day', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(null) // No initial metrics\n      .mockResolvedValueOnce(JSON.stringify({ currentStreak: 5 })) // Mock initial streak\n      .mockResolvedValueOnce(new Date(MOCK_DATE.getTime() - 48 * 60 * 60 * 1000).toDateString()); // last_activity_date was 2 days ago\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate(); // Initial load\n\n    act(() => {\n      result.current.updateStreak();\n    });\n\n    await waitForNextUpdate(); // Wait for streak update\n\n    expect(result.current.currentStreak).toBe(1);\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('current_streak', '1');\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith('last_activity_date', MOCK_TODAY_STRING);\n  });\n\n  it('does not update streak if already updated today', async () => {\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(null) // No initial metrics\n      .mockResolvedValueOnce(JSON.stringify({ currentStreak: 3 })) // Mock initial streak\n      .mockResolvedValueOnce(MOCK_TODAY_STRING); // last_activity_date is today\n\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate(); // Initial load\n\n    act(() => {\n      result.current.updateStreak();\n    });\n\n    await waitForNextUpdate(); // Wait for streak update\n\n    expect(result.current.currentStreak).toBe(3); // Should remain unchanged\n    expect(AsyncStorage.setItem).not.toHaveBeenCalledWith('current_streak', expect.any(String));\n  });\n\n  it('returns correct streak trend', async () => {\n    const { result, waitForNextUpdate, rerender } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate(); // Initial load\n\n    act(() => {\n      result.current.updateStreak(); // Set streak to 1\n    });\n    await waitForNextUpdate();\n    expect(result.current.streakTrend).toBe('🔥 Continue!');\n\n    act(() => {\n      // Manually set streak for testing purposes, in real app this would be via updateStreak\n      result.current.currentStreak = 3;\n    });\n    rerender();\n    expect(result.current.streakTrend).toBe('💪 En forme!');\n\n    act(() => {\n      result.current.currentStreak = 7;\n    });\n    rerender();\n    expect(result.current.streakTrend).toBe('🏆 Incroyable!');\n\n    act(() => {\n      result.current.currentStreak = 0;\n    });\n    rerender();\n    expect(result.current.streakTrend).toBeNull();\n  });\n\n  it('returns correct formatted time', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n    await waitForNextUpdate(); // Initial load\n\n    act(() => {\n      result.current.startSession();\n    });\n\n    jest.advanceTimersByTime(30 * 60 * 1000); // 30 minutes\n    await act(async () => { await result.current.endSession(); });\n    expect(result.current.formattedTime).toBe('30min');\n\n    act(() => {\n      result.current.startSession();\n    });\n    jest.advanceTimersByTime(60 * 60 * 1000); // 60 minutes (1 hour)\n    await act(async () => { await result.current.endSession(); });\n    expect(result.current.formattedTime).toBe('1h');\n\n    act(() => {\n      result.current.startSession();\n    });\n    jest.advanceTimersByTime(75 * 60 * 1000); // 75 minutes (1h 15min)\n    await act(async () => { await result.current.endSession(); });\n    expect(result.current.formattedTime).toBe('2h15min'); // 30 + 60 + 75 = 165 minutes total\n  });\n});\n"],"mappings":"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","ignoreList":[]}