99595a1c7a660a16fae0f1e99893993b
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
function cov_wmfqdi7a4() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\index.js";
  var hash = "e83572f92df9585ef6a7fce0f17258c7dacdcecd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 18
        },
        end: {
          line: 54,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e83572f92df9585ef6a7fce0f17258c7dacdcecd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_wmfqdi7a4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wmfqdi7a4();
import { CATEGORIES, DIFFICULTY, CATEGORY_DESCRIPTIONS, USAGE_NOTES, LEVEL_INFO, CONTENT_STATS, LEARNING_SEQUENCE } from './metadata.js';
import dailyRoutines from './categories/daily-routines.js';
import pastExperiences from './categories/past-experiences.js';
import futurePlans from './categories/future-plans.js';
import opinionsPreferences from './categories/opinions-preferences.js';
import healthWellbeing from './categories/health-wellbeing.js';
import housingEnvironment from './categories/housing-environment.js';
import leisureFreetime from './categories/leisure-freetime.js';
import travelTransport from './categories/travel-transport.js';
import socialLife from './categories/social-life.js';
import communication from './categories/communication.js';
import workStudies from './categories/work-studies.js';
import simpleComplaints from './categories/simple-complaints.js';
var phrasesA2 = (cov_wmfqdi7a4().s[0]++, {
  difficulty: DIFFICULTY,
  categoryDescriptions: CATEGORY_DESCRIPTIONS,
  usageNotes: USAGE_NOTES,
  levelInfo: LEVEL_INFO,
  contentStats: CONTENT_STATS,
  learningSequence: LEARNING_SEQUENCE,
  categories: CATEGORIES,
  phrases: [].concat(_toConsumableArray(dailyRoutines), _toConsumableArray(pastExperiences), _toConsumableArray(futurePlans), _toConsumableArray(opinionsPreferences), _toConsumableArray(healthWellbeing), _toConsumableArray(housingEnvironment), _toConsumableArray(leisureFreetime), _toConsumableArray(travelTransport), _toConsumableArray(socialLife), _toConsumableArray(communication), _toConsumableArray(workStudies), _toConsumableArray(simpleComplaints))
});
export default phrasesA2;
export { dailyRoutines, pastExperiences, futurePlans, opinionsPreferences, healthWellbeing, housingEnvironment, leisureFreetime, travelTransport, socialLife, communication, workStudies, simpleComplaints, CATEGORIES, DIFFICULTY, CATEGORY_DESCRIPTIONS, USAGE_NOTES, LEVEL_INFO, CONTENT_STATS, LEARNING_SEQUENCE };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDQVRFR09SSUVTIiwiRElGRklDVUxUWSIsIkNBVEVHT1JZX0RFU0NSSVBUSU9OUyIsIlVTQUdFX05PVEVTIiwiTEVWRUxfSU5GTyIsIkNPTlRFTlRfU1RBVFMiLCJMRUFSTklOR19TRVFVRU5DRSIsImRhaWx5Um91dGluZXMiLCJwYXN0RXhwZXJpZW5jZXMiLCJmdXR1cmVQbGFucyIsIm9waW5pb25zUHJlZmVyZW5jZXMiLCJoZWFsdGhXZWxsYmVpbmciLCJob3VzaW5nRW52aXJvbm1lbnQiLCJsZWlzdXJlRnJlZXRpbWUiLCJ0cmF2ZWxUcmFuc3BvcnQiLCJzb2NpYWxMaWZlIiwiY29tbXVuaWNhdGlvbiIsIndvcmtTdHVkaWVzIiwic2ltcGxlQ29tcGxhaW50cyIsInBocmFzZXNBMiIsImNvdl93bWZxZGk3YTQiLCJzIiwiZGlmZmljdWx0eSIsImNhdGVnb3J5RGVzY3JpcHRpb25zIiwidXNhZ2VOb3RlcyIsImxldmVsSW5mbyIsImNvbnRlbnRTdGF0cyIsImxlYXJuaW5nU2VxdWVuY2UiLCJjYXRlZ29yaWVzIiwicGhyYXNlcyIsImNvbmNhdCIsIl90b0NvbnN1bWFibGVBcnJheSJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9kYXRhL2V4ZXJjaXNlcy9waHJhc2VzL2EyL2luZGV4LmpzXG5cbmltcG9ydCB7IENBVEVHT1JJRVMsIERJRkZJQ1VMVFksIENBVEVHT1JZX0RFU0NSSVBUSU9OUywgVVNBR0VfTk9URVMsIExFVkVMX0lORk8sIENPTlRFTlRfU1RBVFMsIExFQVJOSU5HX1NFUVVFTkNFIH0gZnJvbSAnLi9tZXRhZGF0YS5qcyc7XG5pbXBvcnQgZGFpbHlSb3V0aW5lcyBmcm9tICcuL2NhdGVnb3JpZXMvZGFpbHktcm91dGluZXMuanMnO1xuaW1wb3J0IHBhc3RFeHBlcmllbmNlcyBmcm9tICcuL2NhdGVnb3JpZXMvcGFzdC1leHBlcmllbmNlcy5qcyc7XG5pbXBvcnQgZnV0dXJlUGxhbnMgZnJvbSAnLi9jYXRlZ29yaWVzL2Z1dHVyZS1wbGFucy5qcyc7XG5pbXBvcnQgb3BpbmlvbnNQcmVmZXJlbmNlcyBmcm9tICcuL2NhdGVnb3JpZXMvb3BpbmlvbnMtcHJlZmVyZW5jZXMuanMnO1xuaW1wb3J0IGhlYWx0aFdlbGxiZWluZyBmcm9tICcuL2NhdGVnb3JpZXMvaGVhbHRoLXdlbGxiZWluZy5qcyc7XG5pbXBvcnQgaG91c2luZ0Vudmlyb25tZW50IGZyb20gJy4vY2F0ZWdvcmllcy9ob3VzaW5nLWVudmlyb25tZW50LmpzJztcbmltcG9ydCBsZWlzdXJlRnJlZXRpbWUgZnJvbSAnLi9jYXRlZ29yaWVzL2xlaXN1cmUtZnJlZXRpbWUuanMnO1xuaW1wb3J0IHRyYXZlbFRyYW5zcG9ydCBmcm9tICcuL2NhdGVnb3JpZXMvdHJhdmVsLXRyYW5zcG9ydC5qcyc7XG5pbXBvcnQgc29jaWFsTGlmZSBmcm9tICcuL2NhdGVnb3JpZXMvc29jaWFsLWxpZmUuanMnO1xuaW1wb3J0IGNvbW11bmljYXRpb24gZnJvbSAnLi9jYXRlZ29yaWVzL2NvbW11bmljYXRpb24uanMnO1xuaW1wb3J0IHdvcmtTdHVkaWVzIGZyb20gJy4vY2F0ZWdvcmllcy93b3JrLXN0dWRpZXMuanMnO1xuaW1wb3J0IHNpbXBsZUNvbXBsYWludHMgZnJvbSAnLi9jYXRlZ29yaWVzL3NpbXBsZS1jb21wbGFpbnRzLmpzJztcblxuLyoqXG4gKiBDb250aWVudCB0b3V0ZXMgbGVzIGRvbm7DqWVzIHBvdXIgbGVzIHBocmFzZXMgZGUgbml2ZWF1IEEyXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBQaHJhc2VzQTJcbiAqIEBwcm9wZXJ0eSB7QXJyYXk8T2JqZWN0Pn0gY2F0ZWdvcmllcyAtIExpc3RlIGRlcyBjYXTDqWdvcmllc1xuICogQHByb3BlcnR5IHtBcnJheTxPYmplY3Q+fSBwaHJhc2VzIC0gTGlzdGUgY29tcGzDqHRlIGRlcyBwaHJhc2VzIGRlIHRvdXRlcyBsZXMgY2F0w6lnb3JpZXNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBkaWZmaWN1bHR5IC0gTml2ZWF1IGRlIGRpZmZpY3VsdMOpIENFQ1JcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBjYXRlZ29yeURlc2NyaXB0aW9ucyAtIERlc2NyaXB0aW9ucyBkw6l0YWlsbMOpZXMgZGUgY2hhcXVlIGNhdMOpZ29yaWVcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSB1c2FnZU5vdGVzIC0gTm90ZXMgc3VyIGwndXRpbGlzYXRpb24gZm9ybWVsbGUvaW5mb3JtZWxsZVxuICogQHByb3BlcnR5IHtPYmplY3R9IGxldmVsSW5mbyAtIEluZm9ybWF0aW9ucyBzdXIgbGUgbml2ZWF1IEEyXG4gKiBAcHJvcGVydHkge09iamVjdH0gY29udGVudFN0YXRzIC0gU3RhdGlzdGlxdWVzIHN1ciBsZSBjb250ZW51XG4gKiBAcHJvcGVydHkge0FycmF5PHN0cmluZz59IGxlYXJuaW5nU2VxdWVuY2UgLSBTw6lxdWVuY2UgZCdhcHByZW50aXNzYWdlIHJlY29tbWFuZMOpZVxuICovXG5jb25zdCBwaHJhc2VzQTIgPSB7XG4gIC8vIE3DqXRhZG9ubsOpZXNcbiAgZGlmZmljdWx0eTogRElGRklDVUxUWSxcbiAgY2F0ZWdvcnlEZXNjcmlwdGlvbnM6IENBVEVHT1JZX0RFU0NSSVBUSU9OUyxcbiAgdXNhZ2VOb3RlczogVVNBR0VfTk9URVMsXG4gIGxldmVsSW5mbzogTEVWRUxfSU5GTyxcbiAgY29udGVudFN0YXRzOiBDT05URU5UX1NUQVRTLFxuICBsZWFybmluZ1NlcXVlbmNlOiBMRUFSTklOR19TRVFVRU5DRSxcblxuICAvLyBEb25uw6llcyBwcmluY2lwYWxlc1xuICBjYXRlZ29yaWVzOiBDQVRFR09SSUVTLFxuICBwaHJhc2VzOiBbXG4gICAgLi4uZGFpbHlSb3V0aW5lcyxcbiAgICAuLi5wYXN0RXhwZXJpZW5jZXMsXG4gICAgLi4uZnV0dXJlUGxhbnMsXG4gICAgLi4ub3BpbmlvbnNQcmVmZXJlbmNlcyxcbiAgICAuLi5oZWFsdGhXZWxsYmVpbmcsXG4gICAgLi4uaG91c2luZ0Vudmlyb25tZW50LFxuICAgIC4uLmxlaXN1cmVGcmVldGltZSxcbiAgICAuLi50cmF2ZWxUcmFuc3BvcnQsXG4gICAgLi4uc29jaWFsTGlmZSxcbiAgICAuLi5jb21tdW5pY2F0aW9uLFxuICAgIC4uLndvcmtTdHVkaWVzLFxuICAgIC4uLnNpbXBsZUNvbXBsYWludHNcbiAgXVxufTtcblxuLy8gRXhwb3J0IHByaW5jaXBhbCAocG91ciBpbXBvcnQgZGVmYXVsdClcbmV4cG9ydCBkZWZhdWx0IHBocmFzZXNBMjtcblxuLy8gRXhwb3J0cyBub21tw6lzIHBvdXIgcGVybWV0dHJlIGQnaW1wb3J0ZXIgZGVzIGNhdMOpZ29yaWVzIHNww6ljaWZpcXVlc1xuZXhwb3J0IHsgXG4gIGRhaWx5Um91dGluZXMsXG4gIHBhc3RFeHBlcmllbmNlcyxcbiAgZnV0dXJlUGxhbnMsXG4gIG9waW5pb25zUHJlZmVyZW5jZXMsXG4gIGhlYWx0aFdlbGxiZWluZyxcbiAgaG91c2luZ0Vudmlyb25tZW50LFxuICBsZWlzdXJlRnJlZXRpbWUsXG4gIHRyYXZlbFRyYW5zcG9ydCxcbiAgc29jaWFsTGlmZSxcbiAgY29tbXVuaWNhdGlvbixcbiAgd29ya1N0dWRpZXMsXG4gIHNpbXBsZUNvbXBsYWludHMsXG4gIENBVEVHT1JJRVMsXG4gIERJRkZJQ1VMVFksXG4gIENBVEVHT1JZX0RFU0NSSVBUSU9OUyxcbiAgVVNBR0VfTk9URVMsXG4gIExFVkVMX0lORk8sXG4gIENPTlRFTlRfU1RBVFMsXG4gIExFQVJOSU5HX1NFUVVFTkNFXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsU0FBU0EsVUFBVSxFQUFFQyxVQUFVLEVBQUVDLHFCQUFxQixFQUFFQyxXQUFXLEVBQUVDLFVBQVUsRUFBRUMsYUFBYSxFQUFFQyxpQkFBaUIsUUFBUSxlQUFlO0FBQ3hJLE9BQU9DLGFBQWEsTUFBTSxnQ0FBZ0M7QUFDMUQsT0FBT0MsZUFBZSxNQUFNLGtDQUFrQztBQUM5RCxPQUFPQyxXQUFXLE1BQU0sOEJBQThCO0FBQ3RELE9BQU9DLG1CQUFtQixNQUFNLHNDQUFzQztBQUN0RSxPQUFPQyxlQUFlLE1BQU0sa0NBQWtDO0FBQzlELE9BQU9DLGtCQUFrQixNQUFNLHFDQUFxQztBQUNwRSxPQUFPQyxlQUFlLE1BQU0sa0NBQWtDO0FBQzlELE9BQU9DLGVBQWUsTUFBTSxrQ0FBa0M7QUFDOUQsT0FBT0MsVUFBVSxNQUFNLDZCQUE2QjtBQUNwRCxPQUFPQyxhQUFhLE1BQU0sK0JBQStCO0FBQ3pELE9BQU9DLFdBQVcsTUFBTSw4QkFBOEI7QUFDdEQsT0FBT0MsZ0JBQWdCLE1BQU0sbUNBQW1DO0FBY2hFLElBQU1DLFNBQVMsSUFBQUMsYUFBQSxHQUFBQyxDQUFBLE9BQUc7RUFFaEJDLFVBQVUsRUFBRXJCLFVBQVU7RUFDdEJzQixvQkFBb0IsRUFBRXJCLHFCQUFxQjtFQUMzQ3NCLFVBQVUsRUFBRXJCLFdBQVc7RUFDdkJzQixTQUFTLEVBQUVyQixVQUFVO0VBQ3JCc0IsWUFBWSxFQUFFckIsYUFBYTtFQUMzQnNCLGdCQUFnQixFQUFFckIsaUJBQWlCO0VBR25Dc0IsVUFBVSxFQUFFNUIsVUFBVTtFQUN0QjZCLE9BQU8sS0FBQUMsTUFBQSxDQUFBQyxrQkFBQSxDQUNGeEIsYUFBYSxHQUFBd0Isa0JBQUEsQ0FDYnZCLGVBQWUsR0FBQXVCLGtCQUFBLENBQ2Z0QixXQUFXLEdBQUFzQixrQkFBQSxDQUNYckIsbUJBQW1CLEdBQUFxQixrQkFBQSxDQUNuQnBCLGVBQWUsR0FBQW9CLGtCQUFBLENBQ2ZuQixrQkFBa0IsR0FBQW1CLGtCQUFBLENBQ2xCbEIsZUFBZSxHQUFBa0Isa0JBQUEsQ0FDZmpCLGVBQWUsR0FBQWlCLGtCQUFBLENBQ2ZoQixVQUFVLEdBQUFnQixrQkFBQSxDQUNWZixhQUFhLEdBQUFlLGtCQUFBLENBQ2JkLFdBQVcsR0FBQWMsa0JBQUEsQ0FDWGIsZ0JBQWdCO0FBRXZCLENBQUM7QUFHRCxlQUFlQyxTQUFTO0FBR3hCLFNBQ0VaLGFBQWEsRUFDYkMsZUFBZSxFQUNmQyxXQUFXLEVBQ1hDLG1CQUFtQixFQUNuQkMsZUFBZSxFQUNmQyxrQkFBa0IsRUFDbEJDLGVBQWUsRUFDZkMsZUFBZSxFQUNmQyxVQUFVLEVBQ1ZDLGFBQWEsRUFDYkMsV0FBVyxFQUNYQyxnQkFBZ0IsRUFDaEJsQixVQUFVLEVBQ1ZDLFVBQVUsRUFDVkMscUJBQXFCLEVBQ3JCQyxXQUFXLEVBQ1hDLFVBQVUsRUFDVkMsYUFBYSxFQUNiQyxpQkFBaUIiLCJpZ25vcmVMaXN0IjpbXX0=