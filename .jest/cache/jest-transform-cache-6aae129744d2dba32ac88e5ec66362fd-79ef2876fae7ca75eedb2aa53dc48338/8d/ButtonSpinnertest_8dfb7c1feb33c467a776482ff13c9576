00a9f860b712e39e1632311a62904b9e
_getJestObj().mock('react-native/Libraries/Components/ActivityIndicator/ActivityIndicator', function () {
  return jest.fn(function (_ref) {
    var size = _ref.size,
      color = _ref.color;
    return (0, _jsxRuntime.jsx)("mock-activity-indicator", {
      testID: "button-loader",
      size: size,
      color: color
    });
  });
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _ButtonSpinner = _interopRequireDefault(require("../../../../src/components/ui/Button/ButtonSpinner"));
var _reactNative2 = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('ButtonSpinner', function () {
  it('devrait rendre un ActivityIndicator avec les props size et color', function () {
    var mockSize = 'large';
    var mockColor = '#FF0000';
    (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonSpinner.default, {
      size: mockSize,
      color: mockColor
    }));
    expect(_reactNative2.ActivityIndicator).toHaveBeenCalledWith(expect.objectContaining({
      size: mockSize,
      color: mockColor
    }), {});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJqZXN0IiwiZm4iLCJfcmVmIiwic2l6ZSIsImNvbG9yIiwiX2pzeFJ1bnRpbWUiLCJqc3giLCJ0ZXN0SUQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl9yZWFjdE5hdGl2ZSIsIl9CdXR0b25TcGlubmVyIiwiX3JlYWN0TmF0aXZlMiIsIl9yZXF1aXJlIiwiZGVzY3JpYmUiLCJpdCIsIm1vY2tTaXplIiwibW9ja0NvbG9yIiwicmVuZGVyIiwiZGVmYXVsdCIsImV4cGVjdCIsIkFjdGl2aXR5SW5kaWNhdG9yIiwidG9IYXZlQmVlbkNhbGxlZFdpdGgiLCJvYmplY3RDb250YWluaW5nIl0sInNvdXJjZXMiOlsiQnV0dG9uU3Bpbm5lci50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IEJ1dHRvblNwaW5uZXIgZnJvbSAnLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdWkvQnV0dG9uL0J1dHRvblNwaW5uZXInO1xyXG5pbXBvcnQgeyBBY3Rpdml0eUluZGljYXRvciB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcblxyXG4vLyBPbiBtb2NrZSBkaXJlY3RlbWVudCBsZSBjb21wb3NhbnQgQWN0aXZpdHlJbmRpY2F0b3JcclxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUvTGlicmFyaWVzL0NvbXBvbmVudHMvQWN0aXZpdHlJbmRpY2F0b3IvQWN0aXZpdHlJbmRpY2F0b3InLCAoKSA9PiB7XHJcbiAgcmV0dXJuIGplc3QuZm4oKHsgc2l6ZSwgY29sb3IgfSkgPT4ge1xyXG4gICAgcmV0dXJuIDxtb2NrLWFjdGl2aXR5LWluZGljYXRvciB0ZXN0SUQ9XCJidXR0b24tbG9hZGVyXCIgc2l6ZT17c2l6ZX0gY29sb3I9e2NvbG9yfSAvPjtcclxuICB9KTtcclxufSk7XHJcblxyXG5kZXNjcmliZSgnQnV0dG9uU3Bpbm5lcicsICgpID0+IHtcclxuICBpdCgnZGV2cmFpdCByZW5kcmUgdW4gQWN0aXZpdHlJbmRpY2F0b3IgYXZlYyBsZXMgcHJvcHMgc2l6ZSBldCBjb2xvcicsICgpID0+IHtcclxuICAgIGNvbnN0IG1vY2tTaXplID0gJ2xhcmdlJztcclxuICAgIGNvbnN0IG1vY2tDb2xvciA9ICcjRkYwMDAwJztcclxuICAgIHJlbmRlcig8QnV0dG9uU3Bpbm5lciBzaXplPXttb2NrU2l6ZX0gY29sb3I9e21vY2tDb2xvcn0gLz4pO1xyXG4gICAgXHJcbiAgICAvLyBMZSBtb2NrIGQnQWN0aXZpdHlJbmRpY2F0b3IgZXN0IG1haW50ZW5hbnQgdW5lIGZvbmN0aW9uIEplc3QsIG9uIHBldXQgZG9uYyBsJ2VzcGlvbm5lclxyXG4gICAgZXhwZWN0KEFjdGl2aXR5SW5kaWNhdG9yKS50b0hhdmVCZWVuQ2FsbGVkV2l0aChcclxuICAgICAgZXhwZWN0Lm9iamVjdENvbnRhaW5pbmcoe1xyXG4gICAgICAgIHNpemU6IG1vY2tTaXplLFxyXG4gICAgICAgIGNvbG9yOiBtb2NrQ29sb3IsXHJcbiAgICAgIH0pLFxyXG4gICAgICB7fVxyXG4gICAgKTtcclxuICB9KTtcclxufSk7Il0sIm1hcHBpbmdzIjoiQUFNQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsdUVBQXVFLEVBQUUsWUFBTTtFQUN2RixPQUFPQyxJQUFJLENBQUNDLEVBQUUsQ0FBQyxVQUFBQyxJQUFBLEVBQXFCO0lBQUEsSUFBbEJDLElBQUksR0FBQUQsSUFBQSxDQUFKQyxJQUFJO01BQUVDLEtBQUssR0FBQUYsSUFBQSxDQUFMRSxLQUFLO0lBQzNCLE9BQU8sSUFBQUMsV0FBQSxDQUFBQyxHQUFBO01BQXlCQyxNQUFNLEVBQUMsZUFBZTtNQUFDSixJQUFJLEVBQUVBLElBQUs7TUFBQ0MsS0FBSyxFQUFFQTtJQUFNLENBQUUsQ0FBQztFQUNyRixDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFBQyxJQUFBSSxzQkFBQSxHQUFBQyxPQUFBO0FBVkgsSUFBQUMsTUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsWUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsY0FBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUksYUFBQSxHQUFBSixPQUFBO0FBQWlELElBQUFKLFdBQUEsR0FBQUksT0FBQTtBQUFBLFNBQUFYLFlBQUE7RUFBQSxJQUFBZ0IsUUFBQSxHQUFBTCxPQUFBO0lBQUFULElBQUEsR0FBQWMsUUFBQSxDQUFBZCxJQUFBO0VBQUFGLFdBQUEsWUFBQUEsWUFBQTtJQUFBLE9BQUFFLElBQUE7RUFBQTtFQUFBLE9BQUFBLElBQUE7QUFBQTtBQVNqRGUsUUFBUSxDQUFDLGVBQWUsRUFBRSxZQUFNO0VBQzlCQyxFQUFFLENBQUMsa0VBQWtFLEVBQUUsWUFBTTtJQUMzRSxJQUFNQyxRQUFRLEdBQUcsT0FBTztJQUN4QixJQUFNQyxTQUFTLEdBQUcsU0FBUztJQUMzQixJQUFBQyxtQkFBTSxFQUFDLElBQUFkLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTSxjQUFBLENBQUFRLE9BQWE7TUFBQ2pCLElBQUksRUFBRWMsUUFBUztNQUFDYixLQUFLLEVBQUVjO0lBQVUsQ0FBRSxDQUFDLENBQUM7SUFHM0RHLE1BQU0sQ0FBQ0MsK0JBQWlCLENBQUMsQ0FBQ0Msb0JBQW9CLENBQzVDRixNQUFNLENBQUNHLGdCQUFnQixDQUFDO01BQ3RCckIsSUFBSSxFQUFFYyxRQUFRO01BQ2RiLEtBQUssRUFBRWM7SUFDVCxDQUFDLENBQUMsRUFDRixDQUFDLENBQ0gsQ0FBQztFQUNILENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==