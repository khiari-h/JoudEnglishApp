{"version":3,"names":["_NativeActionSheetManager","_interopRequireDefault","require","_NativeShareModule","processColor","default","Platform","invariant","Share","_classCallCheck2","_createClass2","key","value","share","content","options","arguments","length","undefined","url","message","OS","NativeShareModule","title","newContent","dialogTitle","then","result","Object","assign","activityType","Promise","resolve","reject","tintColor","NativeActionSheetManager","showShareActionSheetWithOptions","subject","anchor","excludedActivityTypes","error","success","action","Error","sharedAction","dismissedAction","module","exports"],"sources":["Share.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeActionSheetManager from '../ActionSheetIOS/NativeActionSheetManager';\nimport NativeShareModule from './NativeShareModule';\n\nconst processColor = require('../StyleSheet/processColor').default;\nconst Platform = require('../Utilities/Platform');\nconst invariant = require('invariant');\n\nexport type ShareContent =\n  | {\n      title?: string,\n      url: string,\n      message?: string,\n    }\n  | {\n      title?: string,\n      url?: string,\n      message: string,\n    };\nexport type ShareOptions = {\n  dialogTitle?: string,\n  excludedActivityTypes?: Array<string>,\n  tintColor?: string,\n  subject?: string,\n  anchor?: number,\n};\n\nclass Share {\n  /**\n   * Open a dialog to share text content.\n   *\n   * In iOS, Returns a Promise which will be invoked an object containing `action`, `activityType`.\n   * If the user dismissed the dialog, the Promise will still be resolved with action being `Share.dismissedAction`\n   * and all the other keys being undefined.\n   *\n   * In Android, Returns a Promise which always resolves with action being `Share.sharedAction`.\n   *\n   * ### Content\n   *\n   * #### iOS\n   *\n   *  - `url` - a URL to share\n   *  - `message` - a message to share\n   *\n   * At least one of `URL` or `message` is required.\n   *\n   * #### Android\n   *\n   * - `title` - title of the message (optional)\n   * - `message` - a message to share (often will include a URL).\n   *\n   * ### Options\n   *\n   * #### iOS\n   *\n   *  - `subject` - a subject to share via email\n   *  - `excludedActivityTypes`\n   *  - `tintColor`\n   *\n   * #### Android\n   *\n   *  - `dialogTitle`\n   *\n   */\n  static share(\n    content: ShareContent,\n    options: ShareOptions = {},\n  ): Promise<{action: string, activityType: ?string}> {\n    invariant(\n      typeof content === 'object' && content !== null,\n      'Content to share must be a valid object',\n    );\n    invariant(\n      typeof content.url === 'string' || typeof content.message === 'string',\n      'At least one of URL or message is required',\n    );\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object',\n    );\n\n    if (Platform.OS === 'android') {\n      invariant(\n        NativeShareModule,\n        'ShareModule should be registered on Android.',\n      );\n      invariant(\n        content.title == null || typeof content.title === 'string',\n        'Invalid title: title should be a string.',\n      );\n\n      const newContent = {\n        title: content.title,\n        message:\n          typeof content.message === 'string' ? content.message : undefined,\n      };\n\n      return NativeShareModule.share(newContent, options.dialogTitle).then(\n        result => ({\n          activityType: null,\n          ...result,\n        }),\n      );\n    } else if (Platform.OS === 'ios') {\n      return new Promise((resolve, reject) => {\n        const tintColor = processColor(options.tintColor);\n\n        invariant(\n          tintColor == null || typeof tintColor === 'number',\n          'Unexpected color given for options.tintColor',\n        );\n\n        invariant(\n          NativeActionSheetManager,\n          'NativeActionSheetManager is not registered on iOS, but it should be.',\n        );\n\n        NativeActionSheetManager.showShareActionSheetWithOptions(\n          {\n            message:\n              typeof content.message === 'string' ? content.message : undefined,\n            url: typeof content.url === 'string' ? content.url : undefined,\n            subject: options.subject,\n            tintColor: typeof tintColor === 'number' ? tintColor : undefined,\n            anchor:\n              typeof options.anchor === 'number' ? options.anchor : undefined,\n            excludedActivityTypes: options.excludedActivityTypes,\n          },\n          error => reject(error),\n          (success, activityType) => {\n            if (success) {\n              resolve({\n                action: 'sharedAction',\n                activityType: activityType,\n              });\n            } else {\n              resolve({\n                action: 'dismissedAction',\n                activityType: null,\n              });\n            }\n          },\n        );\n      });\n    } else {\n      return Promise.reject(new Error('Unsupported platform'));\n    }\n  }\n\n  /**\n   * The content was successfully shared.\n   */\n  static sharedAction: 'sharedAction' = 'sharedAction';\n\n  /**\n   * The dialog has been dismissed.\n   * @platform ios\n   */\n  static dismissedAction: 'dismissedAction' = 'dismissedAction';\n}\n\nmodule.exports = Share;\n"],"mappings":"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","ignoreList":[]}