7a71cfde83c151f233d088fb52944a70
function cov_y9nckztjj() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesProgress\\index.js";
  var hash = "ad38c51a6207cc903174b353ceb1e38cd5bb5fa4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesProgress\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 26
        },
        end: {
          line: 67,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "2": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "3": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 66,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 26
          },
          end: {
            line: 11,
            column: 27
          }
        },
        loc: {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 22,
            column: 34
          }
        },
        loc: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 26,
            column: 3
          }
        },
        line: 22
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 17
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 16
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 14
          },
          end: {
            line: 14,
            column: 16
          }
        }],
        line: 14
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 2
          },
          end: {
            line: 15,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 15,
            column: 20
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 24
          }
        }],
        line: 16
      },
      "5": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 55
          }
        }, {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ad38c51a6207cc903174b353ceb1e38cd5bb5fa4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_y9nckztjj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y9nckztjj();
import ProgressCard from "../../../../components/ui/ProgressCard";
import { useMemo } from 'react';
import { jsx as _jsx } from "react/jsx-runtime";
cov_y9nckztjj().s[0]++;
var WordGamesProgress = function WordGamesProgress(_ref) {
  var _ref$currentGame = _ref.currentGame,
    currentGame = _ref$currentGame === void 0 ? (cov_y9nckztjj().b[0][0]++, 1) : _ref$currentGame,
    _ref$totalGames = _ref.totalGames,
    totalGames = _ref$totalGames === void 0 ? (cov_y9nckztjj().b[1][0]++, 0) : _ref$totalGames,
    _ref$gameTitle = _ref.gameTitle,
    gameTitle = _ref$gameTitle === void 0 ? (cov_y9nckztjj().b[2][0]++, "") : _ref$gameTitle,
    _ref$completedGames = _ref.completedGames,
    completedGames = _ref$completedGames === void 0 ? (cov_y9nckztjj().b[3][0]++, 0) : _ref$completedGames,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_y9nckztjj().b[4][0]++, "#3b82f6") : _ref$levelColor;
  cov_y9nckztjj().f[0]++;
  var globalProgress = (cov_y9nckztjj().s[1]++, useMemo(function () {
    cov_y9nckztjj().f[1]++;
    cov_y9nckztjj().s[2]++;
    return totalGames > 0 ? (cov_y9nckztjj().b[5][0]++, Math.round(completedGames / totalGames * 100)) : (cov_y9nckztjj().b[5][1]++, 0);
  }, [completedGames, totalGames]));
  cov_y9nckztjj().s[3]++;
  return _jsx(ProgressCard, {
    title: "Progression",
    subtitle: `${gameTitle} â€¢ Jeu ${currentGame}/${totalGames}`,
    progress: globalProgress,
    completed: completedGames,
    total: totalGames,
    unit: "jeux",
    levelColor: levelColor,
    expandable: false,
    expanded: false,
    onToggleExpand: undefined,
    categoryData: [],
    onCategoryPress: undefined
  });
};
export default WordGamesProgress;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9ncmVzc0NhcmQiLCJ1c2VNZW1vIiwianN4IiwiX2pzeCIsImNvdl95OW5ja3p0amoiLCJzIiwiV29yZEdhbWVzUHJvZ3Jlc3MiLCJfcmVmIiwiX3JlZiRjdXJyZW50R2FtZSIsImN1cnJlbnRHYW1lIiwiYiIsIl9yZWYkdG90YWxHYW1lcyIsInRvdGFsR2FtZXMiLCJfcmVmJGdhbWVUaXRsZSIsImdhbWVUaXRsZSIsIl9yZWYkY29tcGxldGVkR2FtZXMiLCJjb21wbGV0ZWRHYW1lcyIsIl9yZWYkbGV2ZWxDb2xvciIsImxldmVsQ29sb3IiLCJmIiwiZ2xvYmFsUHJvZ3Jlc3MiLCJNYXRoIiwicm91bmQiLCJ0aXRsZSIsInN1YnRpdGxlIiwicHJvZ3Jlc3MiLCJjb21wbGV0ZWQiLCJ0b3RhbCIsInVuaXQiLCJleHBhbmRhYmxlIiwiZXhwYW5kZWQiLCJvblRvZ2dsZUV4cGFuZCIsInVuZGVmaW5lZCIsImNhdGVnb3J5RGF0YSIsIm9uQ2F0ZWdvcnlQcmVzcyJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFdvcmRHYW1lc1Byb2dyZXNzL2luZGV4LmpzIC0gVkVSU0lPTiBDT1JSSUfDiUUgQVZFQyB1c2VNZW1vXHJcblxyXG5pbXBvcnQgUHJvZ3Jlc3NDYXJkIGZyb20gXCIuLi8uLi8uLi8uLi9jb21wb25lbnRzL3VpL1Byb2dyZXNzQ2FyZFwiO1xyXG5pbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xyXG5cclxuLyoqXHJcbiAqIPCfk4ogV29yZEdhbWVzUHJvZ3Jlc3MgLSBWZXJzaW9uIGNvcnJpZ8OpZSBhdmVjIG3DqW1vcmlzYXRpb25cclxuICog4pyFIMOJdml0ZSBsZXMgYm91Y2xlcyBpbmZpbmllcyBhdmVjIHVzZU1lbW9cclxuICog4pyFIFBlcmZvcm1hbmNlIG9wdGltaXPDqWVcclxuICovXHJcbmNvbnN0IFdvcmRHYW1lc1Byb2dyZXNzID0gKHtcclxuICBjdXJyZW50R2FtZSA9IDEsXHJcbiAgdG90YWxHYW1lcyA9IDAsXHJcbiAgZ2FtZVRpdGxlID0gXCJcIixcclxuICBjb21wbGV0ZWRHYW1lcyA9IDAsXHJcbiAgbGV2ZWxDb2xvciA9IFwiIzNiODJmNlwiLFxyXG4gIC8vIGdhbWVSZXN1bHRzID0gW10sIC8vIHN1cHByaW3DqSBjYXIgaW51dGlsaXPDqVxyXG4gIC8vIGxldmVsID0gXCJBMVwiLCAvLyBzdXBwcmltw6kgY2FyIGludXRpbGlzw6lcclxufSkgPT4ge1xyXG4gIFxyXG4gIC8vIOKchSBNw4lNT1JJU0VSIGxlIGNhbGN1bCBkZSBwcm9ncmVzc2lvbiBnbG9iYWxlXHJcbiAgY29uc3QgZ2xvYmFsUHJvZ3Jlc3MgPSB1c2VNZW1vKCgpID0+IHtcclxuICAgIHJldHVybiB0b3RhbEdhbWVzID4gMCBcclxuICAgICAgPyBNYXRoLnJvdW5kKChjb21wbGV0ZWRHYW1lcyAvIHRvdGFsR2FtZXMpICogMTAwKVxyXG4gICAgICA6IDA7XHJcbiAgfSwgW2NvbXBsZXRlZEdhbWVzLCB0b3RhbEdhbWVzXSk7XHJcblxyXG4gIC8vIOKchSBNw4lNT1JJU0VSIGxlcyBkb25uw6llcyBXb3JkIEdhbWVzXHJcbiAgLy8gY29uc3Qgd29yZEdhbWVzRGF0YSA9IHVzZU1lbW8oKCkgPT4ge1xyXG4gIC8vICAgcmV0dXJuIGdldFdvcmRHYW1lc0RhdGEobGV2ZWwpO1xyXG4gIC8vIH0sIFtsZXZlbF0pO1xyXG5cclxuICAvLyDinIUgTcOJTU9SSVNFUiBsZXMgZG9ubsOpZXMgZGUgZGVidWcgKHNldWxlbWVudCBlbiBkZXYpXHJcbiAgLy8gY29uc3QgZGVidWdEYXRhID0gdXNlTWVtbygoKSA9PiB7XHJcbiAgLy8gICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdkZXZlbG9wbWVudCcpIHJldHVybiBudWxsO1xyXG4gIC8vICAgXHJcbiAgLy8gICByZXR1cm4ge1xyXG4gIC8vICAgICBjdXJyZW50R2FtZSxcclxuICAvLyAgICAgdG90YWxHYW1lcyxcclxuICAvLyAgICAgY29tcGxldGVkR2FtZXMsXHJcbiAgLy8gICAgIGdsb2JhbFByb2dyZXNzLFxyXG4gIC8vICAgICBnYW1lUmVzdWx0c0xlbmd0aDogZ2FtZVJlc3VsdHMubGVuZ3RoLFxyXG4gIC8vICAgICBoYXNXb3JkR2FtZXNEYXRhOiAhIXdvcmRHYW1lc0RhdGEsXHJcbiAgLy8gICAgIHdvcmRHYW1lc0RhdGFLZXlzOiB3b3JkR2FtZXNEYXRhICYmIHR5cGVvZiB3b3JkR2FtZXNEYXRhID09PSAnb2JqZWN0JyA/IE9iamVjdC5rZXlzKHdvcmRHYW1lc0RhdGEpIDogXCJub3Qgb2JqZWN0IG9yIG51bGxcIixcclxuICAvLyAgICAgZ2FtZVRpdGxlXHJcbiAgLy8gICB9O1xyXG4gIC8vIH0sIFtjdXJyZW50R2FtZSwgdG90YWxHYW1lcywgY29tcGxldGVkR2FtZXMsIGdsb2JhbFByb2dyZXNzLCBnYW1lUmVzdWx0cy5sZW5ndGgsIHdvcmRHYW1lc0RhdGEsIGdhbWVUaXRsZV0pO1xyXG5cclxuICAvLyDinIUgQ09SUkVDVElPTiBGSU5BTEUgOiBQYXMgZGUgbG9nIGRhbnMgbGUgcmVuZGVyICFcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxQcm9ncmVzc0NhcmRcclxuICAgICAgdGl0bGU9XCJQcm9ncmVzc2lvblwiXHJcbiAgICAgIHN1YnRpdGxlPXtgJHtnYW1lVGl0bGV9IOKAoiBKZXUgJHtjdXJyZW50R2FtZX0vJHt0b3RhbEdhbWVzfWB9XHJcbiAgICAgIHByb2dyZXNzPXtnbG9iYWxQcm9ncmVzc31cclxuICAgICAgY29tcGxldGVkPXtjb21wbGV0ZWRHYW1lc31cclxuICAgICAgdG90YWw9e3RvdGFsR2FtZXN9XHJcbiAgICAgIHVuaXQ9XCJqZXV4XCJcclxuICAgICAgbGV2ZWxDb2xvcj17bGV2ZWxDb2xvcn1cclxuICAgICAgZXhwYW5kYWJsZT17ZmFsc2V9XHJcbiAgICAgIGV4cGFuZGVkPXtmYWxzZX1cclxuICAgICAgb25Ub2dnbGVFeHBhbmQ9e3VuZGVmaW5lZH1cclxuICAgICAgY2F0ZWdvcnlEYXRhPXtbXX1cclxuICAgICAgb25DYXRlZ29yeVByZXNzPXt1bmRlZmluZWR9XHJcbiAgICAvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBXb3JkR2FtZXNQcm9ncmVzczsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLE9BQU9BLFlBQVksTUFBTSx3Q0FBd0M7QUFDakUsU0FBU0MsT0FBTyxRQUFRLE9BQU87QUFBQyxTQUFBQyxHQUFBLElBQUFDLElBQUE7QUFBQUMsYUFBQSxHQUFBQyxDQUFBO0FBT2hDLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBaUJBLENBQUFDLElBQUEsRUFRakI7RUFBQSxJQUFBQyxnQkFBQSxHQUFBRCxJQUFBLENBUEpFLFdBQVc7SUFBWEEsV0FBVyxHQUFBRCxnQkFBQSxlQUFBSixhQUFBLEdBQUFNLENBQUEsVUFBRyxDQUFDLElBQUFGLGdCQUFBO0lBQUFHLGVBQUEsR0FBQUosSUFBQSxDQUNmSyxVQUFVO0lBQVZBLFVBQVUsR0FBQUQsZUFBQSxlQUFBUCxhQUFBLEdBQUFNLENBQUEsVUFBRyxDQUFDLElBQUFDLGVBQUE7SUFBQUUsY0FBQSxHQUFBTixJQUFBLENBQ2RPLFNBQVM7SUFBVEEsU0FBUyxHQUFBRCxjQUFBLGVBQUFULGFBQUEsR0FBQU0sQ0FBQSxVQUFHLEVBQUUsSUFBQUcsY0FBQTtJQUFBRSxtQkFBQSxHQUFBUixJQUFBLENBQ2RTLGNBQWM7SUFBZEEsY0FBYyxHQUFBRCxtQkFBQSxlQUFBWCxhQUFBLEdBQUFNLENBQUEsVUFBRyxDQUFDLElBQUFLLG1CQUFBO0lBQUFFLGVBQUEsR0FBQVYsSUFBQSxDQUNsQlcsVUFBVTtJQUFWQSxVQUFVLEdBQUFELGVBQUEsZUFBQWIsYUFBQSxHQUFBTSxDQUFBLFVBQUcsU0FBUyxJQUFBTyxlQUFBO0VBQUFiLGFBQUEsR0FBQWUsQ0FBQTtFQU10QixJQUFNQyxjQUFjLElBQUFoQixhQUFBLEdBQUFDLENBQUEsT0FBR0osT0FBTyxDQUFDLFlBQU07SUFBQUcsYUFBQSxHQUFBZSxDQUFBO0lBQUFmLGFBQUEsR0FBQUMsQ0FBQTtJQUNuQyxPQUFPTyxVQUFVLEdBQUcsQ0FBQyxJQUFBUixhQUFBLEdBQUFNLENBQUEsVUFDakJXLElBQUksQ0FBQ0MsS0FBSyxDQUFFTixjQUFjLEdBQUdKLFVBQVUsR0FBSSxHQUFHLENBQUMsS0FBQVIsYUFBQSxHQUFBTSxDQUFBLFVBQy9DLENBQUM7RUFDUCxDQUFDLEVBQUUsQ0FBQ00sY0FBYyxFQUFFSixVQUFVLENBQUMsQ0FBQztFQUFDUixhQUFBLEdBQUFDLENBQUE7RUF5QmpDLE9BQ0VGLElBQUEsQ0FBQ0gsWUFBWTtJQUNYdUIsS0FBSyxFQUFDLGFBQWE7SUFDbkJDLFFBQVEsRUFBRSxHQUFHVixTQUFTLFVBQVVMLFdBQVcsSUFBSUcsVUFBVSxFQUFHO0lBQzVEYSxRQUFRLEVBQUVMLGNBQWU7SUFDekJNLFNBQVMsRUFBRVYsY0FBZTtJQUMxQlcsS0FBSyxFQUFFZixVQUFXO0lBQ2xCZ0IsSUFBSSxFQUFDLE1BQU07SUFDWFYsVUFBVSxFQUFFQSxVQUFXO0lBQ3ZCVyxVQUFVLEVBQUUsS0FBTTtJQUNsQkMsUUFBUSxFQUFFLEtBQU07SUFDaEJDLGNBQWMsRUFBRUMsU0FBVTtJQUMxQkMsWUFBWSxFQUFFLEVBQUc7SUFDakJDLGVBQWUsRUFBRUY7RUFBVSxDQUM1QixDQUFDO0FBRU4sQ0FBQztBQUVELGVBQWUxQixpQkFBaUIiLCJpZ25vcmVMaXN0IjpbXX0=