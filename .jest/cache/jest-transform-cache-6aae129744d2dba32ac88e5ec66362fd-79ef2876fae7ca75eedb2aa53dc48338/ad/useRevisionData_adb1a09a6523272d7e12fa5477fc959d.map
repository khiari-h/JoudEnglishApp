{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","_vocabularyDataHelper","cov_2fok51q05k","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","useRevisionData","level","arguments","length","questionsCount","_ref","useState","_ref2","_slicedToArray2","default","allLearnedWords","setAllLearnedWords","_ref3","_ref4","isLoading","setIsLoading","_ref5","_ref6","error","setError","useEffect","loadLearnedWords","_ref7","_asyncToGenerator2","learnedWords","levels","modes","_loop","levelKey","_loop2","mode","storageKey","stored","AsyncStorage","getItem","data","JSON","parse","completedWordsRefs","completedWords","Object","keys","originalData","getVocabularyData","exercises","v","entries","forEach","_ref8","_ref9","categoryIndex","wordRefs","Array","isArray","catIndex","parseInt","category","words","wordRef","wordIndex","timestamp","Date","now","foundIndex","findIndex","w","word","realWord","push","translation","definition","example","fromLevel","fromMode","uniqueId","storageError","console","_ret2","_ret","uniqueWords","filter","index","self","mainError","message","apply","revisionQuestions","useMemo","shuffledWords","_toConsumableArray2","sort","Math","random","selectedWords","slice","min","questionsWithChoices","map","otherWords","wrongAnswers","_fallbackData$exercis","fallbackData","needed","randomFallback","includes","concat","choices","assign","correctAnswer","stats","totalLearned","byLevel","byMode","questionsGenerated","hasEnoughWords","canGenerateQuestions","_default","exports"],"sources":["useRevisionData.js"],"sourcesContent":["// src/hooks/useRevisionData.js - HOOK POUR RÉCUPÉRER LES MOTS APPRIS\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { getVocabularyData } from '../utils/vocabulary/vocabularyDataHelper';\r\n\r\nconst useRevisionData = (level = \"mixed\", questionsCount = 10) => {\r\n  const [allLearnedWords, setAllLearnedWords] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // ========== RÉCUPÉRATION DES MOTS APPRIS ==========\r\n  useEffect(() => {\r\n    const loadLearnedWords = async () => {\r\n      \r\n      try {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        const learnedWords = [];\r\n        \r\n        const levels = level === \"mixed\" ? ['1', '2', '3', '4', '5', '6', 'bonus'] : [level];\r\n        const modes = ['classic', 'fast'];\r\n\r\n        for (const levelKey of levels) {\r\n          for (const mode of modes) {\r\n            const storageKey = `vocabulary_${levelKey}_${mode}`;\r\n            \r\n            try {\r\n              const stored = await AsyncStorage.getItem(storageKey);\r\n              if (!stored) {\r\n                continue;\r\n              }\r\n\r\n              const data = JSON.parse(stored);\r\n              const completedWordsRefs = data.completedWords || {};\r\n              \r\n              if (Object.keys(completedWordsRefs).length === 0) {\r\n                continue;\r\n              }\r\n              \r\n              // Récupérer les données originales du vocabulaire\r\n              const originalData = getVocabularyData(levelKey, mode);\r\n              if (!originalData?.exercises) {\r\n                // Pas de données originales pour ce niveau/mode\r\n                return;\r\n              }\r\n              \r\n              // Traiter chaque catégorie\r\n              Object.entries(completedWordsRefs).forEach(([categoryIndex, wordRefs]) => {\r\n                if (!Array.isArray(wordRefs) || wordRefs.length === 0) return;\r\n                \r\n                const catIndex = parseInt(categoryIndex);\r\n                const category = originalData.exercises[catIndex];\r\n                \r\n                if (!category?.words) {\r\n                  // Catégorie introuvable dans ce niveau/mode\r\n                  return;\r\n                }\r\n                \r\n                // Récupérer chaque mot appris\r\n                wordRefs.forEach((wordRef) => {\r\n                  let wordIndex; // skipcq: JS-0119 - Initialisation dépend de la logique ci-dessous\r\n                  let timestamp = Date.now();\r\n                  \r\n                  // Support nouveau format (objet avec wordIndex + timestamp)\r\n                  if (typeof wordRef === 'object' && wordRef.wordIndex !== undefined) {\r\n                    wordIndex = wordRef.wordIndex;\r\n                    timestamp = wordRef.timestamp || timestamp;\r\n                  } \r\n                  // Support ancien format (juste l'index)\r\n                  else if (typeof wordRef === 'number') {\r\n                    wordIndex = wordRef;\r\n                  }\r\n                  // Support très ancien format (string du mot)\r\n                  else if (typeof wordRef === 'string') {\r\n                    const foundIndex = category.words.findIndex(w => w.word === wordRef);\r\n                    if (foundIndex !== -1) wordIndex = foundIndex;\r\n                  }\r\n                  \r\n                  // Récupérer le vrai mot depuis les données originales\r\n                  if (wordIndex !== undefined && category.words[wordIndex]) {\r\n                    const realWord = category.words[wordIndex];\r\n                    learnedWords.push({\r\n                      // Données du mot\r\n                      word: realWord.word,\r\n                      translation: realWord.translation,\r\n                      definition: realWord.definition || '',\r\n                      example: realWord.example || '',\r\n                      \r\n                      // Métadonnées\r\n                      fromLevel: levelKey,\r\n                      fromMode: mode,\r\n                      categoryIndex: catIndex,\r\n                      wordIndex,\r\n                      timestamp,\r\n                      \r\n                      // ID unique pour éviter doublons\r\n                      uniqueId: `${levelKey}_${mode}_${catIndex}_${wordIndex}`\r\n                    });\r\n                    \r\n                  } else {\r\n                    // WordIndex introuvable dans la catégorie\r\n                  }\r\n                });\r\n              });\r\n              \r\n            } catch (storageError) {\r\n              console.error(`❌ Erreur traitement ${storageKey}:`, storageError);\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Supprimer les doublons potentiels basés sur uniqueId\r\n        const uniqueWords = learnedWords.filter((word, index, self) => \r\n          index === self.findIndex(w => w.uniqueId === word.uniqueId)\r\n        );\r\n        \r\n        setAllLearnedWords(uniqueWords);\r\n        \r\n      } catch (mainError) {\r\n        console.error('❌ Erreur générale useRevisionData:', mainError);\r\n        setError(mainError.message);\r\n        setAllLearnedWords([]);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadLearnedWords();\r\n  }, [level]); // Recharger si le niveau change\r\n\r\n  // ========== GÉNÉRATION DES QUESTIONS ==========\r\n  const revisionQuestions = useMemo(() => {\r\n    if (allLearnedWords.length === 0) return [];\r\n\r\n    // Mélanger et sélectionner\r\n    const shuffledWords = [...allLearnedWords].sort(() => Math.random() - 0.5);\r\n    const selectedWords = shuffledWords.slice(0, Math.min(questionsCount, allLearnedWords.length));\r\n    \r\n    // Générer les choix pour chaque question\r\n    const questionsWithChoices = selectedWords.map((word) => {\r\n      // Pool des autres mots pour les mauvaises réponses\r\n      const otherWords = allLearnedWords.filter(w => w.uniqueId !== word.uniqueId);\r\n      \r\n      // Prendre 3 mauvaises réponses\r\n      let wrongAnswers = otherWords\r\n        .sort(() => Math.random() - 0.5)\r\n        .slice(0, 3)\r\n        .map(w => w.translation);\r\n      \r\n      // Si pas assez de mauvaises réponses, compléter avec dataset de fallback\r\n      if (wrongAnswers.length < 3) {\r\n        const fallbackData = getVocabularyData('1', 'classic');\r\n        if (fallbackData?.exercises?.[0]?.words) {\r\n          const needed = 3 - wrongAnswers.length;\r\n          const randomFallback = fallbackData.exercises[0].words\r\n            .sort(() => Math.random() - 0.5)\r\n            .filter(w => !wrongAnswers.includes(w.translation) && w.translation !== word.translation)\r\n            .slice(0, needed)\r\n            .map(w => w.translation);\r\n          \r\n          wrongAnswers = [...wrongAnswers, ...randomFallback];\r\n        }\r\n      }\r\n      \r\n      // Mélanger toutes les réponses\r\n      const choices = [word.translation, ...wrongAnswers.slice(0, 3)]\r\n        .sort(() => Math.random() - 0.5);\r\n      \r\n      return {\r\n        ...word,\r\n        choices,\r\n        correctAnswer: word.translation\r\n      };\r\n    });\r\n\r\n    return questionsWithChoices;\r\n    \r\n  }, [allLearnedWords, questionsCount]);\r\n\r\n  // ========== STATISTIQUES ==========\r\n  const stats = useMemo(() => {\r\n    const totalLearned = allLearnedWords.length;\r\n    const byLevel = {};\r\n    const byMode = {};\r\n    \r\n    allLearnedWords.forEach(word => {\r\n      byLevel[word.fromLevel] = (byLevel[word.fromLevel] || 0) + 1;\r\n      byMode[word.fromMode] = (byMode[word.fromMode] || 0) + 1;\r\n    });\r\n    \r\n    return {\r\n      totalLearned,\r\n      byLevel,\r\n      byMode,\r\n      questionsGenerated: revisionQuestions.length\r\n    };\r\n  }, [allLearnedWords, revisionQuestions]);\r\n\r\n  return {\r\n    // Données principales\r\n    allLearnedWords,\r\n    revisionQuestions,\r\n    \r\n    // État\r\n    isLoading,\r\n    error,\r\n    \r\n    // Statistiques\r\n    stats,\r\n    \r\n    // Méthodes utiles\r\n    hasEnoughWords: allLearnedWords.length > 0,\r\n    canGenerateQuestions: revisionQuestions.length > 0\r\n  };\r\n};\r\n\r\nexport default useRevisionData;"],"mappings":"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","ignoreList":[]}