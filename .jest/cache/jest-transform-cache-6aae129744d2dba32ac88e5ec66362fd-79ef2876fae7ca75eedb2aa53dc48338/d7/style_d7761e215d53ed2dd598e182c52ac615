93b54b756382c634704b01e8c130fb76
function cov_1sucwnlqne() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionModeSelector\\style.js";
  var hash = "43c8af48db3a889461d19c39a4a190f3d7c9ed6b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\ErrorCorrectionModeSelector\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 72,
          column: 4
        }
      },
      "1": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 72,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 22
          }
        },
        loc: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 72,
            column: 4
          }
        },
        line: 10
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "43c8af48db3a889461d19c39a4a190f3d7c9ed6b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1sucwnlqne = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1sucwnlqne();
import { StyleSheet, Platform } from 'react-native';
cov_1sucwnlqne().s[0]++;
var createStyles = function createStyles() {
  cov_1sucwnlqne().f[0]++;
  cov_1sucwnlqne().s[1]++;
  return StyleSheet.create({
    container: {
      padding: 16,
      marginBottom: 16
    },
    title: {
      fontSize: 18,
      fontWeight: '700',
      color: '#1e293b',
      marginBottom: 16,
      textAlign: 'center'
    },
    modeCard: Object.assign({
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: 'white',
      borderRadius: 12,
      padding: 16,
      marginBottom: 12,
      borderWidth: 1,
      borderColor: '#e2e8f0'
    }, Platform.select({
      ios: {
        shadowColor: '#64748b',
        shadowOffset: {
          width: 0,
          height: 1
        },
        shadowOpacity: 0.1,
        shadowRadius: 2
      },
      android: {
        elevation: 2
      }
    })),
    disabledCard: {
      opacity: 0.6
    },
    icon: {
      marginRight: 16
    },
    modeInfo: {
      flex: 1
    },
    modeTitle: {
      fontSize: 16,
      fontWeight: '600',
      color: '#1e293b',
      marginBottom: 2
    },
    modeDescription: {
      fontSize: 14,
      color: '#64748b'
    },
    disabledText: {
      color: '#94a3b8'
    }
  });
};
export default createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHlsZVNoZWV0IiwiUGxhdGZvcm0iLCJjb3ZfMXN1Y3dubHFuZSIsInMiLCJjcmVhdGVTdHlsZXMiLCJmIiwiY3JlYXRlIiwiY29udGFpbmVyIiwicGFkZGluZyIsIm1hcmdpbkJvdHRvbSIsInRpdGxlIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiY29sb3IiLCJ0ZXh0QWxpZ24iLCJtb2RlQ2FyZCIsIk9iamVjdCIsImFzc2lnbiIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyUmFkaXVzIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsInNlbGVjdCIsImlvcyIsInNoYWRvd0NvbG9yIiwic2hhZG93T2Zmc2V0Iiwid2lkdGgiLCJoZWlnaHQiLCJzaGFkb3dPcGFjaXR5Iiwic2hhZG93UmFkaXVzIiwiYW5kcm9pZCIsImVsZXZhdGlvbiIsImRpc2FibGVkQ2FyZCIsIm9wYWNpdHkiLCJpY29uIiwibWFyZ2luUmlnaHQiLCJtb2RlSW5mbyIsImZsZXgiLCJtb2RlVGl0bGUiLCJtb2RlRGVzY3JpcHRpb24iLCJkaXNhYmxlZFRleHQiXSwic291cmNlcyI6WyJzdHlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFcnJvckNvcnJlY3Rpb25Nb2RlU2VsZWN0b3Ivc3R5bGUuanMgLSBWRVJTSU9OIFNJTVBMSUZJw4lFXHJcblxyXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBQbGF0Zm9ybSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcblxyXG4vKipcclxuICog8J+OryBTdHlsZXMgdWx0cmEtc2ltcGxpZmnDqXMgcG91ciBFcnJvckNvcnJlY3Rpb25Nb2RlU2VsZWN0b3IgIFxyXG4gKiBGb2N1cyBzdXIgbCdlc3NlbnRpZWwsIHN1cHByZXNzaW9uIGRlcyByZWRvbmRhbmNlc1xyXG4gKi9cclxuY29uc3QgY3JlYXRlU3R5bGVzID0gKCkgPT5cclxuICBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IENPTlRBSU5FUiA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBjb250YWluZXI6IHtcclxuICAgICAgcGFkZGluZzogMTYsXHJcbiAgICAgIG1hcmdpbkJvdHRvbTogMTYsXHJcbiAgICB9LFxyXG4gICAgXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IFRJVFJFID09PT09PT09PT09PT09PT09PT1cclxuICAgIHRpdGxlOiB7XHJcbiAgICAgIGZvbnRTaXplOiAxOCxcclxuICAgICAgZm9udFdlaWdodDogJzcwMCcsXHJcbiAgICAgIGNvbG9yOiAnIzFlMjkzYicsXHJcbiAgICAgIG1hcmdpbkJvdHRvbTogMTYsXHJcbiAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgICB9LFxyXG5cclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gTU9ERSBDQVJEUyA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBtb2RlQ2FyZDoge1xyXG4gICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcclxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcclxuICAgICAgYm9yZGVyUmFkaXVzOiAxMixcclxuICAgICAgcGFkZGluZzogMTYsXHJcbiAgICAgIG1hcmdpbkJvdHRvbTogMTIsXHJcbiAgICAgIGJvcmRlcldpZHRoOiAxLFxyXG4gICAgICBib3JkZXJDb2xvcjogJyNlMmU4ZjAnLFxyXG4gICAgICAuLi5QbGF0Zm9ybS5zZWxlY3Qoe1xyXG4gICAgICAgIGlvczoge1xyXG4gICAgICAgICAgc2hhZG93Q29sb3I6ICcjNjQ3NDhiJyxcclxuICAgICAgICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiAxIH0sXHJcbiAgICAgICAgICBzaGFkb3dPcGFjaXR5OiAwLjEsXHJcbiAgICAgICAgICBzaGFkb3dSYWRpdXM6IDIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBhbmRyb2lkOiB7XHJcbiAgICAgICAgICBlbGV2YXRpb246IDIsXHJcbiAgICAgICAgfSxcclxuICAgICAgfSksXHJcbiAgICB9LFxyXG4gICAgZGlzYWJsZWRDYXJkOiB7XHJcbiAgICAgIG9wYWNpdHk6IDAuNixcclxuICAgIH0sXHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBJQ09OICYgSU5GTyA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBpY29uOiB7XHJcbiAgICAgIG1hcmdpblJpZ2h0OiAxNixcclxuICAgIH0sXHJcbiAgICBtb2RlSW5mbzoge1xyXG4gICAgICBmbGV4OiAxLFxyXG4gICAgfSxcclxuICAgIG1vZGVUaXRsZToge1xyXG4gICAgICBmb250U2l6ZTogMTYsXHJcbiAgICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxyXG4gICAgICBjb2xvcjogJyMxZTI5M2InLFxyXG4gICAgICBtYXJnaW5Cb3R0b206IDIsXHJcbiAgICB9LFxyXG4gICAgbW9kZURlc2NyaXB0aW9uOiB7XHJcbiAgICAgIGZvbnRTaXplOiAxNCxcclxuICAgICAgY29sb3I6ICcjNjQ3NDhiJyxcclxuICAgIH0sXHJcbiAgICBkaXNhYmxlZFRleHQ6IHtcclxuICAgICAgY29sb3I6ICcjOTRhM2I4JyxcclxuICAgIH0sXHJcbiAgfSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVTdHlsZXM7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLFNBQVNBLFVBQVUsRUFBRUMsUUFBUSxRQUFRLGNBQWM7QUFBQ0MsY0FBQSxHQUFBQyxDQUFBO0FBTXBELElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFZQSxDQUFBLEVBQ2hCO0VBQUFGLGNBQUEsR0FBQUcsQ0FBQTtFQUFBSCxjQUFBLEdBQUFDLENBQUE7RUFBQSxPQUFBSCxVQUFVLENBQUNNLE1BQU0sQ0FBQztJQUVoQkMsU0FBUyxFQUFFO01BQ1RDLE9BQU8sRUFBRSxFQUFFO01BQ1hDLFlBQVksRUFBRTtJQUNoQixDQUFDO0lBR0RDLEtBQUssRUFBRTtNQUNMQyxRQUFRLEVBQUUsRUFBRTtNQUNaQyxVQUFVLEVBQUUsS0FBSztNQUNqQkMsS0FBSyxFQUFFLFNBQVM7TUFDaEJKLFlBQVksRUFBRSxFQUFFO01BQ2hCSyxTQUFTLEVBQUU7SUFDYixDQUFDO0lBR0RDLFFBQVEsRUFBQUMsTUFBQSxDQUFBQyxNQUFBO01BQ05DLGFBQWEsRUFBRSxLQUFLO01BQ3BCQyxVQUFVLEVBQUUsUUFBUTtNQUNwQkMsZUFBZSxFQUFFLE9BQU87TUFDeEJDLFlBQVksRUFBRSxFQUFFO01BQ2hCYixPQUFPLEVBQUUsRUFBRTtNQUNYQyxZQUFZLEVBQUUsRUFBRTtNQUNoQmEsV0FBVyxFQUFFLENBQUM7TUFDZEMsV0FBVyxFQUFFO0lBQVMsR0FDbkJ0QixRQUFRLENBQUN1QixNQUFNLENBQUM7TUFDakJDLEdBQUcsRUFBRTtRQUNIQyxXQUFXLEVBQUUsU0FBUztRQUN0QkMsWUFBWSxFQUFFO1VBQUVDLEtBQUssRUFBRSxDQUFDO1VBQUVDLE1BQU0sRUFBRTtRQUFFLENBQUM7UUFDckNDLGFBQWEsRUFBRSxHQUFHO1FBQ2xCQyxZQUFZLEVBQUU7TUFDaEIsQ0FBQztNQUNEQyxPQUFPLEVBQUU7UUFDUEMsU0FBUyxFQUFFO01BQ2I7SUFDRixDQUFDLENBQUMsQ0FDSDtJQUNEQyxZQUFZLEVBQUU7TUFDWkMsT0FBTyxFQUFFO0lBQ1gsQ0FBQztJQUdEQyxJQUFJLEVBQUU7TUFDSkMsV0FBVyxFQUFFO0lBQ2YsQ0FBQztJQUNEQyxRQUFRLEVBQUU7TUFDUkMsSUFBSSxFQUFFO0lBQ1IsQ0FBQztJQUNEQyxTQUFTLEVBQUU7TUFDVDdCLFFBQVEsRUFBRSxFQUFFO01BQ1pDLFVBQVUsRUFBRSxLQUFLO01BQ2pCQyxLQUFLLEVBQUUsU0FBUztNQUNoQkosWUFBWSxFQUFFO0lBQ2hCLENBQUM7SUFDRGdDLGVBQWUsRUFBRTtNQUNmOUIsUUFBUSxFQUFFLEVBQUU7TUFDWkUsS0FBSyxFQUFFO0lBQ1QsQ0FBQztJQUNENkIsWUFBWSxFQUFFO01BQ1o3QixLQUFLLEVBQUU7SUFDVDtFQUNGLENBQUMsQ0FBQztBQUFELENBQUM7QUFFSixlQUFlVCxZQUFZIiwiaWdub3JlTGlzdCI6W119