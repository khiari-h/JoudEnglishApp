3dd9c3b3a7643e1cb41afcf76f049c49
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vocab = void 0;
function cov_2kgkmybkyt() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\19_enjeux_sociaux.js";
  var hash = "b53b05534db8825db3e83677372be8f239c45086";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\6\\categories\\19_enjeux_sociaux.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 21
        },
        end: {
          line: 156,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b53b05534db8825db3e83677372be8f239c45086"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2kgkmybkyt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2kgkmybkyt();
var vocab = exports.vocab = (cov_2kgkmybkyt().s[0]++, {
  title: "Enjeux Sociaux Complexes",
  words: [{
    word: "systemic inequality",
    translation: "inégalité systémique",
    example: "Systemic inequality persists through institutional structures despite formal legal equality."
  }, {
    word: "socioeconomic disparities",
    translation: "disparités socio-économiques",
    example: "The pandemic exacerbated existing socioeconomic disparities in healthcare access and outcomes."
  }, {
    word: "social determinants",
    translation: "déterminants sociaux",
    example: "Health outcomes reflect social determinants including education, income, and neighborhood conditions."
  }, {
    word: "structural barriers",
    translation: "barrières structurelles",
    example: "Structural barriers to advancement persist despite anti-discrimination legislation."
  }, {
    word: "marginalized communities",
    translation: "communautés marginalisées",
    example: "Policy development must include voices from marginalized communities most affected by decisions."
  }, {
    word: "social justice",
    translation: "justice sociale",
    example: "Social justice frameworks address both distributive fairness and recognition of identity-based exclusion."
  }, {
    word: "procedural justice",
    translation: "justice procédurale",
    example: "Procedural justice focuses on fairness in decision-making processes rather than just outcomes."
  }, {
    word: "social contract",
    translation: "contrat social",
    example: "The pandemic prompted reassessment of the social contract between citizens, employers, and government."
  }, {
    word: "collective responsibility",
    translation: "responsabilité collective",
    example: "Addressing historical injustices requires acknowledging collective responsibility beyond individual actions."
  }, {
    word: "empowerment",
    translation: "autonomisation",
    example: "Community empowerment strategies build capacity for self-determination rather than dependency."
  }, {
    word: "capabilities approach",
    translation: "approche par les capabilités",
    example: "The capabilities approach measures well-being through substantive freedoms rather than income alone."
  }, {
    word: "human flourishing",
    translation: "épanouissement humain",
    example: "Policy should ultimately promote human flourishing beyond economic metrics."
  }, {
    word: "social welfare",
    translation: "bien-être social",
    example: "Comprehensive social welfare systems provide support throughout the life course."
  }, {
    word: "social safety net",
    translation: "filet de sécurité sociale",
    example: "The pandemic revealed inadequacies in the social safety net for contingent workers."
  }, {
    word: "universal basic income",
    translation: "revenu universel de base",
    example: "Universal basic income proposals address both poverty and technological displacement concerns."
  }, {
    word: "economic insecurity",
    translation: "insécurité économique",
    example: "Economic insecurity affects household formation, consumption, and social cohesion."
  }, {
    word: "precarious employment",
    translation: "emploi précaire",
    example: "Precarious employment relationships transfer risk from employers to individual workers."
  }, {
    word: "labor market polarization",
    translation: "polarisation du marché du travail",
    example: "Labor market polarization increases demand for both high-skill and low-skill workers while hollowing the middle."
  }, {
    word: "working poor",
    translation: "travailleurs pauvres",
    example: "The working poor remain in poverty despite full-time employment due to inadequate wages."
  }, {
    word: "housing insecurity",
    translation: "insécurité du logement",
    example: "Housing insecurity affects educational outcomes and family stability beyond homelessness."
  }, {
    word: "rural-urban divide",
    translation: "fracture rurale-urbaine",
    example: "The rural-urban divide increasingly defines political alignments in many democracies."
  }, {
    word: "meritocratic ideology",
    translation: "idéologie méritocratique",
    example: "Meritocratic ideology legitimizes inequality by attributing outcomes to individual effort rather than structural factors."
  }, {
    word: "inherited privilege",
    translation: "privilège hérité",
    example: "Inherited privilege functions through both material wealth and cultural advantages transmitted across generations."
  }, {
    word: "progressive taxation",
    translation: "fiscalité progressive",
    example: "Progressive taxation structures distribute burden according to ability to pay rather than equally."
  }, {
    word: "aging society",
    translation: "société vieillissante",
    example: "Aging society dynamics reshape labor markets, healthcare systems, and intergenerational transfers."
  }, {
    word: "population decline",
    translation: "déclin démographique",
    example: "Regional population decline threatens economic sustainability in rural and post-industrial areas."
  }, {
    word: "migration patterns",
    translation: "schémas migratoires",
    example: "Contemporary migration patterns reflect both opportunity-seeking and displacement from conflict and climate impacts."
  }, {
    word: "megacity",
    translation: "mégalopole",
    example: "Governance of megacities requires innovative approaches beyond traditional municipal models."
  }, {
    word: "social fabric",
    translation: "tissu social",
    example: "Community institutions strengthen the social fabric through relationship building and mutual assistance."
  }, {
    word: "civic engagement",
    translation: "engagement civique",
    example: "Declining civic engagement raises concerns about democratic legitimacy and social connectedness."
  }, {
    word: "social atomization",
    translation: "atomisation sociale",
    example: "Technology platforms may exacerbate social atomization despite superficial connectivity."
  }, {
    word: "communal bonds",
    translation: "liens communautaires",
    example: "Traditional communal bonds weaken through geographic mobility and individualistic value shifts."
  }, {
    word: "inclusive representation",
    translation: "représentation inclusive",
    example: "Media organizations increasingly prioritize inclusive representation in content creation and distribution."
  }, {
    word: "diversity, equity and inclusion",
    translation: "diversité, équité et inclusion",
    example: "Organizational DEI initiatives address representation, opportunity, and belonging dimensions."
  }, {
    word: "unconscious bias",
    translation: "biais inconscient",
    example: "Training programs address unconscious bias in decision-making processes despite conscious egalitarian values."
  }, {
    word: "allyship",
    translation: "alliance",
    example: "Effective allyship involves using privilege to challenge systemic inequities rather than merely expressing sympathy."
  }, {
    word: "decolonization",
    translation: "décolonisation",
    example: "Institutional decolonization examines how colonial legacies persist in knowledge systems and governance structures."
  }, {
    word: "indigeneity",
    translation: "indigénéité",
    example: "Indigenous movements assert rights based on historical continuity with pre-colonial societies."
  }, {
    word: "reparations",
    translation: "réparations",
    example: "Reparations proposals address historical injustices through financial compensation and structural reforms."
  }, {
    word: "social construction",
    translation: "construction sociale",
    example: "Understanding gender as social construction distinguishes between biological characteristics and cultural norms."
  }, {
    word: "gender norms",
    translation: "normes de genre",
    example: "Gender norms vary across cultures but typically prescribe different behaviors and expectations based on perceived gender."
  }, {
    word: "heteronormativity",
    translation: "hétéronormativité",
    example: "Heteronormativity assumes heterosexuality as default and organizing principle for social institutions."
  }, {
    word: "toxic masculinity",
    translation: "masculinité toxique",
    example: "The concept of toxic masculinity identifies harmful behavioral norms rather than condemning masculinity itself."
  }, {
    word: "patriarchal structures",
    translation: "structures patriarcales",
    example: "Patriarchal structures persist through both explicit discrimination and implicit assumptions about leadership and authority."
  }, {
    word: "religious pluralism",
    translation: "pluralisme religieux",
    example: "Democratic societies navigate religious pluralism through balancing free exercise with secular governance."
  }, {
    word: "secularization",
    translation: "sécularisation",
    example: "Secularization trends vary significantly across different regions and cultural contexts."
  }, {
    word: "traditionalism",
    translation: "traditionalisme",
    example: "Traditionalism emphasizes continuity with established cultural practices and historical norms."
  }, {
    word: "cultural conservatism",
    translation: "conservatisme culturel",
    example: "Cultural conservatism prioritizes preservation of traditional values and social structures amid rapid change."
  }, {
    word: "progressive values",
    translation: "valeurs progressistes",
    example: "Progressive values emphasize equality, individual autonomy, and openness to social change."
  }, {
    word: "techno-social transformation",
    translation: "transformation techno-sociale",
    example: "Digital platforms drive techno-social transformation through reshaping communication patterns and market structures."
  }, {
    word: "algorithmic governance",
    translation: "gouvernance algorithmique",
    example: "Algorithmic governance shifts decision authority from human judgment to automated systems."
  }, {
    word: "digital capitalism",
    translation: "capitalisme numérique",
    example: "Digital capitalism relies on data extraction and behavioral prediction as core business models."
  }, {
    word: "social construction of technology",
    translation: "construction sociale de la technologie",
    example: "The social construction of technology emphasizes how cultural values and power relationships shape technological development."
  }, {
    word: "epistemic crisis",
    translation: "crise épistémique",
    example: "Social media dynamics contribute to epistemic crisis through undermining shared factual foundations."
  }, {
    word: "civic discourse",
    translation: "discours civique",
    example: "Healthy civic discourse requires both exposure to diverse perspectives and shared commitment to factual accuracy."
  }, {
    word: "institutional trust",
    translation: "confiance institutionnelle",
    example: "Declining institutional trust affects both government legitimacy and social cooperation capacity."
  }, {
    word: "crisis of expertise",
    translation: "crise de l'expertise",
    example: "The crisis of expertise reflects contested authority of specialized knowledge in public decision-making."
  }, {
    word: "post-truth politics",
    translation: "politique post-vérité",
    example: "Post-truth politics prioritizes emotional resonance over factual accuracy in public discourse."
  }, {
    word: "democracy erosion",
    translation: "érosion démocratique",
    example: "Democracy erosion occurs gradually through institutional weakening rather than dramatic regime change."
  }, {
    word: "illiberal democracy",
    translation: "démocratie illibérale",
    example: "Illiberal democracy maintains electoral processes while undermining independent institutions and minority rights."
  }, {
    word: "constitutional regression",
    translation: "régression constitutionnelle",
    example: "Constitutional regression involves systematic weakening of checks and balances and rule of law principles."
  }, {
    word: "deliberative democracy",
    translation: "démocratie délibérative",
    example: "Deliberative democracy emphasizes informed discussion and reasoning rather than mere preference aggregation."
  }, {
    word: "post-growth economics",
    translation: "économie post-croissance",
    example: "Post-growth economics questions perpetual expansion assumptions in traditional economic models."
  }, {
    word: "wellbeing economy",
    translation: "économie du bien-être",
    example: "Wellbeing economy frameworks prioritize quality of life indicators beyond GDP growth."
  }, {
    word: "financialization",
    translation: "financiarisation",
    example: "Financialization shifts economic activity from production toward financial instruments and services."
  }, {
    word: "economic orthodoxy",
    translation: "orthodoxie économique",
    example: "Challenging economic orthodoxy requires questioning fundamental assumptions about markets and efficiency."
  }, {
    word: "market fundamentalism",
    translation: "fondamentalisme du marché",
    example: "Market fundamentalism attributes greater efficiency to private enterprise regardless of context."
  }, {
    word: "public goods",
    translation: "biens publics",
    example: "Public goods create shared benefit without rivalry or exclusion, complicating market provision."
  }, {
    word: "commons",
    translation: "biens communs",
    example: "Managing commons sustainably requires governance beyond both state control and privatization."
  }, {
    word: "solidarity economy",
    translation: "économie solidaire",
    example: "Solidarity economy models prioritize cooperation and social value over profit maximization."
  }, {
    word: "community wealth building",
    translation: "construction de richesse communautaire",
    example: "Community wealth building strategies develop local ownership and asset democratization."
  }, {
    word: "stakeholder capitalism",
    translation: "capitalisme des parties prenantes",
    example: "Stakeholder capitalism considers interests beyond shareholders including workers, communities, and environment."
  }, {
    word: "path dependency",
    translation: "dépendance au sentier",
    example: "Path dependency explains how historical decisions constrain future options through established systems."
  }, {
    word: "interdisciplinary perspective",
    translation: "perspective interdisciplinaire",
    example: "Climate solutions require interdisciplinary perspectives integrating scientific, economic, and social dimensions."
  }, {
    word: "policy innovation",
    translation: "innovation politique",
    example: "Policy innovation adapts governance approaches to emerging challenges and contextual realities."
  }, {
    word: "best practices",
    translation: "meilleures pratiques",
    example: "Identifying best practices requires careful contextual adaptation rather than simple replication."
  }, {
    word: "scaling solutions",
    translation: "mise à l'échelle des solutions",
    example: "Scaling solutions beyond pilot programs requires addressing institutional and resource constraints."
  }, {
    word: "cross-sector collaboration",
    translation: "collaboration intersectorielle",
    example: "Complex social problems require cross-sector collaboration between government, business, and civil society."
  }, {
    word: "collective impact",
    translation: "impact collectif",
    example: "Collective impact frameworks coordinate multiple stakeholders toward shared objectives with mutually reinforcing activities."
  }, {
    word: "community development",
    translation: "développement communautaire",
    example: "Effective community development builds on existing assets rather than imposing external solutions."
  }, {
    word: "grassroots mobilization",
    translation: "mobilisation populaire",
    example: "Grassroots mobilization harnesses local knowledge and relationships for collective action."
  }, {
    word: "participatory approach",
    translation: "approche participative",
    example: "Participatory approaches involve affected communities throughout problem definition and solution development."
  }, {
    word: "co-production",
    translation: "co-production",
    example: "Service co-production engages users as active participants rather than passive recipients."
  }, {
    word: "human-centered design",
    translation: "conception centrée sur l'humain",
    example: "Human-centered design begins with understanding affected people's experiences and perspectives."
  }, {
    word: "adaptive leadership",
    translation: "leadership adaptatif",
    example: "Adaptive leadership mobilizes people to address challenges requiring behavioral and value changes."
  }, {
    word: "technical problem",
    translation: "problème technique",
    example: "Technical problems can be solved through existing knowledge and authority structures."
  }, {
    word: "adaptive challenge",
    translation: "défi adaptatif",
    example: "Adaptive challenges require changes in values, relationships, and perspectives rather than technical expertise alone."
  }, {
    word: "transformational change",
    translation: "changement transformationnel",
    example: "Transformational change addresses root causes rather than symptoms of social problems."
  }, {
    word: "incremental change",
    translation: "changement incrémental",
    example: "Incremental change accumulates small improvements while maintaining system stability."
  }, {
    word: "implementation science",
    translation: "science de la mise en œuvre",
    example: "Implementation science examines how interventions translate from controlled studies to real-world contexts."
  }, {
    word: "social impact measurement",
    translation: "mesure de l'impact social",
    example: "Social impact measurement captures both intended and unintended consequences across stakeholders."
  }, {
    word: "outcome metrics",
    translation: "indicateurs de résultats",
    example: "Selecting appropriate outcome metrics requires balancing measurement feasibility with meaningful representation."
  }, {
    word: "strategic philanthropy",
    translation: "philanthropie stratégique",
    example: "Strategic philanthropy addresses root causes through systemic change rather than symptomatic relief."
  }, {
    word: "venture philanthropy",
    translation: "philanthropie de risque",
    example: "Venture philanthropy applies investment principles to social impact through long-term engagement and capacity building."
  }, {
    word: "ethical consumerism",
    translation: "consommation éthique",
    example: "Ethical consumerism leverages purchasing decisions to promote social and environmental responsibility."
  }, {
    word: "corporate accountability",
    translation: "responsabilité des entreprises",
    example: "Corporate accountability mechanisms include both regulatory requirements and stakeholder pressure."
  }, {
    word: "social license",
    translation: "permis social",
    example: "Operating without social license risks community opposition despite formal regulatory approval."
  }, {
    word: "multi-stakeholder initiative",
    translation: "initiative multipartite",
    example: "Multi-stakeholder initiatives develop standards and accountability mechanisms across industry participants."
  }, {
    word: "systemic intervention",
    translation: "intervention systémique",
    example: "Systemic interventions address underlying structures rather than individual cases or symptoms."
  }, {
    word: "leverage point",
    translation: "point de levier",
    example: "Effective change strategies identify leverage points where modest efforts produce significant system effects."
  }, {
    word: "emergence",
    translation: "émergence",
    example: "Complex systems exhibit emergence where collective patterns arise from decentralized interactions."
  }, {
    word: "bottom-up approach",
    translation: "approche ascendante",
    example: "Bottom-up approaches harness local knowledge and agency rather than imposing external solutions."
  }, {
    word: "community ownership",
    translation: "appropriation communautaire",
    example: "Sustainable interventions foster community ownership rather than dependency on external support."
  }, {
    word: "societal resilience",
    translation: "résilience sociétale",
    example: "Societal resilience enables adaptive response to shocks through both social capital and institutional capacity."
  }]
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,