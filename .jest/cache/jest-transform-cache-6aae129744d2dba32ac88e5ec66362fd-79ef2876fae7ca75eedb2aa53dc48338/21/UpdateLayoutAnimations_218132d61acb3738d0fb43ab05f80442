f82dca82d04b4f36dcbf3927c5ebef09
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateLayoutAnimations = void 0;
var _PlatformChecker = require("./PlatformChecker");
var _core = require("./core");
function createUpdateManager() {
  var animations = [];
  var deferredAnimations = [];
  return {
    update: function update(batchItem, isUnmounting) {
      if (isUnmounting) {
        deferredAnimations.push(batchItem);
      } else {
        animations.push(batchItem);
      }
      if (animations.length + deferredAnimations.length === 1) {
        (0, _PlatformChecker.isFabric)() ? this.flush() : setImmediate(this.flush);
      }
    },
    flush: function flush() {
      (0, _core.configureLayoutAnimationBatch)(animations.concat(deferredAnimations));
      animations.length = 0;
      deferredAnimations.length = 0;
    }
  };
}
var updateLayoutAnimations;
if ((0, _PlatformChecker.shouldBeUseWeb)()) {
  exports.updateLayoutAnimations = updateLayoutAnimations = function updateLayoutAnimations() {};
} else {
  var updateLayoutAnimationsManager = createUpdateManager();
  exports.updateLayoutAnimations = updateLayoutAnimations = function updateLayoutAnimations(viewTag, type, config, sharedTransitionTag, isUnmounting) {
    return updateLayoutAnimationsManager.update({
      viewTag: viewTag,
      type: type,
      config: config ? (0, _core.makeShareableCloneRecursive)(config) : undefined,
      sharedTransitionTag: sharedTransitionTag
    }, isUnmounting);
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInVwZGF0ZUxheW91dEFuaW1hdGlvbnMiLCJfUGxhdGZvcm1DaGVja2VyIiwicmVxdWlyZSIsIl9jb3JlIiwiY3JlYXRlVXBkYXRlTWFuYWdlciIsImFuaW1hdGlvbnMiLCJkZWZlcnJlZEFuaW1hdGlvbnMiLCJ1cGRhdGUiLCJiYXRjaEl0ZW0iLCJpc1VubW91bnRpbmciLCJwdXNoIiwibGVuZ3RoIiwiaXNGYWJyaWMiLCJmbHVzaCIsInNldEltbWVkaWF0ZSIsImNvbmZpZ3VyZUxheW91dEFuaW1hdGlvbkJhdGNoIiwiY29uY2F0Iiwic2hvdWxkQmVVc2VXZWIiLCJ1cGRhdGVMYXlvdXRBbmltYXRpb25zTWFuYWdlciIsInZpZXdUYWciLCJ0eXBlIiwiY29uZmlnIiwic2hhcmVkVHJhbnNpdGlvblRhZyIsIm1ha2VTaGFyZWFibGVDbG9uZVJlY3Vyc2l2ZSIsInVuZGVmaW5lZCJdLCJzb3VyY2VzIjpbIlVwZGF0ZUxheW91dEFuaW1hdGlvbnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgaXNGYWJyaWMsIHNob3VsZEJlVXNlV2ViIH0gZnJvbSAnLi9QbGF0Zm9ybUNoZWNrZXInO1xuaW1wb3J0IHtcbiAgY29uZmlndXJlTGF5b3V0QW5pbWF0aW9uQmF0Y2gsXG4gIG1ha2VTaGFyZWFibGVDbG9uZVJlY3Vyc2l2ZSxcbn0gZnJvbSAnLi9jb3JlJztcbmltcG9ydCB0eXBlIHtcbiAgTGF5b3V0QW5pbWF0aW9uRnVuY3Rpb24sXG4gIExheW91dEFuaW1hdGlvblR5cGUsXG59IGZyb20gJy4vbGF5b3V0UmVhbmltYXRpb24nO1xuaW1wb3J0IHR5cGUge1xuICBMYXlvdXRBbmltYXRpb25CYXRjaEl0ZW0sXG4gIFByb2dyZXNzQW5pbWF0aW9uQ2FsbGJhY2ssXG4gIFNoYXJlZFRyYW5zaXRpb25BbmltYXRpb25zRnVuY3Rpb24sXG59IGZyb20gJy4vbGF5b3V0UmVhbmltYXRpb24vYW5pbWF0aW9uQnVpbGRlci9jb21tb25UeXBlcyc7XG5cbmZ1bmN0aW9uIGNyZWF0ZVVwZGF0ZU1hbmFnZXIoKSB7XG4gIGNvbnN0IGFuaW1hdGlvbnM6IExheW91dEFuaW1hdGlvbkJhdGNoSXRlbVtdID0gW107XG4gIC8vIFdoZW4gYSBzdGFjayBpcyByZXJlbmRlcmVkIHdlIHJlY29uZmlndXJlIGFsbCB0aGUgc2hhcmVkIGVsZW1lbnRzLlxuICAvLyBUbyBkbyB0aGF0IHdlIHdhbnQgdGhlbSB0byBhcHBlYXIgaW4gb3VyIGJhdGNoIGluIHRoZSBjb3JyZWN0IG9yZGVyLFxuICAvLyBzbyB3ZSBkZWZlciBzb21lIG9mIHRoZSB1cGRhdGVzIHRvIGFwcGVhciBhdCB0aGUgZW5kIG9mIHRoZSBiYXRjaC5cbiAgY29uc3QgZGVmZXJyZWRBbmltYXRpb25zOiBMYXlvdXRBbmltYXRpb25CYXRjaEl0ZW1bXSA9IFtdO1xuXG4gIHJldHVybiB7XG4gICAgdXBkYXRlKGJhdGNoSXRlbTogTGF5b3V0QW5pbWF0aW9uQmF0Y2hJdGVtLCBpc1VubW91bnRpbmc/OiBib29sZWFuKSB7XG4gICAgICBpZiAoaXNVbm1vdW50aW5nKSB7XG4gICAgICAgIGRlZmVycmVkQW5pbWF0aW9ucy5wdXNoKGJhdGNoSXRlbSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhbmltYXRpb25zLnB1c2goYmF0Y2hJdGVtKTtcbiAgICAgIH1cbiAgICAgIGlmIChhbmltYXRpb25zLmxlbmd0aCArIGRlZmVycmVkQW5pbWF0aW9ucy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgaXNGYWJyaWMoKSA/IHRoaXMuZmx1c2goKSA6IHNldEltbWVkaWF0ZSh0aGlzLmZsdXNoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGZsdXNoKHRoaXM6IHZvaWQpIHtcbiAgICAgIGNvbmZpZ3VyZUxheW91dEFuaW1hdGlvbkJhdGNoKGFuaW1hdGlvbnMuY29uY2F0KGRlZmVycmVkQW5pbWF0aW9ucykpO1xuICAgICAgYW5pbWF0aW9ucy5sZW5ndGggPSAwO1xuICAgICAgZGVmZXJyZWRBbmltYXRpb25zLmxlbmd0aCA9IDA7XG4gICAgfSxcbiAgfTtcbn1cblxuLyoqXG4gKiBMZXRzIHlvdSB1cGRhdGUgdGhlIGN1cnJlbnQgY29uZmlndXJhdGlvbiBvZiB0aGUgbGF5b3V0IGFuaW1hdGlvbiBvciBzaGFyZWRcbiAqIGVsZW1lbnQgdHJhbnNpdGlvbiBmb3IgYSBnaXZlbiBjb21wb25lbnQuIENvbmZpZ3VyYXRpb25zIGFyZSBiYXRjaGVkIGFuZFxuICogYXBwbGllZCBhdCB0aGUgZW5kIG9mIHRoZSBjdXJyZW50IGV4ZWN1dGlvbiBibG9jaywgcmlnaHQgYmVmb3JlIHNlbmRpbmcgdGhlXG4gKiByZXNwb25zZSBiYWNrIHRvIG5hdGl2ZS5cbiAqXG4gKiBAcGFyYW0gdmlld1RhZyAtIFRoZSB0YWcgb2YgdGhlIGNvbXBvbmVudCB5b3UnZCBsaWtlIHRvIGNvbmZpZ3VyZS5cbiAqIEBwYXJhbSB0eXBlIC0gVGhlIHR5cGUgb2YgdGhlIGFuaW1hdGlvbiB5b3UnZCBsaWtlIHRvIGNvbmZpZ3VyZSAtXG4gKiAgIHtAbGluayBMYXlvdXRBbmltYXRpb25UeXBlfS5cbiAqIEBwYXJhbSBjb25maWcgLSBUaGUgYW5pbWF0aW9uIGNvbmZpZ3VyYXRpb24gLSB7QGxpbmsgTGF5b3V0QW5pbWF0aW9uRnVuY3Rpb259LFxuICogICB7QGxpbmsgU2hhcmVkVHJhbnNpdGlvbkFuaW1hdGlvbnNGdW5jdGlvbn0sIHtAbGluayBQcm9ncmVzc0FuaW1hdGlvbkNhbGxiYWNrfVxuICogICBvciB7QGxpbmsgS2V5ZnJhbWV9LiBQYXNzaW5nIGB1bmRlZmluZWRgIHdpbGwgcmVtb3ZlIHRoZSBhbmltYXRpb24uXG4gKiBAcGFyYW0gc2hhcmVkVHJhbnNpdGlvblRhZyAtIFRoZSB0YWcgb2YgdGhlIHNoYXJlZCBlbGVtZW50IHRyYW5zaXRpb24geW91J2RcbiAqICAgbGlrZSB0byBjb25maWd1cmUuIFBhc3NpbmcgYHVuZGVmaW5lZGAgd2lsbCByZW1vdmUgdGhlIHRyYW5zaXRpb24uXG4gKiBAcGFyYW0gaXNVbm1vdW50aW5nIC0gRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBjb25maWd1cmF0aW9uIHNob3VsZCBiZSBpbmNsdWRlZFxuICogICBhdCB0aGUgZW5kIG9mIHRoZSBiYXRjaCwgYWZ0ZXIgYWxsIHRoZSBub24tZGVmZXJyZWQgY29uZmlndXJhdGlvbnMgKGV2ZW5cbiAqICAgdGhvc2UgdGhhdCB3ZXJlIHVwZGF0ZWQgbGF0ZXIpLiBUaGlzIGlzIHVzZWQgdG8gcmV0YWluIHRoZSBjb3JyZWN0IG9yZGVyaW5nXG4gKiAgIG9mIHNoYXJlZCBlbGVtZW50cy4gRGVmYXVsdHMgdG8gYGZhbHNlYC5cbiAqL1xuZXhwb3J0IGxldCB1cGRhdGVMYXlvdXRBbmltYXRpb25zOiAoXG4gIHZpZXdUYWc6IG51bWJlcixcbiAgdHlwZTogTGF5b3V0QW5pbWF0aW9uVHlwZSxcbiAgY29uZmlnPzpcbiAgICB8IEtleWZyYW1lXG4gICAgfCBMYXlvdXRBbmltYXRpb25GdW5jdGlvblxuICAgIHwgU2hhcmVkVHJhbnNpdGlvbkFuaW1hdGlvbnNGdW5jdGlvblxuICAgIHwgUHJvZ3Jlc3NBbmltYXRpb25DYWxsYmFjayxcbiAgc2hhcmVkVHJhbnNpdGlvblRhZz86IHN0cmluZyxcbiAgaXNVbm1vdW50aW5nPzogYm9vbGVhblxuKSA9PiB2b2lkO1xuXG5pZiAoc2hvdWxkQmVVc2VXZWIoKSkge1xuICB1cGRhdGVMYXlvdXRBbmltYXRpb25zID0gKCkgPT4ge1xuICAgIC8vIG5vLW9wXG4gIH07XG59IGVsc2Uge1xuICBjb25zdCB1cGRhdGVMYXlvdXRBbmltYXRpb25zTWFuYWdlciA9IGNyZWF0ZVVwZGF0ZU1hbmFnZXIoKTtcbiAgdXBkYXRlTGF5b3V0QW5pbWF0aW9ucyA9IChcbiAgICB2aWV3VGFnLFxuICAgIHR5cGUsXG4gICAgY29uZmlnLFxuICAgIHNoYXJlZFRyYW5zaXRpb25UYWcsXG4gICAgaXNVbm1vdW50aW5nXG4gICkgPT5cbiAgICB1cGRhdGVMYXlvdXRBbmltYXRpb25zTWFuYWdlci51cGRhdGUoXG4gICAgICB7XG4gICAgICAgIHZpZXdUYWcsXG4gICAgICAgIHR5cGUsXG4gICAgICAgIGNvbmZpZzogY29uZmlnID8gbWFrZVNoYXJlYWJsZUNsb25lUmVjdXJzaXZlKGNvbmZpZykgOiB1bmRlZmluZWQsXG4gICAgICAgIHNoYXJlZFRyYW5zaXRpb25UYWcsXG4gICAgICB9LFxuICAgICAgaXNVbm1vdW50aW5nXG4gICAgKTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFBQ0EsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsS0FBQTtBQUFBO0FBQUFELE9BQUEsQ0FBQUUsc0JBQUE7QUFDYixJQUFBQyxnQkFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsS0FBQSxHQUFBRCxPQUFBO0FBY0EsU0FBU0UsbUJBQW1CQSxDQUFBLEVBQUc7RUFDN0IsSUFBTUMsVUFBc0MsR0FBRyxFQUFFO0VBSWpELElBQU1DLGtCQUE4QyxHQUFHLEVBQUU7RUFFekQsT0FBTztJQUNMQyxNQUFNLFdBQU5BLE1BQU1BLENBQUNDLFNBQW1DLEVBQUVDLFlBQXNCLEVBQUU7TUFDbEUsSUFBSUEsWUFBWSxFQUFFO1FBQ2hCSCxrQkFBa0IsQ0FBQ0ksSUFBSSxDQUFDRixTQUFTLENBQUM7TUFDcEMsQ0FBQyxNQUFNO1FBQ0xILFVBQVUsQ0FBQ0ssSUFBSSxDQUFDRixTQUFTLENBQUM7TUFDNUI7TUFDQSxJQUFJSCxVQUFVLENBQUNNLE1BQU0sR0FBR0wsa0JBQWtCLENBQUNLLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDdkQsSUFBQUMseUJBQVEsRUFBQyxDQUFDLEdBQUcsSUFBSSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxHQUFHQyxZQUFZLENBQUMsSUFBSSxDQUFDRCxLQUFLLENBQUM7TUFDdEQ7SUFDRixDQUFDO0lBQ0RBLEtBQUssV0FBTEEsS0FBS0EsQ0FBQSxFQUFhO01BQ2hCLElBQUFFLG1DQUE2QixFQUFDVixVQUFVLENBQUNXLE1BQU0sQ0FBQ1Ysa0JBQWtCLENBQUMsQ0FBQztNQUNwRUQsVUFBVSxDQUFDTSxNQUFNLEdBQUcsQ0FBQztNQUNyQkwsa0JBQWtCLENBQUNLLE1BQU0sR0FBRyxDQUFDO0lBQy9CO0VBQ0YsQ0FBQztBQUNIO0FBcUJPLElBQUlYLHNCQVVGO0FBRVQsSUFBSSxJQUFBaUIsK0JBQWMsRUFBQyxDQUFDLEVBQUU7RUFDcEJuQixPQUFBLENBQUFFLHNCQUFBLEdBQUFBLHNCQUFzQixHQUFHLFNBQXpCQSxzQkFBc0JBLENBQUEsRUFBUyxDQUUvQixDQUFDO0FBQ0gsQ0FBQyxNQUFNO0VBQ0wsSUFBTWtCLDZCQUE2QixHQUFHZCxtQkFBbUIsQ0FBQyxDQUFDO0VBQzNETixPQUFBLENBQUFFLHNCQUFBLEdBQUFBLHNCQUFzQixHQUFHLFNBQXpCQSxzQkFBc0JBLENBQ3BCbUIsT0FBTyxFQUNQQyxJQUFJLEVBQ0pDLE1BQU0sRUFDTkMsbUJBQW1CLEVBQ25CYixZQUFZO0lBQUEsT0FFWlMsNkJBQTZCLENBQUNYLE1BQU0sQ0FDbEM7TUFDRVksT0FBTyxFQUFQQSxPQUFPO01BQ1BDLElBQUksRUFBSkEsSUFBSTtNQUNKQyxNQUFNLEVBQUVBLE1BQU0sR0FBRyxJQUFBRSxpQ0FBMkIsRUFBQ0YsTUFBTSxDQUFDLEdBQUdHLFNBQVM7TUFDaEVGLG1CQUFtQixFQUFuQkE7SUFDRixDQUFDLEVBQ0RiLFlBQ0YsQ0FBQztFQUFBO0FBQ0wiLCJpZ25vcmVMaXN0IjpbXX0=