{"version":3,"names":["_getJestObj","mock","__esModule","default","jest","fn","Object","assign","requireActual","useNavigation","goBack","router","push","_interopRequireDefault","require","_react","_reactNative","_grammar","_jsxRuntime","_require","mockUseGrammar","describe","mockRoute","params","level","beforeEach","clearAllMocks","it","mockReturnValue","loaded","grammarData","render","jsx","route","expect","screen","getByTestId","toBeTruthy","title","exercises","type","question","ruleIndex","exerciseIndex","currentRule","content","currentExercise","options","answer","completedExercises","showDetailedProgress","canCheckAnswer","isFirstExercise","isLastExercise","showFeedback","attempts","getByText","changeRule","fireEvent","press","toHaveBeenCalledWith","submitAnswer","toHaveBeenCalled"],"sources":["GrammarExercise.test.js"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, screen } from '@testing-library/react-native';\nimport GrammarExercise from '../../../../src/screens/exercises/grammar';\n\n// Mock des dépendances\njest.mock('../../../../src/screens/exercises/grammar/hooks/useGrammar', () => ({\n  __esModule: true,\n  default: jest.fn(),\n}));\n\njest.mock('@react-navigation/native', () => ({\n  ...jest.requireActual('@react-navigation/native'),\n  useNavigation: () => ({\n    goBack: jest.fn(),\n  }),\n}));\n\njest.mock('expo-router', () => ({\n  router: {\n    push: jest.fn(),\n  },\n}));\n\nconst mockUseGrammar = require('../../../../src/screens/exercises/grammar/hooks/useGrammar').default;\n\ndescribe('GrammarExercise', () => {\n  const mockRoute = {\n    params: {\n      level: 'A1',\n    },\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('should render loading state initially', () => {\n    mockUseGrammar.mockReturnValue({\n      loaded: false,\n      grammarData: [],\n    });\n\n    render(<GrammarExercise route={mockRoute} />);\n    expect(screen.getByTestId('activity-indicator')).toBeTruthy();\n  });\n\n  it('should render the main components when loaded', () => {\n    mockUseGrammar.mockReturnValue({\n      loaded: true,\n      grammarData: [{ title: 'Le verbe \\'être\\' (to be)', exercises: [{ type: 'multiple-choice', question: 'I ___ a student.' }] }],\n      ruleIndex: 0,\n      exerciseIndex: 0,\n      currentRule: { title: 'Le verbe \\'être\\' (to be)', content: 'Content 1' },\n      currentExercise: { type: 'multiple-choice', question: 'I ___ a student.', options: ['am', 'is', 'are'], answer: 'am' },\n      completedExercises: {},\n      showDetailedProgress: false,\n      canCheckAnswer: true,\n      isFirstExercise: true,\n      isLastExercise: false,\n      showFeedback: false,\n      attempts: 0,\n    });\n\n    render(<GrammarExercise route={mockRoute} />);\n\n    expect(screen.getByText('Le verbe \\'être\\' (to be)')).toBeTruthy();\n    expect(screen.getByText('I ___ a student.')).toBeTruthy();\n  });\n\n  it('should call changeRule when a rule is selected', () => {\n    const changeRule = jest.fn();\n    mockUseGrammar.mockReturnValue({\n      loaded: true,\n      grammarData: [{ title: 'Le verbe \\'être\\' (to be)' }, { title: 'Le présent simple' }],\n      ruleIndex: 0,\n      completedExercises: {},\n      changeRule,\n      // ... autres états\n    });\n\n    render(<GrammarExercise route={mockRoute} />);\n    fireEvent.press(screen.getByText('Le présent simple'));\n    expect(changeRule).toHaveBeenCalledWith(1);\n  });\n\n  it('should call submitAnswer when check answer button is pressed', () => {\n    const submitAnswer = jest.fn();\n    mockUseGrammar.mockReturnValue({\n      loaded: true,\n      grammarData: [{ title: 'Le verbe \\'être\\' (to be)' }],\n      currentExercise: { type: 'multiple-choice', question: 'I ___ a student.', options: ['am', 'is', 'are'], answer: 'am' },\n      canCheckAnswer: true,\n      completedExercises: {},\n      submitAnswer,\n      // ... autres états\n    });\n\n    render(<GrammarExercise route={mockRoute} />);\n    fireEvent.press(screen.getByText('Check Answer'));\n    expect(submitAnswer).toHaveBeenCalled();\n  });\n});"],"mappings":"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","ignoreList":[]}