bf4889c2f7f243ea341a5b564e5da98d
function cov_ezagkaqod() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\health-wellbeing.js";
  var hash = "2d67da805fa5158c0c2291f347ab0084a9a856ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\health-wellbeing.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 24
        },
        end: {
          line: 220,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2d67da805fa5158c0c2291f347ab0084a9a856ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_ezagkaqod = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ezagkaqod();
var healthWellbeing = (cov_ezagkaqod().s[0]++, [{
  categoryId: 15,
  english: "How are you feeling today?",
  translation: "Comment te sens-tu aujourd'hui ?",
  context: "Demander l'état de santé général de quelqu'un",
  examples: [{
    english: "You look a bit tired. How are you feeling today?",
    translation: "Tu as l'air un peu fatigué(e). Comment te sens-tu aujourd'hui ?"
  }]
}, {
  categoryId: 15,
  english: "I don't feel very well.",
  translation: "Je ne me sens pas très bien.",
  context: "Exprimer un malaise général",
  examples: [{
    english: "I don't feel very well. I think I might be getting a cold.",
    translation: "Je ne me sens pas très bien. Je pense que je suis peut-être en train d'attraper un rhume."
  }]
}, {
  categoryId: 15,
  english: "I have a headache.",
  translation: "J'ai mal à la tête.",
  context: "Décrire une douleur à la tête",
  examples: [{
    english: "I can't concentrate. I have a headache since this morning.",
    translation: "Je n'arrive pas à me concentrer. J'ai mal à la tête depuis ce matin."
  }]
}, {
  categoryId: 15,
  english: "I have a sore throat.",
  translation: "J'ai mal à la gorge.",
  context: "Décrire une douleur à la gorge",
  examples: [{
    english: "I have a sore throat and it hurts when I swallow.",
    translation: "J'ai mal à la gorge et ça fait mal quand j'avale."
  }]
}, {
  categoryId: 15,
  english: "I have a cough.",
  translation: "J'ai de la toux.",
  context: "Mentionner qu'on tousse",
  examples: [{
    english: "I can't sleep well because I have a cough all night.",
    translation: "Je ne dors pas bien car j'ai de la toux toute la nuit."
  }]
}, {
  categoryId: 15,
  english: "I have a fever.",
  translation: "J'ai de la fièvre.",
  context: "Indiquer qu'on a de la température",
  examples: [{
    english: "I think I have a fever. My forehead feels hot.",
    translation: "Je pense que j'ai de la fièvre. Mon front est chaud."
  }]
}, {
  categoryId: 15,
  english: "Do you have any allergies?",
  translation: "As-tu des allergies ?",
  context: "Demander si quelqu'un souffre d'allergies",
  examples: [{
    english: "I'm preparing dinner. Do you have any allergies I should know about?",
    translation: "Je prépare le dîner. As-tu des allergies que je devrais connaître ?"
  }]
}, {
  categoryId: 15,
  english: "I'm allergic to peanuts.",
  translation: "Je suis allergique aux arachides.",
  context: "Mentionner une allergie alimentaire",
  examples: [{
    english: "I'm allergic to peanuts, so I need to be careful with Asian food.",
    translation: "Je suis allergique aux arachides, donc je dois faire attention avec la cuisine asiatique."
  }]
}, {
  categoryId: 15,
  english: "You should see a doctor.",
  translation: "Tu devrais voir un médecin.",
  context: "Conseiller quelqu'un de consulter un médecin",
  examples: [{
    english: "If the pain continues, you should see a doctor as soon as possible.",
    translation: "Si la douleur persiste, tu devrais voir un médecin dès que possible."
  }]
}, {
  categoryId: 15,
  english: "I need to make an appointment with the doctor.",
  translation: "J'ai besoin de prendre rendez-vous avec le médecin.",
  context: "Exprimer le besoin de consulter un médecin",
  examples: [{
    english: "My cough isn't getting better. I need to make an appointment with the doctor.",
    translation: "Ma toux ne s'améliore pas. J'ai besoin de prendre rendez-vous avec le médecin."
  }]
}, {
  categoryId: 15,
  english: "I need a prescription.",
  translation: "J'ai besoin d'une ordonnance.",
  context: "Indiquer qu'on a besoin d'une prescription médicale",
  examples: [{
    english: "I ran out of my medication. I need a prescription to get more.",
    translation: "Je n'ai plus de médicaments. J'ai besoin d'une ordonnance pour en avoir d'autres."
  }]
}, {
  categoryId: 15,
  english: "Take this medicine twice a day.",
  translation: "Prenez ce médicament deux fois par jour.",
  context: "Instructions pour la prise de médicaments",
  examples: [{
    english: "Take this medicine twice a day, after meals.",
    translation: "Prenez ce médicament deux fois par jour, après les repas."
  }]
}, {
  categoryId: 15,
  english: "Do you exercise regularly?",
  translation: "Fais-tu de l'exercice régulièrement ?",
  context: "Demander les habitudes sportives",
  examples: [{
    english: "Do you exercise regularly, or are you more of a couch potato?",
    translation: "Fais-tu de l'exercice régulièrement, ou es-tu plutôt casanier ?"
  }]
}, {
  categoryId: 15,
  english: "I try to go to the gym twice a week.",
  translation: "J'essaie d'aller à la salle de sport deux fois par semaine.",
  context: "Décrire une routine d'exercice modérée",
  examples: [{
    english: "I try to go to the gym twice a week, usually on Tuesdays and Thursdays.",
    translation: "J'essaie d'aller à la salle de sport deux fois par semaine, généralement les mardis et jeudis."
  }]
}, {
  categoryId: 15,
  english: "I'm trying to eat healthier.",
  translation: "J'essaie de manger plus sainement.",
  context: "Parler d'efforts pour améliorer son alimentation",
  examples: [{
    english: "I'm trying to eat healthier, so I'm eating more vegetables and less sugar.",
    translation: "J'essaie de manger plus sainement, donc je mange plus de légumes et moins de sucre."
  }]
}, {
  categoryId: 15,
  english: "I need to get more sleep.",
  translation: "J'ai besoin de dormir davantage.",
  context: "Exprimer un besoin de plus de sommeil",
  examples: [{
    english: "I'm always tired. I think I need to get more sleep.",
    translation: "Je suis toujours fatigué(e). Je pense que j'ai besoin de dormir davantage."
  }]
}, {
  categoryId: 15,
  english: "I'm feeling stressed.",
  translation: "Je me sens stressé(e).",
  context: "Exprimer un sentiment de stress",
  examples: [{
    english: "I'm feeling stressed because of my exams next week.",
    translation: "Je me sens stressé(e) à cause de mes examens la semaine prochaine."
  }]
}, {
  categoryId: 15,
  english: "I'm trying to reduce my stress.",
  translation: "J'essaie de réduire mon stress.",
  context: "Parler d'efforts pour gérer le stress",
  examples: [{
    english: "I'm trying to reduce my stress by practicing yoga and meditation.",
    translation: "J'essaie de réduire mon stress en pratiquant le yoga et la méditation."
  }]
}]);
export default healthWellbeing;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,