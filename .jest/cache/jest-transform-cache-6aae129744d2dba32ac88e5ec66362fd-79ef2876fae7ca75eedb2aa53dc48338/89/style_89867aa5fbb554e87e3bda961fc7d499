4a7cfdef6ea24d014769d95c76f7eae4
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBackgroundGradient = exports.default = void 0;
var _reactNative = require("react-native");
var getBackgroundGradient = exports.getBackgroundGradient = function getBackgroundGradient(primaryColor, backgroundColor) {
  return {
    colors: [`${primaryColor}10`, backgroundColor],
    locations: [0, 0.3]
  };
};
var _default = exports.default = _reactNative.StyleSheet.create({
  headerContainer: {},
  headerGradient: {
    paddingBottom: 20
  },
  headerTitle: {},
  bonusText: {
    color: "rgba(255, 255, 255, 0.88)",
    fontSize: 12,
    textAlign: "center",
    fontWeight: "400"
  },
  scrollContent: {
    paddingTop: 20
  },
  introSection: {
    paddingHorizontal: 20,
    paddingVertical: 16
  },
  introText: {
    fontSize: 16,
    fontWeight: "500",
    textAlign: "center"
  },
  levelsContainer: {
    paddingHorizontal: 20
  },
  levelCard: Object.assign({
    backgroundColor: 'white',
    borderRadius: 16,
    marginBottom: 16
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: "#000",
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.1,
      shadowRadius: 4
    },
    android: {
      elevation: 2
    }
  })),
  cardContentStyle: {
    padding: 20
  },
  cardHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 12
  },
  levelTitleContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1
  },
  levelMainTitle: {
    fontSize: 18,
    fontWeight: '600',
    marginRight: 12
  },
  levelBadge: {
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 12
  },
  levelBadgeText: {
    color: 'white',
    fontSize: 12,
    fontWeight: '600'
  },
  fastBadge: {
    backgroundColor: "#FED7AA",
    marginLeft: 6
  },
  fastBadgeText: {
    color: "#F59E0B"
  },
  levelIcon: {
    fontSize: 24
  },
  progressContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 16,
    gap: 12
  },
  progressBar: {
    flex: 1,
    height: 6,
    backgroundColor: '#F3F4F6',
    borderRadius: 3,
    overflow: 'hidden'
  },
  progressFill: {
    height: 6,
    borderRadius: 3
  },
  progressText: {
    fontSize: 12,
    fontWeight: '500',
    minWidth: 30
  },
  startButton: {
    marginTop: 4
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,