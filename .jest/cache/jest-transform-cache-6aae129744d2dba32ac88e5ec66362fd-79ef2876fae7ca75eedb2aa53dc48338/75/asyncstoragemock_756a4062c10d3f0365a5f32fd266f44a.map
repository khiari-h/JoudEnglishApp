{"version":3,"names":["merge","require","bind","concatArrays","ignoreUndefined","asMock","__INTERNAL_MOCK_STORAGE__","setItem","jest","fn","_ref","_asyncToGenerator2","default","key","value","callback","setResult","multiSet","undefined","_x","_x2","_x3","apply","arguments","getItem","_ref2","getResult","multiGet","result","_x4","_x5","removeItem","multiRemove","mergeItem","multiMerge","clear","_clear","getAllKeys","_getAllKeys","flushGetRequests","_multiGet","_multiSet","_multiRemove","_multiMerge","useAsyncStorage","_len","length","args","Array","_key","concat","_len2","_key2","_len3","_key3","_len4","_key4","_x6","_x7","_multiSet2","keyValuePairs","forEach","keyValue","_x8","_x9","_multiGet2","keys","values","map","_x0","_x1","_multiRemove2","_x10","_clear2","_getAllKeys2","Object","_x11","_x12","_multiMerge2","_keyValue","_slicedToArray2","oldValue","JSON","stringify","parse","module","exports"],"sources":["async-storage-mock.js"],"sourcesContent":["/* eslint-disable no-undef */\n\nconst merge = require(\"merge-options\").bind({\n  concatArrays: true,\n  ignoreUndefined: true,\n});\n\nconst asMock = {\n  __INTERNAL_MOCK_STORAGE__: {},\n\n  setItem: jest.fn(async (key, value, callback) => {\n    const setResult = await asMock.multiSet([[key, value]], undefined);\n\n    callback && callback(setResult);\n    return setResult;\n  }),\n\n  getItem: jest.fn(async (key, callback) => {\n    const getResult = await asMock.multiGet([key], undefined);\n\n    const result = getResult[0] ? getResult[0][1] : null;\n\n    callback && callback(null, result);\n    return result;\n  }),\n\n  removeItem: jest.fn((key, callback) => asMock.multiRemove([key], callback)),\n  mergeItem: jest.fn((key, value, callback) =>\n    asMock.multiMerge([[key, value]], callback)\n  ),\n\n  clear: jest.fn(_clear),\n  getAllKeys: jest.fn(_getAllKeys),\n  flushGetRequests: jest.fn(),\n\n  multiGet: jest.fn(_multiGet),\n  multiSet: jest.fn(_multiSet),\n  multiRemove: jest.fn(_multiRemove),\n  multiMerge: jest.fn(_multiMerge),\n  useAsyncStorage: jest.fn((key) => {\n    return {\n      getItem: (...args) => asMock.getItem(key, ...args),\n      setItem: (...args) => asMock.setItem(key, ...args),\n      mergeItem: (...args) => asMock.mergeItem(key, ...args),\n      removeItem: (...args) => asMock.removeItem(key, ...args),\n    };\n  }),\n};\n\nasync function _multiSet(keyValuePairs, callback) {\n  keyValuePairs.forEach((keyValue) => {\n    const key = keyValue[0];\n\n    asMock.__INTERNAL_MOCK_STORAGE__[key] = keyValue[1];\n  });\n  callback && callback(null);\n  return null;\n}\n\nasync function _multiGet(keys, callback) {\n  const values = keys.map((key) => [\n    key,\n    asMock.__INTERNAL_MOCK_STORAGE__[key] || null,\n  ]);\n  callback && callback(null, values);\n\n  return values;\n}\n\nasync function _multiRemove(keys, callback) {\n  keys.forEach((key) => {\n    if (asMock.__INTERNAL_MOCK_STORAGE__[key]) {\n      delete asMock.__INTERNAL_MOCK_STORAGE__[key];\n    }\n  });\n\n  callback && callback(null);\n  return null;\n}\n\nasync function _clear(callback) {\n  asMock.__INTERNAL_MOCK_STORAGE__ = {};\n\n  callback && callback(null);\n\n  return null;\n}\n\nasync function _getAllKeys() {\n  return Object.keys(asMock.__INTERNAL_MOCK_STORAGE__);\n}\n\nasync function _multiMerge(keyValuePairs, callback) {\n  keyValuePairs.forEach((keyValue) => {\n    const [key, value] = keyValue;\n    const oldValue = asMock.__INTERNAL_MOCK_STORAGE__[key];\n    asMock.__INTERNAL_MOCK_STORAGE__[key] =\n      oldValue != null\n        ? JSON.stringify(merge(JSON.parse(oldValue), JSON.parse(value)))\n        : value;\n  });\n\n  callback && callback(null);\n  return null;\n}\n\nmodule.exports = asMock;\n"],"mappings":"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","ignoreList":[]}