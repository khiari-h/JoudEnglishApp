{"version":3,"names":["_react","require","_reactNative","_ThemeContext","_useActivityMetrics2","_interopRequireDefault","_useDailyWords2","_style","_jsxRuntime","SimpleMetrics","_ref","_ref$accentColor","accentColor","_ref$refreshKey","refreshKey","themeContext","useContext","ThemeContext","colors","surface","text","textSecondary","_useState","useState","_useState2","_slicedToArray2","default","localRefresh","setLocalRefresh","_useActivityMetrics","useActivityMetrics","currentStreak","streakTrend","formattedTime","refreshMetrics","refresh","_useDailyWords","useDailyWords","wordsToday","wordsLoading","isLoading","refreshWords","useEffect","prev","jsx","View","style","styles","container","children","jsxs","loadingContainer","ActivityIndicator","size","color","Text","loadingText","metrics","id","icon","value","toString","label","trend","hasActivity","emptyState","emptyIcon","emptyTitle","emptySubtitle","sectionTitle","metricsGrid","map","metric","MetricCard","_ref2","getTrendStyle","isPositive","includes","isNegative","backgroundColor","trendStyle","metricCard","trendIndicator","trendText","metricIcon","metricValue","metricLabel","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/screens/Dashboard/components/SimpleMetrics/index.js - AVEC RAFRA√éCHISSEMENT\r\n\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { View, Text, ActivityIndicator } from \"react-native\";\r\nimport { ThemeContext } from \"../../../../contexts/ThemeContext\";\r\nimport useActivityMetrics from \"../../../../hooks/useActivityMetrics\";\r\nimport useDailyWords from \"../../../../hooks/useDailyWords\";\r\nimport styles from \"./style\";\r\n\r\n/**\r\n * üìä SimpleMetrics - AVEC SYST√àME DE RAFRA√éCHISSEMENT\r\n */\r\nconst SimpleMetrics = ({ \r\n  accentColor = \"#3B82F6\", \r\n  refreshKey = 0 // üî• NOUVELLE PROP pour forcer le rafra√Æchissement\r\n}) => {\r\n  const themeContext = useContext(ThemeContext);\r\n  const colors = themeContext?.colors || {\r\n    surface: \"#FFFFFF\",\r\n    text: \"#1F2937\",\r\n    textSecondary: \"#6B7280\",\r\n  };\r\n\r\n  // =================== √âTAT LOCAL POUR FORCER LE REFRESH ===================\r\n  const [localRefresh, setLocalRefresh] = useState(0);\r\n\r\n  // =================== HOOKS AVEC REFRESH ===================\r\n  const { \r\n    currentStreak, \r\n    streakTrend, \r\n    formattedTime,\r\n    refresh: refreshMetrics // üî• Si ton hook a une fonction refresh\r\n  } = useActivityMetrics(localRefresh); // Passe le trigger local\r\n\r\n  const { \r\n    wordsToday,\r\n    isLoading: wordsLoading,\r\n    refresh: refreshWords // üî• Si ton hook a une fonction refresh\r\n  } = useDailyWords(localRefresh); // Passe le trigger local\r\n\r\n  // =================== √âCOUTE DU REFRESH DU PARENT ===================\r\n  useEffect(() => {\r\n    if (refreshKey > 0) {\r\n      // Force le rechargement des donn√©es\r\n      setLocalRefresh(prev => prev + 1);\r\n      \r\n      // Si les hooks ont des fonctions refresh, les appeler\r\n      if (refreshMetrics) refreshMetrics();\r\n      if (refreshWords) refreshWords();\r\n    }\r\n  }, [refreshKey, refreshMetrics, refreshWords]);\r\n\r\n  // =================== LOADING STATE ===================\r\n  if (wordsLoading) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"small\" color={accentColor} />\r\n          <Text style={[styles.loadingText, { color: colors.textSecondary }]}>\r\n            Chargement des m√©triques...\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // =================== DONN√âES DES M√âTRIQUES ===================\r\n  const metrics = [\r\n    {\r\n      id: 'streak',\r\n      icon: 'üî•',\r\n      value: (currentStreak || 0).toString(),\r\n      label: 'Jours de suite',\r\n      trend: streakTrend,\r\n    },\r\n    {\r\n      id: 'words',\r\n      icon: 'üìö',\r\n      value: (wordsToday || 0).toString(),\r\n      label: 'Mots aujourd\\'hui',\r\n      trend: null,\r\n    },\r\n    {\r\n      id: 'time',\r\n      icon: '‚è±Ô∏è',\r\n      value: formattedTime || '0min',\r\n      label: 'Temps aujourd\\'hui',\r\n      trend: null,\r\n    }\r\n  ];\r\n\r\n  // Masquer si toutes les m√©triques sont √† 0\r\n  const hasActivity = currentStreak > 0 || wordsToday > 0 || (formattedTime && formattedTime !== '0min');\r\n  \r\n  if (!hasActivity) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.emptyState}>\r\n          <Text style={styles.emptyIcon}>üéØ</Text>\r\n          <Text style={[styles.emptyTitle, { color: colors.text }]}>\r\n            Commencez votre premi√®re session !\r\n          </Text>\r\n          <Text style={[styles.emptySubtitle, { color: colors.textSecondary }]}>\r\n            Vos statistiques appara√Ætront ici\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // =================== RENDER PRINCIPAL ===================\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>üìä Aujourd&apos;hui</Text>\r\n      \r\n      <View style={styles.metricsGrid}>\r\n        {metrics.map((metric) => (\r\n          <MetricCard\r\n            key={metric.id}\r\n            metric={metric}\r\n            colors={colors}\r\n            accentColor={accentColor}\r\n          />\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n * üìà Carte m√©trique individuelle\r\n */\r\nconst MetricCard = ({ metric, colors }) => {\r\n  const getTrendStyle = (trend) => {\r\n    if (!trend) return null;\r\n    \r\n    const isPositive = trend.includes('+') || trend.includes('üèÜ') || trend.includes('üí™') || trend.includes('üî•');\r\n    const isNegative = trend.includes('-');\r\n    \r\n    if (isPositive) {\r\n      return {\r\n        backgroundColor: '#DCFCE7',\r\n        color: '#16A34A'\r\n      };\r\n    }\r\n    \r\n    if (isNegative) {\r\n      return {\r\n        backgroundColor: '#FEF2F2', \r\n        color: '#DC2626'\r\n      };\r\n    }\r\n    \r\n    return {\r\n      backgroundColor: '#F1F5F9',\r\n      color: '#64748B'\r\n    };\r\n  };\r\n\r\n  const trendStyle = getTrendStyle(metric.trend);\r\n\r\n  return (\r\n    <View style={[styles.metricCard, { backgroundColor: colors.surface }]}>\r\n      {/* Trend indicator */}\r\n      {metric.trend && trendStyle && (\r\n        <View style={[styles.trendIndicator, { backgroundColor: trendStyle.backgroundColor }]}>\r\n          <Text style={[styles.trendText, { color: trendStyle.color }]}>\r\n            {metric.trend}\r\n          </Text>\r\n        </View>\r\n      )}\r\n      \r\n      {/* Icon */}\r\n      <Text style={styles.metricIcon}>{metric.icon}</Text>\r\n      \r\n      {/* Value */}\r\n      <Text style={[styles.metricValue, { color: colors.text }]}>\r\n        {metric.value}\r\n      </Text>\r\n      \r\n      {/* Label */}\r\n      <Text style={[styles.metricLabel, { color: colors.textSecondary }]}>\r\n        {metric.label}\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SimpleMetrics;"],"mappings":"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","ignoreList":[]}