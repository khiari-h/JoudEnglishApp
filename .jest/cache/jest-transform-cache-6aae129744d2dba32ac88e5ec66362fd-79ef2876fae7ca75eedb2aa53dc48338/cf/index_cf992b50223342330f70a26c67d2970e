694b3980948c1a7575e063c555b62b5c
function cov_wi2u48i7l() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesDetailsModal\\index.js";
  var hash = "c4e17e672271bf2d8f8e3b65a6b9d854da2ef513";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\phrases\\PhrasesDetailsModal\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 103,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 27
        }
      },
      "2": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 27
        }
      },
      "3": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 82,
          column: 3
        }
      },
      "4": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "5": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "6": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 102,
          column: 4
        }
      },
      "7": {
        start: {
          line: 108,
          column: 0
        },
        end: {
          line: 122,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 15,
            column: 29
          }
        },
        loc: {
          start: {
            line: 20,
            column: 6
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 81,
            column: 11
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 31
          },
          end: {
            line: 59,
            column: 32
          }
        },
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 67,
            column: 19
          }
        },
        line: 60
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 7
          },
          end: {
            line: 51,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 7
          },
          end: {
            line: 44,
            column: 21
          }
        }, {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 50,
            column: 15
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 7
          },
          end: {
            line: 70,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 7
          },
          end: {
            line: 54,
            column: 22
          }
        }, {
          start: {
            line: 54,
            column: 26
          },
          end: {
            line: 54,
            column: 52
          }
        }, {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 69,
            column: 15
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 73,
            column: 7
          },
          end: {
            line: 80,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 7
          },
          end: {
            line: 73,
            column: 19
          }
        }, {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 79,
            column: 15
          }
        }],
        line: 73
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c4e17e672271bf2d8f8e3b65a6b9d854da2ef513"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_wi2u48i7l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wi2u48i7l();
import { View, Text } from 'react-native';
import PropTypes from 'prop-types';
import Modal from '../../../../components/ui/Modal';
import styles from './style';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_wi2u48i7l().s[0]++;
var PhrasesDetailsModal = function PhrasesDetailsModal(_ref) {
  var phrase = _ref.phrase,
    isVisible = _ref.isVisible,
    onClose = _ref.onClose,
    levelColor = _ref.levelColor;
  cov_wi2u48i7l().f[0]++;
  cov_wi2u48i7l().s[1]++;
  if (!phrase) {
    cov_wi2u48i7l().b[0][0]++;
    cov_wi2u48i7l().s[2]++;
    return null;
  } else {
    cov_wi2u48i7l().b[0][1]++;
  }
  cov_wi2u48i7l().s[3]++;
  var renderContent = function renderContent() {
    cov_wi2u48i7l().f[1]++;
    cov_wi2u48i7l().s[4]++;
    return _jsxs(View, {
      style: styles.modalInnerContent,
      children: [_jsxs(View, {
        style: styles.detailSection,
        children: [_jsx(Text, {
          style: [styles.detailLabel, {
            color: levelColor
          }],
          children: "Phrase originale :"
        }), _jsx(Text, {
          style: styles.detailText,
          children: phrase.english
        })]
      }), _jsxs(View, {
        style: styles.detailSection,
        children: [_jsx(Text, {
          style: [styles.detailLabel, {
            color: levelColor
          }],
          children: "Traduction :"
        }), _jsx(Text, {
          style: styles.detailText,
          children: phrase.translation
        })]
      }), (cov_wi2u48i7l().b[1][0]++, phrase.context) && (cov_wi2u48i7l().b[1][1]++, _jsxs(View, {
        style: styles.detailSection,
        children: [_jsx(Text, {
          style: [styles.detailLabel, {
            color: levelColor
          }],
          children: "Contexte :"
        }), _jsx(Text, {
          style: styles.detailText,
          children: phrase.context
        })]
      })), (cov_wi2u48i7l().b[2][0]++, phrase.examples) && (cov_wi2u48i7l().b[2][1]++, phrase.examples.length > 0) && (cov_wi2u48i7l().b[2][2]++, _jsxs(View, {
        style: styles.detailSection,
        children: [_jsx(Text, {
          style: [styles.detailLabel, {
            color: levelColor
          }],
          children: "Exemples :"
        }), phrase.examples.map(function (example) {
          cov_wi2u48i7l().f[2]++;
          cov_wi2u48i7l().s[5]++;
          return _jsxs(View, {
            style: styles.exampleItem,
            children: [_jsx(Text, {
              style: styles.exampleText,
              children: example.english
            }), _jsx(Text, {
              style: styles.exampleTranslation,
              children: example.translation
            })]
          }, example.english);
        })]
      })), (cov_wi2u48i7l().b[3][0]++, phrase.notes) && (cov_wi2u48i7l().b[3][1]++, _jsxs(View, {
        style: styles.detailSection,
        children: [_jsx(Text, {
          style: [styles.detailLabel, {
            color: levelColor
          }],
          children: "Notes :"
        }), _jsx(Text, {
          style: styles.detailText,
          children: phrase.notes
        })]
      }))]
    });
  };
  cov_wi2u48i7l().s[6]++;
  return _jsx(Modal, {
    visible: isVisible,
    onClose: onClose,
    title: "D\xE9tails de la phrase",
    position: "center",
    animationType: "fade",
    scrollable: true,
    closeOnBackdropPress: true,
    showCloseButton: true,
    width: "90%",
    maxHeight: "80%",
    contentContainerStyle: styles.modalCustomContainer,
    headerStyle: {
      borderBottomColor: levelColor,
      borderBottomWidth: 2
    },
    bodyStyle: styles.modalCustomBody,
    children: renderContent()
  });
};
export default PhrasesDetailsModal;
cov_wi2u48i7l().s[7]++;
PhrasesDetailsModal.propTypes = {
  phrase: PropTypes.shape({
    english: PropTypes.string.isRequired,
    translation: PropTypes.string.isRequired,
    context: PropTypes.string,
    examples: PropTypes.arrayOf(PropTypes.shape({
      english: PropTypes.string.isRequired,
      translation: PropTypes.string.isRequired
    })),
    notes: PropTypes.string
  }).isRequired,
  isVisible: PropTypes.bool.isRequired,
  onClose: PropTypes.func.isRequired,
  levelColor: PropTypes.string.isRequired
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,