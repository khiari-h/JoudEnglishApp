{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_get2","_inherits2","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_AnimatedNode","_AnimatedWithChildren2","React","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","has","get","set","_t","hasOwnProperty","call","getOwnPropertyDescriptor","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","_superPropGet","p","MAX_DEPTH","isPlainObject","getPrototypeOf","isPrototypeOf","isValidElement","flatAnimatedNodes","nodes","arguments","length","undefined","depth","AnimatedNode","push","Array","isArray","ii","element","keys","key","mapAnimatedNodes","fn","map","result","_nodes","AnimatedObject","_AnimatedWithChildren","_this","writable","_value","__getValue","node","__getAnimatedValue","__attach","__addChild","__detach","__removeChild","__makeNative","platformConfig","__getNativeConfig","type","nodeTag","__getNativeTag","from","AnimatedWithChildren"],"sources":["AnimatedObject.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n * @oncall react_native\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport * as React from 'react';\n\nconst MAX_DEPTH = 5;\n\n/* $FlowIssue[incompatible-type-guard] - Flow does not know that the prototype\n   and ReactElement checks preserve the type refinement of `value`. */\nfunction isPlainObject(value: mixed): value is $ReadOnly<{[string]: mixed}> {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    Object.getPrototypeOf(value).isPrototypeOf(Object) &&\n    !React.isValidElement(value)\n  );\n}\n\nfunction flatAnimatedNodes(\n  value: mixed,\n  nodes: Array<AnimatedNode> = [],\n  depth: number = 0,\n): Array<AnimatedNode> {\n  if (depth >= MAX_DEPTH) {\n    return nodes;\n  }\n  if (value instanceof AnimatedNode) {\n    nodes.push(value);\n  } else if (Array.isArray(value)) {\n    for (let ii = 0, length = value.length; ii < length; ii++) {\n      const element = value[ii];\n      flatAnimatedNodes(element, nodes, depth + 1);\n    }\n  } else if (isPlainObject(value)) {\n    const keys = Object.keys(value);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      flatAnimatedNodes(value[key], nodes, depth + 1);\n    }\n  }\n  return nodes;\n}\n\n// Returns a copy of value with a transformation fn applied to any AnimatedNodes\nfunction mapAnimatedNodes(value: any, fn: any => any, depth: number = 0): any {\n  if (depth >= MAX_DEPTH) {\n    return value;\n  }\n\n  if (value instanceof AnimatedNode) {\n    return fn(value);\n  } else if (Array.isArray(value)) {\n    return value.map(element => mapAnimatedNodes(element, fn, depth + 1));\n  } else if (isPlainObject(value)) {\n    const result: {[string]: any} = {};\n    const keys = Object.keys(value);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      result[key] = mapAnimatedNodes(value[key], fn, depth + 1);\n    }\n    return result;\n  } else {\n    return value;\n  }\n}\n\nexport default class AnimatedObject extends AnimatedWithChildren {\n  #nodes: $ReadOnlyArray<AnimatedNode>;\n  _value: mixed;\n\n  /**\n   * Creates an `AnimatedObject` if `value` contains `AnimatedNode` instances.\n   * Otherwise, returns `null`.\n   */\n  static from(value: mixed): ?AnimatedObject {\n    const nodes = flatAnimatedNodes(value);\n    if (nodes.length === 0) {\n      return null;\n    }\n    return new AnimatedObject(nodes, value);\n  }\n\n  /**\n   * Should only be called by `AnimatedObject.from`.\n   */\n  constructor(nodes: $ReadOnlyArray<AnimatedNode>, value: mixed) {\n    super();\n    this.#nodes = nodes;\n    this._value = value;\n  }\n\n  __getValue(): any {\n    return mapAnimatedNodes(this._value, node => {\n      return node.__getValue();\n    });\n  }\n\n  __getAnimatedValue(): any {\n    return mapAnimatedNodes(this._value, node => {\n      return node.__getAnimatedValue();\n    });\n  }\n\n  __attach(): void {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__addChild(this);\n    }\n  }\n\n  __detach(): void {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__removeChild(this);\n    }\n    super.__detach();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig): void {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n    }\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig(): any {\n    return {\n      type: 'object',\n      value: mapAnimatedNodes(this._value, node => {\n        return {nodeTag: node.__getNativeTag()};\n      }),\n    };\n  }\n}\n"],"mappings":"AAWA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,OAAA;AAAA,IAAAC,gBAAA,GAAAP,sBAAA,CAAAC,OAAA;AAAA,IAAAO,aAAA,GAAAR,sBAAA,CAAAC,OAAA;AAAA,IAAAQ,2BAAA,GAAAT,sBAAA,CAAAC,OAAA;AAAA,IAAAS,gBAAA,GAAAV,sBAAA,CAAAC,OAAA;AAAA,IAAAU,KAAA,GAAAX,sBAAA,CAAAC,OAAA;AAAA,IAAAW,UAAA,GAAAZ,sBAAA,CAAAC,OAAA;AAAA,IAAAY,4BAAA,GAAAb,sBAAA,CAAAC,OAAA;AAAA,IAAAa,2BAAA,GAAAd,sBAAA,CAAAC,OAAA;AAIb,IAAAc,aAAA,GAAAf,sBAAA,CAAAC,OAAA;AACA,IAAAe,sBAAA,GAAAhB,sBAAA,CAAAC,OAAA;AACA,IAAAgB,KAAA,GAAAC,uBAAA,CAAAjB,OAAA;AAA+B,SAAAiB,wBAAAC,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAH,uBAAA,YAAAA,wBAAAC,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAtB,OAAA,EAAAa,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAI,GAAA,CAAAV,CAAA,UAAAM,CAAA,CAAAK,GAAA,CAAAX,CAAA,GAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,EAAAQ,CAAA,cAAAK,EAAA,IAAAb,CAAA,gBAAAa,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAa,EAAA,OAAAN,CAAA,IAAAD,CAAA,GAAAvB,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAiC,wBAAA,CAAAhB,CAAA,EAAAa,EAAA,OAAAN,CAAA,CAAAI,GAAA,IAAAJ,CAAA,CAAAK,GAAA,IAAAN,CAAA,CAAAE,CAAA,EAAAK,EAAA,EAAAN,CAAA,IAAAC,CAAA,CAAAK,EAAA,IAAAb,CAAA,CAAAa,EAAA,WAAAL,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAAA,SAAAgB,WAAAhB,CAAA,EAAAK,CAAA,EAAAN,CAAA,WAAAM,CAAA,OAAAf,gBAAA,CAAAJ,OAAA,EAAAmB,CAAA,OAAAhB,2BAAA,CAAAH,OAAA,EAAAc,CAAA,EAAAiB,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAd,CAAA,EAAAN,CAAA,YAAAT,gBAAA,CAAAJ,OAAA,EAAAc,CAAA,EAAAoB,WAAA,IAAAf,CAAA,CAAAgB,KAAA,CAAArB,CAAA,EAAAD,CAAA;AAAA,SAAAkB,0BAAA,cAAAjB,CAAA,IAAAsB,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAV,IAAA,CAAAI,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAtB,CAAA,aAAAiB,yBAAA,YAAAA,0BAAA,aAAAjB,CAAA;AAAA,SAAAyB,cAAAzB,CAAA,EAAAK,CAAA,EAAAN,CAAA,EAAAG,CAAA,QAAAwB,CAAA,OAAAnC,KAAA,CAAAL,OAAA,MAAAI,gBAAA,CAAAJ,OAAA,MAAAgB,CAAA,GAAAF,CAAA,CAAAuB,SAAA,GAAAvB,CAAA,GAAAK,CAAA,EAAAN,CAAA,cAAAG,CAAA,yBAAAwB,CAAA,aAAA1B,CAAA,WAAA0B,CAAA,CAAAL,KAAA,CAAAtB,CAAA,EAAAC,CAAA,OAAA0B,CAAA;AAE/B,IAAMC,SAAS,GAAG,CAAC;AAInB,SAASC,aAAaA,CAAC3C,KAAY,EAAyC;EAC1E,OACEA,KAAK,KAAK,IAAI,IACd,OAAOA,KAAK,KAAK,QAAQ,IACzBH,MAAM,CAAC+C,cAAc,CAAC5C,KAAK,CAAC,CAAC6C,aAAa,CAAChD,MAAM,CAAC,IAClD,CAACe,KAAK,CAACkC,cAAc,CAAC9C,KAAK,CAAC;AAEhC;AAEA,SAAS+C,iBAAiBA,CACxB/C,KAAY,EAGS;EAAA,IAFrBgD,KAA0B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAC/BG,KAAa,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAEjB,IAAIG,KAAK,IAAIV,SAAS,EAAE;IACtB,OAAOM,KAAK;EACd;EACA,IAAIhD,KAAK,YAAYqD,qBAAY,EAAE;IACjCL,KAAK,CAACM,IAAI,CAACtD,KAAK,CAAC;EACnB,CAAC,MAAM,IAAIuD,KAAK,CAACC,OAAO,CAACxD,KAAK,CAAC,EAAE;IAC/B,KAAK,IAAIyD,EAAE,GAAG,CAAC,EAAEP,MAAM,GAAGlD,KAAK,CAACkD,MAAM,EAAEO,EAAE,GAAGP,MAAM,EAAEO,EAAE,EAAE,EAAE;MACzD,IAAMC,OAAO,GAAG1D,KAAK,CAACyD,EAAE,CAAC;MACzBV,iBAAiB,CAACW,OAAO,EAAEV,KAAK,EAAEI,KAAK,GAAG,CAAC,CAAC;IAC9C;EACF,CAAC,MAAM,IAAIT,aAAa,CAAC3C,KAAK,CAAC,EAAE;IAC/B,IAAM2D,IAAI,GAAG9D,MAAM,CAAC8D,IAAI,CAAC3D,KAAK,CAAC;IAC/B,KAAK,IAAIyD,GAAE,GAAG,CAAC,EAAEP,OAAM,GAAGS,IAAI,CAACT,MAAM,EAAEO,GAAE,GAAGP,OAAM,EAAEO,GAAE,EAAE,EAAE;MACxD,IAAMG,GAAG,GAAGD,IAAI,CAACF,GAAE,CAAC;MACpBV,iBAAiB,CAAC/C,KAAK,CAAC4D,GAAG,CAAC,EAAEZ,KAAK,EAAEI,KAAK,GAAG,CAAC,CAAC;IACjD;EACF;EACA,OAAOJ,KAAK;AACd;AAGA,SAASa,gBAAgBA,CAAC7D,KAAU,EAAE8D,EAAc,EAA0B;EAAA,IAAxBV,KAAa,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACrE,IAAIG,KAAK,IAAIV,SAAS,EAAE;IACtB,OAAO1C,KAAK;EACd;EAEA,IAAIA,KAAK,YAAYqD,qBAAY,EAAE;IACjC,OAAOS,EAAE,CAAC9D,KAAK,CAAC;EAClB,CAAC,MAAM,IAAIuD,KAAK,CAACC,OAAO,CAACxD,KAAK,CAAC,EAAE;IAC/B,OAAOA,KAAK,CAAC+D,GAAG,CAAC,UAAAL,OAAO;MAAA,OAAIG,gBAAgB,CAACH,OAAO,EAAEI,EAAE,EAAEV,KAAK,GAAG,CAAC,CAAC;IAAA,EAAC;EACvE,CAAC,MAAM,IAAIT,aAAa,CAAC3C,KAAK,CAAC,EAAE;IAC/B,IAAMgE,MAAuB,GAAG,CAAC,CAAC;IAClC,IAAML,IAAI,GAAG9D,MAAM,CAAC8D,IAAI,CAAC3D,KAAK,CAAC;IAC/B,KAAK,IAAIyD,EAAE,GAAG,CAAC,EAAEP,MAAM,GAAGS,IAAI,CAACT,MAAM,EAAEO,EAAE,GAAGP,MAAM,EAAEO,EAAE,EAAE,EAAE;MACxD,IAAMG,GAAG,GAAGD,IAAI,CAACF,EAAE,CAAC;MACpBO,MAAM,CAACJ,GAAG,CAAC,GAAGC,gBAAgB,CAAC7D,KAAK,CAAC4D,GAAG,CAAC,EAAEE,EAAE,EAAEV,KAAK,GAAG,CAAC,CAAC;IAC3D;IACA,OAAOY,MAAM;EACf,CAAC,MAAM;IACL,OAAOhE,KAAK;EACd;AACF;AAAC,IAAAiE,MAAA,OAAAxD,2BAAA,CAAAR,OAAA;AAAA,IAEoBiE,cAAc,GAAAnE,OAAA,CAAAE,OAAA,aAAAkE,qBAAA;EAmBjC,SAAAD,eAAYlB,KAAmC,EAAEhD,KAAY,EAAE;IAAA,IAAAoE,KAAA;IAAA,IAAAlE,gBAAA,CAAAD,OAAA,QAAAiE,cAAA;IAC7DE,KAAA,GAAArC,UAAA,OAAAmC,cAAA;IAAQrE,MAAA,CAAAC,cAAA,CAAAsE,KAAA,EAAAH,MAAA;MAAAI,QAAA;MAAArE,KAAA;IAAA;IACR,IAAAQ,4BAAA,CAAAP,OAAA,EAAAmE,KAAA,EAAAH,MAAA,EAAAA,MAAA,IAAcjB,KAAK;IACnBoB,KAAA,CAAKE,MAAM,GAAGtE,KAAK;IAAC,OAAAoE,KAAA;EACtB;EAAC,IAAA7D,UAAA,CAAAN,OAAA,EAAAiE,cAAA,EAAAC,qBAAA;EAAA,WAAAhE,aAAA,CAAAF,OAAA,EAAAiE,cAAA;IAAAN,GAAA;IAAA5D,KAAA,EAED,SAAAuE,UAAUA,CAAA,EAAQ;MAChB,OAAOV,gBAAgB,CAAC,IAAI,CAACS,MAAM,EAAE,UAAAE,IAAI,EAAI;QAC3C,OAAOA,IAAI,CAACD,UAAU,CAAC,CAAC;MAC1B,CAAC,CAAC;IACJ;EAAC;IAAAX,GAAA;IAAA5D,KAAA,EAED,SAAAyE,kBAAkBA,CAAA,EAAQ;MACxB,OAAOZ,gBAAgB,CAAC,IAAI,CAACS,MAAM,EAAE,UAAAE,IAAI,EAAI;QAC3C,OAAOA,IAAI,CAACC,kBAAkB,CAAC,CAAC;MAClC,CAAC,CAAC;IACJ;EAAC;IAAAb,GAAA;IAAA5D,KAAA,EAED,SAAA0E,QAAQA,CAAA,EAAS;MACf,IAAM1B,KAAK,OAAAxC,4BAAA,CAAAP,OAAA,EAAG,IAAI,EAAAgE,MAAA,EAAAA,MAAA,CAAO;MACzB,KAAK,IAAIR,EAAE,GAAG,CAAC,EAAEP,MAAM,GAAGF,KAAK,CAACE,MAAM,EAAEO,EAAE,GAAGP,MAAM,EAAEO,EAAE,EAAE,EAAE;QACzD,IAAMe,IAAI,GAAGxB,KAAK,CAACS,EAAE,CAAC;QACtBe,IAAI,CAACG,UAAU,CAAC,IAAI,CAAC;MACvB;IACF;EAAC;IAAAf,GAAA;IAAA5D,KAAA,EAED,SAAA4E,QAAQA,CAAA,EAAS;MACf,IAAM5B,KAAK,OAAAxC,4BAAA,CAAAP,OAAA,EAAG,IAAI,EAAAgE,MAAA,EAAAA,MAAA,CAAO;MACzB,KAAK,IAAIR,EAAE,GAAG,CAAC,EAAEP,MAAM,GAAGF,KAAK,CAACE,MAAM,EAAEO,EAAE,GAAGP,MAAM,EAAEO,EAAE,EAAE,EAAE;QACzD,IAAMe,IAAI,GAAGxB,KAAK,CAACS,EAAE,CAAC;QACtBe,IAAI,CAACK,aAAa,CAAC,IAAI,CAAC;MAC1B;MACArC,aAAA,CAAA0B,cAAA;IACF;EAAC;IAAAN,GAAA;IAAA5D,KAAA,EAED,SAAA8E,YAAYA,CAACC,cAA+B,EAAQ;MAClD,IAAM/B,KAAK,OAAAxC,4BAAA,CAAAP,OAAA,EAAG,IAAI,EAAAgE,MAAA,EAAAA,MAAA,CAAO;MACzB,KAAK,IAAIR,EAAE,GAAG,CAAC,EAAEP,MAAM,GAAGF,KAAK,CAACE,MAAM,EAAEO,EAAE,GAAGP,MAAM,EAAEO,EAAE,EAAE,EAAE;QACzD,IAAMe,IAAI,GAAGxB,KAAK,CAACS,EAAE,CAAC;QACtBe,IAAI,CAACM,YAAY,CAACC,cAAc,CAAC;MACnC;MACAvC,aAAA,CAAA0B,cAAA,4BAAmBa,cAAc;IACnC;EAAC;IAAAnB,GAAA;IAAA5D,KAAA,EAED,SAAAgF,iBAAiBA,CAAA,EAAQ;MACvB,OAAO;QACLC,IAAI,EAAE,QAAQ;QACdjF,KAAK,EAAE6D,gBAAgB,CAAC,IAAI,CAACS,MAAM,EAAE,UAAAE,IAAI,EAAI;UAC3C,OAAO;YAACU,OAAO,EAAEV,IAAI,CAACW,cAAc,CAAC;UAAC,CAAC;QACzC,CAAC;MACH,CAAC;IACH;EAAC;IAAAvB,GAAA;IAAA5D,KAAA,EA9DD,SAAOoF,IAAIA,CAACpF,KAAY,EAAmB;MACzC,IAAMgD,KAAK,GAAGD,iBAAiB,CAAC/C,KAAK,CAAC;MACtC,IAAIgD,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;QACtB,OAAO,IAAI;MACb;MACA,OAAO,IAAIgB,cAAc,CAAClB,KAAK,EAAEhD,KAAK,CAAC;IACzC;EAAC;AAAA,EAdyCqF,8BAAoB","ignoreList":[]}