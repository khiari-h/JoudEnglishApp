{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ButtonLabel","_jsxRuntime","mockSizeStyles","text","fontSize","mockVariantStyles","color","mockCustomTextStyle","letterSpacing","describe","it","_render","render","jsx","default","title","sizeStyles","variantStyles","uppercase","textStyle","getByText","textComponent","expect","props","style","toContainEqual","objectContaining","textTransform","_render2","not","_render3","customTextStyle","fontWeight","_render4"],"sources":["ButtonLabel.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport ButtonLabel from '../../../../src/components/ui/Button/ButtonLabel';\r\n\r\n// Mocks des styles pour une meilleure lisibilité et pour éviter les dépendances\r\nconst mockSizeStyles = { text: { fontSize: 16 } };\r\nconst mockVariantStyles = { text: { color: 'blue' } };\r\nconst mockCustomTextStyle = { letterSpacing: 0.5 };\r\n\r\ndescribe('ButtonLabel', () => {\r\n  it('devrait rendre le titre en majuscules si la prop uppercase est vraie', () => {\r\n    const { getByText } = render(\r\n      <ButtonLabel\r\n        title=\"mon bouton\"\r\n        sizeStyles={mockSizeStyles}\r\n        variantStyles={mockVariantStyles}\r\n        uppercase={true}\r\n        textStyle={mockCustomTextStyle}\r\n      />\r\n    );\r\n    const textComponent = getByText('mon bouton');\r\n    // On vérifie que le style contient l'objet de style pour la mise en majuscules\r\n    expect(textComponent.props.style).toContainEqual(\r\n      expect.objectContaining({ textTransform: 'uppercase' })\r\n    );\r\n  });\r\n\r\n  it('ne devrait pas rendre le titre en majuscules si la prop uppercase est fausse', () => {\r\n    const { getByText } = render(\r\n      <ButtonLabel\r\n        title=\"mon bouton\"\r\n        sizeStyles={mockSizeStyles}\r\n        variantStyles={mockVariantStyles}\r\n        uppercase={false}\r\n      />\r\n    );\r\n    const textComponent = getByText('mon bouton');\r\n    // On vérifie que le style ne contient pas l'objet de style pour la mise en majuscules\r\n    expect(textComponent.props.style).not.toContainEqual(\r\n      expect.objectContaining({ textTransform: 'uppercase' })\r\n    );\r\n  });\r\n\r\n  it('devrait appliquer le style de texte correct', () => {\r\n    const { getByText } = render(\r\n      <ButtonLabel\r\n        title=\"Titre\"\r\n        sizeStyles={mockSizeStyles}\r\n        variantStyles={mockVariantStyles}\r\n      />\r\n    );\r\n    const textComponent = getByText('Titre');\r\n    expect(textComponent.props.style).toContainEqual(mockSizeStyles.text);\r\n    expect(textComponent.props.style).toContainEqual(mockVariantStyles.text);\r\n  });\r\n  \r\n  it('devrait appliquer un style de texte personnalisé si fourni', () => {\r\n    const customTextStyle = { fontWeight: 'bold' };\r\n    const { getByText } = render(\r\n      <ButtonLabel\r\n        title=\"Titre\"\r\n        sizeStyles={mockSizeStyles}\r\n        variantStyles={mockVariantStyles}\r\n        textStyle={customTextStyle}\r\n      />\r\n    );\r\n    const textComponent = getByText('Titre');\r\n    expect(textComponent.props.style).toContainEqual(customTextStyle);\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}