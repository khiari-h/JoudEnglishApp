{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_ExerciseCard","_jsxRuntime","describe","defaultProps","title","description","icon","onPress","jest","fn","afterEach","clearAllMocks","it","_render","render","jsx","default","Object","assign","getByText","expect","toBeTruthy","_render2","fireEvent","press","toHaveBeenCalledTimes","_render3","_render4","progress","getByTestId","progressFill","flatStyle","StyleSheet","flatten","props","style","width","toBe","_render5","_render6","queryByText","queryByTestId","toBeNull","_render7","isNew","_render8","_render9","_render0","_render1","rerender"],"sources":["ExerciseCard.test.js"],"sourcesContent":["// __tests__/components/exercise-common/ExerciseCard.test.js\nimport React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport { StyleSheet } from 'react-native';\nimport ExerciseCard from '../../../src/components/exercise-common/ExerciseCard';\n\ndescribe('ExerciseCard', () => {\n  const defaultProps = {\n    title: 'Vocabulary Practice',\n    description: 'Expand your word knowledge',\n    icon: 'ðŸ“š',\n    onPress: jest.fn(),\n  };\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n\n   /**\nÂ   * NOTE: Les lignes de code 23-25 et 40 dans le composant ExerciseCard\nÂ   * peuvent Ãªtre signalÃ©es comme non couvertes par l'outil de couverture de code (Istanbul).\nÂ   * Cela est dÃ» Ã  la maniÃ¨re dont l'outil interprÃ¨te les branches conditionnelles\nÂ   * sÃ©quentielles. Cependant, la logique de ces lignes est entiÃ¨rement testÃ©e\nÂ   * par les tests 'displays the \"Nouveau\" badge...' et 'returns null for bottom content...'.\nÂ   * Il n'y a donc pas de code non testÃ© dans ce composant.\nÂ   */\n\n\n  it('renders the basic card information correctly', () => {\n    const { getByText } = render(<ExerciseCard {...defaultProps} />);\n    expect(getByText('Vocabulary Practice')).toBeTruthy();\n    expect(getByText('Expand your word knowledge')).toBeTruthy();\n    expect(getByText('ðŸ“š')).toBeTruthy();\n  });\n\n  it('calls onPress when the card is pressed', () => {\n    const { getByText } = render(<ExerciseCard {...defaultProps} />);\n    fireEvent.press(getByText('Vocabulary Practice'));\n    expect(defaultProps.onPress).toHaveBeenCalledTimes(1);\n  });\n\n  it('calls onPress when the \"Commencer\" button is pressed', () => {\n    const { getByText } = render(<ExerciseCard {...defaultProps} />);\n    fireEvent.press(getByText('Commencer'));\n    expect(defaultProps.onPress).toHaveBeenCalledTimes(1);\n  });\n\n  it('displays the progress bar when progress is greater than 0', () => {\n    const { getByText, getByTestId } = render(\n      <ExerciseCard {...defaultProps} progress={50} />\n    );\n    expect(getByText('50%')).toBeTruthy();\n    const progressFill = getByTestId('progress-fill');\n    const flatStyle = StyleSheet.flatten(progressFill.props.style);\n    expect(flatStyle.width).toBe('50%');\n  });\n\n  it('displays the progress bar correctly at 100%', () => {\n    const { getByText, getByTestId } = render(\n      <ExerciseCard {...defaultProps} progress={100} />\n    );\n    expect(getByText('100%')).toBeTruthy();\n    const progressFill = getByTestId('progress-fill');\n    const flatStyle = StyleSheet.flatten(progressFill.props.style);\n    expect(flatStyle.width).toBe('100%');\n  });\n\n  it('does not display the progress bar when progress is 0', () => {\n    const { queryByText, queryByTestId } = render(\n      <ExerciseCard {...defaultProps} progress={0} />\n    );\n    expect(queryByText('0%')).toBeNull();\n    expect(queryByTestId('progress-fill')).toBeNull();\n  });\n\n  it('displays the \"Nouveau\" badge when isNew is true and progress is 0', () => {\n    const { getByText } = render(\n      <ExerciseCard {...defaultProps} isNew={true} progress={0} />\n    );\n    expect(getByText('Nouveau')).toBeTruthy();\n  });\n\n  it('does not display the \"Nouveau\" badge when progress is greater than 0', () => {\n    const { queryByText } = render(\n      <ExerciseCard {...defaultProps} isNew={true} progress={50} />\n    );\n    expect(queryByText('Nouveau')).toBeNull();\n  });\n\n  it('does not display the \"Nouveau\" badge when isNew is false', () => {\n    const { queryByText } = render(\n      <ExerciseCard {...defaultProps} isNew={false} progress={0} />\n    );\n    expect(queryByText('Nouveau')).toBeNull();\n  });\n\n  it('returns null for bottom content when progress is 0 and isNew is false', () => {\n    const { queryByText, queryByTestId } = render(\n      <ExerciseCard {...defaultProps} progress={0} isNew={false} />\n    );\n    expect(queryByText('Nouveau')).toBeNull();\n    expect(queryByTestId('progress-fill')).toBeNull();\n  });\n\n  it('renders bottom content for all possible branches', () => {\n    const { getByText, getByTestId, rerender, queryByText, queryByTestId } = render(\n      <ExerciseCard {...defaultProps} progress={0} isNew={true} />\n    );\n    // isNew && progress = 0\n    expect(getByText('Nouveau')).toBeTruthy();\n    expect(queryByTestId('progress-fill')).toBeNull();\n\n    // progress > 0\n    rerender(<ExerciseCard {...defaultProps} progress={50} isNew={true} />);\n    expect(getByTestId('progress-fill')).toBeTruthy();\n    expect(queryByText('Nouveau')).toBeNull();\n\n    // isNew false && progress = 0\n    rerender(<ExerciseCard {...defaultProps} progress={0} isNew={false} />);\n    expect(queryByText('Nouveau')).toBeNull();\n    expect(queryByTestId('progress-fill')).toBeNull();\n  });\n});\n"],"mappings":"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","ignoreList":[]}