{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_HeroCard","_reactNative2","_jsxRuntime","describe","it","render","jsx","default","content","expect","screen","getByText","toBeOnTheScreen","children","Text","fontSize","textElement","textAlign","showUnderline","customStyle","padding","containerStyle","_render","queryByText","toBeNull","_render2","queryByTextNull","_render3","undefined","queryByTextUndefined"],"sources":["HeroCard.test.js"],"sourcesContent":["import React from 'react';\nimport { render, screen } from '@testing-library/react-native';\nimport HeroCard from '../../../src/components/ui/HeroCard';\nimport { Text } from 'react-native';\n\ndescribe('HeroCard', () => {\n  it('renders correctly with content', () => {\n    render(<HeroCard content=\"Hello World\" />);\n    expect(screen.getByText('Hello World')).toBeOnTheScreen();\n  });\n\n  it('renders correctly with children', () => {\n    render(\n      <HeroCard>\n        <Text>Child Content</Text>\n      </HeroCard>\n    );\n    expect(screen.getByText('Child Content')).toBeOnTheScreen();\n  });\n\n  it('applies custom font size', () => {\n    render(<HeroCard content=\"Large Text\" fontSize={40} />);\n    const textElement = screen.getByText('Large Text');\n    // Testing styles directly can be tricky. We'll rely on the component's internal logic.\n    expect(textElement).toBeOnTheScreen();\n  });\n\n  it('applies custom text alignment', () => {\n    render(<HeroCard content=\"Right Aligned\" textAlign=\"right\" />);\n    const textElement = screen.getByText('Right Aligned');\n    expect(textElement).toBeOnTheScreen();\n  });\n\n  it('does not show underline when showUnderline is false', () => {\n    render(<HeroCard content=\"No Underline\" showUnderline={false} />);\n    expect(screen.getByText('No Underline')).toBeOnTheScreen();\n    // Verifying absence of a specific style element is hard without test IDs or snapshots.\n  });\n\n  it('applies custom containerStyle', () => {\n    const customStyle = { padding: 20 };\n    render(<HeroCard content=\"Styled Card\" containerStyle={customStyle} />);\n    expect(screen.getByText('Styled Card')).toBeOnTheScreen();\n  });\n\n  it('does not render content if it is empty string or not a string', () => {\n    const { queryByText } = render(<HeroCard content=\"\" />);\n    expect(queryByText('')).toBeNull();\n\n    const { queryByText: queryByTextNull } = render(<HeroCard content={null} />);\n    expect(queryByTextNull(null)).toBeNull();\n\n    const { queryByText: queryByTextUndefined } = render(<HeroCard content={undefined} />);\n    expect(queryByTextUndefined(undefined)).toBeNull();\n  });\n});\n"],"mappings":";AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AAAoC,IAAAI,WAAA,GAAAJ,OAAA;AAEpCK,QAAQ,CAAC,UAAU,EAAE,YAAM;EACzBC,EAAE,CAAC,gCAAgC,EAAE,YAAM;IACzC,IAAAC,mBAAM,EAAC,IAAAH,WAAA,CAAAI,GAAA,EAACN,SAAA,CAAAO,OAAQ;MAACC,OAAO,EAAC;IAAa,CAAE,CAAC,CAAC;IAC1CC,MAAM,CAACC,mBAAM,CAACC,SAAS,CAAC,aAAa,CAAC,CAAC,CAACC,eAAe,CAAC,CAAC;EAC3D,CAAC,CAAC;EAEFR,EAAE,CAAC,iCAAiC,EAAE,YAAM;IAC1C,IAAAC,mBAAM,EACJ,IAAAH,WAAA,CAAAI,GAAA,EAACN,SAAA,CAAAO,OAAQ;MAAAM,QAAA,EACP,IAAAX,WAAA,CAAAI,GAAA,EAACL,aAAA,CAAAa,IAAI;QAAAD,QAAA,EAAC;MAAa,CAAM;IAAC,CAClB,CACZ,CAAC;IACDJ,MAAM,CAACC,mBAAM,CAACC,SAAS,CAAC,eAAe,CAAC,CAAC,CAACC,eAAe,CAAC,CAAC;EAC7D,CAAC,CAAC;EAEFR,EAAE,CAAC,0BAA0B,EAAE,YAAM;IACnC,IAAAC,mBAAM,EAAC,IAAAH,WAAA,CAAAI,GAAA,EAACN,SAAA,CAAAO,OAAQ;MAACC,OAAO,EAAC,YAAY;MAACO,QAAQ,EAAE;IAAG,CAAE,CAAC,CAAC;IACvD,IAAMC,WAAW,GAAGN,mBAAM,CAACC,SAAS,CAAC,YAAY,CAAC;IAElDF,MAAM,CAACO,WAAW,CAAC,CAACJ,eAAe,CAAC,CAAC;EACvC,CAAC,CAAC;EAEFR,EAAE,CAAC,+BAA+B,EAAE,YAAM;IACxC,IAAAC,mBAAM,EAAC,IAAAH,WAAA,CAAAI,GAAA,EAACN,SAAA,CAAAO,OAAQ;MAACC,OAAO,EAAC,eAAe;MAACS,SAAS,EAAC;IAAO,CAAE,CAAC,CAAC;IAC9D,IAAMD,WAAW,GAAGN,mBAAM,CAACC,SAAS,CAAC,eAAe,CAAC;IACrDF,MAAM,CAACO,WAAW,CAAC,CAACJ,eAAe,CAAC,CAAC;EACvC,CAAC,CAAC;EAEFR,EAAE,CAAC,qDAAqD,EAAE,YAAM;IAC9D,IAAAC,mBAAM,EAAC,IAAAH,WAAA,CAAAI,GAAA,EAACN,SAAA,CAAAO,OAAQ;MAACC,OAAO,EAAC,cAAc;MAACU,aAAa,EAAE;IAAM,CAAE,CAAC,CAAC;IACjET,MAAM,CAACC,mBAAM,CAACC,SAAS,CAAC,cAAc,CAAC,CAAC,CAACC,eAAe,CAAC,CAAC;EAE5D,CAAC,CAAC;EAEFR,EAAE,CAAC,+BAA+B,EAAE,YAAM;IACxC,IAAMe,WAAW,GAAG;MAAEC,OAAO,EAAE;IAAG,CAAC;IACnC,IAAAf,mBAAM,EAAC,IAAAH,WAAA,CAAAI,GAAA,EAACN,SAAA,CAAAO,OAAQ;MAACC,OAAO,EAAC,aAAa;MAACa,cAAc,EAAEF;IAAY,CAAE,CAAC,CAAC;IACvEV,MAAM,CAACC,mBAAM,CAACC,SAAS,CAAC,aAAa,CAAC,CAAC,CAACC,eAAe,CAAC,CAAC;EAC3D,CAAC,CAAC;EAEFR,EAAE,CAAC,+DAA+D,EAAE,YAAM;IACxE,IAAAkB,OAAA,GAAwB,IAAAjB,mBAAM,EAAC,IAAAH,WAAA,CAAAI,GAAA,EAACN,SAAA,CAAAO,OAAQ;QAACC,OAAO,EAAC;MAAE,CAAE,CAAC,CAAC;MAA/Ce,WAAW,GAAAD,OAAA,CAAXC,WAAW;IACnBd,MAAM,CAACc,WAAW,CAAC,EAAE,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAElC,IAAAC,QAAA,GAAyC,IAAApB,mBAAM,EAAC,IAAAH,WAAA,CAAAI,GAAA,EAACN,SAAA,CAAAO,OAAQ;QAACC,OAAO,EAAE;MAAK,CAAE,CAAC,CAAC;MAAvDkB,eAAe,GAAAD,QAAA,CAA5BF,WAAW;IACnBd,MAAM,CAACiB,eAAe,CAAC,IAAI,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC;IAExC,IAAAG,QAAA,GAA8C,IAAAtB,mBAAM,EAAC,IAAAH,WAAA,CAAAI,GAAA,EAACN,SAAA,CAAAO,OAAQ;QAACC,OAAO,EAAEoB;MAAU,CAAE,CAAC,CAAC;MAAjEC,oBAAoB,GAAAF,QAAA,CAAjCJ,WAAW;IACnBd,MAAM,CAACoB,oBAAoB,CAACD,SAAS,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC;EACpD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}