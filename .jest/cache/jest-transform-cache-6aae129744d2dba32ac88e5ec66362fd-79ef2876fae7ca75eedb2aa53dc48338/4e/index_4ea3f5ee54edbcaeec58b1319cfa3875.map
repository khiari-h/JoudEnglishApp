{"version":3,"names":["_CategorySelector","_interopRequireDefault","require","_propTypes","_jsxRuntime","GrammarRuleSelector","_ref","rules","selectedIndex","onSelectRule","_ref$levelColor","levelColor","formattedRules","map","rule","index","id","name","title","jsx","default","categories","selectedCategory","undefined","onSelectCategory","primaryColor","propTypes","PropTypes","arrayOf","shape","string","isRequired","number","func","_default","exports"],"sources":["index.js"],"sourcesContent":["import CategorySelector from \"../../../../components/exercise-common/CategorySelector\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Sélecteur de règles grammaticales réutilisant le CategorySelector générique\r\n *\r\n * @param {Array} rules - Liste des règles disponibles\r\n * @param {number} selectedIndex - Index de la règle sélectionnée\r\n * @param {function} onSelectRule - Fonction à appeler lors de la sélection d'une règle\r\n * @param {string} levelColor - Couleur du niveau actuel\r\n */\r\nconst GrammarRuleSelector = ({\r\n  rules,\r\n  selectedIndex,\r\n  onSelectRule,\r\n  levelColor = \"#3b82f6\",\r\n}) => {\r\n  // Transformer les règles pour correspondre au format du CategorySelector\r\n  const formattedRules = rules.map((rule, index) => ({\r\n    id: index,\r\n    name: rule.title,\r\n  }));\r\n\r\n  return (\r\n    <CategorySelector\r\n      categories={formattedRules}\r\n      selectedCategory={selectedIndex === undefined ? 0 : selectedIndex}\r\n      onSelectCategory={onSelectRule}\r\n      primaryColor={levelColor}\r\n    />\r\n  );\r\n};\r\n\r\n// ✅ Définition de PropTypes pour la validation des props\r\nGrammarRuleSelector.propTypes = {\r\n  // 'rules' est manquant dans la validation\r\n  rules: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  // 'selectedIndex' est manquant dans la validation\r\n  selectedIndex: PropTypes.number.isRequired,\r\n  // 'onSelectRule' est manquant dans la validation\r\n  onSelectRule: PropTypes.func.isRequired,\r\n  // 'levelColor' est manquant dans la validation\r\n  levelColor: PropTypes.string,\r\n};\r\n\r\nexport default GrammarRuleSelector;"],"mappings":";;;;;AAAA,IAAAA,iBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAmC,IAAAE,WAAA,GAAAF,OAAA;AAUnC,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAAC,IAAA,EAKnB;EAAA,IAJJC,KAAK,GAAAD,IAAA,CAALC,KAAK;IACLC,aAAa,GAAAF,IAAA,CAAbE,aAAa;IACbC,YAAY,GAAAH,IAAA,CAAZG,YAAY;IAAAC,eAAA,GAAAJ,IAAA,CACZK,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,SAAS,GAAAA,eAAA;EAGtB,IAAME,cAAc,GAAGL,KAAK,CAACM,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;IAAA,OAAM;MACjDC,EAAE,EAAED,KAAK;MACTE,IAAI,EAAEH,IAAI,CAACI;IACb,CAAC;EAAA,CAAC,CAAC;EAEH,OACE,IAAAd,WAAA,CAAAe,GAAA,EAACnB,iBAAA,CAAAoB,OAAgB;IACfC,UAAU,EAAET,cAAe;IAC3BU,gBAAgB,EAAEd,aAAa,KAAKe,SAAS,GAAG,CAAC,GAAGf,aAAc;IAClEgB,gBAAgB,EAAEf,YAAa;IAC/BgB,YAAY,EAAEd;EAAW,CAC1B,CAAC;AAEN,CAAC;AAGDN,mBAAmB,CAACqB,SAAS,GAAG;EAE9BnB,KAAK,EAAEoB,kBAAS,CAACC,OAAO,CACtBD,kBAAS,CAACE,KAAK,CAAC;IACdX,KAAK,EAAES,kBAAS,CAACG,MAAM,CAACC;EAC1B,CAAC,CACH,CAAC,CAACA,UAAU;EAEZvB,aAAa,EAAEmB,kBAAS,CAACK,MAAM,CAACD,UAAU;EAE1CtB,YAAY,EAAEkB,kBAAS,CAACM,IAAI,CAACF,UAAU;EAEvCpB,UAAU,EAAEgB,kBAAS,CAACG;AACxB,CAAC;AAAC,IAAAI,QAAA,GAAAC,OAAA,CAAAf,OAAA,GAEaf,mBAAmB","ignoreList":[]}