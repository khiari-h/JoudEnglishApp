{"version":3,"names":["_react","require","_reactNative","_expoLinearGradient","_propTypes","_interopRequireDefault","_VocabularyWordCard","_style","_jsxRuntime","cov_2crqeahcs4","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","VocabularyWordSection","memo","_ref","currentWord","wordCounter","levelColor","showTranslation","onToggleTranslation","styles","createStyles","jsxs","View","style","container","children","jsx","CounterSection","default","word","translation","definition","example","_ref2","counterSection","LinearGradient","colors","x","y","counterGradient","counterBadge","borderColor","Text","counterText","color","propTypes","PropTypes","string","isRequired","object","shape","bool","func","displayName","_default","exports"],"sources":["index.js"],"sourcesContent":["// VocabularyWordSection/index.js - VERSION AJUSTÉE (garde la logique, utilise le nouveau VocabularyWordCard)\r\n\r\nimport { memo } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport PropTypes from 'prop-types';\r\nimport VocabularyWordCard from \"../VocabularyWordCard\"; // ← Utilise la version refactorisée\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ⚡ VocabularyWordSection - Version ajustée\r\n * Garde toute la logique métier (compteur, mode, etc.)\r\n * Utilise le nouveau VocabularyWordCard refactorisé\r\n * \r\n * @param {object} currentWord - Mot actuel avec ses propriétés\r\n * @param {string} wordCounter - Compteur stylé (ex: \"34 / 80\")\r\n * @param {string} level - Niveau actuel\r\n * @param {string} levelColor - Couleur du niveau\r\n * @param {boolean} showTranslation - État d'affichage de la traduction\r\n * @param {function} onToggleTranslation - Fonction pour toggle traduction\r\n */\r\nconst VocabularyWordSection = memo(({\r\n  currentWord,\r\n  wordCounter,\r\n  levelColor,\r\n  showTranslation,\r\n  onToggleTranslation,\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      {/* 🎯 COMPTEUR STYLÉ - Garde la logique existante */}\r\n      <CounterSection wordCounter={wordCounter} levelColor={levelColor} styles={styles} />\r\n\r\n      {/* 🎨 NOUVELLE CARTE DU MOT - Utilise la version refactorisée */}\r\n      <VocabularyWordCard\r\n        word={currentWord.word || \"\"}\r\n        translation={currentWord.translation || \"\"}\r\n        definition={currentWord.definition || \"\"}\r\n        example={currentWord.example || \"\"}\r\n        showTranslation={showTranslation}\r\n        onToggleTranslation={onToggleTranslation}\r\n        levelColor={levelColor}\r\n      />\r\n    </View>\r\n  );\r\n});\r\n\r\nconst CounterSection = ({ wordCounter, levelColor, styles }) => (\r\n  <View style={styles.counterSection}>\r\n    <LinearGradient\r\n      colors={[`${levelColor}08`, `${levelColor}04`, 'transparent']}\r\n      start={{ x: 0, y: 0 }}\r\n      end={{ x: 1, y: 1 }}\r\n      style={styles.counterGradient}\r\n    >\r\n      {/* Compteur principal */}\r\n      <View style={[styles.counterBadge, { borderColor: `${levelColor}20` }]}> \r\n        <Text style={[styles.counterText, { color: levelColor }]}> \r\n          {wordCounter}\r\n        </Text>\r\n      </View>\r\n    </LinearGradient>\r\n  </View>\r\n);\r\n\r\n// PropTypes pour CounterSection\r\nCounterSection.propTypes = {\r\n  wordCounter: PropTypes.string.isRequired,\r\n  levelColor: PropTypes.string.isRequired,\r\n  styles: PropTypes.object.isRequired,\r\n};\r\n\r\n// PropTypes pour le composant principal VocabularyWordSection\r\nVocabularyWordSection.propTypes = {\r\n  currentWord: PropTypes.shape({\r\n    word: PropTypes.string,\r\n    translation: PropTypes.string,\r\n    definition: PropTypes.string,\r\n    example: PropTypes.string,\r\n  }),\r\n  wordCounter: PropTypes.string.isRequired,\r\n  levelColor: PropTypes.string.isRequired,\r\n  showTranslation: PropTypes.bool.isRequired,\r\n  onToggleTranslation: PropTypes.func.isRequired,\r\n};\r\n\r\nVocabularyWordSection.displayName = \"VocabularyWordSection\";\r\n\r\nexport default VocabularyWordSection;"],"mappings":"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","ignoreList":[]}