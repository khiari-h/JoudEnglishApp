{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","_constants","_propTypes","_jsxRuntime","ProgressContext","exports","createContext","ProgressReadContext","ProgressWriteContext","createInitialProgress","levels","completed","total","exercises","vocabulary","phrases","grammar","stats","streak","totalTimeSpent","correctAnswers","totalAnswers","exercisesCompleted","lastLogin","lastActivity","type","level","timestamp","ProgressProvider","_ref","children","_useState","useState","_useState2","_slicedToArray2","default","progress","setProgress","_useState3","_useState4","isLoading","setIsLoading","saveTimeoutRef","useRef","isInitialLoad","useEffect","loadProgress","_ref2","_asyncToGenerator2","stored","AsyncStorage","getItem","STORAGE_KEYS","USER_PROGRESS","parsed","JSON","parse","error","console","current","apply","arguments","clearTimeout","setTimeout","setItem","stringify","updateExerciseProgress","useCallback","exerciseType","prev","newProgress","Object","assign","Math","min","max","levelExercises","keys","map","_newProgress$exercise","filter","val","length","averageProgress","reduce","sum","round","Date","toISOString","updateStats","newStats","calculateGlobalProgress","values","calculateLevelProgress","_progress$levels$leve","resetProgress","removeItem","contextValue","useMemo","readValue","writeValue","jsx","Provider","value","useProgress","context","useContext","Error","useProgressRead","useProgressWrite","propTypes","PropTypes","node","isRequired"],"sources":["ProgressContext.js"],"sourcesContent":["// src/contexts/ProgressContext.js - VERSION CORRIGÃ‰E SANS BOUCLE\r\nimport { createContext, useState, useEffect, useContext, useCallback, useRef, useMemo } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { STORAGE_KEYS } from '../utils/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\n// CrÃ©er le contexte\r\nexport const ProgressContext = createContext();\r\nexport const ProgressReadContext = createContext();\r\nexport const ProgressWriteContext = createContext();\r\n\r\n// DonnÃ©es initiales simples\r\nconst createInitialProgress = () => ({\r\n  // Progression par niveau (0-100%)\r\n  levels: {\r\n    '1': { completed: 0, total: 100 },\r\n    '2': { completed: 0, total: 100 },\r\n    '3': { completed: 0, total: 100 },\r\n    '4': { completed: 0, total: 100 },\r\n    '5': { completed: 0, total: 100 },\r\n    '6': { completed: 0, total: 100 },\r\n    'bonus': { completed: 0, total: 100 },\r\n  },\r\n  \r\n  // Progression par exercice et niveau\r\n  exercises: {\r\n    vocabulary: {\r\n      '1': { completed: 0, total: 100 },\r\n      '2': { completed: 0, total: 100 },\r\n      '3': { completed: 0, total: 100 },\r\n      '4': { completed: 0, total: 100 },\r\n      '5': { completed: 0, total: 100 },\r\n      '6': { completed: 0, total: 100 },\r\n      'bonus': { completed: 0, total: 100 },\r\n    },\r\n    phrases: {\r\n      '1': { completed: 0, total: 100 },\r\n      '2': { completed: 0, total: 100 },\r\n      '3': { completed: 0, total: 100 },\r\n      '4': { completed: 0, total: 100 },\r\n      '5': { completed: 0, total: 100 },\r\n      '6': { completed: 0, total: 100 },\r\n      'bonus': { completed: 0, total: 100 },\r\n    },\r\n    grammar: {\r\n      '1': { completed: 0, total: 100 },\r\n      '2': { completed: 0, total: 100 },\r\n      '3': { completed: 0, total: 100 },\r\n      '4': { completed: 0, total: 100 },\r\n      '5': { completed: 0, total: 100 },\r\n      '6': { completed: 0, total: 100 },\r\n    },\r\n    // ... autres exercices peuvent Ãªtre ajoutÃ©s au besoin\r\n  },\r\n\r\n  // Stats globales\r\n  stats: {\r\n    streak: 0,\r\n    totalTimeSpent: 0,\r\n    correctAnswers: 0,\r\n    totalAnswers: 0,\r\n    exercisesCompleted: 0,\r\n    lastLogin: null,\r\n  },\r\n\r\n  // DerniÃ¨re activitÃ©\r\n  lastActivity: {\r\n    type: null,\r\n    level: null,\r\n    timestamp: null,\r\n  },\r\n});\r\n\r\n// Fournisseur du contexte\r\nexport const ProgressProvider = ({ children }) => {\r\n  const [progress, setProgress] = useState(createInitialProgress());\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  // âœ… CORRECTION : Ref pour Ã©viter la boucle de sauvegarde\r\n  const saveTimeoutRef = useRef(null);\r\n  const isInitialLoad = useRef(true);\r\n\r\n  // ========== CHARGEMENT INITIAL ==========\r\n  useEffect(() => {\r\n    const loadProgress = async () => {\r\n      try {\r\n        const stored = await AsyncStorage.getItem(STORAGE_KEYS.USER_PROGRESS);\r\n        if (stored) {\r\n          const parsed = JSON.parse(stored);\r\n          setProgress(parsed);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur chargement progression:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n        isInitialLoad.current = false; // âœ… Marquer que le chargement initial est fini\r\n      }\r\n    };\r\n\r\n    loadProgress();\r\n  }, []); // âœ… CORRIGÃ‰ : Aucune dÃ©pendance\r\n\r\n  // ========== SAUVEGARDE AUTO CORRIGÃ‰E ==========\r\n  useEffect(() => {\r\n    // âœ… CORRECTION : Ne pas sauvegarder pendant le chargement initial\r\n    if (isLoading || isInitialLoad.current) {\r\n      return;\r\n    }\r\n\r\n    // Clear previous timeout\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n    }\r\n\r\n    // Set new timeout for debounced save\r\n    saveTimeoutRef.current = setTimeout(async () => {\r\n      try {\r\n        await AsyncStorage.setItem(STORAGE_KEYS.USER_PROGRESS, JSON.stringify(progress));\r\n      } catch (error) {\r\n        console.error('Erreur sauvegarde progression:', error);\r\n      }\r\n    }, 500);\r\n\r\n    // Cleanup timeout\r\n    return () => {\r\n      if (saveTimeoutRef.current) {\r\n        clearTimeout(saveTimeoutRef.current);\r\n      }\r\n      // Suppression du return null (aucun return attendu)\r\n    };\r\n  }, [progress, isLoading]); // âœ… IMPORTANT : Inclure isLoading pour Ã©viter sauvegarde pendant chargement\r\n\r\n  // ========== MÃ‰THODES MÃ‰MORISÃ‰ES ==========\r\n\r\n  // âœ… CORRECTION : MÃ©moriser toutes les fonctions\r\n  const updateExerciseProgress = useCallback((exerciseType, level, completed) => {\r\n    setProgress(prev => {\r\n      const newProgress = { ...prev };\r\n      \r\n      // VÃ©rifier que l'exercice existe\r\n      if (!newProgress.exercises[exerciseType]) {\r\n        newProgress.exercises[exerciseType] = {};\r\n      }\r\n      \r\n      if (!newProgress.exercises[exerciseType][level]) {\r\n        newProgress.exercises[exerciseType][level] = { completed: 0, total: 100 };\r\n      }\r\n\r\n      // Mettre Ã  jour l'exercice\r\n      newProgress.exercises[exerciseType][level].completed = Math.min(Math.max(0, completed), 100);\r\n\r\n      // Recalculer progression du niveau (moyenne des exercices)\r\n      const levelExercises = Object.keys(newProgress.exercises).map(type => \r\n        newProgress.exercises[type][level]?.completed || 0\r\n      ).filter(val => val > 0);\r\n\r\n      if (levelExercises.length > 0) {\r\n        const averageProgress = levelExercises.reduce((sum, val) => sum + val, 0) / levelExercises.length;\r\n        newProgress.levels[level].completed = Math.round(averageProgress);\r\n      }\r\n\r\n      // Mettre Ã  jour derniÃ¨re activitÃ©\r\n      newProgress.lastActivity = {\r\n        type: exerciseType,\r\n        level,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      return newProgress;\r\n    });\r\n  }, []);\r\n\r\n  const updateStats = useCallback((newStats) => {\r\n    setProgress(prev => ({\r\n      ...prev,\r\n      stats: { ...prev.stats, ...newStats }\r\n    }));\r\n  }, []);\r\n\r\n  const calculateGlobalProgress = useCallback(() => {\r\n    const levels = Object.values(progress.levels);\r\n    if (levels.length === 0) return 0;\r\n    \r\n    const total = levels.reduce((sum, level) => sum + level.completed, 0);\r\n    return Math.round(total / levels.length);\r\n  }, [progress.levels]);\r\n\r\n  const calculateLevelProgress = useCallback((level) => {\r\n    return progress.levels[level]?.completed || 0;\r\n  }, [progress.levels]);\r\n\r\n  const resetProgress = useCallback(async () => {\r\n    try {\r\n      await AsyncStorage.removeItem(STORAGE_KEYS.USER_PROGRESS);\r\n      setProgress(createInitialProgress());\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur reset progression:', error);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // ========== ðŸš¨ CORRECTION PRINCIPALE : VALEUR MÃ‰MORISÃ‰E ==========\r\n  const contextValue = useMemo(() => ({\r\n    progress,\r\n    isLoading,\r\n    updateExerciseProgress,\r\n    updateStats,\r\n    calculateGlobalProgress,\r\n    calculateLevelProgress,\r\n    resetProgress,\r\n  }), [\r\n    progress, \r\n    isLoading, \r\n    updateExerciseProgress, \r\n    updateStats, \r\n    calculateGlobalProgress, \r\n    calculateLevelProgress, \r\n    resetProgress\r\n  ]);\r\n\r\n  // DÃ©coupage read/write (non-rupturant): nouveaux contextes pour sÃ©parer les responsabilitÃ©s\r\n  const readValue = useMemo(() => ({\r\n    progress,\r\n    isLoading,\r\n    calculateGlobalProgress,\r\n    calculateLevelProgress,\r\n  }), [progress, isLoading, calculateGlobalProgress, calculateLevelProgress]);\r\n\r\n  const writeValue = useMemo(() => ({\r\n    updateExerciseProgress,\r\n    updateStats,\r\n    resetProgress,\r\n  }), [updateExerciseProgress, updateStats, resetProgress]);\r\n\r\n  return (\r\n    <ProgressReadContext.Provider value={readValue}>\r\n      <ProgressWriteContext.Provider value={writeValue}>\r\n        <ProgressContext.Provider value={contextValue}>\r\n          {children}\r\n        </ProgressContext.Provider>\r\n      </ProgressWriteContext.Provider>\r\n    </ProgressReadContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook pour utiliser le contexte\r\nexport const useProgress = () => {\r\n  const context = useContext(ProgressContext);\r\n  if (!context) {\r\n    throw new Error('useProgress must be used within a ProgressProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const useProgressRead = () => {\r\n  const context = useContext(ProgressReadContext);\r\n  if (!context) {\r\n    throw new Error('useProgressRead must be used within a ProgressProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const useProgressWrite = () => {\r\n  const context = useContext(ProgressWriteContext);\r\n  if (!context) {\r\n    throw new Error('useProgressWrite must be used within a ProgressProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nProgressProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};"],"mappings":";;;;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AACA,IAAAI,UAAA,GAAAF,sBAAA,CAAAF,OAAA;AAAmC,IAAAK,WAAA,GAAAL,OAAA;AAG5B,IAAMM,eAAe,GAAAC,OAAA,CAAAD,eAAA,GAAG,IAAAE,oBAAa,EAAC,CAAC;AACvC,IAAMC,mBAAmB,GAAAF,OAAA,CAAAE,mBAAA,GAAG,IAAAD,oBAAa,EAAC,CAAC;AAC3C,IAAME,oBAAoB,GAAAH,OAAA,CAAAG,oBAAA,GAAG,IAAAF,oBAAa,EAAC,CAAC;AAGnD,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA;EAAA,OAAU;IAEnCC,MAAM,EAAE;MACN,GAAG,EAAE;QAAEC,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC;MACjC,GAAG,EAAE;QAAED,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC;MACjC,GAAG,EAAE;QAAED,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC;MACjC,GAAG,EAAE;QAAED,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC;MACjC,GAAG,EAAE;QAAED,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC;MACjC,GAAG,EAAE;QAAED,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC;MACjC,OAAO,EAAE;QAAED,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAI;IACtC,CAAC;IAGDC,SAAS,EAAE;MACTC,UAAU,EAAE;QACV,GAAG,EAAE;UAAEH,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,OAAO,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI;MACtC,CAAC;MACDG,OAAO,EAAE;QACP,GAAG,EAAE;UAAEJ,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,OAAO,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI;MACtC,CAAC;MACDI,OAAO,EAAE;QACP,GAAG,EAAE;UAAEL,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;QACjC,GAAG,EAAE;UAAED,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI;MAClC;IAEF,CAAC;IAGDK,KAAK,EAAE;MACLC,MAAM,EAAE,CAAC;MACTC,cAAc,EAAE,CAAC;MACjBC,cAAc,EAAE,CAAC;MACjBC,YAAY,EAAE,CAAC;MACfC,kBAAkB,EAAE,CAAC;MACrBC,SAAS,EAAE;IACb,CAAC;IAGDC,YAAY,EAAE;MACZC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE;IACb;EACF,CAAC;AAAA,CAAC;AAGK,IAAMC,gBAAgB,GAAAvB,OAAA,CAAAuB,gBAAA,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACzC,IAAAC,SAAA,GAAgC,IAAAC,eAAQ,EAACvB,qBAAqB,CAAC,CAAC,CAAC;IAAAwB,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAA1DK,QAAQ,GAAAH,UAAA;IAAEI,WAAW,GAAAJ,UAAA;EAC5B,IAAAK,UAAA,GAAkC,IAAAN,eAAQ,EAAC,IAAI,CAAC;IAAAO,UAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAG9B,IAAMG,cAAc,GAAG,IAAAC,aAAM,EAAC,IAAI,CAAC;EACnC,IAAMC,aAAa,GAAG,IAAAD,aAAM,EAAC,IAAI,CAAC;EAGlC,IAAAE,gBAAS,EAAC,YAAM;IACd,IAAMC,YAAY;MAAA,IAAAC,KAAA,OAAAC,kBAAA,CAAAb,OAAA,EAAG,aAAY;QAC/B,IAAI;UACF,IAAMc,MAAM,SAASC,qBAAY,CAACC,OAAO,CAACC,uBAAY,CAACC,aAAa,CAAC;UACrE,IAAIJ,MAAM,EAAE;YACV,IAAMK,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACP,MAAM,CAAC;YACjCZ,WAAW,CAACiB,MAAM,CAAC;UACrB;QACF,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACxD,CAAC,SAAS;UACRhB,YAAY,CAAC,KAAK,CAAC;UACnBG,aAAa,CAACe,OAAO,GAAG,KAAK;QAC/B;MACF,CAAC;MAAA,gBAbKb,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAAa,KAAA,OAAAC,SAAA;MAAA;IAAA,GAajB;IAEDf,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,IAAAD,gBAAS,EAAC,YAAM;IAEd,IAAIL,SAAS,IAAII,aAAa,CAACe,OAAO,EAAE;MACtC;IACF;IAGA,IAAIjB,cAAc,CAACiB,OAAO,EAAE;MAC1BG,YAAY,CAACpB,cAAc,CAACiB,OAAO,CAAC;IACtC;IAGAjB,cAAc,CAACiB,OAAO,GAAGI,UAAU,KAAAf,kBAAA,CAAAb,OAAA,EAAC,aAAY;MAC9C,IAAI;QACF,MAAMe,qBAAY,CAACc,OAAO,CAACZ,uBAAY,CAACC,aAAa,EAAEE,IAAI,CAACU,SAAS,CAAC7B,QAAQ,CAAC,CAAC;MAClF,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC,GAAE,GAAG,CAAC;IAGP,OAAO,YAAM;MACX,IAAIf,cAAc,CAACiB,OAAO,EAAE;QAC1BG,YAAY,CAACpB,cAAc,CAACiB,OAAO,CAAC;MACtC;IAEF,CAAC;EACH,CAAC,EAAE,CAACvB,QAAQ,EAAEI,SAAS,CAAC,CAAC;EAKzB,IAAM0B,sBAAsB,GAAG,IAAAC,kBAAW,EAAC,UAACC,YAAY,EAAE1C,KAAK,EAAEf,SAAS,EAAK;IAC7E0B,WAAW,CAAC,UAAAgC,IAAI,EAAI;MAClB,IAAMC,WAAW,GAAAC,MAAA,CAAAC,MAAA,KAAQH,IAAI,CAAE;MAG/B,IAAI,CAACC,WAAW,CAACzD,SAAS,CAACuD,YAAY,CAAC,EAAE;QACxCE,WAAW,CAACzD,SAAS,CAACuD,YAAY,CAAC,GAAG,CAAC,CAAC;MAC1C;MAEA,IAAI,CAACE,WAAW,CAACzD,SAAS,CAACuD,YAAY,CAAC,CAAC1C,KAAK,CAAC,EAAE;QAC/C4C,WAAW,CAACzD,SAAS,CAACuD,YAAY,CAAC,CAAC1C,KAAK,CAAC,GAAG;UAAEf,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAI,CAAC;MAC3E;MAGA0D,WAAW,CAACzD,SAAS,CAACuD,YAAY,CAAC,CAAC1C,KAAK,CAAC,CAACf,SAAS,GAAG8D,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEhE,SAAS,CAAC,EAAE,GAAG,CAAC;MAG5F,IAAMiE,cAAc,GAAGL,MAAM,CAACM,IAAI,CAACP,WAAW,CAACzD,SAAS,CAAC,CAACiE,GAAG,CAAC,UAAArD,IAAI;QAAA,IAAAsD,qBAAA;QAAA,OAChE,EAAAA,qBAAA,GAAAT,WAAW,CAACzD,SAAS,CAACY,IAAI,CAAC,CAACC,KAAK,CAAC,qBAAlCqD,qBAAA,CAAoCpE,SAAS,KAAI,CAAC;MAAA,CACpD,CAAC,CAACqE,MAAM,CAAC,UAAAC,GAAG;QAAA,OAAIA,GAAG,GAAG,CAAC;MAAA,EAAC;MAExB,IAAIL,cAAc,CAACM,MAAM,GAAG,CAAC,EAAE;QAC7B,IAAMC,eAAe,GAAGP,cAAc,CAACQ,MAAM,CAAC,UAACC,GAAG,EAAEJ,GAAG;UAAA,OAAKI,GAAG,GAAGJ,GAAG;QAAA,GAAE,CAAC,CAAC,GAAGL,cAAc,CAACM,MAAM;QACjGZ,WAAW,CAAC5D,MAAM,CAACgB,KAAK,CAAC,CAACf,SAAS,GAAG8D,IAAI,CAACa,KAAK,CAACH,eAAe,CAAC;MACnE;MAGAb,WAAW,CAAC9C,YAAY,GAAG;QACzBC,IAAI,EAAE2C,YAAY;QAClB1C,KAAK,EAALA,KAAK;QACLC,SAAS,EAAE,IAAI4D,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MAED,OAAOlB,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMmB,WAAW,GAAG,IAAAtB,kBAAW,EAAC,UAACuB,QAAQ,EAAK;IAC5CrD,WAAW,CAAC,UAAAgC,IAAI;MAAA,OAAAE,MAAA,CAAAC,MAAA,KACXH,IAAI;QACPpD,KAAK,EAAAsD,MAAA,CAAAC,MAAA,KAAOH,IAAI,CAACpD,KAAK,EAAKyE,QAAQ;MAAE;IAAA,CACrC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,uBAAuB,GAAG,IAAAxB,kBAAW,EAAC,YAAM;IAChD,IAAMzD,MAAM,GAAG6D,MAAM,CAACqB,MAAM,CAACxD,QAAQ,CAAC1B,MAAM,CAAC;IAC7C,IAAIA,MAAM,CAACwE,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;IAEjC,IAAMtE,KAAK,GAAGF,MAAM,CAAC0E,MAAM,CAAC,UAACC,GAAG,EAAE3D,KAAK;MAAA,OAAK2D,GAAG,GAAG3D,KAAK,CAACf,SAAS;IAAA,GAAE,CAAC,CAAC;IACrE,OAAO8D,IAAI,CAACa,KAAK,CAAC1E,KAAK,GAAGF,MAAM,CAACwE,MAAM,CAAC;EAC1C,CAAC,EAAE,CAAC9C,QAAQ,CAAC1B,MAAM,CAAC,CAAC;EAErB,IAAMmF,sBAAsB,GAAG,IAAA1B,kBAAW,EAAC,UAACzC,KAAK,EAAK;IAAA,IAAAoE,qBAAA;IACpD,OAAO,EAAAA,qBAAA,GAAA1D,QAAQ,CAAC1B,MAAM,CAACgB,KAAK,CAAC,qBAAtBoE,qBAAA,CAAwBnF,SAAS,KAAI,CAAC;EAC/C,CAAC,EAAE,CAACyB,QAAQ,CAAC1B,MAAM,CAAC,CAAC;EAErB,IAAMqF,aAAa,GAAG,IAAA5B,kBAAW,MAAAnB,kBAAA,CAAAb,OAAA,EAAC,aAAY;IAC5C,IAAI;MACF,MAAMe,qBAAY,CAAC8C,UAAU,CAAC5C,uBAAY,CAACC,aAAa,CAAC;MACzDhB,WAAW,CAAC5B,qBAAqB,CAAC,CAAC,CAAC;MACpC,OAAO,IAAI;IACb,CAAC,CAAC,OAAOgD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO,KAAK;IACd;EACF,CAAC,GAAE,EAAE,CAAC;EAGN,IAAMwC,YAAY,GAAG,IAAAC,cAAO,EAAC;IAAA,OAAO;MAClC9D,QAAQ,EAARA,QAAQ;MACRI,SAAS,EAATA,SAAS;MACT0B,sBAAsB,EAAtBA,sBAAsB;MACtBuB,WAAW,EAAXA,WAAW;MACXE,uBAAuB,EAAvBA,uBAAuB;MACvBE,sBAAsB,EAAtBA,sBAAsB;MACtBE,aAAa,EAAbA;IACF,CAAC;EAAA,CAAC,EAAE,CACF3D,QAAQ,EACRI,SAAS,EACT0B,sBAAsB,EACtBuB,WAAW,EACXE,uBAAuB,EACvBE,sBAAsB,EACtBE,aAAa,CACd,CAAC;EAGF,IAAMI,SAAS,GAAG,IAAAD,cAAO,EAAC;IAAA,OAAO;MAC/B9D,QAAQ,EAARA,QAAQ;MACRI,SAAS,EAATA,SAAS;MACTmD,uBAAuB,EAAvBA,uBAAuB;MACvBE,sBAAsB,EAAtBA;IACF,CAAC;EAAA,CAAC,EAAE,CAACzD,QAAQ,EAAEI,SAAS,EAAEmD,uBAAuB,EAAEE,sBAAsB,CAAC,CAAC;EAE3E,IAAMO,UAAU,GAAG,IAAAF,cAAO,EAAC;IAAA,OAAO;MAChChC,sBAAsB,EAAtBA,sBAAsB;MACtBuB,WAAW,EAAXA,WAAW;MACXM,aAAa,EAAbA;IACF,CAAC;EAAA,CAAC,EAAE,CAAC7B,sBAAsB,EAAEuB,WAAW,EAAEM,aAAa,CAAC,CAAC;EAEzD,OACE,IAAA5F,WAAA,CAAAkG,GAAA,EAAC9F,mBAAmB,CAAC+F,QAAQ;IAACC,KAAK,EAAEJ,SAAU;IAAArE,QAAA,EAC7C,IAAA3B,WAAA,CAAAkG,GAAA,EAAC7F,oBAAoB,CAAC8F,QAAQ;MAACC,KAAK,EAAEH,UAAW;MAAAtE,QAAA,EAC/C,IAAA3B,WAAA,CAAAkG,GAAA,EAACjG,eAAe,CAACkG,QAAQ;QAACC,KAAK,EAAEN,YAAa;QAAAnE,QAAA,EAC3CA;MAAQ,CACe;IAAC,CACE;EAAC,CACJ,CAAC;AAEnC,CAAC;AAGM,IAAM0E,WAAW,GAAAnG,OAAA,CAAAmG,WAAA,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAC/B,IAAMC,OAAO,GAAG,IAAAC,iBAAU,EAACtG,eAAe,CAAC;EAC3C,IAAI,CAACqG,OAAO,EAAE;IACZ,MAAM,IAAIE,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOF,OAAO;AAChB,CAAC;AAEM,IAAMG,eAAe,GAAAvG,OAAA,CAAAuG,eAAA,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EACnC,IAAMH,OAAO,GAAG,IAAAC,iBAAU,EAACnG,mBAAmB,CAAC;EAC/C,IAAI,CAACkG,OAAO,EAAE;IACZ,MAAM,IAAIE,KAAK,CAAC,wDAAwD,CAAC;EAC3E;EACA,OAAOF,OAAO;AAChB,CAAC;AAEM,IAAMI,gBAAgB,GAAAxG,OAAA,CAAAwG,gBAAA,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EACpC,IAAMJ,OAAO,GAAG,IAAAC,iBAAU,EAAClG,oBAAoB,CAAC;EAChD,IAAI,CAACiG,OAAO,EAAE;IACZ,MAAM,IAAIE,KAAK,CAAC,yDAAyD,CAAC;EAC5E;EACA,OAAOF,OAAO;AAChB,CAAC;AAED7E,gBAAgB,CAACkF,SAAS,GAAG;EAC3BhF,QAAQ,EAAEiF,kBAAS,CAACC,IAAI,CAACC;AAC3B,CAAC","ignoreList":[]}