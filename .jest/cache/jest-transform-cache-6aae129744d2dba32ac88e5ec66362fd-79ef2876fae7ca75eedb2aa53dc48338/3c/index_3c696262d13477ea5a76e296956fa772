072c5872e9a13a24b697c8e2399d80f5
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _reactNative = require("react-native");
var _expoLinearGradient = require("expo-linear-gradient");
var _ThemeContext = require("../../../../contexts/ThemeContext");
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var ModernHeader = function ModernHeader(_ref) {
  var _ref$level = _ref.level,
    level = _ref$level === void 0 ? "1" : _ref$level,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? "#3B82F6" : _ref$levelColor;
  var themeContext = (0, _react.useContext)(_ThemeContext.ThemeContext);
  var colors = (themeContext == null ? void 0 : themeContext.colors) || {
    surface: "#FFFFFF"
  };
  var displayLevel = level === "bonus" ? "B" : level;
  return (0, _jsxRuntime.jsxs)(_expoLinearGradient.LinearGradient, {
    colors: [levelColor, `${levelColor}DD`],
    start: {
      x: 0,
      y: 0
    },
    end: {
      x: 1,
      y: 1
    },
    style: _style.default.container,
    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
      style: _style.default.backgroundPattern
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: _style.default.content,
      children: [(0, _jsxRuntime.jsx)(HeaderLeftSection, {
        colors: colors,
        localStyles: _style.default
      }), (0, _jsxRuntime.jsx)(HeaderRightSection, {
        displayLevel: displayLevel,
        levelColor: levelColor,
        colors: colors,
        localStyles: _style.default
      })]
    })]
  });
};
var HeaderLeftSection = function HeaderLeftSection(_ref2) {
  var colors = _ref2.colors,
    localStyles = _ref2.localStyles;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: localStyles.leftSection,
    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: localStyles.logoContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: localStyles.logoEmoji,
        children: "\uD83C\uDF93"
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: [localStyles.logoText, {
          color: colors.surface
        }],
        children: "JOUD"
      })]
    })
  });
};
var HeaderRightSection = function HeaderRightSection(_ref3) {
  var displayLevel = _ref3.displayLevel,
    levelColor = _ref3.levelColor,
    colors = _ref3.colors,
    localStyles = _ref3.localStyles;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: localStyles.rightSection,
    children: (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: [localStyles.levelBadge, {
        backgroundColor: colors.surface
      }],
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: [localStyles.levelText, {
          color: levelColor
        }],
        children: displayLevel
      })
    })
  });
};
var _default = exports.default = ModernHeader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0TmF0aXZlIiwiX2V4cG9MaW5lYXJHcmFkaWVudCIsIl9UaGVtZUNvbnRleHQiLCJfc3R5bGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2pzeFJ1bnRpbWUiLCJNb2Rlcm5IZWFkZXIiLCJfcmVmIiwiX3JlZiRsZXZlbCIsImxldmVsIiwiX3JlZiRsZXZlbENvbG9yIiwibGV2ZWxDb2xvciIsInRoZW1lQ29udGV4dCIsInVzZUNvbnRleHQiLCJUaGVtZUNvbnRleHQiLCJjb2xvcnMiLCJzdXJmYWNlIiwiZGlzcGxheUxldmVsIiwianN4cyIsIkxpbmVhckdyYWRpZW50Iiwic3RhcnQiLCJ4IiwieSIsImVuZCIsInN0eWxlIiwic3R5bGVzIiwiY29udGFpbmVyIiwiY2hpbGRyZW4iLCJqc3giLCJWaWV3IiwiYmFja2dyb3VuZFBhdHRlcm4iLCJjb250ZW50IiwiSGVhZGVyTGVmdFNlY3Rpb24iLCJsb2NhbFN0eWxlcyIsIkhlYWRlclJpZ2h0U2VjdGlvbiIsIl9yZWYyIiwibGVmdFNlY3Rpb24iLCJsb2dvQ29udGFpbmVyIiwiVGV4dCIsImxvZ29FbW9qaSIsImxvZ29UZXh0IiwiY29sb3IiLCJfcmVmMyIsInJpZ2h0U2VjdGlvbiIsImxldmVsQmFkZ2UiLCJiYWNrZ3JvdW5kQ29sb3IiLCJsZXZlbFRleHQiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3NjcmVlbnMvRGFzaGJvYXJkL2NvbXBvbmVudHMvTW9kZXJuSGVhZGVyL2luZGV4LmpzXHJcbmltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgVmlldywgVGV4dCB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcclxuaW1wb3J0IHsgTGluZWFyR3JhZGllbnQgfSBmcm9tIFwiZXhwby1saW5lYXItZ3JhZGllbnRcIjtcclxuaW1wb3J0IHsgVGhlbWVDb250ZXh0IH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbnRleHRzL1RoZW1lQ29udGV4dFwiO1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gXCIuL3N0eWxlXCI7XHJcblxyXG4vKipcclxuICogSGVhZGVyIG1vZGVybmUgcG91ciBsZSBEYXNoYm9hcmQgLSBWZXJzaW9uIG5ldHRvecOpZVxyXG4gKiDinIUgTG9nbyArIEJhZGdlIG5pdmVhdSB1bmlxdWVtZW50ICh0ZXh0ZXMgdXRpbGlzYXRldXIgc3VwcHJpbcOpcylcclxuICovXHJcbmNvbnN0IE1vZGVybkhlYWRlciA9ICh7IFxyXG4gIGxldmVsID0gXCIxXCIsIFxyXG4gIGxldmVsQ29sb3IgPSBcIiMzQjgyRjZcIlxyXG59KSA9PiB7XHJcbiAgY29uc3QgdGhlbWVDb250ZXh0ID0gdXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xyXG4gIGNvbnN0IGNvbG9ycyA9IHRoZW1lQ29udGV4dD8uY29sb3JzIHx8IHtcclxuICAgIHN1cmZhY2U6IFwiI0ZGRkZGRlwiLFxyXG4gIH07XHJcblxyXG4gIC8vIEFmZmljaGFnZSBkdSBuaXZlYXUgKDEsMiwzLDQsNSw2IG91IEIgcG91ciBib251cylcclxuICBjb25zdCBkaXNwbGF5TGV2ZWwgPSBsZXZlbCA9PT0gXCJib251c1wiID8gXCJCXCIgOiBsZXZlbDtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxMaW5lYXJHcmFkaWVudFxyXG4gICAgICBjb2xvcnM9e1tsZXZlbENvbG9yLCBgJHtsZXZlbENvbG9yfUREYF19XHJcbiAgICAgIHN0YXJ0PXt7IHg6IDAsIHk6IDAgfX1cclxuICAgICAgZW5kPXt7IHg6IDEsIHk6IDEgfX1cclxuICAgICAgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9XHJcbiAgICA+XHJcbiAgICAgIHsvKiBQYXR0ZXJuIGTDqWNvcmF0aWYgc3VidGlsICovfVxyXG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmJhY2tncm91bmRQYXR0ZXJufSAvPlxyXG5cclxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250ZW50fT5cclxuICAgICAgICB7LyogU2VjdGlvbiBnYXVjaGUgOiBMb2dvIHVuaXF1ZW1lbnQgKi99XHJcbiAgICAgICAgPEhlYWRlckxlZnRTZWN0aW9uIGNvbG9ycz17Y29sb3JzfSBsb2NhbFN0eWxlcz17c3R5bGVzfSAvPlxyXG5cclxuICAgICAgICB7LyogU2VjdGlvbiBkcm9pdGUgOiBCYWRnZSBuaXZlYXUgdW5pcXVlbWVudCAqL31cclxuICAgICAgICA8SGVhZGVyUmlnaHRTZWN0aW9uIGRpc3BsYXlMZXZlbD17ZGlzcGxheUxldmVsfSBsZXZlbENvbG9yPXtsZXZlbENvbG9yfSBjb2xvcnM9e2NvbG9yc30gbG9jYWxTdHlsZXM9e3N0eWxlc30gLz5cclxuICAgICAgPC9WaWV3PlxyXG4gICAgPC9MaW5lYXJHcmFkaWVudD5cclxuICApO1xyXG59O1xyXG5cclxuY29uc3QgSGVhZGVyTGVmdFNlY3Rpb24gPSAoeyBjb2xvcnMsIGxvY2FsU3R5bGVzIH0pID0+IChcclxuICA8VmlldyBzdHlsZT17bG9jYWxTdHlsZXMubGVmdFNlY3Rpb259PlxyXG4gICAgPFZpZXcgc3R5bGU9e2xvY2FsU3R5bGVzLmxvZ29Db250YWluZXJ9PlxyXG4gICAgICA8VGV4dCBzdHlsZT17bG9jYWxTdHlsZXMubG9nb0Vtb2ppfT7wn46TPC9UZXh0PlxyXG4gICAgICA8VGV4dCBzdHlsZT17W2xvY2FsU3R5bGVzLmxvZ29UZXh0LCB7IGNvbG9yOiBjb2xvcnMuc3VyZmFjZSB9XX0+Sk9VRDwvVGV4dD5cclxuICAgIDwvVmlldz5cclxuICA8L1ZpZXc+XHJcbik7XHJcblxyXG5jb25zdCBIZWFkZXJSaWdodFNlY3Rpb24gPSAoeyBkaXNwbGF5TGV2ZWwsIGxldmVsQ29sb3IsIGNvbG9ycywgbG9jYWxTdHlsZXMgfSkgPT4gKFxyXG4gIDxWaWV3IHN0eWxlPXtsb2NhbFN0eWxlcy5yaWdodFNlY3Rpb259PlxyXG4gICAgPFZpZXcgc3R5bGU9e1tsb2NhbFN0eWxlcy5sZXZlbEJhZGdlLCB7IGJhY2tncm91bmRDb2xvcjogY29sb3JzLnN1cmZhY2UgfV19PiBcclxuICAgICAgPFRleHQgc3R5bGU9e1tsb2NhbFN0eWxlcy5sZXZlbFRleHQsIHsgY29sb3I6IGxldmVsQ29sb3IgfV19PntkaXNwbGF5TGV2ZWx9PC9UZXh0PlxyXG4gICAgPC9WaWV3PlxyXG4gIDwvVmlldz5cclxuKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1vZGVybkhlYWRlcjsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsbUJBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLGFBQUEsR0FBQUgsT0FBQTtBQUNBLElBQUFJLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUwsT0FBQTtBQUE2QixJQUFBTSxXQUFBLEdBQUFOLE9BQUE7QUFNN0IsSUFBTU8sWUFBWSxHQUFHLFNBQWZBLFlBQVlBLENBQUFDLElBQUEsRUFHWjtFQUFBLElBQUFDLFVBQUEsR0FBQUQsSUFBQSxDQUZKRSxLQUFLO0lBQUxBLEtBQUssR0FBQUQsVUFBQSxjQUFHLEdBQUcsR0FBQUEsVUFBQTtJQUFBRSxlQUFBLEdBQUFILElBQUEsQ0FDWEksVUFBVTtJQUFWQSxVQUFVLEdBQUFELGVBQUEsY0FBRyxTQUFTLEdBQUFBLGVBQUE7RUFFdEIsSUFBTUUsWUFBWSxHQUFHLElBQUFDLGlCQUFVLEVBQUNDLDBCQUFZLENBQUM7RUFDN0MsSUFBTUMsTUFBTSxHQUFHLENBQUFILFlBQVksb0JBQVpBLFlBQVksQ0FBRUcsTUFBTSxLQUFJO0lBQ3JDQyxPQUFPLEVBQUU7RUFDWCxDQUFDO0VBR0QsSUFBTUMsWUFBWSxHQUFHUixLQUFLLEtBQUssT0FBTyxHQUFHLEdBQUcsR0FBR0EsS0FBSztFQUVwRCxPQUNFLElBQUFKLFdBQUEsQ0FBQWEsSUFBQSxFQUFDakIsbUJBQUEsQ0FBQWtCLGNBQWM7SUFDYkosTUFBTSxFQUFFLENBQUNKLFVBQVUsRUFBRSxHQUFHQSxVQUFVLElBQUksQ0FBRTtJQUN4Q1MsS0FBSyxFQUFFO01BQUVDLENBQUMsRUFBRSxDQUFDO01BQUVDLENBQUMsRUFBRTtJQUFFLENBQUU7SUFDdEJDLEdBQUcsRUFBRTtNQUFFRixDQUFDLEVBQUUsQ0FBQztNQUFFQyxDQUFDLEVBQUU7SUFBRSxDQUFFO0lBQ3BCRSxLQUFLLEVBQUVDLGNBQU0sQ0FBQ0MsU0FBVTtJQUFBQyxRQUFBLEdBR3hCLElBQUF0QixXQUFBLENBQUF1QixHQUFBLEVBQUM1QixZQUFBLENBQUE2QixJQUFJO01BQUNMLEtBQUssRUFBRUMsY0FBTSxDQUFDSztJQUFrQixDQUFFLENBQUMsRUFFekMsSUFBQXpCLFdBQUEsQ0FBQWEsSUFBQSxFQUFDbEIsWUFBQSxDQUFBNkIsSUFBSTtNQUFDTCxLQUFLLEVBQUVDLGNBQU0sQ0FBQ00sT0FBUTtNQUFBSixRQUFBLEdBRTFCLElBQUF0QixXQUFBLENBQUF1QixHQUFBLEVBQUNJLGlCQUFpQjtRQUFDakIsTUFBTSxFQUFFQSxNQUFPO1FBQUNrQixXQUFXLEVBQUVSO01BQU8sQ0FBRSxDQUFDLEVBRzFELElBQUFwQixXQUFBLENBQUF1QixHQUFBLEVBQUNNLGtCQUFrQjtRQUFDakIsWUFBWSxFQUFFQSxZQUFhO1FBQUNOLFVBQVUsRUFBRUEsVUFBVztRQUFDSSxNQUFNLEVBQUVBLE1BQU87UUFBQ2tCLFdBQVcsRUFBRVI7TUFBTyxDQUFFLENBQUM7SUFBQSxDQUMzRyxDQUFDO0VBQUEsQ0FDTyxDQUFDO0FBRXJCLENBQUM7QUFFRCxJQUFNTyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQWlCQSxDQUFBRyxLQUFBO0VBQUEsSUFBTXBCLE1BQU0sR0FBQW9CLEtBQUEsQ0FBTnBCLE1BQU07SUFBRWtCLFdBQVcsR0FBQUUsS0FBQSxDQUFYRixXQUFXO0VBQUEsT0FDOUMsSUFBQTVCLFdBQUEsQ0FBQXVCLEdBQUEsRUFBQzVCLFlBQUEsQ0FBQTZCLElBQUk7SUFBQ0wsS0FBSyxFQUFFUyxXQUFXLENBQUNHLFdBQVk7SUFBQVQsUUFBQSxFQUNuQyxJQUFBdEIsV0FBQSxDQUFBYSxJQUFBLEVBQUNsQixZQUFBLENBQUE2QixJQUFJO01BQUNMLEtBQUssRUFBRVMsV0FBVyxDQUFDSSxhQUFjO01BQUFWLFFBQUEsR0FDckMsSUFBQXRCLFdBQUEsQ0FBQXVCLEdBQUEsRUFBQzVCLFlBQUEsQ0FBQXNDLElBQUk7UUFBQ2QsS0FBSyxFQUFFUyxXQUFXLENBQUNNLFNBQVU7UUFBQVosUUFBQSxFQUFDO01BQUUsQ0FBTSxDQUFDLEVBQzdDLElBQUF0QixXQUFBLENBQUF1QixHQUFBLEVBQUM1QixZQUFBLENBQUFzQyxJQUFJO1FBQUNkLEtBQUssRUFBRSxDQUFDUyxXQUFXLENBQUNPLFFBQVEsRUFBRTtVQUFFQyxLQUFLLEVBQUUxQixNQUFNLENBQUNDO1FBQVEsQ0FBQyxDQUFFO1FBQUFXLFFBQUEsRUFBQztNQUFJLENBQU0sQ0FBQztJQUFBLENBQ3ZFO0VBQUMsQ0FDSCxDQUFDO0FBQUEsQ0FDUjtBQUVELElBQU1PLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBa0JBLENBQUFRLEtBQUE7RUFBQSxJQUFNekIsWUFBWSxHQUFBeUIsS0FBQSxDQUFaekIsWUFBWTtJQUFFTixVQUFVLEdBQUErQixLQUFBLENBQVYvQixVQUFVO0lBQUVJLE1BQU0sR0FBQTJCLEtBQUEsQ0FBTjNCLE1BQU07SUFBRWtCLFdBQVcsR0FBQVMsS0FBQSxDQUFYVCxXQUFXO0VBQUEsT0FDekUsSUFBQTVCLFdBQUEsQ0FBQXVCLEdBQUEsRUFBQzVCLFlBQUEsQ0FBQTZCLElBQUk7SUFBQ0wsS0FBSyxFQUFFUyxXQUFXLENBQUNVLFlBQWE7SUFBQWhCLFFBQUEsRUFDcEMsSUFBQXRCLFdBQUEsQ0FBQXVCLEdBQUEsRUFBQzVCLFlBQUEsQ0FBQTZCLElBQUk7TUFBQ0wsS0FBSyxFQUFFLENBQUNTLFdBQVcsQ0FBQ1csVUFBVSxFQUFFO1FBQUVDLGVBQWUsRUFBRTlCLE1BQU0sQ0FBQ0M7TUFBUSxDQUFDLENBQUU7TUFBQVcsUUFBQSxFQUN6RSxJQUFBdEIsV0FBQSxDQUFBdUIsR0FBQSxFQUFDNUIsWUFBQSxDQUFBc0MsSUFBSTtRQUFDZCxLQUFLLEVBQUUsQ0FBQ1MsV0FBVyxDQUFDYSxTQUFTLEVBQUU7VUFBRUwsS0FBSyxFQUFFOUI7UUFBVyxDQUFDLENBQUU7UUFBQWdCLFFBQUEsRUFBRVY7TUFBWSxDQUFPO0lBQUMsQ0FDOUU7RUFBQyxDQUNILENBQUM7QUFBQSxDQUNSO0FBQUMsSUFBQThCLFFBQUEsR0FBQUMsT0FBQSxDQUFBQyxPQUFBLEdBRWEzQyxZQUFZIiwiaWdub3JlTGlzdCI6W119