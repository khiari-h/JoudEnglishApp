{"version":3,"names":["_react","require","_reactNative","_expoRouter","_propTypes","_interopRequireDefault","_Container","_interopRequireWildcard","_ErrorCorrectionHeader","_ErrorCorrectionCategorySelector","_ErrorCorrectionModeSelector","_ErrorCorrectionProgress","_ErrorCorrectionWordSection","_ErrorCorrectionNavigation","_ErrorCorrectionResultsCard","_useErrorCorrection2","_useLastActivity2","_errorCorrectionDataHelper","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ErrorCorrectionExercise","_ref","route","_ref2","params","_ref2$level","level","styles","createStyles","_useLastActivity","useLastActivity","saveActivity","levelColor","getLevelColor","errorCorrectionData","useMemo","getErrorsData","_useErrorCorrection","useErrorCorrection","selectedCategory","currentExerciseIndex","correctionMode","showFeedback","isCorrect","showResults","loaded","showDetailedProgress","userCorrection","selectedErrorIndices","selectedChoiceIndex","currentExercise","exercises","changeCategory","startExercise","toggleDetailedProgress","handleNext","handlePrevious","checkAnswer","handleWordPress","handleChoiceSelect","setUserCorrection","setShowResults","isLastExerciseInCategory","hasValidData","stats","display","_useState","useState","_useState2","_slicedToArray2","viewMode","setViewMode","currentCategoryName","_errorCorrectionData$","categories","find","cat","id","name","activityMetadata","exercise","totalExercises","length","category","mode","categoryId","handleSaveActivity","useCallback","title","type","metadata","useEffect","handleBackPress","router","push","pathname","handleStartExercise","handleCategoryChange","handleCategoryProgressPress","index","_errorCorrectionData$2","handleToggleProgressDetails","handleNextAction","result","completed","handlePreviousAction","handleRetryResults","handleContinueResults","handleExitExercise","jsx","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","ALL","backgroundColor","statusBarStyle","children","View","style","loadingContainer","ActivityIndicator","size","color","jsxs","withScrollView","withPadding","scrollViewProps","showsVerticalScrollIndicator","contentContainerStyle","scrollContent","onBackPress","completedExercises","expanded","onToggleExpand","onCategoryPress","Fragment","onSelectCategory","onSelectMode","disabled","exerciseCounter","onChangeUserCorrection","onToggleErrorIndex","onSelectChoice","score","onRetry","onContinue","onExit","onNext","onPrevious","currentIndex","totalCount","disableNext","trim","isLastExercise","propTypes","PropTypes","shape","string","isRequired","_default","exports"],"sources":["index.js"],"sourcesContent":["// ErrorCorrectionExercise/index.js - VERSION CORRIGÃ‰E\r\n\r\nimport { useMemo, useState, useEffect, useCallback } from \"react\";\r\nimport { View, ActivityIndicator } from \"react-native\";\r\nimport { router } from \"expo-router\";\r\nimport PropTypes from 'prop-types'; // Import de PropTypes\r\n\r\n// Layout\r\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\r\n\r\n// Composants refactorisÃ©s\r\nimport ErrorCorrectionHeader from \"./ErrorCorrectionHeader\";\r\nimport ErrorCorrectionCategorySelector from \"./ErrorCorrectionCategorySelector\";\r\nimport ErrorCorrectionModeSelector from \"./ErrorCorrectionModeSelector\";\r\nimport ErrorCorrectionProgress from \"./ErrorCorrectionProgress\";\r\nimport ErrorCorrectionWordSection from \"./ErrorCorrectionWordSection\";\r\nimport ErrorCorrectionNavigation from \"./ErrorCorrectionNavigation\";\r\nimport ErrorCorrectionResultsCard from \"./ErrorCorrectionResultsCard\";\r\n\r\n// Hook unifiÃ© & Utils\r\nimport useErrorCorrection from \"./hooks/useErrorCorrection\";\r\nimport useLastActivity from \"../../../hooks/useLastActivity\";\r\nimport { getErrorsData, getLevelColor } from \"../../../utils/errorCorrection/errorCorrectionDataHelper\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ðŸŽ¯ ErrorCorrectionExercise - VERSION CORRIGÃ‰E\r\n */\r\nconst ErrorCorrectionExercise = ({ route }) => {\r\n  const { level = \"A1\" } = route.params || {};\r\n  const styles = createStyles();\r\n\r\n  // Hook pour sauvegarder l'activitÃ©\r\n  const { saveActivity } = useLastActivity();\r\n\r\n  // Data\r\n  const levelColor = getLevelColor(level);\r\n  const errorCorrectionData = useMemo(() => getErrorsData(level), [level]);\r\n\r\n  // Hook unifiÃ©\r\n  const {\r\n    selectedCategory,\r\n    currentExerciseIndex,\r\n    correctionMode,\r\n    showFeedback,\r\n    isCorrect,\r\n    showResults,\r\n    loaded,\r\n    showDetailedProgress,\r\n    // Mode-specific state\r\n    userCorrection,\r\n    selectedErrorIndices,\r\n    selectedChoiceIndex,\r\n    // Data\r\n    currentExercise,\r\n    exercises,\r\n    // Actions\r\n    changeCategory,\r\n    startExercise,\r\n    toggleDetailedProgress,\r\n    handleNext,\r\n    handlePrevious,\r\n    checkAnswer,\r\n    handleWordPress,\r\n    handleChoiceSelect,\r\n    setUserCorrection,\r\n    setShowResults,\r\n    // Computed\r\n    isLastExerciseInCategory,\r\n    hasValidData,\r\n    stats,\r\n    display,\r\n  } = useErrorCorrection(errorCorrectionData, level);\r\n\r\n  // Ã‰tats locaux\r\n  const [viewMode, setViewMode] = useState(\"browse\"); // \"browse\", \"exercise\", \"results\"\r\n\r\n  // âœ… CORRECTION : MÃ©moriser le nom de catÃ©gorie\r\n  const currentCategoryName = useMemo(() => {\r\n    return errorCorrectionData?.categories?.find(cat => cat.id === selectedCategory)?.name || \"GÃ©nÃ©ral\";\r\n  }, [errorCorrectionData?.categories, selectedCategory]);\r\n\r\n  // âœ… CORRECTION : MÃ©moriser les mÃ©tadonnÃ©es\r\n  const activityMetadata = useMemo(() => ({\r\n    exercise: currentExerciseIndex,\r\n    totalExercises: exercises.length,\r\n    category: currentCategoryName,\r\n    mode: correctionMode,\r\n    categoryId: selectedCategory\r\n  }), [currentExerciseIndex, exercises.length, currentCategoryName, correctionMode, selectedCategory]);\r\n\r\n  // âœ… CORRECTION : Callback mÃ©morisÃ© pour saveActivity\r\n  const handleSaveActivity = useCallback(() => {\r\n    if (loaded && hasValidData && viewMode === \"exercise\" && currentExercise && !showResults) {\r\n      saveActivity({\r\n        title: \"Correction d'erreurs\",\r\n        level,\r\n        type: \"errorCorrection\",\r\n        metadata: activityMetadata\r\n      });\r\n    }\r\n  }, [loaded, hasValidData, viewMode, currentExercise, showResults, level, saveActivity, activityMetadata]);\r\n\r\n  // âœ… CORRECTION : useEffect optimisÃ©\r\n  useEffect(() => {\r\n    handleSaveActivity();\r\n  }, [handleSaveActivity]);\r\n\r\n  // Handlers\r\nconst handleBackPress = useCallback(() => {\r\n  if (viewMode === \"exercise\") {\r\n    setViewMode(\"browse\");\r\n  } else {\r\n    router.push({\r\n      pathname: \"/tabs/exerciseSelection\",\r\n      params: { level }\r\n    });\r\n  }\r\n}, [viewMode, level]);\r\n\r\nconst handleStartExercise = useCallback((mode) => {\r\n  startExercise(mode);\r\n  setViewMode(\"exercise\");\r\n}, [startExercise]);\r\n\r\nconst handleCategoryChange = useCallback((categoryId) => {\r\n  changeCategory(categoryId);\r\n}, [changeCategory]);\r\n\r\nconst handleCategoryProgressPress = useCallback((index) => {\r\n  const category = errorCorrectionData?.categories?.[index];\r\n  if (category) {\r\n    changeCategory(category.id);\r\n  }\r\n}, [errorCorrectionData?.categories, changeCategory]);\r\n\r\nconst handleToggleProgressDetails = useCallback(() => {\r\n  toggleDetailedProgress();\r\n}, [toggleDetailedProgress]);\r\n\r\nconst handleNextAction = useCallback(() => {\r\n  if (showFeedback) {\r\n    const result = handleNext();\r\n    if (result.completed) {\r\n      setViewMode(\"browse\");\r\n    }\r\n  } else {\r\n    checkAnswer();\r\n  }\r\n}, [showFeedback, handleNext, checkAnswer]);\r\n\r\nconst handlePreviousAction = useCallback(() => {\r\n  handlePrevious();\r\n}, [handlePrevious]);\r\n\r\nconst handleRetryResults = useCallback(() => {\r\n  setShowResults(false);\r\n  setViewMode(\"exercise\");\r\n}, []);\r\n\r\nconst handleContinueResults = useCallback(() => {\r\n  setViewMode(\"browse\");\r\n}, []);\r\n\r\nconst handleExitExercise = useCallback(() => {\r\n  setViewMode(\"browse\");\r\n}, []);\r\n\r\n  // Loading state\r\n  if (!loaded || !hasValidData) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color={levelColor} />\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      safeArea\r\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n      withScrollView\r\n      backgroundColor=\"#f8fafc\"\r\n      statusBarStyle=\"dark-content\"\r\n      withPadding={false}\r\n      scrollViewProps={{\r\n        showsVerticalScrollIndicator: false,\r\n        contentContainerStyle: styles.scrollContent,\r\n      }}\r\n    >\r\n      {/* Header */}\r\n      <ErrorCorrectionHeader\r\n        level={level}\r\n        onBackPress={handleBackPress}\r\n      />\r\n\r\n      {/* Progress (seulement en mode exercice) */}\r\n      {viewMode === \"exercise\" && !showResults && (\r\n        <ErrorCorrectionProgress\r\n          categories={errorCorrectionData.categories || []}\r\n          exercises={errorCorrectionData.exercises || []}\r\n          completedExercises={stats.completedExercises || {}}\r\n          levelColor={levelColor}\r\n          expanded={showDetailedProgress}\r\n          onToggleExpand={handleToggleProgressDetails}\r\n          onCategoryPress={handleCategoryProgressPress}\r\n        />\r\n      )}\r\n\r\n      {/* Contenu principal */}\r\n      {viewMode === \"browse\" && (\r\n        <>\r\n          {/* Category Selector */}\r\n          <ErrorCorrectionCategorySelector\r\n            categories={errorCorrectionData.categories || []}\r\n            selectedCategory={selectedCategory}\r\n            onSelectCategory={handleCategoryChange}\r\n            levelColor={levelColor}\r\n          />\r\n\r\n          {/* Mode Selector */}\r\n          <ErrorCorrectionModeSelector\r\n            onSelectMode={handleStartExercise}\r\n            disabled={exercises.length === 0}\r\n            levelColor={levelColor}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {viewMode === \"exercise\" && !showResults && (\r\n        <>\r\n          {/* Word Section */}\r\n          <ErrorCorrectionWordSection\r\n            currentExercise={currentExercise}\r\n            exerciseCounter={display.exerciseCounter}\r\n            correctionMode={correctionMode}\r\n            level={level}\r\n            levelColor={levelColor}\r\n            showFeedback={showFeedback}\r\n            isCorrect={isCorrect}\r\n            // Mode-specific props\r\n            userCorrection={userCorrection}\r\n            selectedErrorIndices={selectedErrorIndices}\r\n            selectedChoiceIndex={selectedChoiceIndex}\r\n            onChangeUserCorrection={setUserCorrection}\r\n            onToggleErrorIndex={handleWordPress}\r\n            onSelectChoice={handleChoiceSelect}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {showResults && (\r\n        <ErrorCorrectionResultsCard\r\n          score={stats.score || 0}\r\n          totalExercises={exercises.length}\r\n          level={level}\r\n          levelColor={levelColor}\r\n          onRetry={handleRetryResults}\r\n          onContinue={handleContinueResults}\r\n          onExit={handleBackPress}\r\n        />\r\n      )}\r\n\r\n      {/* Navigation (seulement en mode exercice) */}\r\n      {viewMode === \"exercise\" && !showResults && (\r\n        <ErrorCorrectionNavigation\r\n          onNext={handleNextAction}\r\n          onPrevious={handlePreviousAction}\r\n          onExit={handleExitExercise}\r\n          currentIndex={currentExerciseIndex}\r\n          totalCount={exercises.length}\r\n          disableNext={\r\n            (correctionMode === \"full\" && userCorrection.trim() === \"\") ||\r\n            (correctionMode === \"identify\" && selectedErrorIndices.length === 0) ||\r\n            (correctionMode === \"multiple_choice\" && selectedChoiceIndex === null)\r\n          }\r\n          isLastExercise={isLastExerciseInCategory}\r\n          showFeedback={showFeedback}\r\n          levelColor={levelColor}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\n// âœ… DÃ©finition de PropTypes pour la validation des props\r\nErrorCorrectionExercise.propTypes = {\r\n  route: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      level: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default ErrorCorrectionExercise;"],"mappings":"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","ignoreList":[]}