{"version":3,"names":["createMockUseAssessment","overrides","arguments","length","undefined","Object","assign","currentSection","id","title","currentQuestionIndex","selectedAnswer","showFeedback","testCompleted","userAnswers","loaded","currentQuestion","text","options","correct","totalSections","totalQuestionsInSection","handleSelectAnswer","jest","fn","validateAnswer","tryAgain","handleNext","completed","handlePrevious","saveAssessmentResults","resetAssessment","canGoToPrevious","isLastQuestionInSection","stats","correctAnswers","totalQuestions","answeredInCurrentSection","display","currentSectionIndex","sectionTitle","questionNumber","_getJestObj","mock","useFonts","hideAsync","mockResolvedValue","__esModule","default","saveActivity","actualNav","requireActual","useNavigation","navigate","mockNavigate","goBack","mockGoBack","useRoute","params","name","router","push","replace","getLevelColor","MockContainer","_ref","children","testID","_jsxRuntime","jsx","MockAssessmentHeader","_ref2","level","onBackPress","jsxs","onPress","MockAssessmentProgress","_ref3","MockAssessmentQuestion","_ref4","question","onSelectAnswer","MockAssessmentNavigation","_ref5","onValidateAnswer","onNext","MockAssessmentResults","_ref6","userScore","onContinue","onRetry","getRecommendedLevel","score","percentage","_interopRequireDefault","require","_react","_reactNative","_native","_AppProvider","_index","_require","renderWithProviders","component","AllTheProviders","_ref7","NavigationContainer","render","wrapper","describe","mockUseAssessment","beforeEach","clearAllMocks","mockImplementation","it","mockRoute","route","expect","screen","getByTestID","toBeTruthy","answerA","fireEvent","press","validateBtn","toHaveBeenCalledWith","testCases","expectedLevel","description","forEach","_ref8","recommendedLevel","props","toContain","scoreDisplay","backBtn","mockResetAssessment","retryBtn","toHaveBeenCalled","continueBtn","levels","_renderWithProviders","unmount","afterAll","resetModules"],"sources":["assessment-and-placement.test.js"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, screen } from '@testing-library/react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppProvider from '../../src/contexts/AppProvider';\nimport LevelAssessment from '../../src/screens/exercises/level-assessment/index.js';\n\n// === MOCKS OPTIMISÉS ===\n// Mock des dépendances lourdes\njest.mock('expo-font', () => ({\n  useFonts: () => [true],\n}));\n\njest.mock('expo-splash-screen', () => ({\n  hideAsync: jest.fn().mockResolvedValue(undefined),\n}));\n\njest.mock('../../src/hooks/useRouteActivityTracker', () => jest.fn());\n\njest.mock('../../src/hooks/useLastActivity', () => ({\n  __esModule: true,\n  default: () => ({\n    saveActivity: jest.fn(),\n  }),\n}));\n\n// Mock de la navigation\nconst mockNavigate = jest.fn();\nconst mockGoBack = jest.fn();\n\njest.mock('@react-navigation/native', () => {\n  const actualNav = jest.requireActual('@react-navigation/native');\n  return {\n    ...actualNav,\n    useNavigation: () => ({\n      navigate: mockNavigate,\n      goBack: mockGoBack,\n    }),\n    useRoute: () => ({\n      params: {},\n      name: 'levelAssessment',\n    }),\n  };\n});\n\njest.mock('expo-router', () => ({\n  router: {\n    push: jest.fn(),\n    replace: jest.fn(),\n  },\n}));\n\n// Mock des utils\njest.mock('../../src/utils/assessment/assessmentDataHelper', () => ({\n  getLevelColor: jest.fn(() => '#007AFF'),\n}));\n\n// Mock des composants pour éviter les dépendances lourdes\njest.mock('../../src/components/layout/Container', () => {\n  return function MockContainer({ children, testID }) {\n    return <div testID={testID || 'container'}>{children}</div>;\n  };\n});\n\n// Mock du hook principal avec différents états\nconst createMockUseAssessment = (overrides = {}) => ({\n  currentSection: { id: 'grammar', title: 'Grammaire' },\n  currentQuestionIndex: 0,\n  selectedAnswer: null,\n  showFeedback: false,\n  testCompleted: false,\n  userAnswers: [],\n  loaded: true,\n  currentQuestion: {\n    id: 'q1',\n    text: 'Question d\\'évaluation simulée',\n    options: ['A', 'B', 'C', 'D'],\n    correct: 'A'\n  },\n  totalSections: 3,\n  totalQuestionsInSection: 10,\n  handleSelectAnswer: jest.fn(),\n  validateAnswer: jest.fn(),\n  tryAgain: jest.fn(),\n  handleNext: jest.fn(() => ({ completed: false })),\n  handlePrevious: jest.fn(),\n  saveAssessmentResults: jest.fn(),\n  resetAssessment: jest.fn(),\n  canGoToPrevious: false,\n  isLastQuestionInSection: false,\n  stats: {\n    correctAnswers: 7,\n    totalQuestions: 10,\n    totalSections: 3,\n    answeredInCurrentSection: 1\n  },\n  display: {\n    currentSectionIndex: 0,\n    sectionTitle: 'Grammaire',\n    questionNumber: 1\n  },\n  ...overrides\n});\n\njest.mock('../../src/screens/exercises/level-assessment/hooks/useAssessment', () => {\n  return jest.fn(() => createMockUseAssessment());\n});\n\n// Mock des sous-composants avec rendu immédiat\njest.mock('../../src/screens/exercises/level-assessment/AssessmentHeader', () => {\n  return function MockAssessmentHeader({ level, onBackPress }) {\n    return (\n      <div testID=\"assessment-header\">\n        <button testID=\"back-btn\" onPress={onBackPress}>Retour</button>\n        <text testID=\"header-level\">Niveau {level}</text>\n      </div>\n    );\n  };\n});\n\njest.mock('../../src/screens/exercises/level-assessment/AssessmentProgress', () => {\n  return function MockAssessmentProgress({ currentQuestion, totalQuestions }) {\n    return (\n      <div testID=\"assessment-progress\">\n        <text testID=\"progress-text\">Question {currentQuestion} sur {totalQuestions}</text>\n      </div>\n    );\n  };\n});\n\njest.mock('../../src/screens/exercises/level-assessment/AssessmentQuestion', () => {\n  return function MockAssessmentQuestion({ question, onSelectAnswer }) {\n    return (\n      <div testID=\"assessment-question\">\n        <text testID=\"question-text\">{question?.text}</text>\n        <button testID=\"answer-a\" onPress={() => onSelectAnswer('A')}>A</button>\n        <button testID=\"answer-b\" onPress={() => onSelectAnswer('B')}>B</button>\n      </div>\n    );\n  };\n});\n\njest.mock('../../src/screens/exercises/level-assessment/AssessmentNavigation', () => {\n  return function MockAssessmentNavigation({ onValidateAnswer, onNext }) {\n    return (\n      <div testID=\"assessment-navigation\">\n        <button testID=\"validate-btn\" onPress={onValidateAnswer}>Valider</button>\n        <button testID=\"next-btn\" onPress={onNext}>Suivant</button>\n      </div>\n    );\n  };\n});\n\njest.mock('../../src/screens/exercises/level-assessment/AssessmentResults', () => {\n  return function MockAssessmentResults({ userScore, onContinue, onRetry }) {\n    const getRecommendedLevel = (score) => {\n      const percentage = (score?.correctAnswers / score?.totalQuestions) * 100 || 50;\n      if (percentage >= 85) return 'B2';\n      if (percentage >= 70) return 'B1';\n      if (percentage >= 50) return 'A2';\n      return 'A1';\n    };\n    \n    return (\n      <div testID=\"assessment-results\">\n        <text testID=\"recommended-level\">Niveau recommandé : {getRecommendedLevel(userScore)}</text>\n        <text testID=\"score-display\">Score : {userScore?.correctAnswers}/{userScore?.totalQuestions}</text>\n        <button testID=\"continue-btn\" onPress={onContinue}>Continuer</button>\n        <button testID=\"retry-btn\" onPress={onRetry}>Recommencer</button>\n      </div>\n    );\n  };\n});\n\n// === HELPERS RAPIDES ===\nconst renderWithProviders = (component) => {\n  const AllTheProviders = ({ children }) => (\n    <NavigationContainer>\n      <AppProvider>{children}</AppProvider>\n    </NavigationContainer>\n  );\n  return render(component, { wrapper: AllTheProviders });\n};\n\n// === TESTS OPTIMISÉS ===\ndescribe('Assessment and Placement Integration Test', () => {\n  // Mock global du hook\n  const mockUseAssessment = require('../../src/screens/exercises/level-assessment/hooks/useAssessment');\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    // Reset au mock par défaut\n    mockUseAssessment.mockImplementation(() => createMockUseAssessment());\n  });\n\n  describe('User Assessment Flow', () => {\n    it('should successfully complete assessment workflow', () => {\n      const mockRoute = { params: { level: 'B1' } };\n      renderWithProviders(<LevelAssessment route={mockRoute} />);\n\n      // Vérifications synchrones\n      expect(screen.getByTestID('assessment-header')).toBeTruthy();\n      expect(screen.getByTestID('assessment-question')).toBeTruthy();\n      expect(screen.getByTestID('assessment-navigation')).toBeTruthy();\n\n      // Simuler réponse\n      const answerA = screen.getByTestID('answer-a');\n      fireEvent.press(answerA);\n\n      // Valider\n      const validateBtn = screen.getByTestID('validate-btn');\n      fireEvent.press(validateBtn);\n\n      expect(mockUseAssessment().handleSelectAnswer).toHaveBeenCalledWith('A');\n    });\n\n    it('should show results when test completed', () => {\n      // Mock avec test terminé\n      mockUseAssessment.mockImplementation(() => \n        createMockUseAssessment({\n          testCompleted: true,\n          currentSection: null,\n          currentQuestion: null,\n        })\n      );\n\n      const mockRoute = { params: { level: 'B1' } };\n      renderWithProviders(<LevelAssessment route={mockRoute} />);\n\n      // Vérifications immédiates\n      expect(screen.getByTestID('assessment-results')).toBeTruthy();\n      expect(screen.getByTestID('recommended-level')).toBeTruthy();\n      expect(screen.getByTestID('score-display')).toBeTruthy();\n    });\n\n    it('should show loading when not loaded', () => {\n      mockUseAssessment.mockImplementation(() => \n        createMockUseAssessment({\n          loaded: false,\n          currentSection: null,\n          currentQuestion: null,\n        })\n      );\n\n      const mockRoute = { params: { level: 'A1' } };\n      renderWithProviders(<LevelAssessment route={mockRoute} />);\n\n      expect(screen.getByTestID('activity-indicator')).toBeTruthy();\n    });\n  });\n\n  describe('Level Placement Scenarios', () => {\n    const testCases = [\n      { correctAnswers: 9, totalQuestions: 10, expectedLevel: 'B2', description: 'high score (90%)' },\n      { correctAnswers: 7, totalQuestions: 10, expectedLevel: 'B1', description: 'good score (70%)' },\n      { correctAnswers: 5, totalQuestions: 10, expectedLevel: 'A2', description: 'average score (50%)' },\n      { correctAnswers: 3, totalQuestions: 10, expectedLevel: 'A1', description: 'low score (30%)' },\n    ];\n\n    testCases.forEach(({ correctAnswers, totalQuestions, expectedLevel }) => {\n      it(`should recommend ${expectedLevel} for ${correctAnswers}/${totalQuestions} score`, () => {\n        mockUseAssessment.mockImplementation(() => \n          createMockUseAssessment({\n            testCompleted: true,\n            currentSection: null,\n            currentQuestion: null,\n            stats: { correctAnswers, totalQuestions },\n          })\n        );\n\n        const mockRoute = { params: { level: 'B1' } };\n        renderWithProviders(<LevelAssessment route={mockRoute} />);\n\n        const recommendedLevel = screen.getByTestID('recommended-level');\n        expect(recommendedLevel.props.children).toContain(`Niveau recommandé : ${expectedLevel}`);\n\n        const scoreDisplay = screen.getByTestID('score-display');\n        expect(scoreDisplay.props.children).toContain(`Score : ${correctAnswers}/${totalQuestions}`);\n      });\n    });\n  });\n\n  describe('Navigation and Interactions', () => {\n    it('should handle back navigation', () => {\n      const mockRoute = { params: { level: 'B1' } };\n      renderWithProviders(<LevelAssessment route={mockRoute} />);\n\n      const backBtn = screen.getByTestID('back-btn');\n      fireEvent.press(backBtn);\n\n      // Vérification que le bouton existe et est cliquable\n      expect(backBtn).toBeTruthy();\n    });\n\n    it('should handle retry action', () => {\n      const mockResetAssessment = jest.fn();\n      \n      mockUseAssessment.mockImplementation(() => \n        createMockUseAssessment({\n          testCompleted: true,\n          currentSection: null,\n          currentQuestion: null,\n          resetAssessment: mockResetAssessment,\n        })\n      );\n\n      const mockRoute = { params: { level: 'A2' } };\n      renderWithProviders(<LevelAssessment route={mockRoute} />);\n\n      const retryBtn = screen.getByTestID('retry-btn');\n      fireEvent.press(retryBtn);\n\n      expect(mockResetAssessment).toHaveBeenCalled();\n    });\n\n    it('should handle continue action', () => {\n      mockUseAssessment.mockImplementation(() => \n        createMockUseAssessment({\n          testCompleted: true,\n          currentSection: null,\n          currentQuestion: null,\n        })\n      );\n\n      const mockRoute = { params: { level: 'B2' } };\n      renderWithProviders(<LevelAssessment route={mockRoute} />);\n\n      const continueBtn = screen.getByTestID('continue-btn');\n      fireEvent.press(continueBtn);\n\n      expect(mockNavigate).toHaveBeenCalledWith('Dashboard');\n    });\n  });\n\n  describe('Performance and Rendering', () => {\n    it('should render efficiently with different levels', () => {\n      const levels = ['A1', 'A2', 'B1', 'B2'];\n      \n      levels.forEach(level => {\n        const { unmount } = renderWithProviders(\n          <LevelAssessment route={{ params: { level } }} />\n        );\n        \n        expect(screen.getByTestID('header-level').props.children).toContain(`Niveau ${level}`);\n        unmount();\n      });\n    });\n\n    it('should have proper test identifiers', () => {\n      const mockRoute = { params: { level: 'A1' } };\n      renderWithProviders(<LevelAssessment route={mockRoute} />);\n      \n      // Vérifier que tous les éléments principaux sont présents\n      expect(screen.getByTestID('assessment-header')).toBeTruthy();\n      expect(screen.getByTestID('assessment-question')).toBeTruthy();\n      expect(screen.getByTestID('assessment-navigation')).toBeTruthy();\n      expect(screen.getByTestID('assessment-progress')).toBeTruthy();\n    });\n  });\n});\n\n// Cleanup\nafterAll(() => {\n  jest.clearAllMocks();\n  jest.resetModules();\n});"],"mappings":"IAgEMA,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA;EAAA,IAAIC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,OAAAG,MAAA,CAAAC,MAAA;IAC7CC,cAAc,EAAE;MAAEC,EAAE,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAY,CAAC;IACrDC,oBAAoB,EAAE,CAAC;IACvBC,cAAc,EAAE,IAAI;IACpBC,YAAY,EAAE,KAAK;IACnBC,aAAa,EAAE,KAAK;IACpBC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,IAAI;IACZC,eAAe,EAAE;MACfR,EAAE,EAAE,IAAI;MACRS,IAAI,EAAE,gCAAgC;MACtCC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC7BC,OAAO,EAAE;IACX,CAAC;IACDC,aAAa,EAAE,CAAC;IAChBC,uBAAuB,EAAE,EAAE;IAC3BC,kBAAkB,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC;IAC7BC,cAAc,EAAEF,IAAI,CAACC,EAAE,CAAC,CAAC;IACzBE,QAAQ,EAAEH,IAAI,CAACC,EAAE,CAAC,CAAC;IACnBG,UAAU,EAAEJ,IAAI,CAACC,EAAE,CAAC;MAAA,OAAO;QAAEI,SAAS,EAAE;MAAM,CAAC;IAAA,CAAC,CAAC;IACjDC,cAAc,EAAEN,IAAI,CAACC,EAAE,CAAC,CAAC;IACzBM,qBAAqB,EAAEP,IAAI,CAACC,EAAE,CAAC,CAAC;IAChCO,eAAe,EAAER,IAAI,CAACC,EAAE,CAAC,CAAC;IAC1BQ,eAAe,EAAE,KAAK;IACtBC,uBAAuB,EAAE,KAAK;IAC9BC,KAAK,EAAE;MACLC,cAAc,EAAE,CAAC;MACjBC,cAAc,EAAE,EAAE;MAClBhB,aAAa,EAAE,CAAC;MAChBiB,wBAAwB,EAAE;IAC5B,CAAC;IACDC,OAAO,EAAE;MACPC,mBAAmB,EAAE,CAAC;MACtBC,YAAY,EAAE,WAAW;MACzBC,cAAc,EAAE;IAClB;EAAC,GACExC,SAAS;AAAA,CACZ;AA7FFyC,WAAA,GAAKC,IAAI,CAAC,WAAW,EAAE;EAAA,OAAO;IAC5BC,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAQ,CAAC,IAAI,CAAC;IAAA;EACxB,CAAC;AAAA,CAAC,CAAC;AAEHF,WAAA,GAAKC,IAAI,CAAC,oBAAoB,EAAE;EAAA,OAAO;IACrCE,SAAS,EAAEtB,IAAI,CAACC,EAAE,CAAC,CAAC,CAACsB,iBAAiB,CAAC1C,SAAS;EAClD,CAAC;AAAA,CAAC,CAAC;AAEHsC,WAAA,GAAKC,IAAI,CAAC,yCAAyC,EAAE;EAAA,OAAMpB,IAAI,CAACC,EAAE,CAAC,CAAC;AAAA,EAAC;AAErEkB,WAAA,GAAKC,IAAI,CAAC,iCAAiC,EAAE;EAAA,OAAO;IAClDI,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE,SAATA,QAAOA,CAAA;MAAA,OAAS;QACdC,YAAY,EAAE1B,IAAI,CAACC,EAAE,CAAC;MACxB,CAAC;IAAA;EACH,CAAC;AAAA,CAAC,CAAC;AAMHkB,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE,YAAM;EAC1C,IAAMO,SAAS,GAAG3B,IAAI,CAAC4B,aAAa,CAAC,0BAA0B,CAAC;EAChE,OAAA9C,MAAA,CAAAC,MAAA,KACK4C,SAAS;IACZE,aAAa,EAAE,SAAfA,aAAaA,CAAA;MAAA,OAAS;QACpBC,QAAQ,EAAEC,YAAY;QACtBC,MAAM,EAAEC;MACV,CAAC;IAAA,CAAC;IACFC,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAS;QACfC,MAAM,EAAE,CAAC,CAAC;QACVC,IAAI,EAAE;MACR,CAAC;IAAA;EAAC;AAEN,CAAC,CAAC;AAEFjB,WAAA,GAAKC,IAAI,CAAC,aAAa,EAAE;EAAA,OAAO;IAC9BiB,MAAM,EAAE;MACNC,IAAI,EAAEtC,IAAI,CAACC,EAAE,CAAC,CAAC;MACfsC,OAAO,EAAEvC,IAAI,CAACC,EAAE,CAAC;IACnB;EACF,CAAC;AAAA,CAAC,CAAC;AAGHkB,WAAA,GAAKC,IAAI,CAAC,iDAAiD,EAAE;EAAA,OAAO;IAClEoB,aAAa,EAAExC,IAAI,CAACC,EAAE,CAAC;MAAA,OAAM,SAAS;IAAA;EACxC,CAAC;AAAA,CAAC,CAAC;AAGHkB,WAAA,GAAKC,IAAI,CAAC,uCAAuC,EAAE,YAAM;EACvD,OAAO,SAASqB,aAAaA,CAAAC,IAAA,EAAuB;IAAA,IAApBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;MAAEC,MAAM,GAAAF,IAAA,CAANE,MAAM;IAC9C,OAAO,IAAAC,WAAA,CAAAC,GAAA;MAAKF,MAAM,EAAEA,MAAM,IAAI,WAAY;MAAAD,QAAA,EAAEA;IAAQ,CAAM,CAAC;EAC7D,CAAC;AACH,CAAC,CAAC;AA0CFxB,WAAA,GAAKC,IAAI,CAAC,kEAAkE,EAAE,YAAM;EAClF,OAAOpB,IAAI,CAACC,EAAE,CAAC;IAAA,OAAMxB,uBAAuB,CAAC,CAAC;EAAA,EAAC;AACjD,CAAC,CAAC;AAGF0C,WAAA,GAAKC,IAAI,CAAC,+DAA+D,EAAE,YAAM;EAC/E,OAAO,SAAS2B,oBAAoBA,CAAAC,KAAA,EAAyB;IAAA,IAAtBC,KAAK,GAAAD,KAAA,CAALC,KAAK;MAAEC,WAAW,GAAAF,KAAA,CAAXE,WAAW;IACvD,OACE,IAAAL,WAAA,CAAAM,IAAA;MAAKP,MAAM,EAAC,mBAAmB;MAAAD,QAAA,GAC7B,IAAAE,WAAA,CAAAC,GAAA;QAAQF,MAAM,EAAC,UAAU;QAACQ,OAAO,EAAEF,WAAY;QAAAP,QAAA,EAAC;MAAM,CAAQ,CAAC,EAC/D,IAAAE,WAAA,CAAAM,IAAA;QAAMP,MAAM,EAAC,cAAc;QAAAD,QAAA,GAAC,SAAO,EAACM,KAAK;MAAA,CAAO,CAAC;IAAA,CAC9C,CAAC;EAEV,CAAC;AACH,CAAC,CAAC;AAEF9B,WAAA,GAAKC,IAAI,CAAC,iEAAiE,EAAE,YAAM;EACjF,OAAO,SAASiC,sBAAsBA,CAAAC,KAAA,EAAsC;IAAA,IAAnC7D,eAAe,GAAA6D,KAAA,CAAf7D,eAAe;MAAEoB,cAAc,GAAAyC,KAAA,CAAdzC,cAAc;IACtE,OACE,IAAAgC,WAAA,CAAAC,GAAA;MAAKF,MAAM,EAAC,qBAAqB;MAAAD,QAAA,EAC/B,IAAAE,WAAA,CAAAM,IAAA;QAAMP,MAAM,EAAC,eAAe;QAAAD,QAAA,GAAC,WAAS,EAAClD,eAAe,EAAC,OAAK,EAACoB,cAAc;MAAA,CAAO;IAAC,CAChF,CAAC;EAEV,CAAC;AACH,CAAC,CAAC;AAEFM,WAAA,GAAKC,IAAI,CAAC,iEAAiE,EAAE,YAAM;EACjF,OAAO,SAASmC,sBAAsBA,CAAAC,KAAA,EAA+B;IAAA,IAA5BC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;MAAEC,cAAc,GAAAF,KAAA,CAAdE,cAAc;IAC/D,OACE,IAAAb,WAAA,CAAAM,IAAA;MAAKP,MAAM,EAAC,qBAAqB;MAAAD,QAAA,GAC/B,IAAAE,WAAA,CAAAC,GAAA;QAAMF,MAAM,EAAC,eAAe;QAAAD,QAAA,EAAEc,QAAQ,oBAARA,QAAQ,CAAE/D;MAAI,CAAO,CAAC,EACpD,IAAAmD,WAAA,CAAAC,GAAA;QAAQF,MAAM,EAAC,UAAU;QAACQ,OAAO,EAAE,SAATA,OAAOA,CAAA;UAAA,OAAQM,cAAc,CAAC,GAAG,CAAC;QAAA,CAAC;QAAAf,QAAA,EAAC;MAAC,CAAQ,CAAC,EACxE,IAAAE,WAAA,CAAAC,GAAA;QAAQF,MAAM,EAAC,UAAU;QAACQ,OAAO,EAAE,SAATA,OAAOA,CAAA;UAAA,OAAQM,cAAc,CAAC,GAAG,CAAC;QAAA,CAAC;QAAAf,QAAA,EAAC;MAAC,CAAQ,CAAC;IAAA,CACrE,CAAC;EAEV,CAAC;AACH,CAAC,CAAC;AAEFxB,WAAA,GAAKC,IAAI,CAAC,mEAAmE,EAAE,YAAM;EACnF,OAAO,SAASuC,wBAAwBA,CAAAC,KAAA,EAA+B;IAAA,IAA5BC,gBAAgB,GAAAD,KAAA,CAAhBC,gBAAgB;MAAEC,MAAM,GAAAF,KAAA,CAANE,MAAM;IACjE,OACE,IAAAjB,WAAA,CAAAM,IAAA;MAAKP,MAAM,EAAC,uBAAuB;MAAAD,QAAA,GACjC,IAAAE,WAAA,CAAAC,GAAA;QAAQF,MAAM,EAAC,cAAc;QAACQ,OAAO,EAAES,gBAAiB;QAAAlB,QAAA,EAAC;MAAO,CAAQ,CAAC,EACzE,IAAAE,WAAA,CAAAC,GAAA;QAAQF,MAAM,EAAC,UAAU;QAACQ,OAAO,EAAEU,MAAO;QAAAnB,QAAA,EAAC;MAAO,CAAQ,CAAC;IAAA,CACxD,CAAC;EAEV,CAAC;AACH,CAAC,CAAC;AAEFxB,WAAA,GAAKC,IAAI,CAAC,gEAAgE,EAAE,YAAM;EAChF,OAAO,SAAS2C,qBAAqBA,CAAAC,KAAA,EAAqC;IAAA,IAAlCC,SAAS,GAAAD,KAAA,CAATC,SAAS;MAAEC,UAAU,GAAAF,KAAA,CAAVE,UAAU;MAAEC,OAAO,GAAAH,KAAA,CAAPG,OAAO;IACpE,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,KAAK,EAAK;MACrC,IAAMC,UAAU,GAAI,CAAAD,KAAK,oBAALA,KAAK,CAAEzD,cAAc,KAAGyD,KAAK,oBAALA,KAAK,CAAExD,cAAc,IAAI,GAAG,IAAI,EAAE;MAC9E,IAAIyD,UAAU,IAAI,EAAE,EAAE,OAAO,IAAI;MACjC,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,IAAI;MACjC,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,IAAI;MACjC,OAAO,IAAI;IACb,CAAC;IAED,OACE,IAAAzB,WAAA,CAAAM,IAAA;MAAKP,MAAM,EAAC,oBAAoB;MAAAD,QAAA,GAC9B,IAAAE,WAAA,CAAAM,IAAA;QAAMP,MAAM,EAAC,mBAAmB;QAAAD,QAAA,GAAC,yBAAoB,EAACyB,mBAAmB,CAACH,SAAS,CAAC;MAAA,CAAO,CAAC,EAC5F,IAAApB,WAAA,CAAAM,IAAA;QAAMP,MAAM,EAAC,eAAe;QAAAD,QAAA,GAAC,UAAQ,EAACsB,SAAS,oBAATA,SAAS,CAAErD,cAAc,EAAC,GAAC,EAACqD,SAAS,oBAATA,SAAS,CAAEpD,cAAc;MAAA,CAAO,CAAC,EACnG,IAAAgC,WAAA,CAAAC,GAAA;QAAQF,MAAM,EAAC,cAAc;QAACQ,OAAO,EAAEc,UAAW;QAAAvB,QAAA,EAAC;MAAS,CAAQ,CAAC,EACrE,IAAAE,WAAA,CAAAC,GAAA;QAAQF,MAAM,EAAC,WAAW;QAACQ,OAAO,EAAEe,OAAQ;QAAAxB,QAAA,EAAC;MAAW,CAAQ,CAAC;IAAA,CAC9D,CAAC;EAEV,CAAC;AACH,CAAC,CAAC;AAAC,IAAA4B,sBAAA,GAAAC,OAAA;AA3KH,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,MAAA,GAAAN,sBAAA,CAAAC,OAAA;AAAoF,IAAA3B,WAAA,GAAA2B,OAAA;AAAA,SAAArD,YAAA;EAAA,IAAA2D,QAAA,GAAAN,OAAA;IAAAxE,IAAA,GAAA8E,QAAA,CAAA9E,IAAA;EAAAmB,WAAA,YAAAA,YAAA;IAAA,OAAAnB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAsBpF,IAAM+B,YAAY,GAAG/B,IAAI,CAACC,EAAE,CAAC,CAAC;AAC9B,IAAMgC,UAAU,GAAGjC,IAAI,CAACC,EAAE,CAAC,CAAC;AAmJ5B,IAAM8E,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,SAAS,EAAK;EACzC,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,KAAA;IAAA,IAAMvC,QAAQ,GAAAuC,KAAA,CAARvC,QAAQ;IAAA,OACjC,IAAAE,WAAA,CAAAC,GAAA,EAAC6B,OAAA,CAAAQ,mBAAmB;MAAAxC,QAAA,EAClB,IAAAE,WAAA,CAAAC,GAAA,EAAC8B,YAAA,CAAAnD,OAAW;QAAAkB,QAAA,EAAEA;MAAQ,CAAc;IAAC,CAClB,CAAC;EAAA,CACvB;EACD,OAAO,IAAAyC,mBAAM,EAACJ,SAAS,EAAE;IAAEK,OAAO,EAAEJ;EAAgB,CAAC,CAAC;AACxD,CAAC;AAGDK,QAAQ,CAAC,2CAA2C,EAAE,YAAM;EAE1D,IAAMC,iBAAiB,GAAGf,OAAO,CAAC,kEAAkE,CAAC;EAErGgB,UAAU,CAAC,YAAM;IACfxF,IAAI,CAACyF,aAAa,CAAC,CAAC;IAEpBF,iBAAiB,CAACG,kBAAkB,CAAC;MAAA,OAAMjH,uBAAuB,CAAC,CAAC;IAAA,EAAC;EACvE,CAAC,CAAC;EAEF6G,QAAQ,CAAC,sBAAsB,EAAE,YAAM;IACrCK,EAAE,CAAC,kDAAkD,EAAE,YAAM;MAC3D,IAAMC,SAAS,GAAG;QAAEzD,MAAM,EAAE;UAAEc,KAAK,EAAE;QAAK;MAAE,CAAC;MAC7C8B,mBAAmB,CAAC,IAAAlC,WAAA,CAAAC,GAAA,EAAC+B,MAAA,CAAApD,OAAe;QAACoE,KAAK,EAAED;MAAU,CAAE,CAAC,CAAC;MAG1DE,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;MAC5DH,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;MAC9DH,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,uBAAuB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;MAGhE,IAAMC,OAAO,GAAGH,mBAAM,CAACC,WAAW,CAAC,UAAU,CAAC;MAC9CG,sBAAS,CAACC,KAAK,CAACF,OAAO,CAAC;MAGxB,IAAMG,WAAW,GAAGN,mBAAM,CAACC,WAAW,CAAC,cAAc,CAAC;MACtDG,sBAAS,CAACC,KAAK,CAACC,WAAW,CAAC;MAE5BP,MAAM,CAACP,iBAAiB,CAAC,CAAC,CAACxF,kBAAkB,CAAC,CAACuG,oBAAoB,CAAC,GAAG,CAAC;IAC1E,CAAC,CAAC;IAEFX,EAAE,CAAC,yCAAyC,EAAE,YAAM;MAElDJ,iBAAiB,CAACG,kBAAkB,CAAC;QAAA,OACnCjH,uBAAuB,CAAC;UACtBa,aAAa,EAAE,IAAI;UACnBN,cAAc,EAAE,IAAI;UACpBS,eAAe,EAAE;QACnB,CAAC,CAAC;MAAA,CACJ,CAAC;MAED,IAAMmG,SAAS,GAAG;QAAEzD,MAAM,EAAE;UAAEc,KAAK,EAAE;QAAK;MAAE,CAAC;MAC7C8B,mBAAmB,CAAC,IAAAlC,WAAA,CAAAC,GAAA,EAAC+B,MAAA,CAAApD,OAAe;QAACoE,KAAK,EAAED;MAAU,CAAE,CAAC,CAAC;MAG1DE,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;MAC7DH,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;MAC5DH,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,eAAe,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEFN,EAAE,CAAC,qCAAqC,EAAE,YAAM;MAC9CJ,iBAAiB,CAACG,kBAAkB,CAAC;QAAA,OACnCjH,uBAAuB,CAAC;UACtBe,MAAM,EAAE,KAAK;UACbR,cAAc,EAAE,IAAI;UACpBS,eAAe,EAAE;QACnB,CAAC,CAAC;MAAA,CACJ,CAAC;MAED,IAAMmG,SAAS,GAAG;QAAEzD,MAAM,EAAE;UAAEc,KAAK,EAAE;QAAK;MAAE,CAAC;MAC7C8B,mBAAmB,CAAC,IAAAlC,WAAA,CAAAC,GAAA,EAAC+B,MAAA,CAAApD,OAAe;QAACoE,KAAK,EAAED;MAAU,CAAE,CAAC,CAAC;MAE1DE,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;IAC/D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFX,QAAQ,CAAC,2BAA2B,EAAE,YAAM;IAC1C,IAAMiB,SAAS,GAAG,CAChB;MAAE3F,cAAc,EAAE,CAAC;MAAEC,cAAc,EAAE,EAAE;MAAE2F,aAAa,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAmB,CAAC,EAC/F;MAAE7F,cAAc,EAAE,CAAC;MAAEC,cAAc,EAAE,EAAE;MAAE2F,aAAa,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAmB,CAAC,EAC/F;MAAE7F,cAAc,EAAE,CAAC;MAAEC,cAAc,EAAE,EAAE;MAAE2F,aAAa,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAsB,CAAC,EAClG;MAAE7F,cAAc,EAAE,CAAC;MAAEC,cAAc,EAAE,EAAE;MAAE2F,aAAa,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAkB,CAAC,CAC/F;IAEDF,SAAS,CAACG,OAAO,CAAC,UAAAC,KAAA,EAAuD;MAAA,IAApD/F,cAAc,GAAA+F,KAAA,CAAd/F,cAAc;QAAEC,cAAc,GAAA8F,KAAA,CAAd9F,cAAc;QAAE2F,aAAa,GAAAG,KAAA,CAAbH,aAAa;MAChEb,EAAE,CAAC,oBAAoBa,aAAa,QAAQ5F,cAAc,IAAIC,cAAc,QAAQ,EAAE,YAAM;QAC1F0E,iBAAiB,CAACG,kBAAkB,CAAC;UAAA,OACnCjH,uBAAuB,CAAC;YACtBa,aAAa,EAAE,IAAI;YACnBN,cAAc,EAAE,IAAI;YACpBS,eAAe,EAAE,IAAI;YACrBkB,KAAK,EAAE;cAAEC,cAAc,EAAdA,cAAc;cAAEC,cAAc,EAAdA;YAAe;UAC1C,CAAC,CAAC;QAAA,CACJ,CAAC;QAED,IAAM+E,SAAS,GAAG;UAAEzD,MAAM,EAAE;YAAEc,KAAK,EAAE;UAAK;QAAE,CAAC;QAC7C8B,mBAAmB,CAAC,IAAAlC,WAAA,CAAAC,GAAA,EAAC+B,MAAA,CAAApD,OAAe;UAACoE,KAAK,EAAED;QAAU,CAAE,CAAC,CAAC;QAE1D,IAAMgB,gBAAgB,GAAGb,mBAAM,CAACC,WAAW,CAAC,mBAAmB,CAAC;QAChEF,MAAM,CAACc,gBAAgB,CAACC,KAAK,CAAClE,QAAQ,CAAC,CAACmE,SAAS,CAAC,uBAAuBN,aAAa,EAAE,CAAC;QAEzF,IAAMO,YAAY,GAAGhB,mBAAM,CAACC,WAAW,CAAC,eAAe,CAAC;QACxDF,MAAM,CAACiB,YAAY,CAACF,KAAK,CAAClE,QAAQ,CAAC,CAACmE,SAAS,CAAC,WAAWlG,cAAc,IAAIC,cAAc,EAAE,CAAC;MAC9F,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFyE,QAAQ,CAAC,6BAA6B,EAAE,YAAM;IAC5CK,EAAE,CAAC,+BAA+B,EAAE,YAAM;MACxC,IAAMC,SAAS,GAAG;QAAEzD,MAAM,EAAE;UAAEc,KAAK,EAAE;QAAK;MAAE,CAAC;MAC7C8B,mBAAmB,CAAC,IAAAlC,WAAA,CAAAC,GAAA,EAAC+B,MAAA,CAAApD,OAAe;QAACoE,KAAK,EAAED;MAAU,CAAE,CAAC,CAAC;MAE1D,IAAMoB,OAAO,GAAGjB,mBAAM,CAACC,WAAW,CAAC,UAAU,CAAC;MAC9CG,sBAAS,CAACC,KAAK,CAACY,OAAO,CAAC;MAGxBlB,MAAM,CAACkB,OAAO,CAAC,CAACf,UAAU,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEFN,EAAE,CAAC,4BAA4B,EAAE,YAAM;MACrC,IAAMsB,mBAAmB,GAAGjH,IAAI,CAACC,EAAE,CAAC,CAAC;MAErCsF,iBAAiB,CAACG,kBAAkB,CAAC;QAAA,OACnCjH,uBAAuB,CAAC;UACtBa,aAAa,EAAE,IAAI;UACnBN,cAAc,EAAE,IAAI;UACpBS,eAAe,EAAE,IAAI;UACrBe,eAAe,EAAEyG;QACnB,CAAC,CAAC;MAAA,CACJ,CAAC;MAED,IAAMrB,SAAS,GAAG;QAAEzD,MAAM,EAAE;UAAEc,KAAK,EAAE;QAAK;MAAE,CAAC;MAC7C8B,mBAAmB,CAAC,IAAAlC,WAAA,CAAAC,GAAA,EAAC+B,MAAA,CAAApD,OAAe;QAACoE,KAAK,EAAED;MAAU,CAAE,CAAC,CAAC;MAE1D,IAAMsB,QAAQ,GAAGnB,mBAAM,CAACC,WAAW,CAAC,WAAW,CAAC;MAChDG,sBAAS,CAACC,KAAK,CAACc,QAAQ,CAAC;MAEzBpB,MAAM,CAACmB,mBAAmB,CAAC,CAACE,gBAAgB,CAAC,CAAC;IAChD,CAAC,CAAC;IAEFxB,EAAE,CAAC,+BAA+B,EAAE,YAAM;MACxCJ,iBAAiB,CAACG,kBAAkB,CAAC;QAAA,OACnCjH,uBAAuB,CAAC;UACtBa,aAAa,EAAE,IAAI;UACnBN,cAAc,EAAE,IAAI;UACpBS,eAAe,EAAE;QACnB,CAAC,CAAC;MAAA,CACJ,CAAC;MAED,IAAMmG,SAAS,GAAG;QAAEzD,MAAM,EAAE;UAAEc,KAAK,EAAE;QAAK;MAAE,CAAC;MAC7C8B,mBAAmB,CAAC,IAAAlC,WAAA,CAAAC,GAAA,EAAC+B,MAAA,CAAApD,OAAe;QAACoE,KAAK,EAAED;MAAU,CAAE,CAAC,CAAC;MAE1D,IAAMwB,WAAW,GAAGrB,mBAAM,CAACC,WAAW,CAAC,cAAc,CAAC;MACtDG,sBAAS,CAACC,KAAK,CAACgB,WAAW,CAAC;MAE5BtB,MAAM,CAAC/D,YAAY,CAAC,CAACuE,oBAAoB,CAAC,WAAW,CAAC;IACxD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFhB,QAAQ,CAAC,2BAA2B,EAAE,YAAM;IAC1CK,EAAE,CAAC,iDAAiD,EAAE,YAAM;MAC1D,IAAM0B,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAEvCA,MAAM,CAACX,OAAO,CAAC,UAAAzD,KAAK,EAAI;QACtB,IAAAqE,oBAAA,GAAoBvC,mBAAmB,CACrC,IAAAlC,WAAA,CAAAC,GAAA,EAAC+B,MAAA,CAAApD,OAAe;YAACoE,KAAK,EAAE;cAAE1D,MAAM,EAAE;gBAAEc,KAAK,EAALA;cAAM;YAAE;UAAE,CAAE,CAClD,CAAC;UAFOsE,OAAO,GAAAD,oBAAA,CAAPC,OAAO;QAIfzB,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,cAAc,CAAC,CAACa,KAAK,CAAClE,QAAQ,CAAC,CAACmE,SAAS,CAAC,UAAU7D,KAAK,EAAE,CAAC;QACtFsE,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF5B,EAAE,CAAC,qCAAqC,EAAE,YAAM;MAC9C,IAAMC,SAAS,GAAG;QAAEzD,MAAM,EAAE;UAAEc,KAAK,EAAE;QAAK;MAAE,CAAC;MAC7C8B,mBAAmB,CAAC,IAAAlC,WAAA,CAAAC,GAAA,EAAC+B,MAAA,CAAApD,OAAe;QAACoE,KAAK,EAAED;MAAU,CAAE,CAAC,CAAC;MAG1DE,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;MAC5DH,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;MAC9DH,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,uBAAuB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;MAChEH,MAAM,CAACC,mBAAM,CAACC,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;IAChE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAGFuB,QAAQ,CAAC,YAAM;EACbxH,IAAI,CAACyF,aAAa,CAAC,CAAC;EACpBzF,IAAI,CAACyH,YAAY,CAAC,CAAC;AACrB,CAAC,CAAC","ignoreList":[]}