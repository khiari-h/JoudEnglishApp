0f5dc7ecddb880ed712463731521f43d
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _Dimensions$get = _reactNative.Dimensions.get('window'),
  SCREEN_WIDTH = _Dimensions$get.width,
  SCREEN_HEIGHT = _Dimensions$get.height;
var styles = _reactNative.StyleSheet.create({
  modalContainer: {
    flex: 1,
    justifyContent: 'flex-end',
    alignItems: 'center'
  },
  backdrop: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: 'rgba(0, 0, 0, 0.5)'
  },
  contentContainer: Object.assign({
    backgroundColor: 'white',
    borderRadius: 12,
    overflow: 'hidden',
    width: SCREEN_WIDTH
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: -2
      },
      shadowOpacity: 0.25,
      shadowRadius: 4
    },
    android: {
      elevation: 10
    }
  })),
  centerPosition: {
    alignSelf: 'center',
    justifyContent: 'center',
    margin: 24
  },
  bottomPosition: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    width: SCREEN_WIDTH,
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    borderBottomLeftRadius: 0,
    borderBottomRightRadius: 0,
    paddingBottom: _reactNative.Platform.OS === 'ios' ? 34 : 16
  },
  topPosition: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    width: SCREEN_WIDTH,
    borderTopLeftRadius: 0,
    borderTopRightRadius: 0,
    borderBottomLeftRadius: 20,
    borderBottomRightRadius: 20,
    paddingTop: _reactNative.Platform.OS === 'ios' ? 44 : 16
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#F3F4F6'
  },
  title: {
    fontSize: 16,
    fontWeight: '600',
    color: '#1F2937',
    flex: 1
  },
  closeButton: {
    padding: 4
  },
  body: {
    padding: 16
  },
  scrollableBody: {
    maxHeight: SCREEN_HEIGHT * 0.6
  },
  scrollableContent: {
    padding: 16
  },
  footer: {
    padding: 16,
    borderTopWidth: 1,
    borderTopColor: '#F3F4F6'
  },
  keyboardAvoidingView: {
    width: '100%',
    justifyContent: 'flex-end',
    alignItems: 'center'
  }
});
var _default = exports.default = styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX0RpbWVuc2lvbnMkZ2V0IiwiRGltZW5zaW9ucyIsImdldCIsIlNDUkVFTl9XSURUSCIsIndpZHRoIiwiU0NSRUVOX0hFSUdIVCIsImhlaWdodCIsInN0eWxlcyIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJtb2RhbENvbnRhaW5lciIsImZsZXgiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJiYWNrZHJvcCIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsInJpZ2h0IiwiYm90dG9tIiwiYmFja2dyb3VuZENvbG9yIiwiY29udGVudENvbnRhaW5lciIsIk9iamVjdCIsImFzc2lnbiIsImJvcmRlclJhZGl1cyIsIm92ZXJmbG93IiwiUGxhdGZvcm0iLCJzZWxlY3QiLCJpb3MiLCJzaGFkb3dDb2xvciIsInNoYWRvd09mZnNldCIsInNoYWRvd09wYWNpdHkiLCJzaGFkb3dSYWRpdXMiLCJhbmRyb2lkIiwiZWxldmF0aW9uIiwiY2VudGVyUG9zaXRpb24iLCJhbGlnblNlbGYiLCJtYXJnaW4iLCJib3R0b21Qb3NpdGlvbiIsImJvcmRlclRvcExlZnRSYWRpdXMiLCJib3JkZXJUb3BSaWdodFJhZGl1cyIsImJvcmRlckJvdHRvbUxlZnRSYWRpdXMiLCJib3JkZXJCb3R0b21SaWdodFJhZGl1cyIsInBhZGRpbmdCb3R0b20iLCJPUyIsInRvcFBvc2l0aW9uIiwicGFkZGluZ1RvcCIsImhlYWRlciIsImZsZXhEaXJlY3Rpb24iLCJwYWRkaW5nSG9yaXpvbnRhbCIsInBhZGRpbmdWZXJ0aWNhbCIsImJvcmRlckJvdHRvbVdpZHRoIiwiYm9yZGVyQm90dG9tQ29sb3IiLCJ0aXRsZSIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImNvbG9yIiwiY2xvc2VCdXR0b24iLCJwYWRkaW5nIiwiYm9keSIsInNjcm9sbGFibGVCb2R5IiwibWF4SGVpZ2h0Iiwic2Nyb2xsYWJsZUNvbnRlbnQiLCJmb290ZXIiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlclRvcENvbG9yIiwia2V5Ym9hcmRBdm9pZGluZ1ZpZXciLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsic3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3R5bGVTaGVldCwgRGltZW5zaW9ucywgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG5jb25zdCB7IHdpZHRoOiBTQ1JFRU5fV0lEVEgsIGhlaWdodDogU0NSRUVOX0hFSUdIVCB9ID0gRGltZW5zaW9ucy5nZXQoJ3dpbmRvdycpO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIG1vZGFsQ29udGFpbmVyOiB7XG4gICAgZmxleDogMSxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtZW5kJywgLy8gQ2hhbmdlbWVudCBwcmluY2lwYWwgaWNpXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIH0sXG4gIGJhY2tkcm9wOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgdG9wOiAwLFxuICAgIGxlZnQ6IDAsXG4gICAgcmlnaHQ6IDAsXG4gICAgYm90dG9tOiAwLFxuICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC41KScsIC8vIEFqb3V0IGQndW4gZm9uZCBzZW1pLXRyYW5zcGFyZW50XG4gIH0sXG4gIGNvbnRlbnRDb250YWluZXI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgYm9yZGVyUmFkaXVzOiAxMixcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgd2lkdGg6IFNDUkVFTl9XSURUSCwgLy8gVXRpbGlzYXRpb24gZGUgbGEgbGFyZ2V1ciB0b3RhbGUgZGUgbCfDqWNyYW5cbiAgICAuLi5QbGF0Zm9ybS5zZWxlY3Qoe1xuICAgICAgaW9zOiB7XG4gICAgICAgIHNoYWRvd0NvbG9yOiAnIzAwMCcsXG4gICAgICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiAtMiB9LCAvLyBPbWJyZSB2ZXJzIGxlIGhhdXRcbiAgICAgICAgc2hhZG93T3BhY2l0eTogMC4yNSxcbiAgICAgICAgc2hhZG93UmFkaXVzOiA0LFxuICAgICAgfSxcbiAgICAgIGFuZHJvaWQ6IHtcbiAgICAgICAgZWxldmF0aW9uOiAxMCwgLy8gw4lsw6l2YXRpb24gcGx1cyBwcm9ub25jw6llXG4gICAgICB9LFxuICAgIH0pLFxuICB9LFxuICBjZW50ZXJQb3NpdGlvbjoge1xuICAgIGFsaWduU2VsZjogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIG1hcmdpbjogMjQsXG4gIH0sXG4gIGJvdHRvbVBvc2l0aW9uOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgYm90dG9tOiAwLFxuICAgIGxlZnQ6IDAsXG4gICAgcmlnaHQ6IDAsXG4gICAgd2lkdGg6IFNDUkVFTl9XSURUSCwgLy8gTGFyZ2V1ciB0b3RhbGUgZGUgbCfDqWNyYW5cbiAgICBib3JkZXJUb3BMZWZ0UmFkaXVzOiAyMCxcbiAgICBib3JkZXJUb3BSaWdodFJhZGl1czogMjAsXG4gICAgYm9yZGVyQm90dG9tTGVmdFJhZGl1czogMCxcbiAgICBib3JkZXJCb3R0b21SaWdodFJhZGl1czogMCxcbiAgICBwYWRkaW5nQm90dG9tOiBQbGF0Zm9ybS5PUyA9PT0gJ2lvcycgPyAzNCA6IDE2LCAvLyBTYWZlIGFyZWEgcG91ciBpT1NcbiAgfSxcbiAgdG9wUG9zaXRpb246IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICB0b3A6IDAsXG4gICAgbGVmdDogMCxcbiAgICByaWdodDogMCxcbiAgICB3aWR0aDogU0NSRUVOX1dJRFRILCAvLyBMYXJnZXVyIHRvdGFsZSBkZSBsJ8OpY3JhblxuICAgIGJvcmRlclRvcExlZnRSYWRpdXM6IDAsXG4gICAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IDAsXG4gICAgYm9yZGVyQm90dG9tTGVmdFJhZGl1czogMjAsXG4gICAgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6IDIwLFxuICAgIHBhZGRpbmdUb3A6IFBsYXRmb3JtLk9TID09PSAnaW9zJyA/IDQ0IDogMTYsIC8vIFNhZmUgYXJlYSBwb3VyIGlPU1xuICB9LFxuICBoZWFkZXI6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAxNixcbiAgICBwYWRkaW5nVmVydGljYWw6IDEyLFxuICAgIGJvcmRlckJvdHRvbVdpZHRoOiAxLFxuICAgIGJvcmRlckJvdHRvbUNvbG9yOiAnI0YzRjRGNicsXG4gIH0sXG4gIHRpdGxlOiB7XG4gICAgZm9udFNpemU6IDE2LFxuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICAgIGNvbG9yOiAnIzFGMjkzNycsXG4gICAgZmxleDogMSxcbiAgfSxcbiAgY2xvc2VCdXR0b246IHtcbiAgICBwYWRkaW5nOiA0LFxuICB9LFxuICBib2R5OiB7XG4gICAgcGFkZGluZzogMTYsXG4gIH0sXG4gIHNjcm9sbGFibGVCb2R5OiB7XG4gICAgbWF4SGVpZ2h0OiBTQ1JFRU5fSEVJR0hUICogMC42LFxuICB9LFxuICBzY3JvbGxhYmxlQ29udGVudDoge1xuICAgIHBhZGRpbmc6IDE2LFxuICB9LFxuICBmb290ZXI6IHtcbiAgICBwYWRkaW5nOiAxNixcbiAgICBib3JkZXJUb3BXaWR0aDogMSxcbiAgICBib3JkZXJUb3BDb2xvcjogJyNGM0Y0RjYnLFxuICB9LFxuICBrZXlib2FyZEF2b2lkaW5nVmlldzoge1xuICAgIHdpZHRoOiAnMTAwJScsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LWVuZCcsIC8vIENoYW5nZW1lbnQgcG91ciBhbGlnbmVyIGVuIGJhc1xuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxlcztcbiJdLCJtYXBw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