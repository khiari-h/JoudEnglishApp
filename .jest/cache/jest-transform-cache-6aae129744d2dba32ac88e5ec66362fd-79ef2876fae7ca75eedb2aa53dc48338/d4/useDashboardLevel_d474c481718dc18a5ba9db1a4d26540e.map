{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","_constants","cov_1cctt73fgg","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","ACTIVE_LEVEL_KEY","mapOldToNewLevel","level","mapping","A1","A2","B1","B2","C1","C2","useDashboardLevel","exports","_ref","_LANGUAGE_LEVELS$curr","progressData","progress","_ref2","useState","_ref3","_slicedToArray2","default","currentLevel","setCurrentLevel","_ref4","_ref5","isLoaded","setIsLoaded","_ref6","_ref7","levelFoundInStorage","setLevelFoundInStorage","useEffect","loadFromStorage","_ref8","_asyncToGenerator2","savedLevel","AsyncStorage","getItem","LANGUAGE_LEVELS","error","console","apply","arguments","levelFromProgress","mappedLevel","handleChangeActiveLevel","useCallback","_ref9","newLevel","setItem","_x","levelColor","color"],"sources":["useDashboardLevel.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { LANGUAGE_LEVELS } from \"../../../utils/constants\";\r\n\r\nconst ACTIVE_LEVEL_KEY = \"user_active_level\";\r\n\r\n// Fonction de mapping des anciens niveaux (peut être sortie du hook si non dynamique)\r\nconst mapOldToNewLevel = (level) => {\r\n  const mapping = { A1: \"1\", A2: \"2\", B1: \"3\", B2: \"4\", C1: \"5\", C2: \"6\" };\r\n  return mapping[level] || level;\r\n};\r\n\r\nexport const useDashboardLevel = ({ progress: progressData }) => {\r\n  const [currentLevel, setCurrentLevel] = useState(\"1\");\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  \r\n  // État pour savoir si une valeur a été chargée depuis le stockage.\r\n  // null = pas encore vérifié, true = trouvée, false = non trouvée.\r\n  const [levelFoundInStorage, setLevelFoundInStorage] = useState(null);\r\n\r\n  // Effet n°1 : Chargement initial depuis AsyncStorage.\r\n  // Ne s'exécute qu'une seule fois au montage grâce à `[]`.\r\n  useEffect(() => {\r\n    const loadFromStorage = async () => {\r\n      try {\r\n        const savedLevel = await AsyncStorage.getItem(ACTIVE_LEVEL_KEY);\r\n        if (savedLevel && LANGUAGE_LEVELS[savedLevel]) {\r\n          setCurrentLevel(mapOldToNewLevel(savedLevel));\r\n          setLevelFoundInStorage(true);\r\n        } else {\r\n          setLevelFoundInStorage(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur chargement niveau actif:', error);\r\n        setLevelFoundInStorage(false); // En cas d'erreur, on considère que rien n'a été trouvé\r\n      } finally {\r\n        setIsLoaded(true);\r\n      }\r\n    };\r\n\r\n    loadFromStorage();\r\n  }, []); // <-- La dépendance vide est la clé\r\n\r\n  // Effet n°2 : Synchronisation avec le contexte `progress`.\r\n  // S'exécute seulement après le chargement ET si aucun niveau n'a été trouvé en mémoire.\r\n  useEffect(() => {\r\n    // On n'agit que si le chargement est fini et qu'aucun niveau n'a été chargé depuis AsyncStorage\r\n    if (isLoaded && !levelFoundInStorage) {\r\n      const levelFromProgress = progressData?.currentLevel;\r\n      if (levelFromProgress) {\r\n        const mappedLevel = mapOldToNewLevel(levelFromProgress);\r\n        if (LANGUAGE_LEVELS[mappedLevel]) {\r\n          setCurrentLevel(mappedLevel);\r\n        }\r\n      }\r\n    }\r\n  }, [isLoaded, levelFoundInStorage, progressData]);\r\n\r\n  // Le reste du hook est mémorisé avec useCallback pour la performance\r\n  const handleChangeActiveLevel = useCallback(async (newLevel) => {\r\n    if (!LANGUAGE_LEVELS[newLevel]) return;\r\n\r\n    setCurrentLevel(newLevel);\r\n    try {\r\n      await AsyncStorage.setItem(ACTIVE_LEVEL_KEY, newLevel);\r\n      // Si l'utilisateur change de niveau, on considère que la source de vérité est maintenant le stockage\r\n      setLevelFoundInStorage(true); \r\n    } catch (error) {\r\n      console.error('Erreur sauvegarde niveau actif:', error);\r\n    }\r\n  }, []);\r\n\r\n  const levelColor = LANGUAGE_LEVELS[currentLevel]?.color || \"#3B82F6\";\r\n\r\n  return {\r\n    currentLevel,\r\n    handleChangeActiveLevel,\r\n    levelColor,\r\n    isLoaded,\r\n  };\r\n};"],"mappings":"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","ignoreList":[]}