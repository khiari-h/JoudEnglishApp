cb4fdd11e63f4361661d086600cf22c5
function cov_1hixxsa0v6() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\AssessmentNavigation\\index.js";
  var hash = "be2801e245f5a9c6db855a0a7939791fc832fc75";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\level-assessment\\AssessmentNavigation\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 88,
          column: 1
        }
      },
      "1": {
        start: {
          line: 32,
          column: 17
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "2": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "3": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 51,
          column: 6
        }
      },
      "4": {
        start: {
          line: 55,
          column: 2
        },
        end: {
          line: 87,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 30
          }
        },
        loc: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 31
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 24
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 52,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 52,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 35
          }
        }, {
          start: {
            line: 41,
            column: 39
          },
          end: {
            line: 41,
            column: 60
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 31
          },
          end: {
            line: 42,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 57
          },
          end: {
            line: 42,
            column: 66
          }
        }, {
          start: {
            line: 42,
            column: 69
          },
          end: {
            line: 42,
            column: 79
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 40
          },
          end: {
            line: 73,
            column: 50
          }
        }, {
          start: {
            line: 73,
            column: 53
          },
          end: {
            line: 73,
            column: 62
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 79,
            column: 20
          },
          end: {
            line: 79,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 46
          },
          end: {
            line: 79,
            column: 60
          }
        }, {
          start: {
            line: 79,
            column: 63
          },
          end: {
            line: 79,
            column: 78
          }
        }],
        line: 79
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "be2801e245f5a9c6db855a0a7939791fc832fc75"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1hixxsa0v6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hixxsa0v6();
import { View, TouchableOpacity, Text } from "react-native";
import NavigationButtons from "../../../../components/exercise-common/NavigationButtons";
import createStyles from "./style";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_1hixxsa0v6().s[0]++;
var AssessmentNavigation = function AssessmentNavigation(_ref) {
  var showFeedback = _ref.showFeedback,
    selectedAnswer = _ref.selectedAnswer,
    isLastQuestionInSection = _ref.isLastQuestionInSection,
    canGoPrevious = _ref.canGoPrevious,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? (cov_1hixxsa0v6().b[0][0]++, "#3b82f6") : _ref$levelColor,
    onValidateAnswer = _ref.onValidateAnswer,
    onTryAgain = _ref.onTryAgain,
    onNext = _ref.onNext,
    onPrevious = _ref.onPrevious;
  cov_1hixxsa0v6().f[0]++;
  var styles = (cov_1hixxsa0v6().s[1]++, createStyles(levelColor));
  cov_1hixxsa0v6().s[2]++;
  if (!showFeedback) {
    cov_1hixxsa0v6().b[1][0]++;
    cov_1hixxsa0v6().s[3]++;
    return _jsx(View, {
      style: styles.container,
      children: _jsx(TouchableOpacity, {
        style: [styles.checkButton, (cov_1hixxsa0v6().b[2][0]++, selectedAnswer === null) && (cov_1hixxsa0v6().b[2][1]++, styles.disabledButton), {
          backgroundColor: selectedAnswer === null ? (cov_1hixxsa0v6().b[3][0]++, "#cbd5e1") : (cov_1hixxsa0v6().b[3][1]++, levelColor)
        }],
        onPress: onValidateAnswer,
        disabled: selectedAnswer === null,
        activeOpacity: 0.8,
        children: _jsx(Text, {
          style: styles.checkButtonText,
          children: "Check Answer"
        })
      })
    });
  } else {
    cov_1hixxsa0v6().b[1][1]++;
  }
  cov_1hixxsa0v6().s[4]++;
  return _jsx(View, {
    style: styles.container,
    children: _jsxs(View, {
      style: styles.feedbackActionsRow,
      children: [_jsx(TouchableOpacity, {
        style: [styles.tryAgainButton, {
          borderColor: levelColor
        }],
        onPress: onTryAgain,
        activeOpacity: 0.7,
        children: _jsx(Text, {
          style: [styles.tryAgainButtonText, {
            color: levelColor
          }],
          children: "Try Again"
        })
      }), _jsx(View, {
        style: styles.nextButtonContainer,
        children: _jsx(NavigationButtons, {
          onNext: onNext,
          onPrevious: canGoPrevious ? (cov_1hixxsa0v6().b[4][0]++, onPrevious) : (cov_1hixxsa0v6().b[4][1]++, undefined),
          disablePrevious: !canGoPrevious,
          disableNext: false,
          primaryColor: levelColor,
          isLast: false,
          buttonLabels: {
            next: isLastQuestionInSection ? (cov_1hixxsa0v6().b[5][0]++, "Next Section") : (cov_1hixxsa0v6().b[5][1]++, "Next Question"),
            previous: "Previous"
          },
          layout: "minimal"
        })
      })]
    })
  });
};
export default AssessmentNavigation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,