77a8b8e7ce0f595a283c260db35d7018
function cov_2n047x7a6d() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesCard\\index.js";
  var hash = "76bbc5ee87e5c6af73bef9f3437fb9daff28333d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\word-games\\WordGamesCard\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 110,
          column: 1
        }
      },
      "1": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "2": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "3": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "4": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "5": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "6": {
        start: {
          line: 76,
          column: 2
        },
        end: {
          line: 109,
          column: 4
        }
      },
      "7": {
        start: {
          line: 113,
          column: 0
        },
        end: {
          line: 129,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 22
          },
          end: {
            line: 24,
            column: 23
          }
        },
        loc: {
          start: {
            line: 35,
            column: 6
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 35
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 27
          },
          end: {
            line: 37,
            column: 28
          }
        },
        loc: {
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 74,
            column: 3
          }
        },
        line: 37
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 50,
            column: 10
          }
        }, {
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 61,
            column: 10
          }
        }, {
          start: {
            line: 62,
            column: 6
          },
          end: {
            line: 72,
            column: 10
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 91,
            column: 9
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 9
          },
          end: {
            line: 91,
            column: 26
          }
        }, {
          start: {
            line: 92,
            column: 10
          },
          end: {
            line: 92,
            column: 67
          }
        }],
        line: 91
      },
      "2": {
        loc: {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 99,
            column: 21
          }
        }, {
          start: {
            line: 100,
            column: 10
          },
          end: {
            line: 105,
            column: 12
          }
        }],
        line: 99
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "76bbc5ee87e5c6af73bef9f3437fb9daff28333d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2n047x7a6d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2n047x7a6d();
import { View, Text, ScrollView, Animated } from "react-native";
import PropTypes from 'prop-types';
import MatchingGame from "../MatchingGame";
import CategorizationGame from "../CategorizationGame";
import FeedbackMessage from "../FeedbackMessage";
import styles from "./style";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_2n047x7a6d().s[0]++;
var WordGamesCard = function WordGamesCard(_ref) {
  var currentGame = _ref.currentGame,
    selectedItems = _ref.selectedItems,
    matchedItems = _ref.matchedItems,
    shuffledOptions = _ref.shuffledOptions,
    showFeedback = _ref.showFeedback,
    isCorrect = _ref.isCorrect,
    levelColor = _ref.levelColor,
    fadeAnim = _ref.fadeAnim,
    bounceAnim = _ref.bounceAnim,
    onSelectItem = _ref.onSelectItem;
  cov_2n047x7a6d().f[0]++;
  cov_2n047x7a6d().s[1]++;
  var renderGameByType = function renderGameByType() {
    cov_2n047x7a6d().f[1]++;
    cov_2n047x7a6d().s[2]++;
    switch (currentGame.type) {
      case "matching":
        cov_2n047x7a6d().b[0][0]++;
        cov_2n047x7a6d().s[3]++;
        return _jsx(MatchingGame, {
          game: currentGame,
          selectedItems: selectedItems,
          matchedItems: matchedItems,
          shuffledOptions: shuffledOptions,
          showFeedback: showFeedback,
          levelColor: levelColor,
          onSelectItem: onSelectItem
        });
      case "categorization":
        cov_2n047x7a6d().b[0][1]++;
        cov_2n047x7a6d().s[4]++;
        return _jsx(CategorizationGame, {
          game: currentGame,
          selectedItems: selectedItems,
          shuffledOptions: shuffledOptions,
          showFeedback: showFeedback,
          levelColor: levelColor,
          onSelectItem: onSelectItem
        });
      default:
        cov_2n047x7a6d().b[0][2]++;
        cov_2n047x7a6d().s[5]++;
        return _jsxs(View, {
          style: styles.errorContainer,
          children: [_jsxs(Text, {
            style: styles.errorText,
            children: ["Unsupported game type: ", currentGame.type]
          }), _jsx(Text, {
            style: styles.errorSubText,
            children: "Only matching and categorization games are supported."
          })]
        });
    }
  };
  cov_2n047x7a6d().s[6]++;
  return _jsx(ScrollView, {
    style: styles.scrollView,
    contentContainerStyle: styles.contentContainer,
    children: _jsxs(Animated.View, {
      style: [styles.gameCardContainer, {
        opacity: fadeAnim,
        transform: [{
          scale: bounceAnim
        }]
      }],
      children: [(cov_2n047x7a6d().b[1][0]++, currentGame.title) && (cov_2n047x7a6d().b[1][1]++, _jsx(Text, {
        style: styles.gameTitle,
        children: currentGame.title
      })), renderGameByType(), (cov_2n047x7a6d().b[2][0]++, showFeedback) && (cov_2n047x7a6d().b[2][1]++, _jsx(FeedbackMessage, {
        isCorrect: isCorrect,
        successMessage: currentGame.successMessage,
        failureMessage: currentGame.failureMessage,
        levelColor: levelColor
      }))]
    })
  });
};
cov_2n047x7a6d().s[7]++;
WordGamesCard.propTypes = {
  currentGame: PropTypes.shape({
    type: PropTypes.oneOf(['matching', 'categorization']).isRequired,
    title: PropTypes.string,
    successMessage: PropTypes.string,
    failureMessage: PropTypes.string
  }).isRequired,
  selectedItems: PropTypes.array.isRequired,
  matchedItems: PropTypes.array.isRequired,
  shuffledOptions: PropTypes.array.isRequired,
  showFeedback: PropTypes.bool.isRequired,
  isCorrect: PropTypes.bool.isRequired,
  levelColor: PropTypes.string.isRequired,
  fadeAnim: PropTypes.object.isRequired,
  bounceAnim: PropTypes.object.isRequired,
  onSelectItem: PropTypes.func.isRequired
};
export default WordGamesCard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,