{"version":3,"names":["View","Text","ScrollView","Animated","PropTypes","MatchingGame","CategorizationGame","FeedbackMessage","styles","jsx","_jsx","jsxs","_jsxs","cov_2n047x7a6d","s","WordGamesCard","_ref","currentGame","selectedItems","matchedItems","shuffledOptions","showFeedback","isCorrect","levelColor","fadeAnim","bounceAnim","onSelectItem","f","renderGameByType","type","b","game","style","errorContainer","children","errorText","errorSubText","scrollView","contentContainerStyle","contentContainer","gameCardContainer","opacity","transform","scale","title","gameTitle","successMessage","failureMessage","propTypes","shape","oneOf","isRequired","string","array","bool","object","func"],"sources":["index.js"],"sourcesContent":["// src/screens/exercises/wordGames/WordGamesCard/index.js\r\nimport { View, Text, ScrollView, Animated } from \"react-native\";\r\nimport PropTypes from 'prop-types';\r\nimport MatchingGame from \"../MatchingGame\";\r\nimport CategorizationGame from \"../CategorizationGame\";\r\nimport FeedbackMessage from \"../FeedbackMessage\";\r\nimport styles from \"./style\";\r\n\r\n/**\r\n * Carte principale contenant le jeu actuel\r\n * Version simplifiée - Matching et Categorization uniquement\r\n *\r\n * @param {Object} currentGame - Jeu actuel à afficher\r\n * @param {Array} selectedItems - Items sélectionnés par l'utilisateur\r\n * @param {Array} matchedItems - Items correctement appariés (pour matching)\r\n * @param {Array} shuffledOptions - Options mélangées pour le jeu\r\n * @param {boolean} showFeedback - Indique si le feedback doit être affiché\r\n * @param {boolean} isCorrect - Indique si la réponse est correcte\r\n * @param {string} levelColor - Couleur associée au niveau\r\n * @param {Object} fadeAnim - Animation de fondu\r\n * @param {Object} bounceAnim - Animation de rebond\r\n * @param {Function} onSelectItem - Fonction appelée lors de la sélection d'un item\r\n */\r\nconst WordGamesCard = ({\r\n  currentGame,\r\n  selectedItems,\r\n  matchedItems,\r\n  shuffledOptions,\r\n  showFeedback,\r\n  isCorrect,\r\n  levelColor,\r\n  fadeAnim,\r\n  bounceAnim,\r\n  onSelectItem,\r\n}) => {\r\n  // Rendu en fonction du type de jeu (seulement matching et categorization)\r\n  const renderGameByType = () => {\r\n    switch (currentGame.type) {\r\n      case \"matching\":\r\n        return (\r\n          <MatchingGame\r\n            game={currentGame}\r\n            selectedItems={selectedItems}\r\n            matchedItems={matchedItems}\r\n            shuffledOptions={shuffledOptions}\r\n            showFeedback={showFeedback}\r\n            levelColor={levelColor}\r\n            onSelectItem={onSelectItem}\r\n          />\r\n        );\r\n      case \"categorization\":\r\n        return (\r\n          <CategorizationGame\r\n            game={currentGame}\r\n            selectedItems={selectedItems}\r\n            shuffledOptions={shuffledOptions}\r\n            showFeedback={showFeedback}\r\n            levelColor={levelColor}\r\n            onSelectItem={onSelectItem}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <View style={styles.errorContainer}>\r\n            <Text style={styles.errorText}>\r\n              Unsupported game type: {currentGame.type}\r\n            </Text>\r\n            <Text style={styles.errorSubText}>\r\n              Only matching and categorization games are supported.\r\n            </Text>\r\n          </View>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      style={styles.scrollView}\r\n      contentContainerStyle={styles.contentContainer}\r\n    >\r\n      <Animated.View\r\n        style={[\r\n          styles.gameCardContainer,\r\n          {\r\n            opacity: fadeAnim,\r\n            transform: [{ scale: bounceAnim }],\r\n          },\r\n        ]}\r\n      >\r\n        {/* Titre du jeu */}\r\n        {currentGame.title && (\r\n          <Text style={styles.gameTitle}>{currentGame.title}</Text>\r\n        )}\r\n\r\n        {/* Rendu du jeu actuel */}\r\n        {renderGameByType()}\r\n\r\n        {/* Feedback après vérification */}\r\n        {showFeedback && (\r\n          <FeedbackMessage\r\n            isCorrect={isCorrect}\r\n            successMessage={currentGame.successMessage}\r\n            failureMessage={currentGame.failureMessage}\r\n            levelColor={levelColor}\r\n          />\r\n        )}\r\n      </Animated.View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\n// PropTypes pour le composant principal WordGamesCard\r\nWordGamesCard.propTypes = {\r\n  currentGame: PropTypes.shape({\r\n    type: PropTypes.oneOf(['matching', 'categorization']).isRequired,\r\n    title: PropTypes.string,\r\n    successMessage: PropTypes.string,\r\n    failureMessage: PropTypes.string,\r\n  }).isRequired,\r\n  selectedItems: PropTypes.array.isRequired,\r\n  matchedItems: PropTypes.array.isRequired,\r\n  shuffledOptions: PropTypes.array.isRequired,\r\n  showFeedback: PropTypes.bool.isRequired,\r\n  isCorrect: PropTypes.bool.isRequired,\r\n  levelColor: PropTypes.string.isRequired,\r\n  fadeAnim: PropTypes.object.isRequired,\r\n  bounceAnim: PropTypes.object.isRequired,\r\n  onSelectItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default WordGamesCard;\r\n"],"mappings":"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","ignoreList":[]}