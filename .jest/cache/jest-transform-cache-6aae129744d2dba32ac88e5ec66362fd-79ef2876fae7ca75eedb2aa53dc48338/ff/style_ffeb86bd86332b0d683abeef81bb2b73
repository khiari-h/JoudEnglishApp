921bb022d596a0b17ffe7d785fc0eb7e
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var styles = _reactNative.StyleSheet.create({
  button: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 8,
    overflow: 'hidden'
  },
  fullWidth: {
    width: '100%'
  },
  smallButton: {
    paddingVertical: 8,
    paddingHorizontal: 12,
    borderRadius: 6,
    minHeight: 36
  },
  mediumButton: {
    paddingVertical: 10,
    paddingHorizontal: 16,
    borderRadius: 8,
    minHeight: 44
  },
  largeButton: {
    paddingVertical: 12,
    paddingHorizontal: 20,
    borderRadius: 10,
    minHeight: 52
  },
  text: {
    fontWeight: '600',
    textAlign: 'center'
  },
  smallText: {
    fontSize: 14
  },
  mediumText: {
    fontSize: 16
  },
  largeText: {
    fontSize: 18
  },
  uppercase: {
    textTransform: 'uppercase',
    letterSpacing: 0.5
  },
  contentContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center'
  },
  leftIconContainer: {
    marginRight: 8
  },
  rightIconContainer: {
    marginLeft: 8
  },
  withElevation: Object.assign({}, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.1,
      shadowRadius: 4
    },
    android: {
      elevation: 3
    }
  })),
  rounded: {
    borderRadius: 50
  }
});
var _default = exports.default = styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwic3R5bGVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImJ1dHRvbiIsImZsZXhEaXJlY3Rpb24iLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJib3JkZXJSYWRpdXMiLCJvdmVyZmxvdyIsImZ1bGxXaWR0aCIsIndpZHRoIiwic21hbGxCdXR0b24iLCJwYWRkaW5nVmVydGljYWwiLCJwYWRkaW5nSG9yaXpvbnRhbCIsIm1pbkhlaWdodCIsIm1lZGl1bUJ1dHRvbiIsImxhcmdlQnV0dG9uIiwidGV4dCIsImZvbnRXZWlnaHQiLCJ0ZXh0QWxpZ24iLCJzbWFsbFRleHQiLCJmb250U2l6ZSIsIm1lZGl1bVRleHQiLCJsYXJnZVRleHQiLCJ1cHBlcmNhc2UiLCJ0ZXh0VHJhbnNmb3JtIiwibGV0dGVyU3BhY2luZyIsImNvbnRlbnRDb250YWluZXIiLCJsZWZ0SWNvbkNvbnRhaW5lciIsIm1hcmdpblJpZ2h0IiwicmlnaHRJY29uQ29udGFpbmVyIiwibWFyZ2luTGVmdCIsIndpdGhFbGV2YXRpb24iLCJPYmplY3QiLCJhc3NpZ24iLCJQbGF0Zm9ybSIsInNlbGVjdCIsImlvcyIsInNoYWRvd0NvbG9yIiwic2hhZG93T2Zmc2V0IiwiaGVpZ2h0Iiwic2hhZG93T3BhY2l0eSIsInNoYWRvd1JhZGl1cyIsImFuZHJvaWQiLCJlbGV2YXRpb24iLCJyb3VuZGVkIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbInN0eWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb21wb25lbnRzL3VpL0J1dHRvbi9zdHlsZS5qc1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGJ1dHRvbjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBib3JkZXJSYWRpdXM6IDgsXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nLCAvLyBJbXBvcnRhbnQgcG91ciBsZXMgZWZmZXRzIHJpcHBsZSBzdXIgQW5kcm9pZFxuICB9LFxuICBmdWxsV2lkdGg6IHtcbiAgICB3aWR0aDogJzEwMCUnLFxuICB9LFxuICAvLyBTdHlsZXMgZGUgdGFpbGxlXG4gIHNtYWxsQnV0dG9uOiB7XG4gICAgcGFkZGluZ1ZlcnRpY2FsOiA4LFxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAxMixcbiAgICBib3JkZXJSYWRpdXM6IDYsXG4gICAgbWluSGVpZ2h0OiAzNixcbiAgfSxcbiAgbWVkaXVtQnV0dG9uOiB7XG4gICAgcGFkZGluZ1ZlcnRpY2FsOiAxMCxcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTYsXG4gICAgYm9yZGVyUmFkaXVzOiA4LFxuICAgIG1pbkhlaWdodDogNDQsXG4gIH0sXG4gIGxhcmdlQnV0dG9uOiB7XG4gICAgcGFkZGluZ1ZlcnRpY2FsOiAxMixcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMjAsXG4gICAgYm9yZGVyUmFkaXVzOiAxMCxcbiAgICBtaW5IZWlnaHQ6IDUyLFxuICB9LFxuICAvLyBTdHlsZXMgZGUgdGV4dGVcbiAgdGV4dDoge1xuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gIH0sXG4gIHNtYWxsVGV4dDoge1xuICAgIGZvbnRTaXplOiAxNCxcbiAgfSxcbiAgbWVkaXVtVGV4dDoge1xuICAgIGZvbnRTaXplOiAxNixcbiAgfSxcbiAgbGFyZ2VUZXh0OiB7XG4gICAgZm9udFNpemU6IDE4LFxuICB9LFxuICB1cHBlcmNhc2U6IHtcbiAgICB0ZXh0VHJhbnNmb3JtOiAndXBwZXJjYXNlJyxcbiAgICBsZXR0ZXJTcGFjaW5nOiAwLjUsXG4gIH0sXG4gIC8vIENvbnRhaW5lciBwb3VyIGxlIGNvbnRlbnVcbiAgY29udGVudENvbnRhaW5lcjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgfSxcbiAgbGVmdEljb25Db250YWluZXI6IHtcbiAgICBtYXJnaW5SaWdodDogOCxcbiAgfSxcbiAgcmlnaHRJY29uQ29udGFpbmVyOiB7XG4gICAgbWFyZ2luTGVmdDogOCxcbiAgfSxcbiAgLy8gT21icmUgcG91ciBsZXMgYm91dG9ucyBhdmVjIMOpbMOpdmF0aW9uXG4gIHdpdGhFbGV2YXRpb246IHtcbiAgICAuLi5QbGF0Zm9ybS5zZWxlY3Qoe1xuICAgICAgaW9zOiB7XG4gICAgICAgIHNoYWRvd0NvbG9yOiAnIzAwMCcsXG4gICAgICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiAyIH0sXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMSxcbiAgICAgICAgc2hhZG93UmFkaXVzOiA0LFxuICAgICAgfSxcbiAgICAgIGFuZHJvaWQ6IHtcbiAgICAgICAgZWxldmF0aW9uOiAzLFxuICAgICAgfSxcbiAgICB9KSxcbiAgfSxcbiAgLy8gU3R5bGUgcG91ciBib3V0b25zIMOgIGNvaW5zIHBsdXMgYXJyb25kaXMgKHBpbGwgc3R5bGUpXG4gIHJvdW5kZWQ6IHtcbiAgICBib3JkZXJSYWRpdXM6IDUwLCAvLyBHcmFuZCByYXlvbiBwb3VyIG9idGVuaXIgdW4gZWZmZXQgXCJwaWxsXCJcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBzdHlsZXM7XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFFQSxJQUFNQyxNQUFNLEdBQUdDLHVCQUFVLENBQUNDLE1BQU0sQ0FBQztFQUMvQkMsTUFBTSxFQUFFO0lBQ05DLGFBQWEsRUFBRSxLQUFLO0lBQ3BCQyxjQUFjLEVBQUUsUUFBUTtJQUN4QkMsVUFBVSxFQUFFLFFBQVE7SUFDcEJDLFlBQVksRUFBRSxDQUFDO0lBQ2ZDLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDREMsU0FBUyxFQUFFO0lBQ1RDLEtBQUssRUFBRTtFQUNULENBQUM7RUFFREMsV0FBVyxFQUFFO0lBQ1hDLGVBQWUsRUFBRSxDQUFDO0lBQ2xCQyxpQkFBaUIsRUFBRSxFQUFFO0lBQ3JCTixZQUFZLEVBQUUsQ0FBQztJQUNmTyxTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RDLFlBQVksRUFBRTtJQUNaSCxlQUFlLEVBQUUsRUFBRTtJQUNuQkMsaUJBQWlCLEVBQUUsRUFBRTtJQUNyQk4sWUFBWSxFQUFFLENBQUM7SUFDZk8sU0FBUyxFQUFFO0VBQ2IsQ0FBQztFQUNERSxXQUFXLEVBQUU7SUFDWEosZUFBZSxFQUFFLEVBQUU7SUFDbkJDLGlCQUFpQixFQUFFLEVBQUU7SUFDckJOLFlBQVksRUFBRSxFQUFFO0lBQ2hCTyxTQUFTLEVBQUU7RUFDYixDQUFDO0VBRURHLElBQUksRUFBRTtJQUNKQyxVQUFVLEVBQUUsS0FBSztJQUNqQkMsU0FBUyxFQUFFO0VBQ2IsQ0FBQztFQUNEQyxTQUFTLEVBQUU7SUFDVEMsUUFBUSxFQUFFO0VBQ1osQ0FBQztFQUNEQyxVQUFVLEVBQUU7SUFDVkQsUUFBUSxFQUFFO0VBQ1osQ0FBQztFQUNERSxTQUFTLEVBQUU7SUFDVEYsUUFBUSxFQUFFO0VBQ1osQ0FBQztFQUNERyxTQUFTLEVBQUU7SUFDVEMsYUFBYSxFQUFFLFdBQVc7SUFDMUJDLGFBQWEsRUFBRTtFQUNqQixDQUFDO0VBRURDLGdCQUFnQixFQUFFO0lBQ2hCdkIsYUFBYSxFQUFFLEtBQUs7SUFDcEJFLFVBQVUsRUFBRSxRQUFRO0lBQ3BCRCxjQUFjLEVBQUU7RUFDbEIsQ0FBQztFQUNEdUIsaUJBQWlCLEVBQUU7SUFDakJDLFdBQVcsRUFBRTtFQUNmLENBQUM7RUFDREMsa0JBQWtCLEVBQUU7SUFDbEJDLFVBQVUsRUFBRTtFQUNkLENBQUM7RUFFREMsYUFBYSxFQUFBQyxNQUFBLENBQUFDLE1BQUEsS0FDUkMscUJBQVEsQ0FBQ0MsTUFBTSxDQUFDO0lBQ2pCQyxHQUFHLEVBQUU7TUFDSEMsV0FBVyxFQUFFLE1BQU07TUFDbkJDLFlBQVksRUFBRTtRQUFFN0IsS0FBSyxFQUFFLENBQUM7UUFBRThCLE1BQU0sRUFBRTtNQUFFLENBQUM7TUFDckNDLGFBQWEsRUFBRSxHQUFHO01BQ2xCQyxZQUFZLEVBQUU7SUFDaEIsQ0FBQztJQUNEQyxPQUFPLEVBQUU7TUFDUEMsU0FBUyxFQUFFO0lBQ2I7RUFDRixDQUFDLENBQUMsQ0FDSDtFQUVEQyxPQUFPLEVBQUU7SUFDUHRDLFlBQVksRUFBRTtFQUNoQjtBQUNGLENBQUMsQ0FBQztBQUFDLElBQUF1QyxRQUFBLEdBQUFDLE9BQUEsQ0FBQUMsT0FBQSxHQUVZaEQsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==