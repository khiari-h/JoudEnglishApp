13b84c97d90ba32afb0f3a997f154a10
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CurrentLevelProvider = CurrentLevelProvider;
exports.useCurrentLevel = useCurrentLevel;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_22z9cams1k() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\contexts\\CurrentLevelContext.js";
  var hash = "2c8a88bff5f5640f23fd76e42e8605212894d635";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\contexts\\CurrentLevelContext.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 28
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "1": {
        start: {
          line: 9,
          column: 42
        },
        end: {
          line: 9,
          column: 64
        }
      },
      "2": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 15,
          column: 21
        }
      },
      "3": {
        start: {
          line: 12,
          column: 38
        },
        end: {
          line: 15,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 21,
          column: 4
        }
      },
      "5": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 27,
          column: 2
        }
      },
      "6": {
        start: {
          line: 31,
          column: 18
        },
        end: {
          line: 31,
          column: 49
        }
      },
      "7": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 83
        }
      },
      "9": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 35,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "CurrentLevelProvider",
        decl: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 36
          }
        },
        loc: {
          start: {
            line: 8,
            column: 71
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 12,
            column: 32
          }
        },
        loc: {
          start: {
            line: 12,
            column: 38
          },
          end: {
            line: 15,
            column: 3
          }
        },
        line: 12
      },
      "2": {
        name: "useCurrentLevel",
        decl: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 31
          }
        },
        loc: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 30
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 49
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 64
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2c8a88bff5f5640f23fd76e42e8605212894d635"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_22z9cams1k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22z9cams1k();
var CurrentLevelContext = (cov_22z9cams1k().s[0]++, (0, _react.createContext)());
function CurrentLevelProvider(_ref) {
  var children = _ref.children,
    _ref$initialLevel = _ref.initialLevel,
    initialLevel = _ref$initialLevel === void 0 ? (cov_22z9cams1k().b[0][0]++, "1") : _ref$initialLevel;
  cov_22z9cams1k().f[0]++;
  var _ref2 = (cov_22z9cams1k().s[1]++, (0, _react.useState)(initialLevel)),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    currentLevel = _ref3[0],
    setCurrentLevel = _ref3[1];
  var contextValue = (cov_22z9cams1k().s[2]++, (0, _react.useMemo)(function () {
    cov_22z9cams1k().f[1]++;
    cov_22z9cams1k().s[3]++;
    return {
      currentLevel: currentLevel,
      setCurrentLevel: setCurrentLevel
    };
  }, [currentLevel]));
  cov_22z9cams1k().s[4]++;
  return (0, _jsxRuntime.jsx)(CurrentLevelContext.Provider, {
    value: contextValue,
    children: children
  });
}
cov_22z9cams1k().s[5]++;
CurrentLevelProvider.propTypes = {
  children: _propTypes.default.node.isRequired,
  initialLevel: _propTypes.default.string
};
function useCurrentLevel() {
  cov_22z9cams1k().f[2]++;
  var context = (cov_22z9cams1k().s[6]++, (0, _react.useContext)(CurrentLevelContext));
  cov_22z9cams1k().s[7]++;
  if (!context) {
    cov_22z9cams1k().b[1][0]++;
    cov_22z9cams1k().s[8]++;
    throw new Error("useCurrentLevel doit être utilisé dans CurrentLevelProvider");
  } else {
    cov_22z9cams1k().b[1][1]++;
  }
  cov_22z9cams1k().s[9]++;
  return context;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3Byb3BUeXBlcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfanN4UnVudGltZSIsImNvdl8yMno5Y2FtczFrIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIkN1cnJlbnRMZXZlbENvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwiQ3VycmVudExldmVsUHJvdmlkZXIiLCJfcmVmIiwiY2hpbGRyZW4iLCJfcmVmJGluaXRpYWxMZXZlbCIsImluaXRpYWxMZXZlbCIsIl9yZWYyIiwidXNlU3RhdGUiLCJfcmVmMyIsIl9zbGljZWRUb0FycmF5MiIsImRlZmF1bHQiLCJjdXJyZW50TGV2ZWwiLCJzZXRDdXJyZW50TGV2ZWwiLCJjb250ZXh0VmFsdWUiLCJ1c2VNZW1vIiwianN4IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm5vZGUiLCJpc1JlcXVpcmVkIiwic3RyaW5nIiwidXNlQ3VycmVudExldmVsIiwiY29udGV4dCIsInVzZUNvbnRleHQiLCJFcnJvciJdLCJzb3VyY2VzIjpbIkN1cnJlbnRMZXZlbENvbnRleHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuXHJcbi8vIENyw6llIGxlIGNvbnRleHRlXHJcbmNvbnN0IEN1cnJlbnRMZXZlbENvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XHJcblxyXG4vLyBQcm92aWRlciBwb3VyIGVuZ2xvYmVyIGwnYXBwXHJcbmV4cG9ydCBmdW5jdGlvbiBDdXJyZW50TGV2ZWxQcm92aWRlcih7IGNoaWxkcmVuLCBpbml0aWFsTGV2ZWwgPSBcIjFcIiB9KSB7XHJcbiAgY29uc3QgW2N1cnJlbnRMZXZlbCwgc2V0Q3VycmVudExldmVsXSA9IHVzZVN0YXRlKGluaXRpYWxMZXZlbCk7XHJcblxyXG4gIC8vIE3DqW1vcmlzZSBsYSB2YWxldXIgZHUgY29udGV4dGUgcG91ciDDqXZpdGVyIGxlcyByZS1yZW5kdXMgaW51dGlsZXNcclxuICBjb25zdCBjb250ZXh0VmFsdWUgPSB1c2VNZW1vKCgpID0+ICh7XHJcbiAgICBjdXJyZW50TGV2ZWwsXHJcbiAgICBzZXRDdXJyZW50TGV2ZWxcclxuICB9KSwgW2N1cnJlbnRMZXZlbF0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEN1cnJlbnRMZXZlbENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2NvbnRleHRWYWx1ZX0+XHJcbiAgICAgIHtjaGlsZHJlbn1cclxuICAgIDwvQ3VycmVudExldmVsQ29udGV4dC5Qcm92aWRlcj5cclxuICApO1xyXG59XHJcblxyXG5DdXJyZW50TGV2ZWxQcm92aWRlci5wcm9wVHlwZXMgPSB7XHJcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXHJcbiAgaW5pdGlhbExldmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG59O1xyXG5cclxuLy8gSG9vayBkJ2FjY8OocyBwcmF0aXF1ZVxyXG5leHBvcnQgZnVuY3Rpb24gdXNlQ3VycmVudExldmVsKCkge1xyXG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KEN1cnJlbnRMZXZlbENvbnRleHQpO1xyXG4gIGlmICghY29udGV4dCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFwidXNlQ3VycmVudExldmVsIGRvaXQgw6p0cmUgdXRpbGlzw6kgZGFucyBDdXJyZW50TGV2ZWxQcm92aWRlclwiKTtcclxuICB9XHJcbiAgcmV0dXJuIGNvbnRleHQ7XHJcbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsVUFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQW1DLElBQUFHLFdBQUEsR0FBQUgsT0FBQTtBQUFBLFNBQUFJLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO0lBQUE7SUFBQVcsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBckIsSUFBQTtFQUFBO0VBQUEsSUFBQXNCLFFBQUEsR0FBQXJCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBbUIsUUFBQSxDQUFBdkIsSUFBQSxLQUFBdUIsUUFBQSxDQUFBdkIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQXNCLFFBQUEsQ0FBQXZCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQW1CLGNBQUEsR0FBQUQsUUFBQSxDQUFBdkIsSUFBQTtFQUFBO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUF5QixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBekIsY0FBQTtBQUduQyxJQUFNMEIsbUJBQW1CLElBQUExQixjQUFBLEdBQUFvQixDQUFBLE9BQUcsSUFBQU8sb0JBQWEsRUFBQyxDQUFDO0FBR3BDLFNBQVNDLG9CQUFvQkEsQ0FBQUMsSUFBQSxFQUFtQztFQUFBLElBQWhDQyxRQUFRLEdBQUFELElBQUEsQ0FBUkMsUUFBUTtJQUFBQyxpQkFBQSxHQUFBRixJQUFBLENBQUVHLFlBQVk7SUFBWkEsWUFBWSxHQUFBRCxpQkFBQSxlQUFBL0IsY0FBQSxHQUFBc0IsQ0FBQSxVQUFHLEdBQUcsSUFBQVMsaUJBQUE7RUFBQS9CLGNBQUEsR0FBQXFCLENBQUE7RUFDakUsSUFBQVksS0FBQSxJQUFBakMsY0FBQSxHQUFBb0IsQ0FBQSxPQUF3QyxJQUFBYyxlQUFRLEVBQUNGLFlBQVksQ0FBQztJQUFBRyxLQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQSxFQUFBSixLQUFBO0lBQXZESyxZQUFZLEdBQUFILEtBQUE7SUFBRUksZUFBZSxHQUFBSixLQUFBO0VBR3BDLElBQU1LLFlBQVksSUFBQXhDLGNBQUEsR0FBQW9CLENBQUEsT0FBRyxJQUFBcUIsY0FBTyxFQUFDLFlBQU87SUFBQXpDLGNBQUEsR0FBQXFCLENBQUE7SUFBQXJCLGNBQUEsR0FBQW9CLENBQUE7SUFBQTtNQUNsQ2tCLFlBQVksRUFBWkEsWUFBWTtNQUNaQyxlQUFlLEVBQWZBO0lBQ0YsQ0FBQztFQUFELENBQUUsRUFBRSxDQUFDRCxZQUFZLENBQUMsQ0FBQztFQUFDdEMsY0FBQSxHQUFBb0IsQ0FBQTtFQUVwQixPQUNFLElBQUFyQixXQUFBLENBQUEyQyxHQUFBLEVBQUNoQixtQkFBbUIsQ0FBQ2lCLFFBQVE7SUFBQ0MsS0FBSyxFQUFFSixZQUFhO0lBQUFWLFFBQUEsRUFDL0NBO0VBQVEsQ0FDbUIsQ0FBQztBQUVuQztBQUFDOUIsY0FBQSxHQUFBb0IsQ0FBQTtBQUVEUSxvQkFBb0IsQ0FBQ2lCLFNBQVMsR0FBRztFQUMvQmYsUUFBUSxFQUFFZ0Isa0JBQVMsQ0FBQ0MsSUFBSSxDQUFDQyxVQUFVO0VBQ25DaEIsWUFBWSxFQUFFYyxrQkFBUyxDQUFDRztBQUMxQixDQUFDO0FBR00sU0FBU0MsZUFBZUEsQ0FBQSxFQUFHO0VBQUFsRCxjQUFBLEdBQUFxQixDQUFBO0VBQ2hDLElBQU04QixPQUFPLElBQUFuRCxjQUFBLEdBQUFvQixDQUFBLE9BQUcsSUFBQWdDLGlCQUFVLEVBQUMxQixtQkFBbUIsQ0FBQztFQUFDMUIsY0FBQSxHQUFBb0IsQ0FBQTtFQUNoRCxJQUFJLENBQUMrQixPQUFPLEVBQUU7SUFBQW5ELGNBQUEsR0FBQXNCLENBQUE7SUFBQXRCLGNBQUEsR0FBQW9CLENBQUE7SUFDWixNQUFNLElBQUlpQyxLQUFLLENBQUMsNkRBQTZELENBQUM7RUFDaEYsQ0FBQztJQUFBckQsY0FBQSxHQUFBc0IsQ0FBQTtFQUFBO0VBQUF0QixjQUFBLEdBQUFvQixDQUFBO0VBQ0QsT0FBTytCLE9BQU87QUFDaEIiLCJpZ25vcmVMaXN0IjpbXX0=