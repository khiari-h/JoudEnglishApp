7f4eef7df358dfdb4b747c5bf9777d2b
function cov_20m6bwqvtx() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingCard\\style.js";
  var hash = "90439ba6f33c1db484ddda6ba5c9cff8beff11dc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\spelling\\SpellingCard\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 139,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 137,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 40
          },
          end: {
            line: 137,
            column: 49
          }
        }, {
          start: {
            line: 137,
            column: 52
          },
          end: {
            line: 137,
            column: 63
          }
        }],
        line: 137
      }
    },
    s: {
      "0": 0
    },
    f: {},
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "90439ba6f33c1db484ddda6ba5c9cff8beff11dc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_20m6bwqvtx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20m6bwqvtx();
import { StyleSheet, Platform } from "react-native";
var styles = (cov_20m6bwqvtx().s[0]++, StyleSheet.create({
  scrollView: {
    flex: 1
  },
  card: Object.assign({
    backgroundColor: "white",
    borderRadius: 20,
    marginVertical: 8,
    position: "relative",
    overflow: 'hidden'
  }, Platform.select({
    ios: {
      shadowColor: "#64748b",
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.1,
      shadowRadius: 12
    },
    android: {
      elevation: 6
    }
  })),
  completedCard: {
    borderLeftWidth: 6,
    borderLeftColor: "#10b981"
  },
  errorContainer: {
    padding: 40,
    alignItems: 'center',
    justifyContent: 'center'
  },
  errorText: {
    fontSize: 16,
    color: '#ef4444',
    fontWeight: '600',
    textAlign: 'center'
  },
  completedBadge: Object.assign({
    position: "absolute",
    top: 16,
    right: 16,
    backgroundColor: "#10b981",
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 12,
    zIndex: 10
  }, Platform.select({
    ios: {
      shadowColor: "#10b981",
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.3,
      shadowRadius: 4
    },
    android: {
      elevation: 4
    }
  })),
  completedText: {
    color: "white",
    fontSize: 12,
    fontWeight: "700"
  },
  exerciseContent: {
    paddingTop: 24,
    paddingHorizontal: 20
  },
  inputSection: {
    paddingHorizontal: 20,
    paddingVertical: 16
  },
  hintSection: {
    paddingHorizontal: 20,
    paddingVertical: 8
  },
  feedbackSection: {
    paddingHorizontal: 20,
    paddingVertical: 16
  },
  homophoneHeader: {
    marginBottom: 16
  },
  fallbackContainer: {
    backgroundColor: '#fef3c7',
    borderRadius: 12,
    padding: 16,
    borderLeftWidth: 4,
    borderLeftColor: '#f59e0b'
  },
  instruction: {
    fontSize: 18,
    fontWeight: "600",
    color: "#1e293b",
    textAlign: "center",
    lineHeight: 26
  },
  debugSection: {
    backgroundColor: '#fef2f2',
    margin: 16,
    padding: 12,
    borderRadius: 8,
    borderLeftWidth: 4,
    borderLeftColor: '#ef4444'
  },
  debugText: {
    fontSize: 12,
    color: '#7f1d1d',
    fontFamily: Platform.OS === 'ios' ? (cov_20m6bwqvtx().b[0][0]++, 'Courier') : (cov_20m6bwqvtx().b[0][1]++, 'monospace')
  }
}));
export default styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,