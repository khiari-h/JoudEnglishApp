ab029f8f44fac6702a90c47e412894c3
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LinearTransition = exports.Layout = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _animationBuilder = require("../animationBuilder");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var _worklet_382974083803_init_data = {
  code: "function LinearTransitionTs1(values){const{delayFunction,delay,animation,config,callback}=this.__closure;return{initialValues:{originX:values.currentOriginX,originY:values.currentOriginY,width:values.currentWidth,height:values.currentHeight},animations:{originX:delayFunction(delay,animation(values.targetOriginX,config)),originY:delayFunction(delay,animation(values.targetOriginY,config)),width:delayFunction(delay,animation(values.targetWidth,config)),height:delayFunction(delay,animation(values.targetHeight,config))},callback:callback};}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\defaultTransitions\\LinearTransition.ts",
  sourceMap: "{\"version\":3,\"names\":[\"LinearTransitionTs1\",\"values\",\"delayFunction\",\"delay\",\"animation\",\"config\",\"callback\",\"__closure\",\"initialValues\",\"originX\",\"currentOriginX\",\"originY\",\"currentOriginY\",\"width\",\"currentWidth\",\"height\",\"currentHeight\",\"animations\",\"targetOriginX\",\"targetOriginY\",\"targetWidth\",\"targetHeight\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/defaultTransitions/LinearTransition.ts\"],\"mappings\":\"AAmCY,SAAAA,mBAAWA,CAAAC,MAAA,QAAAC,aAAA,CAAAC,KAAA,CAAAC,SAAA,CAAAC,MAAA,CAAAC,QAAA,OAAAC,SAAA,CAEjB,MAAO,CACLC,aAAa,CAAE,CACbC,OAAO,CAAER,MAAM,CAACS,cAAc,CAC9BC,OAAO,CAAEV,MAAM,CAACW,cAAc,CAC9BC,KAAK,CAAEZ,MAAM,CAACa,YAAY,CAC1BC,MAAM,CAAEd,MAAM,CAACe,aACjB,CAAC,CACDC,UAAU,CAAE,CACVR,OAAO,CAAEP,aAAa,CACpBC,KAAK,CACLC,SAAS,CAACH,MAAM,CAACiB,aAAa,CAAEb,MAAM,CACxC,CAAC,CACDM,OAAO,CAAET,aAAa,CACpBC,KAAK,CACLC,SAAS,CAACH,MAAM,CAACkB,aAAa,CAAEd,MAAM,CACxC,CAAC,CACDQ,KAAK,CAAEX,aAAa,CAACC,KAAK,CAAEC,SAAS,CAACH,MAAM,CAACmB,WAAW,CAAEf,MAAM,CAAC,CAAC,CAClEU,MAAM,CAAEb,aAAa,CAACC,KAAK,CAAEC,SAAS,CAACH,MAAM,CAACoB,YAAY,CAAEhB,MAAM,CAAC,CACrE,CAAC,CACDC,QAAA,CAAAA,QACF,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var LinearTransition = exports.LinearTransition = function (_ComplexAnimationBuil) {
  function LinearTransition() {
    var _this;
    (0, _classCallCheck2.default)(this, LinearTransition);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, LinearTransition, [].concat(args));
    _this.build = function () {
      var delayFunction = _this.getDelayFunction();
      var _this$getAnimationAnd = _this.getAnimationAndConfig(),
        _this$getAnimationAnd2 = (0, _slicedToArray2.default)(_this$getAnimationAnd, 2),
        animation = _this$getAnimationAnd2[0],
        config = _this$getAnimationAnd2[1];
      var callback = _this.callbackV;
      var delay = _this.getDelay();
      return function () {
        var _e = [new global.Error(), -6, -27];
        var LinearTransitionTs1 = function LinearTransitionTs1(values) {
          return {
            initialValues: {
              originX: values.currentOriginX,
              originY: values.currentOriginY,
              width: values.currentWidth,
              height: values.currentHeight
            },
            animations: {
              originX: delayFunction(delay, animation(values.targetOriginX, config)),
              originY: delayFunction(delay, animation(values.targetOriginY, config)),
              width: delayFunction(delay, animation(values.targetWidth, config)),
              height: delayFunction(delay, animation(values.targetHeight, config))
            },
            callback: callback
          };
        };
        LinearTransitionTs1.__closure = {
          delayFunction: delayFunction,
          delay: delay,
          animation: animation,
          config: config,
          callback: callback
        };
        LinearTransitionTs1.__workletHash = 382974083803;
        LinearTransitionTs1.__initData = _worklet_382974083803_init_data;
        LinearTransitionTs1.__stackDetails = _e;
        return LinearTransitionTs1;
      }();
    };
    return _this;
  }
  (0, _inherits2.default)(LinearTransition, _ComplexAnimationBuil);
  return (0, _createClass2.default)(LinearTransition, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new LinearTransition();
    }
  }]);
}(_animationBuilder.ComplexAnimationBuilder);
LinearTransition.presetName = 'LinearTransition';
var Layout = exports.Layout = LinearTransition;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,