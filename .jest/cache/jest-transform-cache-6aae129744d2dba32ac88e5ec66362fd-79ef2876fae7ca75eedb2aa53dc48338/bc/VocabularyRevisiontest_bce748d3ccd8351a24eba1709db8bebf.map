{"version":3,"names":["_getJestObj","mock","useNavigation","goBack","jest","fn","__esModule","default","markRevisionCompleted","revisionQuestions","isLoading","error","stats","totalLearned","hasEnoughWords","canGenerateQuestions","isFinished","score","totalQuestions","goToNextQuestion","handleAnswer","handleRestart","showResult","_interopRequireDefault","require","_react","_reactNative","_VocabularyRevision","_ThemeContext","_jsxRuntime","_require","describe","mockTheme","colors","background","surface","text","textSecondary","primary","it","render","jsx","ThemeContext","Provider","value","children","route","params","expect","screen","getByText","toBeTruthy"],"sources":["VocabularyRevision.test.js"],"sourcesContent":["import React from 'react';\nimport { render, screen } from '@testing-library/react-native';\nimport VocabularyRevision from '../../../src/screens/VocabularyRevision';\nimport { ThemeContext } from '../../../src/contexts/ThemeContext';\n\n// Mock custom hooks\njest.mock('@react-navigation/native', () => ({\n  useNavigation: () => ({\n    goBack: jest.fn(),\n  }),\n}));\njest.mock('../../../src/hooks/useRevisionManager', () => ({\n  __esModule: true,\n  default: () => ({\n    markRevisionCompleted: jest.fn(),\n  }),\n}));\njest.mock('../../../src/hooks/useRevisionData', () => ({\n  __esModule: true,\n  default: () => ({\n    revisionQuestions: [],\n    isLoading: false,\n    error: null,\n    stats: { totalLearned: 0 },\n    hasEnoughWords: false,\n    canGenerateQuestions: false,\n  }),\n}));\njest.mock('../../../src/hooks/useQuizEngine', () => ({\n  __esModule: true,\n  default: () => ({\n    isFinished: false,\n    score: 0,\n    totalQuestions: 0,\n    goToNextQuestion: jest.fn(),\n    handleAnswer: jest.fn(),\n    handleRestart: jest.fn(),\n    showResult: false,\n  }),\n}));\n\n// Mock sub-components\njest.mock('../../../src/screens/VocabularyRevision/components/EmptyState', () => 'EmptyState');\njest.mock('../../../src/screens/VocabularyRevision/components/QuizScreen', () => 'QuizScreen');\njest.mock('../../../src/screens/VocabularyRevision/components/ResultScreen', () => 'ResultScreen');\n\ndescribe('VocabularyRevision', () => {\n  const mockTheme = {\n    colors: {\n      background: \"#F8FAFC\",\n      surface: \"#FFFFFF\",\n      text: \"#1F2937\",\n      textSecondary: \"#6B7280\",\n      primary: \"#3B82F6\"\n    },\n  };\n\n  it('should render EmptyState when not enough words', () => {\n    render(\n      <ThemeContext.Provider value={mockTheme}>\n        <VocabularyRevision route={{ params: {} }} />\n      </ThemeContext.Provider>\n    );\n    expect(screen.getByText('EmptyState')).toBeTruthy(); // Check for the mocked component\n  });\n});\n"],"mappings":"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","ignoreList":[]}