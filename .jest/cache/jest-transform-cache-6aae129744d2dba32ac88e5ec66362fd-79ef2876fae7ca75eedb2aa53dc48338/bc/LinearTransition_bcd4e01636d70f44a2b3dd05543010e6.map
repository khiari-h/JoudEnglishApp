{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","LinearTransition","Layout","_slicedToArray2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_animationBuilder","_callSuper","t","o","e","default","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_worklet_382974083803_init_data","code","location","sourceMap","version","_ComplexAnimationBuil","_this","_len","arguments","length","args","Array","_key","concat","build","delayFunction","getDelayFunction","_this$getAnimationAnd","getAnimationAndConfig","_this$getAnimationAnd2","animation","config","callback","callbackV","delay","getDelay","_e","global","Error","LinearTransitionTs1","values","initialValues","originX","currentOriginX","originY","currentOriginY","width","currentWidth","height","currentHeight","animations","targetOriginX","targetOriginY","targetWidth","targetHeight","__closure","__workletHash","__initData","__stackDetails","key","createInstance","ComplexAnimationBuilder","presetName"],"sources":["LinearTransition.ts"],"sourcesContent":["'use strict';\nimport type { BaseAnimationBuilder } from '../animationBuilder';\nimport { ComplexAnimationBuilder } from '../animationBuilder';\nimport type {\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n} from '../animationBuilder/commonTypes';\n\n/**\n * Linearly transforms the layout from one position to another. You can modify\n * the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `layout` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-transitions#linear-transition\n */\nexport class LinearTransition\n  extends ComplexAnimationBuilder\n  implements ILayoutAnimationBuilder\n{\n  static presetName = 'LinearTransition';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new LinearTransition() as InstanceType<T>;\n  }\n\n  build = (): LayoutAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const delay = this.getDelay();\n\n    return (values) => {\n      'worklet';\n      return {\n        initialValues: {\n          originX: values.currentOriginX,\n          originY: values.currentOriginY,\n          width: values.currentWidth,\n          height: values.currentHeight,\n        },\n        animations: {\n          originX: delayFunction(\n            delay,\n            animation(values.targetOriginX, config)\n          ),\n          originY: delayFunction(\n            delay,\n            animation(values.targetOriginY, config)\n          ),\n          width: delayFunction(delay, animation(values.targetWidth, config)),\n          height: delayFunction(delay, animation(values.targetHeight, config)),\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/** @deprecated Please use {@link LinearTransition} instead. */\nexport const Layout = LinearTransition;\n"],"mappings":"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","ignoreList":[]}