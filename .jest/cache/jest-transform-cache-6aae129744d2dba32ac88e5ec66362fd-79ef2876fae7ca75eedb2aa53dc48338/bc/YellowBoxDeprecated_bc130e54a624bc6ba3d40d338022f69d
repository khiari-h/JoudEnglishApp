e37dc5dc484d6677b57a5cc85d62f4af
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var LogBox = require('../LogBox/LogBox').default;
var React = require('react');
var YellowBox;
if (__DEV__) {
  YellowBox = function (_React$Component) {
    function YellowBox() {
      (0, _classCallCheck2.default)(this, YellowBox);
      return _callSuper(this, YellowBox, arguments);
    }
    (0, _inherits2.default)(YellowBox, _React$Component);
    return (0, _createClass2.default)(YellowBox, [{
      key: "render",
      value: function render() {
        return null;
      }
    }], [{
      key: "ignoreWarnings",
      value: function ignoreWarnings(patterns) {
        console.warn('YellowBox has been replaced with LogBox. Please call LogBox.ignoreLogs() instead.');
        LogBox.ignoreLogs(patterns);
      }
    }, {
      key: "install",
      value: function install() {
        console.warn('YellowBox has been replaced with LogBox. Please call LogBox.install() instead.');
        LogBox.install();
      }
    }, {
      key: "uninstall",
      value: function uninstall() {
        console.warn('YellowBox has been replaced with LogBox. Please call LogBox.uninstall() instead.');
        LogBox.uninstall();
      }
    }]);
  }(React.Component);
} else {
  YellowBox = function (_React$Component2) {
    function YellowBox() {
      (0, _classCallCheck2.default)(this, YellowBox);
      return _callSuper(this, YellowBox, arguments);
    }
    (0, _inherits2.default)(YellowBox, _React$Component2);
    return (0, _createClass2.default)(YellowBox, [{
      key: "render",
      value: function render() {
        return null;
      }
    }], [{
      key: "ignoreWarnings",
      value: function ignoreWarnings(patterns) {}
    }, {
      key: "install",
      value: function install() {}
    }, {
      key: "uninstall",
      value: function uninstall() {}
    }]);
  }(React.Component);
}
module.exports = YellowBox;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2dldFByb3RvdHlwZU9mMiIsIl9pbmhlcml0czIiLCJfY2FsbFN1cGVyIiwidCIsIm8iLCJlIiwiZGVmYXVsdCIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiY29uc3RydWN0b3IiLCJhcHBseSIsIkJvb2xlYW4iLCJwcm90b3R5cGUiLCJ2YWx1ZU9mIiwiY2FsbCIsIkxvZ0JveCIsIlJlYWN0IiwiWWVsbG93Qm94IiwiX19ERVZfXyIsIl9SZWFjdCRDb21wb25lbnQiLCJhcmd1bWVudHMiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImlnbm9yZVdhcm5pbmdzIiwicGF0dGVybnMiLCJjb25zb2xlIiwid2FybiIsImlnbm9yZUxvZ3MiLCJpbnN0YWxsIiwidW5pbnN0YWxsIiwiQ29tcG9uZW50IiwiX1JlYWN0JENvbXBvbmVudDIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiWWVsbG93Qm94RGVwcmVjYXRlZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdHlwZSB7SWdub3JlUGF0dGVybn0gZnJvbSAnLi4vTG9nQm94L0RhdGEvTG9nQm94RGF0YSc7XG5cbmNvbnN0IExvZ0JveCA9IHJlcXVpcmUoJy4uL0xvZ0JveC9Mb2dCb3gnKS5kZWZhdWx0O1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG50eXBlIFByb3BzID0gJFJlYWRPbmx5PHt8fH0+O1xuXG5sZXQgWWVsbG93Qm94O1xuaWYgKF9fREVWX18pIHtcbiAgWWVsbG93Qm94ID0gY2xhc3MgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8UHJvcHM+IHtcbiAgICBzdGF0aWMgaWdub3JlV2FybmluZ3MocGF0dGVybnM6ICRSZWFkT25seUFycmF5PElnbm9yZVBhdHRlcm4+KTogdm9pZCB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICdZZWxsb3dCb3ggaGFzIGJlZW4gcmVwbGFjZWQgd2l0aCBMb2dCb3guIFBsZWFzZSBjYWxsIExvZ0JveC5pZ25vcmVMb2dzKCkgaW5zdGVhZC4nLFxuICAgICAgKTtcblxuICAgICAgTG9nQm94Lmlnbm9yZUxvZ3MocGF0dGVybnMpO1xuICAgIH1cblxuICAgIHN0YXRpYyBpbnN0YWxsKCk6IHZvaWQge1xuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAnWWVsbG93Qm94IGhhcyBiZWVuIHJlcGxhY2VkIHdpdGggTG9nQm94LiBQbGVhc2UgY2FsbCBMb2dCb3guaW5zdGFsbCgpIGluc3RlYWQuJyxcbiAgICAgICk7XG4gICAgICBMb2dCb3guaW5zdGFsbCgpO1xuICAgIH1cblxuICAgIHN0YXRpYyB1bmluc3RhbGwoKTogdm9pZCB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICdZZWxsb3dCb3ggaGFzIGJlZW4gcmVwbGFjZWQgd2l0aCBMb2dCb3guIFBsZWFzZSBjYWxsIExvZ0JveC51bmluc3RhbGwoKSBpbnN0ZWFkLicsXG4gICAgICApO1xuICAgICAgTG9nQm94LnVuaW5zdGFsbCgpO1xuICAgIH1cblxuICAgIHJlbmRlcigpOiBSZWFjdC5Ob2RlIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfTtcbn0gZWxzZSB7XG4gIFllbGxvd0JveCA9IGNsYXNzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFByb3BzPiB7XG4gICAgc3RhdGljIGlnbm9yZVdhcm5pbmdzKHBhdHRlcm5zOiAkUmVhZE9ubHlBcnJheTxJZ25vcmVQYXR0ZXJuPik6IHZvaWQge1xuICAgICAgLy8gRG8gbm90aGluZy5cbiAgICB9XG5cbiAgICBzdGF0aWMgaW5zdGFsbCgpOiB2b2lkIHtcbiAgICAgIC8vIERvIG5vdGhpbmcuXG4gICAgfVxuXG4gICAgc3RhdGljIHVuaW5zdGFsbCgpOiB2b2lkIHtcbiAgICAgIC8vIERvIG5vdGhpbmcuXG4gICAgfVxuXG4gICAgcmVuZGVyKCk6IFJlYWN0Lk5vZGUge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9O1xufVxuXG4vLyAkRmxvd0ZpeE1lW21ldGhvZC11bmJpbmRpbmddXG5tb2R1bGUuZXhwb3J0cyA9IChZZWxsb3dCb3g6IENsYXNzPFJlYWN0LkNvbXBvbmVudDxQcm9wcz4+ICYge1xuICBpZ25vcmVXYXJuaW5ncygkUmVhZE9ubHlBcnJheTxJZ25vcmVQYXR0ZXJuPik6IHZvaWQsXG4gIGluc3RhbGwoKTogdm9pZCxcbiAgdW5pbnN0YWxsKCk6IHZvaWQsXG4gIC4uLlxufSk7XG4iXSwibWFwcGluZ3MiOiJBQVVBLFlBQVk7O0FBQUMsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBLElBQUFDLGdCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRSxhQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRywyQkFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUksZ0JBQUEsR0FBQUwsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFLLFVBQUEsR0FBQU4sc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLFNBQUFNLFdBQUFDLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFdBQUFELENBQUEsT0FBQUosZ0JBQUEsQ0FBQU0sT0FBQSxFQUFBRixD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