454f54f3cd0fe4038a35c9c37c7eb7be
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.underDampedSpringCalculations = exports.scaleZetaToMatchClamps = exports.isAnimationTerminatingCalculation = exports.initialCalculations = exports.criticallyDampedSpringCalculations = exports.checkIfConfigIsValid = exports.calculateNewMassToMatchDuration = exports.bisectRoot = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _logger = require("../logger");
var _worklet_13364345190519_init_data = {
  code: "function checkIfConfigIsValid_springUtilsTs1(config){const{logger}=this.__closure;var _config$clamp,_config$clamp2;let errorMessage='';['stiffness','damping','dampingRatio','restDisplacementThreshold','restSpeedThreshold','mass'].forEach(function(prop){const value=config[prop];if(value<=0){errorMessage+=\", \"+prop+\" must be grater than zero but got \"+value;}});if(config.duration<0){errorMessage+=\", duration can't be negative, got \"+config.duration;}if((_config$clamp=config.clamp)!==null&&_config$clamp!==void 0&&_config$clamp.min&&(_config$clamp2=config.clamp)!==null&&_config$clamp2!==void 0&&_config$clamp2.max&&config.clamp.min>config.clamp.max){errorMessage+=\", clamp.min should be lower than clamp.max, got clamp: {min: \"+config.clamp.min+\", max: \"+config.clamp.max+\"} \";}if(errorMessage!==''){logger.warn('Invalid spring config'+errorMessage);}return errorMessage==='';}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\animation\\springUtils.ts",
  sourceMap: "{\"version\":3,\"names\":[\"checkIfConfigIsValid_springUtilsTs1\",\"config\",\"logger\",\"__closure\",\"_config$clamp\",\"_config$clamp2\",\"errorMessage\",\"forEach\",\"prop\",\"value\",\"duration\",\"clamp\",\"min\",\"max\",\"warn\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/animation/springUtils.ts\"],\"mappings\":\"AA0FO,SAAAA,mCAAoEA,CAAAC,MAAA,QAAAC,MAAA,OAAAC,SAAA,KAAAC,aAAA,CAAAC,cAAA,CAEzE,GAAI,CAAAC,YAAY,CAAG,EAAE,CAEnB,CACE,WAAW,CACX,SAAS,CACT,cAAc,CACd,2BAA2B,CAC3B,oBAAoB,CACpB,MAAM,CACP,CACDC,OAAO,CAAE,SAAAC,IAAI,CAAK,CAClB,KAAM,CAAAC,KAAK,CAAGR,MAAM,CAACO,IAAI,CAAC,CAC1B,GAAIC,KAAK,EAAI,CAAC,CAAE,CACdH,YAAY,OAASE,IAAI,sCAAqCC,KAAO,CACvE,CACF,CAAC,CAAC,CAEF,GAAIR,MAAM,CAACS,QAAQ,CAAG,CAAC,CAAE,CACvBJ,YAAY,uCAAyCL,MAAM,CAACS,QAAU,CACxE,CAEA,GACE,CAAAN,aAAA,CAAAH,MAAM,CAACU,KAAK,UAAAP,aAAA,WAAZA,aAAA,CAAcQ,GAAG,GAAAP,cAAA,CACjBJ,MAAM,CAACU,KAAK,UAAAN,cAAA,WAAZA,cAAA,CAAcQ,GAAG,EACjBZ,MAAM,CAACU,KAAK,CAACC,GAAG,CAAGX,MAAM,CAACU,KAAK,CAACE,GAAG,CACnC,CACAP,YAAY,kEAAoEL,MAAM,CAACU,KAAK,CAACC,GAAG,WAAUX,MAAM,CAACU,KAAK,CAACE,GAAG,KAAI,CAChI,CAEA,GAAIP,YAAY,GAAK,EAAE,CAAE,CACvBJ,MAAM,CAACY,IAAI,CAAC,uBAAuB,CAAGR,YAAY,CAAC,CACrD,CAEA,MAAO,CAAAA,YAAY,GAAK,EAAE,CAC5B\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var checkIfConfigIsValid = exports.checkIfConfigIsValid = function () {
  var _e = [new global.Error(), -2, -27];
  var checkIfConfigIsValid = function checkIfConfigIsValid(config) {
    var _config$clamp, _config$clamp2;
    var errorMessage = '';
    ['stiffness', 'damping', 'dampingRatio', 'restDisplacementThreshold', 'restSpeedThreshold', 'mass'].forEach(function (prop) {
      var value = config[prop];
      if (value <= 0) {
        errorMessage += `, ${prop} must be grater than zero but got ${value}`;
      }
    });
    if (config.duration < 0) {
      errorMessage += `, duration can't be negative, got ${config.duration}`;
    }
    if ((_config$clamp = config.clamp) != null && _config$clamp.min && (_config$clamp2 = config.clamp) != null && _config$clamp2.max && config.clamp.min > config.clamp.max) {
      errorMessage += `, clamp.min should be lower than clamp.max, got clamp: {min: ${config.clamp.min}, max: ${config.clamp.max}} `;
    }
    if (errorMessage !== '') {
      _logger.logger.warn('Invalid spring config' + errorMessage);
    }
    return errorMessage === '';
  };
  checkIfConfigIsValid.__closure = {
    logger: _logger.logger
  };
  checkIfConfigIsValid.__workletHash = 13364345190519;
  checkIfConfigIsValid.__initData = _worklet_13364345190519_init_data;
  checkIfConfigIsValid.__stackDetails = _e;
  return checkIfConfigIsValid;
}();
var _worklet_16013959463792_init_data = {
  code: "function bisectRoot_springUtilsTs2({min:min,max:max,func:func,maxIterations=20}){const ACCURACY=0.00005;let idx=maxIterations;let current=(max+min)/2;while(Math.abs(func(current))>ACCURACY&&idx>0){idx-=1;if(func(current)<0){min=current;}else{max=current;}current=(min+max)/2;}return current;}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\animation\\springUtils.ts",
  sourceMap: "{\"version\":3,\"names\":[\"bisectRoot_springUtilsTs2\",\"min\",\"max\",\"func\",\"maxIterations\",\"ACCURACY\",\"idx\",\"current\",\"Math\",\"abs\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/animation/springUtils.ts\"],\"mappings\":\"AAiIO,SAAAA,yBAAoBA,CAAA,CACzBC,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,IAAI,CAAJA,IAAI,CACJC,aAAa,CAAG,EAMlB,CAAC,CAAE,CAED,KAAM,CAAAC,QAAQ,CAAG,OAAO,CACxB,GAAI,CAAAC,GAAG,CAAGF,aAAa,CACvB,GAAI,CAAAG,OAAO,CAAG,CAACL,GAAG,CAAGD,GAAG,EAAI,CAAC,CAC7B,MAAOO,IAAI,CAACC,GAAG,CAACN,IAAI,CAACI,OAAO,CAAC,CAAC,CAAGF,QAAQ,EAAIC,GAAG,CAAG,CAAC,CAAE,CACpDA,GAAG,EAAI,CAAC,CAER,GAAIH,IAAI,CAACI,OAAO,CAAC,CAAG,CAAC,CAAE,CACrBN,GAAG,CAAGM,OAAO,CACf,CAAC,IAAM,CACLL,GAAG,CAAGK,OAAO,CACf,CACAA,OAAO,CAAG,CAACN,GAAG,CAAGC,GAAG,EAAI,CAAC,CAC3B,CACA,MAAO,CAAAK,OAAO,CAChB\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var bisectRoot = exports.bisectRoot = function () {
  var _e = [new global.Error(), 1, -27];
  var bisectRoot = function bisectRoot(_ref) {
    var min = _ref.min,
      max = _ref.max,
      func = _ref.func,
      _ref$maxIterations = _ref.maxIterations,
      maxIterations = _ref$maxIterations === void 0 ? 20 : _ref$maxIterations;
    var ACCURACY = 0.00005;
    var idx = maxIterations;
    var current = (max + min) / 2;
    while (Math.abs(func(current)) > ACCURACY && idx > 0) {
      idx -= 1;
      if (func(current) < 0) {
        min = current;
      } else {
        max = current;
      }
      current = (min + max) / 2;
    }
    return current;
  };
  bisectRoot.__closure = {};
  bisectRoot.__workletHash = 16013959463792;
  bisectRoot.__initData = _worklet_16013959463792_init_data;
  bisectRoot.__stackDetails = _e;
  return bisectRoot;
}();
var _worklet_1142470038332_init_data = {
  code: "function initialCalculations_springUtilsTs3(mass=0,config){if(config.skipAnimation){return{zeta:0,omega0:0,omega1:0};}if(config.useDuration){const{stiffness:k,dampingRatio:zeta}=config;const omega0=Math.sqrt(k/mass);const omega1=omega0*Math.sqrt(1-zeta**2);return{zeta:zeta,omega0:omega0,omega1:omega1};}else{const{damping:c,mass:m,stiffness:k}=config;const zeta=c/(2*Math.sqrt(k*m));const omega0=Math.sqrt(k/m);const omega1=omega0*Math.sqrt(1-zeta**2);return{zeta:zeta,omega0:omega0,omega1:omega1};}}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\animation\\springUtils.ts",
  sourceMap: "{\"version\":3,\"names\":[\"initialCalculations_springUtilsTs3\",\"mass\",\"config\",\"skipAnimation\",\"zeta\",\"omega0\",\"omega1\",\"useDuration\",\"stiffness\",\"k\",\"dampingRatio\",\"Math\",\"sqrt\",\"damping\",\"c\",\"m\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/animation/springUtils.ts\"],\"mappings\":\"AA6JO,SAAAA,kCAELA,CAAAC,IAKA,GAAAC,MAAA,EAGA,GAAIA,MAAM,CAACC,aAAa,CAAE,CACxB,MAAO,CAAEC,IAAI,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAC,CAC1C,CAEA,GAAIJ,MAAM,CAACK,WAAW,CAAE,CACtB,KAAM,CAAEC,SAAS,CAAEC,CAAC,CAAEC,YAAY,CAAEN,IAAK,CAAC,CAAGF,MAAM,CAOnD,KAAM,CAAAG,MAAM,CAAGM,IAAI,CAACC,IAAI,CAACH,CAAC,CAAGR,IAAI,CAAC,CAClC,KAAM,CAAAK,MAAM,CAAGD,MAAM,CAAGM,IAAI,CAACC,IAAI,CAAC,CAAC,CAAGR,IAAI,EAAI,CAAC,CAAC,CAEhD,MAAO,CAAEA,IAAI,CAAJA,IAAI,CAAEC,MAAM,CAANA,MAAM,CAAEC,MAAA,CAAAA,MAAO,CAAC,CACjC,CAAC,IAAM,CACL,KAAM,CAAEO,OAAO,CAAEC,CAAC,CAAEb,IAAI,CAAEc,CAAC,CAAEP,SAAS,CAAEC,CAAE,CAAC,CAAGP,MAAM,CAEpD,KAAM,CAAAE,IAAI,CAAGU,CAAC,EAAI,CAAC,CAAGH,IAAI,CAACC,IAAI,CAACH,CAAC,CAAGM,CAAC,CAAC,CAAC,CACvC,KAAM,CAAAV,MAAM,CAAGM,IAAI,CAACC,IAAI,CAACH,CAAC,CAAGM,CAAC,CAAC,CAC/B,KAAM,CAAAT,MAAM,CAAGD,MAAM,CAAGM,IAAI,CAACC,IAAI,CAAC,CAAC,CAAGR,IAAI,EAAI,CAAC,CAAC,CAEhD,MAAO,CAAEA,IAAI,CAAJA,IAAI,CAAEC,MAAM,CAANA,MAAM,CAAEC,MAAA,CAAAA,MAAO,CAAC,CACjC,CACF\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var initialCalculations = exports.initialCalculations = function () {
  var _e = [new global.Error(), 1, -27];
  var initialCalculations = function initialCalculations() {
    var mass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var config = arguments.length > 1 ? arguments[1] : undefined;
    if (config.skipAnimation) {
      return {
        zeta: 0,
        omega0: 0,
        omega1: 0
      };
    }
    if (config.useDuration) {
      var k = config.stiffness,
        zeta = config.dampingRatio;
      var omega0 = Math.sqrt(k / mass);
      var omega1 = omega0 * Math.sqrt(1 - zeta ** 2);
      return {
        zeta: zeta,
        omega0: omega0,
        omega1: omega1
      };
    } else {
      var c = config.damping,
        m = config.mass,
        _k = config.stiffness;
      var _zeta = c / (2 * Math.sqrt(_k * m));
      var _omega = Math.sqrt(_k / m);
      var _omega2 = _omega * Math.sqrt(1 - _zeta ** 2);
      return {
        zeta: _zeta,
        omega0: _omega,
        omega1: _omega2
      };
    }
  };
  initialCalculations.__closure = {};
  initialCalculations.__workletHash = 1142470038332;
  initialCalculations.__initData = _worklet_1142470038332_init_data;
  initialCalculations.__stackDetails = _e;
  return initialCalculations;
}();
var _worklet_13498512512655_init_data = {
  code: "function scaleZetaToMatchClamps_springUtilsTs4(animation,clamp){const{zeta:zeta,toValue:toValue,startValue:startValue}=animation;const toValueNum=Number(toValue);if(toValueNum===startValue){return zeta;}const[firstBound,secondBound]=toValueNum-startValue>0?[clamp.min,clamp.max]:[clamp.max,clamp.min];const relativeExtremum1=secondBound!==undefined?Math.abs((secondBound-toValueNum)/(toValueNum-startValue)):undefined;const relativeExtremum2=firstBound!==undefined?Math.abs((firstBound-toValueNum)/(toValueNum-startValue)):undefined;const newZeta1=relativeExtremum1!==undefined?Math.abs(Math.log(relativeExtremum1)/Math.PI):undefined;const newZeta2=relativeExtremum2!==undefined?Math.abs(Math.log(relativeExtremum2)/(2*Math.PI)):undefined;const zetaSatisfyingClamp=[newZeta1,newZeta2].filter(function(x){return x!==undefined;});return Math.max(...zetaSatisfyingClamp,zeta);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\animation\\springUtils.ts",
  sourceMap: "{\"version\":3,\"names\":[\"scaleZetaToMatchClamps_springUtilsTs4\",\"animation\",\"clamp\",\"zeta\",\"toValue\",\"startValue\",\"toValueNum\",\"Number\",\"firstBound\",\"secondBound\",\"min\",\"max\",\"relativeExtremum1\",\"undefined\",\"Math\",\"abs\",\"relativeExtremum2\",\"newZeta1\",\"log\",\"PI\",\"newZeta2\",\"zetaSatisfyingClamp\",\"filter\",\"x\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/animation/springUtils.ts\"],\"mappings\":\"AAuMO,SAAAA,qCAELA,CAAAC,SACQ,CAAAC,KAAA,EAER,KAAM,CAAEC,IAAI,CAAJA,IAAI,CAAEC,OAAO,CAAPA,OAAO,CAAEC,UAAA,CAAAA,UAAW,CAAC,CAAGJ,SAAS,CAC/C,KAAM,CAAAK,UAAU,CAAGC,MAAM,CAACH,OAAO,CAAC,CAElC,GAAIE,UAAU,GAAKD,UAAU,CAAE,CAC7B,MAAO,CAAAF,IAAI,CACb,CAEA,KAAM,CAACK,UAAU,CAAEC,WAAW,CAAC,CAC7BH,UAAU,CAAGD,UAAU,CAAG,CAAC,CACvB,CAACH,KAAK,CAACQ,GAAG,CAAER,KAAK,CAACS,GAAG,CAAC,CACtB,CAACT,KAAK,CAACS,GAAG,CAAET,KAAK,CAACQ,GAAG,CAAC,CAa5B,KAAM,CAAAE,iBAAiB,CACrBH,WAAW,GAAKI,SAAS,CACrBC,IAAI,CAACC,GAAG,CAAC,CAACN,WAAW,CAAGH,UAAU,GAAKA,UAAU,CAAGD,UAAU,CAAC,CAAC,CAChEQ,SAAS,CAEf,KAAM,CAAAG,iBAAiB,CACrBR,UAAU,GAAKK,SAAS,CACpBC,IAAI,CAACC,GAAG,CAAC,CAACP,UAAU,CAAGF,UAAU,GAAKA,UAAU,CAAGD,UAAU,CAAC,CAAC,CAC/DQ,SAAS,CAYf,KAAM,CAAAI,QAAQ,CACZL,iBAAiB,GAAKC,SAAS,CAC3BC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACI,GAAG,CAACN,iBAAiB,CAAC,CAAGE,IAAI,CAACK,EAAE,CAAC,CAC/CN,SAAS,CAEf,KAAM,CAAAO,QAAQ,CACZJ,iBAAiB,GAAKH,SAAS,CAC3BC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACI,GAAG,CAACF,iBAAiB,CAAC,EAAI,CAAC,CAAGF,IAAI,CAACK,EAAE,CAAC,CAAC,CACrDN,SAAS,CAEf,KAAM,CAAAQ,mBAAmB,CAAG,CAACJ,QAAQ,CAAEG,QAAQ,CAAC,CAACE,MAAM,CACrD,SAACC,CAAqB,QAAkB,CAAAA,CAAC,GAAKV,SAChD,GAAC,CAGD,MAAO,CAAAC,IAAI,CAACH,GAAG,CAAC,GAAGU,mBAAmB,CAAElB,IAAI,CAAC,CAC/C\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var scaleZetaToMatchClamps = exports.scaleZetaToMatchClamps = function () {
  var _e = [new global.Error(), 1, -27];
  var scaleZetaToMatchClamps = function scaleZetaToMatchClamps(animation, clamp) {
    var zeta = animation.zeta,
      toValue = animation.toValue,
      startValue = animation.startValue;
    var toValueNum = Number(toValue);
    if (toValueNum === startValue) {
      return zeta;
    }
    var _ref2 = toValueNum - startValue > 0 ? [clamp.min, clamp.max] : [clamp.max, clamp.min],
      _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
      firstBound = _ref3[0],
      secondBound = _ref3[1];
    var relativeExtremum1 = secondBound !== undefined ? Math.abs((secondBound - toValueNum) / (toValueNum - startValue)) : undefined;
    var relativeExtremum2 = firstBound !== undefined ? Math.abs((firstBound - toValueNum) / (toValueNum - startValue)) : undefined;
    var newZeta1 = relativeExtremum1 !== undefined ? Math.abs(Math.log(relativeExtremum1) / Math.PI) : undefined;
    var newZeta2 = relativeExtremum2 !== undefined ? Math.abs(Math.log(relativeExtremum2) / (2 * Math.PI)) : undefined;
    var zetaSatisfyingClamp = [newZeta1, newZeta2].filter(function (x) {
      return x !== undefined;
    });
    return Math.max.apply(Math, (0, _toConsumableArray2.default)(zetaSatisfyingClamp).concat([zeta]));
  };
  scaleZetaToMatchClamps.__closure = {};
  scaleZetaToMatchClamps.__workletHash = 13498512512655;
  scaleZetaToMatchClamps.__initData = _worklet_13498512512655_init_data;
  scaleZetaToMatchClamps.__stackDetails = _e;
  return scaleZetaToMatchClamps;
}();
var _worklet_12068687713707_init_data = {
  code: "function calculateNewMassToMatchDuration_springUtilsTs5(x0,config,v0){const{bisectRoot}=this.__closure;if(config.skipAnimation){return 0;}const{stiffness:k,dampingRatio:zeta,restSpeedThreshold:threshold,duration:duration}=config;const durationForMass=function(mass){'worklet';const amplitude=(mass*v0*v0+k*x0*x0)/(Math.exp(1-0.5*zeta)*k);const c=zeta*2*Math.sqrt(k*mass);return 1000*(-2*mass/c)*Math.log(threshold*0.01/amplitude)-duration;};return bisectRoot({min:0,max:100,func:durationForMass});}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\animation\\springUtils.ts",
  sourceMap: "{\"version\":3,\"names\":[\"calculateNewMassToMatchDuration_springUtilsTs5\",\"x0\",\"config\",\"v0\",\"bisectRoot\",\"__closure\",\"skipAnimation\",\"stiffness\",\"k\",\"dampingRatio\",\"zeta\",\"restSpeedThreshold\",\"threshold\",\"duration\",\"durationForMass\",\"mass\",\"amplitude\",\"Math\",\"exp\",\"c\",\"sqrt\",\"log\",\"min\",\"max\",\"func\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/animation/springUtils.ts\"],\"mappings\":\"AA0QO,SAAAA,8CAGLA,CAAUC,EACV,CAAAC,MAAA,CAAAC,EAAA,QAAAC,UAAA,OAAAC,SAAA,CAEA,GAAIH,MAAM,CAACI,aAAa,CAAE,CACxB,MAAO,EAAC,CACV,CAuBA,KAAM,CACJC,SAAS,CAAEC,CAAC,CACZC,YAAY,CAAEC,IAAI,CAClBC,kBAAkB,CAAEC,SAAS,CAC7BC,QAAA,CAAAA,QACF,CAAC,CAAGX,MAAM,CAEV,KAAM,CAAAY,eAAe,CAAG,QAAAA,CAACC,IAAY,CAAK,CACxC,SAAS,CACT,KAAM,CAAAC,SAAS,CACb,CAACD,IAAI,CAAGZ,EAAE,CAAGA,EAAE,CAAGK,CAAC,CAAGP,EAAE,CAAGA,EAAE,GAAKgB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,GAAG,CAAGR,IAAI,CAAC,CAAGF,CAAC,CAAC,CACjE,KAAM,CAAAW,CAAC,CAAGT,IAAI,CAAG,CAAC,CAAGO,IAAI,CAACG,IAAI,CAACZ,CAAC,CAAGO,IAAI,CAAC,CACxC,MACE,KAAI,EAAK,CAAC,CAAC,CAAGA,IAAI,CAAII,CAAC,CAAC,CAAGF,IAAI,CAACI,GAAG,CAAET,SAAS,CAAG,IAAI,CAAII,SAAS,CAAC,CACnEH,QAAQ,CAEZ,CAAC,CAGD,MAAO,CAAAT,UAAU,CAAC,CAAEkB,GAAG,CAAE,CAAC,CAAEC,GAAG,CAAE,GAAG,CAAEC,IAAI,CAAEV,eAAgB,CAAC,CAAC,CAChE\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_10637746748164_init_data = {
  code: "function springUtilsTs6(mass){const{v0,k,x0,zeta,threshold,duration}=this.__closure;const amplitude=(mass*v0*v0+k*x0*x0)/(Math.exp(1-0.5*zeta)*k);const c=zeta*2*Math.sqrt(k*mass);return 1000*(-2*mass/c)*Math.log(threshold*0.01/amplitude)-duration;}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\animation\\springUtils.ts",
  sourceMap: "{\"version\":3,\"names\":[\"springUtilsTs6\",\"mass\",\"v0\",\"k\",\"x0\",\"zeta\",\"threshold\",\"duration\",\"__closure\",\"amplitude\",\"Math\",\"exp\",\"c\",\"sqrt\",\"log\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/animation/springUtils.ts\"],\"mappings\":\"AAgT0B,QAAC,CAAAA,cAAiBA,CAAAC,IAAA,QAAAC,EAAA,CAAAC,CAAA,CAAAC,EAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAC,QAAA,OAAAC,SAAA,CAExC,KAAM,CAAAC,SAAS,CACb,CAACR,IAAI,CAAGC,EAAE,CAAGA,EAAE,CAAGC,CAAC,CAAGC,EAAE,CAAGA,EAAE,GAAKM,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,GAAG,CAAGN,IAAI,CAAC,CAAGF,CAAC,CAAC,CACjE,KAAM,CAAAS,CAAC,CAAGP,IAAI,CAAG,CAAC,CAAGK,IAAI,CAACG,IAAI,CAACV,CAAC,CAAGF,IAAI,CAAC,CACxC,MACE,KAAI,EAAK,CAAC,CAAC,CAAGA,IAAI,CAAIW,CAAC,CAAC,CAAGF,IAAI,CAACI,GAAG,CAAER,SAAS,CAAG,IAAI,CAAIG,SAAS,CAAC,CACnEF,QAAQ,CAEZ\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var calculateNewMassToMatchDuration = exports.calculateNewMassToMatchDuration = function () {
  var _e = [new global.Error(), -2, -27];
  var calculateNewMassToMatchDuration = function calculateNewMassToMatchDuration(x0, config, v0) {
    if (config.skipAnimation) {
      return 0;
    }
    var k = config.stiffness,
      zeta = config.dampingRatio,
      threshold = config.restSpeedThreshold,
      duration = config.duration;
    var durationForMass = function () {
      var _e = [new global.Error(), -7, -27];
      var springUtilsTs6 = function springUtilsTs6(mass) {
        var amplitude = (mass * v0 * v0 + k * x0 * x0) / (Math.exp(1 - 0.5 * zeta) * k);
        var c = zeta * 2 * Math.sqrt(k * mass);
        return 1000 * (-2 * mass / c) * Math.log(threshold * 0.01 / amplitude) - duration;
      };
      springUtilsTs6.__closure = {
        v0: v0,
        k: k,
        x0: x0,
        zeta: zeta,
        threshold: threshold,
        duration: duration
      };
      springUtilsTs6.__workletHash = 10637746748164;
      springUtilsTs6.__initData = _worklet_10637746748164_init_data;
      springUtilsTs6.__stackDetails = _e;
      return springUtilsTs6;
    }();
    return bisectRoot({
      min: 0,
      max: 100,
      func: durationForMass
    });
  };
  calculateNewMassToMatchDuration.__closure = {
    bisectRoot: bisectRoot
  };
  calculateNewMassToMatchDuration.__workletHash = 12068687713707;
  calculateNewMassToMatchDuration.__initData = _worklet_12068687713707_init_data;
  calculateNewMassToMatchDuration.__stackDetails = _e;
  return calculateNewMassToMatchDuration;
}();
var _worklet_3205099824846_init_data = {
  code: "function criticallyDampedSpringCalculations_springUtilsTs7(animation,precalculatedValues){const{toValue:toValue}=animation;const{v0:v0,x0:x0,omega0:omega0,t:t}=precalculatedValues;const criticallyDampedEnvelope=Math.exp(-omega0*t);const criticallyDampedPosition=toValue-criticallyDampedEnvelope*(x0+(v0+omega0*x0)*t);const criticallyDampedVelocity=criticallyDampedEnvelope*(v0*(t*omega0-1)+t*x0*omega0*omega0);return{position:criticallyDampedPosition,velocity:criticallyDampedVelocity};}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\animation\\springUtils.ts",
  sourceMap: "{\"version\":3,\"names\":[\"criticallyDampedSpringCalculations_springUtilsTs7\",\"animation\",\"precalculatedValues\",\"toValue\",\"v0\",\"x0\",\"omega0\",\"t\",\"criticallyDampedEnvelope\",\"Math\",\"exp\",\"criticallyDampedPosition\",\"criticallyDampedVelocity\",\"position\",\"velocity\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/animation/springUtils.ts\"],\"mappings\":\"AA+TO,SAAAA,iDAELA,CAAAC,SAAA,CAAAC,mBAMwC,EAExC,KAAM,CAAEC,OAAA,CAAAA,OAAQ,CAAC,CAAGF,SAAS,CAE7B,KAAM,CAAEG,EAAE,CAAFA,EAAE,CAAEC,EAAE,CAAFA,EAAE,CAAEC,MAAM,CAANA,MAAM,CAAEC,CAAA,CAAAA,CAAE,CAAC,CAAGL,mBAAmB,CAEjD,KAAM,CAAAM,wBAAwB,CAAGC,IAAI,CAACC,GAAG,CAAC,CAACJ,MAAM,CAAGC,CAAC,CAAC,CACtD,KAAM,CAAAI,wBAAwB,CAC5BR,OAAO,CAAGK,wBAAwB,EAAIH,EAAE,CAAG,CAACD,EAAE,CAAGE,MAAM,CAAGD,EAAE,EAAIE,CAAC,CAAC,CAEpE,KAAM,CAAAK,wBAAwB,CAC5BJ,wBAAwB,EACvBJ,EAAE,EAAIG,CAAC,CAAGD,MAAM,CAAG,CAAC,CAAC,CAAGC,CAAC,CAAGF,EAAE,CAAGC,MAAM,CAAGA,MAAM,CAAC,CAEpD,MAAO,CACLO,QAAQ,CAAEF,wBAAwB,CAClCG,QAAQ,CAAEF,wBACZ,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var criticallyDampedSpringCalculations = exports.criticallyDampedSpringCalculations = function () {
  var _e = [new global.Error(), 1, -27];
  var criticallyDampedSpringCalculations = function criticallyDampedSpringCalculations(animation, precalculatedValues) {
    var toValue = animation.toValue;
    var v0 = precalculatedValues.v0,
      x0 = precalculatedValues.x0,
      omega0 = precalculatedValues.omega0,
      t = precalculatedValues.t;
    var criticallyDampedEnvelope = Math.exp(-omega0 * t);
    var criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);
    var criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);
    return {
      position: criticallyDampedPosition,
      velocity: criticallyDampedVelocity
    };
  };
  criticallyDampedSpringCalculations.__closure = {};
  criticallyDampedSpringCalculations.__workletHash = 3205099824846;
  criticallyDampedSpringCalculations.__initData = _worklet_3205099824846_init_data;
  criticallyDampedSpringCalculations.__stackDetails = _e;
  return criticallyDampedSpringCalculations;
}();
var _worklet_1956193869157_init_data = {
  code: "function underDampedSpringCalculations_springUtilsTs8(animation,precalculatedValues){const{toValue:toValue,current:current,velocity:velocity}=animation;const{zeta:zeta,t:t,omega0:omega0,omega1:omega1}=precalculatedValues;const v0=-velocity;const x0=toValue-current;const sin1=Math.sin(omega1*t);const cos1=Math.cos(omega1*t);const underDampedEnvelope=Math.exp(-zeta*omega0*t);const underDampedFrag1=underDampedEnvelope*(sin1*((v0+zeta*omega0*x0)/omega1)+x0*cos1);const underDampedPosition=toValue-underDampedFrag1;const underDampedVelocity=zeta*omega0*underDampedFrag1-underDampedEnvelope*(cos1*(v0+zeta*omega0*x0)-omega1*x0*sin1);return{position:underDampedPosition,velocity:underDampedVelocity};}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\animation\\springUtils.ts",
  sourceMap: "{\"version\":3,\"names\":[\"underDampedSpringCalculations_springUtilsTs8\",\"animation\",\"precalculatedValues\",\"toValue\",\"current\",\"velocity\",\"zeta\",\"t\",\"omega0\",\"omega1\",\"v0\",\"x0\",\"sin1\",\"Math\",\"sin\",\"cos1\",\"cos\",\"underDampedEnvelope\",\"exp\",\"underDampedFrag1\",\"underDampedPosition\",\"underDampedVelocity\",\"position\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/animation/springUtils.ts\"],\"mappings\":\"AA2VO,SAAAA,4CAELA,CAAAC,SAAA,CAAAC,mBAQwC,EAExC,KAAM,CAAEC,OAAO,CAAPA,OAAO,CAAEC,OAAO,CAAPA,OAAO,CAAEC,QAAA,CAAAA,QAAS,CAAC,CAAGJ,SAAS,CAEhD,KAAM,CAAEK,IAAI,CAAJA,IAAI,CAAEC,CAAC,CAADA,CAAC,CAAEC,MAAM,CAANA,MAAM,CAAEC,MAAA,CAAAA,MAAO,CAAC,CAAGP,mBAAmB,CAEvD,KAAM,CAAAQ,EAAE,CAAG,CAACL,QAAQ,CACpB,KAAM,CAAAM,EAAE,CAAGR,OAAO,CAAGC,OAAO,CAE5B,KAAM,CAAAQ,IAAI,CAAGC,IAAI,CAACC,GAAG,CAACL,MAAM,CAAGF,CAAC,CAAC,CACjC,KAAM,CAAAQ,IAAI,CAAGF,IAAI,CAACG,GAAG,CAACP,MAAM,CAAGF,CAAC,CAAC,CAGjC,KAAM,CAAAU,mBAAmB,CAAGJ,IAAI,CAACK,GAAG,CAAC,CAACZ,IAAI,CAAGE,MAAM,CAAGD,CAAC,CAAC,CACxD,KAAM,CAAAY,gBAAgB,CACpBF,mBAAmB,EAClBL,IAAI,EAAI,CAACF,EAAE,CAAGJ,IAAI,CAAGE,MAAM,CAAGG,EAAE,EAAIF,MAAM,CAAC,CAAGE,EAAE,CAAGI,IAAI,CAAC,CAE3D,KAAM,CAAAK,mBAAmB,CAAGjB,OAAO,CAAGgB,gBAAgB,CAEtD,KAAM,CAAAE,mBAAmB,CACvBf,IAAI,CAAGE,MAAM,CAAGW,gBAAgB,CAChCF,mBAAmB,EAChBF,IAAI,EAAIL,EAAE,CAAGJ,IAAI,CAAGE,MAAM,CAAGG,EAAE,CAAC,CAAGF,MAAM,CAAGE,EAAE,CAAGC,IAAI,CAAC,CAE3D,MAAO,CAAEU,QAAQ,CAAEF,mBAAmB,CAAEf,QAAQ,CAAEgB,mBAAoB,CAAC,CACzE\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var underDampedSpringCalculations = exports.underDampedSpringCalculations = function () {
  var _e = [new global.Error(), 1, -27];
  var underDampedSpringCalculations = function underDampedSpringCalculations(animation, precalculatedValues) {
    var toValue = animation.toValue,
      current = animation.current,
      velocity = animation.velocity;
    var zeta = precalculatedValues.zeta,
      t = precalculatedValues.t,
      omega0 = precalculatedValues.omega0,
      omega1 = precalculatedValues.omega1;
    var v0 = -velocity;
    var x0 = toValue - current;
    var sin1 = Math.sin(omega1 * t);
    var cos1 = Math.cos(omega1 * t);
    var underDampedEnvelope = Math.exp(-zeta * omega0 * t);
    var underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);
    var underDampedPosition = toValue - underDampedFrag1;
    var underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);
    return {
      position: underDampedPosition,
      velocity: underDampedVelocity
    };
  };
  underDampedSpringCalculations.__closure = {};
  underDampedSpringCalculations.__workletHash = 1956193869157;
  underDampedSpringCalculations.__initData = _worklet_1956193869157_init_data;
  underDampedSpringCalculations.__stackDetails = _e;
  return underDampedSpringCalculations;
}();
var _worklet_8489535345851_init_data = {
  code: "function isAnimationTerminatingCalculation_springUtilsTs9(animation,config){const{toValue:toValue,velocity:velocity,startValue:startValue,current:current}=animation;const isOvershooting=config.overshootClamping?current>toValue&&startValue<toValue||current<toValue&&startValue>toValue:false;const isVelocity=Math.abs(velocity)<config.restSpeedThreshold;const isDisplacement=Math.abs(toValue-current)<config.restDisplacementThreshold;return{isOvershooting:isOvershooting,isVelocity:isVelocity,isDisplacement:isDisplacement};}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\animation\\springUtils.ts",
  sourceMap: "{\"version\":3,\"names\":[\"isAnimationTerminatingCalculation_springUtilsTs9\",\"animation\",\"config\",\"toValue\",\"velocity\",\"startValue\",\"current\",\"isOvershooting\",\"overshootClamping\",\"isVelocity\",\"Math\",\"abs\",\"restSpeedThreshold\",\"isDisplacement\",\"restDisplacementThreshold\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/animation/springUtils.ts\"],\"mappings\":\"AAiYO,SAAAA,gDAELA,CAAAC,SAKA,CAAAC,MAAA,EAEA,KAAM,CAAEC,OAAO,CAAPA,OAAO,CAAEC,QAAQ,CAARA,QAAQ,CAAEC,UAAU,CAAVA,UAAU,CAAEC,OAAA,CAAAA,OAAQ,CAAC,CAAGL,SAAS,CAE5D,KAAM,CAAAM,cAAc,CAAGL,MAAM,CAACM,iBAAiB,CAC1CF,OAAO,CAAGH,OAAO,EAAIE,UAAU,CAAGF,OAAO,EACzCG,OAAO,CAAGH,OAAO,EAAIE,UAAU,CAAGF,OAAQ,CAC3C,KAAK,CAET,KAAM,CAAAM,UAAU,CAAGC,IAAI,CAACC,GAAG,CAACP,QAAQ,CAAC,CAAGF,MAAM,CAACU,kBAAkB,CACjE,KAAM,CAAAC,cAAc,CAClBH,IAAI,CAACC,GAAG,CAACR,OAAO,CAAGG,OAAO,CAAC,CAAGJ,MAAM,CAACY,yBAAyB,CAEhE,MAAO,CAAEP,cAAc,CAAdA,cAAc,CAAEE,UAAU,CAAVA,UAAU,CAAEI,cAAA,CAAAA,cAAe,CAAC,CACvD\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var isAnimationTerminatingCalculation = exports.isAnimationTerminatingCalculation = function () {
  var _e = [new global.Error(), 1, -27];
  var isAnimationTerminatingCalculation = function isAnimationTerminatingCalculation(animation, config) {
    var toValue = animation.toValue,
      velocity = animation.velocity,
      startValue = animation.startValue,
      current = animation.current;
    var isOvershooting = config.overshootClamping ? current > toValue && startValue < toValue || current < toValue && startValue > toValue : false;
    var isVelocity = Math.abs(velocity) < config.restSpeedThreshold;
    var isDisplacement = Math.abs(toValue - current) < config.restDisplacementThreshold;
    return {
      isOvershooting: isOvershooting,
      isVelocity: isVelocity,
      isDisplacement: isDisplacement
    };
  };
  isAnimationTerminatingCalculation.__closure = {};
  isAnimationTerminatingCalculation.__workletHash = 8489535345851;
  isAnimationTerminatingCalculation.__initData = _worklet_8489535345851_init_data;
  isAnimationTerminatingCalculation.__stackDetails = _e;
  return isAnimationTerminatingCalculation;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,