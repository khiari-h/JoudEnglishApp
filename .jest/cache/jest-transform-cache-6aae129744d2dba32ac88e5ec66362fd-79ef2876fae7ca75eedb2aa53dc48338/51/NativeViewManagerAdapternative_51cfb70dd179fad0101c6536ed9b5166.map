{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","requireNativeViewManager","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_react","_reactNative","NativeComponentRegistry","_interopRequireWildcard","_requireNativeModule","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","getOwnPropertyDescriptor","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","nativeComponentsCache","Map","requireNativeComponent","viewName","_globalThis$expo","viewModuleName","replace","expoViewConfig","globalThis","expo","getViewConfig","console","warn","assign","uiViewClassName","requireCachedNativeComponent","cachedNativeComponent","nativeComponent","_globalThis$expo$__ex","_globalThis$expo2","viewManagersMetadata","NativeModules","NativeUnimoduleProxy","viewManagerConfig","__DEV__","exportedViewManagerNames","keys","join","appIdentifier","viewNameSuffix","reactNativeViewName","ReactNativeComponent","NativeComponent","_React$PureComponent","_this","_len","arguments","length","args","Array","_key","concat","nativeRef","React","createRef","nativeTag","key","componentDidMount","findNodeHandle","current","render","jsx","props","ref","PureComponent","displayName","nativeModule","requireNativeModule","nativeViewPrototype","ViewPrototype","_unused"],"sources":["NativeViewManagerAdapter.native.tsx"],"sourcesContent":["// Copyright Â© 2024 650 Industries.\n\n'use client';\n\nimport React from 'react';\nimport { NativeModules, NativeMethods, HostComponent, findNodeHandle } from 'react-native';\nimport * as NativeComponentRegistry from 'react-native/Libraries/NativeComponent/NativeComponentRegistry';\n\nimport { requireNativeModule } from './requireNativeModule';\n\n// To make the transition from React Native's `requireNativeComponent` to Expo's\n// `requireNativeViewManager` as easy as possible, `requireNativeViewManager` is a drop-in\n// replacement for `requireNativeComponent`.\n//\n// For each view manager, we create a wrapper component that accepts all of the props available to\n// the author of the universal module. This wrapper component splits the props into two sets: props\n// passed to React Native's View (ex: style, testID) and custom view props, which are passed to the\n// adapter view component in a prop called `proxiedProperties`.\n\n/**\n * A map that caches registered native components.\n */\nconst nativeComponentsCache = new Map<string, HostComponent<any>>();\n\n/**\n * Requires a React Native component using the static view config from an Expo module.\n */\nfunction requireNativeComponent<Props>(viewName: string): HostComponent<Props> {\n  return NativeComponentRegistry.get<Props>(viewName, () => {\n    const viewModuleName = viewName.replace('ViewManagerAdapter_', '');\n    const expoViewConfig = globalThis.expo?.getViewConfig(viewModuleName);\n\n    if (!expoViewConfig) {\n      console.warn('Unable to get the view config for %s', viewModuleName);\n    }\n\n    return {\n      uiViewClassName: viewName,\n      ...expoViewConfig,\n    };\n  });\n}\n\n/**\n * Requires a React Native component from cache if possible. This prevents\n * \"Tried to register two views with the same name\" errors on fast refresh, but\n * also when there are multiple versions of the same package with native component.\n */\nfunction requireCachedNativeComponent<Props>(viewName: string): HostComponent<Props> {\n  const cachedNativeComponent = nativeComponentsCache.get(viewName);\n\n  if (!cachedNativeComponent) {\n    const nativeComponent = requireNativeComponent<Props>(viewName);\n    nativeComponentsCache.set(viewName, nativeComponent);\n    return nativeComponent;\n  }\n  return cachedNativeComponent;\n}\n\n/**\n * A drop-in replacement for `requireNativeComponent`.\n */\nexport function requireNativeViewManager<P>(viewName: string): React.ComponentType<P> {\n  const { viewManagersMetadata } = NativeModules.NativeUnimoduleProxy;\n  const viewManagerConfig = viewManagersMetadata?.[viewName];\n\n  if (__DEV__ && !viewManagerConfig) {\n    const exportedViewManagerNames = Object.keys(viewManagersMetadata).join(', ');\n    console.warn(\n      `The native view manager required by name (${viewName}) from NativeViewManagerAdapter isn't exported by expo-modules-core. Views of this type may not render correctly. Exported view managers: [${exportedViewManagerNames}].`\n    );\n  }\n\n  const appIdentifier = globalThis.expo?.['__expo_app_identifier__'] ?? '';\n  const viewNameSuffix = appIdentifier ? `_${appIdentifier}` : '';\n  // Set up the React Native native component, which is an adapter to the universal module's view\n  // manager\n  const reactNativeViewName = `ViewManagerAdapter_${viewName}${viewNameSuffix}`;\n  const ReactNativeComponent = requireCachedNativeComponent(reactNativeViewName);\n\n  class NativeComponent extends React.PureComponent<P> {\n    static displayName = viewName;\n\n    nativeRef = React.createRef<React.Component & NativeMethods>();\n\n    // This will be accessed from native when the prototype functions are called,\n    // in order to find the associated native view.\n    nativeTag: number | null = null;\n\n    componentDidMount(): void {\n      this.nativeTag = findNodeHandle(this.nativeRef.current);\n    }\n\n    render(): React.ReactNode {\n      return <ReactNativeComponent {...this.props} ref={this.nativeRef} />;\n    }\n  }\n\n  try {\n    const nativeModule = requireNativeModule(viewName);\n    const nativeViewPrototype = nativeModule.ViewPrototype;\n\n    if (nativeViewPrototype) {\n      // Assign native view functions to the component prototype so they can be accessed from the ref.\n      Object.assign(NativeComponent.prototype, nativeViewPrototype);\n    }\n  } catch {\n    // `requireNativeModule` may throw an error when the native module cannot be found.\n    // In some tests we don't mock the entire modules, but we do want to mock native views. For now,\n    // until we still have to support the legacy modules proxy and don't have better ways to mock,\n    // let's just gracefully skip assigning the prototype functions.\n    // See: https://github.com/expo/expo/blob/main/packages/expo-modules-core/src/__tests__/NativeViewManagerAdapter-test.native.tsx\n  }\n\n  return NativeComponent;\n}\n"],"mappings":"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","ignoreList":[]}