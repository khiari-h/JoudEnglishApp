{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","applyStyleForBelowTopScreen","applyStyle","_PlatformChecker","_UpdateProps","IS_FABRIC","isFabric","_worklet_8310936845909_init_data","code","location","sourceMap","version","createViewDescriptorPaper","_e","global","Error","screenId","tag","name","__closure","__workletHash","__initData","__stackDetails","_worklet_3990388224579_init_data","createViewDescriptorFabric","shadowNodeWrapper","createViewDescriptor","_worklet_6014416522485_init_data","applyStyleForTopScreen","screenTransitionConfig","event","screenDimensions","topScreenId","screenTransition","computeTopScreenStyle","topScreenStyle","topScreenDescriptor","updateProps","undefined","_worklet_6906576859713_init_data","belowTopScreenId","computeBelowTopScreenStyle","belowTopScreenStyle","belowTopScreenDescriptor","_worklet_11851995323809_init_data"],"sources":["styleUpdater.ts"],"sourcesContent":["'use strict';\nimport { isFabric } from '../PlatformChecker';\nimport updateProps from '../UpdateProps';\nimport type { ShadowNodeWrapper } from '../commonTypes';\nimport type { Descriptor } from '../hook/commonTypes';\nimport type {\n  PanGestureHandlerEventPayload,\n  ScreenTransitionConfig,\n} from './commonTypes';\n\nconst IS_FABRIC = isFabric();\n\nfunction createViewDescriptorPaper(screenId: number | ShadowNodeWrapper) {\n  'worklet';\n  return { tag: screenId, name: 'RCTView' };\n}\nfunction createViewDescriptorFabric(screenId: number | ShadowNodeWrapper) {\n  'worklet';\n  return { shadowNodeWrapper: screenId };\n}\nconst createViewDescriptor = IS_FABRIC\n  ? createViewDescriptorFabric\n  : createViewDescriptorPaper;\n\nfunction applyStyleForTopScreen(\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload\n) {\n  'worklet';\n  const { screenDimensions, topScreenId, screenTransition } =\n    screenTransitionConfig;\n  const { topScreenStyle: computeTopScreenStyle } = screenTransition;\n  const topScreenStyle = computeTopScreenStyle(event, screenDimensions);\n  const topScreenDescriptor = {\n    value: [createViewDescriptor(topScreenId)] as Descriptor[],\n  };\n  updateProps(topScreenDescriptor, topScreenStyle, undefined);\n}\n\nexport function applyStyleForBelowTopScreen(\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload\n) {\n  'worklet';\n  const { screenDimensions, belowTopScreenId, screenTransition } =\n    screenTransitionConfig;\n  const { belowTopScreenStyle: computeBelowTopScreenStyle } = screenTransition;\n  const belowTopScreenStyle = computeBelowTopScreenStyle(\n    event,\n    screenDimensions\n  );\n  const belowTopScreenDescriptor = {\n    value: [createViewDescriptor(belowTopScreenId)] as Descriptor[],\n  };\n  updateProps(belowTopScreenDescriptor, belowTopScreenStyle, undefined);\n}\n\nexport function applyStyle(\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload\n) {\n  'worklet';\n  applyStyleForTopScreen(screenTransitionConfig, event);\n  applyStyleForBelowTopScreen(screenTransitionConfig, event);\n}\n"],"mappings":"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","ignoreList":[]}