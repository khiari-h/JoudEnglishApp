{"version":3,"names":["_NavigationButtons","_interopRequireDefault","require","_jsxRuntime","cov_275i6lzrke","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","VocabularyNavigation","_ref","onPrevious","onNext","_ref$canGoPrevious","canGoPrevious","_ref$isLast","isLast","levelColor","jsx","default","disablePrevious","disableNext","primaryColor","buttonLabels","next","previous","finish","_default","exports"],"sources":["index.js"],"sourcesContent":["// VocabularyNavigation/index.js - VERSION OPTIMISÉE (plus de \"1/2\" redondant)\r\n\r\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\r\n\r\n/**\r\n * 🎯 VocabularyNavigation - Version Ultra-Simplifiée\r\n * - Plus d'indicateur \"1/2\" redondant \r\n * - Plus de wrapper inutile\r\n * - NavigationButtons gère tout maintenant\r\n */\r\nconst VocabularyNavigation = ({\r\n  onPrevious,\r\n  onNext,\r\n  canGoPrevious = true,\r\n  isLast = false,\r\n  levelColor,\r\n}) => {\r\n  return (\r\n    <NavigationButtons\r\n      onNext={onNext}\r\n      onPrevious={onPrevious}\r\n      disablePrevious={!canGoPrevious}\r\n      disableNext={false}\r\n      primaryColor={levelColor}\r\n      isLast={isLast} // ← Nouveau prop simple\r\n      buttonLabels={{\r\n        next: \"Suivant\",\r\n        previous: \"Précédent\", \r\n        finish: \"Terminer\"\r\n      }}\r\n      // 🧹 SUPPRIMÉ : currentIndex, totalCount, showSkip, variant, wrapper View\r\n    />\r\n  );\r\n};\r\n\r\nexport default VocabularyNavigation;"],"mappings":"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","ignoreList":[]}