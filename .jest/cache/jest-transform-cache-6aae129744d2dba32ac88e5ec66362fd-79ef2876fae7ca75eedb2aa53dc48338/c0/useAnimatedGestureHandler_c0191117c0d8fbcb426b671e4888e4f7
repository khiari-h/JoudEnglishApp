340cbddccb54e019145ce7c177c1c2b1
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAnimatedGestureHandler = useAnimatedGestureHandler;
var _useHandler2 = require("./useHandler");
var _useEvent = require("./useEvent");
var EVENT_TYPE = {
  UNDETERMINED: 0,
  FAILED: 1,
  BEGAN: 2,
  CANCELLED: 3,
  ACTIVE: 4,
  END: 5
};
var _worklet_251895770429_init_data = {
  code: "function useAnimatedGestureHandlerTs1(e){const{useWeb,EVENT_TYPE,handlers,context}=this.__closure;const event=useWeb?e.nativeEvent:e;if(event.state===EVENT_TYPE.BEGAN&&handlers.onStart){handlers.onStart(event,context);}if(event.state===EVENT_TYPE.ACTIVE&&handlers.onActive){handlers.onActive(event,context);}if(event.oldState===EVENT_TYPE.ACTIVE&&event.state===EVENT_TYPE.END&&handlers.onEnd){handlers.onEnd(event,context);}if(event.oldState===EVENT_TYPE.BEGAN&&event.state===EVENT_TYPE.FAILED&&handlers.onFail){handlers.onFail(event,context);}if(event.oldState===EVENT_TYPE.ACTIVE&&event.state===EVENT_TYPE.CANCELLED&&handlers.onCancel){handlers.onCancel(event,context);}if((event.oldState===EVENT_TYPE.BEGAN||event.oldState===EVENT_TYPE.ACTIVE)&&event.state!==EVENT_TYPE.BEGAN&&event.state!==EVENT_TYPE.ACTIVE&&handlers.onFinish){handlers.onFinish(event,context,event.state===EVENT_TYPE.CANCELLED||event.state===EVENT_TYPE.FAILED);}}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\hook\\useAnimatedGestureHandler.ts",
  sourceMap: "{\"version\":3,\"names\":[\"useAnimatedGestureHandlerTs1\",\"e\",\"useWeb\",\"EVENT_TYPE\",\"handlers\",\"context\",\"__closure\",\"event\",\"nativeEvent\",\"state\",\"BEGAN\",\"onStart\",\"ACTIVE\",\"onActive\",\"oldState\",\"END\",\"onEnd\",\"FAILED\",\"onFail\",\"CANCELLED\",\"onCancel\",\"onFinish\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/hook/useAnimatedGestureHandler.ts\"],\"mappings\":\"AA0FkB,QAAC,CAAAA,4BAAwBA,CAAAC,CAAA,QAAAC,MAAA,CAAAC,UAAA,CAAAC,QAAA,CAAAC,OAAA,OAAAC,SAAA,CAEvC,KAAM,CAAAC,KAAK,CAAGL,MAAM,CAIdD,CAAC,CAAWO,WAAW,CACxBP,CAA4B,CAEjC,GAAIM,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACO,KAAK,EAAIN,QAAQ,CAACO,OAAO,CAAE,CACxDP,QAAQ,CAACO,OAAO,CAACJ,KAAK,CAAEF,OAAO,CAAC,CAClC,CACA,GAAIE,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACS,MAAM,EAAIR,QAAQ,CAACS,QAAQ,CAAE,CAC1DT,QAAQ,CAACS,QAAQ,CAACN,KAAK,CAAEF,OAAO,CAAC,CACnC,CACA,GACEE,KAAK,CAACO,QAAQ,GAAKX,UAAU,CAACS,MAAM,EACpCL,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACY,GAAG,EAC9BX,QAAQ,CAACY,KAAK,CACd,CACAZ,QAAQ,CAACY,KAAK,CAACT,KAAK,CAAEF,OAAO,CAAC,CAChC,CACA,GACEE,KAAK,CAACO,QAAQ,GAAKX,UAAU,CAACO,KAAK,EACnCH,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACc,MAAM,EACjCb,QAAQ,CAACc,MAAM,CACf,CACAd,QAAQ,CAACc,MAAM,CAACX,KAAK,CAAEF,OAAO,CAAC,CACjC,CACA,GACEE,KAAK,CAACO,QAAQ,GAAKX,UAAU,CAACS,MAAM,EACpCL,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACgB,SAAS,EACpCf,QAAQ,CAACgB,QAAQ,CACjB,CACAhB,QAAQ,CAACgB,QAAQ,CAACb,KAAK,CAAEF,OAAO,CAAC,CACnC,CACA,GACE,CAACE,KAAK,CAACO,QAAQ,GAAKX,UAAU,CAACO,KAAK,EAClCH,KAAK,CAACO,QAAQ,GAAKX,UAAU,CAACS,MAAM,GACtCL,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACO,KAAK,EAChCH,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACS,MAAM,EACjCR,QAAQ,CAACiB,QAAQ,CACjB,CACAjB,QAAQ,CAACiB,QAAQ,CACfd,KAAK,CACLF,OAAO,CACPE,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACgB,SAAS,EAClCZ,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACc,MAC/B,CAAC,CACH,CACF\",\"ignoreList\":[]}",
  version: "3.16.7"
};
function useAnimatedGestureHandler(handlers, dependencies) {
  var _useHandler = (0, _useHandler2.useHandler)(handlers, dependencies),
    context = _useHandler.context,
    doDependenciesDiffer = _useHandler.doDependenciesDiffer,
    useWeb = _useHandler.useWeb;
  var handler = function () {
    var _e = [new global.Error(), -5, -27];
    var useAnimatedGestureHandlerTs1 = function useAnimatedGestureHandlerTs1(e) {
      var event = useWeb ? e.nativeEvent : e;
      if (event.state === EVENT_TYPE.BEGAN && handlers.onStart) {
        handlers.onStart(event, context);
      }
      if (event.state === EVENT_TYPE.ACTIVE && handlers.onActive) {
        handlers.onActive(event, context);
      }
      if (event.oldState === EVENT_TYPE.ACTIVE && event.state === EVENT_TYPE.END && handlers.onEnd) {
        handlers.onEnd(event, context);
      }
      if (event.oldState === EVENT_TYPE.BEGAN && event.state === EVENT_TYPE.FAILED && handlers.onFail) {
        handlers.onFail(event, context);
      }
      if (event.oldState === EVENT_TYPE.ACTIVE && event.state === EVENT_TYPE.CANCELLED && handlers.onCancel) {
        handlers.onCancel(event, context);
      }
      if ((event.oldState === EVENT_TYPE.BEGAN || event.oldState === EVENT_TYPE.ACTIVE) && event.state !== EVENT_TYPE.BEGAN && event.state !== EVENT_TYPE.ACTIVE && handlers.onFinish) {
        handlers.onFinish(event, context, event.state === EVENT_TYPE.CANCELLED || event.state === EVENT_TYPE.FAILED);
      }
    };
    useAnimatedGestureHandlerTs1.__closure = {
      useWeb: useWeb,
      EVENT_TYPE: EVENT_TYPE,
      handlers: handlers,
      context: context
    };
    useAnimatedGestureHandlerTs1.__workletHash = 251895770429;
    useAnimatedGestureHandlerTs1.__initData = _worklet_251895770429_init_data;
    useAnimatedGestureHandlerTs1.__stackDetails = _e;
    return useAnimatedGestureHandlerTs1;
  }();
  if (useWeb) {
    return handler;
  }
  return (0, _useEvent.useEvent)(handler, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], doDependenciesDiffer);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInVzZUFuaW1hdGVkR2VzdHVyZUhhbmRsZXIiLCJfdXNlSGFuZGxlcjIiLCJyZXF1aXJlIiwiX3VzZUV2ZW50IiwiRVZFTlRfVFlQRSIsIlVOREVURVJNSU5FRCIsIkZBSUxFRCIsIkJFR0FOIiwiQ0FOQ0VMTEVEIiwiQUNUSVZFIiwiRU5EIiwiX3dvcmtsZXRfMjUxODk1NzcwNDI5X2luaXRfZGF0YSIsImNvZGUiLCJsb2NhdGlvbiIsInNvdXJjZU1hcCIsInZlcnNpb24iLCJoYW5kbGVycyIsImRlcGVuZGVuY2llcyIsIl91c2VIYW5kbGVyIiwidXNlSGFuZGxlciIsImNvbnRleHQiLCJkb0RlcGVuZGVuY2llc0RpZmZlciIsInVzZVdlYiIsImhhbmRsZXIiLCJfZSIsImdsb2JhbCIsIkVycm9yIiwidXNlQW5pbWF0ZWRHZXN0dXJlSGFuZGxlclRzMSIsImUiLCJldmVudCIsIm5hdGl2ZUV2ZW50Iiwic3RhdGUiLCJvblN0YXJ0Iiwib25BY3RpdmUiLCJvbGRTdGF0ZSIsIm9uRW5kIiwib25GYWlsIiwib25DYW5jZWwiLCJvbkZpbmlzaCIsIl9fY2xvc3VyZSIsIl9fd29ya2xldEhhc2giLCJfX2luaXREYXRhIiwiX19zdGFja0RldGFpbHMiLCJ1c2VFdmVudCJdLCJzb3VyY2VzIjpbInVzZUFuaW1hdGVkR2VzdHVyZUhhbmRsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHR5cGUge1xuICBEZXBlbmRlbmN5TGlzdCxcbiAgTmF0aXZlRXZlbnRXcmFwcGVyLFxuICBSZWFuaW1hdGVkRXZlbnQsXG59IGZyb20gJy4vY29tbW9uVHlwZXMnO1xuaW1wb3J0IHsgdXNlSGFuZGxlciB9IGZyb20gJy4vdXNlSGFuZGxlcic7XG5pbXBvcnQgeyB1c2VFdmVudCB9IGZyb20gJy4vdXNlRXZlbnQnO1xuXG5jb25zdCBFVkVOVF9UWVBFID0ge1xuICBVTkRFVEVSTUlORUQ6IDAsXG4gIEZBSUxFRDogMSxcbiAgQkVHQU46IDIsXG4gIENBTkNFTExFRDogMyxcbiAgQUNUSVZFOiA0LFxuICBFTkQ6IDUsXG59IGFzIGNvbnN0O1xuXG50eXBlIFN0YXRlVHlwZSA9ICh0eXBlb2YgRVZFTlRfVFlQRSlba2V5b2YgdHlwZW9mIEVWRU5UX1RZUEVdO1xuXG4vLyBUaGlzIHR5cGUgY29tZXMgZnJvbSBSZWFjdCBOYXRpdmUgR2VzdHVyZSBIYW5kbGVyXG4vLyBpbXBvcnQgdHlwZSB7IFBhbkdlc3R1cmVIYW5kbGVyR2VzdHVyZUV2ZW50IGFzIERlZmF1bHRFdmVudCB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1nZXN0dXJlLWhhbmRsZXInO1xudHlwZSBEZWZhdWx0RXZlbnQgPSB7XG4gIG5hdGl2ZUV2ZW50OiB7XG4gICAgcmVhZG9ubHkgaGFuZGxlclRhZzogbnVtYmVyO1xuICAgIHJlYWRvbmx5IG51bWJlck9mUG9pbnRlcnM6IG51bWJlcjtcbiAgICByZWFkb25seSBzdGF0ZTogKHR5cGVvZiBFVkVOVF9UWVBFKVtrZXlvZiB0eXBlb2YgRVZFTlRfVFlQRV07XG4gICAgcmVhZG9ubHkgeDogbnVtYmVyO1xuICAgIHJlYWRvbmx5IHk6IG51bWJlcjtcbiAgICByZWFkb25seSBhYnNvbHV0ZVg6IG51bWJlcjtcbiAgICByZWFkb25seSBhYnNvbHV0ZVk6IG51bWJlcjtcbiAgICByZWFkb25seSB0cmFuc2xhdGlvblg6IG51bWJlcjtcbiAgICByZWFkb25seSB0cmFuc2xhdGlvblk6IG51bWJlcjtcbiAgICByZWFkb25seSB2ZWxvY2l0eVg6IG51bWJlcjtcbiAgICByZWFkb25seSB2ZWxvY2l0eVk6IG51bWJlcjtcbiAgfTtcbn07XG5cbmludGVyZmFjZSBQcm9wc1VzZWRJblVzZUFuaW1hdGVkR2VzdHVyZUhhbmRsZXIge1xuICBoYW5kbGVyVGFnPzogbnVtYmVyO1xuICBudW1iZXJPZlBvaW50ZXJzPzogbnVtYmVyO1xuICBzdGF0ZT86IFN0YXRlVHlwZTtcbiAgb2xkU3RhdGU/OiBTdGF0ZVR5cGU7XG59XG5cbmV4cG9ydCB0eXBlIEdlc3R1cmVIYW5kbGVyRXZlbnQ8RXZlbnQgZXh0ZW5kcyBvYmplY3Q+ID1cbiAgfCBSZWFuaW1hdGVkRXZlbnQ8RXZlbnQ+XG4gIHwgRXZlbnQ7XG5cbnR5cGUgR2VzdHVyZUhhbmRsZXI8XG4gIEV2ZW50IGV4dGVuZHMgTmF0aXZlRXZlbnRXcmFwcGVyPFByb3BzVXNlZEluVXNlQW5pbWF0ZWRHZXN0dXJlSGFuZGxlcj4sXG4gIENvbnRleHQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPixcbj4gPSAoXG4gIGV2ZW50UGF5bG9hZDogUmVhbmltYXRlZEV2ZW50PEV2ZW50PixcbiAgY29udGV4dDogQ29udGV4dCxcbiAgaXNDYW5jZWxlZE9yRmFpbGVkPzogYm9vbGVhblxuKSA9PiB2b2lkO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdlc3R1cmVIYW5kbGVyczxcbiAgRXZlbnQgZXh0ZW5kcyBOYXRpdmVFdmVudFdyYXBwZXI8UHJvcHNVc2VkSW5Vc2VBbmltYXRlZEdlc3R1cmVIYW5kbGVyPixcbiAgQ29udGV4dCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHVua25vd24+LFxuPiB7XG4gIFtrZXk6IHN0cmluZ106IEdlc3R1cmVIYW5kbGVyPEV2ZW50LCBDb250ZXh0PiB8IHVuZGVmaW5lZDtcbiAgb25TdGFydD86IEdlc3R1cmVIYW5kbGVyPEV2ZW50LCBDb250ZXh0PjtcbiAgb25BY3RpdmU/OiBHZXN0dXJlSGFuZGxlcjxFdmVudCwgQ29udGV4dD47XG4gIG9uRW5kPzogR2VzdHVyZUhhbmRsZXI8RXZlbnQsIENvbnRleHQ+O1xuICBvbkZhaWw/OiBHZXN0dXJlSGFuZGxlcjxFdmVudCwgQ29udGV4dD47XG4gIG9uQ2FuY2VsPzogR2VzdHVyZUhhbmRsZXI8RXZlbnQsIENvbnRleHQ+O1xuICBvbkZpbmlzaD86IEdlc3R1cmVIYW5kbGVyPEV2ZW50LCBDb250ZXh0Pjtcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2VBbmltYXRlZEdlc3R1cmVIYW5kbGVyIGlzIGFuIG9sZCBBUEkgd2hpY2ggaXMgbm8gbG9uZ2VyXG4gKiAgIHN1cHBvcnRlZC5cbiAqXG4gKiAgIFBsZWFzZSBjaGVja1xuICogICBodHRwczovL2RvY3Muc3dtYW5zaW9uLmNvbS9yZWFjdC1uYXRpdmUtZ2VzdHVyZS1oYW5kbGVyL2RvY3MvZ3VpZGVzL3VwZ3JhZGluZy10by0yL1xuICogICBmb3IgaW5mb3JtYXRpb24gYWJvdXQgaG93IHRvIG1pZ3JhdGUgdG8gYHJlYWN0LW5hdGl2ZS1nZXN0dXJlLWhhbmRsZXJgIHYyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VBbmltYXRlZEdlc3R1cmVIYW5kbGVyPFxuICBFdmVudCBleHRlbmRzXG4gICAgTmF0aXZlRXZlbnRXcmFwcGVyPFByb3BzVXNlZEluVXNlQW5pbWF0ZWRHZXN0dXJlSGFuZGxlcj4gPSBEZWZhdWx0RXZlbnQsXG4gIENvbnRleHQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiA9IFJlY29yZDxzdHJpbmcsIHVua25vd24+LFxuPihoYW5kbGVyczogR2VzdHVyZUhhbmRsZXJzPEV2ZW50LCBDb250ZXh0PiwgZGVwZW5kZW5jaWVzPzogRGVwZW5kZW5jeUxpc3QpIHtcbiAgdHlwZSBXZWJPck5hdGl2ZUV2ZW50ID0gRXZlbnQgfCBSZWFuaW1hdGVkRXZlbnQ8RXZlbnQ+O1xuXG4gIGNvbnN0IHsgY29udGV4dCwgZG9EZXBlbmRlbmNpZXNEaWZmZXIsIHVzZVdlYiB9ID0gdXNlSGFuZGxlcjxFdmVudCwgQ29udGV4dD4oXG4gICAgaGFuZGxlcnMsXG4gICAgZGVwZW5kZW5jaWVzXG4gICk7XG4gIGNvbnN0IGhhbmRsZXIgPSAoZTogV2ViT3JOYXRpdmVFdmVudCkgPT4ge1xuICAgICd3b3JrbGV0JztcbiAgICBjb25zdCBldmVudCA9IHVzZVdlYlxuICAgICAgPyAvLyBPbiBXZWIgd2UgZ2V0IGV2ZW50cyBzdHJhaWdodCBmcm9tIFJlYWN0IE5hdGl2ZSBhbmQgdGhleSBkb24ndCBoYXZlXG4gICAgICAgIC8vIHRoZSBgZXZlbnROYW1lYCBmaWVsZCB0aGVyZS4gVG8gc2ltcGxpZnkgdGhlIHR5cGVzIGhlcmUgd2UganVzdFxuICAgICAgICAvLyBjYXN0IGl0IGFzIHRoZSBmaWVsZCB3YXMgYXZhaWxhYmxlLlxuICAgICAgICAoKGUgYXMgRXZlbnQpLm5hdGl2ZUV2ZW50IGFzIFJlYW5pbWF0ZWRFdmVudDxFdmVudD4pXG4gICAgICA6IChlIGFzIFJlYW5pbWF0ZWRFdmVudDxFdmVudD4pO1xuXG4gICAgaWYgKGV2ZW50LnN0YXRlID09PSBFVkVOVF9UWVBFLkJFR0FOICYmIGhhbmRsZXJzLm9uU3RhcnQpIHtcbiAgICAgIGhhbmRsZXJzLm9uU3RhcnQoZXZlbnQsIGNvbnRleHQpO1xuICAgIH1cbiAgICBpZiAoZXZlbnQuc3RhdGUgPT09IEVWRU5UX1RZUEUuQUNUSVZFICYmIGhhbmRsZXJzLm9uQWN0aXZlKSB7XG4gICAgICBoYW5kbGVycy5vbkFjdGl2ZShldmVudCwgY29udGV4dCk7XG4gICAgfVxuICAgIGlmIChcbiAgICAgIGV2ZW50Lm9sZFN0YXRlID09PSBFVkVOVF9UWVBFLkFDVElWRSAmJlxuICAgICAgZXZlbnQuc3RhdGUgPT09IEVWRU5UX1RZUEUuRU5EICYmXG4gICAgICBoYW5kbGVycy5vbkVuZFxuICAgICkge1xuICAgICAgaGFuZGxlcnMub25FbmQoZXZlbnQsIGNvbnRleHQpO1xuICAgIH1cbiAgICBpZiAoXG4gICAgICBldmVudC5vbGRTdGF0ZSA9PT0gRVZFTlRfVFlQRS5CRUdBTiAmJlxuICAgICAgZXZlbnQuc3RhdGUgPT09IEVWRU5UX1RZUEUuRkFJTEVEICYmXG4gICAgICBoYW5kbGVycy5vbkZhaWxcbiAgICApIHtcbiAgICAgIGhhbmRsZXJzLm9uRmFpbChldmVudCwgY29udGV4dCk7XG4gICAgfVxuICAgIGlmIChcbiAgICAgIGV2ZW50Lm9sZFN0YXRlID09PSBFVkVOVF9UWVBFLkFDVElWRSAmJlxuICAgICAgZXZlbnQuc3RhdGUgPT09IEVWRU5UX1RZUEUuQ0FOQ0VMTEVEICYmXG4gICAgICBoYW5kbGVycy5vbkNhbmNlbFxuICAgICkge1xuICAgICAgaGFuZGxlcnMub25DYW5jZWwoZXZlbnQsIGNvbnRleHQpO1xuICAgIH1cbiAgICBpZiAoXG4gICAgICAoZXZlbnQub2xkU3RhdGUgPT09IEVWRU5UX1RZUEUuQkVHQU4gfHxcbiAgICAgICAgZXZlbnQub2xkU3RhdGUgPT09IEVWRU5UX1RZUEUuQUNUSVZFKSAmJlxuICAgICAgZXZlbnQuc3RhdGUgIT09IEVWRU5UX1RZUEUuQkVHQU4gJiZcbiAgICAgIGV2ZW50LnN0YXRlICE9PSBFVkVOVF9UWVBFLkFDVElWRSAmJlxuICAgICAgaGFuZGxlcnMub25GaW5pc2hcbiAgICApIHtcbiAgICAgIGhhbmRsZXJzLm9uRmluaXNoKFxuICAgICAgICBldmVudCxcbiAgICAgICAgY29udGV4dCxcbiAgICAgICAgZXZlbnQuc3RhdGUgPT09IEVWRU5UX1RZUEUuQ0FOQ0VMTEVEIHx8XG4gICAgICAgICAgZXZlbnQuc3RhdGUgPT09IEVWRU5UX1RZUEUuRkFJTEVEXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICBpZiAodXNlV2ViKSB7XG4gICAgcmV0dXJuIGhhbmRsZXI7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcbiAgcmV0dXJuIHVzZUV2ZW50PEV2ZW50PihcbiAgICBoYW5kbGVyLFxuICAgIFsnb25HZXN0dXJlSGFuZGxlclN0YXRlQ2hhbmdlJywgJ29uR2VzdHVyZUhhbmRsZXJFdmVudCddLFxuICAgIGRvRGVwZW5kZW5jaWVzRGlmZmVyXG4gICAgLy8gVGhpcyBpcyBub3QgY29ycmVjdCBidXQgd2Ugd2FudCB0byBtYWtlIEdIIHRoaW5rIGl0IHJlY2VpdmVzIGEgZnVuY3Rpb24uXG4gICkgYXMgdW5rbm93biBhcyAoZTogRXZlbnQpID0+IHZvaWQ7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FB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