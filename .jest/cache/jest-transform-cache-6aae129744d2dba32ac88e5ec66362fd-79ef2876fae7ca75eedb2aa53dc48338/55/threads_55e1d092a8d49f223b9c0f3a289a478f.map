{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","callMicrotasks","executeOnUIRuntimeSync","setupMicrotasks","runOnUIImmediately","runOnUI","runOnJS","_toConsumableArray2","_slicedToArray2","_NativeReanimated","_PlatformChecker","_shareables","_commonTypes","_errors","IS_JEST","isJest","SHOULD_BE_USE_WEB","shouldBeUseWeb","_runOnUIQueue","_worklet_3377922715333_init_data","code","location","sourceMap","version","_e","global","Error","microtasksQueue","isExecutingMicrotasksQueue","queueMicrotask","callback","push","__callMicrotasks","index","length","_maybeFlushUIUpdatesQueue","__closure","__workletHash","__initData","__stackDetails","_worklet_15627757384281_init_data","callMicrotasksOnUIThread","_worklet_15677667388482_init_data","_worklet_8194144187976_init_data","_worklet_3662355562716_init_data","worklet","__DEV__","_WORKLET","ReanimatedError","isWorkletFunction","_len","arguments","args","Array","_key","NativeReanimatedModule","scheduleOnUI","makeShareableCloneRecursive","threadsTs4","apply","queue","threadsTs5","forEach","_ref","_ref2","default","_worklet_17019095552526_init_data","_len2","_key2","threadsTs6","result","makeShareableCloneOnUIRecursive","_worklet_16633155166209_init_data","_worklet_12333479226436_init_data","_len3","_key3","threadsTs8","runWorkletOnJS","_len4","_key4","_worklet_6458650219678_init_data","_runOnJS","fun","_len5","_key5","_len6","_key6","concat","__remoteFunction","scheduleOnJS","_scheduleHostFunctionOnJS","_scheduleRemoteFunctionOnJS","_len7","_key7","undefined"],"sources":["threads.ts"],"sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isJest, shouldBeUseWeb } from './PlatformChecker';\nimport type { WorkletFunction } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n} from './shareables';\nimport { isWorkletFunction } from './commonTypes';\nimport { ReanimatedError } from './errors';\n\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\n/** An array of [worklet, args] pairs. */\nlet _runOnUIQueue: Array<[WorkletFunction<unknown[], unknown>, unknown[]]> = [];\n\nexport function setupMicrotasks() {\n  'worklet';\n\n  let microtasksQueue: Array<() => void> = [];\n  let isExecutingMicrotasksQueue = false;\n  global.queueMicrotask = (callback: () => void) => {\n    microtasksQueue.push(callback);\n  };\n\n  global.__callMicrotasks = () => {\n    if (isExecutingMicrotasksQueue) {\n      return;\n    }\n    try {\n      isExecutingMicrotasksQueue = true;\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\n        // we use classic 'for' loop because the size of the currentTasks array may change while executing some of the callbacks due to queueMicrotask calls\n        microtasksQueue[index]();\n      }\n      microtasksQueue = [];\n      global._maybeFlushUIUpdatesQueue();\n    } finally {\n      isExecutingMicrotasksQueue = false;\n    }\n  };\n}\n\nfunction callMicrotasksOnUIThread() {\n  'worklet';\n  global.__callMicrotasks();\n}\n\nexport const callMicrotasks = SHOULD_BE_USE_WEB\n  ? () => {\n      // on web flushing is a noop as immediates are handled by the browser\n    }\n  : callMicrotasksOnUIThread;\n\n/**\n * Lets you asynchronously run\n * [workletized](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#to-workletize)\n * functions on the [UI\n * thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI).\n *\n * This method does not schedule the work immediately but instead waits for\n * other worklets to be scheduled within the same JS loop. It uses\n * queueMicrotask to schedule all the worklets at once making sure they will run\n * within the same frame boundaries on the UI thread.\n *\n * @param fun - A reference to a function you want to execute on the [UI\n *   thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI)\n *   from the [JavaScript\n *   thread](https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI).\n * @returns A function that accepts arguments for the function passed as the\n *   first argument.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnUI\n */\n// @ts-expect-error This overload is correct since it's what user sees in his code\n// before it's transformed by Reanimated Babel plugin.\nexport function runOnUI<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): (...args: Args) => void;\n\nexport function runOnUI<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  if (__DEV__ && !SHOULD_BE_USE_WEB && _WORKLET) {\n    throw new ReanimatedError(\n      '`runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new ReanimatedError('`runOnUI` can only be used with worklets.');\n  }\n  return (...args) => {\n    if (IS_JEST) {\n      // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n      // callbacks run on the same queue and can be interleaved. There is no way\n      // to flush particular queue in Jest and the only control over mocked timers\n      // is by using jest.advanceTimersByTime() method which advances all types\n      // of timers including immediate and animation callbacks. Ideally we'd like\n      // to have some way here to schedule work along with React updates, but\n      // that's not possible, and hence in Jest environment instead of using scheduling\n      // mechanism we just schedule the work ommiting the queue. This is ok for the\n      // uses that we currently have but may not be ok for future tests that we write.\n      NativeReanimatedModule.scheduleOnUI(\n        makeShareableCloneRecursive(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n      return;\n    }\n    if (__DEV__) {\n      // in DEV mode we call shareable conversion here because in case the object\n      // can't be converted, we will get a meaningful stack-trace as opposed to the\n      // situation when conversion is only done via microtask queue. This does not\n      // make the app particularily less efficient as converted objects are cached\n      // and for a given worklet the conversion only happens once.\n      makeShareableCloneRecursive(worklet);\n      makeShareableCloneRecursive(args);\n    }\n    _runOnUIQueue.push([worklet as WorkletFunction, args]);\n    if (_runOnUIQueue.length === 1) {\n      queueMicrotask(() => {\n        const queue = _runOnUIQueue;\n        _runOnUIQueue = [];\n        NativeReanimatedModule.scheduleOnUI(\n          makeShareableCloneRecursive(() => {\n            'worklet';\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            queue.forEach(([worklet, args]) => {\n              worklet(...args);\n            });\n            callMicrotasks();\n          })\n        );\n      });\n    }\n  };\n}\n\n// @ts-expect-error Check `executeOnUIRuntimeSync` overload above.\nexport function executeOnUIRuntimeSync<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): (...args: Args) => ReturnValue;\n\nexport function executeOnUIRuntimeSync<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => ReturnValue {\n  return (...args) => {\n    return NativeReanimatedModule.executeOnUIRuntimeSync(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        const result = worklet(...args);\n        return makeShareableCloneOnUIRecursive(result);\n      })\n    );\n  };\n}\n\n// @ts-expect-error Check `runOnUI` overload above.\nexport function runOnUIImmediately<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): WorkletFunction<Args, ReturnValue>;\n/** Schedule a worklet to execute on the UI runtime skipping batching mechanism. */\nexport function runOnUIImmediately<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  if (__DEV__ && !SHOULD_BE_USE_WEB && _WORKLET) {\n    throw new ReanimatedError(\n      '`runOnUIImmediately` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new ReanimatedError(\n      '`runOnUIImmediately` can only be used with worklets.'\n    );\n  }\n  return (...args) => {\n    NativeReanimatedModule.scheduleOnUI(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        worklet(...args);\n      })\n    );\n  };\n}\n\ntype ReleaseRemoteFunction<Args extends unknown[], ReturnValue> = {\n  (...args: Args): ReturnValue;\n};\n\ntype DevRemoteFunction<Args extends unknown[], ReturnValue> = {\n  __remoteFunction: (...args: Args) => ReturnValue;\n};\n\ntype RemoteFunction<Args extends unknown[], ReturnValue> =\n  | ReleaseRemoteFunction<Args, ReturnValue>\n  | DevRemoteFunction<Args, ReturnValue>;\n\nfunction runWorkletOnJS<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>,\n  ...args: Args\n): void {\n  // remote function that calls a worklet synchronously on the JS runtime\n  worklet(...args);\n}\n\n/**\n * Lets you asynchronously run\n * non-[workletized](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#to-workletize)\n * functions that couldn't otherwise run on the [UI\n * thread](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#ui-thread).\n * This applies to most external libraries as they don't have their functions\n * marked with \"worklet\"; directive.\n *\n * @param fun - A reference to a function you want to execute on the JavaScript\n *   thread from the UI thread.\n * @returns A function that accepts arguments for the function passed as the\n *   first argument.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/threading/runOnJS\n */\nexport function runOnJS<Args extends unknown[], ReturnValue>(\n  fun:\n    | ((...args: Args) => ReturnValue)\n    | RemoteFunction<Args, ReturnValue>\n    | WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  type FunDevRemote = Extract<typeof fun, DevRemoteFunction<Args, ReturnValue>>;\n  if (SHOULD_BE_USE_WEB || !_WORKLET) {\n    // if we are already on the JS thread, we just schedule the worklet on the JS queue\n    return (...args) =>\n      queueMicrotask(\n        args.length\n          ? () => (fun as (...args: Args) => ReturnValue)(...args)\n          : (fun as () => ReturnValue)\n      );\n  }\n  if (isWorkletFunction<Args, ReturnValue>(fun)) {\n    // If `fun` is a worklet, we schedule a call of a remote function `runWorkletOnJS`\n    // and pass the worklet as a first argument followed by original arguments.\n\n    return (...args) =>\n      runOnJS(runWorkletOnJS<Args, ReturnValue>)(\n        fun as WorkletFunction<Args, ReturnValue>,\n        ...args\n      );\n  }\n  if ((fun as FunDevRemote).__remoteFunction) {\n    // In development mode the function provided as `fun` throws an error message\n    // such that when someone accidentally calls it directly on the UI runtime, they\n    // see that they should use `runOnJS` instead. To facilitate that we put the\n    // reference to the original remote function in the `__remoteFunction` property.\n    fun = (fun as FunDevRemote).__remoteFunction;\n  }\n\n  const scheduleOnJS =\n    typeof fun === 'function'\n      ? global._scheduleHostFunctionOnJS\n      : global._scheduleRemoteFunctionOnJS;\n\n  return (...args) => {\n    scheduleOnJS(\n      fun as\n        | ((...args: Args) => ReturnValue)\n        | WorkletFunction<Args, ReturnValue>,\n      args.length > 0\n        ? // TODO TYPESCRIPT this cast is terrible but will be fixed\n          (makeShareableCloneOnUIRecursive(args) as unknown as unknown[])\n        : undefined\n    );\n  };\n}\n"],"mappings":"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","ignoreList":[]}