639421841cd3f6f5e7337b810662a77d
function cov_1y87wyw4jz() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\travel-transport.js";
  var hash = "fb5e6ceccc54a3789f084ad975eec9e7960e444a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\phrases\\2\\categories\\travel-transport.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 24
        },
        end: {
          line: 220,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fb5e6ceccc54a3789f084ad975eec9e7960e444a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1y87wyw4jz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1y87wyw4jz();
var travelTransport = (cov_1y87wyw4jz().s[0]++, [{
  categoryId: 18,
  english: "How do you usually travel to work/school?",
  translation: "Comment voyages-tu habituellement pour aller au travail/à l'école ?",
  context: "Demander le moyen de transport quotidien",
  examples: [{
    english: "The traffic is getting worse. How do you usually travel to work?",
    translation: "La circulation empire. Comment voyages-tu habituellement pour aller au travail ?"
  }]
}, {
  categoryId: 18,
  english: "I usually take the bus.",
  translation: "Je prends généralement le bus.",
  context: "Indiquer qu'on utilise le bus comme transport habituel",
  examples: [{
    english: "I usually take the bus because it's cheaper than driving.",
    translation: "Je prends généralement le bus car c'est moins cher que de conduire."
  }]
}, {
  categoryId: 18,
  english: "I prefer to walk when the weather is nice.",
  translation: "Je préfère marcher quand il fait beau.",
  context: "Exprimer une préférence pour la marche selon la météo",
  examples: [{
    english: "I prefer to walk when the weather is nice. It takes about 30 minutes.",
    translation: "Je préfère marcher quand il fait beau. Ça prend environ 30 minutes."
  }]
}, {
  categoryId: 18,
  english: "How long does it take to get there?",
  translation: "Combien de temps faut-il pour y arriver ?",
  context: "Demander la durée d'un trajet",
  examples: [{
    english: "I'm planning to visit the museum tomorrow. How long does it take to get there from here?",
    translation: "Je prévois de visiter le musée demain. Combien de temps faut-il pour y arriver d'ici ?"
  }]
}, {
  categoryId: 18,
  english: "It takes about 20 minutes by car.",
  translation: "Ça prend environ 20 minutes en voiture.",
  context: "Indiquer la durée d'un trajet en voiture",
  examples: [{
    english: "It takes about 20 minutes by car, but longer if there's traffic.",
    translation: "Ça prend environ 20 minutes en voiture, mais plus longtemps s'il y a des embouteillages."
  }]
}, {
  categoryId: 18,
  english: "Could you tell me the way to the train station?",
  translation: "Pourriez-vous m'indiquer le chemin vers la gare ?",
  context: "Demander poliment son chemin",
  examples: [{
    english: "Excuse me, could you tell me the way to the train station? I'm a bit lost.",
    translation: "Excusez-moi, pourriez-vous m'indiquer le chemin vers la gare ? Je suis un peu perdu(e)."
  }]
}, {
  categoryId: 18,
  english: "Go straight ahead and then turn left.",
  translation: "Allez tout droit puis tournez à gauche.",
  context: "Donner des indications simples",
  examples: [{
    english: "Go straight ahead and then turn left at the traffic lights. The station is right there.",
    translation: "Allez tout droit puis tournez à gauche au feu de circulation. La gare est juste là."
  }]
}, {
  categoryId: 18,
  english: "Is it far from here?",
  translation: "Est-ce loin d'ici ?",
  context: "Demander si une destination est éloignée",
  examples: [{
    english: "I'd like to walk to the park. Is it far from here?",
    translation: "J'aimerais aller au parc à pied. Est-ce loin d'ici ?"
  }]
}, {
  categoryId: 18,
  english: "No, it's quite near. About a 10-minute walk.",
  translation: "Non, c'est assez proche. Environ 10 minutes à pied.",
  context: "Indiquer qu'une destination est proche",
  examples: [{
    english: "No, it's quite near. About a 10-minute walk. You can't miss it.",
    translation: "Non, c'est assez proche. Environ 10 minutes à pied. Vous ne pouvez pas le manquer."
  }]
}, {
  categoryId: 18,
  english: "When is the next bus to the city center?",
  translation: "Quand est le prochain bus pour le centre-ville ?",
  context: "Demander l'horaire du prochain bus",
  examples: [{
    english: "Excuse me, when is the next bus to the city center? I've been waiting for a while.",
    translation: "Excusez-moi, quand est le prochain bus pour le centre-ville ? J'attends depuis un moment."
  }]
}, {
  categoryId: 18,
  english: "I'd like to buy a ticket to London, please.",
  translation: "Je voudrais acheter un billet pour Londres, s'il vous plaît.",
  context: "Demander l'achat d'un billet de train/bus",
  examples: [{
    english: "Good morning. I'd like to buy a ticket to London, please. For next Friday.",
    translation: "Bonjour. Je voudrais acheter un billet pour Londres, s'il vous plaît. Pour vendredi prochain."
  }]
}, {
  categoryId: 18,
  english: "Is there a direct train?",
  translation: "Y a-t-il un train direct ?",
  context: "Demander s'il existe une liaison directe",
  examples: [{
    english: "Is there a direct train to Barcelona, or do I need to change?",
    translation: "Y a-t-il un train direct pour Barcelone, ou dois-je changer ?"
  }]
}, {
  categoryId: 18,
  english: "What platform does the train leave from?",
  translation: "De quel quai part le train ?",
  context: "Demander le quai de départ d'un train",
  examples: [{
    english: "Excuse me, what platform does the train to Paris leave from?",
    translation: "Excusez-moi, de quel quai part le train pour Paris ?"
  }]
}, {
  categoryId: 18,
  english: "The train leaves from platform 3.",
  translation: "Le train part du quai 3.",
  context: "Indiquer le quai de départ d'un train",
  examples: [{
    english: "The train to Paris leaves from platform 3 in 10 minutes.",
    translation: "Le train pour Paris part du quai 3 dans 10 minutes."
  }]
}, {
  categoryId: 18,
  english: "I'd like to rent a car.",
  translation: "Je voudrais louer une voiture.",
  context: "Exprimer le souhait de louer une voiture",
  examples: [{
    english: "I'd like to rent a car for the weekend. What options do you have?",
    translation: "Je voudrais louer une voiture pour le week-end. Quelles options avez-vous ?"
  }]
}, {
  categoryId: 18,
  english: "Can I see your ticket, please?",
  translation: "Puis-je voir votre billet, s'il vous plaît ?",
  context: "Demande d'un contrôleur de billets",
  examples: [{
    english: "Good afternoon. Can I see your ticket, please?",
    translation: "Bonjour. Puis-je voir votre billet, s'il vous plaît ?"
  }]
}, {
  categoryId: 18,
  english: "What time does the flight depart?",
  translation: "À quelle heure décolle l'avion ?",
  context: "Demander l'heure de départ d'un vol",
  examples: [{
    english: "I need to arrange a taxi. What time does the flight depart?",
    translation: "Je dois organiser un taxi. À quelle heure décolle l'avion ?"
  }]
}, {
  categoryId: 18,
  english: "The flight departs at 14:30.",
  translation: "Le vol décolle à 14h30.",
  context: "Indiquer l'heure de départ d'un vol",
  examples: [{
    english: "The flight departs at 14:30. Boarding starts at 13:45.",
    translation: "Le vol décolle à 14h30. L'embarquement commence à 13h45."
  }]
}]);
export default travelTransport;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,