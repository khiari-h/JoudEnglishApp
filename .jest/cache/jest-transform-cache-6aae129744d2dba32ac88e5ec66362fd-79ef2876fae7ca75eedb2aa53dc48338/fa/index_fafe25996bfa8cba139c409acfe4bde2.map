{"version":3,"names":["_react","require","_reactNative","_native","_expoRouter","_propTypes","_interopRequireDefault","_Container","_interopRequireWildcard","_PhrasesHeader","_PhrasesCategorySelector","_PhrasesProgress","_PhraseCard","_PhrasesNavigation","_usePhrases2","_useLastActivity2","_phrasesDataHelper","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","PhrasesExercise","_ref","_phrasesData$categori3","route","navigation","useNavigation","_ref2","params","_ref2$level","level","styles","createStyles","_useLastActivity","useLastActivity","saveActivity","levelColor","getLevelColor","_useState","useState","_useState2","_slicedToArray2","phrasesData","setPhrasesData","_useState3","_useState4","isDataLoading","setIsDataLoading","useEffect","isMounted","load","_ref3","_asyncToGenerator2","process","env","JEST_WORKER_ID","data","getPhrasesData","loadPhrasesData","error","console","apply","arguments","_usePhrases","usePhrases","categoryIndex","phraseIndex","showTranslation","completedPhrases","loaded","showDetailedProgress","currentPhrase","currentPhrases","totalPhrasesInCategory","hasValidData","changeCategory","toggleTranslation","toggleDetailedProgress","handleNext","handlePrevious","canGoToPrevious","isLastPhraseInCategory","stats","display","length","_phrasesData$categori","_phrasesData$categori2","currentCategory","categories","activityData","title","type","metadata","phrase","totalPhrases","category","name","totalCategories","handleBackPress","useCallback","router","push","pathname","handleCategoryChange","index","handleToggleProgressDetails","handleNextPhrase","result","completed","goBack","handlePreviousPhrase","log","phrasesDataLength","jsx","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","ALL","backgroundColor","statusBarStyle","children","View","style","loadingContainer","ActivityIndicator","size","color","testID","jsxs","onBackPress","emptyStateContainer","withScrollView","withPadding","scrollViewProps","showsVerticalScrollIndicator","contentContainerStyle","scrollContent","progress","completionProgress","completedCount","completedPhrasesCount","expanded","onToggleExpand","onCategoryPress","selectedIndex","onSelectCategory","phraseData","onToggleTranslation","onNext","onPrevious","disablePrevious","disableNext","isLast","_default","exports","propTypes","PropTypes","shape","string","isRequired"],"sources":["index.js"],"sourcesContent":["// PhrasesExercise/index.js - VERSION AVEC SAUVEGARDE ACTIVIT√â\r\nimport { useEffect, useCallback, useState } from \"react\";\r\nimport { View, ActivityIndicator } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { router } from \"expo-router\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// Layout\r\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\r\n\r\n// Components\r\nimport PhrasesHeader from \"./PhrasesHeader\";\r\nimport PhrasesCategorySelector from \"./PhrasesCategorySelector\";\r\nimport PhrasesProgress from \"./PhrasesProgress\";\r\nimport PhraseCard from \"./PhraseCard\";\r\nimport PhrasesNavigation from \"./PhrasesNavigation\";\r\n\r\n// Hook & Utils\r\nimport usePhrases from \"./hooks/usePhrases\";\r\nimport useLastActivity from \"../../../hooks/useLastActivity\"; // ‚úÖ AJOUT√â\r\nimport { getPhrasesData, loadPhrasesData, getLevelColor } from \"../../../utils/phrases/phrasesDataHelper\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * üéØ PhrasesExercise - VERSION AVEC SAUVEGARDE ACTIVIT√â\r\n */\r\nconst PhrasesExercise = ({ route }) => {\r\n  const navigation = useNavigation();\r\n  const { level = \"A1\" } = route?.params || {};\r\n  const styles = createStyles();\r\n\r\n  // ‚úÖ AJOUT√â : Hook pour sauvegarder l'activit√©\r\n  const { saveActivity } = useLastActivity();\r\n\r\n  // Data\r\n  const levelColor = getLevelColor(level);\r\n  const [phrasesData, setPhrasesData] = useState(null);\r\n  const [isDataLoading, setIsDataLoading] = useState(true); // ‚úÖ AJOUT√â : √âtat de chargement des donn√©es\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const load = async () => {\r\n      setIsDataLoading(true); // ‚úÖ AJOUT√â : D√©marrer le chargement\r\n      try {\r\n        if (process.env.JEST_WORKER_ID) {\r\n          const data = getPhrasesData(level);\r\n          if (isMounted) {\r\n            setPhrasesData(data);\r\n            setIsDataLoading(false); // ‚úÖ AJOUT√â : Fin du chargement\r\n          }\r\n          return;\r\n        }\r\n        const data = await loadPhrasesData(level);\r\n        if (isMounted) {\r\n          setPhrasesData(data);\r\n          setIsDataLoading(false); // ‚úÖ AJOUT√â : Fin du chargement\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur chargement donn√©es phrases:', error);\r\n        if (isMounted) {\r\n          setIsDataLoading(false); // ‚úÖ AJOUT√â : Fin du chargement m√™me en cas d'erreur\r\n        }\r\n      }\r\n    };\r\n    load();\r\n    return () => { isMounted = false; };\r\n  }, [level]);\r\n\r\n  // Hook unifi√© - Garde seulement les variables utilis√©es\r\n  const {\r\n    categoryIndex,\r\n    phraseIndex,\r\n    showTranslation,\r\n    completedPhrases,\r\n    loaded,\r\n    showDetailedProgress,\r\n    currentPhrase,\r\n    currentPhrases,\r\n    totalPhrasesInCategory,\r\n    hasValidData,\r\n    changeCategory,\r\n    toggleTranslation,\r\n    toggleDetailedProgress,\r\n    handleNext,\r\n    handlePrevious,\r\n    canGoToPrevious,\r\n    isLastPhraseInCategory,\r\n    stats,\r\n    display,\r\n  } = usePhrases(phrasesData, level);\r\n\r\n  // ‚úÖ AJOUT√â : Sauvegarder l'activit√© √† chaque changement de phrase/cat√©gorie\r\n  useEffect(() => {\r\n    if (loaded && hasValidData && currentPhrase && currentPhrases.length > 0 && phraseIndex < 100) { // ‚úÖ Protection boucle\r\n      const currentCategory = phrasesData?.categories?.[categoryIndex];\r\n      \r\n      const activityData = {\r\n        title: \"Expressions\",\r\n        level,\r\n        type: \"phrases\",\r\n        metadata: {\r\n          phrase: phraseIndex,\r\n          totalPhrases: totalPhrasesInCategory || currentPhrases.length, // ‚úÖ Fallback\r\n          category: currentCategory?.name || \"G√©n√©ral\",\r\n          categoryIndex,\r\n          totalCategories: phrasesData?.categories?.length || 1\r\n        }\r\n      };\r\n\r\n      saveActivity(activityData);\r\n    }\r\n  }, [loaded, hasValidData, currentPhrase, currentPhrases.length, phraseIndex, totalPhrasesInCategory, categoryIndex, level]); // ‚úÖ CORRIG√â : Supprim√© phrasesData des d√©pendances\r\n\r\n  // Handlers\r\n  const handleBackPress = useCallback(() => {\r\n    router.push({\r\n      pathname: \"/tabs/exerciseSelection\",\r\n      params: { level }\r\n    });\r\n  }, [level]);\r\n\r\n  const handleCategoryChange = useCallback((index) => changeCategory(index), [changeCategory]);\r\n\r\n  const handleToggleProgressDetails = useCallback(() => toggleDetailedProgress(), [toggleDetailedProgress]);\r\n\r\n  const handleNextPhrase = useCallback(() => {\r\n    const result = handleNext();\r\n    if (result.completed) {\r\n      navigation.goBack();\r\n    }\r\n  }, [handleNext, navigation]);\r\n\r\n  const handlePreviousPhrase = useCallback(() => handlePrevious(), [handlePrevious]);\r\n\r\n  // Loading state\r\n  console.log('üîç DEBUG Phrases:', { \r\n    isDataLoading, \r\n    loaded, \r\n    hasValidData, \r\n    phrasesData: !!phrasesData,\r\n    phrasesDataLength: phrasesData?.categories?.length || 0\r\n  });\r\n  \r\n  if (isDataLoading || !loaded || !hasValidData) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color={levelColor} testID=\"activity-indicator\" />\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // Empty state\r\n  if (currentPhrases.length === 0) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <PhrasesHeader\r\n          level={level}\r\n          onBackPress={handleBackPress}\r\n        />\r\n        <View style={styles.emptyStateContainer}>\r\n          <ActivityIndicator size=\"large\" color={levelColor} testID=\"activity-indicator\" />\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      safeArea\r\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n      withScrollView\r\n      backgroundColor=\"#f8fafc\"\r\n      statusBarStyle=\"dark-content\"\r\n      withPadding={false}\r\n      scrollViewProps={{\r\n        showsVerticalScrollIndicator: false,\r\n        contentContainerStyle: styles.scrollContent,\r\n      }}\r\n    >\r\n      {/* Header */}\r\n      <PhrasesHeader\r\n        level={level}\r\n        onBackPress={handleBackPress}\r\n      />\r\n\r\n      {/* Progress - MAINTENANT COLL√â AU HEADER */}\r\n      <PhrasesProgress\r\n        progress={stats.completionProgress}\r\n        currentPhrase={phraseIndex + 1}\r\n        totalPhrases={totalPhrasesInCategory}\r\n        completedCount={stats.completedPhrasesCount}\r\n        levelColor={levelColor}\r\n        phrasesData={phrasesData}\r\n        completedPhrases={completedPhrases}\r\n        expanded={showDetailedProgress}\r\n        onToggleExpand={handleToggleProgressDetails}\r\n        onCategoryPress={handleCategoryChange}\r\n      />\r\n\r\n      {/* Category Selector - APR√àS PROGRESS comme les autres exercices */}\r\n      <PhrasesCategorySelector\r\n        categories={display.categories}\r\n        selectedIndex={categoryIndex}\r\n        onSelectCategory={handleCategoryChange}\r\n        levelColor={levelColor}\r\n      />\r\n\r\n      {/* Phrase Card */}\r\n      <PhraseCard\r\n        phraseData={currentPhrase}\r\n        showTranslation={showTranslation}\r\n        onToggleTranslation={toggleTranslation}\r\n        levelColor={levelColor}\r\n      />\r\n\r\n      {/* Navigation */}\r\n      <PhrasesNavigation\r\n        onNext={handleNextPhrase}\r\n        onPrevious={handlePreviousPhrase}\r\n        disablePrevious={!canGoToPrevious}\r\n        disableNext={false}\r\n        isLast={isLastPhraseInCategory}\r\n        levelColor={levelColor}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PhrasesExercise;\r\n\r\n// ‚úÖ Ajout de la validation des props\r\nPhrasesExercise.propTypes = {\r\n  route: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      level: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};"],"mappings":"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","ignoreList":[]}