{"version":3,"names":["_getJestObj","mock","useFocusEffect","jest","fn","callback","router","push","Stack","_ref","children","_jsxRuntime","jsx","Fragment","useLocalSearchParams","useNavigation","navigate","goBack","canGoBack","addListener","isFocused","useDashboardState","showLevelProgress","setShowLevelProgress","openLevelProgressModal","closeLevelProgressModal","refreshing","activeTab","setActiveTab","onRefresh","mockResolvedValue","lastActivity","isLoading","reload","getLevelProgress","refresh","Object","assign","requireActual","useProgress","progress","overall","levels","updateProgress","mockUpdateProgress","getProgressForLevel","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_expoRouter","_Dashboard","_ProgressContext","_ThemeContext","_CurrentLevelContext","_require","FakeExerciseScreen","_ref2","onComplete","handleComplete","onClick","describe","beforeEach","clearAllMocks","it","default","_render","render","ThemeProvider","ProgressProvider","CurrentLevelProvider","getByTestId","rerender","fireEvent","click","waitFor","expect","toHaveBeenCalledWith","toHaveBeenCalledTimes"],"sources":["progress-update.test.js"],"sourcesContent":["// __tests__/integration/progress-update.test.js\nimport React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport { router } from 'expo-router';\nimport Dashboard from '../../src/screens/Dashboard';\nimport { ProgressProvider, useProgress } from '../../src/contexts/ProgressContext';\nimport { ThemeProvider } from '../../src/contexts/ThemeContext';\nimport { CurrentLevelProvider } from '../../src/contexts/CurrentLevelContext';\n\n// Mock de expo-router\njest.mock('expo-router', () => ({\n  useFocusEffect: jest.fn(callback => callback()),\n  router: {\n    push: jest.fn(),\n  },\n  Stack: ({ children }) => <>{children}</>,\n  useLocalSearchParams: () => ({}),\n  useNavigation: () => ({\n    navigate: jest.fn(),\n    goBack: jest.fn(),\n    canGoBack: jest.fn(() => true),\n    addListener: jest.fn(),\n    isFocused: jest.fn(() => true),\n  }),\n}));\n\n// Mocks des hooks et composants\njest.mock('../../src/screens/Dashboard/hooks/useDashboardState', () => ({\n  useDashboardState: jest.fn(() => ({\n    showLevelProgress: false,\n    setShowLevelProgress: jest.fn(),\n    openLevelProgressModal: jest.fn(),\n    closeLevelProgressModal: jest.fn(),\n    refreshing: false,\n    activeTab: \"home\",\n    setActiveTab: jest.fn(),\n    onRefresh: jest.fn().mockResolvedValue(),\n  })),\n}));\n\njest.mock('../../src/hooks/useLastActivity', () => () => ({\n  lastActivity: null,\n  isLoading: false,\n  reload: jest.fn(),\n}));\n\njest.mock('../../src/hooks/useRealTimeProgress', () => () => ({\n  getLevelProgress: jest.fn(() => 0),\n  refresh: jest.fn(),\n}));\n\nconst mockUpdateProgress = jest.fn();\n\njest.mock('../../src/contexts/ProgressContext', () => ({\n  ...jest.requireActual('../../src/contexts/ProgressContext'),\n  useProgress: () => ({\n    progress: { overall: 0, levels: {} },\n    isLoading: false,\n    updateProgress: mockUpdateProgress,\n    getProgressForLevel: () => 0,\n  }),\n}));\n\n// Composant de test pour simuler un exercice\nconst FakeExerciseScreen = ({ onComplete }) => {\n  const handleComplete = () => {\n    onComplete('A1', 'vocabulary', 80);\n  };\n\n  return (\n    <button data-testid=\"complete-exercise\" onClick={handleComplete}>\n      Terminer l'exercice\n    </button>\n  );\n};\n\ndescribe('Scénario 1: Mise à jour de la progression', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it(\"devrait appeler updateProgress avec les bonnes données après la fin d'un exercice\", async () => {\n    // NOTE: Ce test simule la fin d'un exercice et vérifie que `updateProgress` est appelé.\n    // Il ne teste pas la navigation complète, mais l'intégration entre un écran d'exercice (simulé)\n    // et le ProgressContext.\n\n    const { getByTestId, rerender } = render(\n      <ThemeProvider>\n        <ProgressProvider>\n          <CurrentLevelProvider>\n            <Dashboard />\n          </CurrentLevelProvider>\n        </ProgressProvider>\n      </ThemeProvider>\n    );\n\n    // Simuler la navigation vers un exercice\n    rerender(<FakeExerciseScreen onComplete={mockUpdateProgress} />);\n\n    // Simuler la fin de l'exercice\n    fireEvent.click(getByTestId('complete-exercise'));\n\n    // Vérifier que la mise à jour de la progression a été appelée\n    await waitFor(() => {\n      expect(mockUpdateProgress).toHaveBeenCalledWith('A1', 'vocabulary', 80);\n      expect(mockUpdateProgress).toHaveBeenCalledTimes(1);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}