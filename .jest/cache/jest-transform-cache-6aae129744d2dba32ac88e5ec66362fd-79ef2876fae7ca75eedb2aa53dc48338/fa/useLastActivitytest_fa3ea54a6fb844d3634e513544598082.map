{"version":3,"names":["_getJestObj","mock","setItem","jest","fn","Promise","resolve","getItem","removeItem","STORAGE_KEYS","LAST_ACTIVITY","emit","_interopRequireDefault","require","_asyncToGenerator2","_reactHooks","_asyncStorage","_useLastActivity","_constants","_eventBus","_require","describe","MOCK_NOW","Date","getTime","beforeEach","useFakeTimers","setSystemTime","AsyncStorage","mockClear","afterEach","runOnlyPendingTimers","useRealTimers","it","default","_renderHook","renderHook","useLastActivity","result","waitForNextUpdate","expect","current","lastActivity","toBeNull","isLoading","toBe","toHaveBeenCalledWith","mockActivity","type","level","timestamp","mockResolvedValueOnce","JSON","stringify","_renderHook2","toEqual","Object","assign","timeElapsed","_renderHook3","newActivityData","act","saveActivity","_renderHook4","not","clearActivity","_renderHook5","updatedActivity","reload","_renderHook6","mockRejectedValueOnce","Error","_renderHook7","_renderHook8","toHaveBeenCalledTimes","_renderHook9"],"sources":["useLastActivity.test.js"],"sourcesContent":["import { renderHook, act } from '@testing-library/react-hooks';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useLastActivity from '../../../src/hooks/useLastActivity';\n\n// Mock AsyncStorage\njest.mock('@react-native-async-storage/async-storage', () => ({\n  setItem: jest.fn(() => Promise.resolve()),\n  getItem: jest.fn(() => Promise.resolve(null)),\n  removeItem: jest.fn(() => Promise.resolve()),\n}));\n\n// Mock STORAGE_KEYS\njest.mock('../../../src/utils/constants', () => ({\n  STORAGE_KEYS: {\n    LAST_ACTIVITY: 'last_activity',\n  },\n}));\n\n// Mock eventBus\njest.mock('../../../src/utils/eventBus', () => ({\n  emit: jest.fn(),\n}));\n\nimport { STORAGE_KEYS } from '../../../src/utils/constants';\nimport { emit } from '../../../src/utils/eventBus';\n\ndescribe('useLastActivity', () => {\n  const MOCK_NOW = new Date('2025-01-01T12:00:00.000Z').getTime();\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n    jest.setSystemTime(MOCK_NOW);\n    AsyncStorage.getItem.mockClear();\n    AsyncStorage.setItem.mockClear();\n    AsyncStorage.removeItem.mockClear();\n    emit.mockClear();\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n  });\n\n  it('initializes with null lastActivity and isLoading true, then false', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useLastActivity());\n\n    expect(result.current.lastActivity).toBeNull();\n    expect(result.current.isLoading).toBe(true);\n\n    await waitForNextUpdate();\n\n    expect(result.current.isLoading).toBe(false);\n    expect(AsyncStorage.getItem).toHaveBeenCalledWith(STORAGE_KEYS.LAST_ACTIVITY);\n  });\n\n  it('loads last activity from AsyncStorage and calculates timeElapsed', async () => {\n    const mockActivity = {\n      type: 'exercise',\n      level: '1',\n      timestamp: MOCK_NOW - (5 * 60 * 1000), // 5 minutes ago\n    };\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify(mockActivity));\n\n    const { result, waitForNextUpdate } = renderHook(() => useLastActivity());\n    await waitForNextUpdate();\n\n    expect(result.current.lastActivity).toEqual({\n      ...mockActivity,\n      timeElapsed: 'Il y a 5 min',\n    });\n  });\n\n  it('saves new activity and updates state', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useLastActivity());\n    await waitForNextUpdate(); // Initial load\n\n    const newActivityData = { type: 'quiz', level: '2' };\n    await act(async () => {\n      await result.current.saveActivity(newActivityData);\n    });\n\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith(\n      STORAGE_KEYS.LAST_ACTIVITY,\n      JSON.stringify({ ...newActivityData, timestamp: MOCK_NOW })\n    );\n    expect(result.current.lastActivity).toEqual({\n      ...newActivityData,\n      timestamp: MOCK_NOW,\n      timeElapsed: 'À l\\'instant',\n    });\n    expect(emit).toHaveBeenCalledWith('progress-updated', { ...newActivityData, timestamp: MOCK_NOW });\n  });\n\n  it('clears activity from AsyncStorage and state', async () => {\n    // Pre-load some activity to clear\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify({\n      type: 'exercise', level: '1', timestamp: MOCK_NOW\n    }));\n\n    const { result, waitForNextUpdate } = renderHook(() => useLastActivity());\n    await waitForNextUpdate(); // Initial load\n\n    expect(result.current.lastActivity).not.toBeNull();\n\n    await act(async () => {\n      await result.current.clearActivity();\n    });\n\n    expect(AsyncStorage.removeItem).toHaveBeenCalledWith(STORAGE_KEYS.LAST_ACTIVITY);\n    expect(result.current.lastActivity).toBeNull();\n  });\n\n  it('reloads activity when reload is called', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useLastActivity());\n    await waitForNextUpdate(); // Initial load\n\n    AsyncStorage.getItem.mockClear();\n    const updatedActivity = { type: 'reading', level: '3', timestamp: MOCK_NOW - (10 * 60 * 1000) }; // 10 mins ago\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify(updatedActivity));\n\n    await act(async () => {\n      await result.current.reload();\n    });\n\n    expect(AsyncStorage.getItem).toHaveBeenCalledWith(STORAGE_KEYS.LAST_ACTIVITY);\n    expect(result.current.lastActivity).toEqual({\n      ...updatedActivity,\n      timeElapsed: 'Il y a 10 min',\n    });\n  });\n\n  it('calculates timeElapsed correctly for different durations', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useLastActivity());\n    await waitForNextUpdate(); // Initial load\n\n    // À l'instant\n    await act(async () => {\n      await result.current.saveActivity({ type: 'test', timestamp: MOCK_NOW });\n    });\n    expect(result.current.lastActivity.timeElapsed).toBe('À l\\'instant');\n\n    // 30 minutes ago\n    jest.setSystemTime(MOCK_NOW + (30 * 60 * 1000));\n    await act(async () => {\n      await result.current.reload();\n    });\n    expect(result.current.lastActivity.timeElapsed).toBe('Il y a 30 min');\n\n    // 1 hour ago\n    jest.setSystemTime(MOCK_NOW + (60 * 60 * 1000));\n    await act(async () => {\n      await result.current.reload();\n    });\n    expect(result.current.lastActivity.timeElapsed).toBe('Il y a 1h');\n\n    // 2 hours ago\n    jest.setSystemTime(MOCK_NOW + (120 * 60 * 1000));\n    await act(async () => {\n      await result.current.reload();\n    });\n    expect(result.current.lastActivity.timeElapsed).toBe('Il y a 2h');\n\n    // 1 day ago\n    jest.setSystemTime(MOCK_NOW + (24 * 60 * 60 * 1000));\n    await act(async () => {\n      await result.current.reload();\n    });\n    expect(result.current.lastActivity.timeElapsed).toBe('Il y a 1j');\n\n    // 5 days ago\n    jest.setSystemTime(MOCK_NOW + (5 * 24 * 60 * 60 * 1000));\n    await act(async () => {\n      await result.current.reload();\n    });\n    expect(result.current.lastActivity.timeElapsed).toBe('Il y a 5j');\n  });\n\n  it('handles AsyncStorage errors gracefully during load', async () => {\n    AsyncStorage.getItem.mockRejectedValueOnce(new Error('Load error'));\n\n    const { result, waitForNextUpdate } = renderHook(() => useLastActivity());\n    await waitForNextUpdate();\n\n    expect(result.current.isLoading).toBe(false);\n    expect(result.current.lastActivity).toBeNull();\n  });\n\n  it('handles AsyncStorage errors gracefully during save', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useLastActivity());\n    await waitForNextUpdate();\n\n    AsyncStorage.setItem.mockRejectedValueOnce(new Error('Save error'));\n\n    const newActivityData = { type: 'quiz', level: '2' };\n    await act(async () => {\n      await result.current.saveActivity(newActivityData);\n    });\n\n    // Should not throw, but lastActivity might not be updated if save failed\n    // For this test, we just ensure no crash and setItem was called.\n    expect(AsyncStorage.setItem).toHaveBeenCalledTimes(1);\n  });\n\n  it('handles AsyncStorage errors gracefully during clear', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useLastActivity());\n    await waitForNextUpdate();\n\n    AsyncStorage.removeItem.mockRejectedValueOnce(new Error('Clear error'));\n\n    await act(async () => {\n      await result.current.clearActivity();\n    });\n\n    // Should not throw, but removeItem was called.\n    expect(AsyncStorage.removeItem).toHaveBeenCalledTimes(1);\n  });\n});"],"mappings":"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","ignoreList":[]}