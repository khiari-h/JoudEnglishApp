{"version":3,"names":["_getJestObj","mock","_jest$requireActual","jest","requireActual","StyleSheet","create","container","backgroundGradient","scrollView","scrollContent","categoryItemWrapper","categoryTouchable","selectedCategoryItem","selectedInner","selectedCategoryText","color","sparkleContainer","sparkle","categoryItem","categoryInner","categoryText","RN","Object","assign","Animated","Value","mockAnimatedValue","timing","mockTiming","ScrollView","TouchableOpacity","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_reactNative2","_CategorySelector","_interopRequireWildcard","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","defineProperty","getOwnPropertyDescriptor","_require","fn","start","cb","finished","interpolate","setValue","stopAnimation","describe","categories","id","name","beforeEach","useFakeTimers","clearAllMocks","afterEach","useRealTimers","it","_render","render","jsx","getByText","expect","toBeTruthy","_render2","selectedCategory","onSelectCategory","_render3","fireEvent","press","toHaveBeenCalledWith","_render4","rerender","act","advanceTimersByTime","waitFor","toHaveBeenCalledTimes","_render5","mockClear","anything","objectContaining","toValue","useNativeDriver"],"sources":["CategorySelector.test.js"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, act, waitFor } from '@testing-library/react-native';\nimport { Animated } from 'react-native';\nimport CategorySelector, { areEqual } from '../../../src/components/exercise-common/CategorySelector';\n\n// Mock du style (simplifié)\njest.mock('../../../src/components/exercise-common/CategorySelector/style', () => {\n  const { StyleSheet } = jest.requireActual('react-native');\n  return () => StyleSheet.create({\n    container: {},\n    backgroundGradient: {},\n    scrollView: {},\n    scrollContent: {},\n    categoryItemWrapper: {},\n    categoryTouchable: {},\n    selectedCategoryItem: {},\n    selectedInner: {},\n    selectedCategoryText: { color: '#FFFFFF' },\n    sparkleContainer: {},\n    sparkle: {},\n    categoryItem: {},\n    categoryInner: {},\n    categoryText: {},\n  });\n});\n\n// Mock de Animated.Value et Animated.timing si vous en avez absolument besoin\n// et que le mock global ne suffit pas pour un test spécifique.\n// Cependant, le mock de reanimated dans jest.setup.js devrait suffire.\n// Par exemple, vous pouvez le restaurer ici pour des tests précis\nconst mockTiming = jest.fn(() => ({ start: jest.fn((cb) => cb?.({ finished: true })) }));\nconst mockAnimatedValue = jest.fn(() => ({\n  interpolate: jest.fn(() => ({})),\n  setValue: jest.fn(),\n  stopAnimation: jest.fn(),\n}));\n\n// On restaure le mock pour ce test\njest.mock('react-native', () => {\n  const RN = jest.requireActual('react-native');\n  return {\n    ...RN,\n    Animated: {\n      ...RN.Animated,\n      Value: mockAnimatedValue,\n      timing: mockTiming,\n    },\n    // Mocking ScrollView with ref\n    ScrollView: RN.ScrollView,\n    TouchableOpacity: RN.TouchableOpacity,\n  };\n});\n\n// Test suite\ndescribe('CategorySelector', () => {\n  const categories = [\n    { id: '1', name: 'Grammar' },\n    { id: '2', name: 'Vocabulary' },\n    { id: '3', name: 'Reading' },\n  ];\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n    jest.clearAllMocks();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  it('should render all categories correctly', () => {\n    const { getByText } = render(<CategorySelector categories={categories} />);\n    expect(getByText('Grammar')).toBeTruthy();\n    expect(getByText('Vocabulary')).toBeTruthy();\n    expect(getByText('Reading')).toBeTruthy();\n  });\n\n  it('should display the selected category with the sparkle emoji', () => {\n    const { getByText } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory=\"1\"\n        onSelectCategory={() => {}}\n      />\n    );\n    expect(getByText('✨')).toBeTruthy();\n  });\n\n  it('should call onSelectCategory with the correct category id when a category is pressed', () => {\n    const onSelectCategory = jest.fn();\n    const { getByText } = render(\n      <CategorySelector\n        categories={categories}\n        onSelectCategory={onSelectCategory}\n      />\n    );\n    fireEvent.press(getByText('Vocabulary'));\n    expect(onSelectCategory).toHaveBeenCalledWith('2');\n  });\n\n  it('should trigger animation logic when selectedCategory changes', async () => {\n    const onSelectCategory = jest.fn();\n    const { rerender } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory=\"1\"\n        onSelectCategory={onSelectCategory}\n      />\n    );\n\n    // Act sur le changement de props\n    await act(async () => {\n      rerender(\n        <CategorySelector\n          categories={categories}\n          selectedCategory=\"2\"\n          onSelectCategory={onSelectCategory}\n        />\n      );\n      jest.advanceTimersByTime(300);\n    });\n\n    await waitFor(() => {\n      expect(mockTiming).toHaveBeenCalledTimes(2);\n    });\n  });\n\n  it('should trigger press animations on touch', () => {\n    const { getByText } = render(\n      <CategorySelector categories={categories} selectedCategory=\"1\" onSelectCategory={() => {}} />\n    );\n    \n    mockTiming.mockClear();\n    fireEvent(getByText('Vocabulary'), 'onPressIn');\n    \n    expect(mockTiming).toHaveBeenCalledTimes(1);\n    expect(mockTiming).toHaveBeenCalledWith(\n      expect.anything(),\n      expect.objectContaining({ toValue: 0.95, useNativeDriver: true })\n    );\n    \n    fireEvent(getByText('Vocabulary'), 'onPressOut');\n    expect(mockTiming).toHaveBeenCalledTimes(2);\n    expect(mockTiming).toHaveBeenCalledWith(\n      expect.anything(),\n      expect.objectContaining({ toValue: 1, useNativeDriver: true })\n    );\n  });\n});"],"mappings":"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","ignoreList":[]}