{"version":3,"names":["_react","require","_expoRouter","_useActivityMetrics","_interopRequireDefault","cov_csidh0vi2","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","useRouteActivityTracker","segments","useSegments","pathname","usePathname","_ref","useActivityMetrics","startSession","endSession","updateStreak","currentSessionRef","useRef","isTrackingRef","lastPathnameRef","safeExecute","fn","errorMessage","error","console","warn","detectExercise","some","segment","includes","handleExerciseStart","exerciseType","current","success","handleExerciseEnd","cleanup","useEffect","isExercise","length","_default","exports","default"],"sources":["useRouteActivityTracker.js"],"sourcesContent":["// src/hooks/useRouteActivityTracker.js - REFACTORISÉ pour réduire la complexité cognitive\r\nimport { useEffect, useRef, useCallback } from 'react';\r\nimport { useSegments, usePathname } from 'expo-router';\r\nimport useActivityMetrics from './useActivityMetrics';\r\n\r\nconst useRouteActivityTracker = () => {\r\n  const segments = useSegments();\r\n  const pathname = usePathname();\r\n  const { startSession, endSession, updateStreak } = useActivityMetrics();\r\n  \r\n  // Refs pour éviter les appels en boucle\r\n  const currentSessionRef = useRef(null);\r\n  const isTrackingRef = useRef(false);\r\n  const lastPathnameRef = useRef(null);\r\n\r\n  // Fonction utilitaire pour exécuter des fonctions de manière sécurisée\r\n  const safeExecute = (fn, errorMessage) => {\r\n    try {\r\n      return fn();\r\n    } catch (error) {\r\n      console.warn(errorMessage, error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Fonction pour détecter si on est sur un exercice\r\n  const detectExercise = (segments) => {\r\n    return segments.some(segment => \r\n      segment.includes('Exercise') ||\r\n      segment.includes('exercise') ||\r\n      segment.includes('Assessment') ||\r\n      segment.includes('assessment')\r\n    );\r\n  };\r\n\r\n  // Fonction pour gérer le démarrage d'un exercice\r\n  const handleExerciseStart = (exerciseType) => {\r\n    if (isTrackingRef.current && currentSessionRef.current === exerciseType) {\r\n      return; // Déjà en cours de tracking\r\n    }\r\n\r\n    // Arrêter la session précédente si elle existe\r\n    if (isTrackingRef.current) {\r\n      safeExecute(() => {\r\n        endSession();\r\n        updateStreak();\r\n      }, 'Erreur lors de la fin de session:');\r\n    }\r\n    \r\n    // Démarrer la nouvelle session\r\n    const success = safeExecute(() => {\r\n      startSession(exerciseType);\r\n    }, 'Erreur lors du démarrage de session:');\r\n\r\n    if (success) {\r\n      isTrackingRef.current = true;\r\n      currentSessionRef.current = exerciseType;\r\n    } else {\r\n      isTrackingRef.current = false;\r\n      currentSessionRef.current = null;\r\n    }\r\n  };\r\n\r\n  // Fonction pour gérer la fin d'un exercice\r\n  const handleExerciseEnd = () => {\r\n    if (!isTrackingRef.current) {\r\n      return;\r\n    }\r\n\r\n    safeExecute(() => {\r\n      endSession();\r\n      updateStreak();\r\n    }, 'Erreur lors de la fin de session:');\r\n\r\n    isTrackingRef.current = false;\r\n    currentSessionRef.current = null;\r\n  };\r\n\r\n  // Fonction pour nettoyer l'état - simplifiée pour éviter les problèmes\r\n  const cleanup = () => {\r\n    if (isTrackingRef.current) {\r\n      try {\r\n        endSession();\r\n      } catch (error) {\r\n        console.warn('Erreur lors du cleanup:', error);\r\n      }\r\n      \r\n      isTrackingRef.current = false;\r\n      currentSessionRef.current = null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Éviter les re-déclenchements inutiles\r\n    if (lastPathnameRef.current === pathname) {\r\n      return;\r\n    }\r\n    lastPathnameRef.current = pathname;\r\n\r\n    const isExercise = detectExercise(segments);\r\n\r\n    if (isExercise) {\r\n      const exerciseType = segments[segments.length - 1];\r\n      handleExerciseStart(exerciseType);\r\n    } else {\r\n      handleExerciseEnd();\r\n    }\r\n\r\n    // Cleanup quand les segments/pathname changent\r\n    return cleanup;\r\n  }, [segments, pathname, startSession, endSession, updateStreak]);\r\n\r\n  // Cleanup final au démontage - simplifié et direct\r\n  useEffect(() => {\r\n    return () => {\r\n      if (isTrackingRef.current) {\r\n        try {\r\n          endSession();\r\n        } catch (error) {\r\n          console.warn('Erreur lors du cleanup final:', error);\r\n        }\r\n        isTrackingRef.current = false;\r\n        currentSessionRef.current = null;\r\n      }\r\n    };\r\n  }, []); // Aucune dépendance = seulement au démontage\r\n\r\n  // Pas de rendu\r\n};\r\n\r\nexport default useRouteActivityTracker;"],"mappings":";;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,mBAAA,GAAAC,sBAAA,CAAAH,OAAA;AAAsD,SAAAI,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;U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","ignoreList":[]}