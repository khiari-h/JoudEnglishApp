{"version":3,"names":["_getJestObj","mock","getItem","jest","fn","setItem","_interopRequireDefault","require","_asyncToGenerator2","_reactHooks","_asyncStorage","_useRevisionManager","_require","describe","beforeEach","clearAllMocks","useFakeTimers","afterEach","useRealTimers","it","default","AsyncStorage","mockResolvedValue","_renderHook","renderHook","useRevisionManager","result","waitForNextUpdate","expect","current","totalWordsLearned","toBe","nextRevisionAt","shouldShowRevision","isRevisionDisabled","isLoading","mockSavedData","lastRevisionWords","word","revisionHistory","timestamp","mockImplementation","key","Promise","resolve","JSON","stringify","_renderHook2","completedWords","_renderHook3","act","advanceTimersByTime","_renderHook4","calculateTotalWords","toHaveBeenCalledTimes","Array","fill","map","_","i","_renderHook5","_renderHook6","_renderHook7","response","handleRevisionChoice","action","words","toBeDefined","questionsCount","_renderHook8","nextAt","_renderHook9","_renderHook0","_renderHook1","translation","_renderHook10","selectRevisionWords","toHaveLength","toHaveProperty","_renderHook11","find","w","toBeUndefined","_renderHook12","_renderHook13","markRevisionCompleted","_renderHook14","enableRevisions","_renderHook15","stats","getRevisionStats","totalRevisions","averageScore","lastRevision","toBeNull","streak","mockHistory","percentage","_renderHook16","toEqual","_renderHook17","_renderHook18","setTimeout","toHaveBeenCalledWith","stringContaining","_renderHook19","mockRejectedValue","Error","_renderHook20","reject","_renderHook21","_renderHook22","config","TRIGGER_INTERVAL","QUESTIONS_COUNT","STORAGE_KEY"],"sources":["useRevisionManager.test.js"],"sourcesContent":["// __tests__/hooks/useRevisionManager.test.js\nimport { renderHook, act } from '@testing-library/react-hooks';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useRevisionManager from '../../src/hooks/useRevisionManager';\n\n// Mock AsyncStorage\njest.mock('@react-native-async-storage/async-storage', () => ({\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n}));\n\ndescribe('useRevisionManager', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  describe('Initialisation', () => {\n    it('devrait initialiser avec les valeurs par défaut', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n\n      await waitForNextUpdate();\n\n      expect(result.current.totalWordsLearned).toBe(0);\n      expect(result.current.nextRevisionAt).toBe(50);\n      expect(result.current.shouldShowRevision).toBe(false);\n      expect(result.current.isRevisionDisabled).toBe(false);\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    it('devrait charger les données sauvegardées', async () => {\n      const mockSavedData = {\n        nextRevisionAt: 100,\n        lastRevisionWords: [{ word: 'test' }],\n        revisionHistory: [{ timestamp: 123456789 }],\n        isRevisionDisabled: true\n      };\n\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(JSON.stringify(mockSavedData));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n\n      await waitForNextUpdate();\n\n      expect(result.current.nextRevisionAt).toBe(100);\n      expect(result.current.isRevisionDisabled).toBe(true);\n    });\n  });\n\n  describe('Calcul du total de mots appris', () => {\n    it('devrait calculer le total de mots appris', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(null);\n        }\n        if (key === 'vocabulary_1_classic') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': ['word1', 'word2'],\n              '1': ['word3']\n            }\n          }));\n        }\n        if (key === 'vocabulary_2_fast') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': ['word4', 'word5']\n            }\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n\n      await waitForNextUpdate();\n\n      // Avancer le temps pour déclencher le calcul\n      act(() => {\n        jest.advanceTimersByTime(3000);\n      });\n\n      await waitForNextUpdate();\n\n      expect(result.current.totalWordsLearned).toBe(5); // 3 + 2 mots\n    });\n\n    it('devrait debouncer les calculs fréquents', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      // Appeler calculateTotalWords plusieurs fois rapidement\n      await act(async () => {\n        result.current.calculateTotalWords();\n        result.current.calculateTotalWords();\n        result.current.calculateTotalWords();\n      });\n\n      // Devrait avoir été appelé seulement une fois à cause du debounce\n      expect(AsyncStorage.getItem).toHaveBeenCalledTimes(1); // Seulement le chargement initial\n    });\n  });\n\n  describe('Logique de déclenchement des révisions', () => {\n    it('devrait déclencher une révision quand le seuil est atteint', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(JSON.stringify({\n            nextRevisionAt: 50,\n            isRevisionDisabled: false\n          }));\n        }\n        if (key === 'vocabulary_1_classic') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': Array(50).fill().map((_, i) => `word${i}`) // 50 mots\n            }\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n\n      await waitForNextUpdate();\n\n      // Avancer le temps pour déclencher le calcul\n      act(() => {\n        jest.advanceTimersByTime(3000);\n      });\n\n      await waitForNextUpdate();\n\n      expect(result.current.shouldShowRevision).toBe(true);\n    });\n\n    it('ne devrait pas déclencher si les révisions sont désactivées', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(JSON.stringify({\n            nextRevisionAt: 50,\n            isRevisionDisabled: true\n          }));\n        }\n        if (key === 'vocabulary_1_classic') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': Array(50).fill().map((_, i) => `word${i}`)\n            }\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n\n      await waitForNextUpdate();\n\n      act(() => {\n        jest.advanceTimersByTime(3000);\n      });\n\n      await waitForNextUpdate();\n\n      expect(result.current.shouldShowRevision).toBe(false);\n    });\n  });\n\n  describe('Gestion des choix de révision', () => {\n    it('devrait gérer le choix \"maintenant\"', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      await act(async () => {\n        const response = await result.current.handleRevisionChoice('now');\n        expect(response.action).toBe('navigate');\n        expect(response.words).toBeDefined();\n        expect(response.questionsCount).toBe(10);\n      });\n    });\n\n    it('devrait gérer le choix \"plus tard 50\"', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(null);\n        }\n        if (key === 'vocabulary_1_classic') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': Array(30).fill().map((_, i) => `word${i}`)\n            }\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      act(() => {\n        jest.advanceTimersByTime(3000);\n      });\n\n      await waitForNextUpdate();\n\n      await act(async () => {\n        const response = await result.current.handleRevisionChoice('later_50');\n        expect(response.action).toBe('postponed');\n        expect(response.nextAt).toBe(80); // 30 + 50\n      });\n\n      expect(result.current.nextRevisionAt).toBe(80);\n    });\n\n    it('devrait gérer le choix \"plus tard 100\"', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(null);\n        }\n        if (key === 'vocabulary_1_classic') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': Array(25).fill().map((_, i) => `word${i}`)\n            }\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      act(() => {\n        jest.advanceTimersByTime(3000);\n      });\n\n      await waitForNextUpdate();\n\n      await act(async () => {\n        const response = await result.current.handleRevisionChoice('later_100');\n        expect(response.action).toBe('postponed');\n        expect(response.nextAt).toBe(125); // 25 + 100\n      });\n    });\n\n    it('devrait gérer le choix \"désactiver\"', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      await act(async () => {\n        const response = await result.current.handleRevisionChoice('disable');\n        expect(response.action).toBe('disabled');\n      });\n\n      expect(result.current.isRevisionDisabled).toBe(true);\n    });\n\n    it('devrait gérer les choix invalides', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      await act(async () => {\n        const response = await result.current.handleRevisionChoice('invalid');\n        expect(response.action).toBe('cancelled');\n      });\n    });\n  });\n\n  describe('Sélection des mots de révision', () => {\n    it('devrait sélectionner des mots pour la révision', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(JSON.stringify({\n            lastRevisionWords: []\n          }));\n        }\n        if (key === 'vocabulary_1_classic') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': [\n                { word: 'hello', translation: 'bonjour', timestamp: 1640995200000 },\n                { word: 'world', translation: 'monde', timestamp: 1640995300000 }\n              ]\n            }\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      await act(async () => {\n        const words = await result.current.selectRevisionWords(2);\n        expect(words).toHaveLength(2);\n        expect(words[0]).toHaveProperty('word');\n        expect(words[0]).toHaveProperty('translation');\n      });\n    });\n\n    it('devrait éviter les mots de la dernière révision', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(JSON.stringify({\n            lastRevisionWords: [{ word: 'hello' }]\n          }));\n        }\n        if (key === 'vocabulary_1_classic') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': [\n                { word: 'hello', translation: 'bonjour', timestamp: 1640995200000 },\n                { word: 'world', translation: 'monde', timestamp: 1640995300000 },\n                { word: 'test', translation: 'test', timestamp: 1640995400000 }\n              ]\n            }\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      await act(async () => {\n        const words = await result.current.selectRevisionWords(2);\n        expect(words).toHaveLength(2);\n        expect(words.find(w => w.word === 'hello')).toBeUndefined();\n      });\n    });\n\n    it('devrait prioriser les mots les plus anciens', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(JSON.stringify({\n            lastRevisionWords: []\n          }));\n        }\n        if (key === 'vocabulary_1_classic') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': [\n                { word: 'old', translation: 'ancien', timestamp: 1640995200000 }, // Plus ancien\n                { word: 'new', translation: 'nouveau', timestamp: 1640995400000 } // Plus récent\n              ]\n            }\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      await act(async () => {\n        const words = await result.current.selectRevisionWords(1);\n        expect(words).toHaveLength(1);\n        // Le mot le plus ancien devrait être sélectionné en priorité\n        // (mais avec le mélange final, on ne peut pas garantir l'ordre)\n        expect(words[0]).toHaveProperty('word');\n      });\n    });\n  });\n\n  describe('Completion des révisions', () => {\n    it('devrait enregistrer une révision complétée', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(null);\n        }\n        if (key === 'vocabulary_1_classic') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': Array(30).fill().map((_, i) => ({ word: `word${i}` }))\n            }\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      act(() => {\n        jest.advanceTimersByTime(3000);\n      });\n\n      await waitForNextUpdate();\n\n      const completedWords = [{ word: 'test1' }, { word: 'test2' }];\n\n      act(() => {\n        result.current.markRevisionCompleted(completedWords, 8, 10);\n      });\n\n      expect(result.current.nextRevisionAt).toBe(80); // 30 + 50\n    });\n  });\n\n  describe('Réactivation des révisions', () => {\n    it('devrait réactiver les révisions', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(JSON.stringify({\n            isRevisionDisabled: true\n          }));\n        }\n        if (key === 'vocabulary_1_classic') {\n          return Promise.resolve(JSON.stringify({\n            completedWords: {\n              '0': Array(20).fill().map((_, i) => ({ word: `word${i}` }))\n            }\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      act(() => {\n        jest.advanceTimersByTime(3000);\n      });\n\n      await waitForNextUpdate();\n\n      expect(result.current.isRevisionDisabled).toBe(true);\n\n      act(() => {\n        result.current.enableRevisions();\n      });\n\n      expect(result.current.isRevisionDisabled).toBe(false);\n      expect(result.current.nextRevisionAt).toBe(70); // 20 + 50\n    });\n  });\n\n  describe('Statistiques de révision', () => {\n    it('devrait calculer les statistiques sans historique', () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result } = renderHook(() => useRevisionManager());\n\n      const stats = result.current.getRevisionStats();\n\n      expect(stats.totalRevisions).toBe(0);\n      expect(stats.averageScore).toBe(0);\n      expect(stats.lastRevision).toBeNull();\n      expect(stats.streak).toBe(0);\n    });\n\n    it('devrait calculer les statistiques avec historique', async () => {\n      const mockHistory = [\n        { percentage: 80, timestamp: 1640995200000 },\n        { percentage: 90, timestamp: 1640995300000 },\n        { percentage: 75, timestamp: 1640995400000 }\n      ];\n\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(JSON.stringify({\n            revisionHistory: mockHistory\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      const stats = result.current.getRevisionStats();\n\n      expect(stats.totalRevisions).toBe(3);\n      expect(stats.averageScore).toBe(82); // (80+90+75)/3 = 81.67 arrondi à 82\n      expect(stats.lastRevision).toEqual(mockHistory[2]);\n      expect(stats.streak).toBe(3); // Tous > 70%\n    });\n\n    it('devrait calculer le streak correctement', async () => {\n      const mockHistory = [\n        { percentage: 60 }, // < 70%\n        { percentage: 80 }, // > 70%\n        { percentage: 90 }, // > 70%\n        { percentage: 65 }, // < 70%\n        { percentage: 85 }, // > 70%\n        { percentage: 95 }  // > 70%\n      ];\n\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(JSON.stringify({\n            revisionHistory: mockHistory\n          }));\n        }\n        return Promise.resolve(null);\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      const stats = result.current.getRevisionStats();\n\n      expect(stats.streak).toBe(2); // Les 2 dernières révisions > 70%\n    });\n  });\n\n  describe('Sauvegarde automatique', () => {\n    it('devrait sauvegarder automatiquement les changements', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      act(() => {\n        result.current.enableRevisions();\n      });\n\n      // Attendre que la sauvegarde soit déclenchée\n      await act(async () => {\n        await new Promise(resolve => setTimeout(resolve, 0));\n      });\n\n      expect(AsyncStorage.setItem).toHaveBeenCalledWith(\n        'revision_manager_data',\n        expect.stringContaining('\"isRevisionDisabled\":false')\n      );\n    });\n  });\n\n  describe('Calcul périodique', () => {\n    it('devrait recalculer périodiquement le total de mots', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      // Avancer le temps de 10 secondes (intervalle de recalcul)\n      act(() => {\n        jest.advanceTimersByTime(10000);\n      });\n\n      // Le calcul devrait avoir été déclenché\n      expect(AsyncStorage.getItem).toHaveBeenCalledTimes(1); // Chargement initial\n    });\n  });\n\n  describe('Gestion des erreurs', () => {\n    it('devrait gérer les erreurs de chargement', async () => {\n      AsyncStorage.getItem.mockRejectedValue(new Error('Storage error'));\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n\n      await waitForNextUpdate();\n\n      // Devrait utiliser les valeurs par défaut\n      expect(result.current.nextRevisionAt).toBe(50);\n      expect(result.current.isRevisionDisabled).toBe(false);\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    it('devrait gérer les erreurs de calcul de mots', async () => {\n      AsyncStorage.getItem.mockImplementation((key) => {\n        if (key === 'revision_manager_data') {\n          return Promise.resolve(null);\n        }\n        return Promise.reject(new Error('Calculation error'));\n      });\n\n      const { result, waitForNextUpdate } = renderHook(() => useRevisionManager());\n      await waitForNextUpdate();\n\n      act(() => {\n        jest.advanceTimersByTime(3000);\n      });\n\n      // Ne devrait pas planter\n      expect(result.current.totalWordsLearned).toBe(0);\n    });\n  });\n\n  describe('Configuration', () => {\n    it('devrait exposer la configuration', () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result } = renderHook(() => useRevisionManager());\n\n      expect(result.current.config).toEqual({\n        TRIGGER_INTERVAL: 50,\n        QUESTIONS_COUNT: 10,\n        STORAGE_KEY: 'revision_manager_data'\n      });\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}