{"version":3,"names":["_react","require","_reactNative","_native","_expoRouter","_Container","_interopRequireWildcard","_PhrasesHeader","_interopRequireDefault","_PhrasesCategorySelector","_PhrasesProgress","_PhraseCard","_PhrasesNavigation","_usePhrases2","_useLastActivity2","_phrasesDataHelper","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","PhrasesExercise","_ref","route","navigation","useNavigation","_ref2","params","_ref2$level","level","styles","createStyles","_useLastActivity","useLastActivity","saveActivity","levelColor","getLevelColor","phrasesData","useMemo","getPhrasesData","_usePhrases","usePhrases","categoryIndex","phraseIndex","showTranslation","completedPhrases","loaded","showDetailedProgress","currentPhrase","currentPhrases","totalPhrasesInCategory","hasValidData","changeCategory","toggleTranslation","toggleDetailedProgress","handleNext","handlePrevious","canGoToPrevious","isLastPhraseInCategory","stats","display","useEffect","length","_phrasesData$categori","_phrasesData$categori2","currentCategory","categories","activityData","title","type","metadata","phrase","totalPhrases","category","name","totalCategories","handleBackPress","useCallback","router","push","pathname","handleCategoryChange","index","handleToggleProgressDetails","handleNextPhrase","result","completed","goBack","handlePreviousPhrase","jsx","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","ALL","backgroundColor","statusBarStyle","children","View","style","loadingContainer","ActivityIndicator","size","color","jsxs","onBackPress","emptyStateContainer","withScrollView","withPadding","scrollViewProps","showsVerticalScrollIndicator","contentContainerStyle","scrollContent","progress","completionProgress","completedCount","completedPhrasesCount","expanded","onToggleExpand","onCategoryPress","selectedIndex","onSelectCategory","phraseData","onToggleTranslation","onNext","onPrevious","disablePrevious","disableNext","isLast","_default","exports"],"sources":["index.js"],"sourcesContent":["// PhrasesExercise/index.js - VERSION AVEC SAUVEGARDE ACTIVITÃ‰\r\nimport { useMemo, useEffect, useCallback } from \"react\";\r\nimport { View, ActivityIndicator } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { router } from \"expo-router\";\r\n\r\n// Layout\r\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\r\n\r\n// Components\r\nimport PhrasesHeader from \"./PhrasesHeader\";\r\nimport PhrasesCategorySelector from \"./PhrasesCategorySelector\";\r\nimport PhrasesProgress from \"./PhrasesProgress\";\r\nimport PhraseCard from \"./PhraseCard\";\r\nimport PhrasesNavigation from \"./PhrasesNavigation\";\r\n\r\n// Hook & Utils\r\nimport usePhrases from \"./hooks/usePhrases\";\r\nimport useLastActivity from \"../../../hooks/useLastActivity\"; // âœ… AJOUTÃ‰\r\nimport { getPhrasesData, getLevelColor } from \"../../../utils/phrases/phrasesDataHelper\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ðŸŽ¯ PhrasesExercise - VERSION AVEC SAUVEGARDE ACTIVITÃ‰\r\n */\r\nconst PhrasesExercise = ({ route }) => {\r\n  const navigation = useNavigation();\r\n  const { level = \"A1\" } = route?.params || {};\r\n  const styles = createStyles();\r\n\r\n  // âœ… AJOUTÃ‰ : Hook pour sauvegarder l'activitÃ©\r\n  const { saveActivity } = useLastActivity();\r\n\r\n  // Data\r\n  const levelColor = getLevelColor(level);\r\n  const phrasesData = useMemo(() => getPhrasesData(level), [level]);\r\n\r\n  // Hook unifiÃ© - Garde seulement les variables utilisÃ©es\r\n  const {\r\n    categoryIndex,\r\n    phraseIndex,\r\n    showTranslation,\r\n    completedPhrases,\r\n    loaded,\r\n    showDetailedProgress,\r\n    currentPhrase,\r\n    currentPhrases,\r\n    totalPhrasesInCategory,\r\n    hasValidData,\r\n    changeCategory,\r\n    toggleTranslation,\r\n    toggleDetailedProgress,\r\n    handleNext,\r\n    handlePrevious,\r\n    canGoToPrevious,\r\n    isLastPhraseInCategory,\r\n    stats,\r\n    display,\r\n  } = usePhrases(phrasesData, level);\r\n\r\n  // âœ… AJOUTÃ‰ : Sauvegarder l'activitÃ© Ã  chaque changement de phrase/catÃ©gorie\r\n  useEffect(() => {\r\n    if (loaded && hasValidData && currentPhrase && currentPhrases.length > 0 && phraseIndex < 100) { // âœ… Protection boucle\r\n      const currentCategory = phrasesData?.categories?.[categoryIndex];\r\n      \r\n      const activityData = {\r\n        title: \"Expressions\",\r\n        level,\r\n        type: \"phrases\",\r\n        metadata: {\r\n          phrase: phraseIndex,\r\n          totalPhrases: totalPhrasesInCategory || currentPhrases.length, // âœ… Fallback\r\n          category: currentCategory?.name || \"GÃ©nÃ©ral\",\r\n          categoryIndex,\r\n          totalCategories: phrasesData?.categories?.length || 1\r\n        }\r\n      };\r\n\r\n      saveActivity(activityData);\r\n    }\r\n  }, [loaded, hasValidData, currentPhrase, currentPhrases.length, phraseIndex, totalPhrasesInCategory, categoryIndex, level, phrasesData]);\r\n\r\n  // Handlers\r\n  const handleBackPress = useCallback(() => {\r\n    router.push({\r\n      pathname: \"/tabs/exerciseSelection\",\r\n      params: { level }\r\n    });\r\n  }, [level]);\r\n\r\n  const handleCategoryChange = useCallback((index) => changeCategory(index), [changeCategory]);\r\n\r\n  const handleToggleProgressDetails = useCallback(() => toggleDetailedProgress(), [toggleDetailedProgress]);\r\n\r\n  const handleNextPhrase = useCallback(() => {\r\n    const result = handleNext();\r\n    if (result.completed) {\r\n      navigation.goBack();\r\n    }\r\n  }, [handleNext, navigation]);\r\n\r\n  const handlePreviousPhrase = useCallback(() => handlePrevious(), [handlePrevious]);\r\n\r\n  // Loading state\r\n  if (!loaded || !hasValidData) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color={levelColor} />\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // Empty state\r\n  if (currentPhrases.length === 0) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <PhrasesHeader\r\n          level={level}\r\n          onBackPress={handleBackPress}\r\n        />\r\n        <View style={styles.emptyStateContainer}>\r\n          <ActivityIndicator size=\"large\" color={levelColor} />\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      safeArea\r\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n      withScrollView\r\n      backgroundColor=\"#f8fafc\"\r\n      statusBarStyle=\"dark-content\"\r\n      withPadding={false}\r\n      scrollViewProps={{\r\n        showsVerticalScrollIndicator: false,\r\n        contentContainerStyle: styles.scrollContent,\r\n      }}\r\n    >\r\n      {/* Header */}\r\n      <PhrasesHeader\r\n        level={level}\r\n        onBackPress={handleBackPress}\r\n      />\r\n\r\n      {/* Progress - MAINTENANT COLLÃ‰ AU HEADER */}\r\n      <PhrasesProgress\r\n        progress={stats.completionProgress}\r\n        currentPhrase={phraseIndex + 1}\r\n        totalPhrases={totalPhrasesInCategory}\r\n        completedCount={stats.completedPhrasesCount}\r\n        levelColor={levelColor}\r\n        phrasesData={phrasesData}\r\n        completedPhrases={completedPhrases}\r\n        expanded={showDetailedProgress}\r\n        onToggleExpand={handleToggleProgressDetails}\r\n        onCategoryPress={handleCategoryChange}\r\n      />\r\n\r\n      {/* Category Selector - APRÃˆS PROGRESS comme les autres exercices */}\r\n      <PhrasesCategorySelector\r\n        categories={display.categories}\r\n        selectedIndex={categoryIndex}\r\n        onSelectCategory={handleCategoryChange}\r\n        levelColor={levelColor}\r\n      />\r\n\r\n      {/* Phrase Card */}\r\n      <PhraseCard\r\n        phraseData={currentPhrase}\r\n        showTranslation={showTranslation}\r\n        onToggleTranslation={toggleTranslation}\r\n        levelColor={levelColor}\r\n      />\r\n\r\n      {/* Navigation */}\r\n      <PhrasesNavigation\r\n        onNext={handleNextPhrase}\r\n        onPrevious={handlePreviousPhrase}\r\n        disablePrevious={!canGoToPrevious}\r\n        disableNext={false}\r\n        isLast={isLastPhraseInCategory}\r\n        levelColor={levelColor}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PhrasesExercise;"],"mappings":"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","ignoreList":[]}