5769db6a35de407d8afcd3a0eef6de69
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vocab = void 0;
function cov_208wg2f738() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\15_sante_globale_et_enjeux_biomedical.js";
  var hash = "91aa9a6a598247d571b201fc1c791a56ac8f3eb7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\5\\categories\\15_sante_globale_et_enjeux_biomedical.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 21
        },
        end: {
          line: 187,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "91aa9a6a598247d571b201fc1c791a56ac8f3eb7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_208wg2f738 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_208wg2f738();
var vocab = exports.vocab = (cov_208wg2f738().s[0]++, {
  title: "Santé Globale & Enjeux Biomédicaux",
  words: [{
    word: "universal health coverage",
    translation: "couverture sanitaire universelle",
    example: "Universal health coverage aims to ensure all people have access to essential health services."
  }, {
    word: "health system strengthening",
    translation: "renforcement des systèmes de santé",
    example: "Development programs prioritize health system strengthening over disease-specific interventions."
  }, {
    word: "non-state actors",
    translation: "acteurs non étatiques",
    example: "Non-state actors including NGOs and corporations increasingly influence global health priorities."
  }, {
    word: "public health policy",
    translation: "politique de santé publique",
    example: "Public health policy balances population-level interventions with individual freedoms."
  }, {
    word: "vertical program",
    translation: "programme vertical",
    example: "Vertical programs focus on specific diseases rather than comprehensive health services."
  }, {
    word: "global health architecture",
    translation: "architecture de la santé mondiale",
    example: "The global health architecture includes international organizations, national governments, and private entities."
  }, {
    word: "North-South divide",
    translation: "clivage Nord-Sud",
    example: "The North-South divide in health resources perpetuates global inequalities."
  }, {
    word: "donor coordination",
    translation: "coordination des donateurs",
    example: "Effective donor coordination prevents duplication and maximizes impact."
  }, {
    word: "sustainable health development",
    translation: "développement sanitaire durable",
    example: "The program promotes sustainable health development through local capacity building."
  }, {
    word: "disease surveillance",
    translation: "surveillance des maladies",
    example: "Effective disease surveillance requires standardized reporting systems."
  }, {
    word: "strategic health planning",
    translation: "planification sanitaire stratégique",
    example: "Strategic health planning addresses both immediate needs and long-term goals."
  }, {
    word: "health information system",
    translation: "système d'information sanitaire",
    example: "A robust health information system provides data for effective decision-making."
  }, {
    word: "essential medicines",
    translation: "médicaments essentiels",
    example: "The WHO maintains a list of essential medicines that should be available in all health systems."
  }, {
    word: "health resource allocation",
    translation: "allocation des ressources sanitaires",
    example: "Ethical frameworks guide health resource allocation during shortages."
  }, {
    word: "bioethical dilemma",
    translation: "dilemme bioéthique",
    example: "Emerging technologies create novel bioethical dilemmas requiring thoughtful analysis."
  }, {
    word: "autonomy principle",
    translation: "principe d'autonomie",
    example: "The autonomy principle respects individuals' right to make their own health decisions."
  }, {
    word: "justice principle",
    translation: "principe de justice",
    example: "The justice principle promotes fair distribution of benefits and burdens."
  }, {
    word: "bioethics committee",
    translation: "comité de bioéthique",
    example: "The national bioethics committee provides guidance on emerging issues."
  }, {
    word: "resource allocation ethics",
    translation: "éthique d'allocation des ressources",
    example: "Resource allocation ethics addresses fair distribution of limited healthcare."
  }, {
    word: "medical confidentiality",
    translation: "confidentialité médicale",
    example: "Medical confidentiality protects patients' private health information."
  }, {
    word: "research integrity",
    translation: "intégrité de la recherche",
    example: "Research integrity requires honest reporting of methods and results."
  }, {
    word: "ethical review board",
    translation: "comité d'éthique",
    example: "Clinical trials require approval from an ethical review board."
  }, {
    word: "bioethical principle",
    translation: "principe bioéthique",
    example: "Different cultural traditions may prioritize bioethical principles differently."
  }, {
    word: "ethical guideline",
    translation: "directive éthique",
    example: "Professional associations develop ethical guidelines for practitioners."
  }, {
    word: "bioethical discourse",
    translation: "discours bioéthique",
    example: "Bioethical discourse addresses fundamental questions about human life and technology."
  }, {
    word: "principlism",
    translation: "principisme",
    example: "Principlism applies core ethical principles to biomedical questions."
  }, {
    word: "ethical implication",
    translation: "implication éthique",
    example: "The research examined ethical implications of artificial reproduction technologies."
  }, {
    word: "professional ethics",
    translation: "éthique professionnelle",
    example: "Medical training includes professional ethics education throughout the curriculum."
  }, {
    word: "ethical reasoning",
    translation: "raisonnement éthique",
    example: "Clinicians apply ethical reasoning to complex treatment decisions."
  }, {
    word: "moral deliberation",
    translation: "délibération morale",
    example: "Ethics committees engage in structured moral deliberation about difficult cases."
  }, {
    word: "personalized therapy",
    translation: "thérapie personnalisée",
    example: "Personalized therapy optimizes treatment for each patient's unique characteristics."
  }, {
    word: "targeted therapy",
    translation: "thérapie ciblée",
    example: "Targeted therapy addresses specific molecular pathways involved in disease."
  }, {
    word: "pharmacogenomics",
    translation: "pharmacogénomique",
    example: "Pharmacogenomics studies how genes affect individual responses to medications."
  }, {
    word: "genetic profiling",
    translation: "profilage génétique",
    example: "Genetic profiling identifies variants associated with disease risk or treatment response."
  }, {
    word: "companion diagnostics",
    translation: "diagnostics compagnons",
    example: "Companion diagnostics determine which patients will benefit from specific therapies."
  }, {
    word: "predictive biomarker",
    translation: "biomarqueur prédictif",
    example: "Predictive biomarkers indicate likely response to particular treatments."
  }, {
    word: "molecular diagnosis",
    translation: "diagnostic moléculaire",
    example: "Molecular diagnosis identifies disease at the genetic or protein level."
  }, {
    word: "individualized medicine",
    translation: "médecine individualisée",
    example: "Individualized medicine considers each patient's unique disease presentation."
  }, {
    word: "therapeutic monitoring",
    translation: "suivi thérapeutique",
    example: "Therapeutic monitoring adjusts treatment based on measured drug levels."
  }, {
    word: "biological variability",
    translation: "variabilité biologique",
    example: "Biological variability between patients affects treatment outcomes."
  }, {
    word: "stratified medicine",
    translation: "médecine stratifiée",
    example: "Stratified medicine classifies patients into subgroups with similar characteristics."
  }, {
    word: "patient-specific approach",
    translation: "approche spécifique au patient",
    example: "A patient-specific approach considers individual preferences and circumstances."
  }, {
    word: "molecular profiling",
    translation: "profilage moléculaire",
    example: "Molecular profiling identifies potential targets for personalized therapy."
  }, {
    word: "genetic susceptibility",
    translation: "susceptibilité génétique",
    example: "Genetic susceptibility testing identifies individuals at elevated disease risk."
  }, {
    word: "personalized prevention",
    translation: "prévention personnalisée",
    example: "Personalized prevention strategies address individual risk factors."
  }, {
    word: "tailored intervention",
    translation: "intervention sur mesure",
    example: "Tailored interventions match approaches to patient characteristics."
  }, {
    word: "genotype-guided therapy",
    translation: "thérapie guidée par génotype",
    example: "Genotype-guided therapy selects medications based on genetic variants."
  }, {
    word: "molecular targeting",
    translation: "ciblage moléculaire",
    example: "Molecular targeting addresses specific disease mechanisms in individual patients."
  }, {
    word: "n-of-1 trial",
    translation: "essai n-of-1",
    example: "N-of-1 trials evaluate treatments in single patients through systematic methods."
  }, {
    word: "omics technology",
    translation: "technologie omique",
    example: "Omics technologies provide comprehensive molecular profiles of individuals."
  }, {
    word: "patient stratification",
    translation: "stratification des patients",
    example: "Patient stratification identifies subgroups likely to benefit from specific approaches."
  }, {
    word: "molecular subtyping",
    translation: "sous-typage moléculaire",
    example: "Molecular subtyping classifies diseases based on underlying biology rather than symptoms."
  }, {
    word: "liquid biopsy",
    translation: "biopsie liquide",
    example: "Liquid biopsy analyzes circulating biomarkers to monitor disease non-invasively."
  }, {
    word: "theranostics",
    translation: "théranostique",
    example: "Theranostics combines therapeutic and diagnostic approaches in personalized medicine."
  }, {
    word: "personalised decision support",
    translation: "aide à la décision personnalisée",
    example: "Clinical systems provide personalised decision support based on patient data."
  }, {
    word: "integrated care model",
    translation: "modèle de soins intégrés",
    example: "Integrated care models coordinate services across specialties and settings."
  }, {
    word: "value-based healthcare",
    translation: "soins de santé fondés sur la valeur",
    example: "Value-based healthcare reimburses providers based on patient outcomes rather than volume."
  }, {
    word: "patient-centered care",
    translation: "soins centrés sur le patient",
    example: "Patient-centered care prioritizes individual needs and preferences."
  }, {
    word: "healthcare delivery model",
    translation: "modèle de prestation de soins",
    example: "The healthcare delivery model determines how services reach populations."
  }, {
    word: "coordinated care",
    translation: "soins coordonnés",
    example: "Coordinated care ensures seamless transitions between providers and settings."
  }, {
    word: "accountable care organization",
    translation: "organisation de soins responsables",
    example: "Accountable care organizations coordinate provider groups for quality improvement."
  }, {
    word: "healthcare quality indicator",
    translation: "indicateur de qualité des soins",
    example: "Healthcare quality indicators measure performance across dimensions of care."
  }, {
    word: "remote monitoring",
    translation: "surveillance à distance",
    example: "Remote monitoring allows clinicians to track patients' conditions outside clinical settings."
  }, {
    word: "payment model",
    translation: "modèle de paiement",
    example: "Alternative payment models align financial incentives with quality outcomes."
  }, {
    word: "healthcare accessibility",
    translation: "accessibilité aux soins",
    example: "Geographic and financial barriers affect healthcare accessibility for vulnerable populations."
  }, {
    word: "health information exchange",
    translation: "échange d'informations de santé",
    example: "Health information exchange facilitates sharing of patient data between providers."
  }, {
    word: "medical home",
    translation: "centre médical principal",
    example: "The medical home model coordinates care through primary care providers."
  }, {
    word: "population health management",
    translation: "gestion de la santé des populations",
    example: "Population health management addresses needs of specific patient groups."
  }, {
    word: "healthcare innovation",
    translation: "innovation dans les soins de santé",
    example: "Healthcare innovation improves quality, efficiency, and patient experience."
  }, {
    word: "virtual care",
    translation: "soins virtuels",
    example: "Virtual care platforms expanded rapidly during the pandemic."
  }, {
    word: "learning health system",
    translation: "système de santé apprenant",
    example: "Learning health systems continuously improve through data and evidence."
  }, {
    word: "disruptive healthcare",
    translation: "soins de santé disruptifs",
    example: "Disruptive healthcare models challenge traditional delivery approaches."
  }, {
    word: "healthcare ecosystem",
    translation: "écosystème de soins de santé",
    example: "The healthcare ecosystem includes providers, payers, suppliers, and patients."
  }, {
    word: "health service integration",
    translation: "intégration des services de santé",
    example: "Health service integration improves coordination across the care continuum."
  }, {
    word: "alternative care model",
    translation: "modèle de soins alternatif",
    example: "Alternative care models address limitations in traditional approaches."
  }, {
    word: "planetary health",
    translation: "santé planétaire",
    example: "Planetary health examines connections between human health and Earth's natural systems."
  }, {
    word: "environmental health",
    translation: "santé environnementale",
    example: "Environmental health addresses how external factors affect human wellbeing."
  }, {
    word: "One Health approach",
    translation: "approche Une seule santé",
    example: "The One Health approach integrates human, animal, and environmental health."
  }, {
    word: "climate-sensitive disease",
    translation: "maladie sensible au climat",
    example: "Climate-sensitive diseases spread more widely as temperatures increase."
  }, {
    word: "ecological health",
    translation: "santé écologique",
    example: "Ecological health provides the foundation for human wellbeing."
  }, {
    word: "health co-benefit",
    translation: "co-bénéfice sanitaire",
    example: "Climate policies often produce health co-benefits through reduced pollution."
  }, {
    word: "environmental degradation",
    translation: "dégradation environnementale",
    example: "Environmental degradation directly impacts population health outcomes."
  }, {
    word: "ecosystem service",
    translation: "service écosystémique",
    example: "Healthy ecosystems provide essential services supporting human health."
  }, {
    word: "health impact assessment",
    translation: "évaluation d'impact sur la santé",
    example: "Health impact assessments examine how projects affect community wellbeing."
  }, {
    word: "zoonotic disease",
    translation: "maladie zoonotique",
    example: "Zoonotic diseases transmit between animals and humans, often following environmental disruption."
  }, {
    word: "sustainable healthcare",
    translation: "soins de santé durables",
    example: "Sustainable healthcare reduces environmental impact while maintaining quality."
  }, {
    word: "environmental medicine",
    translation: "médecine environnementale",
    example: "Environmental medicine addresses health conditions related to external exposures."
  }, {
    word: "health adaptation",
    translation: "adaptation sanitaire",
    example: "Health adaptation strategies prepare communities for climate change impacts."
  }, {
    word: "vector-borne disease",
    translation: "maladie à transmission vectorielle",
    example: "Vector-borne diseases spread through mosquitoes and other carriers affected by climate."
  }, {
    word: "health vulnerability",
    translation: "vulnérabilité sanitaire",
    example: "Health vulnerability assessment identifies populations at greatest risk from environmental threats."
  }, {
    word: "environmental pathogen",
    translation: "pathogène environnemental",
    example: "Environmental pathogens emerge or spread following ecological disruption."
  }, {
    word: "health resilience",
    translation: "résilience sanitaire",
    example: "Communities need health resilience to withstand environmental challenges."
  }, {
    word: "green healthcare",
    translation: "soins de santé écologiques",
    example: "Green healthcare initiatives reduce waste and energy consumption in medical facilities."
  }, {
    word: "ecotoxicology",
    translation: "écotoxicologie",
    example: "Ecotoxicology studies how pollutants affect organisms and ecosystems."
  }, {
    word: "health forecasting",
    translation: "prévision sanitaire",
    example: "Climate-based health forecasting anticipates disease outbreaks and resource needs."
  }, {
    word: "conservation medicine",
    translation: "médecine de conservation",
    example: "Conservation medicine connects ecosystem health with human wellbeing."
  }, {
    word: "health geography",
    translation: "géographie de la santé",
    example: "Health geography examines spatial patterns of disease and environmental factors."
  }, {
    word: "climate-health nexus",
    translation: "nexus climat-santé",
    example: "The climate-health nexus represents interconnections between environmental change and wellbeing."
  }, {
    word: "biosphere integrity",
    translation: "intégrité de la biosphère",
    example: "Biosphere integrity provides fundamental support for human health."
  }, {
    word: "anthropogenic impact",
    translation: "impact anthropique",
    example: "Anthropogenic impacts on natural systems create cascading health effects."
  }, {
    word: "social determinant of health",
    translation: "déterminant social de la santé",
    example: "Housing quality represents a critical social determinant of health affecting wellbeing."
  }, {
    word: "upstream factor",
    translation: "facteur en amont",
    example: "Effective interventions address upstream factors creating health challenges."
  }, {
    word: "structural violence",
    translation: "violence structurelle",
    example: "Structural violence describes how social arrangements harm vulnerable populations."
  }, {
    word: "systemic barrier",
    translation: "barrière systémique",
    example: "Systemic barriers prevent equitable access to healthcare services."
  }, {
    word: "structural racism",
    translation: "racisme structurel",
    example: "Structural racism creates persistent health disparities between racial groups."
  }, {
    word: "institutional discrimination",
    translation: "discrimination institutionnelle",
    example: "Institutional discrimination affects healthcare access and treatment quality."
  }, {
    word: "structural intervention",
    translation: "intervention structurelle",
    example: "Structural interventions address root causes rather than individual behaviors."
  }, {
    word: "poverty-related disease",
    translation: "maladie liée à la pauvreté",
    example: "Poverty-related diseases reflect unequal distribution of resources and risks."
  }, {
    word: "population vulnerability",
    translation: "vulnérabilité de la population",
    example: "Population vulnerability assessment identifies groups at greatest health risk."
  }, {
    word: "social protection",
    translation: "protection sociale",
    example: "Social protection programs safeguard health during economic hardship."
  }, {
    word: "geospatial inequality",
    translation: "inégalité géospatiale",
    example: "Geospatial inequality in healthcare access affects rural populations disproportionately."
  }, {
    word: "foundational determinant",
    translation: "déterminant fondamental",
    example: "Racism functions as a foundational determinant structuring multiple health pathways."
  }, {
    word: "intersectional disadvantage",
    translation: "désavantage intersectionnel",
    example: "Intersectional disadvantage creates compounded health challenges for specific groups."
  }, {
    word: "structural competency",
    translation: "compétence structurelle",
    example: "Medical education increasingly includes structural competency training for providers."
  }, {
    word: "health crisis",
    translation: "crise sanitaire",
    example: "The health crisis required coordinated response across multiple sectors."
  }, {
    word: "pandemic preparedness",
    translation: "préparation à la pandémie",
    example: "Pandemic preparedness involves developing systems and resources before outbreaks occur."
  }, {
    word: "outbreak management",
    translation: "gestion des épidémies",
    example: "Outbreak management includes surveillance, containment, and treatment strategies."
  }, {
    word: "public health emergency",
    translation: "urgence de santé publique",
    example: "The organization declared a public health emergency of international concern."
  }, {
    word: "epidemic control",
    translation: "contrôle des épidémies",
    example: "Epidemic control measures aim to reduce transmission and mortality."
  }, {
    word: "surge capacity",
    translation: "capacité de pointe",
    example: "Hospitals increased surge capacity to accommodate additional patients."
  }, {
    word: "quarantine measure",
    translation: "mesure de quarantaine",
    example: "Quarantine measures restrict movement of potentially exposed individuals."
  }, {
    word: "emergency operations center",
    translation: "centre d'opérations d'urgence",
    example: "The emergency operations center coordinated multi-agency response efforts."
  }, {
    word: "strategic stockpile",
    translation: "réserve stratégique",
    example: "The strategic stockpile contains essential medical supplies for emergencies."
  }, {
    word: "incident command system",
    translation: "système de commandement des incidents",
    example: "The incident command system establishes clear authority during crisis response."
  }, {
    word: "disease containment",
    translation: "confinement des maladies",
    example: "Disease containment strategies include isolation, quarantine, and movement restrictions."
  }, {
    word: "health communication",
    translation: "communication sanitaire",
    example: "Effective health communication provides clear guidance during emergencies."
  }, {
    word: "epidemic intelligence",
    translation: "renseignement épidémique",
    example: "Epidemic intelligence monitors potential threats through surveillance systems."
  }, {
    word: "community mitigation",
    translation: "atténuation communautaire",
    example: "Community mitigation strategies reduce disease spread at population level."
  }, {
    word: "health emergency management",
    translation: "gestion des urgences sanitaires",
    example: "Health emergency management coordinates resources across multiple agencies."
  }, {
    word: "isolation protocol",
    translation: "protocole d'isolement",
    example: "The isolation protocol separates infected individuals from the general population."
  }, {
    word: "early warning system",
    translation: "système d'alerte précoce",
    example: "Early warning systems detect outbreaks before widespread transmission occurs."
  }, {
    word: "sanitary measure",
    translation: "mesure sanitaire",
    example: "Border authorities implemented sanitary measures for international travelers."
  }, {
    word: "outbreak investigation",
    translation: "enquête sur l'épidémie",
    example: "The outbreak investigation identified the source of contamination."
  }, {
    word: "emergency preparedness",
    translation: "préparation aux situations d'urgence",
    example: "Emergency preparedness requires planning, training, and resource allocation."
  }, {
    word: "health crisis communication",
    translation: "communication de crise sanitaire",
    example: "Health crisis communication must address uncertainty while maintaining public trust."
  }, {
    word: "early containment",
    translation: "confinement précoce",
    example: "Early containment efforts prevent widespread community transmission."
  }, {
    word: "emergency use authorization",
    translation: "autorisation d'utilisation d'urgence",
    example: "Emergency use authorization accelerates access to needed medical interventions."
  }, {
    word: "disaster medicine",
    translation: "médecine de catastrophe",
    example: "Disaster medicine specialists coordinate healthcare during crisis situations."
  }]
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,