744eb042dfd060bd9050e8d8a8de6224
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BasePressable;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["style", "onPress", "onLongPress", "disabled", "androidRipple", "children"];
function BasePressable(_ref) {
  var style = _ref.style,
    onPress = _ref.onPress,
    onLongPress = _ref.onLongPress,
    disabled = _ref.disabled,
    androidRipple = _ref.androidRipple,
    children = _ref.children,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return (0, _jsxRuntime.jsx)(_reactNative.Pressable, Object.assign({
    style: style,
    onPress: onPress,
    onLongPress: onLongPress,
    disabled: disabled,
    android_ripple: androidRipple,
    accessibilityRole: "button",
    accessible: true
  }, props, {
    children: children
  }));
}
BasePressable.propTypes = {
  style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
  onPress: _propTypes.default.func,
  onLongPress: _propTypes.default.func,
  disabled: _propTypes.default.bool,
  androidRipple: _propTypes.default.object,
  children: _propTypes.default.node
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3Byb3BUeXBlcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfanN4UnVudGltZSIsIl9leGNsdWRlZCIsIkJhc2VQcmVzc2FibGUiLCJfcmVmIiwic3R5bGUiLCJvblByZXNzIiwib25Mb25nUHJlc3MiLCJkaXNhYmxlZCIsImFuZHJvaWRSaXBwbGUiLCJjaGlsZHJlbiIsInByb3BzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsImRlZmF1bHQiLCJqc3giLCJQcmVzc2FibGUiLCJPYmplY3QiLCJhc3NpZ24iLCJhbmRyb2lkX3JpcHBsZSIsImFjY2Vzc2liaWxpdHlSb2xlIiwiYWNjZXNzaWJsZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9uZU9mVHlwZSIsIm9iamVjdCIsImFycmF5IiwiZnVuYyIsImJvb2wiLCJub2RlIl0sInNvdXJjZXMiOlsiQmFzZVByZXNzYWJsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy91aS9CdXR0b24vQmFzZVByZXNzYWJsZS5qc1xyXG5pbXBvcnQgeyBQcmVzc2FibGUgfSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCYXNlUHJlc3NhYmxlKHtcclxuICBzdHlsZSxcclxuICBvblByZXNzLFxyXG4gIG9uTG9uZ1ByZXNzLFxyXG4gIGRpc2FibGVkLFxyXG4gIGFuZHJvaWRSaXBwbGUsXHJcbiAgY2hpbGRyZW4sXHJcbiAgLi4ucHJvcHNcclxufSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8UHJlc3NhYmxlXHJcbiAgICAgIHN0eWxlPXtzdHlsZX1cclxuICAgICAgb25QcmVzcz17b25QcmVzc31cclxuICAgICAgb25Mb25nUHJlc3M9e29uTG9uZ1ByZXNzfVxyXG4gICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XHJcbiAgICAgIGFuZHJvaWRfcmlwcGxlPXthbmRyb2lkUmlwcGxlfVxyXG4gICAgICBhY2Nlc3NpYmlsaXR5Um9sZT1cImJ1dHRvblwiXHJcbiAgICAgIGFjY2Vzc2libGVcclxuICAgICAgey4uLnByb3BzfVxyXG4gICAgPlxyXG4gICAgICB7Y2hpbGRyZW59XHJcbiAgICA8L1ByZXNzYWJsZT5cclxuICApO1xyXG59XHJcblxyXG5CYXNlUHJlc3NhYmxlLnByb3BUeXBlcyA9IHtcclxuICBzdHlsZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmFycmF5XSksXHJcbiAgb25QcmVzczogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgb25Mb25nUHJlc3M6IFByb3BUeXBlcy5mdW5jLFxyXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcclxuICBhbmRyb2lkUmlwcGxlOiBQcm9wVHlwZXMub2JqZWN0LFxyXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcclxufTtcclxuXHJcblxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFVBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUFtQyxJQUFBRyxXQUFBLEdBQUFILE9BQUE7QUFBQSxJQUFBSSxTQUFBO0FBRXBCLFNBQVNDLGFBQWFBLENBQUFDLElBQUEsRUFRbEM7RUFBQSxJQVBEQyxLQUFLLEdBQUFELElBQUEsQ0FBTEMsS0FBSztJQUNMQyxPQUFPLEdBQUFGLElBQUEsQ0FBUEUsT0FBTztJQUNQQyxXQUFXLEdBQUFILElBQUEsQ0FBWEcsV0FBVztJQUNYQyxRQUFRLEdBQUFKLElBQUEsQ0FBUkksUUFBUTtJQUNSQyxhQUFhLEdBQUFMLElBQUEsQ0FBYkssYUFBYTtJQUNiQyxRQUFRLEdBQUFOLElBQUEsQ0FBUk0sUUFBUTtJQUNMQyxLQUFLLE9BQUFDLHlCQUFBLENBQUFDLE9BQUEsRUFBQVQsSUFBQSxFQUFBRixTQUFBO0VBRVIsT0FDRSxJQUFBRCxXQUFBLENBQUFhLEdBQUEsRUFBQ2pCLFlBQUEsQ0FBQWtCLFNBQVMsRUFBQUMsTUFBQSxDQUFBQyxNQUFBO0lBQ1JaLEtBQUssRUFBRUEsS0FBTTtJQUNiQyxPQUFPLEVBQUVBLE9BQVE7SUFDakJDLFdBQVcsRUFBRUEsV0FBWTtJQUN6QkMsUUFBUSxFQUFFQSxRQUFTO0lBQ25CVSxjQUFjLEVBQUVULGFBQWM7SUFDOUJVLGlCQUFpQixFQUFDLFFBQVE7SUFDMUJDLFVBQVU7RUFBQSxHQUNOVCxLQUFLO0lBQUFELFFBQUEsRUFFUkE7RUFBUSxFQUNBLENBQUM7QUFFaEI7QUFFQVAsYUFBYSxDQUFDa0IsU0FBUyxHQUFHO0VBQ3hCaEIsS0FBSyxFQUFFaUIsa0JBQVMsQ0FBQ0MsU0FBUyxDQUFDLENBQUNELGtCQUFTLENBQUNFLE1BQU0sRUFBRUYsa0JBQVMsQ0FBQ0csS0FBSyxDQUFDLENBQUM7RUFDL0RuQixPQUFPLEVBQUVnQixrQkFBUyxDQUFDSSxJQUFJO0VBQ3ZCbkIsV0FBVyxFQUFFZSxrQkFBUyxDQUFDSSxJQUFJO0VBQzNCbEIsUUFBUSxFQUFFYyxrQkFBUyxDQUFDSyxJQUFJO0VBQ3hCbEIsYUFBYSxFQUFFYSxrQkFBUyxDQUFDRSxNQUFNO0VBQy9CZCxRQUFRLEVBQUVZLGtCQUFTLENBQUNNO0FBQ3RCLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=