c3cf74644ddc1a47e7c2bfe4b102260a
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isTypedRoute = exports.stripInvisibleSegmentsFromPath = exports.stripGroupSegmentsFromPath = exports.removeFileSystemDots = exports.removeSupportedExtensions = exports.getContextKey = exports.getNameFromFilePath = exports.matchArrayGroupName = exports.matchLastGroupName = exports.matchGroupName = exports.testNotFound = exports.matchDeepDynamicRouteName = exports.matchDynamicName = void 0;
function matchDynamicName(name) {
  var _name$match;
  return (_name$match = name.match(/^\[([^[\](?:\.\.\.)]+?)\]$/)) == null ? void 0 : _name$match[1];
}
exports.matchDynamicName = matchDynamicName;
function matchDeepDynamicRouteName(name) {
  var _name$match2;
  return (_name$match2 = name.match(/^\[\.\.\.([^/]+?)\]$/)) == null ? void 0 : _name$match2[1];
}
exports.matchDeepDynamicRouteName = matchDeepDynamicRouteName;
function testNotFound(name) {
  return /\+not-found$/.test(name);
}
exports.testNotFound = testNotFound;
function matchGroupName(name) {
  var _name$match3;
  return (_name$match3 = name.match(/^(?:[^\\(\\)])*?\(([^\\/]+)\).*?$/)) == null ? void 0 : _name$match3[1];
}
exports.matchGroupName = matchGroupName;
function matchLastGroupName(name) {
  var _name$match4;
  return (_name$match4 = name.match(/.*(?:\/|^)\(([^\\/\s]+)\)[^\s]*$/)) == null ? void 0 : _name$match4[1];
}
exports.matchLastGroupName = matchLastGroupName;
function matchArrayGroupName(name) {
  var _name$match5;
  return (_name$match5 = name.match(/(?:[^\\(\\)])*?\(([^\\/]+,[^\\/]+)\).*?$/)) == null ? void 0 : _name$match5[1];
}
exports.matchArrayGroupName = matchArrayGroupName;
function getNameFromFilePath(name) {
  return removeSupportedExtensions(removeFileSystemDots(name));
}
exports.getNameFromFilePath = getNameFromFilePath;
function getContextKey(name) {
  var normal = '/' + getNameFromFilePath(name);
  if (!normal.endsWith('_layout')) {
    return normal;
  }
  return normal.replace(/\/?_layout$/, '');
}
exports.getContextKey = getContextKey;
function removeSupportedExtensions(name) {
  return name.replace(/(\+api)?\.[jt]sx?$/g, '');
}
exports.removeSupportedExtensions = removeSupportedExtensions;
function removeFileSystemDots(filePath) {
  return filePath.replace(/^(?:\.\.?\/)+/g, '');
}
exports.removeFileSystemDots = removeFileSystemDots;
function stripGroupSegmentsFromPath(path) {
  return path.split('/').reduce(function (acc, v) {
    if (matchGroupName(v) == null) {
      acc.push(v);
    }
    return acc;
  }, []).join('/');
}
exports.stripGroupSegmentsFromPath = stripGroupSegmentsFromPath;
function stripInvisibleSegmentsFromPath(path) {
  return stripGroupSegmentsFromPath(path).replace(/\/?index$/, '');
}
exports.stripInvisibleSegmentsFromPath = stripInvisibleSegmentsFromPath;
function isTypedRoute(name) {
  return !name.startsWith('+') && name.match(/(_layout|[^/]*?\+[^/]*?)\.[tj]sx?$/) === null;
}
exports.isTypedRoute = isTypedRoute;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtYXRjaER5bmFtaWNOYW1lIiwibmFtZSIsIl9uYW1lJG1hdGNoIiwibWF0Y2giLCJleHBvcnRzIiwibWF0Y2hEZWVwRHluYW1pY1JvdXRlTmFtZSIsIl9uYW1lJG1hdGNoMiIsInRlc3ROb3RGb3VuZCIsInRlc3QiLCJtYXRjaEdyb3VwTmFtZSIsIl9uYW1lJG1hdGNoMyIsIm1hdGNoTGFzdEdyb3VwTmFtZSIsIl9uYW1lJG1hdGNoNCIsIm1hdGNoQXJyYXlHcm91cE5hbWUiLCJfbmFtZSRtYXRjaDUiLCJnZXROYW1lRnJvbUZpbGVQYXRoIiwicmVtb3ZlU3VwcG9ydGVkRXh0ZW5zaW9ucyIsInJlbW92ZUZpbGVTeXN0ZW1Eb3RzIiwiZ2V0Q29udGV4dEtleSIsIm5vcm1hbCIsImVuZHNXaXRoIiwicmVwbGFjZSIsImZpbGVQYXRoIiwic3RyaXBHcm91cFNlZ21lbnRzRnJvbVBhdGgiLCJwYXRoIiwic3BsaXQiLCJyZWR1Y2UiLCJhY2MiLCJ2IiwicHVzaCIsImpvaW4iLCJzdHJpcEludmlzaWJsZVNlZ21lbnRzRnJvbVBhdGgiLCJpc1R5cGVkUm91dGUiLCJzdGFydHNXaXRoIl0sInNvdXJjZXMiOlsiLi4vc3JjL21hdGNoZXJzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogTWF0Y2ggYFtwYWdlXWAgLT4gYHBhZ2VgICovXG5leHBvcnQgZnVuY3Rpb24gbWF0Y2hEeW5hbWljTmFtZShuYW1lOiBzdHJpbmcpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICAvLyBEb24ndCBtYXRjaCBgLi4uYCBvciBgW2Agb3IgYF1gIGluc2lkZSB0aGUgYnJhY2tldHNcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZWxlc3MtZXNjYXBlXG4gIHJldHVybiBuYW1lLm1hdGNoKC9eXFxbKFteW1xcXSg/OlxcLlxcLlxcLildKz8pXFxdJC8pPy5bMV07XG59XG5cbi8qKiBNYXRjaCBgWy4uLnBhZ2VdYCAtPiBgcGFnZWAgKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXRjaERlZXBEeW5hbWljUm91dGVOYW1lKG5hbWU6IHN0cmluZyk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gIHJldHVybiBuYW1lLm1hdGNoKC9eXFxbXFwuXFwuXFwuKFteL10rPylcXF0kLyk/LlsxXTtcbn1cblxuLyoqIFRlc3QgYC9gIC0+IGBwYWdlYCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRlc3ROb3RGb3VuZChuYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgcmV0dXJuIC9cXCtub3QtZm91bmQkLy50ZXN0KG5hbWUpO1xufVxuXG4vKiogTWF0Y2ggYChwYWdlKWAgLT4gYHBhZ2VgICovXG5leHBvcnQgZnVuY3Rpb24gbWF0Y2hHcm91cE5hbWUobmFtZTogc3RyaW5nKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgcmV0dXJuIG5hbWUubWF0Y2goL14oPzpbXlxcXFwoXFxcXCldKSo/XFwoKFteXFxcXC9dKylcXCkuKj8kLyk/LlsxXTtcbn1cblxuLyoqIE1hdGNoIGAoYXBwKS8ocGFnZSlgIC0+IGBwYWdlYCAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hdGNoTGFzdEdyb3VwTmFtZShuYW1lOiBzdHJpbmcpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICByZXR1cm4gbmFtZS5tYXRjaCgvLiooPzpcXC98XilcXCgoW15cXFxcL1xcc10rKVxcKVteXFxzXSokLyk/LlsxXTtcbn1cblxuLyoqIE1hdGNoIHRoZSBmaXJzdCBhcnJheSBncm91cCBuYW1lIGAoYSxiLGMpLyhkLGMpYCAtPiBgJ2EsYixjJ2AgKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXRjaEFycmF5R3JvdXBOYW1lKG5hbWU6IHN0cmluZykge1xuICByZXR1cm4gbmFtZS5tYXRjaCgvKD86W15cXFxcKFxcXFwpXSkqP1xcKChbXlxcXFwvXSssW15cXFxcL10rKVxcKS4qPyQvKT8uWzFdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TmFtZUZyb21GaWxlUGF0aChuYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gcmVtb3ZlU3VwcG9ydGVkRXh0ZW5zaW9ucyhyZW1vdmVGaWxlU3lzdGVtRG90cyhuYW1lKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb250ZXh0S2V5KG5hbWU6IHN0cmluZyk6IHN0cmluZyB7XG4gIC8vIFRoZSByb290IHBhdGggaXMgYGAgKGVtcHR5IHN0cmluZykgc28gYWx3YXlzIHByZXBlbmQgYC9gIHRvIGVuc3VyZVxuICAvLyB0aGVyZSBpcyBzb21lIHZhbHVlLlxuICBjb25zdCBub3JtYWwgPSAnLycgKyBnZXROYW1lRnJvbUZpbGVQYXRoKG5hbWUpO1xuICBpZiAoIW5vcm1hbC5lbmRzV2l0aCgnX2xheW91dCcpKSB7XG4gICAgcmV0dXJuIG5vcm1hbDtcbiAgfVxuICByZXR1cm4gbm9ybWFsLnJlcGxhY2UoL1xcLz9fbGF5b3V0JC8sICcnKTtcbn1cblxuLyoqIFJlbW92ZSBgLmpzYCwgYC50c2AsIGAuanN4YCwgYC50c3hgICovXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlU3VwcG9ydGVkRXh0ZW5zaW9ucyhuYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gbmFtZS5yZXBsYWNlKC8oXFwrYXBpKT9cXC5banRdc3g/JC9nLCAnJyk7XG59XG5cbi8vIFJlbW92ZSBhbnkgYW1vdW50IG9mIGAuL2AgYW5kIGAuLi9gIGZyb20gdGhlIHN0YXJ0IG9mIHRoZSBzdHJpbmdcbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVGaWxlU3lzdGVtRG90cyhmaWxlUGF0aDogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIGZpbGVQYXRoLnJlcGxhY2UoL14oPzpcXC5cXC4/XFwvKSsvZywgJycpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaXBHcm91cFNlZ21lbnRzRnJvbVBhdGgocGF0aDogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIHBhdGhcbiAgICAuc3BsaXQoJy8nKVxuICAgIC5yZWR1Y2UoKGFjYywgdikgPT4ge1xuICAgICAgaWYgKG1hdGNoR3JvdXBOYW1lKHYpID09IG51bGwpIHtcbiAgICAgICAgYWNjLnB1c2godik7XG4gICAgICB9XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIFtdIGFzIHN0cmluZ1tdKVxuICAgIC5qb2luKCcvJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdHJpcEludmlzaWJsZVNlZ21lbnRzRnJvbVBhdGgocGF0aDogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIHN0cmlwR3JvdXBTZWdtZW50c0Zyb21QYXRoKHBhdGgpLnJlcGxhY2UoL1xcLz9pbmRleCQvLCAnJyk7XG59XG5cbi8qKlxuICogTWF0Y2g6XG4gKiAgLSBfbGF5b3V0IGZpbGVzLCAraHRtbCwgK25vdC1mb3VuZCwgc3RyaW5nK2FwaSwgZXRjXG4gKiAgLSBSb3V0ZXMgY2FuIHN0aWxsIHVzZSBgK2AsIGJ1dCBpdCBjYW5ub3QgYmUgaW4gdGhlIGxhc3Qgc2VnbWVudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVHlwZWRSb3V0ZShuYW1lOiBzdHJpbmcpIHtcbiAgcmV0dXJuICFuYW1lLnN0YXJ0c1dpdGgoJysnKSAmJiBuYW1lLm1hdGNoKC8oX2xheW91dHxbXi9dKj9cXCtbXi9dKj8pXFwuW3RqXXN4PyQvKSA9PT0gbnVsbDtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsU0FBZ0JBLGdCQUFnQkEsQ0FBQ0MsSUFBWTtFQUFBLElBQUFDLFdBQUE7RUFHM0MsUUFBQUEsV0FBQSxHQUFPRCxJQUFJLENBQUNFLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxxQkFBeENELFdBQUEsQ0FBMkMsQ0FBQyxDQUFDO0FBQ3REO0FBSkFFLE9BQUEsQ0FBQUosZ0JBQUEsR0FBQUEsZ0JBQUE7QUFPQSxTQUFnQksseUJBQXlCQSxDQUFDSixJQUFZO0VBQUEsSUFBQUssWUFBQTtFQUNwRCxRQUFBQSxZQUFBLEdBQU9MLElBQUksQ0FBQ0UsS0FBSyxDQUFDLHNCQUFzQixDQUFDLHFCQUFsQ0csWUFBQSxDQUFxQyxDQUFDLENBQUM7QUFDaEQ7QUFGQUYsT0FBQSxDQUFBQyx5QkFBQSxHQUFB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