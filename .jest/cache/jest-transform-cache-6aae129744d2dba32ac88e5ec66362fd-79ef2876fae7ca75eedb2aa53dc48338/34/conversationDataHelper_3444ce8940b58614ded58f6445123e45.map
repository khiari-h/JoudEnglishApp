{"version":3,"names":["_A","_interopRequireDefault","require","_A2","_B","_B2","_C","_C2","cov_uf420zrio","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","getConversationData","exports","level","dataMap","A1","exercises","ConversationA1","A2","ConversationA2","B1","ConversationB1","B2","ConversationB2","C1","ConversationC1","C2","ConversationC2","getLevelColor","colors","getConversationScenariosCount","data","length","getTotalStepsCount","reduce","total","scenario","steps","getConversationLevelStats","scenarios","totalSteps","averageStepsPerScenario","totalScenarios"],"sources":["conversationDataHelper.js"],"sourcesContent":["// utils/Conversation/ConversationDataHelper.js\n\n// Import des données de Conversation par niveau\nimport ConversationA1 from \"../../data/conversation/A1\";\nimport ConversationA2 from \"../../data/conversation/A2\";\nimport ConversationB1 from \"../../data/conversation/B1\";\nimport ConversationB2 from \"../../data/conversation/B2\";\nimport ConversationC1 from  \"../../data/conversation/C1\";\nimport ConversationC2 from  \"../../data/conversation/C2\";\n\n// Note: Le composant attend une structure { exercises: [...] }\n// Nous devons adapter les données pour correspondre à ce format\n\n/**\n * Récupère les données de scénarios de Conversation en fonction du niveau\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {Object} Les données de Conversation pour le niveau spécifié\n */\nexport const getConversationData = (level) => {\n  const dataMap = {\n    A1: {\n      exercises: ConversationA1, // ConversationA1 est déjà un tableau de scénarios\n    },\n    A2: {\n      exercises: ConversationA2,\n    },\n    B1: {\n      exercises: ConversationB1,\n    },\n    B2: {\n      exercises: ConversationB2,\n    },\n     C1: {\n      exercises: ConversationC1,\n    },\n     C2: {\n      exercises: ConversationC2,\n    },\n\n  };\n\n  return dataMap[level] || dataMap.A1; // Par défaut, retourne A1 si le niveau n'existe pas\n};\n\n/**\n * Récupère la couleur associée à un niveau de langue\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {string} Code couleur hexadécimal pour le niveau\n */\nexport const getLevelColor = (level) => {\n  const colors = {\n    A1: \"#3b82f6\", // Bleu\n    A2: \"#8b5cf6\", // Violet\n    B1: \"#10b981\", // Vert\n    B2: \"#f59e0b\", // Orange\n    C1: \"#ef4444\", // Rouge\n    C2: \"#6366f1\", // Indigo\n  };\n  return colors[level] || \"#4361EE\"; // Couleur par défaut\n};\n\n/**\n * Récupère le nombre total de scénarios pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {number} Nombre total de scénarios\n */\nexport const getConversationScenariosCount = (level) => {\n  const data = getConversationData(level);\n  return data.exercises ? data.exercises.length : 0;\n};\n\n/**\n * Récupère le nombre total d'étapes pour tous les scénarios d'un niveau\n * @param {string} level - Le niveau de langue\n * @returns {number} Nombre total d'étapes\n */\nexport const getTotalStepsCount = (level) => {\n  const data = getConversationData(level);\n  if (!data.exercises) return 0;\n\n  return data.exercises.reduce((total, scenario) => {\n    return total + (scenario.steps ? scenario.steps.length : 0);\n  }, 0);\n};\n\n/**\n * Récupère les statistiques complètes pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {Object} Statistiques du niveau\n */\nexport const getConversationLevelStats = (level) => {\n  const data = getConversationData(level);\n\n  if (!data.exercises)\n    return {\n      scenarios: 0,\n      totalSteps: 0,\n      averageStepsPerScenario: 0,\n    };\n\n  const totalScenarios = data.exercises.length;\n  const totalSteps = getTotalStepsCount(level);\n\n  return {\n    scenarios: totalScenarios,\n    totalSteps,\n    averageStepsPerScenario:\n      totalScenarios > 0 ? totalSteps / totalScenarios : 0,\n  };\n};\n\n"],"mappings":"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","ignoreList":[]}