{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","emit","fn","STORAGE_KEYS","LAST_ACTIVITY","_interopRequireDefault","require","_asyncToGenerator2","_reactNative","_asyncStorage","_useLastActivity","_eventBus","_require","describe","FIXED_NOW_TIMESTAMP","errorSpy","warnSpy","beforeEach","clearAllMocks","spyOn","Date","mockReturnValue","console","mockImplementation","afterEach","restoreAllMocks","it","default","AsyncStorage","getItem","mockResolvedValue","_renderHook","renderHook","useLastActivity","result","waitFor","expect","current","isLoading","toBe","lastActivity","toBeNull","toHaveBeenCalledWith","mockActivity","type","timestamp","JSON","stringify","_renderHook2","toBeDefined","timeElapsed","mockRejectedValue","Error","_renderHook3","any","_renderHook4","_renderHook5","_renderHook6","_renderHook7","act","saveActivity","score","setItem","eventBus","_renderHook8","_renderHook9","mockImplementationOnce","mockResolvedValueOnce","removeItem","_renderHook0","not","clearActivity","_renderHook1","_renderHook10","reload"],"sources":["useLastActivity.test.js"],"sourcesContent":["// __tests__/hooks/useLastActivity.test.js\n\nimport { renderHook, act, waitFor } from '@testing-library/react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\njest.mock('../../src/utils/eventBus', () => ({\n  ...jest.requireActual('../../src/utils/eventBus'),\n  emit: jest.fn(),\n}));\n\njest.mock('@react-native-async-storage/async-storage');\njest.mock('../../src/utils/constants', () => ({\n  STORAGE_KEYS: {\n    LAST_ACTIVITY: 'last_activity'\n  }\n}));\n\nimport useLastActivity from '../../src/hooks/useLastActivity';\nimport eventBus from '../../src/utils/eventBus';\n\n// ---\n\ndescribe('useLastActivity', () => {\n  const FIXED_NOW_TIMESTAMP = 1640995200000;\n  \n  let errorSpy;\n  let warnSpy;\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    jest.spyOn(Date, 'now').mockReturnValue(FIXED_NOW_TIMESTAMP);\n    \n    errorSpy = jest.spyOn(console, 'error').mockImplementation(() => {});\n    warnSpy = jest.spyOn(console, 'warn').mockImplementation(() => {});\n  });\n\n  afterEach(() => {\n    jest.restoreAllMocks();\n  });\n\n  // =================== TESTS DE CHARGEMENT ===================\n\n  it('devrait initialiser avec null si aucune donnée n\\'est trouvée', async () => {\n    AsyncStorage.getItem.mockResolvedValue(null);\n    const { result } = renderHook(() => useLastActivity());\n\n    await waitFor(() => expect(result.current.isLoading).toBe(false));\n\n    expect(result.current.lastActivity).toBeNull();\n    expect(AsyncStorage.getItem).toHaveBeenCalledWith('last_activity');\n  });\n\n  it('devrait charger une activit existante', async () => {\n    const mockActivity = { type: 'vocabulary', timestamp: FIXED_NOW_TIMESTAMP - 300000 };\n    AsyncStorage.getItem.mockResolvedValue(JSON.stringify(mockActivity));\n\n    const { result } = renderHook(() => useLastActivity());\n\n    await waitFor(() => {\n      expect(result.current.isLoading).toBe(false);\n      expect(result.current.lastActivity).toBeDefined();\n      expect(result.current.lastActivity.type).toBe('vocabulary');\n      expect(result.current.lastActivity.timeElapsed).toBe('Il y a 5 min');\n    });\n  });\n\n  it('devrait réinitialiser l\\'activité en cas d\\'erreur de chargement', async () => {\n    AsyncStorage.getItem.mockRejectedValue(new Error('Erreur de lecture'));\n    const { result } = renderHook(() => useLastActivity());\n\n    await waitFor(() => expect(result.current.isLoading).toBe(false));\n\n    expect(result.current.lastActivity).toBeNull();\n    expect(errorSpy).toHaveBeenCalledWith(\n      'Erreur chargement dernière activité:',\n      expect.any(Error)\n    );\n  });\n\n  // =================== TESTS DE LOGIQUE DE TEMPS ÉCOULÉ ===================\n\n  it('devrait afficher \"À l\\'instant\" si l\\'activité a lieu maintenant', async () => {\n    const mockActivity = { type: 'vocabulary', timestamp: FIXED_NOW_TIMESTAMP };\n    AsyncStorage.getItem.mockResolvedValue(JSON.stringify(mockActivity));\n\n    const { result } = renderHook(() => useLastActivity());\n    await waitFor(() => expect(result.current.isLoading).toBe(false));\n\n    expect(result.current.lastActivity.timeElapsed).toBe(\"À l'instant\");\n  });\n\n  it('devrait afficher le temps en heures', async () => {\n    const mockActivity = { type: 'vocabulary', timestamp: FIXED_NOW_TIMESTAMP - (90 * 60 * 1000) };\n    AsyncStorage.getItem.mockResolvedValue(JSON.stringify(mockActivity));\n\n    const { result } = renderHook(() => useLastActivity());\n    await waitFor(() => expect(result.current.isLoading).toBe(false));\n\n    expect(result.current.lastActivity.timeElapsed).toBe('Il y a 1h');\n  });\n\n  it('devrait afficher le temps en jours', async () => {\n    const mockActivity = { type: 'vocabulary', timestamp: FIXED_NOW_TIMESTAMP - (1500 * 60 * 1000) };\n    AsyncStorage.getItem.mockResolvedValue(JSON.stringify(mockActivity));\n\n    const { result } = renderHook(() => useLastActivity());\n    await waitFor(() => expect(result.current.isLoading).toBe(false));\n\n    expect(result.current.lastActivity.timeElapsed).toBe('Il y a 1j');\n  });\n\n  // =================== TESTS DE SAUVEGARDE ET SUPPRESSION ===================\n\n  it('devrait sauvegarder une nouvelle activité et mettre à jour l\\'état local', async () => {\n    AsyncStorage.getItem.mockResolvedValue(null);\n    const { result } = renderHook(() => useLastActivity());\n    await waitFor(() => expect(result.current.isLoading).toBe(false));\n\n    await act(async () => {\n      await result.current.saveActivity({ type: 'grammar', score: 85 });\n    });\n\n    expect(AsyncStorage.setItem).toHaveBeenCalledWith(\n      'last_activity',\n      JSON.stringify({ type: 'grammar', score: 85, timestamp: FIXED_NOW_TIMESTAMP })\n    );\n    expect(result.current.lastActivity.timeElapsed).toBe(\"À l'instant\");\n    expect(eventBus.emit).toHaveBeenCalledWith('progress-updated', expect.any(Object));\n  });\n\n  it('devrait gérer les erreurs de sauvegarde sans planter', async () => {\n    AsyncStorage.setItem.mockRejectedValue(new Error('Erreur de sauvegarde'));\n    const { result } = renderHook(() => useLastActivity());\n    await waitFor(() => expect(result.current.isLoading).toBe(false));\n\n    await act(async () => {\n      await result.current.saveActivity({ type: 'test' });\n    });\n\n    expect(errorSpy).toHaveBeenCalledWith('Erreur sauvegarde activité:', expect.any(Error));\n  });\n\nit('devrait gérer les erreurs de bus d\\'événements sans planter', async () => {\n  AsyncStorage.getItem.mockResolvedValue(null);\n  AsyncStorage.setItem.mockResolvedValue(); // <-- Important : pas d'erreur ici\n  const { result } = renderHook(() => useLastActivity());\n  await waitFor(() => expect(result.current.isLoading).toBe(false));\n\n  // Mock l'erreur uniquement sur eventBus.emit\n  eventBus.emit.mockImplementationOnce(() => { throw new Error('Erreur bus'); });\n\n  await act(async () => {\n    await result.current.saveActivity({ type: 'test' });\n  });\n\n  expect(warnSpy).toHaveBeenCalledWith('Event bus error (non-critical):', expect.any(Error));\n  expect(result.current.lastActivity.type).toBe('test');\n});\n\n\n  it('devrait supprimer une activité', async () => {\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify({ type: 'existing', timestamp: 123 }));\n    AsyncStorage.removeItem.mockResolvedValue();\n    const { result } = renderHook(() => useLastActivity());\n    await waitFor(() => expect(result.current.isLoading).toBe(false));\n    expect(result.current.lastActivity).not.toBeNull();\n\n    await act(async () => {\n      await result.current.clearActivity();\n    });\n\n    expect(AsyncStorage.removeItem).toHaveBeenCalledWith('last_activity');\n    expect(result.current.lastActivity).toBeNull();\n  });\n\n  it('devrait gérer les erreurs de suppression sans planter', async () => {\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify({ type: 'existing', timestamp: 123 }));\n    AsyncStorage.removeItem.mockRejectedValue(new Error('Erreur de suppression'));\n    const { result } = renderHook(() => useLastActivity());\n    await waitFor(() => expect(result.current.isLoading).toBe(false));\n\n    await act(async () => {\n      await result.current.clearActivity();\n    });\n\n    expect(errorSpy).toHaveBeenCalledWith('Erreur suppression activité:', expect.any(Error));\n    expect(result.current.lastActivity).not.toBeNull();\n  });\n\n  // =================== AUTRES TESTS ===================\n\n  it('devrait avoir toutes les fonctions nécessaires', () => {\n    AsyncStorage.getItem.mockResolvedValue(null);\n    const { result } = renderHook(() => useLastActivity());\n\n    expect(typeof result.current.saveActivity).toBe('function');\n    expect(typeof result.current.clearActivity).toBe('function');\n    expect(typeof result.current.reload).toBe('function');\n  });\n});"],"mappings":"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","ignoreList":[]}