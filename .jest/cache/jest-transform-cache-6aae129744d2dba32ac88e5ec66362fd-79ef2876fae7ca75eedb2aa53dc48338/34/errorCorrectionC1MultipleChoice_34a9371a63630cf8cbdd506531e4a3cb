1f1637a7e89063fa4d730e83df51d306
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function cov_49cvhqnw9() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\C1\\categories\\errorCorrectionC1MultipleChoice.js";
  var hash = "825a7853f3fa77ef3a9bb4c618d97e5ef121e18e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\C1\\categories\\errorCorrectionC1MultipleChoice.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 40
        },
        end: {
          line: 133,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "825a7853f3fa77ef3a9bb4c618d97e5ef121e18e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_49cvhqnw9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_49cvhqnw9();
var errorCorrectionC1MultipleChoice = (cov_49cvhqnw9().s[0]++, [{
  categoryId: 1,
  type: "multiple_choice",
  text: "The implications of this research are ____ more significant than initially anticipated.",
  choices: ["considerably", "much", "far", "significantly"],
  correctChoiceIndex: 2,
  correctedText: "The implications of this research are far more significant than initially anticipated.",
  hint: "Which intensifier creates the most sophisticated emphasis?",
  explanation: "'Far more' provides elegant emphasis and creates sophisticated academic tone compared to other options."
}, {
  categoryId: 1,
  type: "multiple_choice",
  text: "_____ had the conference begun when technical difficulties started to emerge.",
  choices: ["Hardly", "Barely", "Scarcely", "No sooner"],
  correctChoiceIndex: 2,
  correctedText: "Scarcely had the conference begun when technical difficulties started to emerge.",
  hint: "Which negative adverb works with 'when' in formal inversion?",
  explanation: "'Scarcely...when' is the most formal and sophisticated construction. 'No sooner' requires 'than'."
}, {
  categoryId: 2,
  type: "multiple_choice",
  text: "The evidence is compelling; ____, we must proceed with due caution.",
  choices: ["however", "nevertheless", "nonetheless", "notwithstanding"],
  correctChoiceIndex: 1,
  correctedText: "The evidence is compelling; nevertheless, we must proceed with due caution.",
  hint: "Which connector best shows contrast while maintaining formal register?",
  explanation: "'Nevertheless' provides the most formal and emphatic contrast in this sophisticated context."
}, {
  categoryId: 2,
  type: "multiple_choice",
  text: "____ the preliminary nature of the findings, the results warrant further investigation.",
  choices: ["Despite", "Notwithstanding", "In spite of", "Regardless of"],
  correctChoiceIndex: 1,
  correctedText: "Notwithstanding the preliminary nature of the findings, the results warrant further investigation.",
  hint: "Which formal conjunction best introduces a concessive clause?",
  explanation: "'Notwithstanding' is the most formal and sophisticated way to introduce concession in academic writing."
}, {
  categoryId: 2,
  type: "multiple_choice",
  text: "The study's conclusions are valid ____ that the methodology was rigorously applied.",
  choices: ["provided", "providing", "given", "supposing"],
  correctChoiceIndex: 0,
  correctedText: "The study's conclusions are valid provided that the methodology was rigorously applied.",
  hint: "Which conditional conjunction is most appropriate for academic certainty?",
  explanation: "'Provided that' expresses conditional certainty appropriate for academic conclusions."
}, {
  categoryId: 3,
  type: "multiple_choice",
  text: "His attempt to reform the system proved to be a ____ task, requiring enormous effort with little progress.",
  choices: ["Herculean", "Sisyphean", "Promethean", "Icarian"],
  correctChoiceIndex: 1,
  correctedText: "His attempt to reform the system proved to be a Sisyphean task, requiring enormous effort with little progress.",
  hint: "Which mythological reference describes endless, futile effort?",
  explanation: "'Sisyphean' refers to endless, futile labor (from Sisyphus eternally pushing a boulder uphill)."
}, {
  categoryId: 3,
  type: "multiple_choice",
  text: "The debate revealed the ____ nature of the issue, with valid arguments on multiple sides.",
  choices: ["multifaceted", "polemic", "dialectical", "paradoxical"],
  correctChoiceIndex: 2,
  correctedText: "The debate revealed the dialectical nature of the issue, with valid arguments on multiple sides.",
  hint: "Which term best describes philosophical complexity with opposing valid viewpoints?",
  explanation: "'Dialectical' describes the philosophical process of resolving contradictions through reasoned discussion."
}, {
  categoryId: 4,
  type: "multiple_choice",
  text: "The researcher's claim lacks empirical support and thus constitutes a ____ argument.",
  choices: ["spurious", "specious", "fallacious", "sophistic"],
  correctChoiceIndex: 1,
  correctedText: "The researcher's claim lacks empirical support and thus constitutes a specious argument.",
  hint: "Which term describes an argument that appears valid but lacks proper foundation?",
  explanation: "'Specious' means superficially plausible but actually wrong - perfect for unsupported claims that seem reasonable."
}, {
  categoryId: 4,
  type: "multiple_choice",
  text: "The correlation between variables may be ____ rather than indicative of genuine causation.",
  choices: ["coincidental", "spurious", "fortuitous", "serendipitous"],
  correctChoiceIndex: 1,
  correctedText: "The correlation between variables may be spurious rather than indicative of genuine causation.",
  hint: "Which technical term describes false correlation in research?",
  explanation: "'Spurious' is the precise statistical term for correlation that appears causal but isn't."
}, {
  categoryId: 4,
  type: "multiple_choice",
  text: "The argument's weakness lies in its reliance on ____ evidence rather than empirical data.",
  choices: ["anecdotal", "circumstantial", "testimonial", "inferential"],
  correctChoiceIndex: 0,
  correctedText: "The argument's weakness lies in its reliance on anecdotal evidence rather than empirical data.",
  hint: "Which type of evidence is least reliable in academic contexts?",
  explanation: "'Anecdotal evidence' refers to informal accounts that lack scientific rigor, contrasting sharply with empirical data."
}, {
  categoryId: 5,
  type: "multiple_choice",
  text: "The author's writing style is characterized by its ____, with every word carefully chosen for maximum impact.",
  choices: ["precision", "concision", "economy", "parsimony"],
  correctChoiceIndex: 2,
  correctedText: "The author's writing style is characterized by its economy, with every word carefully chosen for maximum impact.",
  hint: "Which term best describes efficient use of language for maximum effect?",
  explanation: "'Economy' in writing refers to achieving maximum effect with minimum words - the most sophisticated description here."
}, {
  categoryId: 5,
  type: "multiple_choice",
  text: "The committee's decision was ____ by practical considerations rather than ideological preferences.",
  choices: ["motivated", "influenced", "informed", "dictated"],
  correctChoiceIndex: 2,
  correctedText: "The committee's decision was informed by practical considerations rather than ideological preferences.",
  hint: "Which verb suggests reasoned consideration without external pressure?",
  explanation: "'Informed by' suggests the decision was based on careful consideration of factors, showing sophisticated judgment."
}]);
var _default = exports.default = errorCorrectionC1MultipleChoice;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,