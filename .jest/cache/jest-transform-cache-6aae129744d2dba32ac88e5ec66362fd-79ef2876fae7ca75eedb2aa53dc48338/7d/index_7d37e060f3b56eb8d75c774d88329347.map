{"version":3,"names":["_reactNative","require","_MatchingGame","_interopRequireDefault","_CategorizationGame","_FeedbackMessage","_style","_jsxRuntime","WordGamesCard","_ref","currentGame","selectedItems","matchedItems","shuffledOptions","showFeedback","isCorrect","levelColor","fadeAnim","bounceAnim","onSelectItem","renderGameByType","type","jsx","default","game","jsxs","View","style","styles","errorContainer","children","Text","errorText","errorSubText","ScrollView","scrollView","contentContainerStyle","contentContainer","Animated","gameCardContainer","opacity","transform","scale","title","gameTitle","successMessage","failureMessage","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/screens/exercises/wordGames/WordGamesCard/index.js\r\nimport { View, Text, ScrollView, Animated } from \"react-native\";\r\nimport MatchingGame from \"../MatchingGame\";\r\nimport CategorizationGame from \"../CategorizationGame\";\r\nimport FeedbackMessage from \"../FeedbackMessage\";\r\nimport styles from \"./style\";\r\n\r\n/**\r\n * Carte principale contenant le jeu actuel\r\n * Version simplifiée - Matching et Categorization uniquement\r\n *\r\n * @param {Object} currentGame - Jeu actuel à afficher\r\n * @param {Array} selectedItems - Items sélectionnés par l'utilisateur\r\n * @param {Array} matchedItems - Items correctement appariés (pour matching)\r\n * @param {Array} shuffledOptions - Options mélangées pour le jeu\r\n * @param {boolean} showFeedback - Indique si le feedback doit être affiché\r\n * @param {boolean} isCorrect - Indique si la réponse est correcte\r\n * @param {string} levelColor - Couleur associée au niveau\r\n * @param {Object} fadeAnim - Animation de fondu\r\n * @param {Object} bounceAnim - Animation de rebond\r\n * @param {Function} onSelectItem - Fonction appelée lors de la sélection d'un item\r\n */\r\nconst WordGamesCard = ({\r\n  currentGame,\r\n  selectedItems,\r\n  matchedItems,\r\n  shuffledOptions,\r\n  showFeedback,\r\n  isCorrect,\r\n  levelColor,\r\n  fadeAnim,\r\n  bounceAnim,\r\n  onSelectItem,\r\n}) => {\r\n  // Rendu en fonction du type de jeu (seulement matching et categorization)\r\n  const renderGameByType = () => {\r\n    switch (currentGame.type) {\r\n      case \"matching\":\r\n        return (\r\n          <MatchingGame\r\n            game={currentGame}\r\n            selectedItems={selectedItems}\r\n            matchedItems={matchedItems}\r\n            shuffledOptions={shuffledOptions}\r\n            showFeedback={showFeedback}\r\n            levelColor={levelColor}\r\n            onSelectItem={onSelectItem}\r\n          />\r\n        );\r\n      case \"categorization\":\r\n        return (\r\n          <CategorizationGame\r\n            game={currentGame}\r\n            selectedItems={selectedItems}\r\n            shuffledOptions={shuffledOptions}\r\n            showFeedback={showFeedback}\r\n            levelColor={levelColor}\r\n            onSelectItem={onSelectItem}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <View style={styles.errorContainer}>\r\n            <Text style={styles.errorText}>\r\n              Unsupported game type: {currentGame.type}\r\n            </Text>\r\n            <Text style={styles.errorSubText}>\r\n              Only matching and categorization games are supported.\r\n            </Text>\r\n          </View>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      style={styles.scrollView}\r\n      contentContainerStyle={styles.contentContainer}\r\n    >\r\n      <Animated.View\r\n        style={[\r\n          styles.gameCardContainer,\r\n          {\r\n            opacity: fadeAnim,\r\n            transform: [{ scale: bounceAnim }],\r\n          },\r\n        ]}\r\n      >\r\n        {/* Titre du jeu */}\r\n        {currentGame.title && (\r\n          <Text style={styles.gameTitle}>{currentGame.title}</Text>\r\n        )}\r\n\r\n        {/* Rendu du jeu actuel */}\r\n        {renderGameByType()}\r\n\r\n        {/* Feedback après vérification */}\r\n        {showFeedback && (\r\n          <FeedbackMessage\r\n            isCorrect={isCorrect}\r\n            successMessage={currentGame.successMessage}\r\n            failureMessage={currentGame.failureMessage}\r\n            levelColor={levelColor}\r\n          />\r\n        )}\r\n      </Animated.View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default WordGamesCard;\r\n"],"mappings":"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","ignoreList":[]}