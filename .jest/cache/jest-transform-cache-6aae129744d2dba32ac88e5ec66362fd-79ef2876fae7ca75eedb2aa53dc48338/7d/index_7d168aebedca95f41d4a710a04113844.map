{"version":3,"names":["_reactNative","require","_react","_GameInstructions","_interopRequireDefault","_style","_jsxRuntime","MatchingGame","_ref","game","selectedItems","matchedItems","shuffledOptions","showFeedback","levelColor","onSelectItem","handleSelectItem","useCallback","item","index","isMatched","feedbackVisible","jsxs","View","style","styles","gameContainer","children","jsx","default","instructions","matchingContainer","map","includes","isSelected","some","selected","TouchableOpacity","matchingTile","selectedMatchingTile","borderColor","matchedTile","backgroundColor","onPress","disabled","Text","matchingText","color","hint","hintContainer","hintText","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/screens/exercises/wordGames/games/MatchingGame/index.js\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport { useCallback } from \"react\";\nimport GameInstructions from \"../GameInstructions\";\nimport styles from \"./style\";\n\n/**\n * Composant pour le jeu d'association de paires\n *\n * @param {Object} game - Données du jeu\n * @param {Array} selectedItems - Items sélectionnés par l'utilisateur\n * @param {Array} matchedItems - Items correctement appariés\n * @param {Array} shuffledOptions - Options mélangées\n * @param {boolean} showFeedback - Indique si le feedback est affiché\n * @param {string} levelColor - Couleur associée au niveau\n * @param {Function} onSelectItem - Fonction appelée lors de la sélection d'un item\n */\nconst MatchingGame = ({\n  game,\n  selectedItems,\n  matchedItems,\n  shuffledOptions,\n  showFeedback,\n  levelColor,\n  onSelectItem,\n}) => {\n  // Handler stable pour la sélection d'un item\n  const handleSelectItem = useCallback(\n    (item, index, isMatched, feedbackVisible) => () => {\n      if (!isMatched && !feedbackVisible) {\n        onSelectItem(item, index);\n      }\n    },\n    [onSelectItem]\n  );\n\n  return (\n    <View style={styles.gameContainer}>\n      <GameInstructions instructions={game.instructions} />\n\n      <View style={styles.matchingContainer}>\n        {shuffledOptions.map((item, index) => {\n          const isMatched = matchedItems.includes(item);\n          const isSelected = selectedItems.some(\n            (selected) => selected.index === index\n          );\n\n          return (\n            <TouchableOpacity\n              key={item}\n              style={[\n                styles.matchingTile,\n                isSelected && [\n                  styles.selectedMatchingTile,\n                  { borderColor: levelColor },\n                ],\n                isMatched && [\n                  styles.matchedTile,\n                  { backgroundColor: `${levelColor}20` },\n                ],\n              ]}\n              onPress={handleSelectItem(item, index, isMatched, showFeedback)}\n              disabled={isMatched || showFeedback}\n            >\n              <Text\n                style={[\n                  styles.matchingText,\n                  isMatched && { color: levelColor },\n                ]}\n              >\n                {item}\n              </Text>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n\n      {game.hint && (\n        <View style={styles.hintContainer}>\n          <Text style={styles.hintText}>Hint: {game.hint}</Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default MatchingGame;\n\n"],"mappings":"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","ignoreList":[]}