5ecd93ca43d3e027d8bf87a5c3946291
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _QuizHeader = _interopRequireDefault(require("./QuizHeader.js"));
var _QuizContent = _interopRequireDefault(require("./QuizContent"));
var _jsxRuntime = require("react/jsx-runtime");
var ProgressBar = function ProgressBar(_ref) {
  var progress = _ref.progress,
    colors = _ref.colors,
    localStyles = _ref.localStyles;
  var displayProgress = !progress || isNaN(progress) ? 0 : Math.round(progress);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: localStyles.progressSection,
    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
      style: [localStyles.progressTrack, {
        backgroundColor: '#F3F4F6'
      }],
      children: (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: [localStyles.progressBarQuiz, {
          backgroundColor: colors.primary,
          width: `${displayProgress}%`
        }]
      })
    }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
      style: [localStyles.progressText, {
        color: colors.textSecondary
      }],
      children: [displayProgress, "%"]
    })]
  });
};
var QuizScreen = function QuizScreen(_ref2) {
  var quizEngine = _ref2.quizEngine,
    onGoBack = _ref2.onGoBack,
    onAnswer = _ref2.onAnswer,
    onContinue = _ref2.onContinue,
    slideAnim = _ref2.slideAnim,
    shakeAnim = _ref2.shakeAnim,
    colors = _ref2.colors,
    localStyles = _ref2.localStyles;
  var currentIndex = quizEngine.currentQuestionIndex,
    totalQuestions = quizEngine.totalQuestions,
    score = quizEngine.score,
    progress = quizEngine.progress,
    currentQuestion = quizEngine.currentQuestion,
    selectedAnswer = quizEngine.selectedChoice,
    showResult = quizEngine.showResult;
  return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [(0, _jsxRuntime.jsx)(_QuizHeader.default, {
      onGoBack: onGoBack,
      currentIndex: currentIndex,
      totalQuestions: totalQuestions,
      score: score,
      colors: colors,
      localStyles: localStyles
    }), (0, _jsxRuntime.jsx)(ProgressBar, {
      progress: progress,
      colors: colors,
      localStyles: localStyles
    }), (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {
      style: {
        flex: 1,
        transform: [{
          translateX: slideAnim
        }, {
          translateX: shakeAnim
        }]
      },
      children: (0, _jsxRuntime.jsx)(_QuizContent.default, {
        currentQuestion: currentQuestion,
        selectedAnswer: selectedAnswer,
        showResult: showResult,
        handleAnswer: onAnswer,
        handleContinue: onContinue,
        colors: colors,
        localStyles: localStyles
      })
    })]
  });
};
var _default = exports.default = QuizScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9RdWl6SGVhZGVyIiwiX1F1aXpDb250ZW50IiwiX2pzeFJ1bnRpbWUiLCJQcm9ncmVzc0JhciIsIl9yZWYiLCJwcm9ncmVzcyIsImNvbG9ycyIsImxvY2FsU3R5bGVzIiwiZGlzcGxheVByb2dyZXNzIiwiaXNOYU4iLCJNYXRoIiwicm91bmQiLCJqc3hzIiwiVmlldyIsInN0eWxlIiwicHJvZ3Jlc3NTZWN0aW9uIiwiY2hpbGRyZW4iLCJqc3giLCJwcm9ncmVzc1RyYWNrIiwiYmFja2dyb3VuZENvbG9yIiwicHJvZ3Jlc3NCYXJRdWl6IiwicHJpbWFyeSIsIndpZHRoIiwiVGV4dCIsInByb2dyZXNzVGV4dCIsImNvbG9yIiwidGV4dFNlY29uZGFyeSIsIlF1aXpTY3JlZW4iLCJfcmVmMiIsInF1aXpFbmdpbmUiLCJvbkdvQmFjayIsIm9uQW5zd2VyIiwib25Db250aW51ZSIsInNsaWRlQW5pbSIsInNoYWtlQW5pbSIsImN1cnJlbnRJbmRleCIsImN1cnJlbnRRdWVzdGlvbkluZGV4IiwidG90YWxRdWVzdGlvbnMiLCJzY29yZSIsImN1cnJlbnRRdWVzdGlvbiIsInNlbGVjdGVkQW5zd2VyIiwic2VsZWN0ZWRDaG9pY2UiLCJzaG93UmVzdWx0IiwiRnJhZ21lbnQiLCJkZWZhdWx0IiwiQW5pbWF0ZWQiLCJmbGV4IiwidHJhbnNmb3JtIiwidHJhbnNsYXRlWCIsImhhbmRsZUFuc3dlciIsImhhbmRsZUNvbnRpbnVlIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiUXVpelNjcmVlbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc2NyZWVucy9Wb2NhYnVsYXJ5UmV2aXNpb24vY29tcG9uZW50cy9RdWl6U2NyZWVuLmpzXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFZpZXcsIFRleHQsIEFuaW1hdGVkIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IFF1aXpIZWFkZXIgZnJvbSAnLi9RdWl6SGVhZGVyLmpzJztcclxuaW1wb3J0IFF1aXpDb250ZW50IGZyb20gJy4vUXVpekNvbnRlbnQnO1xyXG5cclxuY29uc3QgUHJvZ3Jlc3NCYXIgPSAoeyBwcm9ncmVzcywgY29sb3JzLCBsb2NhbFN0eWxlcyB9KSA9PiB7XHJcbiAgY29uc3QgZGlzcGxheVByb2dyZXNzID0gIXByb2dyZXNzIHx8IGlzTmFOKHByb2dyZXNzKSA/IDAgOiBNYXRoLnJvdW5kKHByb2dyZXNzKTtcclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXcgc3R5bGU9e2xvY2FsU3R5bGVzLnByb2dyZXNzU2VjdGlvbn0+XHJcbiAgICAgIDxWaWV3IHN0eWxlPXtbbG9jYWxTdHlsZXMucHJvZ3Jlc3NUcmFjaywgeyBiYWNrZ3JvdW5kQ29sb3I6ICcjRjNGNEY2JyB9XX0+XHJcbiAgICAgICAgPFZpZXdcclxuICAgICAgICAgIHN0eWxlPXtbXHJcbiAgICAgICAgICAgIGxvY2FsU3R5bGVzLnByb2dyZXNzQmFyUXVpeixcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLnByaW1hcnksXHJcbiAgICAgICAgICAgICAgd2lkdGg6IGAke2Rpc3BsYXlQcm9ncmVzc30lYCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgIF19XHJcbiAgICAgICAgLz5cclxuICAgICAgPC9WaWV3PlxyXG4gICAgICA8VGV4dCBzdHlsZT17W2xvY2FsU3R5bGVzLnByb2dyZXNzVGV4dCwgeyBjb2xvcjogY29sb3JzLnRleHRTZWNvbmRhcnkgfV19PlxyXG4gICAgICAgIHtkaXNwbGF5UHJvZ3Jlc3N9JVxyXG4gICAgICA8L1RleHQ+XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmNvbnN0IFF1aXpTY3JlZW4gPSAoe1xyXG4gIHF1aXpFbmdpbmUsXHJcbiAgb25Hb0JhY2ssXHJcbiAgb25BbnN3ZXIsXHJcbiAgb25Db250aW51ZSxcclxuICBzbGlkZUFuaW0sXHJcbiAgc2hha2VBbmltLFxyXG4gIGNvbG9ycyxcclxuICBsb2NhbFN0eWxlc1xyXG59KSA9PiB7XHJcbiAgY29uc3Qge1xyXG4gICAgY3VycmVudFF1ZXN0aW9uSW5kZXg6IGN1cnJlbnRJbmRleCxcclxuICAgIHRvdGFsUXVlc3Rpb25zLFxyXG4gICAgc2NvcmUsXHJcbiAgICBwcm9ncmVzcyxcclxuICAgIGN1cnJlbnRRdWVzdGlvbixcclxuICAgIHNlbGVjdGVkQ2hvaWNlOiBzZWxlY3RlZEFuc3dlcixcclxuICAgIHNob3dSZXN1bHQsXHJcbiAgfSA9IHF1aXpFbmdpbmU7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8UXVpekhlYWRlclxyXG4gICAgICAgIG9uR29CYWNrPXtvbkdvQmFja31cclxuICAgICAgICBjdXJyZW50SW5kZXg9e2N1cnJlbnRJbmRleH1cclxuICAgICAgICB0b3RhbFF1ZXN0aW9ucz17dG90YWxRdWVzdGlvbnN9XHJcbiAgICAgICAgc2NvcmU9e3Njb3JlfVxyXG4gICAgICAgIGNvbG9ycz17Y29sb3JzfVxyXG4gICAgICAgIGxvY2FsU3R5bGVzPXtsb2NhbFN0eWxlc31cclxuICAgICAgLz5cclxuICAgICAgPFByb2dyZXNzQmFyIHByb2dyZXNzPXtwcm9ncmVzc30gY29sb3JzPXtjb2xvcnN9IGxvY2FsU3R5bGVzPXtsb2NhbFN0eWxlc30gLz5cclxuICAgICAgPEFuaW1hdGVkLlZpZXcgc3R5bGU9e3tcclxuICAgICAgICBmbGV4OiAxLFxyXG4gICAgICAgIHRyYW5zZm9ybTogW1xyXG4gICAgICAgICAgeyB0cmFuc2xhdGVYOiBzbGlkZUFuaW0gfSxcclxuICAgICAgICAgIHsgdHJhbnNsYXRlWDogc2hha2VBbmltIH1cclxuICAgICAgICBdXHJcbiAgICAgIH19PlxyXG4gICAgICAgIDxRdWl6Q29udGVudFxyXG4gICAgICAgICAgY3VycmVudFF1ZXN0aW9uPXtjdXJyZW50UXVlc3Rpb259XHJcbiAgICAgICAgICBzZWxlY3RlZEFuc3dlcj17c2VsZWN0ZWRBbnN3ZXJ9XHJcbiAgICAgICAgICBzaG93UmVzdWx0PXtzaG93UmVzdWx0fVxyXG4gICAgICAgICAgaGFuZGxlQW5zd2VyPXtvbkFuc3dlcn1cclxuICAgICAgICAgIGhhbmRsZUNvbnRpbnVlPXtvbkNvbnRpbnVlfVxyXG4gICAgICAgICAgY29sb3JzPXtjb2xvcnN9XHJcbiAgICAgICAgICBsb2NhbFN0eWxlcz17bG9jYWxTdHlsZXN9XHJcbiAgICAgICAgLz5cclxuICAgICAgPC9BbmltYXRlZC5WaWV3PlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFF1aXpTY3JlZW47Il0sIm1hcHBpbmdzIjoiOzs7OztBQUNBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLFdBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFHLFlBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUF3QyxJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFFeEMsSUFBTUssV0FBVyxHQUFHLFNBQWRBLFdBQVdBLENBQUFDLElBQUEsRUFBMEM7RUFBQSxJQUFwQ0MsUUFBUSxHQUFBRCxJQUFBLENBQVJDLFFBQVE7SUFBRUMsTUFBTSxHQUFBRixJQUFBLENBQU5FLE1BQU07SUFBRUMsV0FBVyxHQUFBSCxJQUFBLENBQVhHLFdBQVc7RUFDbEQsSUFBTUMsZUFBZSxHQUFHLENBQUNILFFBQVEsSUFBSUksS0FBSyxDQUFDSixRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUdLLElBQUksQ0FBQ0MsS0FBSyxDQUFDTixRQUFRLENBQUM7RUFDL0UsT0FDRSxJQUFBSCxXQUFBLENBQUFVLElBQUEsRUFBQ2IsWUFBQSxDQUFBYyxJQUFJO0lBQUNDLEtBQUssRUFBRVAsV0FBVyxDQUFDUSxlQUFnQjtJQUFBQyxRQUFBLEdBQ3ZDLElBQUFkLFdBQUEsQ0FBQWUsR0FBQSxFQUFDbEIsWUFBQSxDQUFBYyxJQUFJO01BQUNDLEtBQUssRUFBRSxDQUFDUCxXQUFXLENBQUNXLGFBQWEsRUFBRTtRQUFFQyxlQUFlLEVBQUU7TUFBVSxDQUFDLENBQUU7TUFBQUgsUUFBQSxFQUN2RSxJQUFBZCxXQUFBLENBQUFlLEdBQUEsRUFBQ2xCLFlBQUEsQ0FBQWMsSUFBSTtRQUNIQyxLQUFLLEVBQUUsQ0FDTFAsV0FBVyxDQUFDYSxlQUFlLEVBQzNCO1VBQ0VELGVBQWUsRUFBRWIsTUFBTSxDQUFDZSxPQUFPO1VBQy9CQyxLQUFLLEVBQUUsR0FBR2QsZUFBZTtRQUMzQixDQUFDO01BQ0QsQ0FDSDtJQUFDLENBQ0UsQ0FBQyxFQUNQLElBQUFOLFdBQUEsQ0FBQVUsSUFBQSxFQUFDYixZQUFBLENBQUF3QixJQUFJO01BQUNULEtBQUssRUFBRSxDQUFDUCxXQUFXLENBQUNpQixZQUFZLEVBQUU7UUFBRUMsS0FBSyxFQUFFbkIsTUFBTSxDQUFDb0I7TUFBYyxDQUFDLENBQUU7TUFBQVYsUUFBQSxHQUN0RVIsZUFBZSxFQUFDLEdBQ25CO0lBQUEsQ0FBTSxDQUFDO0VBQUEsQ0FDSCxDQUFDO0FBRVgsQ0FBQztBQUVELElBQU1tQixVQUFVLEdBQUcsU0FBYkEsVUFBVUEsQ0FBQUMsS0FBQSxFQVNWO0VBQUEsSUFSSkMsVUFBVSxHQUFBRCxLQUFBLENBQVZDLFVBQVU7SUFDVkMsUUFBUSxHQUFBRixLQUFBLENBQVJFLFFBQVE7SUFDUkMsUUFBUSxHQUFBSCxLQUFBLENBQVJHLFFBQVE7SUFDUkMsVUFBVSxHQUFBSixLQUFBLENBQVZJLFVBQVU7SUFDVkMsU0FBUyxHQUFBTCxLQUFBLENBQVRLLFNBQVM7SUFDVEMsU0FBUyxHQUFBTixLQUFBLENBQVRNLFNBQVM7SUFDVDVCLE1BQU0sR0FBQXNCLEtBQUEsQ0FBTnRCLE1BQU07SUFDTkMsV0FBVyxHQUFBcUIsS0FBQSxDQUFYckIsV0FBVztFQUVYLElBQ3dCNEIsWUFBWSxHQU9oQ04sVUFBVSxDQVBaTyxvQkFBb0I7SUFDcEJDLGNBQWMsR0FNWlIsVUFBVSxDQU5aUSxjQUFjO0lBQ2RDLEtBQUssR0FLSFQsVUFBVSxDQUxaUyxLQUFLO0lBQ0xqQyxRQUFRLEdBSU53QixVQUFVLENBSlp4QixRQUFRO0lBQ1JrQyxlQUFlLEdBR2JWLFVBQVUsQ0FIWlUsZUFBZTtJQUNDQyxjQUFjLEdBRTVCWCxVQUFVLENBRlpZLGNBQWM7SUFDZEMsVUFBVSxHQUNSYixVQUFVLENBRFphLFVBQVU7RUFHWixPQUNFLElBQUF4QyxXQUFBLENBQUFVLElBQUEsRUFBQVYsV0FBQSxDQUFBeUMsUUFBQTtJQUFBM0IsUUFBQSxHQUNFLElBQUFkLFdBQUEsQ0FBQWUsR0FBQSxFQUFDakIsV0FBQSxDQUFBNEMsT0FBVTtNQUNUZCxRQUFRLEVBQUVBLFFBQVM7TUFDbkJLLFlBQVksRUFBRUEsWUFBYTtNQUMzQkUsY0FBYyxFQUFFQSxjQUFlO01BQy9CQyxLQUFLLEVBQUVBLEtBQU07TUFDYmhDLE1BQU0sRUFBRUEsTUFBTztNQUNmQyxXQUFXLEVBQUVBO0lBQVksQ0FDMUIsQ0FBQyxFQUNGLElBQUFMLFdBQUEsQ0FBQWUsR0FBQSxFQUFDZCxXQUFXO01BQUNFLFFBQVEsRUFBRUEsUUFBUztNQUFDQyxNQUFNLEVBQUVBLE1BQU87TUFBQ0MsV0FBVyxFQUFFQTtJQUFZLENBQUUsQ0FBQyxFQUM3RSxJQUFBTCxXQUFBLENBQUFlLEdBQUEsRUFBQ2xCLFlBQUEsQ0FBQThDLFFBQVEsQ0FBQ2hDLElBQUk7TUFBQ0MsS0FBSyxFQUFFO1FBQ3BCZ0MsSUFBSSxFQUFFLENBQUM7UUFDUEMsU0FBUyxFQUFFLENBQ1Q7VUFBRUMsVUFBVSxFQUFFZjtRQUFVLENBQUMsRUFDekI7VUFBRWUsVUFBVSxFQUFFZDtRQUFVLENBQUM7TUFFN0IsQ0FBRTtNQUFBbEIsUUFBQSxFQUNBLElBQUFkLFdBQUEsQ0FBQWUsR0FBQSxFQUFDaEIsWUFBQSxDQUFBMkMsT0FBVztRQUNWTCxlQUFlLEVBQUVBLGVBQWdCO1FBQ2pDQyxjQUFjLEVBQUVBLGNBQWU7UUFDL0JFLFVBQVUsRUFBRUEsVUFBVztRQUN2Qk8sWUFBWSxFQUFFbEIsUUFBUztRQUN2Qm1CLGNBQWMsRUFBRWxCLFVBQVc7UUFDM0IxQixNQUFNLEVBQUVBLE1BQU87UUFDZkMsV0FBVyxFQUFFQTtNQUFZLENBQzFCO0lBQUMsQ0FDVyxDQUFDO0VBQUEsQ0FDaEIsQ0FBQztBQUVQLENBQUM7QUFBQyxJQUFBNEMsUUFBQSxHQUFBQyxPQUFBLENBQUFSLE9BQUEsR0FFYWpCLFVBQVUiLCJpZ25vcmVMaXN0IjpbXX0=