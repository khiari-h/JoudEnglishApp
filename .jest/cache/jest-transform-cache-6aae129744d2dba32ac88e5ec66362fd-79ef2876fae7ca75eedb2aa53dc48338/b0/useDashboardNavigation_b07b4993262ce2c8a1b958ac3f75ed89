19a07bd55a3c05690bbb988dc40be96e
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useDashboardNavigation;
var _react = require("react");
var _expoRouter = require("expo-router");
var _constants = require("../../../utils/constants");
function useDashboardNavigation(_ref) {
  var setCurrentLevel = _ref.setCurrentLevel,
    handleChangeActiveLevel = _ref.handleChangeActiveLevel;
  var handleContinue = (0, _react.useCallback)(function (activity) {
    if (activity === "levelSelection") {
      _expoRouter.router.push("/tabs/levelSelection");
      return;
    }
    var type = activity.type,
      level = activity.level,
      mode = activity.mode;
    var exercise = Object.values(_constants.EXERCISES).find(function (ex) {
      return ex.id === type;
    });
    if (!exercise) return;
    var params = {
      level: level
    };
    if (mode && type === "vocabulary") params.mode = mode;
    _expoRouter.router.push({
      pathname: exercise.route,
      params: params
    });
  }, []);
  var handleChangeLevelVisual = (0, _react.useCallback)(function (levelId) {
    handleChangeActiveLevel(levelId);
    setCurrentLevel(levelId);
  }, [handleChangeActiveLevel, setCurrentLevel]);
  var handleLevelSelect = (0, _react.useCallback)(function (level) {
    setCurrentLevel(level);
    _expoRouter.router.push(`/tabs/exerciseSelection?level=${level}`);
  }, [setCurrentLevel]);
  return {
    handleContinue: handleContinue,
    handleChangeLevelVisual: handleChangeLevelVisual,
    handleLevelSelect: handleLevelSelect
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX2V4cG9Sb3V0ZXIiLCJfY29uc3RhbnRzIiwidXNlRGFzaGJvYXJkTmF2aWdhdGlvbiIsIl9yZWYiLCJzZXRDdXJyZW50TGV2ZWwiLCJoYW5kbGVDaGFuZ2VBY3RpdmVMZXZlbCIsImhhbmRsZUNvbnRpbnVlIiwidXNlQ2FsbGJhY2siLCJhY3Rpdml0eSIsInJvdXRlciIsInB1c2giLCJ0eXBlIiwibGV2ZWwiLCJtb2RlIiwiZXhlcmNpc2UiLCJPYmplY3QiLCJ2YWx1ZXMiLCJFWEVSQ0lTRVMiLCJmaW5kIiwiZXgiLCJpZCIsInBhcmFtcyIsInBhdGhuYW1lIiwicm91dGUiLCJoYW5kbGVDaGFuZ2VMZXZlbFZpc3VhbCIsImxldmVsSWQiLCJoYW5kbGVMZXZlbFNlbGVjdCJdLCJzb3VyY2VzIjpbInVzZURhc2hib2FyZE5hdmlnYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3NjcmVlbnMvRGFzaGJvYXJkL2hvb2tzL3VzZURhc2hib2FyZE5hdmlnYXRpb24uanNcclxuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgcm91dGVyIH0gZnJvbSBcImV4cG8tcm91dGVyXCI7XHJcbmltcG9ydCB7IEVYRVJDSVNFUyB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9jb25zdGFudHNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZURhc2hib2FyZE5hdmlnYXRpb24oeyBzZXRDdXJyZW50TGV2ZWwsIGhhbmRsZUNoYW5nZUFjdGl2ZUxldmVsIH0pIHtcclxuICBjb25zdCBoYW5kbGVDb250aW51ZSA9IHVzZUNhbGxiYWNrKChhY3Rpdml0eSkgPT4ge1xyXG4gICAgaWYgKGFjdGl2aXR5ID09PSBcImxldmVsU2VsZWN0aW9uXCIpIHtcclxuICAgICAgcm91dGVyLnB1c2goXCIvdGFicy9sZXZlbFNlbGVjdGlvblwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHsgdHlwZSwgbGV2ZWwsIG1vZGUgfSA9IGFjdGl2aXR5O1xyXG4gICAgY29uc3QgZXhlcmNpc2UgPSBPYmplY3QudmFsdWVzKEVYRVJDSVNFUykuZmluZCgoZXgpID0+IGV4LmlkID09PSB0eXBlKTtcclxuICAgIGlmICghZXhlcmNpc2UpIHJldHVybjtcclxuXHJcbiAgICBjb25zdCBwYXJhbXMgPSB7IGxldmVsIH07XHJcbiAgICBpZiAobW9kZSAmJiB0eXBlID09PSBcInZvY2FidWxhcnlcIikgcGFyYW1zLm1vZGUgPSBtb2RlO1xyXG5cclxuICAgIHJvdXRlci5wdXNoKHsgcGF0aG5hbWU6IGV4ZXJjaXNlLnJvdXRlLCBwYXJhbXMgfSk7XHJcbiAgfSwgW10pO1xyXG5cclxuICBjb25zdCBoYW5kbGVDaGFuZ2VMZXZlbFZpc3VhbCA9IHVzZUNhbGxiYWNrKFxyXG4gICAgKGxldmVsSWQpID0+IHtcclxuICAgICAgaGFuZGxlQ2hhbmdlQWN0aXZlTGV2ZWwobGV2ZWxJZCk7XHJcbiAgICAgIHNldEN1cnJlbnRMZXZlbChsZXZlbElkKTtcclxuICAgIH0sXHJcbiAgICBbaGFuZGxlQ2hhbmdlQWN0aXZlTGV2ZWwsIHNldEN1cnJlbnRMZXZlbF1cclxuICApO1xyXG5cclxuICBjb25zdCBoYW5kbGVMZXZlbFNlbGVjdCA9IHVzZUNhbGxiYWNrKFxyXG4gICAgKGxldmVsKSA9PiB7XHJcbiAgICAgIHNldEN1cnJlbnRMZXZlbChsZXZlbCk7XHJcbiAgICAgIHJvdXRlci5wdXNoKGAvdGFicy9leGVyY2lzZVNlbGVjdGlvbj9sZXZlbD0ke2xldmVsfWApO1xyXG4gICAgfSxcclxuICAgIFtzZXRDdXJyZW50TGV2ZWxdXHJcbiAgKTtcclxuXHJcbiAgcmV0dXJuIHsgaGFuZGxlQ29udGludWUsIGhhbmRsZUNoYW5nZUxldmVsVmlzdWFsLCBoYW5kbGVMZXZlbFNlbGVjdCB9O1xyXG59XHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsV0FBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsVUFBQSxHQUFBRixPQUFBO0FBRWUsU0FBU0csc0JBQXNCQSxDQUFBQyxJQUFBLEVBQStDO0VBQUEsSUFBNUNDLGVBQWUsR0FBQUQsSUFBQSxDQUFmQyxlQUFlO0lBQUVDLHVCQUF1QixHQUFBRixJQUFBLENBQXZCRSx1QkFBdUI7RUFDdkYsSUFBTUMsY0FBYyxHQUFHLElBQUFDLGtCQUFXLEVBQUMsVUFBQ0MsUUFBUSxFQUFLO0lBQy9DLElBQUlBLFFBQVEsS0FBSyxnQkFBZ0IsRUFBRTtNQUNqQ0Msa0JBQU0sQ0FBQ0MsSUFBSSxDQUFDLHNCQUFzQixDQUFDO01BQ25DO0lBQ0Y7SUFFQSxJQUFRQyxJQUFJLEdBQWtCSCxRQUFRLENBQTlCRyxJQUFJO01BQUVDLEtBQUssR0FBV0osUUFBUSxDQUF4QkksS0FBSztNQUFFQyxJQUFJLEdBQUtMLFFBQVEsQ0FBakJLLElBQUk7SUFDekIsSUFBTUMsUUFBUSxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ0Msb0JBQVMsQ0FBQyxDQUFDQyxJQUFJLENBQUMsVUFBQ0MsRUFBRTtNQUFBLE9BQUtBLEVBQUUsQ0FBQ0MsRUFBRSxLQUFLVCxJQUFJO0lBQUEsRUFBQztJQUN0RSxJQUFJLENBQUNHLFFBQVEsRUFBRTtJQUVmLElBQU1PLE1BQU0sR0FBRztNQUFFVCxLQUFLLEVBQUxBO0lBQU0sQ0FBQztJQUN4QixJQUFJQyxJQUFJLElBQUlGLElBQUksS0FBSyxZQUFZLEVBQUVVLE1BQU0sQ0FBQ1IsSUFBSSxHQUFHQSxJQUFJO0lBRXJESixrQkFBTSxDQUFDQyxJQUFJLENBQUM7TUFBRVksUUFBUSxFQUFFUixRQUFRLENBQUNTLEtBQUs7TUFBRUYsTUFBTSxFQUFOQTtJQUFPLENBQUMsQ0FBQztFQUNuRCxDQUFDLEVBQUUsRUFBRSxDQUFDO0VBRU4sSUFBTUcsdUJBQXVCLEdBQUcsSUFBQWpCLGtCQUFXLEVBQ3pDLFVBQUNrQixPQUFPLEVBQUs7SUFDWHBCLHVCQUF1QixDQUFDb0IsT0FBTyxDQUFDO0lBQ2hDckIsZUFBZSxDQUFDcUIsT0FBTyxDQUFDO0VBQzFCLENBQUMsRUFDRCxDQUFDcEIsdUJBQXVCLEVBQUVELGVBQWUsQ0FDM0MsQ0FBQztFQUVELElBQU1zQixpQkFBaUIsR0FBRyxJQUFBbkIsa0JBQVcsRUFDbkMsVUFBQ0ssS0FBSyxFQUFLO0lBQ1RSLGVBQWUsQ0FBQ1EsS0FBSyxDQUFDO0lBQ3RCSCxrQkFBTSxDQUFDQyxJQUFJLENBQUMsaUNBQWlDRSxLQUFLLEVBQUUsQ0FBQztFQUN2RCxDQUFDLEVBQ0QsQ0FBQ1IsZUFBZSxDQUNsQixDQUFDO0VBRUQsT0FBTztJQUFFRSxjQUFjLEVBQWRBLGNBQWM7SUFBRWtCLHVCQUF1QixFQUF2QkEsdUJBQXVCO0lBQUVFLGlCQUFpQixFQUFqQkE7RUFBa0IsQ0FBQztBQUN2RSIsImlnbm9yZUxpc3QiOltdfQ==