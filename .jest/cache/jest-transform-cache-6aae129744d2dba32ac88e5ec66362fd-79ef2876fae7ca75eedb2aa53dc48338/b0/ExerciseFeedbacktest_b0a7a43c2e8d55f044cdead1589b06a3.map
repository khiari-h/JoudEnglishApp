{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ExerciseFeedback","_jsxRuntime","describe","mockOnClose","jest","fn","beforeEach","clearAllMocks","it","_render","render","jsx","default","visible","success","explanation","onClose","getByText","getByTestId","expect","toBeTruthy","_render2","_render3","fireEvent","press","toHaveBeenCalledTimes"],"sources":["ExerciseFeedback.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport ExerciseFeedback from '../../../src/components/exercise-common/ExerciseFeedback';\r\n\r\ndescribe('ExerciseFeedback component', () => {\r\n  const mockOnClose = jest.fn();\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it('renders correctly with success', () => {\r\n    const { getByText, getByTestId } = render(\r\n      <ExerciseFeedback\r\n        visible={true}\r\n        success={true}\r\n        explanation=\"Bravo, c'était la bonne réponse !\"\r\n        onClose={mockOnClose}\r\n      />\r\n    );\r\n\r\n    expect(getByText(\"Bravo, c'était la bonne réponse !\")).toBeTruthy();\r\n    expect(getByTestId('feedback-success-icon')).toBeTruthy();\r\n  });\r\n\r\n  it('renders correctly with error', () => {\r\n    const { getByText, getByTestId } = render(\r\n      <ExerciseFeedback\r\n        visible={true}\r\n        success={false}\r\n        explanation=\"Non, ce n'était pas ça.\"\r\n        onClose={mockOnClose}\r\n      />\r\n    );\r\n\r\n    expect(getByText(\"Non, ce n'était pas ça.\")).toBeTruthy();\r\n    expect(getByTestId('feedback-error-icon')).toBeTruthy();\r\n  });\r\n\r\n  it('calls onClose when pressing close button', () => {\r\n    const { getByTestId } = render(\r\n      <ExerciseFeedback\r\n        visible={true}\r\n        success={true}\r\n        explanation=\"Explication\"\r\n        onClose={mockOnClose}\r\n      />\r\n    );\r\n\r\n    fireEvent.press(getByTestId('feedback-close-button'));\r\n    expect(mockOnClose).toHaveBeenCalledTimes(1);\r\n  });\r\n});\r\n"],"mappings":";AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,iBAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAwF,IAAAG,WAAA,GAAAH,OAAA;AAExFI,QAAQ,CAAC,4BAA4B,EAAE,YAAM;EAC3C,IAAMC,WAAW,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;EAE7BC,UAAU,CAAC,YAAM;IACfF,IAAI,CAACG,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFC,EAAE,CAAC,gCAAgC,EAAE,YAAM;IACzC,IAAAC,OAAA,GAAmC,IAAAC,mBAAM,EACvC,IAAAT,WAAA,CAAAU,GAAA,EAACX,iBAAA,CAAAY,OAAgB;QACfC,OAAO,EAAE,IAAK;QACdC,OAAO,EAAE,IAAK;QACdC,WAAW,EAAC,yCAAmC;QAC/CC,OAAO,EAAEb;MAAY,CACtB,CACH,CAAC;MAPOc,SAAS,GAAAR,OAAA,CAATQ,SAAS;MAAEC,WAAW,GAAAT,OAAA,CAAXS,WAAW;IAS9BC,MAAM,CAACF,SAAS,CAAC,mCAAmC,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IACnED,MAAM,CAACD,WAAW,CAAC,uBAAuB,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC3D,CAAC,CAAC;EAEFZ,EAAE,CAAC,8BAA8B,EAAE,YAAM;IACvC,IAAAa,QAAA,GAAmC,IAAAX,mBAAM,EACvC,IAAAT,WAAA,CAAAU,GAAA,EAACX,iBAAA,CAAAY,OAAgB;QACfC,OAAO,EAAE,IAAK;QACdC,OAAO,EAAE,KAAM;QACfC,WAAW,EAAC,+BAAyB;QACrCC,OAAO,EAAEb;MAAY,CACtB,CACH,CAAC;MAPOc,SAAS,GAAAI,QAAA,CAATJ,SAAS;MAAEC,WAAW,GAAAG,QAAA,CAAXH,WAAW;IAS9BC,MAAM,CAACF,SAAS,CAAC,yBAAyB,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IACzDD,MAAM,CAACD,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EACzD,CAAC,CAAC;EAEFZ,EAAE,CAAC,0CAA0C,EAAE,YAAM;IACnD,IAAAc,QAAA,GAAwB,IAAAZ,mBAAM,EAC5B,IAAAT,WAAA,CAAAU,GAAA,EAACX,iBAAA,CAAAY,OAAgB;QACfC,OAAO,EAAE,IAAK;QACdC,OAAO,EAAE,IAAK;QACdC,WAAW,EAAC,aAAa;QACzBC,OAAO,EAAEb;MAAY,CACtB,CACH,CAAC;MAPOe,WAAW,GAAAI,QAAA,CAAXJ,WAAW;IASnBK,sBAAS,CAACC,KAAK,CAACN,WAAW,CAAC,uBAAuB,CAAC,CAAC;IACrDC,MAAM,CAAChB,WAAW,CAAC,CAACsB,qBAAqB,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}