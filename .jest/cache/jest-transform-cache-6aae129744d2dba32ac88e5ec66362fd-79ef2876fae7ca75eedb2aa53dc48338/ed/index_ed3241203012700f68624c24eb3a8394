811dc7c4ce3cc6c82b6533930a1a7884
function cov_1slk3dbb0o() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationHelpPanel\\index.js";
  var hash = "78542e0e3850ac820030110e611b14c98f1fdaef";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationHelpPanel\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "1": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "2": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "3": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 44,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 12,
            column: 31
          }
        },
        loc: {
          start: {
            line: 12,
            column: 81
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 17
          }
        }, {
          start: {
            line: 41,
            column: 21
          },
          end: {
            line: 41,
            column: 55
          }
        }],
        line: 41
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "78542e0e3850ac820030110e611b14c98f1fdaef"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1slk3dbb0o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1slk3dbb0o();
import { View, Text, TouchableOpacity } from 'react-native';
import styles from './style';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_1slk3dbb0o().s[0]++;
var ConversationHelpPanel = function ConversationHelpPanel(_ref) {
  var helpText = _ref.helpText,
    isVisible = _ref.isVisible,
    onToggle = _ref.onToggle,
    levelColor = _ref.levelColor;
  cov_1slk3dbb0o().f[0]++;
  cov_1slk3dbb0o().s[1]++;
  if (!isVisible) {
    cov_1slk3dbb0o().b[0][0]++;
    cov_1slk3dbb0o().s[2]++;
    return _jsx(TouchableOpacity, {
      style: styles.helpButton,
      onPress: onToggle,
      children: _jsx(Text, {
        style: [styles.helpButtonText, {
          color: levelColor
        }],
        children: "Show Help"
      })
    });
  } else {
    cov_1slk3dbb0o().b[0][1]++;
  }
  cov_1slk3dbb0o().s[3]++;
  return _jsxs(View, {
    style: [styles.container, {
      borderColor: `${levelColor}30`
    }],
    children: [_jsxs(View, {
      style: styles.headerContainer,
      children: [_jsx(Text, {
        style: styles.title,
        children: "Hint:"
      }), _jsx(TouchableOpacity, {
        style: styles.closeButton,
        onPress: onToggle,
        children: _jsx(Text, {
          style: [styles.closeButtonText, {
            color: levelColor
          }],
          children: "Hide"
        })
      })]
    }), _jsx(Text, {
      style: styles.helpText,
      children: (cov_1slk3dbb0o().b[1][0]++, helpText) || (cov_1slk3dbb0o().b[1][1]++, "No hint available for this step.")
    })]
  });
};
export default ConversationHelpPanel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWaWV3IiwiVGV4dCIsIlRvdWNoYWJsZU9wYWNpdHkiLCJzdHlsZXMiLCJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiY292XzFzbGszZGJiMG8iLCJzIiwiQ29udmVyc2F0aW9uSGVscFBhbmVsIiwiX3JlZiIsImhlbHBUZXh0IiwiaXNWaXNpYmxlIiwib25Ub2dnbGUiLCJsZXZlbENvbG9yIiwiZiIsImIiLCJzdHlsZSIsImhlbHBCdXR0b24iLCJvblByZXNzIiwiY2hpbGRyZW4iLCJoZWxwQnV0dG9uVGV4dCIsImNvbG9yIiwiY29udGFpbmVyIiwiYm9yZGVyQ29sb3IiLCJoZWFkZXJDb250YWluZXIiLCJ0aXRsZSIsImNsb3NlQnV0dG9uIiwiY2xvc2VCdXR0b25UZXh0Il0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmlldywgVGV4dCwgVG91Y2hhYmxlT3BhY2l0eSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZSc7XHJcblxyXG4vKipcclxuICogQ29tcG9zYW50IHF1aSBhZmZpY2hlIHVuIHBhbm5lYXUgZCdhaWRlIHBvdXIgbCd1dGlsaXNhdGV1clxyXG4gKiBcclxuICogQHBhcmFtIHtzdHJpbmd9IGhlbHBUZXh0IC0gVGV4dGUgZCdhaWRlIMOgIGFmZmljaGVyXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNWaXNpYmxlIC0gSW5kaXF1ZSBzaSBsZSBwYW5uZWF1IGVzdCB2aXNpYmxlXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IG9uVG9nZ2xlIC0gRm9uY3Rpb24gcG91ciBhZmZpY2hlci9tYXNxdWVyIGxlIHBhbm5lYXVcclxuICogQHBhcmFtIHtzdHJpbmd9IGxldmVsQ29sb3IgLSBDb3VsZXVyIGFzc29jacOpZSBhdSBuaXZlYXUgY291cmFudFxyXG4gKi9cclxuY29uc3QgQ29udmVyc2F0aW9uSGVscFBhbmVsID0gKHsgaGVscFRleHQsIGlzVmlzaWJsZSwgb25Ub2dnbGUsIGxldmVsQ29sb3IgfSkgPT4ge1xyXG4gIC8vIFNpIGxlIHBhbm5lYXUgbidlc3QgcGFzIHZpc2libGUsIGFmZmljaGVyIHNldWxlbWVudCBsZSBib3V0b25cclxuICBpZiAoIWlzVmlzaWJsZSkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPFRvdWNoYWJsZU9wYWNpdHkgXHJcbiAgICAgICAgc3R5bGU9e3N0eWxlcy5oZWxwQnV0dG9ufSBcclxuICAgICAgICBvblByZXNzPXtvblRvZ2dsZX1cclxuICAgICAgPlxyXG4gICAgICAgIDxUZXh0IHN0eWxlPXtbc3R5bGVzLmhlbHBCdXR0b25UZXh0LCB7IGNvbG9yOiBsZXZlbENvbG9yIH1dfT5cclxuICAgICAgICAgIFNob3cgSGVscFxyXG4gICAgICAgIDwvVGV4dD5cclxuICAgICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8VmlldyBzdHlsZT17W3N0eWxlcy5jb250YWluZXIsIHsgYm9yZGVyQ29sb3I6IGAke2xldmVsQ29sb3J9MzBgIH1dfT5cclxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5oZWFkZXJDb250YWluZXJ9PlxyXG4gICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGl0bGV9PkhpbnQ6PC9UZXh0PlxyXG4gICAgICAgIDxUb3VjaGFibGVPcGFjaXR5XHJcbiAgICAgICAgICBzdHlsZT17c3R5bGVzLmNsb3NlQnV0dG9ufVxyXG4gICAgICAgICAgb25QcmVzcz17b25Ub2dnbGV9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPFRleHQgc3R5bGU9e1tzdHlsZXMuY2xvc2VCdXR0b25UZXh0LCB7IGNvbG9yOiBsZXZlbENvbG9yIH1dfT5cclxuICAgICAgICAgICAgSGlkZVxyXG4gICAgICAgICAgPC9UZXh0PlxyXG4gICAgICAgIDwvVG91Y2hhYmxlT3BhY2l0eT5cclxuICAgICAgPC9WaWV3PlxyXG4gICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmhlbHBUZXh0fT5cclxuICAgICAgICB7aGVscFRleHQgfHwgXCJObyBoaW50IGF2YWlsYWJsZSBmb3IgdGhpcyBzdGVwLlwifVxyXG4gICAgICA8L1RleHQ+XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvbnZlcnNhdGlvbkhlbHBQYW5lbDtcclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsU0FBU0EsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLGdCQUFnQixRQUFRLGNBQWM7QUFDM0QsT0FBT0MsTUFBTSxNQUFNLFNBQVM7QUFBQyxTQUFBQyxHQUFBLElBQUFDLElBQUEsRUFBQUMsSUFBQSxJQUFBQyxLQUFBO0FBQUFDLGNBQUEsR0FBQUMsQ0FBQTtBQVU3QixJQUFNQyxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXFCQSxDQUFBQyxJQUFBLEVBQXNEO0VBQUEsSUFBaERDLFFBQVEsR0FBQUQsSUFBQSxDQUFSQyxRQUFRO0lBQUVDLFNBQVMsR0FBQUYsSUFBQSxDQUFURSxTQUFTO0lBQUVDLFFBQVEsR0FBQUgsSUFBQSxDQUFSRyxRQUFRO0lBQUVDLFVBQVUsR0FBQUosSUFBQSxDQUFWSSxVQUFVO0VBQUFQLGNBQUEsR0FBQVEsQ0FBQTtFQUFBUixjQUFBLEdBQUFDLENBQUE7RUFFeEUsSUFBSSxDQUFDSSxTQUFTLEVBQUU7SUFBQUwsY0FBQSxHQUFBUyxDQUFBO0lBQUFULGNBQUEsR0FBQUMsQ0FBQTtJQUNkLE9BQ0VKLElBQUEsQ0FBQ0gsZ0JBQWdCO01BQ2ZnQixLQUFLLEVBQUVmLE1BQU0sQ0FBQ2dCLFVBQVc7TUFDekJDLE9BQU8sRUFBRU4sUUFBUztNQUFBTyxRQUFBLEVBRWxCaEIsSUFBQSxDQUFDSixJQUFJO1FBQUNpQixLQUFLLEVBQUUsQ0FBQ2YsTUFBTSxDQUFDbUIsY0FBYyxFQUFFO1VBQUVDLEtBQUssRUFBRVI7UUFBVyxDQUFDLENBQUU7UUFBQU0sUUFBQSxFQUFDO01BRTdELENBQU07SUFBQyxDQUNTLENBQUM7RUFFdkIsQ0FBQztJQUFBYixjQUFBLEdBQUFTLENBQUE7RUFBQTtFQUFBVCxjQUFBLEdBQUFDLENBQUE7RUFFRCxPQUNFRixLQUFBLENBQUNQLElBQUk7SUFBQ2tCLEtBQUssRUFBRSxDQUFDZixNQUFNLENBQUNxQixTQUFTLEVBQUU7TUFBRUMsV0FBVyxFQUFFLEdBQUdWLFVBQVU7SUFBSyxDQUFDLENBQUU7SUFBQU0sUUFBQSxHQUNsRWQsS0FBQSxDQUFDUCxJQUFJO01BQUNrQixLQUFLLEVBQUVmLE1BQU0sQ0FBQ3VCLGVBQWdCO01BQUFMLFFBQUEsR0FDbENoQixJQUFBLENBQUNKLElBQUk7UUFBQ2lCLEtBQUssRUFBRWYsTUFBTSxDQUFDd0IsS0FBTTtRQUFBTixRQUFBLEVBQUM7TUFBSyxDQUFNLENBQUMsRUFDdkNoQixJQUFBLENBQUNILGdCQUFnQjtRQUNmZ0IsS0FBSyxFQUFFZixNQUFNLENBQUN5QixXQUFZO1FBQzFCUixPQUFPLEVBQUVOLFFBQVM7UUFBQU8sUUFBQSxFQUVsQmhCLElBQUEsQ0FBQ0osSUFBSTtVQUFDaUIsS0FBSyxFQUFFLENBQUNmLE1BQU0sQ0FBQzBCLGVBQWUsRUFBRTtZQUFFTixLQUFLLEVBQUVSO1VBQVcsQ0FBQyxDQUFFO1VBQUFNLFFBQUEsRUFBQztRQUU5RCxDQUFNO01BQUMsQ0FDUyxDQUFDO0lBQUEsQ0FDZixDQUFDLEVBQ1BoQixJQUFBLENBQUNKLElBQUk7TUFBQ2lCLEtBQUssRUFBRWYsTUFBTSxDQUFDUyxRQUFTO01BQUFTLFFBQUEsRUFDMUIsQ0FBQWIsY0FBQSxHQUFBUyxDQUFBLFVBQUFMLFFBQVEsTUFBQUosY0FBQSxHQUFBUyxDQUFBLFVBQUksa0NBQWtDO0lBQUEsQ0FDM0MsQ0FBQztFQUFBLENBQ0gsQ0FBQztBQUVYLENBQUM7QUFFRCxlQUFlUCxxQkFBcUIiLCJpZ25vcmVMaXN0IjpbXX0=