{"version":3,"names":["createMockAnimatedValue","initialValue","arguments","length","undefined","interpolate","jest","fn","setValue","addListener","removeListener","_value","_getJestObj","mock","RN","requireActual","Object","assign","Animated","Value","timing","mockAnimatedTiming","View","Text","TouchableOpacity","ScrollView","_require","require","LinearGradient","props","_jsxRuntime","jsx","_require2","StyleSheet","create","container","backgroundGradient","scrollView","scrollContent","categoryItemWrapper","categoryTouchable","selectedCategoryItem","selectedInner","selectedCategoryText","sparkleContainer","sparkle","categoryItem","categoryInner","categoryText","_interopRequireDefault","_react","_reactNative","_reactNative2","_CategorySelector","_require3","mockStart","start","describe","categories","id","name","beforeEach","clearAllMocks","it","_render","render","default","getByText","expect","toBeTruthy","_render2","queryByText","toBeNull","_render3","selectedCategory","onSelectCategory","_render4","fireEvent","press","toHaveBeenCalledWith","_render5","rerender","toHaveBeenCalledTimes"],"sources":["CategorySelector.test.js"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent } from '@testing-library/react-native';\nimport { Text, View } from 'react-native';\nimport CategorySelector from '../../../src/components/exercise-common/CategorySelector';\n\n// Crée des mocks pour les méthodes de l'animation\nconst mockStart = jest.fn();\nconst mockAnimatedTiming = jest.fn(() => ({\n  start: mockStart,\n}));\n\n// Mock pour Animated.Value\nconst createMockAnimatedValue = (initialValue = 0) => ({\n  interpolate: jest.fn(() => ({})),\n  setValue: jest.fn(),\n  addListener: jest.fn(),\n  removeListener: jest.fn(),\n  _value: initialValue,\n});\n\n// Remplace l'implémentation d'Animated avec des mocks\njest.mock('react-native', () => {\n  const RN = jest.requireActual('react-native');\n  return {\n    ...RN,\n    Animated: {\n      ...RN.Animated,\n      Value: jest.fn((initialValue) => createMockAnimatedValue(initialValue)),\n      timing: mockAnimatedTiming,\n    },\n    View: RN.View,\n    Text: RN.Text,\n    TouchableOpacity: RN.TouchableOpacity,\n    ScrollView: RN.ScrollView,\n  };\n});\n\n// Mock d'expo-linear-gradient\njest.mock('expo-linear-gradient', () => {\n  const { View } = require('react-native');\n  return {\n    LinearGradient: (props) => <View {...props} />,\n  };\n});\n\n// Mock du fichier de style\njest.mock('../../../src/components/exercise-common/CategorySelector/style', () => {\n  const { StyleSheet } = require('react-native');\n  return () => StyleSheet.create({\n    container: {},\n    backgroundGradient: {},\n    scrollView: {},\n    scrollContent: {},\n    categoryItemWrapper: {},\n    categoryTouchable: {},\n    selectedCategoryItem: {},\n    selectedInner: {},\n    selectedCategoryText: {},\n    sparkleContainer: {},\n    sparkle: {},\n    categoryItem: {},\n    categoryInner: {},\n    categoryText: {},\n  });\n});\n\ndescribe('CategorySelector', () => {\n  const categories = [\n    { id: '1', name: 'Grammar' },\n    { id: '2', name: 'Vocabulary' },\n    { id: '3', name: 'Reading' },\n  ];\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('should render all categories correctly with minimum props', () => {\n    const { getByText } = render(<CategorySelector categories={categories} />);\n    expect(getByText('Grammar')).toBeTruthy();\n    expect(getByText('Vocabulary')).toBeTruthy();\n    expect(getByText('Reading')).toBeTruthy();\n  });\n\n  it('should render nothing when the categories array is empty', () => {\n    const { queryByText } = render(<CategorySelector categories={[]} />);\n    expect(queryByText('Grammar')).toBeNull();\n  });\n\n  it('should display the selected category with the sparkle emoji', () => {\n    const { getByText } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory=\"1\"\n        onSelectCategory={() => {}}\n      />\n    );\n    expect(getByText('✨')).toBeTruthy();\n  });\n\n  it('should call onSelectCategory with the correct category id when a category is pressed', () => {\n    const onSelectCategory = jest.fn();\n    const { getByText } = render(\n      <CategorySelector\n        categories={categories}\n        onSelectCategory={onSelectCategory}\n      />\n    );\n    fireEvent.press(getByText('Vocabulary'));\n    expect(onSelectCategory).toHaveBeenCalledWith('2');\n  });\n\n  it('should deselect the previous category when a new one is selected and trigger two animations', () => {\n    const onSelectCategory = jest.fn();\n\n    // 1. On rend le composant avec une catégorie sélectionnée\n    const { getByText, rerender } = render(\n      <CategorySelector\n        categories={categories}\n        selectedCategory=\"1\"\n        onSelectCategory={onSelectCategory}\n      />\n    );\n\n    // 2. On simule le clic sur une autre catégorie\n    fireEvent.press(getByText('Vocabulary'));\n\n    // 3. On met à jour le composant avec le nouvel état \"sélectionné\"\n    rerender(\n      <CategorySelector\n        categories={categories}\n        selectedCategory=\"2\" // <-- C'est l'élément clé. Le test simule le changement de l'état \"selected\"\n        onSelectCategory={onSelectCategory}\n      />\n    );\n    \n    // Le test devrait maintenant passer\n    expect(mockAnimatedTiming).toHaveBeenCalledTimes(2);\n    expect(mockStart).toHaveBeenCalledTimes(2);\n  });\n});"],"mappings":"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","ignoreList":[]}