{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","PropsFilter","_classCallCheck2","_createClass2","_isSharedValue","_PlatformChecker","_WorkletEventHandler","_animation","_InlinePropManager","_utils","_reactNative","dummyListener","default","_initialStyle","key","filterNonAnimatedProps","component","_this","inputProps","props","_loop","styleProp","style","styles","flattenArray","processedStyle","map","viewDescriptors","_isFirstRender","assign","initial","initialUpdaterRun","updater","hasInlineStyles","getInlineStyle","StyleSheet","flatten","animatedProp","animatedProps","undefined","keys","forEach","initialValueKey","_animatedProp$initial","has","workletEventHandler","WorkletEventHandler","eventNames","length","eventName","listeners","isSharedValue","isChromeDebugger"],"sources":["PropsFilter.tsx"],"sourcesContent":["'use strict';\n\nimport type { StyleProps } from '../commonTypes';\nimport { isSharedValue } from '../isSharedValue';\nimport { isChromeDebugger } from '../PlatformChecker';\nimport { WorkletEventHandler } from '../WorkletEventHandler';\nimport { initialUpdaterRun } from '../animation';\nimport { hasInlineStyles, getInlineStyle } from './InlinePropManager';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  IAnimatedComponentInternal,\n  IPropsFilter,\n} from './commonTypes';\nimport { flattenArray, has } from './utils';\nimport { StyleSheet } from 'react-native';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nexport class PropsFilter implements IPropsFilter {\n  private _initialStyle = {};\n\n  public filterNonAnimatedProps(\n    component: React.Component<unknown, unknown> & IAnimatedComponentInternal\n  ): Record<string, unknown> {\n    const inputProps =\n      component.props as AnimatedComponentProps<InitialComponentProps>;\n    const props: Record<string, unknown> = {};\n    for (const key in inputProps) {\n      const value = inputProps[key];\n      if (key === 'style') {\n        const styleProp = inputProps.style;\n        const styles = flattenArray<StyleProps>(styleProp ?? []);\n        const processedStyle: StyleProps[] = styles.map((style) => {\n          if (style && style.viewDescriptors) {\n            // this is how we recognize styles returned by useAnimatedStyle\n            if (component._isFirstRender) {\n              this._initialStyle = {\n                ...style.initial.value,\n                ...this._initialStyle,\n                ...initialUpdaterRun<StyleProps>(style.initial.updater),\n              };\n            }\n            return this._initialStyle;\n          } else if (hasInlineStyles(style)) {\n            return getInlineStyle(style, component._isFirstRender);\n          } else {\n            return style;\n          }\n        });\n        props[key] = StyleSheet.flatten(processedStyle);\n      } else if (key === 'animatedProps') {\n        const animatedProp = inputProps.animatedProps as Partial<\n          AnimatedComponentProps<AnimatedProps>\n        >;\n        if (animatedProp.initial !== undefined) {\n          Object.keys(animatedProp.initial.value).forEach((initialValueKey) => {\n            props[initialValueKey] =\n              animatedProp.initial?.value[initialValueKey];\n          });\n        }\n      } else if (\n        has('workletEventHandler', value) &&\n        value.workletEventHandler instanceof WorkletEventHandler\n      ) {\n        if (value.workletEventHandler.eventNames.length > 0) {\n          value.workletEventHandler.eventNames.forEach((eventName) => {\n            props[eventName] = has('listeners', value.workletEventHandler)\n              ? (\n                  value.workletEventHandler.listeners as Record<string, unknown>\n                )[eventName]\n              : dummyListener;\n          });\n        } else {\n          props[key] = dummyListener;\n        }\n      } else if (isSharedValue(value)) {\n        if (component._isFirstRender) {\n          props[key] = value.value;\n        }\n      } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n}\n"],"mappings":"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","ignoreList":[]}