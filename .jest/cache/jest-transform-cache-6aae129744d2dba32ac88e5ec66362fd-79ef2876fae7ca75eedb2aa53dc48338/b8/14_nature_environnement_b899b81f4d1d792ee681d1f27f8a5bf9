a7dc5345b6ccc65b5e2da3c4df20e37f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vocab = void 0;
function cov_13blq766y2() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\14_nature_environnement.js";
  var hash = "6c3647fa984b7e92d14e8662c470d61778d9f505";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\vocabulary\\2\\categories\\14_nature_environnement.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 21
        },
        end: {
          line: 99,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6c3647fa984b7e92d14e8662c470d61778d9f505"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_13blq766y2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13blq766y2();
var vocab = exports.vocab = (cov_13blq766y2().s[0]++, {
  title: "Nature & Environnement",
  words: [{
    word: "mammal",
    translation: "mammifère",
    example: "Dolphins are marine mammals."
  }, {
    word: "reptile",
    translation: "reptile",
    example: "Snakes and lizards are reptiles."
  }, {
    word: "amphibian",
    translation: "amphibien",
    example: "Frogs and toads are amphibians."
  }, {
    word: "insect",
    translation: "insecte",
    example: "Bees are important insects for pollination."
  }, {
    word: "predator",
    translation: "prédateur",
    example: "Lions are predators at the top of the food chain."
  }, {
    word: "prey",
    translation: "proie",
    example: "Rabbits are prey for many different animals."
  }, {
    word: "endangered species",
    translation: "espèce menacée",
    example: "The panda is an endangered species."
  }, {
    word: "wildlife",
    translation: "faune sauvage",
    example: "Africa has incredible wildlife."
  }, {
    word: "migration",
    translation: "migration",
    example: "Many birds undergo migration in winter."
  }, {
    word: "hibernate",
    translation: "hiberner",
    example: "Bears hibernate during winter."
  }, {
    word: "herd",
    translation: "troupeau",
    example: "A herd of elephants was crossing the river."
  }, {
    word: "flock",
    translation: "volée/troupeau",
    example: "A flock of birds flew overhead."
  }, {
    word: "pack",
    translation: "meute",
    example: "Wolves hunt in packs."
  }, {
    word: "habitat",
    translation: "habitat",
    example: "The forest is a natural habitat for many species."
  }, {
    word: "tree",
    translation: "arbre",
    example: "Oak trees can live for hundreds of years."
  }, {
    word: "flower",
    translation: "fleur",
    example: "Sunflowers turn to face the sun."
  }, {
    word: "grass",
    translation: "herbe",
    example: "The grass needs cutting."
  }, {
    word: "bush",
    translation: "buisson",
    example: "There are some berries growing on that bush."
  }, {
    word: "shrub",
    translation: "arbuste",
    example: "We planted some flowering shrubs in the garden."
  }, {
    word: "weed",
    translation: "mauvaise herbe",
    example: "I spent all day pulling weeds from the garden."
  }, {
    word: "root",
    translation: "racine",
    example: "The roots of the tree go deep into the ground."
  }, {
    word: "leaf/leaves",
    translation: "feuille/feuilles",
    example: "The leaves change color in autumn."
  }, {
    word: "trunk",
    translation: "tronc",
    example: "The trunk of this tree is very thick."
  }, {
    word: "blossom",
    translation: "fleur (d'arbre)",
    example: "Cherry blossom is beautiful in spring."
  }, {
    word: "evergreen",
    translation: "à feuilles persistantes",
    example: "Pine trees are evergreen."
  }, {
    word: "deciduous",
    translation: "à feuilles caduques",
    example: "Oak is a deciduous tree that loses its leaves in autumn."
  }, {
    word: "vegetation",
    translation: "végétation",
    example: "The region has dense vegetation."
  }, {
    word: "hill",
    translation: "colline",
    example: "Their house is on top of a hill."
  }, {
    word: "valley",
    translation: "vallée",
    example: "The river flows through the valley."
  }, {
    word: "waterfall",
    translation: "cascade",
    example: "We took photos of the waterfall."
  }, {
    word: "stream",
    translation: "ruisseau",
    example: "A small stream runs through our garden."
  }, {
    word: "coast",
    translation: "côte",
    example: "They live on the west coast."
  }, {
    word: "cliff",
    translation: "falaise",
    example: "Be careful near the cliff edge."
  }, {
    word: "cave",
    translation: "grotte",
    example: "The cave contained prehistoric paintings."
  }, {
    word: "jungle",
    translation: "jungle",
    example: "The Amazon jungle is home to countless species."
  }, {
    word: "landscape",
    translation: "paysage",
    example: "The landscape is beautiful in this region."
  }, {
    word: "ecosystem",
    translation: "écosystème",
    example: "A pond is a small but complex ecosystem."
  }, {
    word: "rainforest",
    translation: "forêt tropicale",
    example: "Rainforests are being destroyed at an alarming rate."
  }, {
    word: "coral reef",
    translation: "récif de corail",
    example: "The Great Barrier Reef is the world's largest coral reef system."
  }, {
    word: "wetland",
    translation: "zone humide",
    example: "Wetlands are important habitats for many birds."
  }, {
    word: "savanna",
    translation: "savane",
    example: "Lions and giraffes live in the African savanna."
  }, {
    word: "tundra",
    translation: "toundra",
    example: "The tundra is characterized by frozen soil and low temperatures."
  }, {
    word: "grassland",
    translation: "prairie",
    example: "Bison once roamed the North American grasslands."
  }, {
    word: "woodland",
    translation: "bois",
    example: "We went for a walk in the woodland."
  }, {
    word: "biodiversity",
    translation: "biodiversité",
    example: "Protecting biodiversity is critical for our planet."
  }, {
    word: "food chain",
    translation: "chaîne alimentaire",
    example: "Every organism has a place in the food chain."
  }, {
    word: "species",
    translation: "espèce",
    example: "Many species are threatened with extinction."
  }, {
    word: "population",
    translation: "population",
    example: "The elephant population is decreasing."
  }, {
    word: "global warming",
    translation: "réchauffement climatique",
    example: "Global warming is causing sea levels to rise."
  }, {
    word: "deforestation",
    translation: "déforestation",
    example: "Deforestation is a major cause of habitat loss."
  }, {
    word: "extinction",
    translation: "extinction",
    example: "Human activities have caused the extinction of many species."
  }, {
    word: "endangered",
    translation: "en voie de disparition",
    example: "Pandas are an endangered species."
  }, {
    word: "conservation",
    translation: "conservation",
    example: "Conservation efforts are helping to protect tigers."
  }, {
    word: "recycle",
    translation: "recycler",
    example: "It's important to recycle paper and plastic."
  }, {
    word: "waste",
    translation: "déchets",
    example: "We need to reduce the amount of waste we produce."
  }, {
    word: "energy",
    translation: "énergie",
    example: "Solar energy is a renewable resource."
  }, {
    word: "resource",
    translation: "ressource",
    example: "Water is a precious resource."
  }, {
    word: "sustainable",
    translation: "durable",
    example: "We need to adopt more sustainable lifestyles."
  }, {
    word: "toxic",
    translation: "toxique",
    example: "These chemicals are toxic to aquatic life."
  }, {
    word: "ozone layer",
    translation: "couche d'ozone",
    example: "The ozone layer protects us from harmful UV radiation."
  }, {
    word: "greenhouse gas",
    translation: "gaz à effet de serre",
    example: "Carbon dioxide is a greenhouse gas."
  }, {
    word: "carbon footprint",
    translation: "empreinte carbone",
    example: "We should all try to reduce our carbon footprint."
  }, {
    word: "volcanic eruption",
    translation: "éruption volcanique",
    example: "The volcanic eruption caused flights to be canceled."
  }, {
    word: "tsunami",
    translation: "tsunami",
    example: "The earthquake triggered a tsunami."
  }, {
    word: "hurricane",
    translation: "ouragan",
    example: "The hurricane caused extensive damage to coastal areas."
  }, {
    word: "tornado",
    translation: "tornade",
    example: "Tornadoes are common in some parts of the United States."
  }, {
    word: "current",
    translation: "courant",
    example: "The river current is very strong after rain."
  }, {
    word: "wave",
    translation: "vague",
    example: "The waves were too big for swimming."
  }, {
    word: "erosion",
    translation: "érosion",
    example: "The cliff is gradually disappearing due to erosion."
  }]
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,