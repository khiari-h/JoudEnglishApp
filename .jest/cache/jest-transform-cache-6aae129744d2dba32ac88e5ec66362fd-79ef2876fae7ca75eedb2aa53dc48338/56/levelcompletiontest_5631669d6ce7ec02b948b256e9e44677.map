{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","useNavigation","navigate","fn","goBack","useRoute","params","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_layout","_ProgressContext","_AppProvider","_jsxRuntime","_require","describe","it","default","completeAllExercises","updateProgress","levels","exercises","forEach","level","exercise","TestComponent","jsx","AppProvider","children","jsxs","ProgressProvider","ProgressContext","Consumer","_ref2","testID","onPress","_render","render","getByText","findByText","getByTestId","fireEvent","press","levelA1","expect","toBeTruthy","levelA2","props","style","opacity","not","toBe"],"sources":["level-completion.test.js"],"sourcesContent":["\nimport React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport App from '../../app/_layout';\nimport { ProgressProvider, ProgressContext } from '../../src/contexts/ProgressContext';\nimport { AppProvider } from '../../src/contexts/AppProvider';\n\njest.mock('@react-navigation/native', () => ({\n  ...jest.requireActual('@react-navigation/native'),\n  useNavigation: () => ({\n    navigate: jest.fn(),\n    goBack: jest.fn(),\n  }),\n  useRoute: () => ({\n    params: {},\n  }),\n}));\n\ndescribe('Level Completion Integration Test', () => {\n  it('should unlock the next level after completing all exercises of a level', async () => {\n    // Fonction pour simuler la complétion de tous les exercices d'un niveau\n    const completeAllExercises = (updateProgress) => {\n      const levels = ['A1', 'A2', 'B1', 'B2', 'C1'];\n      const exercises = ['vocabulary', 'grammar', 'reading', 'listening', 'speaking'];\n      levels.forEach(level => {\n        exercises.forEach(exercise => {\n          updateProgress(level, exercise, 100);\n        });\n      });\n    };\n\n    const TestComponent = () => (\n      <AppProvider>\n        <ProgressProvider>\n          <ProgressContext.Consumer>\n            {({ updateProgress }) => (\n              <button\n                testID=\"complete-all\"\n                onPress={() => completeAllExercises(updateProgress)}\n              />\n            )}\n          </ProgressContext.Consumer>\n          <App />\n        </ProgressProvider>\n      </AppProvider>\n    );\n\n    const { getByText, findByText, getByTestId } = render(<TestComponent />);\n\n    // 1. Simuler la complétion de tous les exercices du niveau A1\n    fireEvent.press(getByTestId('complete-all'));\n\n    // 2. Naviguer vers la sélection de niveau\n    fireEvent.press(getByText(/Commencer l'apprentissage/i));\n\n    // 3. Vérifier que le niveau A1 est marqué comme complet\n    const levelA1 = await findByText(/Niveau A1 - Terminé/i);\n    expect(levelA1).toBeTruthy();\n\n    // 4. Vérifier que le niveau A2 est maintenant débloqué\n    const levelA2 = await findByText(/Niveau A2/i);\n    expect(levelA2).toBeTruthy();\n    expect(levelA2.props.style.opacity).not.toBe(0.5); // Supposant qu'un niveau bloqué a une opacité réduite\n  });\n});\n"],"mappings":"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","ignoreList":[]}