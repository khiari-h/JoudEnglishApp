6fe80d19b03da9b305c5630a45e0d492
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _ProgressCard = _interopRequireDefault(require("../../../../components/ui/ProgressCard"));
var _readingStats = require("../../../../utils/reading/readingStats.js");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1yux1gw934() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingProgress\\index.js";
  var hash = "41269dadc282dd196d3b192f659cb35c5e27c00b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\reading\\ReadingProgress\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 79,
          column: 1
        }
      },
      "1": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "2": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 32
        }
      },
      "3": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 32
        }
      },
      "4": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "5": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 25
        }
      },
      "6": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "7": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 42,
          column: 16
        }
      },
      "8": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 14
        }
      },
      "9": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "10": {
        start: {
          line: 51,
          column: 30
        },
        end: {
          line: 51,
          column: 64
        }
      },
      "11": {
        start: {
          line: 52,
          column: 34
        },
        end: {
          line: 52,
          column: 86
        }
      },
      "12": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 77
        }
      },
      "13": {
        start: {
          line: 54,
          column: 31
        },
        end: {
          line: 54,
          column: 87
        }
      },
      "14": {
        start: {
          line: 57,
          column: 32
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "15": {
        start: {
          line: 57,
          column: 72
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "16": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 78,
          column: 4
        }
      },
      "17": {
        start: {
          line: 82,
          column: 0
        },
        end: {
          line: 104,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 24
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 46,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 57,
            column: 57
          },
          end: {
            line: 57,
            column: 58
          }
        },
        loc: {
          start: {
            line: 57,
            column: 72
          },
          end: {
            line: 62,
            column: 3
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 21,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 21,
            column: 18
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 42,
            column: 15
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 37,
            column: 34
          }
        }, {
          start: {
            line: 38,
            column: 13
          },
          end: {
            line: 38,
            column: 30
          }
        }, {
          start: {
            line: 39,
            column: 13
          },
          end: {
            line: 39,
            column: 33
          }
        }, {
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 40,
            column: 33
          }
        }, {
          start: {
            line: 41,
            column: 13
          },
          end: {
            line: 41,
            column: 30
          }
        }, {
          start: {
            line: 42,
            column: 13
          },
          end: {
            line: 42,
            column: 15
          }
        }],
        line: 37
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "41269dadc282dd196d3b192f659cb35c5e27c00b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1yux1gw934 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1yux1gw934();
cov_1yux1gw934().s[0]++;
var ReadingProgress = function ReadingProgress(_ref) {
  var readingData = _ref.readingData,
    completedQuestions = _ref.completedQuestions,
    levelColor = _ref.levelColor,
    _ref$expanded = _ref.expanded,
    expanded = _ref$expanded === void 0 ? (cov_1yux1gw934().b[0][0]++, false) : _ref$expanded,
    onToggleExpand = _ref.onToggleExpand,
    onExercisePress = _ref.onExercisePress;
  cov_1yux1gw934().f[0]++;
  cov_1yux1gw934().s[1]++;
  var getDataArray = function getDataArray() {
    cov_1yux1gw934().f[1]++;
    cov_1yux1gw934().s[2]++;
    if (!readingData) {
      cov_1yux1gw934().b[1][0]++;
      cov_1yux1gw934().s[3]++;
      return [];
    } else {
      cov_1yux1gw934().b[1][1]++;
    }
    cov_1yux1gw934().s[4]++;
    if (Array.isArray(readingData)) {
      cov_1yux1gw934().b[2][0]++;
      cov_1yux1gw934().s[5]++;
      return readingData;
    } else {
      cov_1yux1gw934().b[2][1]++;
    }
    cov_1yux1gw934().s[6]++;
    if (typeof readingData === 'object') {
      cov_1yux1gw934().b[3][0]++;
      cov_1yux1gw934().s[7]++;
      return (cov_1yux1gw934().b[4][0]++, readingData.exercises) || (cov_1yux1gw934().b[4][1]++, readingData.texts) || (cov_1yux1gw934().b[4][2]++, readingData.passages) || (cov_1yux1gw934().b[4][3]++, readingData.readings) || (cov_1yux1gw934().b[4][4]++, readingData.items) || (cov_1yux1gw934().b[4][5]++, []);
    } else {
      cov_1yux1gw934().b[3][1]++;
    }
    cov_1yux1gw934().s[8]++;
    return [];
  };
  var dataArray = (cov_1yux1gw934().s[9]++, getDataArray());
  var totalQuestionsCount = (cov_1yux1gw934().s[10]++, (0, _readingStats.calculateTotalQuestions)(dataArray));
  var completedQuestionsCount = (cov_1yux1gw934().s[11]++, (0, _readingStats.calculateCompletedQuestionsCount)(completedQuestions));
  var totalProgress = (cov_1yux1gw934().s[12]++, (0, _readingStats.calculateTotalProgress)(dataArray, completedQuestions));
  var exerciseProgressData = (cov_1yux1gw934().s[13]++, (0, _readingStats.calculateExerciseProgress)(dataArray, completedQuestions));
  var formattedExerciseData = (cov_1yux1gw934().s[14]++, exerciseProgressData.map(function (exercise) {
    cov_1yux1gw934().f[2]++;
    cov_1yux1gw934().s[15]++;
    return {
      title: exercise.title,
      completed: exercise.completedQuestions,
      total: exercise.totalQuestions,
      progress: exercise.progress
    };
  }));
  cov_1yux1gw934().s[16]++;
  return (0, _jsxRuntime.jsx)(_ProgressCard.default, {
    title: "Progression",
    progress: totalProgress,
    completed: completedQuestionsCount,
    total: totalQuestionsCount,
    unit: "questions",
    levelColor: levelColor,
    expandable: true,
    expanded: expanded,
    onToggleExpand: onToggleExpand,
    categoryData: formattedExerciseData,
    onCategoryPress: onExercisePress
  });
};
cov_1yux1gw934().s[17]++;
ReadingProgress.propTypes = {
  readingData: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.shape({
    exercises: _propTypes.default.array,
    texts: _propTypes.default.array,
    passages: _propTypes.default.array,
    readings: _propTypes.default.array,
    items: _propTypes.default.array
  })]).isRequired,
  completedQuestions: _propTypes.default.object,
  levelColor: _propTypes.default.string,
  expanded: _propTypes.default.bool,
  onToggleExpand: _propTypes.default.func,
  onExercisePress: _propTypes.default.func
};
var _default = exports.default = ReadingProgress;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,