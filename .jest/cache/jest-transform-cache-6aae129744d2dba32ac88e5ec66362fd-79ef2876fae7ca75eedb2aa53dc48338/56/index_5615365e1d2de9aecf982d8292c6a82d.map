{"version":3,"names":["_react","require","_reactNative","_native","_expoRouter","_Container","_interopRequireWildcard","_GrammarHeader","_interopRequireDefault","_GrammarRuleSelector","_GrammarProgress","_GrammarRuleContent","_GrammarExerciceRenderer","_GrammarFeedback","_GrammarNavigation","_useGrammar","_grammarDataHelper","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","cov_1mx66fnjdn","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","b","_coverageSchema","coverage","actualCoverage","GrammarExercise","_ref","route","navigation","useNavigation","_ref2","params","_ref2$level","level","styles","createStyles","levelColor","useMemo","getLevelColor","_ref3","useState","_ref4","_slicedToArray2","grammarData","setGrammarData","useEffect","isMounted","load","_ref5","_asyncToGenerator2","process","env","JEST_WORKER_ID","data","getGrammarData","loadGrammarData","apply","arguments","_ref6","useGrammar","ruleIndex","exerciseIndex","selectedOption","setSelectedOption","inputText","setInputText","showFeedback","isCorrect","attempts","completedExercises","loaded","showDetailedProgress","currentRule","currentExercise","canCheckAnswer","isFirstExercise","isLastExercise","changeRule","submitAnswer","nextExercise","previousExercise","retryExercise","toggleDetailedProgress","handleBackPress","useCallback","router","push","pathname","handleCheckAnswer","handleNextExercise","goBack","handlePreviousExercise","handleRetryExercise","handleSkipExercise","handleRuleChange","index","handleRuleProgressPress","handleToggleProgressDetails","isLoading","length","jsx","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","ALL","backgroundColor","statusBarStyle","children","View","style","loadingContainer","ActivityIndicator","size","color","testID","jsxs","withScrollView","withPadding","scrollViewProps","showsVerticalScrollIndicator","contentContainerStyle","scrollContent","onBackPress","rules","selectedIndex","onSelectRule","expanded","onToggleExpand","onRulePress","rule","exercise","isVisible","explanation","correctAnswer","answer","onCheckAnswer","onPreviousExercise","onNextExercise","onRetryExercise","onSkipExercise","_default","exports"],"sources":["index.js"],"sourcesContent":["// GrammarExercise/index.js - VERSION TOTALEMENT RECODÃ‰E\r\n\r\nimport { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport { View, ActivityIndicator } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { router } from \"expo-router\";\r\n\r\n// Layout\r\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\r\n\r\n// Components\r\nimport GrammarHeader from \"./GrammarHeader\";\r\nimport GrammarRuleSelector from \"./GrammarRuleSelector\";\r\nimport GrammarProgress from \"./GrammarProgress\";\r\nimport GrammarRuleContent from \"./GrammarRuleContent\";\r\nimport GrammarExerciseRenderer from \"./GrammarExerciceRenderer\";\r\nimport GrammarFeedback from \"./GrammarFeedback\";\r\nimport GrammarNavigation from \"./GrammarNavigation\";\r\n\r\n// Hook & Utils\r\nimport useGrammar from \"./hooks/useGrammar\";\r\nimport { getGrammarData, loadGrammarData, getLevelColor } from \"../../../utils/grammar/grammarDataHelper\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ðŸŽ¯ GrammarExercise - VERSION TOTALEMENT RECODÃ‰E AVEC OPTIMISATIONS COMPLÃˆTES\r\n * âœ… MÃ©morisation complÃ¨te avec useMemo et useCallback\r\n * âœ… useEffect optimisÃ© pour saveActivity\r\n * âœ… Gestion des handlers mÃ©morisÃ©s\r\n * âœ… Performance maximale\r\n */\r\nconst GrammarExercise = ({ route }) => {\r\n  const navigation = useNavigation();\r\n  const { level = \"A1\" } = route?.params || {};\r\n  const styles = createStyles();\r\n\r\n  // Hook pour sauvegarder l'activitÃ©\r\n  // const { saveActivity } = useLastActivity(); // supprimÃ© car inutilisÃ©\r\n\r\n  // âœ… MÃ‰MORISER les donnÃ©es principales\r\n  const levelColor = useMemo(() => getLevelColor(level), [level]);\r\n  const [grammarData, setGrammarData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const load = async () => {\r\n      if (process.env.JEST_WORKER_ID) {\r\n        const data = getGrammarData(level);\r\n        if (isMounted) setGrammarData(data);\r\n        return;\r\n      }\r\n      const data = await loadGrammarData(level);\r\n      if (isMounted) setGrammarData(data);\r\n    };\r\n    load();\r\n    return () => { isMounted = false; };\r\n  }, [level]);\r\n\r\n  // Hook unifiÃ©\r\n  const {\r\n    ruleIndex,\r\n    exerciseIndex,\r\n    selectedOption,\r\n    setSelectedOption,\r\n    inputText,\r\n    setInputText,\r\n    showFeedback,\r\n    isCorrect,\r\n    attempts,\r\n    completedExercises,\r\n    loaded,\r\n    showDetailedProgress,\r\n    currentRule,\r\n    currentExercise,\r\n    canCheckAnswer,\r\n    isFirstExercise,\r\n    isLastExercise,\r\n    changeRule,\r\n    submitAnswer,\r\n    nextExercise,\r\n    previousExercise,\r\n    retryExercise,\r\n    toggleDetailedProgress,\r\n  } = useGrammar(grammarData, level);\r\n\r\n  // âœ… CORRECTION FINALE : Suppression de la double sauvegarde\r\n  // Le hook useGrammar gÃ¨re dÃ©jÃ  la sauvegarde, pas besoin de doublon\r\n  // Si on veut vraiment sauvegarder l'activitÃ©, on peut le faire Ã  des moments spÃ©cifiques\r\n  // comme quand on change de rÃ¨gle ou termine un exercice\r\n\r\n  // âœ… TOUS LES HANDLERS MÃ‰MORISÃ‰S pour Ã©viter les re-renders\r\nconst handleBackPress = useCallback(() => {\r\n  router.push({\r\n    pathname: \"/tabs/exerciseSelection\",\r\n    params: { level }\r\n  });\r\n}, [level]);\r\n  \r\n  const handleCheckAnswer = useCallback(() => {\r\n    submitAnswer();\r\n  }, [submitAnswer]);\r\n  \r\n  const handleNextExercise = useCallback(() => {\r\n    if (!nextExercise()) {\r\n      // All exercises completed\r\n      navigation.goBack();\r\n    }\r\n  }, [nextExercise, navigation]);\r\n\r\n  const handlePreviousExercise = useCallback(() => {\r\n    previousExercise();\r\n  }, [previousExercise]);\r\n\r\n  const handleRetryExercise = useCallback(() => {\r\n    retryExercise();\r\n  }, [retryExercise]);\r\n\r\n  const handleSkipExercise = useCallback(() => {\r\n    handleNextExercise();\r\n  }, [handleNextExercise]);\r\n\r\n  const handleRuleChange = useCallback((index) => {\r\n    changeRule(index);\r\n  }, [changeRule]);\r\n\r\n  const handleRuleProgressPress = useCallback((index) => {\r\n    changeRule(index);\r\n  }, [changeRule]);\r\n\r\n  const handleToggleProgressDetails = useCallback(() => {\r\n    toggleDetailedProgress();\r\n  }, [toggleDetailedProgress]);\r\n\r\n  // âœ… MÃ‰MORISER les conditions de rendu\r\n  const isLoading = useMemo(() => {\r\n    return !loaded || !grammarData.length;\r\n  }, [loaded, grammarData.length]);\r\n\r\n  // Loading state\r\n  if (isLoading) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color={levelColor} testID=\"activity-indicator\" />\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      safeArea\r\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n      withScrollView\r\n      backgroundColor=\"#f8fafc\"\r\n      statusBarStyle=\"dark-content\"\r\n      withPadding={false}\r\n      scrollViewProps={{\r\n        showsVerticalScrollIndicator: false,\r\n        contentContainerStyle: styles.scrollContent,\r\n      }}\r\n    >\r\n      {/* Header */}\r\n      <GrammarHeader\r\n        level={level}\r\n        onBackPress={handleBackPress}\r\n      />\r\n\r\n      {/* Rule Selector */}\r\n      <GrammarRuleSelector\r\n        rules={grammarData}\r\n        selectedIndex={ruleIndex}\r\n        onSelectRule={handleRuleChange}\r\n        levelColor={levelColor}\r\n      />\r\n\r\n      {/* Progress */}\r\n      <GrammarProgress\r\n        grammarData={grammarData}\r\n        completedExercises={completedExercises}\r\n        levelColor={levelColor}\r\n        expanded={showDetailedProgress}\r\n        onToggleExpand={handleToggleProgressDetails}\r\n        onRulePress={handleRuleProgressPress}\r\n      />\r\n\r\n      {/* Rule Content */}\r\n      <GrammarRuleContent \r\n        rule={currentRule} \r\n        levelColor={levelColor}\r\n      />\r\n\r\n      {/* Exercise Renderer */}\r\n      {currentExercise && (\r\n        <View key={`exercise-${exerciseIndex}-${attempts}`}>\r\n          <GrammarExerciseRenderer\r\n            exercise={currentExercise}\r\n            selectedOption={selectedOption}\r\n            setSelectedOption={setSelectedOption}\r\n            inputText={inputText}\r\n            setInputText={setInputText}\r\n            showFeedback={showFeedback}\r\n            isCorrect={isCorrect}\r\n            exerciseIndex={exerciseIndex}\r\n            attempts={attempts}\r\n          />\r\n        </View>\r\n      )}\r\n\r\n      {/* Feedback */}\r\n      <GrammarFeedback\r\n        isVisible={showFeedback}\r\n        isCorrect={isCorrect}\r\n        explanation={currentExercise?.explanation}\r\n        correctAnswer={currentExercise?.answer}\r\n        attempts={attempts}\r\n      />\r\n\r\n      {/* Navigation */}\r\n      <GrammarNavigation\r\n        testID=\"grammar-navigation\"\r\n        showFeedback={showFeedback}\r\n        isCorrect={isCorrect}\r\n        canCheckAnswer={canCheckAnswer}\r\n        onCheckAnswer={handleCheckAnswer}\r\n        onPreviousExercise={handlePreviousExercise}\r\n        onNextExercise={handleNextExercise}\r\n        onRetryExercise={handleRetryExercise}\r\n        onSkipExercise={handleSkipExercise}\r\n        isFirstExercise={isFirstExercise}\r\n        isLastExercise={isLastExercise}\r\n        attempts={attempts}\r\n        levelColor={levelColor}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GrammarExercise;"],"mappings":"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;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QA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","ignoreList":[]}