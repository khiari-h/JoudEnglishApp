831b894fdb8f343ebb89ae058500c45a
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_20nq6fik8q() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\VocabularyRevision\\style.js";
  var hash = "bf7322dfe2cbe16625f71044643b29821893335a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\VocabularyRevision\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 42
        }
      }
    },
    fnMap: {},
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 40
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: 19,
            column: 45
          },
          end: {
            line: 19,
            column: 47
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 259,
            column: 19
          },
          end: {
            line: 259,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 43
          },
          end: {
            line: 259,
            column: 45
          }
        }, {
          start: {
            line: 259,
            column: 48
          },
          end: {
            line: 259,
            column: 50
          }
        }],
        line: 259
      }
    },
    s: {
      "0": 0
    },
    f: {},
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bf7322dfe2cbe16625f71044643b29821893335a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_20nq6fik8q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20nq6fik8q();
var _ref = (cov_20nq6fik8q().s[0]++, _reactNative.Dimensions.get('window')),
  width = _ref.width;
var _default = exports.default = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F8FAFC'
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 20,
    paddingTop: _reactNative.Platform.OS === 'ios' ? (cov_20nq6fik8q().b[0][0]++, 50) : (cov_20nq6fik8q().b[0][1]++, 20),
    paddingBottom: 16
  },
  backButton: Object.assign({
    width: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#FFFFFF'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.1,
      shadowRadius: 4
    },
    android: {
      elevation: 3
    }
  })),
  backButtonText: {
    fontSize: 18,
    fontWeight: '600'
  },
  headerCenter: {
    alignItems: 'center'
  },
  questionCounter: {
    fontSize: 18,
    fontWeight: '700'
  },
  totalQuestions: {
    fontSize: 14,
    fontWeight: '500',
    marginTop: 2
  },
  scoreChip: Object.assign({
    minWidth: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: 'center',
    alignItems: 'center'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#3B82F6',
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.3,
      shadowRadius: 8
    },
    android: {
      elevation: 4
    }
  })),
  scoreChipText: {
    color: 'white',
    fontSize: 16,
    fontWeight: '700'
  },
  progressSection: {
    paddingHorizontal: 20,
    marginBottom: 24,
    flexDirection: 'row',
    alignItems: 'center',
    gap: 12
  },
  progressTrack: {
    flex: 1,
    height: 6,
    backgroundColor: '#F3F4F6',
    borderRadius: 3
  },
  progressBarQuiz: {
    height: 6,
    borderRadius: 3
  },
  progressText: {
    fontSize: 14,
    fontWeight: '600',
    minWidth: 40,
    textAlign: 'right'
  },
  questionSection: {
    paddingHorizontal: 20,
    marginBottom: 32
  },
  questionCard: Object.assign({
    backgroundColor: '#FFFFFF',
    borderRadius: 24,
    padding: 24,
    alignItems: 'center',
    borderTopWidth: 4,
    borderTopColor: '#3B82F6'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 8
      },
      shadowOpacity: 0.07,
      shadowRadius: 16
    },
    android: {
      elevation: 5
    }
  })),
  questionLabelContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 8,
    marginBottom: 16
  },
  questionLabelIcon: {
    fontSize: 20
  },
  questionLabel: {
    fontSize: 18,
    fontWeight: '700',
    color: '#6B7280'
  },
  wordToTranslate: {
    fontSize: 36,
    fontWeight: '800',
    textAlign: 'center',
    marginBottom: 8
  },
  levelInfo: {
    fontSize: 12,
    fontWeight: '500',
    fontStyle: 'italic'
  },
  choicesSection: {
    flex: 1,
    paddingHorizontal: 20,
    gap: 16,
    justifyContent: 'center',
    paddingBottom: 20
  },
  choiceButton: Object.assign({
    backgroundColor: '#FFFFFF',
    borderRadius: 20,
    borderWidth: 2,
    borderColor: '#E5E7EB'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.08,
      shadowRadius: 12
    },
    android: {
      elevation: 3
    }
  }), {
    overflow: 'hidden'
  }),
  choiceButtonInner: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 18,
    paddingHorizontal: 20,
    gap: 16
  },
  choiceNumberContainer: {
    width: 32,
    height: 32,
    borderRadius: 16,
    backgroundColor: '#F3F4F6',
    justifyContent: 'center',
    alignItems: 'center'
  },
  choiceNumberText: {
    fontSize: 16,
    fontWeight: '700',
    color: '#6B7280'
  },
  choiceText: {
    fontSize: 17,
    fontWeight: '600',
    flex: 1
  },
  choiceSelected: {
    borderColor: '#3B82F6',
    backgroundColor: '#EFF6FF'
  },
  choiceCorrect: {
    borderColor: '#10B981',
    backgroundColor: '#DCFCE7'
  },
  choiceWrong: {
    borderColor: '#EF4444',
    backgroundColor: '#FEE2E2'
  },
  choiceTextCorrect: {
    color: '#059669'
  },
  choiceTextWrong: {
    color: '#DC2626'
  },
  choiceIcon: {
    fontSize: 24,
    fontWeight: '700'
  },
  feedbackContainer: {
    paddingHorizontal: 20,
    paddingTop: 16,
    paddingBottom: _reactNative.Platform.OS === 'ios' ? (cov_20nq6fik8q().b[1][0]++, 34) : (cov_20nq6fik8q().b[1][1]++, 20),
    borderTopWidth: 1,
    borderTopColor: '#E5E7EB',
    gap: 16
  },
  feedbackMessageRow: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    gap: 8
  },
  feedbackIcon: {
    fontSize: 20
  },
  feedbackText: {
    fontSize: 16,
    fontWeight: '600',
    textAlign: 'center'
  },
  continueButton: Object.assign({
    flexDirection: 'row',
    borderRadius: 20,
    paddingVertical: 18,
    alignItems: 'center',
    justifyContent: 'center'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 6
      },
      shadowOpacity: 0.25,
      shadowRadius: 12
    },
    android: {
      elevation: 6
    }
  })),
  continueButtonText: {
    fontSize: 18,
    fontWeight: '700',
    color: '#FFFFFF',
    marginRight: 8
  },
  continueButtonIcon: {
    fontSize: 22,
    color: '#FFFFFF'
  },
  resultContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 32
  },
  resultEmoji: {
    fontSize: 64,
    marginBottom: 24
  },
  resultTitle: {
    fontSize: 28,
    fontWeight: '800',
    textAlign: 'center',
    marginBottom: 8
  },
  resultMessage: {
    fontSize: 18,
    fontWeight: '500',
    textAlign: 'center',
    marginBottom: 32,
    lineHeight: 24
  },
  scoreCard: Object.assign({
    backgroundColor: '#FFFFFF',
    borderRadius: 24,
    padding: 32,
    alignItems: 'center',
    marginBottom: 24,
    minWidth: width * 0.7
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 12
      },
      shadowOpacity: 0.15,
      shadowRadius: 24
    },
    android: {
      elevation: 8
    }
  })),
  scoreRow: {
    flexDirection: 'row',
    alignItems: 'baseline',
    marginBottom: 20
  },
  scoreNumber: {
    fontSize: 48,
    fontWeight: '900'
  },
  scoreSlash: {
    fontSize: 24,
    fontWeight: '600',
    marginLeft: 4
  },
  progressBar: {
    width: '100%',
    height: 8,
    borderRadius: 4,
    marginBottom: 16,
    overflow: 'hidden'
  },
  progressFill: {
    height: 8,
    borderRadius: 4
  },
  percentageText: {
    fontSize: 18,
    fontWeight: '700'
  },
  sourceText: {
    fontSize: 14,
    fontWeight: '500',
    textAlign: 'center',
    marginBottom: 32,
    fontStyle: 'italic'
  },
  buttonsContainer: {
    flexDirection: 'row',
    gap: 16,
    width: '100%',
    maxWidth: 320
  },
  buttonContent: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    gap: 6
  },
  restartButton: Object.assign({
    flex: 1,
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    paddingVertical: 18,
    paddingHorizontal: 16,
    borderWidth: 2,
    borderColor: '#E5E7EB'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.1,
      shadowRadius: 8
    },
    android: {
      elevation: 4
    }
  })),
  restartIcon: {
    fontSize: 16
  },
  restartText: {
    fontSize: 15,
    fontWeight: '600',
    color: '#1F2937'
  },
  finishButton: Object.assign({
    flex: 1,
    borderRadius: 16,
    paddingVertical: 18,
    paddingHorizontal: 16
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 6
      },
      shadowOpacity: 0.25,
      shadowRadius: 12
    },
    android: {
      elevation: 6
    }
  })),
  finishIcon: {
    fontSize: 16,
    color: '#FFFFFF'
  },
  finishText: {
    fontSize: 15,
    fontWeight: '700',
    color: '#FFFFFF'
  },
  emptyContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 32
  },
  emptyEmoji: {
    fontSize: 64,
    marginBottom: 24
  },
  emptyTitle: {
    fontSize: 24,
    fontWeight: '700',
    textAlign: 'center',
    marginBottom: 8
  },
  emptyMessage: {
    fontSize: 16,
    fontWeight: '500',
    textAlign: 'center',
    marginBottom: 32,
    lineHeight: 24
  },
  emptyButton: Object.assign({
    borderRadius: 12,
    paddingVertical: 14,
    paddingHorizontal: 24
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 4
      },
      shadowOpacity: 0.2,
      shadowRadius: 8
    },
    android: {
      elevation: 4
    }
  })),
  emptyButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: '600',
    textAlign: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,