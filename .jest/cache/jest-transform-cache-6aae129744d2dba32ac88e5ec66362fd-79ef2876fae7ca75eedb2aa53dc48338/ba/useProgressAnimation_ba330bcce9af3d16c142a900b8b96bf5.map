{"version":3,"names":["_react","require","_reactNative","cov_1verctetzu","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","useProgressAnimation","_ref","_ref$progress","progress","_ref$animated","animated","_ref$duration","duration","clamped","Math","min","max","animatedValue","useRef","Animated","Value","current","updateMethods","value","timing","toValue","useNativeDriver","instant","setValue","useEffect","updateMethod","width","interpolate","inputRange","outputRange"],"sources":["useProgressAnimation.js"],"sourcesContent":["// src/components/ui/ProgressBar/useProgressAnimation.js\r\n\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Animated } from \"react-native\";\r\n\r\nexport default function useProgressAnimation({\r\n  progress = 0,\r\n  animated = true,\r\n  duration = 600,\r\n}) {\r\n  const clamped = Math.min(Math.max(progress, 0), 100);\r\n  const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n  // On stocke les méthodes de mise à jour dans un objet.\r\n  const updateMethods = {\r\n    animated: (value) => {\r\n      Animated.timing(animatedValue, {\r\n        toValue: value,\r\n        duration,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    },\r\n    instant: (value) => {\r\n      animatedValue.setValue(value);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    // On choisit la méthode à exécuter en dehors du 'if'.\r\n    const updateMethod = animated ? updateMethods.animated : updateMethods.instant;\r\n    \r\n    // On l'exécute, le 'if' a disparu du hook.\r\n    updateMethod(clamped);\r\n  }, [clamped, animated, duration, animatedValue]);\r\n\r\n  const width = animatedValue.interpolate({\r\n    inputRange: [0, 100],\r\n    outputRange: [\"0%\", \"100%\"],\r\n  });\r\n\r\n  return { width };\r\n}"],"mappings":";;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAAwC,SAAAE,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAU,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,eAAA;IAAApB,IAAA;EAAA;EAAA,IAAAqB,QAAA,GAAApB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAkB,QAAA,CAAAtB,IAAA,KAAAsB,QAAA,CAAAtB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAqB,QAAA,CAAAtB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAkB,cAAA,GAAAD,QAAA,CAAAtB,IAAA;EAAA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAwB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAxB,cAAA;AAEzB,SAASyB,oBAAoBA,CAAAC,IAAA,EAIzC;EAAA,IAAAC,aAAA,GAAAD,IAAA,CAHDE,QAAQ;IAARA,QAAQ,GAAAD,aAAA,eAAA3B,cAAA,GAAAqB,CAAA,UAAG,CAAC,IAAAM,aAAA;IAAAE,aAAA,GAAAH,IAAA,CACZI,QAAQ;IAARA,QAAQ,GAAAD,aAAA,eAAA7B,cAAA,GAAAqB,CAAA,UAAG,IAAI,IAAAQ,aAAA;IAAAE,aAAA,GAAAL,IAAA,CACfM,QAAQ;IAARA,QAAQ,GAAAD,aAAA,eAAA/B,cAAA,GAAAqB,CAAA,UAAG,GAAG,IAAAU,aAAA;EAAA/B,cAAA,GAAAoB,CAAA;EAEd,IAAMa,OAAO,IAAAjC,cAAA,GAAAmB,CAAA,OAAGe,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACR,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;EACpD,IAAMS,aAAa,IAAArC,cAAA,GAAAmB,CAAA,OAAG,IAAAmB,aAAM,EAAC,IAAIC,qBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAG3D,IAAMC,aAAa,IAAA1C,cAAA,GAAAmB,CAAA,OAAG;IACpBW,QAAQ,EAAE,SAAVA,QAAQA,CAAGa,KAAK,EAAK;MAAA3C,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAmB,CAAA;MACnBoB,qBAAQ,CAACK,MAAM,CAACP,aAAa,EAAE;QAC7BQ,OAAO,EAAEF,KAAK;QACdX,QAAQ,EAARA,QAAQ;QACRc,eAAe,EAAE;MACnB,CAAC,CAAC,CAACtC,KAAK,CAAC,CAAC;IACZ,CAAC;IACDuC,OAAO,EAAE,SAATA,OAAOA,CAAGJ,KAAK,EAAK;MAAA3C,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAmB,CAAA;MAClBkB,aAAa,CAACW,QAAQ,CAACL,KAAK,CAAC;IAC/B;EACF,CAAC;EAAC3C,cAAA,GAAAmB,CAAA;EAEF,IAAA8B,gBAAS,EAAC,YAAM;IAAAjD,cAAA,GAAAoB,CAAA;IAEd,IAAM8B,YAAY,IAAAlD,cAAA,GAAAmB,CAAA,OAAGW,QAAQ,IAAA9B,cAAA,GAAAqB,CAAA,UAAGqB,aAAa,CAACZ,QAAQ,KAAA9B,cAAA,GAAAqB,CAAA,UAAGqB,aAAa,CAACK,OAAO;IAAC/C,cAAA,GAAAmB,CAAA;IAG/E+B,YAAY,CAACjB,OAAO,CAAC;EACvB,CAAC,EAAE,CAACA,OAAO,EAAEH,QAAQ,EAAEE,QAAQ,EAAEK,aAAa,CAAC,CAAC;EAEhD,IAAMc,KAAK,IAAAnD,cAAA,GAAAmB,CAAA,OAAGkB,aAAa,CAACe,WAAW,CAAC;IACtCC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IACpBC,WAAW,EAAE,CAAC,IAAI,EAAE,MAAM;EAC5B,CAAC,CAAC;EAACtD,cAAA,GAAAmB,CAAA;EAEH,OAAO;IAAEgC,KAAK,EAALA;EAAM,CAAC;AAClB","ignoreList":[]}