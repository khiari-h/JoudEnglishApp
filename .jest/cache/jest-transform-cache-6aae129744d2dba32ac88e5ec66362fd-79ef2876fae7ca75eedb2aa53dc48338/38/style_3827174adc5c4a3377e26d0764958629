af2af8ce64bdde6f5e046246aefa8567
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_2oobrxpro6() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\OptionsList\\style.js";
  var hash = "9bff84872ea0662ad1445d96074e9ee8814cd0ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\OptionsList\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 90,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9bff84872ea0662ad1445d96074e9ee8814cd0ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2oobrxpro6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2oobrxpro6();
var styles = (cov_2oobrxpro6().s[0]++, _reactNative.StyleSheet.create({
  verticalContainer: {
    marginVertical: 10
  },
  optionItem: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginBottom: 10,
    paddingHorizontal: 16,
    paddingVertical: 14,
    borderRadius: 8,
    borderWidth: 1,
    borderColor: '#E5E7EB',
    backgroundColor: 'white'
  },
  optionItemText: {
    flex: 1,
    fontSize: 16,
    color: '#1F2937'
  },
  gridContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
    marginVertical: 10
  },
  gridOptionItem: {
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 10,
    paddingHorizontal: 12,
    paddingVertical: 20,
    borderRadius: 8,
    borderWidth: 1,
    borderColor: '#E5E7EB',
    backgroundColor: 'white'
  },
  gridOptionText: {
    fontSize: 16,
    textAlign: 'center',
    color: '#1F2937'
  },
  option: {
    borderColor: '#E5E7EB',
    backgroundColor: 'white'
  },
  selectedOption: {
    borderWidth: 2,
    backgroundColor: '#F9FAFB'
  },
  correctOption: {
    borderWidth: 2,
    borderColor: '#10B981',
    backgroundColor: '#ECFDF5'
  },
  incorrectOption: {
    borderWidth: 2,
    borderColor: '#EF4444',
    backgroundColor: '#FEF2F2'
  },
  optionText: {
    color: '#1F2937'
  },
  selectedOptionText: {
    fontWeight: '600'
  },
  correctOptionText: {
    color: '#047857',
    fontWeight: '600'
  },
  incorrectOptionText: {
    color: '#B91C1C',
    fontWeight: '600'
  },
  selectedIndicator: {
    width: 8,
    height: 8,
    borderRadius: 4,
    marginLeft: 8
  }
}));
var _default = exports.default = styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY292XzJvb2JyeHBybzYiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwic3R5bGVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsInZlcnRpY2FsQ29udGFpbmVyIiwibWFyZ2luVmVydGljYWwiLCJvcHRpb25JdGVtIiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsIm1hcmdpbkJvdHRvbSIsInBhZGRpbmdIb3Jpem9udGFsIiwicGFkZGluZ1ZlcnRpY2FsIiwiYm9yZGVyUmFkaXVzIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImJhY2tncm91bmRDb2xvciIsIm9wdGlvbkl0ZW1UZXh0IiwiZmxleCIsImZvbnRTaXplIiwiY29sb3IiLCJncmlkQ29udGFpbmVyIiwiZmxleFdyYXAiLCJncmlkT3B0aW9uSXRlbSIsImdyaWRPcHRpb25UZXh0IiwidGV4dEFsaWduIiwib3B0aW9uIiwic2VsZWN0ZWRPcHRpb24iLCJjb3JyZWN0T3B0aW9uIiwiaW5jb3JyZWN0T3B0aW9uIiwib3B0aW9uVGV4dCIsInNlbGVjdGVkT3B0aW9uVGV4dCIsImZvbnRXZWlnaHQiLCJjb3JyZWN0T3B0aW9uVGV4dCIsImluY29ycmVjdE9wdGlvblRleHQiLCJzZWxlY3RlZEluZGljYXRvciIsIndpZHRoIiwiaGVpZ2h0IiwibWFyZ2luTGVmdCIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJzdHlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy9leGVyY2lzZS1jb21tb24vT3B0aW9uc0xpc3Qvc3R5bGVzLmpzXG5pbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAvLyBTdHlsZXMgcG91ciBsYSBtaXNlIGVuIHBhZ2UgdmVydGljYWxlXG4gIHZlcnRpY2FsQ29udGFpbmVyOiB7XG4gICAgbWFyZ2luVmVydGljYWw6IDEwLFxuICB9LFxuICBvcHRpb25JdGVtOiB7XG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgICBtYXJnaW5Cb3R0b206IDEwLFxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAxNixcbiAgICBwYWRkaW5nVmVydGljYWw6IDE0LFxuICAgIGJvcmRlclJhZGl1czogOCxcbiAgICBib3JkZXJXaWR0aDogMSxcbiAgICBib3JkZXJDb2xvcjogJyNFNUU3RUInLFxuICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcbiAgfSxcbiAgb3B0aW9uSXRlbVRleHQ6IHtcbiAgICBmbGV4OiAxLFxuICAgIGZvbnRTaXplOiAxNixcbiAgICBjb2xvcjogJyMxRjI5MzcnLFxuICB9LFxuXG4gIC8vIFN0eWxlcyBwb3VyIGxhIG1pc2UgZW4gcGFnZSBlbiBncmlsbGVcbiAgZ3JpZENvbnRhaW5lcjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGZsZXhXcmFwOiAnd3JhcCcsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgICBtYXJnaW5WZXJ0aWNhbDogMTAsXG4gIH0sXG4gIGdyaWRPcHRpb25JdGVtOiB7XG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIG1hcmdpbkJvdHRvbTogMTAsXG4gICAgcGFkZGluZ0hvcml6b250YWw6IDEyLFxuICAgIHBhZGRpbmdWZXJ0aWNhbDogMjAsXG4gICAgYm9yZGVyUmFkaXVzOiA4LFxuICAgIGJvcmRlcldpZHRoOiAxLFxuICAgIGJvcmRlckNvbG9yOiAnI0U1RTdFQicsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxuICB9LFxuICBncmlkT3B0aW9uVGV4dDoge1xuICAgIGZvbnRTaXplOiAxNixcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIGNvbG9yOiAnIzFGMjkzNycsXG4gIH0sXG5cbiAgLy8gU3R5bGVzIGNvbW11bnMgcG91ciBsZXMgw6l0YXRzIGRlcyBvcHRpb25zXG4gIG9wdGlvbjoge1xuICAgIGJvcmRlckNvbG9yOiAnI0U1RTdFQicsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxuICB9LFxuICBzZWxlY3RlZE9wdGlvbjoge1xuICAgIGJvcmRlcldpZHRoOiAyLFxuICAgIGJhY2tncm91bmRDb2xvcjogJyNGOUZBRkInLFxuICB9LFxuICBjb3JyZWN0T3B0aW9uOiB7XG4gICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgYm9yZGVyQ29sb3I6ICcjMTBCOTgxJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRUNGREY1JyxcbiAgfSxcbiAgaW5jb3JyZWN0T3B0aW9uOiB7XG4gICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgYm9yZGVyQ29sb3I6ICcjRUY0NDQ0JyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRkVGMkYyJyxcbiAgfSxcbiAgb3B0aW9uVGV4dDoge1xuICAgIGNvbG9yOiAnIzFGMjkzNycsXG4gIH0sXG4gIHNlbGVjdGVkT3B0aW9uVGV4dDoge1xuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICB9LFxuICBjb3JyZWN0T3B0aW9uVGV4dDoge1xuICAgIGNvbG9yOiAnIzA0Nzg1NycsXG4gICAgZm9udFdlaWdodDogJzYwMCcsXG4gIH0sXG4gIGluY29ycmVjdE9wdGlvblRleHQ6IHtcbiAgICBjb2xvcjogJyNCOTFDMUMnLFxuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICB9LFxuICBzZWxlY3RlZEluZGljYXRvcjoge1xuICAgIHdpZHRoOiA4LFxuICAgIGhlaWdodDogOCxcbiAgICBib3JkZXJSYWRpdXM6IDQsXG4gICAgbWFyZ2luTGVmdDogOCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBzdHlsZXM7XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFBMEMsU0FBQUMsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO0lBQUFDLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWYsSUFBQTtFQUFBO0VBQUEsSUFBQWdCLFFBQUEsR0FBQWYsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFhLFFBQUEsQ0FBQWpCLElBQUEsS0FBQWlCLFFBQUEsQ0FBQWpCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFnQixRQUFBLENBQUFqQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFhLGNBQUEsR0FBQUQsUUFBQSxDQUFBakIsSUFBQTtFQUFBO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFtQixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBbkIsY0FBQTtBQUUxQyxJQUFNb0IsTUFBTSxJQUFBcEIsY0FBQSxHQUFBYyxDQUFBLE9BQUdPLHVCQUFVLENBQUNDLE1BQU0sQ0FBQztFQUUvQkMsaUJBQWlCLEVBQUU7SUFDakJDLGNBQWMsRUFBRTtFQUNsQixDQUFDO0VBQ0RDLFVBQVUsRUFBRTtJQUNWQyxhQUFhLEVBQUUsS0FBSztJQUNwQkMsVUFBVSxFQUFFLFFBQVE7SUFDcEJDLGNBQWMsRUFBRSxlQUFlO0lBQy9CQyxZQUFZLEVBQUUsRUFBRTtJQUNoQkMsaUJBQWlCLEVBQUUsRUFBRTtJQUNyQkMsZUFBZSxFQUFFLEVBQUU7SUFDbkJDLFlBQVksRUFBRSxDQUFDO0lBQ2ZDLFdBQVcsRUFBRSxDQUFDO0lBQ2RDLFdBQVcsRUFBRSxTQUFTO0lBQ3RCQyxlQUFlLEVBQUU7RUFDbkIsQ0FBQztFQUNEQyxjQUFjLEVBQUU7SUFDZEMsSUFBSSxFQUFFLENBQUM7SUFDUEMsUUFBUSxFQUFFLEVBQUU7SUFDWkMsS0FBSyxFQUFFO0VBQ1QsQ0FBQztFQUdEQyxhQUFhLEVBQUU7SUFDYmQsYUFBYSxFQUFFLEtBQUs7SUFDcEJlLFFBQVEsRUFBRSxNQUFNO0lBQ2hCYixjQUFjLEVBQUUsZUFBZTtJQUMvQkosY0FBYyxFQUFFO0VBQ2xCLENBQUM7RUFDRGtCLGNBQWMsRUFBRTtJQUNkZixVQUFVLEVBQUUsUUFBUTtJQUNwQkMsY0FBYyxFQUFFLFFBQVE7SUFDeEJDLFlBQVksRUFBRSxFQUFFO0lBQ2hCQyxpQkFBaUIsRUFBRSxFQUFFO0lBQ3JCQyxlQUFlLEVBQUUsRUFBRTtJQUNuQkMsWUFBWSxFQUFFLENBQUM7SUFDZkMsV0FBVyxFQUFFLENBQUM7SUFDZEMsV0FBVyxFQUFFLFNBQVM7SUFDdEJDLGVBQWUsRUFBRTtFQUNuQixDQUFDO0VBQ0RRLGNBQWMsRUFBRTtJQUNkTCxRQUFRLEVBQUUsRUFBRTtJQUNaTSxTQUFTLEVBQUUsUUFBUTtJQUNuQkwsS0FBSyxFQUFFO0VBQ1QsQ0FBQztFQUdETSxNQUFNLEVBQUU7SUFDTlgsV0FBVyxFQUFFLFNBQVM7SUFDdEJDLGVBQWUsRUFBRTtFQUNuQixDQUFDO0VBQ0RXLGNBQWMsRUFBRTtJQUNkYixXQUFXLEVBQUUsQ0FBQztJQUNkRSxlQUFlLEVBQUU7RUFDbkIsQ0FBQztFQUNEWSxhQUFhLEVBQUU7SUFDYmQsV0FBVyxFQUFFLENBQUM7SUFDZEMsV0FBVyxFQUFFLFNBQVM7SUFDdEJDLGVBQWUsRUFBRTtFQUNuQixDQUFDO0VBQ0RhLGVBQWUsRUFBRTtJQUNmZixXQUFXLEVBQUUsQ0FBQztJQUNkQyxXQUFXLEVBQUUsU0FBUztJQUN0QkMsZUFBZSxFQUFFO0VBQ25CLENBQUM7RUFDRGMsVUFBVSxFQUFFO0lBQ1ZWLEtBQUssRUFBRTtFQUNULENBQUM7RUFDRFcsa0JBQWtCLEVBQUU7SUFDbEJDLFVBQVUsRUFBRTtFQUNkLENBQUM7RUFDREMsaUJBQWlCLEVBQUU7SUFDakJiLEtBQUssRUFBRSxTQUFTO0lBQ2hCWSxVQUFVLEVBQUU7RUFDZCxDQUFDO0VBQ0RFLG1CQUFtQixFQUFFO0lBQ25CZCxLQUFLLEVBQUUsU0FBUztJQUNoQlksVUFBVSxFQUFFO0VBQ2QsQ0FBQztFQUNERyxpQkFBaUIsRUFBRTtJQUNqQkMsS0FBSyxFQUFFLENBQUM7SUFDUkMsTUFBTSxFQUFFLENBQUM7SUFDVHhCLFlBQVksRUFBRSxDQUFDO0lBQ2Z5QixVQUFVLEVBQUU7RUFDZDtBQUNGLENBQUMsQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxDQUFBQyxPQUFBLEdBRVl4QyxNQUFNIiwiaWdub3JlTGlzdCI6W119