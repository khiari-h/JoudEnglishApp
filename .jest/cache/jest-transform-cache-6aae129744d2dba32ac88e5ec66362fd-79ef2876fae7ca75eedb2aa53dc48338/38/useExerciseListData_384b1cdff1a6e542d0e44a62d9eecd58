024c567de8e836557020e208f4b89ac3
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useExerciseListData;
var _react = require("react");
var _constants = require("../../../utils/constants");
function useExerciseListData(_ref) {
  var level = _ref.level,
    getExerciseProgress = _ref.getExerciseProgress,
    hasProgress = _ref.hasProgress;
  var levelInfo = (0, _react.useMemo)(function () {
    return _constants.LANGUAGE_LEVELS[level] || null;
  }, [level]);
  var exercises = (0, _react.useMemo)(function () {
    var list = [];
    Object.values(_constants.EXERCISES).forEach(function (exercise) {
      if (level === "bonus" && !_constants.BONUS_EXERCISES.includes(exercise.id)) return;
      if (exercise.id === "vocabulary_fast") {
        var fastProgress = getExerciseProgress("vocabulary_fast", level);
        list.push(Object.assign({}, exercise, {
          progress: fastProgress,
          hasProgress: fastProgress > 0,
          isFast: true
        }));
        return;
      }
      var progress = getExerciseProgress(exercise.id, level);
      var has = hasProgress(exercise.id, level);
      list.push(Object.assign({}, exercise, {
        progress: progress,
        hasProgress: has,
        isFast: false
      }));
    });
    return list;
  }, [level, getExerciseProgress, hasProgress]);
  return {
    levelInfo: levelInfo,
    exercises: exercises
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX2NvbnN0YW50cyIsInVzZUV4ZXJjaXNlTGlzdERhdGEiLCJfcmVmIiwibGV2ZWwiLCJnZXRFeGVyY2lzZVByb2dyZXNzIiwiaGFzUHJvZ3Jlc3MiLCJsZXZlbEluZm8iLCJ1c2VNZW1vIiwiTEFOR1VBR0VfTEVWRUxTIiwiZXhlcmNpc2VzIiwibGlzdCIsIk9iamVjdCIsInZhbHVlcyIsIkVYRVJDSVNFUyIsImZvckVhY2giLCJleGVyY2lzZSIsIkJPTlVTX0VYRVJDSVNFUyIsImluY2x1ZGVzIiwiaWQiLCJmYXN0UHJvZ3Jlc3MiLCJwdXNoIiwiYXNzaWduIiwicHJvZ3Jlc3MiLCJpc0Zhc3QiLCJoYXMiXSwic291cmNlcyI6WyJ1c2VFeGVyY2lzZUxpc3REYXRhLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zY3JlZW5zL0V4ZXJjaXNlU2VsZWN0aW9uL2hvb2tzL3VzZUV4ZXJjaXNlTGlzdERhdGEuanNcclxuaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBFWEVSQ0lTRVMsIEJPTlVTX0VYRVJDSVNFUywgTEFOR1VBR0VfTEVWRUxTIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL2NvbnN0YW50c1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlRXhlcmNpc2VMaXN0RGF0YSh7IGxldmVsLCBnZXRFeGVyY2lzZVByb2dyZXNzLCBoYXNQcm9ncmVzcyB9KSB7XHJcbiAgY29uc3QgbGV2ZWxJbmZvID0gdXNlTWVtbygoKSA9PiB7XHJcbiAgICByZXR1cm4gTEFOR1VBR0VfTEVWRUxTW2xldmVsXSB8fCBudWxsO1xyXG4gIH0sIFtsZXZlbF0pO1xyXG5cclxuICBjb25zdCBleGVyY2lzZXMgPSB1c2VNZW1vKCgpID0+IHtcclxuICAgIGNvbnN0IGxpc3QgPSBbXTtcclxuICAgIE9iamVjdC52YWx1ZXMoRVhFUkNJU0VTKS5mb3JFYWNoKChleGVyY2lzZSkgPT4ge1xyXG4gICAgICBpZiAobGV2ZWwgPT09IFwiYm9udXNcIiAmJiAhQk9OVVNfRVhFUkNJU0VTLmluY2x1ZGVzKGV4ZXJjaXNlLmlkKSkgcmV0dXJuO1xyXG5cclxuICAgICAgaWYgKGV4ZXJjaXNlLmlkID09PSBcInZvY2FidWxhcnlfZmFzdFwiKSB7XHJcbiAgICAgICAgY29uc3QgZmFzdFByb2dyZXNzID0gZ2V0RXhlcmNpc2VQcm9ncmVzcyhcInZvY2FidWxhcnlfZmFzdFwiLCBsZXZlbCk7XHJcbiAgICAgICAgbGlzdC5wdXNoKHsgLi4uZXhlcmNpc2UsIHByb2dyZXNzOiBmYXN0UHJvZ3Jlc3MsIGhhc1Byb2dyZXNzOiBmYXN0UHJvZ3Jlc3MgPiAwLCBpc0Zhc3Q6IHRydWUgfSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBwcm9ncmVzcyA9IGdldEV4ZXJjaXNlUHJvZ3Jlc3MoZXhlcmNpc2UuaWQsIGxldmVsKTtcclxuICAgICAgY29uc3QgaGFzID0gaGFzUHJvZ3Jlc3MoZXhlcmNpc2UuaWQsIGxldmVsKTtcclxuICAgICAgbGlzdC5wdXNoKHsgLi4uZXhlcmNpc2UsIHByb2dyZXNzLCBoYXNQcm9ncmVzczogaGFzLCBpc0Zhc3Q6IGZhbHNlIH0pO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gbGlzdDtcclxuICB9LCBbbGV2ZWwsIGdldEV4ZXJjaXNlUHJvZ3Jlc3MsIGhhc1Byb2dyZXNzXSk7XHJcblxyXG4gIHJldHVybiB7IGxldmVsSW5mbywgZXhlcmNpc2VzIH07XHJcbn1cclxuXHJcblxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxJQUFBQSxNQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxVQUFBLEdBQUFELE9BQUE7QUFFZSxTQUFTRSxtQkFBbUJBLENBQUFDLElBQUEsRUFBOEM7RUFBQSxJQUEzQ0MsS0FBSyxHQUFBRCxJQUFBLENBQUxDLEtBQUs7SUFBRUMsbUJBQW1CLEdBQUFGLElBQUEsQ0FBbkJFLG1CQUFtQjtJQUFFQyxXQUFXLEdBQUFILElBQUEsQ0FBWEcsV0FBVztFQUNuRixJQUFNQyxTQUFTLEdBQUcsSUFBQUMsY0FBTyxFQUFDLFlBQU07SUFDOUIsT0FBT0MsMEJBQWUsQ0FBQ0wsS0FBSyxDQUFDLElBQUksSUFBSTtFQUN2QyxDQUFDLEVBQUUsQ0FBQ0EsS0FBSyxDQUFDLENBQUM7RUFFWCxJQUFNTSxTQUFTLEdBQUcsSUFBQUYsY0FBTyxFQUFDLFlBQU07SUFDOUIsSUFBTUcsSUFBSSxHQUFHLEVBQUU7SUFDZkMsTUFBTSxDQUFDQyxNQUFNLENBQUNDLG9CQUFTLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLFVBQUNDLFFBQVEsRUFBSztNQUM3QyxJQUFJWixLQUFLLEtBQUssT0FBTyxJQUFJLENBQUNhLDBCQUFlLENBQUNDLFFBQVEsQ0FBQ0YsUUFBUSxDQUFDRyxFQUFFLENBQUMsRUFBRTtNQUVqRSxJQUFJSCxRQUFRLENBQUNHLEVBQUUsS0FBSyxpQkFBaUIsRUFBRTtRQUNyQyxJQUFNQyxZQUFZLEdBQUdmLG1CQUFtQixDQUFDLGlCQUFpQixFQUFFRCxLQUFLLENBQUM7UUFDbEVPLElBQUksQ0FBQ1UsSUFBSSxDQUFBVCxNQUFBLENBQUFVLE1BQUEsS0FBTU4sUUFBUTtVQUFFTyxRQUFRLEVBQUVILFlBQVk7VUFBRWQsV0FBVyxFQUFFYyxZQUFZLEdBQUcsQ0FBQztVQUFFSSxNQUFNLEVBQUU7UUFBSSxFQUFFLENBQUM7UUFDL0Y7TUFDRjtNQUVBLElBQU1ELFFBQVEsR0FBR2xCLG1CQUFtQixDQUFDVyxRQUFRLENBQUNHLEVBQUUsRUFBRWYsS0FBSyxDQUFDO01BQ3hELElBQU1xQixHQUFHLEdBQUduQixXQUFXLENBQUNVLFFBQVEsQ0FBQ0csRUFBRSxFQUFFZixLQUFLLENBQUM7TUFDM0NPLElBQUksQ0FBQ1UsSUFBSSxDQUFBVCxNQUFBLENBQUFVLE1BQUEsS0FBTU4sUUFBUTtRQUFFTyxRQUFRLEVBQVJBLFFBQVE7UUFBRWpCLFdBQVcsRUFBRW1CLEdBQUc7UUFBRUQsTUFBTSxFQUFFO01BQUssRUFBRSxDQUFDO0lBQ3ZFLENBQUMsQ0FBQztJQUNGLE9BQU9iLElBQUk7RUFDYixDQUFDLEVBQUUsQ0FBQ1AsS0FBSyxFQUFFQyxtQkFBbUIsRUFBRUMsV0FBVyxDQUFDLENBQUM7RUFFN0MsT0FBTztJQUFFQyxTQUFTLEVBQVRBLFNBQVM7SUFBRUcsU0FBUyxFQUFUQTtFQUFVLENBQUM7QUFDakMiLCJpZ25vcmVMaXN0IjpbXX0=