95b46656e14aa6f80b85c82cba65d6f8
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LightSpeedOutData = exports.LightSpeedOut = exports.LightSpeedInData = exports.LightSpeedIn = void 0;
var _animationParser = require("../animationParser");
var DEFAULT_LIGHTSPEED_TIME = 0.3;
var LightSpeedInData = exports.LightSpeedInData = {
  LightSpeedInRight: {
    name: 'LightSpeedInRight',
    style: {
      0: {
        transform: [{
          translateX: '100vw',
          skewX: '-45deg'
        }],
        opacity: 0
      },
      70: {
        transform: [{
          skewX: '10deg'
        }]
      },
      85: {
        transform: [{
          skewX: '-5deg'
        }]
      },
      100: {
        transform: [{
          skewX: '0deg'
        }]
      }
    },
    duration: DEFAULT_LIGHTSPEED_TIME
  },
  LightSpeedInLeft: {
    name: 'LightSpeedInLeft',
    style: {
      0: {
        transform: [{
          translateX: '-100vw',
          skewX: '45deg'
        }],
        opacity: 0
      },
      70: {
        transform: [{
          skewX: '-10deg'
        }]
      },
      85: {
        transform: [{
          skewX: '5deg'
        }]
      },
      100: {
        transform: [{
          skewX: '0deg'
        }]
      }
    },
    duration: DEFAULT_LIGHTSPEED_TIME
  }
};
var LightSpeedOutData = exports.LightSpeedOutData = {
  LightSpeedOutRight: {
    name: 'LightSpeedOutRight',
    style: {
      0: {
        transform: [{
          translateX: '0vw',
          skewX: '0deg'
        }],
        opacity: 1
      },
      100: {
        transform: [{
          translateX: '100vw',
          skewX: '-45deg'
        }],
        opacity: 0
      }
    },
    duration: DEFAULT_LIGHTSPEED_TIME
  },
  LightSpeedOutLeft: {
    name: 'LightSpeedOutLeft',
    style: {
      0: {
        transform: [{
          translateX: '0vw',
          skew: '0deg'
        }],
        opacity: 1
      },
      100: {
        transform: [{
          translateX: '-100vw',
          skew: '45deg'
        }],
        opacity: 0
      }
    },
    duration: DEFAULT_LIGHTSPEED_TIME
  }
};
var LightSpeedIn = exports.LightSpeedIn = {
  LightSpeedInRight: {
    style: (0, _animationParser.convertAnimationObjectToKeyframes)(LightSpeedInData.LightSpeedInRight),
    duration: LightSpeedInData.LightSpeedInRight.duration
  },
  LightSpeedInLeft: {
    style: (0, _animationParser.convertAnimationObjectToKeyframes)(LightSpeedInData.LightSpeedInLeft),
    duration: LightSpeedInData.LightSpeedInLeft.duration
  }
};
var LightSpeedOut = exports.LightSpeedOut = {
  LightSpeedOutRight: {
    style: (0, _animationParser.convertAnimationObjectToKeyframes)(LightSpeedOutData.LightSpeedOutRight),
    duration: LightSpeedOutData.LightSpeedOutRight.duration
  },
  LightSpeedOutLeft: {
    style: (0, _animationParser.convertAnimationObjectToKeyframes)(LightSpeedOutData.LightSpeedOutLeft),
    duration: LightSpeedOutData.LightSpeedOutLeft.duration
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkxpZ2h0U3BlZWRPdXREYXRhIiwiTGlnaHRTcGVlZE91dCIsIkxpZ2h0U3BlZWRJbkRhdGEiLCJMaWdodFNwZWVkSW4iLCJfYW5pbWF0aW9uUGFyc2VyIiwicmVxdWlyZSIsIkRFRkFVTFRfTElHSFRTUEVFRF9USU1FIiwiTGlnaHRTcGVlZEluUmlnaHQiLCJuYW1lIiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJ0cmFuc2xhdGVYIiwic2tld1giLCJvcGFjaXR5IiwiZHVyYXRpb24iLCJMaWdodFNwZWVkSW5MZWZ0IiwiTGlnaHRTcGVlZE91dFJpZ2h0IiwiTGlnaHRTcGVlZE91dExlZnQiLCJza2V3IiwiY29udmVydEFuaW1hdGlvbk9iamVjdFRvS2V5ZnJhbWVzIl0sInNvdXJjZXMiOlsiTGlnaHRzcGVlZC53ZWIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgY29udmVydEFuaW1hdGlvbk9iamVjdFRvS2V5ZnJhbWVzIH0gZnJvbSAnLi4vYW5pbWF0aW9uUGFyc2VyJztcblxuY29uc3QgREVGQVVMVF9MSUdIVFNQRUVEX1RJTUUgPSAwLjM7XG5cbmV4cG9ydCBjb25zdCBMaWdodFNwZWVkSW5EYXRhID0ge1xuICBMaWdodFNwZWVkSW5SaWdodDoge1xuICAgIG5hbWU6ICdMaWdodFNwZWVkSW5SaWdodCcsXG4gICAgc3R5bGU6IHtcbiAgICAgIDA6IHtcbiAgICAgICAgdHJhbnNmb3JtOiBbeyB0cmFuc2xhdGVYOiAnMTAwdncnLCBza2V3WDogJy00NWRlZycgfV0sXG4gICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICB9LFxuICAgICAgNzA6IHsgdHJhbnNmb3JtOiBbeyBza2V3WDogJzEwZGVnJyB9XSB9LFxuICAgICAgODU6IHsgdHJhbnNmb3JtOiBbeyBza2V3WDogJy01ZGVnJyB9XSB9LFxuICAgICAgMTAwOiB7IHRyYW5zZm9ybTogW3sgc2tld1g6ICcwZGVnJyB9XSB9LFxuICAgIH0sXG4gICAgZHVyYXRpb246IERFRkFVTFRfTElHSFRTUEVFRF9USU1FLFxuICB9LFxuXG4gIExpZ2h0U3BlZWRJbkxlZnQ6IHtcbiAgICBuYW1lOiAnTGlnaHRTcGVlZEluTGVmdCcsXG4gICAgc3R5bGU6IHtcbiAgICAgIDA6IHtcbiAgICAgICAgdHJhbnNmb3JtOiBbeyB0cmFuc2xhdGVYOiAnLTEwMHZ3Jywgc2tld1g6ICc0NWRlZycgfV0sXG4gICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICB9LFxuICAgICAgNzA6IHsgdHJhbnNmb3JtOiBbeyBza2V3WDogJy0xMGRlZycgfV0gfSxcbiAgICAgIDg1OiB7IHRyYW5zZm9ybTogW3sgc2tld1g6ICc1ZGVnJyB9XSB9LFxuICAgICAgMTAwOiB7IHRyYW5zZm9ybTogW3sgc2tld1g6ICcwZGVnJyB9XSB9LFxuICAgIH0sXG4gICAgZHVyYXRpb246IERFRkFVTFRfTElHSFRTUEVFRF9USU1FLFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IExpZ2h0U3BlZWRPdXREYXRhID0ge1xuICBMaWdodFNwZWVkT3V0UmlnaHQ6IHtcbiAgICBuYW1lOiAnTGlnaHRTcGVlZE91dFJpZ2h0JyxcbiAgICBzdHlsZToge1xuICAgICAgMDoge1xuICAgICAgICB0cmFuc2Zvcm06IFt7IHRyYW5zbGF0ZVg6ICcwdncnLCBza2V3WDogJzBkZWcnIH1dLFxuICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgfSxcbiAgICAgIDEwMDoge1xuICAgICAgICB0cmFuc2Zvcm06IFt7IHRyYW5zbGF0ZVg6ICcxMDB2dycsIHNrZXdYOiAnLTQ1ZGVnJyB9XSxcbiAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBkdXJhdGlvbjogREVGQVVMVF9MSUdIVFNQRUVEX1RJTUUsXG4gIH0sXG5cbiAgTGlnaHRTcGVlZE91dExlZnQ6IHtcbiAgICBuYW1lOiAnTGlnaHRTcGVlZE91dExlZnQnLFxuICAgIHN0eWxlOiB7XG4gICAgICAwOiB7XG4gICAgICAgIHRyYW5zZm9ybTogW3sgdHJhbnNsYXRlWDogJzB2dycsIHNrZXc6ICcwZGVnJyB9XSxcbiAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgIH0sXG4gICAgICAxMDA6IHtcbiAgICAgICAgdHJhbnNmb3JtOiBbeyB0cmFuc2xhdGVYOiAnLTEwMHZ3Jywgc2tldzogJzQ1ZGVnJyB9XSxcbiAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBkdXJhdGlvbjogREVGQVVMVF9MSUdIVFNQRUVEX1RJTUUsXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgTGlnaHRTcGVlZEluID0ge1xuICBMaWdodFNwZWVkSW5SaWdodDoge1xuICAgIHN0eWxlOiBjb252ZXJ0QW5pbWF0aW9uT2JqZWN0VG9LZXlmcmFtZXMoXG4gICAgICBMaWdodFNwZWVkSW5EYXRhLkxpZ2h0U3BlZWRJblJpZ2h0XG4gICAgKSxcbiAgICBkdXJhdGlvbjogTGlnaHRTcGVlZEluRGF0YS5MaWdodFNwZWVkSW5SaWdodC5kdXJhdGlvbixcbiAgfSxcbiAgTGlnaHRTcGVlZEluTGVmdDoge1xuICAgIHN0eWxlOiBjb252ZXJ0QW5pbWF0aW9uT2JqZWN0VG9LZXlmcmFtZXMoTGlnaHRTcGVlZEluRGF0YS5MaWdodFNwZWVkSW5MZWZ0KSxcbiAgICBkdXJhdGlvbjogTGlnaHRTcGVlZEluRGF0YS5MaWdodFNwZWVkSW5MZWZ0LmR1cmF0aW9uLFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IExpZ2h0U3BlZWRPdXQgPSB7XG4gIExpZ2h0U3BlZWRPdXRSaWdodDoge1xuICAgIHN0eWxlOiBjb252ZXJ0QW5pbWF0aW9uT2JqZWN0VG9LZXlmcmFtZXMoXG4gICAgICBMaWdodFNwZWVkT3V0RGF0YS5MaWdodFNwZWVkT3V0UmlnaHRcbiAgICApLFxuICAgIGR1cmF0aW9uOiBMaWdodFNwZWVkT3V0RGF0YS5MaWdodFNwZWVkT3V0UmlnaHQuZHVyYXRpb24sXG4gIH0sXG4gIExpZ2h0U3BlZWRPdXRMZWZ0OiB7XG4gICAgc3R5bGU6IGNvbnZlcnRBbmltYXRpb25PYmplY3RUb0tleWZyYW1lcyhcbiAgICAgIExpZ2h0U3BlZWRPdXREYXRhLkxpZ2h0U3BlZWRPdXRMZWZ0XG4gICAgKSxcbiAgICBkdXJhdGlvbjogTGlnaHRTcGVlZE91dERhdGEuTGlnaHRTcGVlZE91dExlZnQuZHVyYXRpb24sXG4gIH0sXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUFDQSxNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBQyxLQUFBO0FBQUE7QUFBQUQsT0FBQSxDQUFBRSxpQkFBQSxHQUFBRixPQUFBLENBQUFHLGFBQUEsR0FBQUgsT0FBQSxDQUFBSSxnQkFBQSxHQUFBSixPQUFBLENBQUFLLFlBQUE7QUFDYixJQUFBQyxnQkFBQSxHQUFBQyxPQUFBO0FBRUEsSUFBTUMsdUJBQXVCLEdBQUcsR0FBRztBQUU1QixJQUFNSixnQkFBZ0IsR0FBQUosT0FBQSxDQUFBSSxnQkFBQSxHQUFHO0VBQzlCSyxpQkFBaUIsRUFBRTtJQUNqQkMsSUFBSSxFQUFFLG1CQUFtQjtJQUN6QkMsS0FBSyxFQUFFO01BQ0wsQ0FBQyxFQUFFO1FBQ0RDLFNBQVMsRUFBRSxDQUFDO1VBQUVDLFVBQVUsRUFBRSxPQUFPO1VBQUVDLEtBQUssRUFBRTtRQUFTLENBQUMsQ0FBQztRQUNyREMsT0FBTyxFQUFFO01BQ1gsQ0FBQztNQUNELEVBQUUsRUFBRTtRQUFFSCxTQUFTLEVBQUUsQ0FBQztVQUFFRSxLQUFLLEVBQUU7UUFBUSxDQUFDO01BQUUsQ0FBQztNQUN2QyxFQUFFLEVBQUU7UUFBRUYsU0FBUyxFQUFFLENBQUM7VUFBRUUsS0FBSyxFQUFFO1FBQVEsQ0FBQztNQUFFLENBQUM7TUFDdkMsR0FBRyxFQUFFO1FBQUVGLFNBQVMsRUFBRSxDQUFDO1VBQUVFLEtBQUssRUFBRTtRQUFPLENBQUM7TUFBRTtJQUN4QyxDQUFDO0lBQ0RFLFFBQVEsRUFBRVI7RUFDWixDQUFDO0VBRURTLGdCQUFnQixFQUFFO0lBQ2hC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