00134171f51f8a54f7b4bbc4dbad35d0
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var workplaceCasual = [{
  categoryId: 56,
  english: "Let's circle back on this later.",
  translation: "Revenons sur ce point plus tard.",
  context: "Pour reporter une discussion. 'Circle back' est un jargon courant pour 'revenir sur un sujet'.",
  examples: [{
    english: "This is a good point, but let's circle back on this after the main presentation.",
    translation: "C'est un bon point, mais revenons sur ce point après la présentation principale."
  }]
}, {
  categoryId: 56,
  english: "Let's touch base next week.",
  translation: "Prenons contact la semaine prochaine.",
  context: "'To touch base' signifie prendre contact ou se synchroniser brièvement avec quelqu'un.",
  examples: [{
    english: "I need to touch base with the design team before making a decision.",
    translation: "Je dois prendre contact avec l'équipe de design avant de prendre une décision."
  }]
}, {
  categoryId: 56,
  english: "I don't have the bandwidth for that right now.",
  translation: "Je n'ai pas la capacité/le temps pour ça en ce moment.",
  context: "'Bandwidth' est une métaphore pour la capacité mentale ou le temps disponible.",
  examples: [{
    english: "With three major projects, I just don't have the bandwidth to take on another task.",
    translation: "Avec trois projets majeurs, je n'ai tout simplement pas la capacité de prendre une autre tâche."
  }]
}, {
  categoryId: 56,
  english: "I'm completely swamped right now.",
  translation: "Je suis complètement débordé(e) en ce moment.",
  context: "Pour indiquer que vous avez une charge de travail très lourde.",
  examples: [{
    english: "I'd love to help, but I'm completely swamped with the quarterly reports.",
    translation: "J'adorerais aider, mais je suis complètement débordé(e) par les rapports trimestriels."
  }]
}, {
  categoryId: 56,
  english: "Let's table this discussion for now.",
  translation: "Mettons cette discussion de côté pour l'instant.",
  context: "'To table' une discussion signifie la reporter à plus tard.",
  examples: [{
    english: "We're not making progress. Let's table this and revisit it with fresh eyes tomorrow.",
    translation: "Nous ne progressons pas. Mettons cela de côté et réexaminons-le avec un regard neuf demain."
  }]
}, {
  categoryId: 56,
  english: "Let's focus on the low-hanging fruit.",
  translation: "Concentrons-nous sur les objectifs faciles à atteindre.",
  context: "Le 'low-hanging fruit' représente les tâches les plus faciles à accomplir qui donnent des résultats rapides.",
  examples: [{
    english: "Instead of a full redesign, let's focus on the low-hanging fruit, like fixing the obvious bugs.",
    translation: "Au lieu d'une refonte complète, concentrons-nous sur les objectifs faciles, comme corriger les bugs évidents."
  }]
}, {
  categoryId: 56,
  english: "This new software is a total game-changer.",
  translation: "Ce nouveau logiciel change complètement la donne.",
  context: "Un 'game-changer' est une innovation ou un événement qui modifie radicalement une situation.",
  examples: [{
    english: "Automating this process will be a total game-changer for our team's productivity.",
    translation: "L'automatisation de ce processus va complètement changer la donne pour la productivité de notre équipe."
  }]
}, {
  categoryId: 56,
  english: "We need to make sure we're all on the same page.",
  translation: "Nous devons nous assurer que nous sommes tous sur la même longueur d'onde.",
  context: "Signifie s'assurer que tout le monde a la même compréhension ou le même objectif.",
  examples: [{
    english: "Before we present to the client, let's meet to make sure we're all on the same page.",
    translation: "Avant de faire la présentation au client, rencontrons-nous pour nous assurer que nous sommes tous sur la même longueur d'onde."
  }]
}, {
  categoryId: 56,
  english: "I hate to be the bearer of bad news, but...",
  translation: "Je déteste être le porteur de mauvaises nouvelles, mais...",
  context: "Une façon polie d'introduire une mauvaise nouvelle ou un problème.",
  examples: [{
    english: "I hate to be the bearer of bad news, but the client rejected our proposal.",
    translation: "Je déteste être le porteur de mauvaises nouvelles, mais le client a rejeté notre proposition."
  }]
}, {
  categoryId: 56,
  english: "Let's not reinvent the wheel here.",
  translation: "Ne réinventons pas la roue ici.",
  context: "Signifie qu'il ne faut pas perdre de temps à créer quelque chose qui existe déjà.",
  examples: [{
    english: "Let's not reinvent the wheel. We can use an existing template for this report.",
    translation: "Ne réinventons pas la roue. Nous pouvons utiliser un modèle existant pour ce rapport."
  }]
}, {
  categoryId: 56,
  english: "We need to pivot our strategy.",
  translation: "Nous devons changer notre stratégie.",
  context: "'To pivot' signifie changer de direction de manière significative, souvent en réponse à un échec ou une nouvelle information.",
  examples: [{
    english: "This marketing campaign isn't working. We need to pivot before we burn through the budget.",
    translation: "Cette campagne marketing ne fonctionne pas. Nous devons pivoter avant de griller tout le budget."
  }]
}, {
  categoryId: 56,
  english: "Can we sync up tomorrow morning?",
  translation: "Peut-on se synchroniser demain matin ?",
  context: "'To sync up' est une manière décontractée de dire 'se rencontrer' ou 'se coordonner'.",
  examples: [{
    english: "Can we sync up tomorrow morning to review the presentation before the big meeting?",
    translation: "Peut-on se synchroniser demain matin pour revoir la présentation avant la grande réunion ?"
  }]
}, {
  categoryId: 56,
  english: "This is above my pay grade.",
  translation: "Ceci dépasse mes compétences/mon autorité.",
  context: "Une façon de dire qu'un problème doit être traité par quelqu'un de plus haut placé dans la hiérarchie.",
  examples: [{
    english: "Handling a legal complaint is definitely above my pay grade. We need to escalate this to the legal department.",
    translation: "Gérer une plainte légale est définitivement au-dessus de mes compétences. Nous devons remonter cela au service juridique."
  }]
}, {
  categoryId: 56,
  english: "We need all hands on deck for this launch.",
  translation: "Nous avons besoin de tout le monde sur le pont pour ce lancement.",
  context: "Une expression qui signifie que la participation de tout le monde est requise pour une tâche urgente ou importante.",
  examples: [{
    english: "The deadline is tomorrow, so it's all hands on deck to get this finished.",
    translation: "La date limite est demain, donc tout le monde doit s'y mettre pour finir ça."
  }]
}];
var _default = exports.default = workplaceCasual;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,