0f3b9d2047c662b6be2cf205af57d5f4
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isValidRubberBandConfig = exports.VELOCITY_EPS = exports.SLOPE_FACTOR = void 0;
var _PlatformChecker = require("../../PlatformChecker");
var IS_WEB = (0, _PlatformChecker.isWeb)();
var VELOCITY_EPS = exports.VELOCITY_EPS = IS_WEB ? 1 / 20 : 1;
var SLOPE_FACTOR = exports.SLOPE_FACTOR = 0.1;
var _worklet_7193658793050_init_data = {
  code: "function isValidRubberBandConfig_utilsTs1(config){return!!config.rubberBandEffect&&Array.isArray(config.clamp)&&config.clamp.length===2;}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\animation\\decay\\utils.ts",
  sourceMap: "{\"version\":3,\"names\":[\"isValidRubberBandConfig_utilsTs1\",\"config\",\"rubberBandEffect\",\"Array\",\"isArray\",\"clamp\",\"length\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/animation/decay/utils.ts\"],\"mappings\":\"AA4EO,SAAAA,gCAENA,CAAkCC,MAAA,EAEjC,MACE,CAAC,CAACA,MAAM,CAACC,gBAAgB,EACzBC,KAAK,CAACC,OAAO,CAACH,MAAM,CAACI,KAAK,CAAC,EAC3BJ,MAAM,CAACI,KAAK,CAACC,MAAM,GAAK,CAAC,CAE7B\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var isValidRubberBandConfig = exports.isValidRubberBandConfig = function () {
  var _e = [new global.Error(), 1, -27];
  var isValidRubberBandConfig = function isValidRubberBandConfig(config) {
    return !!config.rubberBandEffect && Array.isArray(config.clamp) && config.clamp.length === 2;
  };
  isValidRubberBandConfig.__closure = {};
  isValidRubberBandConfig.__workletHash = 7193658793050;
  isValidRubberBandConfig.__initData = _worklet_7193658793050_init_data;
  isValidRubberBandConfig.__stackDetails = _e;
  return isValidRubberBandConfig;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzVmFsaWRSdWJiZXJCYW5kQ29uZmlnIiwiVkVMT0NJVFlfRVBTIiwiU0xPUEVfRkFDVE9SIiwiX1BsYXRmb3JtQ2hlY2tlciIsInJlcXVpcmUiLCJJU19XRUIiLCJpc1dlYiIsIl93b3JrbGV0XzcxOTM2NTg3OTMwNTBfaW5pdF9kYXRhIiwiY29kZSIsImxvY2F0aW9uIiwic291cmNlTWFwIiwidmVyc2lvbiIsIl9lIiwiZ2xvYmFsIiwiRXJyb3IiLCJjb25maWciLCJydWJiZXJCYW5kRWZmZWN0IiwiQXJyYXkiLCJpc0FycmF5IiwiY2xhbXAiLCJsZW5ndGgiLCJfX2Nsb3N1cmUiLCJfX3dvcmtsZXRIYXNoIiwiX19pbml0RGF0YSIsIl9fc3RhY2tEZXRhaWxzIl0sInNvdXJjZXMiOlsidXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHR5cGUge1xuICBBbmltYXRhYmxlVmFsdWUsXG4gIEFuaW1hdGlvbk9iamVjdCxcbiAgQW5pbWF0aW9uLFxuICBSZWR1Y2VNb3Rpb24sXG4gIFRpbWVzdGFtcCxcbiAgUmVxdWlyZWRLZXlzLFxufSBmcm9tICcuLi8uLi9jb21tb25UeXBlcyc7XG5pbXBvcnQgeyBpc1dlYiB9IGZyb20gJy4uLy4uL1BsYXRmb3JtQ2hlY2tlcic7XG5cbmNvbnN0IElTX1dFQiA9IGlzV2ViKCk7XG5leHBvcnQgY29uc3QgVkVMT0NJVFlfRVBTID0gSVNfV0VCID8gMSAvIDIwIDogMTtcbmV4cG9ydCBjb25zdCBTTE9QRV9GQUNUT1IgPSAwLjE7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVjYXlBbmltYXRpb24gZXh0ZW5kcyBBbmltYXRpb248RGVjYXlBbmltYXRpb24+IHtcbiAgbGFzdFRpbWVzdGFtcDogVGltZXN0YW1wO1xuICBzdGFydFRpbWVzdGFtcDogVGltZXN0YW1wO1xuICBpbml0aWFsVmVsb2NpdHk6IG51bWJlcjtcbiAgdmVsb2NpdHk6IG51bWJlcjtcbiAgY3VycmVudDogQW5pbWF0YWJsZVZhbHVlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElubmVyRGVjYXlBbmltYXRpb25cbiAgZXh0ZW5kcyBPbWl0PERlY2F5QW5pbWF0aW9uLCAnY3VycmVudCc+LFxuICAgIEFuaW1hdGlvbk9iamVjdCB7XG4gIGN1cnJlbnQ6IG51bWJlcjtcbiAgc3ByaW5nQWN0aXZlPzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBUaGUgZGVjYXkgYW5pbWF0aW9uIGNvbmZpZ3VyYXRpb24uXG4gKlxuICogQHBhcmFtIHZlbG9jaXR5IC0gSW5pdGlhbCB2ZWxvY2l0eSBvZiB0aGUgYW5pbWF0aW9uLiBEZWZhdWx0cyB0byAwLlxuICogQHBhcmFtIGRlY2VsZXJhdGlvbiAtIFRoZSByYXRlIGF0IHdoaWNoIHRoZSB2ZWxvY2l0eSBkZWNyZWFzZXMgb3ZlciB0aW1lLlxuICogICBEZWZhdWx0cyB0byAwLjk5OC5cbiAqIEBwYXJhbSBjbGFtcCAtIEFycmF5IG9mIHR3byBudW1iZXJzIHdoaWNoIHJlc3RyaWN0cyBhbmltYXRpb24ncyByYW5nZS5cbiAqICAgRGVmYXVsdHMgdG8gW10uXG4gKiBAcGFyYW0gdmVsb2NpdHlGYWN0b3IgLSBWZWxvY2l0eSBtdWx0aXBsaWVyLiBEZWZhdWx0cyB0byAxLlxuICogQHBhcmFtIHJ1YmJlckJhbmRFZmZlY3QgLSBNYWtlcyB0aGUgYW5pbWF0aW9uIGJvdW5jZSBvdmVyIHRoZSBsaW1pdCBzcGVjaWZpZWRcbiAqICAgaW4gYGNsYW1wYC4gRGVmYXVsdHMgdG8gYGZhbHNlYC5cbiAqIEBwYXJhbSBydWJiZXJCYW5kRmFjdG9yIC0gU3RyZW5ndGggb2YgdGhlIHJ1YmJlciBiYW5kIGVmZmVjdC4gRGVmYXVsdHMgdG9cbiAqICAgMC42LlxuICogQHBhcmFtIHJlZHVjZU1vdGlvbiAtIERldGVybWluZXMgaG93IHRoZSBhbmltYXRpb24gcmVzcG9uZHMgdG8gdGhlIGRldmljZSdzXG4gKiAgIHJlZHVjZWQgbW90aW9uIGFjY2Vzc2liaWxpdHkgc2V0dGluZy4gRGVmYXVsdCB0byBgUmVkdWNlTW90aW9uLlN5c3RlbWAgLVxuICogICB7QGxpbmsgUmVkdWNlTW90aW9ufS5cbiAqIEBzZWUgaHR0cHM6Ly9kb2NzLnN3bWFuc2lvbi5jb20vcmVhY3QtbmF0aXZlLXJlYW5pbWF0ZWQvZG9jcy9hbmltYXRpb25zL3dpdGhEZWNheSNjb25maWdcbiAqL1xuZXhwb3J0IHR5cGUgRGVjYXlDb25maWcgPSB7XG4gIGRlY2VsZXJhdGlvbj86IG51bWJlcjtcbiAgdmVsb2NpdHlGYWN0b3I/OiBudW1iZXI7XG4gIHZlbG9jaXR5PzogbnVtYmVyO1xuICByZWR1Y2VNb3Rpb24/OiBSZWR1Y2VNb3Rpb247XG59ICYgKFxuICB8IHtcbiAgICAgIHJ1YmJlckJhbmRFZmZlY3Q/OiBmYWxzZTtcbiAgICAgIGNsYW1wPzogW21pbjogbnVtYmVyLCBtYXg6IG51bWJlcl07XG4gICAgfVxuICB8IHtcbiAgICAgIHJ1YmJlckJhbmRFZmZlY3Q6IHRydWU7XG4gICAgICBjbGFtcDogW21pbjogbnVtYmVyLCBtYXg6IG51bWJlcl07XG4gICAgICBydWJiZXJCYW5kRmFjdG9yPzogbnVtYmVyO1xuICAgIH1cbik7XG5cbmV4cG9ydCB0eXBlIERlZmF1bHREZWNheUNvbmZpZyA9IFJlcXVpcmVkS2V5czxcbiAgRGVjYXlDb25maWcsXG4gICdkZWNlbGVyYXRpb24nIHwgJ3ZlbG9jaXR5RmFjdG9yJyB8ICd2ZWxvY2l0eSdcbj4gJiB7IHJ1YmJlckJhbmRGYWN0b3I6IG51bWJlciB9O1xuXG4vLyBJZiB1c2VyIHdhbnRzIHRvIHVzZSBydWJiZXIgYmFuZCBkZWNheSBhbmltYXRpb24gd2UgaGF2ZSB0byBtYWtlIHN1cmUgaGUgaGFzIHByb3ZpZGVkIGNsYW1wXG5leHBvcnQgdHlwZSBSdWJiZXJCYW5kRGVjYXlDb25maWcgPSBSZXF1aXJlZEtleXM8XG4gIERlZmF1bHREZWNheUNvbmZpZyxcbiAgJ2NsYW1wJ1xuPiAmIHsgcnViYmVyQmFuZEVmZmVjdDogdHJ1ZSB9O1xuXG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFJ1YmJlckJhbmRDb25maWcoXG4gIGNvbmZpZzogRGVmYXVsdERlY2F5Q29uZmlnXG4pOiBjb25maWcgaXMgUnViYmVyQmFuZERlY2F5Q29uZmlnIHtcbiAgJ3dvcmtsZXQnO1xuICByZXR1cm4gKFxuICAgICEhY29uZmlnLnJ1YmJlckJhbmRFZmZlY3QgJiZcbiAgICBBcnJheS5pc0FycmF5KGNvbmZpZy5jbGFtcCkgJiZcbiAgICBjb25maWcuY2xhbXAubGVuZ3RoID09PSAyXG4gICk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQUNBLE1BQUEsQ0FBQUMsY0FBQSxDQUFBQyxPQUFBO0VBQUFDLEtBQUE7QUFBQTtBQUFBRCxPQUFBLENBQUFFLHVCQUFBLEdBQUFGLE9BQUEsQ0FBQUcsWUFBQSxHQUFBSCxPQUFBLENBQUFJLFlBQUE7QUFTYixJQUFBQyxnQkFBQSxHQUFBQyxPQUFBO0FBRUEsSUFBTUMsTUFBTSxHQUFHLElBQUFDLHNCQUFLLEVBQUMsQ0FBQztBQUNmLElBQU1MLFlBQVksR0FBQUgsT0FBQSxDQUFBRyxZQUFBLEdBQUdJLE1BQU0sR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUM7QUFDeEMsSUFBTUgsWUFBWSxHQUFBSixPQUFBLENBQUFJLFlBQUEsR0FBRyxHQUFHO0FBQUMsSUFBQUssZ0NBQUE7RUFBQUMsSUFBQTtFQUFBQyxRQUFBO0VBQUFDLFNBQUE7RUFBQUMsT0FBQTtBQUFBO0FBQUEsSUFBQVgsdUJBQUEsR0FBQUYsT0FBQSxDQUFBRSx1QkFBQSxHQStEekI7RUFBQSxJQUFBWSxFQUFBLFFBQUFDLE1BQUEsQ0FBQUMsS0FBQTtFQUFBLElBQUFkLHVCQUFBLFlBQUFBLHdCQUNMZSxNQUEwQixFQUNPO0lBRWpDLE9BQ0UsQ0FBQyxDQUFDQSxNQUFNLENBQUNDLGdCQUFnQixJQUN6QkMsS0FBSyxDQUFDQyxPQUFPLENBQUNILE1BQU0sQ0FBQ0ksS0FBSyxDQUFDLElBQzNCSixNQUFNLENBQUNJLEtBQUssQ0FBQ0MsTUFBTSxLQUFLLENBQUM7RUFFN0IsQ0FBQztFQUFBcEIsdUJBQUEsQ0FBQXFCLFNBQUE7RUFBQXJCLHVCQUFBLENBQUFzQixhQUFBO0VBQUF0Qix1QkFBQSxDQUFBdUIsVUFBQSxHQUFBaEIsZ0NBQUE7RUFBQVAsdUJBQUEsQ0FBQXdCLGNBQUEsR0FBQVosRUFBQTtFQUFBLE9BQUFaLHVCQUFBO0FBQUEsQ0FUTSIsImlnbm9yZUxpc3QiOltdfQ==