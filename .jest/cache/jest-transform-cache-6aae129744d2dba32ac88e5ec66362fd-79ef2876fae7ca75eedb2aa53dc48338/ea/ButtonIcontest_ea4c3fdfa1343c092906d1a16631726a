0957edf3cddbbe577375cf280991451b
_getJestObj().mock('@expo/vector-icons', function () {
  return {
    Ionicons: function Ionicons(_ref) {
      var name = _ref.name,
        size = _ref.size,
        color = _ref.color;
      var React = require('react');
      var _require = require('react-native'),
        Text = _require.Text;
      return (0, _jsxRuntime.jsx)(Text, {
        testID: `icon-${name}`,
        name: name,
        size: size,
        color: color,
        children: name
      });
    }
  };
});
var _reactNative = require("@testing-library/react-native");
var _ButtonIcon = require("../../../../src/components/ui/Button/ButtonIcon");
var _vectorIcons = require("@expo/vector-icons");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require2 = require("@jest/globals"),
    jest = _require2.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('ButtonIcon', function () {
  it('devrait rendre une icône à gauche si un nom est fourni', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.LeftIcon, {
        name: "arrow-back",
        size: 24,
        color: "blue"
      })),
      getByTestId = _render.getByTestId;
    var icon = getByTestId('icon-arrow-back');
    expect(icon).toBeTruthy();
    expect(icon.props.size).toBe(24);
    expect(icon.props.color).toBe('blue');
  });
  it('ne devrait pas rendre d\'icône à gauche si le nom n\'est pas fourni', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.LeftIcon, {})),
      queryByTestId = _render2.queryByTestId;
    expect(queryByTestId('icon-arrow-back')).toBeNull();
  });
  it('devrait rendre une icône à droite si un nom est fourni', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.RightIcon, {
        name: "arrow-forward",
        size: 20,
        color: "red"
      })),
      getByTestId = _render3.getByTestId;
    var icon = getByTestId('icon-arrow-forward');
    expect(icon).toBeTruthy();
    expect(icon.props.size).toBe(20);
    expect(icon.props.color).toBe('red');
  });
  it('ne devrait pas rendre d\'icône à droite si le nom n\'est pas fourni', function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.RightIcon, {})),
      queryByTestId = _render4.queryByTestId;
    expect(queryByTestId('icon-arrow-forward')).toBeNull();
  });
  it('devrait rendre une icône seule si un nom est fourni', function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.IconOnly, {
        name: "close",
        size: 30,
        color: "black"
      })),
      getByTestId = _render5.getByTestId;
    var icon = getByTestId('icon-close');
    expect(icon).toBeTruthy();
    expect(icon.props.size).toBe(30);
    expect(icon.props.color).toBe('black');
  });
  it('ne devrait pas rendre d\'icône seule si le nom n\'est pas fourni', function () {
    var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonIcon.IconOnly, {})),
      queryByTestId = _render6.queryByTestId;
    expect(queryByTestId('icon-close')).toBeNull();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,