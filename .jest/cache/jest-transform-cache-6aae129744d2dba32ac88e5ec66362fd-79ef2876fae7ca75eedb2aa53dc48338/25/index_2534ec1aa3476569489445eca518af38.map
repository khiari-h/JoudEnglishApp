{"version":3,"names":["_react","require","_reactNative","_native","_propTypes","_interopRequireDefault","_Container","_SpellingHeader","_SpellingProgress","_SpellingCard","_SpellingActions","_useSpelling2","_useLastActivity2","_spellingDataHelper","_style","_jsxRuntime","SpellingExercise","_ref","route","_ref2","params","_ref2$level","level","_ref2$exerciseType","exerciseType","navigation","useNavigation","styles","createStyles","_useLastActivity","useLastActivity","saveActivity","levelColor","getLevelColor","exerciseTypeName","spellingData","useMemo","getSpellingData","error","_useSpelling","useSpelling","currentExerciseIndex","userInput","showHint","showFeedback","isCorrect","loaded","currentExercise","totalExercises","setUserInput","toggleHint","checkAnswer","handleNext","retryExercise","isLastExercise","hasValidData","useEffect","title","type","metadata","word","totalWords","content","wordToCorrect","console","handleBack","useCallback","goBack","jsxs","default","children","jsx","onBack","View","style","loadingContainer","ActivityIndicator","size","color","testID","Text","loadingText","errorContainer","errorText","onUserInputChange","onHintToggle","onCheckAnswer","onNext","onRetry","_default","exports","propTypes","PropTypes","shape","string","isRequired"],"sources":["index.js"],"sourcesContent":["// SpellingExercise/index.js - VERSION PROPRE\r\n\r\nimport { useMemo, useEffect, useCallback } from \"react\";\r\nimport { View, ActivityIndicator, Text } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from \"../../../components/layout/Container\";\r\nimport SpellingHeader from \"./SpellingHeader\";\r\nimport SpellingProgress from \"./SpellingProgress\";\r\nimport SpellingCard from \"./SpellingCard\";\r\nimport SpellingActions from \"./SpellingActions\";\r\n\r\nimport useSpelling from \"./hooks/useSpelling\";\r\nimport useLastActivity from \"../../../hooks/useLastActivity\";\r\nimport { getSpellingData, getLevelColor } from \"../../../utils/spelling/spellingDataHelper\";\r\nimport createStyles from \"./style\";\r\n\r\nconst SpellingExercise = ({ route }) => {\r\n  const { level = \"1\", exerciseType = \"correction\" } = route.params || {};\r\n  const navigation = useNavigation();\r\n  const styles = createStyles();\r\n  const { saveActivity } = useLastActivity();\r\n\r\n  const levelColor = getLevelColor(level);\r\n\r\n  // Définir exerciseTypeName pour tout le composant\r\n  const exerciseTypeName = exerciseType === \"correction\" ? \"Correction\" : \r\n                          exerciseType === \"rules\" ? \"Règles\" : \"Homophones\";\r\n  \r\n  const spellingData = useMemo(() => {\r\n    try {\r\n      return getSpellingData(level, exerciseType);\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }, [level, exerciseType]);\r\n\r\n  const {\r\n    currentExerciseIndex,\r\n    userInput,\r\n    showHint,\r\n    showFeedback,\r\n    isCorrect,\r\n    loaded,\r\n    currentExercise,\r\n    totalExercises,\r\n    setUserInput,\r\n    toggleHint,\r\n    checkAnswer,\r\n    handleNext,\r\n    retryExercise,\r\n    isLastExercise,\r\n    hasValidData,\r\n  } = useSpelling(spellingData, level, exerciseType);\r\n\r\n  useEffect(() => {\r\n    if (loaded && hasValidData && currentExercise) {\r\n      try {\r\n        saveActivity({\r\n          title: `Orthographe ${exerciseTypeName}`,\r\n          level,\r\n          type: \"spelling\",\r\n          metadata: {\r\n            word: currentExerciseIndex,           // ✅ Index actuel (pour progression)\r\n            totalWords: totalExercises,           // ✅ Total (pour progression)\r\n            exerciseType,\r\n            content: currentExercise.wordToCorrect || `Exercice ${currentExerciseIndex + 1}` // ✅ Contenu de l'exercice\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error saving activity:\", error);\r\n      }\r\n    }\r\n  }, [loaded, hasValidData, currentExercise, level, exerciseType, currentExerciseIndex, totalExercises, saveActivity]);\r\n\r\n  const handleBack = useCallback(() => navigation.goBack(), [navigation]);\r\n\r\n  if (!loaded) {\r\n    return (\r\n      <Container>\r\n        <SpellingHeader\r\n          title={`Orthographe ${exerciseTypeName}`}\r\n          level={level}\r\n          levelColor={levelColor}\r\n          onBack={handleBack}\r\n        />\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color={levelColor} testID=\"activity-indicator\" />\r\n          <Text style={styles.loadingText}>Chargement des exercices...</Text>\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!hasValidData) {\r\n    return (\r\n      <Container>\r\n        <SpellingHeader\r\n          title={`Orthographe ${exerciseTypeName}`}\r\n          level={level}\r\n          levelColor={levelColor}\r\n          onBack={handleBack}\r\n        />\r\n        <View style={styles.errorContainer}>\r\n          <Text style={styles.errorText}>Aucune donnée trouvée pour ce niveau.</Text>\r\n          <Text style={styles.errorText}>Veuillez réessayer plus tard.</Text>\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SpellingHeader\r\n        title={`Orthographe ${exerciseTypeName}`}\r\n        level={level}\r\n        levelColor={levelColor}\r\n        onBack={handleBack}\r\n      />\r\n      <SpellingProgress\r\n        currentExerciseIndex={currentExerciseIndex + 1}\r\n        totalExercises={totalExercises}\r\n        levelColor={levelColor}\r\n      />\r\n      <SpellingCard\r\n        currentExercise={currentExercise}\r\n        userInput={userInput}\r\n        showHint={showHint}\r\n        showFeedback={showFeedback}\r\n        isCorrect={isCorrect}\r\n        onUserInputChange={setUserInput}\r\n        onHintToggle={toggleHint}\r\n        onCheckAnswer={checkAnswer}\r\n        onNext={handleNext}\r\n        onRetry={retryExercise}\r\n        isLastExercise={isLastExercise}\r\n        levelColor={levelColor}\r\n      />\r\n      <SpellingActions\r\n        isCorrect={isCorrect}\r\n        onNext={handleNext}\r\n        onRetry={retryExercise}\r\n        isLastExercise={isLastExercise}\r\n        levelColor={levelColor}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SpellingExercise;\r\n\r\n// ✅ Ajout de la validation des props\r\nSpellingExercise.propTypes = {\r\n  route: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      level: PropTypes.string,\r\n      exerciseType: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};"],"mappings":"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","ignoreList":[]}