45859806853bdefdb85d34691f9ce88b
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = exports.default = {
  title: "C2 Mastery Spelling Correction",
  description: "Perfect your spelling with the most sophisticated and archaic terms at C2 mastery level",
  exercises: [{
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "chrysanthemum",
    correctAnswer: "chrysanthemum",
    errorCount: 0,
    hasHint: true,
    hint: "This botanical term is correctly spelled with Greek origins 'chrys-' (gold) and 'anthemum' (flower).",
    explanation: "Chrysanthemum (chry-san-the-mum) is correct. Greek 'chrysos' (gold) + 'anthemon' (flower)."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "onomatopoeia",
    correctAnswer: "onomatopoeia",
    errorCount: 0,
    hasHint: true,
    hint: "This literary term is correctly spelled with Greek roots meaning 'name-making'.",
    explanation: "Onomatopoeia (on-o-mat-o-poe-ia) is correct. Greek 'onoma' (name) + 'poiein' (to make)."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "prestidigitation",
    correctAnswer: "prestidigitation",
    errorCount: 0,
    hasHint: true,
    hint: "This word for 'sleight of hand' is correctly spelled with Latin origins.",
    explanation: "Prestidigitation (pres-ti-dig-i-ta-tion) is correct. Latin 'praesto' (quick) + 'digitus' (finger)."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "perspicacious",
    correctAnswer: "perspicacious",
    errorCount: 0,
    hasHint: true,
    hint: "This adjective meaning 'having keen insight' is correctly spelled.",
    explanation: "Perspicacious (per-spi-ca-cious) is correct. Latin 'perspicax' meaning 'sharp-sighted'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "schadenfreude",
    correctAnswer: "Schadenfreude",
    errorCount: 1,
    hasHint: true,
    hint: "This German borrowing should be capitalized as it's a noun in German.",
    explanation: "Schadenfreude: German compound noun, capitalized. 'Schaden' (harm) + 'Freude' (joy)."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "Weltanschauung",
    correctAnswer: "Weltanschauung",
    errorCount: 0,
    hasHint: true,
    hint: "This German philosophical term is correctly spelled and capitalized.",
    explanation: "Weltanschauung is correct. German 'Welt' (world) + 'Anschauung' (view/perception)."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "zeitgeist",
    correctAnswer: "Zeitgeist",
    errorCount: 1,
    hasHint: true,
    hint: "This German term should be capitalized.",
    explanation: "Zeitgeist: German 'Zeit' (time) + 'Geist' (spirit), meaning 'spirit of the times'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "boullabaisse",
    correctAnswer: "bouillabaisse",
    errorCount: 1,
    hasHint: true,
    hint: "This French culinary term has 'ui' not 'ou' in the middle.",
    explanation: "Bouillabaisse: bou-ill-a-baisse. French fish stew from Provence, note the 'ui' pattern."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "hors d'oeuvres",
    correctAnswer: "hors d'oeuvres",
    errorCount: 0,
    hasHint: true,
    hint: "This French culinary term is correctly spelled with apostrophe and 'oe'.",
    explanation: "Hors d'oeuvres is correct. French 'outside of works', meaning appetizers served before main meal."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "reconnaissance",
    correctAnswer: "reconnaissance",
    errorCount: 0,
    hasHint: true,
    hint: "This military term from French is correctly spelled with double 's'.",
    explanation: "Reconnaissance (re-con-nais-sance) is correct. French military term meaning 'recognition/survey'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "rapprochement",
    correctAnswer: "rapprochement",
    errorCount: 0,
    hasHint: true,
    hint: "This diplomatic term from French is correctly spelled with double 'p'.",
    explanation: "Rapprochement (rap-proche-ment) is correct. French diplomatic term meaning 'drawing together'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "sine qua non",
    correctAnswer: "sine qua non",
    errorCount: 0,
    hasHint: true,
    hint: "This Latin phrase meaning 'without which not' is correctly spelled.",
    explanation: "Sine qua non is correct. Latin phrase meaning 'an essential condition; indispensable'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "connexion",
    correctAnswer: "connexion",
    errorCount: 0,
    hasHint: true,
    hint: "This is the archaic British spelling of 'connection' - still correct in historical contexts.",
    explanation: "Connexion is the traditional British spelling, now largely replaced by 'connection'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "shew",
    correctAnswer: "shew",
    errorCount: 0,
    hasHint: true,
    hint: "This is an archaic form of 'show' - correct in historical or literary contexts.",
    explanation: "Shew is an archaic form of 'show', found in older texts like the King James Bible."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "publick",
    correctAnswer: "publick",
    errorCount: 0,
    hasHint: true,
    hint: "This is an archaic spelling of 'public' with final 'k' - historically correct.",
    explanation: "Publick is an 18th-century spelling of 'public', seen in historical documents."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "musick",
    correctAnswer: "musick",
    errorCount: 0,
    hasHint: true,
    hint: "This archaic spelling of 'music' with final 'k' is historically accurate.",
    explanation: "Musick is an archaic spelling of 'music', common in 17th-18th century texts."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "ye olde",
    correctAnswer: "ye olde",
    errorCount: 0,
    hasHint: true,
    hint: "This pseudo-archaic phrase is correctly spelled, though historically inaccurate.",
    explanation: "Ye olde is correctly spelled as a pseudo-archaic phrase, though 'ye' was never 'the' historically."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "whilst",
    correctAnswer: "whilst",
    errorCount: 0,
    hasHint: true,
    hint: "This British variant of 'while' is correctly spelled.",
    explanation: "Whilst is correct British English, equivalent to 'while' in American English."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "amongst",
    correctAnswer: "amongst",
    errorCount: 0,
    hasHint: true,
    hint: "This British variant of 'among' is correctly spelled.",
    explanation: "Amongst is correct British English, equivalent to 'among' in American English."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "towards",
    correctAnswer: "towards",
    errorCount: 0,
    hasHint: true,
    hint: "This British variant of 'toward' is correctly spelled.",
    explanation: "Towards is correct British English, while 'toward' is preferred in American English."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "afterwards",
    correctAnswer: "afterwards",
    errorCount: 0,
    hasHint: true,
    hint: "This British variant of 'afterward' is correctly spelled.",
    explanation: "Afterwards is correct British English, while 'afterward' is American preference."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "grey",
    correctAnswer: "grey",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling of 'gray' is correctly spelled.",
    explanation: "Grey is correct British spelling, while 'gray' is American spelling."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "doppelgänger",
    correctAnswer: "doppelgänger",
    errorCount: 0,
    hasHint: true,
    hint: "This German term is correctly spelled with umlaut 'ä'.",
    explanation: "Doppelgänger is correct. German 'doppel' (double) + 'gänger' (walker), meaning double/lookalike."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "kindergarten",
    correctAnswer: "Kindergarten",
    errorCount: 1,
    hasHint: true,
    hint: "This German educational term should be capitalized.",
    explanation: "Kindergarten: German 'Kinder' (children) + 'Garten' (garden), should be capitalized as German noun."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "laissez-faire",
    correctAnswer: "laissez-faire",
    errorCount: 0,
    hasHint: true,
    hint: "This French economic term is correctly spelled with hyphens.",
    explanation: "Laissez-faire is correct. French 'laissez' (let) + 'faire' (do), meaning non-interference policy."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "savoir-faire",
    correctAnswer: "savoir-faire",
    errorCount: 0,
    hasHint: true,
    hint: "This French term is correctly spelled with hyphen.",
    explanation: "Savoir-faire is correct. French 'savoir' (to know) + 'faire' (to do), meaning social skill."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "vis-à-vis",
    correctAnswer: "vis-à-vis",
    errorCount: 0,
    hasHint: true,
    hint: "This French term is correctly spelled with grave accent and hyphens.",
    explanation: "Vis-à-vis is correct. French 'face-to-face', used to mean 'in relation to' or 'compared with'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "tête-à-tête",
    correctAnswer: "tête-à-tête",
    errorCount: 0,
    hasHint: true,
    hint: "This French term is correctly spelled with circumflex and grave accents.",
    explanation: "Tête-à-tête is correct. French 'head-to-head', meaning private conversation between two people."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "déjà vu",
    correctAnswer: "déjà vu",
    errorCount: 0,
    hasHint: true,
    hint: "This French term is correctly spelled with grave accent.",
    explanation: "Déjà vu is correct. French 'already seen', the feeling of having experienced something before."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "coup de grâce",
    correctAnswer: "coup de grâce",
    errorCount: 0,
    hasHint: true,
    hint: "This French term is correctly spelled with circumflex accent.",
    explanation: "Coup de grâce is correct. French 'stroke of mercy', meaning finishing blow or decisive action."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "pièce de résistance",
    correctAnswer: "pièce de résistance",
    errorCount: 0,
    hasHint: true,
    hint: "This French culinary term is correctly spelled with grave and acute accents.",
    explanation: "Pièce de résistance is correct. French 'piece of resistance', meaning the main course or highlight."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "raison d'être",
    correctAnswer: "raison d'être",
    errorCount: 0,
    hasHint: true,
    hint: "This French philosophical term is correctly spelled with circumflex.",
    explanation: "Raison d'être is correct. French 'reason for being', meaning fundamental purpose or justification."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "pneumonoultramicroscopicsilicovolcanoconios",
    correctAnswer: "pneumonoultramicroscopicsilicovolcanoconiosiss",
    errorCount: 1,
    hasHint: true,
    hint: "This extremely long medical term needs 'is' at the end for the disease suffix.",
    explanation: "Pneumonoultramicroscopicsilicovolcanoconiosis: longest word in English, a lung disease from silica dust."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "floccinaucinihilipilification",
    correctAnswer: "floccinaucinihilipilification",
    errorCount: 0,
    hasHint: true,
    hint: "This Latin-derived word meaning 'estimating as worthless' is correctly spelled.",
    explanation: "Floccinaucinihilipilification is correct. Latin compound meaning 'the action of estimating as worthless'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "antidisestablishmentarianism",
    correctAnswer: "antidisestablishmentarianism",
    errorCount: 0,
    hasHint: true,
    hint: "This political term opposing church disestablishment is correctly spelled.",
    explanation: "Antidisestablishmentarianism is correct. Opposition to the disestablishment of the Church of England."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "hippopotomonstrosesquippedaliophobia",
    correctAnswer: "hippopotomonstrosesquippedaliophobia",
    errorCount: 0,
    hasHint: true,
    hint: "This ironic term for fear of long words is correctly spelled.",
    explanation: "Hippopotomonstrosesquippedaliophobia is correct. Humorous term for fear of long words."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "sesquipedalian",
    correctAnswer: "sesquipedalian",
    errorCount: 0,
    hasHint: true,
    hint: "This term meaning 'characterized by long words' is correctly spelled.",
    explanation: "Sesquipedalian is correct. Latin 'sesqui' (one and a half) + 'pedalis' (foot), meaning using long words."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "supercalifragilisticexpialidocious",
    correctAnswer: "supercalifragilisticexpialidocious",
    errorCount: 0,
    hasHint: true,
    hint: "This coined word from Mary Poppins is correctly spelled as created.",
    explanation: "Supercalifragilisticexpialidocious is correct as coined in the 1964 Disney film Mary Poppins."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "psychopharmacological",
    correctAnswer: "psychopharmacological",
    errorCount: 0,
    hasHint: true,
    hint: "This medical term combining psychology and pharmacology is correctly spelled.",
    explanation: "Psychopharmacological is correct. Relating to drugs that affect the mind and behavior."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "electroencephalography",
    correctAnswer: "electroencephalography",
    errorCount: 0,
    hasHint: true,
    hint: "This medical term for brain wave recording is correctly spelled.",
    explanation: "Electroencephalography is correct. Greek 'electro' + 'encephalo' (brain) + 'graphy' (recording)."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "deoxyribonucleicacid",
    correctAnswer: "deoxyribonucleic acid",
    errorCount: 1,
    hasHint: true,
    hint: "This biochemical term (DNA) should have a space between 'deoxyribonucleic' and 'acid'.",
    explanation: "Deoxyribonucleic acid (DNA) is correctly spelled with space. The full name for DNA."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "methionylthreonylthreonyl...isoleucine",
    correctAnswer: "methionylthreonylthreonylglutaminylarginyl...isoleucine",
    errorCount: 1,
    hasHint: true,
    hint: "This chemical name for titin protein needs all amino acid components listed.",
    explanation: "The full chemical name for titin protein has 189,819 letters - the longest word in any language."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "doughnut",
    correctAnswer: "doughnut",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling of 'donut' is correctly spelled.",
    explanation: "Doughnut is the traditional British spelling, while 'donut' is American commercial spelling."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "programme",
    correctAnswer: "programme",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling is correct for TV shows, events, etc.",
    explanation: "Programme is British spelling for TV/radio shows, events. 'Program' is for computer programs."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "tyre",
    correctAnswer: "tyre",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling of 'tire' (wheel covering) is correct.",
    explanation: "Tyre is British spelling for wheel covering. American spelling is 'tire'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "kerb",
    correctAnswer: "kerb",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling of 'curb' (street edge) is correct.",
    explanation: "Kerb is British spelling for street edge. American spelling is 'curb'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "plough",
    correctAnswer: "plough",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling of 'plow' is correctly spelled.",
    explanation: "Plough is British spelling for farming implement. American spelling is 'plow'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "cheque",
    correctAnswer: "cheque",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling for bank document is correct.",
    explanation: "Cheque is British spelling for bank payment document. American spelling is 'check'."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "colour",
    correctAnswer: "colour",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling with 'ou' is correct.",
    explanation: "Colour is British spelling. American spelling drops the 'u': color."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "honour",
    correctAnswer: "honour",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling with 'ou' is correct.",
    explanation: "Honour is British spelling. American spelling drops the 'u': honor."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "favour",
    correctAnswer: "favour",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling with 'ou' is correct.",
    explanation: "Favour is British spelling. American spelling drops the 'u': favor."
  }, {
    type: "correction",
    instruction: "Correct the spelling mistake",
    wordToCorrect: "realise",
    correctAnswer: "realise",
    errorCount: 0,
    hasHint: true,
    hint: "This British spelling with 'ise' is correct.",
    explanation: "Realise is British spelling with 'ise'. American spelling uses 'ize': realize."
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,