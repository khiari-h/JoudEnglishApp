{"version":3,"names":["_reactNative","require","_expoLinearGradient","_style","_interopRequireDefault","_jsxRuntime","SpellingProgress","_ref","_ref$exercises","exercises","_ref$completedExercis","completedExercises","_ref$levelColor","levelColor","styles","createStyles","progressData","useMemo","totalExercises","length","completedCount","progress","Math","round","jsx","View","style","container","children","jsxs","LinearGradient","colors","start","x","y","end","gradient","header","Text","title","stats","color","progressBarContainer","progressBarTrack","backgroundColor","progressBarFill","width","percentage","_default","exports","default"],"sources":["index.js"],"sourcesContent":["// SpellingProgress/index.js - VERSION ULTRA-SIMPLE\r\n\r\nimport { View, Text, useMemo } from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * 📊 SpellingProgress - VERSION ULTRA-SIMPLE\r\n * ✅ Juste une progress bar basique\r\n * ❌ Enlevé : expandable, détails par type, complexité\r\n * \r\n * AFFICHE :\r\n * - Progress bar visuelle\r\n * - \"X / Y exercices\"\r\n * - Pourcentage\r\n */\r\nconst SpellingProgress = ({\r\n  exercises = [],\r\n  completedExercises = [],\r\n  levelColor = \"#3b82f6\",\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n\r\n  // =================== CALCULS SIMPLES ===================\r\n  \r\n  const progressData = useMemo(() => {\r\n    const totalExercises = exercises.length;\r\n    const completedCount = completedExercises.length;\r\n    const progress = totalExercises > 0 ? Math.round((completedCount / totalExercises) * 100) : 0;\r\n\r\n    return {\r\n      totalExercises,\r\n      completedCount,\r\n      progress\r\n    };\r\n  }, [exercises, completedExercises]);\r\n\r\n  const { totalExercises, completedCount, progress } = progressData;\r\n\r\n  // =================== RENDER ===================\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <LinearGradient\r\n        colors={[`${levelColor}08`, `${levelColor}04`, 'transparent']}\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1, y: 1 }}\r\n        style={styles.gradient}\r\n      >\r\n        \r\n        {/* Header avec titre et stats */}\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>Progression</Text>\r\n          <Text style={[styles.stats, { color: levelColor }]}>\r\n            {completedCount}/{totalExercises} exercices\r\n          </Text>\r\n        </View>\r\n\r\n        {/* Progress bar */}\r\n        <View style={styles.progressBarContainer}>\r\n          <View style={[styles.progressBarTrack, { backgroundColor: `${levelColor}20` }]}>\r\n            <View \r\n              style={[\r\n                styles.progressBarFill,\r\n                { \r\n                  backgroundColor: levelColor,\r\n                  width: `${progress}%`\r\n                }\r\n              ]}\r\n            />\r\n          </View>\r\n          \r\n          {/* Pourcentage */}\r\n          <Text style={[styles.percentage, { color: levelColor }]}>\r\n            {progress}%\r\n          </Text>\r\n        </View>\r\n\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SpellingProgress;"],"mappings":"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","ignoreList":[]}