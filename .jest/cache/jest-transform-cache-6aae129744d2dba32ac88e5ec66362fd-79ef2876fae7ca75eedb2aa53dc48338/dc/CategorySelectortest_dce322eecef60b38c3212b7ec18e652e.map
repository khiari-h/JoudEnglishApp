{"version":3,"names":["_getJestObj","mock","React","require","ScrollView","jest","requireActual","scrollToSpy","fn","Object","assign","default","forwardRef","props","ref","useImperativeHandle","scrollTo","getNode","_jsxRuntime","jsx","_interopRequireDefault","_asyncToGenerator2","_react","_reactNative","_reactNative2","_CategorySelector","_require","useFakeTimers","spyOn","Animated","mockImplementation","value","config","start","callback","act","finished","stop","describe","mockCategories","id","name","stableProps","categories","selectedCategory","onSelectCategory","renderCategorySelector","arguments","length","undefined","render","beforeEach","clearAllMocks","afterEach","useRealTimers","it","expect","toBeTruthy","_renderCategorySelect","getByText","forEach","category","_renderCategorySelect2","getAllByRole","categoryNames","map","element","accessibilityLabel","toEqual","cat","_renderCategorySelect3","queryByText","toBeNull","_renderCategorySelect4","getByRole","selectedPill","toHaveAccessibilityState","selected","mockOnSelect","_renderCategorySelect5","fireEvent","press","toHaveBeenCalledTimes","toHaveBeenCalledWith","_renderCategorySelect6","not","toHaveBeenCalled","_renderCategorySelect7","categoriesToTest","filter","_renderCategorySelect8","categoryPill","_renderCategorySelect9","_renderCategorySelect0","advanceTimersByTime","_renderCategorySelect1","waitFor","_renderCategorySelect10","rerender","_renderCategorySelect11","_renderCategorySelect12","_renderCategorySelect13","_renderCategorySelect14","toThrow","specialCategories","_renderCategorySelect15","longNameCategories","_renderCategorySelect16","renderSpy","TestWrapper","_render","mockClear","manyCategories","Array","from","_","i","startTime","Date","now","_renderCategorySelect17","queryAllByText","endTime","toBeLessThan","categoryElements","toHaveLength","_renderCategorySelect18","getByLabelText","_renderCategorySelect19","buttons"],"sources":["CategorySelector.test.js"],"sourcesContent":["// __tests__/components/exercise-common/CategorySelector.test.js\nimport React from 'react';\nimport { render, fireEvent, act, waitFor } from '@testing-library/react-native';\nimport { Animated, ScrollView } from 'react-native';\n\n// Importez le composant d'origine, sans le mocker ici\nimport CategorySelector from '../../../src/components/exercise-common/CategorySelector';\n\n// --- Définition des Mocks pour résoudre les problèmes de rendu/animation ---\njest.useFakeTimers();\n\n// Mocker Animated.timing pour simuler un délai\njest.spyOn(Animated, 'timing').mockImplementation((value, config) => {\n  return {\n    start: (callback) => {\n      // Pour les tests, on résout l'animation instantanément\n      act(() => {\n        if (callback) {\n          callback({ finished: true });\n        }\n      });\n    },\n    stop: jest.fn(),\n  };\n});\n\n// Mocker ScrollView pour gérer la ref et la fonction scrollTo\njest.mock('react-native/Libraries/Components/ScrollView/ScrollView', () => {\n  const React = require('react');\n  const ScrollView = jest.requireActual('react-native/Libraries/Components/ScrollView/ScrollView');\n  // Le spy est maintenant exposé directement par le mock\n  const scrollToSpy = jest.fn();\n  return {\n    ...ScrollView,\n    default: React.forwardRef((props, ref) => {\n      React.useImperativeHandle(ref, () => ({\n        scrollTo: scrollToSpy,\n        getNode: () => ({ scrollTo: scrollToSpy }),\n      }));\n      return <ScrollView {...props} />;\n    }),\n    scrollToSpy, // Expose le spy pour que les tests puissent y accéder\n  };\n});\n\ndescribe('CategorySelector Component', () => {\n  const mockCategories = [\n    { id: '1', name: 'Fruits' },\n    { id: '2', name: 'Vegetables' },\n    { id: '3', name: 'Dairy Products' },\n    { id: '4', name: 'Meat & Fish' },\n    { id: '5', name: 'Beverages' },\n  ];\n\n  const stableProps = {\n    categories: mockCategories,\n    selectedCategory: '1',\n    onSelectCategory: jest.fn(),\n  };\n\n  const renderCategorySelector = (props = {}) => {\n    return render(<CategorySelector {...stableProps} {...props} />);\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  afterEach(() => {\n    jest.useRealTimers();\n  });\n\n  // --- RENDERING ---\n  describe('Rendering', () => {\n    it('should render without crashing', () => {\n      expect(renderCategorySelector()).toBeTruthy();\n    });\n    it('should render all categories correctly', () => {\n      const { getByText } = renderCategorySelector();\n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n    it('should render categories in the correct order', () => {\n      const { getAllByRole } = renderCategorySelector();\n      const categoryNames = getAllByRole('button').map(element => element.props.accessibilityLabel);\n      expect(categoryNames).toEqual(mockCategories.map(cat => cat.name));\n    });\n    it('should handle empty categories array gracefully', () => {\n      const { queryByText } = renderCategorySelector({ categories: [] });\n      mockCategories.forEach(category => {\n        expect(queryByText(category.name)).toBeNull();\n      });\n    });\n    it('should highlight the selected category visually', () => {\n      const { getByRole } = renderCategorySelector({ selectedCategory: '2' });\n      const selectedPill = getByRole('button', { name: 'Vegetables' });\n      expect(selectedPill).toHaveAccessibilityState({ selected: true });\n    });\n  });\n\n  // --- USER INTERACTIONS ---\n  describe('User Interactions', () => {\n    it('should call onSelectCategory when a different category is pressed', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({\n        selectedCategory: '1',\n        onSelectCategory: mockOnSelect\n      });\n      fireEvent.press(getByText('Vegetables'));\n      expect(mockOnSelect).toHaveBeenCalledTimes(1);\n      expect(mockOnSelect).toHaveBeenCalledWith('2');\n    });\n    it('should not call onSelectCategory when the same category is pressed', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({\n        selectedCategory: '1',\n        onSelectCategory: mockOnSelect\n      });\n      fireEvent.press(getByText('Fruits'));\n      expect(mockOnSelect).not.toHaveBeenCalled();\n    });\n    it('should call onSelectCategory with correct category id for each category', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({\n        selectedCategory: '1',\n        onSelectCategory: mockOnSelect\n      });\n      const categoriesToTest = mockCategories.filter(cat => cat.id !== '1');\n      categoriesToTest.forEach(category => {\n        fireEvent.press(getByText(category.name));\n        expect(mockOnSelect).toHaveBeenCalledWith(category.id);\n      });\n      expect(mockOnSelect).toHaveBeenCalledTimes(categoriesToTest.length);\n    });\n  });\n\n  // --- ANIMATIONS ---\n  describe('Animations', () => {\n    it('should trigger press animations correctly', () => {\n      const { getByText } = renderCategorySelector();\n      const categoryPill = getByText('Vegetables');\n      act(() => {\n        fireEvent(categoryPill, 'pressIn');\n        fireEvent(categoryPill, 'pressOut');\n      });\n      expect(categoryPill).toBeTruthy();\n    });\n    it('should handle rapid press interactions without crashing', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({ onSelectCategory: mockOnSelect });\n      const categoryPill = getByText('Vegetables');\n      act(() => {\n        fireEvent(categoryPill, 'pressIn');\n        fireEvent(categoryPill, 'pressOut');\n        fireEvent.press(categoryPill);\n        fireEvent(categoryPill, 'pressIn');\n        fireEvent(categoryPill, 'pressOut');\n      });\n      expect(mockOnSelect).toHaveBeenCalledWith('2');\n      expect(categoryPill).toBeTruthy();\n    });\n    it('should not trigger new animation if one is already in progress', () => {\n      const mockOnSelect = jest.fn();\n      const { getByText } = renderCategorySelector({ selectedCategory: '1', onSelectCategory: mockOnSelect });\n      \n      fireEvent.press(getByText('Vegetables'));\n      expect(mockOnSelect).toHaveBeenCalledTimes(1);\n      \n      act(() => {\n        jest.advanceTimersByTime(100);\n      });\n      \n      fireEvent.press(getByText('Dairy Products'));\n      \n      expect(mockOnSelect).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  // --- SCROLLING BEHAVIOR ---\n  describe('Scrolling Behavior', () => {\n    it('should scroll to selected category on mount', async () => {\n      const { getByText } = renderCategorySelector({ selectedCategory: '4' });\n      expect(getByText('Meat & Fish')).toBeTruthy();\n      \n      await waitFor(() => {\n        expect(ScrollView.scrollToSpy).toHaveBeenCalled();\n      });\n    });\n    it('should handle scrolling when selectedCategory changes', async () => {\n      const { rerender } = renderCategorySelector({ selectedCategory: '1' });\n      \n      rerender(\n        <CategorySelector \n          {...stableProps} \n          selectedCategory=\"5\" \n        />\n      );\n      \n      await waitFor(() => {\n        expect(ScrollView.scrollToSpy).toHaveBeenCalledTimes(1);\n      });\n    });\n  });\n\n  // --- EDGE CASES ---\n  describe('Edge Cases', () => {\n    it('should handle undefined selectedCategory gracefully', () => {\n      const { getByText } = renderCategorySelector({ selectedCategory: undefined });\n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n    it('should handle null selectedCategory gracefully', () => {\n      const { getByText } = renderCategorySelector({ selectedCategory: null });\n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n    it('should handle non-existent selectedCategory id', () => {\n      const { getByText } = renderCategorySelector({ selectedCategory: 'non-existent' });\n      mockCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n    it('should handle missing onSelectCategory prop gracefully', () => {\n      const { getByText } = renderCategorySelector({ onSelectCategory: undefined });\n      expect(() => {\n        fireEvent.press(getByText('Vegetables'));\n      }).not.toThrow();\n    });\n    it('should handle categories with special characters in names', () => {\n      const specialCategories = [\n        { id: '1', name: 'Café & Thé' },\n        { id: '2', name: 'Fruits & Légumes' },\n        { id: '3', name: 'Viande/Poisson' },\n      ];\n      const { getByText } = renderCategorySelector({ categories: specialCategories });\n      specialCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n    it('should handle very long category names', () => {\n      const longNameCategories = [\n        { id: '1', name: 'This is a very long category name that might cause layout issues' },\n        { id: '2', name: 'Short' },\n      ];\n      const { getByText } = renderCategorySelector({ categories: longNameCategories });\n      longNameCategories.forEach(category => {\n        expect(getByText(category.name)).toBeTruthy();\n      });\n    });\n  });\n\n  // --- PERFORMANCE ---\n  describe('Performance', () => {\n    it('should not re-render unnecessarily when props do not change', () => {\n      const renderSpy = jest.fn();\n      const TestWrapper = (props) => {\n        renderSpy();\n        return <CategorySelector {...props} />;\n      };\n      \n      const { rerender } = render(<TestWrapper {...stableProps} />);\n      \n      // La première fois, le composant est monté\n      expect(renderSpy).toHaveBeenCalledTimes(1);\n      renderSpy.mockClear();\n      \n      // On re-rend le composant avec les mêmes props\n      rerender(<TestWrapper {...stableProps} />);\n      \n      // On s'attend à ce qu'il ne soit pas re-rendu\n      expect(renderSpy).toHaveBeenCalledTimes(0);\n    });\n    it('should handle large number of categories efficiently', () => {\n      const manyCategories = Array.from({ length: 100 }, (_, i) => ({\n        id: `${i + 1}`,\n        name: `Category ${i + 1}`,\n      }));\n      const startTime = Date.now();\n      const { queryAllByText } = renderCategorySelector({ categories: manyCategories });\n      const endTime = Date.now();\n      expect(endTime - startTime).toBeLessThan(1000);\n      const categoryElements = queryAllByText(/^Category/);\n      expect(categoryElements).toHaveLength(100);\n    });\n  });\n\n  // --- ACCESSIBILITY ---\n  describe('Accessibility', () => {\n    it('should have proper accessibility labels', () => {\n      const { getByLabelText } = renderCategorySelector();\n      mockCategories.forEach(category => {\n        const element = getByLabelText(category.name);\n        expect(element).toBeTruthy();\n      });\n    });\n    it('should support screen reader navigation', () => {\n      const { getAllByRole } = renderCategorySelector();\n      const buttons = getAllByRole('button');\n      expect(buttons).toHaveLength(mockCategories.length);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}