{"version":3,"names":["_reactNative","require","_expoLinearGradient","_vectorIcons","_propTypes","_interopRequireDefault","_HeroCard","_ContentSection","_style","_react","_jsxRuntime","GrammarExerciseRenderer","_ref","exercise","selectedOption","setSelectedOption","inputText","setInputText","showFeedback","isCorrect","exerciseIndex","attempts","styles","createStyles","levelColor","handleChangeText1","useCallback","text","handleChangeText2","handleOptionPress","index","getOptionPressHandler","renderMultipleChoiceExercise","jsxs","View","style","container","children","jsx","default","content","question","fontSize","showUnderline","sentence","title","replace","backgroundColor","isItalic","showIcon","optionsSection","options","map","option","isCorrectOption","answer","isSelectedOption","TouchableOpacity","optionContainer","onPress","disabled","activeOpacity","LinearGradient","colors","start","x","y","end","optionGradient","optionInner","optionIconContainer","Ionicons","name","size","color","Text","optionText","correctOptionText","incorrectOptionText","selectedOptionText","renderFillBlankExercise","inputSection","TextInput","fillBlankInput","trim","toLowerCase","correctInput","incorrectInput","neutralInput","value","onChangeText","placeholder","editable","autoCapitalize","autoCorrect","renderTransformationExercise","transformationInput","multiline","type","propTypes","PropTypes","shape","string","isRequired","arrayOf","oneOfType","number","oneOf","func","bool","_default","exports"],"sources":["index.js"],"sourcesContent":["// GrammarExerciseRenderer/index.js - VERSION REFACTORIS√âE avec HeroCard (71 ‚Üí 50 lignes)\r\n\r\nimport { View, Text, TouchableOpacity, TextInput } from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport PropTypes from 'prop-types';\r\nimport HeroCard from \"../../../../components/ui/HeroCard\";\r\nimport ContentSection from \"../../../../components/ui/ContentSection\";\r\nimport createStyles from \"./style\";\r\nimport { useCallback } from 'react';\r\n\r\n/**\r\n * üéØ GrammarExerciseRenderer - Version Refactoris√©e avec composants g√©n√©riques\r\n * Utilise HeroCard pour la question principale\r\n * Design coh√©rent avec VocabularyWordCard et PhraseCard\r\n * 71 lignes ‚Üí 50 lignes (-30% de code)\r\n */\r\nconst GrammarExerciseRenderer = ({\r\n  exercise,\r\n  selectedOption,\r\n  setSelectedOption,\r\n  inputText,\r\n  setInputText,\r\n  showFeedback,\r\n  isCorrect,\r\n  exerciseIndex,\r\n  attempts,\r\n}) => {\r\n  if (!exercise) return null;\r\n\r\n  const styles = createStyles();\r\n  const levelColor = \"#3b82f6\"; // Couleur Grammar\r\n\r\n  // Remplace les fonctions fl√©ch√©es inline par des callbacks m√©moris√©s\r\n  const handleChangeText1 = useCallback((text) => {\r\n    if (!showFeedback) setInputText(text);\r\n  }, [showFeedback, setInputText]);\r\n\r\n  const handleChangeText2 = useCallback((text) => {\r\n    if (!showFeedback) setInputText(text);\r\n  }, [showFeedback, setInputText]);\r\n\r\n  const handleOptionPress = useCallback((index) => {\r\n    if (!showFeedback) setSelectedOption(index);\r\n  }, [showFeedback, setSelectedOption]);\r\n\r\n  // Handler stable pour chaque option\r\n  const getOptionPressHandler = useCallback(\r\n    (index) => () => handleOptionPress(index),\r\n    [handleOptionPress]\r\n  );\r\n\r\n  // Render pour un exercice √† choix multiples\r\n  const renderMultipleChoiceExercise = () => (\r\n    <View style={styles.container}>\r\n      {/* üéØ QUESTION H√âRO avec HeroCard g√©n√©rique */}\r\n      <HeroCard \r\n        content={exercise.question}\r\n        fontSize={24} // Adapt√© pour questions Grammar\r\n        levelColor={levelColor}\r\n        showUnderline\r\n      />\r\n\r\n      {/* üìù PHRASE EXEMPLE avec ContentSection */}\r\n      {exercise.sentence && (\r\n        <ContentSection\r\n          title=\"Complete the sentence\"\r\n          content={exercise.sentence.replace(\"___\", \"______\")}\r\n          levelColor={levelColor}\r\n          backgroundColor=\"#F8FAFC\"\r\n          isItalic\r\n          showIcon={false}\r\n        />\r\n      )}\r\n\r\n      {/* üé® OPTIONS avec styles optimis√©s */}\r\n      <View style={styles.optionsSection}>\r\n        {exercise.options.map((option, index) => {\r\n          const isCorrectOption = index === exercise.answer || option === exercise.answer;\r\n          const isSelectedOption = selectedOption === index;\r\n          \r\n          return (\r\n            <TouchableOpacity\r\n              key={option}\r\n              style={styles.optionContainer}\r\n              onPress={getOptionPressHandler(index)}\r\n              disabled={showFeedback && isCorrect}\r\n              activeOpacity={0.8}\r\n            >\r\n              <LinearGradient\r\n                colors={\r\n                  showFeedback && isCorrectOption\r\n                    ? ['#10B981', '#059669', '#047857'] // Vert pour correct\r\n                    : showFeedback && isSelectedOption && !isCorrectOption\r\n                    ? ['#EF4444', '#DC2626', '#B91C1C'] // Rouge pour incorrect\r\n                    : isSelectedOption\r\n                    ? [levelColor, `${levelColor}E6`, `${levelColor}CC`] // Bleu pour s√©lectionn√©\r\n                    : ['#FFFFFF', '#F8FAFC', '#F1F5F9'] // Neutre\r\n                }\r\n                start={{ x: 0, y: 0 }}\r\n                end={{ x: 1, y: 1 }}\r\n                style={styles.optionGradient}\r\n              >\r\n                <View style={styles.optionInner}>\r\n                  {/* Ic√¥ne de statut */}\r\n                  <View style={styles.optionIconContainer}>\r\n                    {showFeedback && isCorrectOption ? (\r\n                      <Ionicons name=\"checkmark-circle\" size={20} color=\"white\" />\r\n                    ) : showFeedback && isSelectedOption && !isCorrectOption ? (\r\n                      <Ionicons name=\"close-circle\" size={20} color=\"white\" />\r\n                    ) : isSelectedOption ? (\r\n                      <Ionicons name=\"radio-button-on\" size={20} color=\"white\" />\r\n                    ) : (\r\n                      <Ionicons name=\"radio-button-off\" size={20} color=\"#9CA3AF\" />\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Texte de l'option */}\r\n                  <Text style={[\r\n                    styles.optionText,\r\n                    showFeedback && isCorrectOption && styles.correctOptionText,\r\n                    showFeedback && isSelectedOption && !isCorrectOption && styles.incorrectOptionText,\r\n                    isSelectedOption && !showFeedback && styles.selectedOptionText,\r\n                  ]}>\r\n                    {option}\r\n                  </Text>\r\n                </View>\r\n              </LinearGradient>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  // Render pour un exercice √† remplir les blancs\r\n  const renderFillBlankExercise = () => (\r\n    <View style={styles.container}>\r\n      {/* üéØ QUESTION H√âRO avec HeroCard g√©n√©rique */}\r\n      <HeroCard \r\n        content={exercise.question}\r\n        fontSize={24}\r\n        levelColor={levelColor}\r\n        showUnderline\r\n      />\r\n\r\n      {/* üìù PHRASE AVEC INPUT int√©gr√© */}\r\n      <ContentSection\r\n        title=\"Complete the sentence\"\r\n        content={exercise.sentence || \"Fill in the blank\"}\r\n        levelColor={levelColor}\r\n        backgroundColor=\"#F8FAFC\"\r\n        showIcon={false}\r\n      />\r\n\r\n      {/* INPUT personnalis√© pour fill-in-the-blank */}\r\n      <View style={styles.inputSection}>\r\n        <TextInput\r\n          key={`fill-blank-input-${exerciseIndex}-${attempts}`}\r\n          style={[\r\n            styles.fillBlankInput,\r\n            showFeedback && inputText.trim().toLowerCase() === exercise.answer.toLowerCase()\r\n              ? styles.correctInput\r\n              : showFeedback && !isCorrect\r\n              ? styles.incorrectInput\r\n              : styles.neutralInput,\r\n          ]}\r\n          value={inputText}\r\n          onChangeText={handleChangeText1}\r\n          placeholder=\"Type your answer...\"\r\n          editable={!showFeedback || !isCorrect}\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  // Render pour un exercice de transformation\r\n  const renderTransformationExercise = () => (\r\n    <View style={styles.container}>\r\n      {/* üéØ QUESTION H√âRO avec HeroCard g√©n√©rique */}\r\n      <HeroCard \r\n        content={exercise.question}\r\n        fontSize={24}\r\n        levelColor={levelColor}\r\n        showUnderline\r\n      />\r\n\r\n      {/* üìù PHRASE ORIGINALE */}\r\n      {exercise.sentence && (\r\n        <ContentSection\r\n          title=\"Transform this sentence\"\r\n          content={exercise.sentence}\r\n          levelColor={levelColor}\r\n          backgroundColor=\"#F8FAFC\"\r\n          isItalic\r\n          showIcon={false}\r\n        />\r\n      )}\r\n\r\n      {/* INPUT de transformation styl√© */}\r\n      <View style={styles.inputSection}>\r\n        <TextInput\r\n          key={`transformation-input-${exerciseIndex}-${attempts}`}\r\n          style={[\r\n            styles.transformationInput,\r\n            showFeedback && inputText.trim().toLowerCase() === exercise.answer.toLowerCase()\r\n              ? styles.correctInput\r\n              : showFeedback && !isCorrect\r\n              ? styles.incorrectInput\r\n              : styles.neutralInput,\r\n          ]}\r\n          value={inputText}\r\n          onChangeText={handleChangeText2}\r\n          placeholder=\"Write your transformed sentence...\"\r\n          editable={!showFeedback || !isCorrect}\r\n          multiline\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  // D√©terminer quel type d'exercice afficher\r\n  if (exercise.type === \"fillInTheBlank\" && exercise.options) {\r\n    return renderMultipleChoiceExercise();\r\n  } else if (exercise.type === \"fillInTheBlank\") {\r\n    return renderFillBlankExercise();\r\n  } else if (exercise.type === \"transformation\") {\r\n    return renderTransformationExercise();\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// PropTypes pour le composant principal GrammarExerciseRenderer\r\nGrammarExerciseRenderer.propTypes = {\r\n  exercise: PropTypes.shape({\r\n    question: PropTypes.string.isRequired,\r\n    sentence: PropTypes.string,\r\n    options: PropTypes.arrayOf(PropTypes.string),\r\n    answer: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    type: PropTypes.oneOf(['fillInTheBlank', 'transformation']).isRequired,\r\n  }),\r\n  selectedOption: PropTypes.number,\r\n  setSelectedOption: PropTypes.func.isRequired,\r\n  inputText: PropTypes.string,\r\n  setInputText: PropTypes.func.isRequired,\r\n  showFeedback: PropTypes.bool,\r\n  isCorrect: PropTypes.bool,\r\n  exerciseIndex: PropTypes.number,\r\n  attempts: PropTypes.number,\r\n};\r\n\r\nexport default GrammarExerciseRenderer;"],"mappings":"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","ignoreList":[]}