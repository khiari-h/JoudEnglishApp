64fec613c8cb183891957aab68adebdd
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NativeReanimated = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _checkCppVersion = require("../platform-specific/checkCppVersion.js");
var _jsVersion = require("../platform-specific/jsVersion.js");
var _valueUnpacker = require("../valueUnpacker.js");
var _PlatformChecker = require("../PlatformChecker.js");
var _fabricUtils = require("../fabricUtils");
var _NativeReanimatedModule = _interopRequireDefault(require("../specs/NativeReanimatedModule.js"));
var _errors = require("../errors.js");
function assertSingleReanimatedInstance() {
  if (global._REANIMATED_VERSION_JS !== undefined && global._REANIMATED_VERSION_JS !== _jsVersion.jsVersion) {
    throw new _errors.ReanimatedError(`Another instance of Reanimated was detected.
See \`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#another-instance-of-reanimated-was-detected\` for more details. Previous: ${global._REANIMATED_VERSION_JS}, current: ${_jsVersion.jsVersion}.`);
  }
}
var NativeReanimated = exports.NativeReanimated = function () {
  function NativeReanimated() {
    (0, _classCallCheck2.default)(this, NativeReanimated);
    if (__DEV__) {
      assertSingleReanimatedInstance();
    }
    global._REANIMATED_VERSION_JS = _jsVersion.jsVersion;
    if (global.__reanimatedModuleProxy === undefined) {
      var valueUnpackerCode = (0, _valueUnpacker.getValueUnpackerCode)();
      _NativeReanimatedModule.default == null || _NativeReanimatedModule.default.installTurboModule(valueUnpackerCode);
    }
    if (global.__reanimatedModuleProxy === undefined) {
      throw new _errors.ReanimatedError(`Native part of Reanimated doesn't seem to be initialized.
See https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#native-part-of-reanimated-doesnt-seem-to-be-initialized for more details.`);
    }
    if (__DEV__) {
      (0, _checkCppVersion.checkCppVersion)();
    }
    this.InnerNativeModule = global.__reanimatedModuleProxy;
  }
  return (0, _createClass2.default)(NativeReanimated, [{
    key: "makeShareableClone",
    value: function makeShareableClone(value, shouldPersistRemote, nativeStateSource) {
      return this.InnerNativeModule.makeShareableClone(value, shouldPersistRemote, nativeStateSource);
    }
  }, {
    key: "scheduleOnUI",
    value: function scheduleOnUI(shareable) {
      return this.InnerNativeModule.scheduleOnUI(shareable);
    }
  }, {
    key: "executeOnUIRuntimeSync",
    value: function executeOnUIRuntimeSync(shareable) {
      return this.InnerNativeModule.executeOnUIRuntimeSync(shareable);
    }
  }, {
    key: "createWorkletRuntime",
    value: function createWorkletRuntime(name, initializer) {
      return this.InnerNativeModule.createWorkletRuntime(name, initializer);
    }
  }, {
    key: "scheduleOnRuntime",
    value: function scheduleOnRuntime(workletRuntime, shareableWorklet) {
      return this.InnerNativeModule.scheduleOnRuntime(workletRuntime, shareableWorklet);
    }
  }, {
    key: "registerSensor",
    value: function registerSensor(sensorType, interval, iosReferenceFrame, handler) {
      return this.InnerNativeModule.registerSensor(sensorType, interval, iosReferenceFrame, handler);
    }
  }, {
    key: "unregisterSensor",
    value: function unregisterSensor(sensorId) {
      return this.InnerNativeModule.unregisterSensor(sensorId);
    }
  }, {
    key: "registerEventHandler",
    value: function registerEventHandler(eventHandler, eventName, emitterReactTag) {
      return this.InnerNativeModule.registerEventHandler(eventHandler, eventName, emitterReactTag);
    }
  }, {
    key: "unregisterEventHandler",
    value: function unregisterEventHandler(id) {
      return this.InnerNativeModule.unregisterEventHandler(id);
    }
  }, {
    key: "getViewProp",
    value: function getViewProp(viewTag, propName, component, callback) {
      var shadowNodeWrapper;
      if ((0, _PlatformChecker.isFabric)()) {
        shadowNodeWrapper = (0, _fabricUtils.getShadowNodeWrapperFromRef)(component);
        return this.InnerNativeModule.getViewProp(shadowNodeWrapper, propName, callback);
      }
      return this.InnerNativeModule.getViewProp(viewTag, propName, callback);
    }
  }, {
    key: "configureLayoutAnimationBatch",
    value: function configureLayoutAnimationBatch(layoutAnimationsBatch) {
      this.InnerNativeModule.configureLayoutAnimationBatch(layoutAnimationsBatch);
    }
  }, {
    key: "setShouldAnimateExitingForTag",
    value: function setShouldAnimateExitingForTag(viewTag, shouldAnimate) {
      this.InnerNativeModule.setShouldAnimateExitingForTag(viewTag, shouldAnimate);
    }
  }, {
    key: "enableLayoutAnimations",
    value: function enableLayoutAnimations(flag) {
      this.InnerNativeModule.enableLayoutAnimations(flag);
    }
  }, {
    key: "configureProps",
    value: function configureProps(uiProps, nativeProps) {
      this.InnerNativeModule.configureProps(uiProps, nativeProps);
    }
  }, {
    key: "subscribeForKeyboardEvents",
    value: function subscribeForKeyboardEvents(handler, isStatusBarTranslucent, isNavigationBarTranslucent) {
      return this.InnerNativeModule.subscribeForKeyboardEvents(handler, isStatusBarTranslucent, isNavigationBarTranslucent);
    }
  }, {
    key: "unsubscribeFromKeyboardEvents",
    value: function unsubscribeFromKeyboardEvents(listenerId) {
      this.InnerNativeModule.unsubscribeFromKeyboardEvents(listenerId);
    }
  }]);
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiTmF0aXZlUmVhbmltYXRlZCIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX2NoZWNrQ3BwVmVyc2lvbiIsIl9qc1ZlcnNpb24iLCJfdmFsdWVVbnBhY2tlciIsIl9QbGF0Zm9ybUNoZWNrZXIiLCJfZmFicmljVXRpbHMiLCJfTmF0aXZlUmVhbmltYXRlZE1vZHVsZSIsIl9lcnJvcnMiLCJhc3NlcnRTaW5nbGVSZWFuaW1hdGVkSW5zdGFuY2UiLCJnbG9iYWwiLCJfUkVBTklNQVRFRF9WRVJTSU9OX0pTIiwidW5kZWZpbmVkIiwianNWZXJzaW9uIiwiUmVhbmltYXRlZEVycm9yIiwiZGVmYXVsdCIsIl9fREVWX18iLCJfX3JlYW5pbWF0ZWRNb2R1bGVQcm94eSIsInZhbHVlVW5wYWNrZXJDb2RlIiwiZ2V0VmFsdWVVbnBhY2tlckNvZGUiLCJSZWFuaW1hdGVkTW9kdWxlIiwiaW5zdGFsbFR1cmJvTW9kdWxlIiwiY2hlY2tDcHBWZXJzaW9uIiwiSW5uZXJOYXRpdmVNb2R1bGUiLCJrZXkiLCJtYWtlU2hhcmVhYmxlQ2xvbmUiLCJzaG91bGRQZXJzaXN0UmVtb3RlIiwibmF0aXZlU3RhdGVTb3VyY2UiLCJzY2hlZHVsZU9uVUkiLCJzaGFyZWFibGUiLCJleGVjdXRlT25VSVJ1bnRpbWVTeW5jIiwiY3JlYXRlV29ya2xldFJ1bnRpbWUiLCJuYW1lIiwiaW5pdGlhbGl6ZXIiLCJzY2hlZHVsZU9uUnVudGltZSIsIndvcmtsZXRSdW50aW1lIiwic2hhcmVhYmxlV29ya2xldCIsInJlZ2lzdGVyU2Vuc29yIiwic2Vuc29yVHlwZSIsImludGVydmFsIiwiaW9zUmVmZXJlbmNlRnJhbWUiLCJoYW5kbGVyIiwidW5yZWdpc3RlclNlbnNvciIsInNlbnNvcklkIiwicmVnaXN0ZXJFdmVudEhhbmRsZXIiLCJldmVudEhhbmRsZXIiLCJldmVudE5hbWUiLCJlbWl0dGVyUmVhY3RUYWciLCJ1bnJlZ2lzdGVyRXZlbnRIYW5kbGVyIiwiaWQiLCJnZXRWaWV3UHJvcCIsInZpZXdUYWciLCJwcm9wTmFtZSIsImNvbXBvbmVudCIsImNhbGxiYWNrIiwic2hhZG93Tm9kZVdyYXBwZXIiLCJpc0ZhYnJpYyIsImdldFNoYWRvd05vZGVXcmFwcGVyRnJvbVJlZiIsImNvbmZpZ3VyZUxheW91dEFuaW1hdGlvbkJhdGNoIiwibGF5b3V0QW5pbWF0aW9uc0JhdGNoIiwic2V0U2hvdWxkQW5pbWF0ZUV4aXRpbmdGb3JUYWciLCJzaG91bGRBbmltYXRlIiwiZW5hYmxlTGF5b3V0QW5pbWF0aW9ucyIsImZsYWciLCJjb25maWd1cmVQcm9wcyIsInVpUHJvcHMiLCJuYXRpdmVQcm9wcyIsInN1YnNjcmliZUZvcktleWJvYXJkRXZlbnRzIiwiaXNTdGF0dXNCYXJUcmFuc2x1Y2VudCIsImlzTmF2aWdhdGlvbkJhclRyYW5zbHVjZW50IiwidW5zdWJzY3JpYmVGcm9tS2V5Ym9hcmRFdmVudHMiLCJsaXN0ZW5lcklkIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL05hdGl2ZVJlYW5pbWF0ZWQvTmF0aXZlUmVhbmltYXRlZC50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFBQSxJQUFBQSxzQkFBQSxHQUFBQyxPQUFBO0FBQUFDLE1BQUEsQ0FBQUMsY0FBQSxDQUFBQyxPQUFBO0VBQUFDLEtBQUE7QUFBQTtBQUFBRCxPQUFBLENBQUFFLGdCQUFBO0FBQUEsSUFBQUMsZ0JBQUEsR0FBQVAsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFPLGFBQUEsR0FBQVIsc0JBQUEsQ0FBQUMsT0FBQTtBQU9aLElBQUFRLGdCQUFBLEdBQUFSLE9BQUE7QUFDQSxJQUFBUyxVQUFBLEdBQUFULE9BQUE7QUFFQSxJQUFBVSxjQUFBLEdBQUFWLE9BQUE7QUFDQSxJQUFBVyxnQkFBQSxHQUFBWCxPQUFBO0FBRUEs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