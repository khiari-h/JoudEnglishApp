{"version":3,"names":["ScrollView","TouchableOpacity","Text","styles","useCallback","jsx","_jsx","cov_1iepuvd8ce","s","ConversationSuggestions","_ref","suggestions","onPressSuggestion","levelColor","f","b","length","handleSuggestionPress","suggestion","horizontal","showsHorizontalScrollIndicator","style","container","contentContainerStyle","contentContainer","children","map","suggestionBubble","borderColor","onPress","suggestionText","color"],"sources":["index.js"],"sourcesContent":["import { ScrollView, TouchableOpacity, Text } from 'react-native';\r\nimport styles from './style';\r\nimport { useCallback } from 'react';\r\n\r\n/**\r\n * Composant qui affiche les suggestions de messages que l'utilisateur peut envoyer\r\n * \r\n * @param {Array} suggestions - Liste des suggestions à afficher\r\n * @param {Function} onPressSuggestion - Fonction à appeler quand une suggestion est choisie\r\n * @param {string} levelColor - Couleur associée au niveau courant\r\n */\r\nconst ConversationSuggestions = ({ suggestions, onPressSuggestion, levelColor }) => {\r\n  // S'il n'y a pas de suggestions, ne rien afficher\r\n  if (!suggestions || suggestions.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const handleSuggestionPress = useCallback((suggestion) => () => onPressSuggestion(suggestion), [onPressSuggestion]);\r\n\r\n  return (\r\n    <ScrollView\r\n      horizontal\r\n      showsHorizontalScrollIndicator={false}\r\n      style={styles.container}\r\n      contentContainerStyle={styles.contentContainer}\r\n    >\r\n      {suggestions.map((suggestion) => (\r\n        <TouchableOpacity\r\n          key={suggestion}\r\n          style={[styles.suggestionBubble, { borderColor: levelColor }]}\r\n          onPress={handleSuggestionPress(suggestion)}\r\n        >\r\n          <Text style={[styles.suggestionText, { color: levelColor }]}>\r\n            {suggestion}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ConversationSuggestions;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAU,EAAEC,gBAAgB,EAAEC,IAAI,QAAQ,cAAc;AACjE,OAAOC,MAAM,MAAM,SAAS;AAC5B,SAASC,WAAW,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAAC,cAAA,GAAAC,CAAA;AASpC,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAAC,IAAA,EAAuD;EAAA,IAAjDC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IAAEC,iBAAiB,GAAAF,IAAA,CAAjBE,iBAAiB;IAAEC,UAAU,GAAAH,IAAA,CAAVG,UAAU;EAAAN,cAAA,GAAAO,CAAA;EAAAP,cAAA,GAAAC,CAAA;EAE3E,IAAI,CAAAD,cAAA,GAAAQ,CAAA,WAACJ,WAAW,MAAAJ,cAAA,GAAAQ,CAAA,UAAIJ,WAAW,CAACK,MAAM,KAAK,CAAC,GAAE;IAAAT,cAAA,GAAAQ,CAAA;IAAAR,cAAA,GAAAC,CAAA;IAC5C,OAAO,IAAI;EACb,CAAC;IAAAD,cAAA,GAAAQ,CAAA;EAAA;EAED,IAAME,qBAAqB,IAAAV,cAAA,GAAAC,CAAA,OAAGJ,WAAW,CAAC,UAACc,UAAU,EAAK;IAAAX,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAC,CAAA;IAAA,mBAAM;MAAAD,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAC,CAAA;MAAA,OAAAI,iBAAiB,CAACM,UAAU,CAAC;IAAD,CAAC;EAAD,CAAC,EAAE,CAACN,iBAAiB,CAAC,CAAC;EAACL,cAAA,GAAAC,CAAA;EAEpH,OACEF,IAAA,CAACN,UAAU;IACTmB,UAAU;IACVC,8BAA8B,EAAE,KAAM;IACtCC,KAAK,EAAElB,MAAM,CAACmB,SAAU;IACxBC,qBAAqB,EAAEpB,MAAM,CAACqB,gBAAiB;IAAAC,QAAA,EAE9Cd,WAAW,CAACe,GAAG,CAAC,UAACR,UAAU,EAC1B;MAAAX,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAC,CAAA;MAAA,OAAAF,IAAA,CAACL,gBAAgB;QAEfoB,KAAK,EAAE,CAAClB,MAAM,CAACwB,gBAAgB,EAAE;UAAEC,WAAW,EAAEf;QAAW,CAAC,CAAE;QAC9DgB,OAAO,EAAEZ,qBAAqB,CAACC,UAAU,CAAE;QAAAO,QAAA,EAE3CnB,IAAA,CAACJ,IAAI;UAACmB,KAAK,EAAE,CAAClB,MAAM,CAAC2B,cAAc,EAAE;YAAEC,KAAK,EAAElB;UAAW,CAAC,CAAE;UAAAY,QAAA,EACzDP;QAAU,CACP;MAAC,GANFA,UAOW,CAAC;IAAD,CACnB;EAAC,CACQ,CAAC;AAEjB,CAAC;AAED,eAAeT,uBAAuB","ignoreList":[]}