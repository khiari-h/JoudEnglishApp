{"version":3,"names":["_react","require","_constants","useDashboardData","exports","progressContext","currentLevel","lastActivity","currentStreak","_ref","_ref$progress","progress","_ref$calculateGlobalP","calculateGlobalProgress","_ref$calculateLevelPr","calculateLevelProgress","globalProgress","useMemo","levelProgress","allLevels","Object","keys","LANGUAGE_LEVELS","map","levelKey","id","color","isActive","getAllLearningLevels","title"],"sources":["useDashboardData.js"],"sourcesContent":["// src/screens/Dashboard/hooks/useDashboardData.js - VERSION NETTOYÉE\nimport { useMemo } from \"react\";\nimport { LANGUAGE_LEVELS } from \"../../../utils/constants\";\n\nexport const useDashboardData = (\n  progressContext,\n  currentLevel,\n  lastActivity,\n  currentStreak\n) => {\n  const {\n    progress = {},\n    calculateGlobalProgress = () => 0,\n    calculateLevelProgress = () => 0,\n  } = progressContext || {};\n\n  // Mémoriser les calculs lourds pour éviter les re-calculs inutiles\n  const globalProgress = useMemo(() => {\n    return calculateGlobalProgress();\n  }, [calculateGlobalProgress]);\n\n  const levelProgress = useMemo(() => {\n    return calculateLevelProgress(currentLevel);\n  }, [calculateLevelProgress, currentLevel]);\n\n  // Mémoriser la liste des niveaux pour éviter les re-créations\n  const allLevels = useMemo(() => {\n    return Object.keys(LANGUAGE_LEVELS).map((levelKey) => ({\n      id: levelKey,\n      color: LANGUAGE_LEVELS[levelKey].color,\n      isActive: levelKey === currentLevel,\n    }));\n  }, [currentLevel]);\n\n  // Mémoriser les niveaux d'apprentissage avec progress\n  const getAllLearningLevels = useMemo(() => {\n    return Object.keys(LANGUAGE_LEVELS).map((levelKey) => ({\n      id: levelKey,\n      title: LANGUAGE_LEVELS[levelKey].title,\n      color: LANGUAGE_LEVELS[levelKey].color,\n      progress: calculateLevelProgress(levelKey),\n      isActive: levelKey === currentLevel,\n    }));\n  }, [calculateLevelProgress, currentLevel]);\n\n  // ✅ SUPPRIMÉ : Plus besoin d'exerciseTimeStats fake !\n  // RecommendationsSection récupère maintenant ses vraies données\n  // via useExerciseTracking directement\n\n  return {\n    progress,\n    globalProgress,\n    levelProgress,\n    allLevels,\n    getAllLearningLevels,\n    // exerciseTimeStats, ← SUPPRIMÉ !\n    lastActivity,\n    currentStreak,\n  };\n};"],"mappings":";;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAEO,IAAME,gBAAgB,GAAAC,OAAA,CAAAD,gBAAA,GAAG,SAAnBA,gBAAgBA,CAC3BE,eAAe,EACfC,YAAY,EACZC,YAAY,EACZC,aAAa,EACV;EACH,IAAAC,IAAA,GAIIJ,eAAe,IAAI,CAAC,CAAC;IAAAK,aAAA,GAAAD,IAAA,CAHvBE,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,CAAC,CAAC,GAAAA,aAAA;IAAAE,qBAAA,GAAAH,IAAA,CACbI,uBAAuB;IAAvBA,uBAAuB,GAAAD,qBAAA,cAAG;MAAA,OAAM,CAAC;IAAA,IAAAA,qBAAA;IAAAE,qBAAA,GAAAL,IAAA,CACjCM,sBAAsB;IAAtBA,sBAAsB,GAAAD,qBAAA,cAAG;MAAA,OAAM,CAAC;IAAA,IAAAA,qBAAA;EAIlC,IAAME,cAAc,GAAG,IAAAC,cAAO,EAAC,YAAM;IACnC,OAAOJ,uBAAuB,CAAC,CAAC;EAClC,CAAC,EAAE,CAACA,uBAAuB,CAAC,CAAC;EAE7B,IAAMK,aAAa,GAAG,IAAAD,cAAO,EAAC,YAAM;IAClC,OAAOF,sBAAsB,CAACT,YAAY,CAAC;EAC7C,CAAC,EAAE,CAACS,sBAAsB,EAAET,YAAY,CAAC,CAAC;EAG1C,IAAMa,SAAS,GAAG,IAAAF,cAAO,EAAC,YAAM;IAC9B,OAAOG,MAAM,CAACC,IAAI,CAACC,0BAAe,CAAC,CAACC,GAAG,CAAC,UAACC,QAAQ;MAAA,OAAM;QACrDC,EAAE,EAAED,QAAQ;QACZE,KAAK,EAAEJ,0BAAe,CAACE,QAAQ,CAAC,CAACE,KAAK;QACtCC,QAAQ,EAAEH,QAAQ,KAAKlB;MACzB,CAAC;IAAA,CAAC,CAAC;EACL,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAGlB,IAAMsB,oBAAoB,GAAG,IAAAX,cAAO,EAAC,YAAM;IACzC,OAAOG,MAAM,CAACC,IAAI,CAACC,0BAAe,CAAC,CAACC,GAAG,CAAC,UAACC,QAAQ;MAAA,OAAM;QACrDC,EAAE,EAAED,QAAQ;QACZK,KAAK,EAAEP,0BAAe,CAACE,QAAQ,CAAC,CAACK,KAAK;QACtCH,KAAK,EAAEJ,0BAAe,CAACE,QAAQ,CAAC,CAACE,KAAK;QACtCf,QAAQ,EAAEI,sBAAsB,CAACS,QAAQ,CAAC;QAC1CG,QAAQ,EAAEH,QAAQ,KAAKlB;MACzB,CAAC;IAAA,CAAC,CAAC;EACL,CAAC,EAAE,CAACS,sBAAsB,EAAET,YAAY,CAAC,CAAC;EAM1C,OAAO;IACLK,QAAQ,EAARA,QAAQ;IACRK,cAAc,EAAdA,cAAc;IACdE,aAAa,EAAbA,aAAa;IACbC,SAAS,EAATA,SAAS;IACTS,oBAAoB,EAApBA,oBAAoB;IAEpBrB,YAAY,EAAZA,YAAY;IACZC,aAAa,EAAbA;EACF,CAAC;AACH,CAAC","ignoreList":[]}