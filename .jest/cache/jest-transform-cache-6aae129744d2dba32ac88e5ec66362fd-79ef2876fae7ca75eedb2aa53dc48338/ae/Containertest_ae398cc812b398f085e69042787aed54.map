{"version":3,"names":["_getJestObj","mock","_require","require","View","SafeAreaView","_ref","children","style","edges","rest","_objectWithoutProperties2","default","_excluded","_jsxRuntime","jsx","Object","assign","testID","useSafeAreaInsets","top","bottom","left","right","useSafeAreaFrame","x","y","width","height","_interopRequireDefault","_react","_reactNative","_reactNative2","_reactNativeSafeAreaContext","_Container","_require5","jest","beforeEach","clearAllMocks","describe","it","_render","render","Text","getByText","expect","toBeTruthy","_render2","getByTestId","_render3","safeArea","queryByTestId","UNSAFE_getByType","toBeNull","_render4","container","flatStyle","StyleSheet","flatten","props","toHaveProperty","_render5","withPadding","not","_render6","withScrollView","ScrollView","_render7","scrollViewProps","keyboardShouldPersistTaps","toBe","_render8","queryByText","UNSAFE_queryByType","_require2","StatusBar","setBarStyle","toHaveBeenCalledWith","setBackgroundColor","withStatusBar","_require3","toHaveBeenCalled","statusBarColor","statusBarStyle","_require4","_render9","backgroundColor","_render0","safeAreaEdges","safeAreaView","toEqual","_render1","_render10"],"sources":["Container.test.js"],"sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { View, ScrollView, Text, StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Container from '../../../src/components/layout/Container';\n\n// Mock SafeAreaView from react-native-safe-area-context\njest.mock('react-native-safe-area-context', () => {\n  const { View } = require('react-native');\n  return {\n    SafeAreaView: ({ children, style, edges, ...rest }) => (\n      <View style={style} {...rest} testID=\"mock-safe-area-view\" edges={edges}>\n        {children}\n      </View>\n    ),\n    useSafeAreaInsets: () => ({ top: 0, bottom: 0, left: 0, right: 0 }),\n    useSafeAreaFrame: () => ({ x: 0, y: 0, width: 320, height: 640 }),\n  };\n});\n\nbeforeEach(() => {\n  jest.clearAllMocks();\n});\n\ndescribe('Container', () => {\n  it('renders children correctly', () => {\n    const { getByText } = render(<Container><Text>Hello World</Text></Container>);\n    expect(getByText('Hello World')).toBeTruthy();\n  });\n\n  it('uses SafeAreaView by default', () => {\n    const { getByTestId } = render(<Container />);\n    expect(getByTestId('mock-safe-area-view')).toBeTruthy();\n  });\n\n  it('uses View when safeArea is false', () => {\n    const { queryByTestId, UNSAFE_getByType } = render(<Container safeArea={false} />);\n    expect(queryByTestId('mock-safe-area-view')).toBeNull();\n    expect(UNSAFE_getByType(View)).toBeTruthy();\n  });\n\n  it('applies padding by default', () => {\n    const { getByTestId } = render(<Container />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).toHaveProperty('padding', 16);\n  });\n\n  it('does not apply padding when withPadding is false', () => {\n    const { getByTestId } = render(<Container withPadding={false} />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).not.toHaveProperty('padding', 16);\n  });\n\n  it('renders ScrollView when withScrollView is true', () => {\n    const { getByTestId, UNSAFE_getByType, getByText } = render(\n      <Container withScrollView={true}><Text>Scrollable Content</Text></Container>\n    );\n    expect(UNSAFE_getByType(ScrollView)).toBeTruthy();\n    expect(getByTestId('mock-safe-area-view')).toBeTruthy();\n    expect(getByText('Scrollable Content')).toBeTruthy();\n  });\n\n  it('passes scrollViewProps to ScrollView', () => {\n    const { UNSAFE_getByType } = render(\n      <Container withScrollView={true} scrollViewProps={{ keyboardShouldPersistTaps: 'always' }} />\n    );\n    expect(UNSAFE_getByType(ScrollView).props.keyboardShouldPersistTaps).toBe('always');\n  });\n\n  it('does not render ScrollView when withScrollView is false', () => {\n    const { queryByText, UNSAFE_queryByType } = render(\n      <Container withScrollView={false}><Text>Static Content</Text></Container>\n    );\n    expect(UNSAFE_queryByType(ScrollView)).toBeNull();\n    expect(queryByText('Static Content')).toBeTruthy();\n  });\n\n  it('renders StatusBar component by default', () => {\n    render(<Container />);\n    const { StatusBar } = require('react-native');\n    expect(StatusBar.setBarStyle).toHaveBeenCalledWith('dark-content');\n    expect(StatusBar.setBackgroundColor).toHaveBeenCalledWith('#FFFFFF');\n  });\n\n  it('does not render StatusBar when withStatusBar is false', () => {\n    render(<Container withStatusBar={false} />);\n    const { StatusBar } = require('react-native');\n    expect(StatusBar.setBarStyle).not.toHaveBeenCalled();\n    expect(StatusBar.setBackgroundColor).not.toHaveBeenCalled();\n  });\n\n  it('applies custom statusBarColor and statusBarStyle to StatusBar component', () => {\n    render(\n      <Container statusBarColor=\"#FF0000\" statusBarStyle=\"light-content\" />\n    );\n    const { StatusBar } = require('react-native');\n    expect(StatusBar.setBarStyle).toHaveBeenCalledWith('light-content');\n    expect(StatusBar.setBackgroundColor).toHaveBeenCalledWith('#FF0000');\n  });\n\n  it('applies custom backgroundColor', () => {\n    const { getByTestId } = render(<Container backgroundColor=\"#FF00FF\" />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).toHaveProperty('backgroundColor', '#FF00FF');\n  });\n\n  it('passes safeAreaEdges to SafeAreaView', () => {\n    const { getByTestId } = render(<Container safeAreaEdges={['bottom']} />);\n    const safeAreaView = getByTestId('mock-safe-area-view');\n    expect(safeAreaView.props.edges).toEqual(['bottom']);\n  });\n\n  it('uses default safeAreaEdges when not provided', () => {\n    const { getByTestId } = render(<Container />);\n    const safeAreaView = getByTestId('mock-safe-area-view');\n    expect(safeAreaView.props.edges).toEqual(['top', 'left', 'right']);\n  });\n\n  it('applies default backgroundColor', () => {\n    const { getByTestId } = render(<Container />);\n    const container = getByTestId('mock-safe-area-view');\n    const flatStyle = StyleSheet.flatten(container.props.style);\n    expect(flatStyle).toHaveProperty('backgroundColor', '#F9FAFB');\n  });\n});"],"mappings":"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","ignoreList":[]}