622d20fc68eebb9393c050ab77383f4b
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vocab = void 0;
var vocab = exports.vocab = {
  title: "Santé Publique & Systèmes de Santé",
  words: [{
    word: "health policy",
    translation: "politique de santé",
    example: "Health policy decisions impact the availability and affordability of medical care."
  }, {
    word: "healthcare reform",
    translation: "réforme des soins de santé",
    example: "Healthcare reform aims to address issues of access, quality, and cost."
  }, {
    word: "universal healthcare",
    translation: "couverture sanitaire universelle",
    example: "Universal healthcare ensures all citizens have access to essential medical services."
  }, {
    word: "single-payer system",
    translation: "système à payeur unique",
    example: "A single-payer system funds healthcare through taxes rather than private insurance."
  }, {
    word: "health insurance mandate",
    translation: "obligation d'assurance maladie",
    example: "The health insurance mandate requires individuals to obtain coverage or pay a penalty."
  }, {
    word: "means-tested program",
    translation: "programme sous condition de ressources",
    example: "Means-tested programs provide healthcare benefits based on income eligibility."
  }, {
    word: "cost containment",
    translation: "maîtrise des coûts",
    example: "Cost containment strategies aim to reduce healthcare expenditures without sacrificing quality."
  }, {
    word: "health financing",
    translation: "financement de la santé",
    example: "Sustainable health financing ensures healthcare systems remain viable long-term."
  }, {
    word: "health regulation",
    translation: "réglementation sanitaire",
    example: "Health regulation establishes standards for medical facilities and professionals."
  }, {
    word: "health planning",
    translation: "planification sanitaire",
    example: "Health planning coordinates resources to meet population health needs."
  }, {
    word: "healthcare access",
    translation: "accès aux soins",
    example: "Rural communities often face challenges with healthcare access."
  }, {
    word: "healthcare equity",
    translation: "équité en matière de santé",
    example: "Healthcare equity aims to eliminate disparities in health outcomes."
  }, {
    word: "health security",
    translation: "sécurité sanitaire",
    example: "Health security protects populations from public health threats and emergencies."
  }, {
    word: "health initiative",
    translation: "initiative de santé",
    example: "The health initiative targets childhood obesity through school-based programs."
  }, {
    word: "health information technology",
    translation: "technologie de l'information sanitaire",
    example: "Health information technology improves care coordination and reduces medical errors."
  }, {
    word: "health workforce",
    translation: "personnel de santé",
    example: "A well-trained health workforce is essential for delivering quality care."
  }, {
    word: "health legislation",
    translation: "législation sanitaire",
    example: "Health legislation establishes legal frameworks for healthcare systems."
  }, {
    word: "pharmaceutical policy",
    translation: "politique pharmaceutique",
    example: "Pharmaceutical policy regulates drug development, pricing, and distribution."
  }, {
    word: "policy implementation",
    translation: "mise en œuvre des politiques",
    example: "Effective policy implementation requires adequate resources and stakeholder engagement."
  }, {
    word: "healthcare rationing",
    translation: "rationnement des soins de santé",
    example: "Healthcare rationing occurs when demand for services exceeds available resources."
  }, {
    word: "epidemiology",
    translation: "épidémiologie",
    example: "Epidemiology studies the distribution and determinants of health-related events in populations."
  }, {
    word: "incidence rate",
    translation: "taux d'incidence",
    example: "The incidence rate measures new cases of a disease within a specific time period."
  }, {
    word: "prevalence",
    translation: "prévalence",
    example: "Prevalence refers to the total number of cases in a population at a given time."
  }, {
    word: "outbreak",
    translation: "épidémie",
    example: "Health authorities responded quickly to contain the outbreak."
  }, {
    word: "pandemic",
    translation: "pandémie",
    example: "A pandemic spreads across multiple countries or continents."
  }, {
    word: "endemic",
    translation: "endémique",
    example: "Malaria remains endemic in many tropical regions."
  }, {
    word: "epidemic curve",
    translation: "courbe épidémique",
    example: "The epidemic curve shows how cases accumulate over time."
  }, {
    word: "contact tracing",
    translation: "recherche des contacts",
    example: "Contact tracing identifies people who may have been exposed to an infectious disease."
  }, {
    word: "case-control study",
    translation: "étude cas-témoins",
    example: "The case-control study compared people with the disease to similar individuals without it."
  }, {
    word: "cohort study",
    translation: "étude de cohorte",
    example: "The cohort study followed participants over time to observe health outcomes."
  }, {
    word: "cross-sectional study",
    translation: "étude transversale",
    example: "A cross-sectional study collects data at a specific point in time."
  }, {
    word: "randomized controlled trial",
    translation: "essai contrôlé randomisé",
    example: "Randomized controlled trials provide the strongest evidence for treatment effectiveness."
  }, {
    word: "relative risk",
    translation: "risque relatif",
    example: "The relative risk compares disease probability between exposed and unexposed groups."
  }, {
    word: "attributable risk",
    translation: "risque attribuable",
    example: "Attributable risk estimates the proportion of disease due to a specific exposure."
  }, {
    word: "confounding variable",
    translation: "variable confondante",
    example: "Age can be a confounding variable in studies of disease and occupation."
  }, {
    word: "vector",
    translation: "vecteur",
    example: "Mosquitoes are vectors for diseases like malaria and dengue fever."
  }, {
    word: "pathogen",
    translation: "agent pathogène",
    example: "Bacteria, viruses, and parasites are common pathogens."
  }, {
    word: "serological survey",
    translation: "enquête sérologique",
    example: "The serological survey tested blood samples for antibodies against the virus."
  }, {
    word: "health system",
    translation: "système de santé",
    example: "A resilient health system can respond effectively to emergencies while maintaining essential services."
  }, {
    word: "healthcare delivery",
    translation: "prestation de soins de santé",
    example: "Healthcare delivery models vary widely across countries."
  }, {
    word: "secondary care",
    translation: "soins secondaires",
    example: "Secondary care includes specialist services usually accessed through referral."
  }, {
    word: "tertiary care",
    translation: "soins tertiaires",
    example: "Tertiary care provides complex treatments in specialized facilities."
  }, {
    word: "public healthcare",
    translation: "soins de santé publics",
    example: "Public healthcare is funded through government revenue and available to all citizens."
  }, {
    word: "private healthcare",
    translation: "soins de santé privés",
    example: "Private healthcare services operate on a for-profit basis."
  }, {
    word: "social health insurance",
    translation: "assurance maladie sociale",
    example: "Social health insurance systems pool funds through income-based contributions."
  }, {
    word: "out-of-pocket payment",
    translation: "paiement direct",
    example: "High out-of-pocket payments can create financial barriers to healthcare access."
  }, {
    word: "gatekeeping",
    translation: "filtrage",
    example: "Gatekeeping requires patients to see a primary care provider before accessing specialists."
  }, {
    word: "fee-for-service",
    translation: "rémunération à l'acte",
    example: "Fee-for-service payment reimburses providers for each service performed."
  }, {
    word: "capitation",
    translation: "capitation",
    example: "Capitation pays providers a fixed amount per patient regardless of services provided."
  }, {
    word: "integrated care",
    translation: "soins intégrés",
    example: "Integrated care coordinates services across different healthcare providers and settings."
  }, {
    word: "health system performance",
    translation: "performance du système de santé",
    example: "WHO regularly assesses health system performance across countries."
  }, {
    word: "healthcare expenditure",
    translation: "dépenses de santé",
    example: "The United States has the highest healthcare expenditure per capita globally."
  }, {
    word: "healthcare provider",
    translation: "prestataire de soins de santé",
    example: "Healthcare providers include hospitals, clinics, and individual practitioners."
  }, {
    word: "health technology assessment",
    translation: "évaluation des technologies de la santé",
    example: "Health technology assessment examines the value of new medical interventions."
  }, {
    word: "health outcome",
    translation: "résultat de santé",
    example: "Health outcomes measure the effects of healthcare interventions on patients."
  }, {
    word: "risk pooling",
    translation: "mutualisation des risques",
    example: "Risk pooling distributes healthcare costs across a population."
  }, {
    word: "waiting time",
    translation: "temps d'attente",
    example: "Reducing waiting times is a priority in many healthcare systems."
  }, {
    word: "medical ethics",
    translation: "éthique médicale",
    example: "Medical ethics guides decision-making in healthcare practice and research."
  }, {
    word: "informed consent",
    translation: "consentement éclairé",
    example: "Informed consent requires full disclosure of risks and benefits before treatment."
  }, {
    word: "patient autonomy",
    translation: "autonomie du patient",
    example: "Patient autonomy respects individuals' right to make their own healthcare decisions."
  }, {
    word: "beneficence",
    translation: "bienfaisance",
    example: "Beneficence requires healthcare providers to act in patients' best interests."
  }, {
    word: "non-maleficence",
    translation: "non-malfaisance",
    example: "Non-maleficence is the principle of first doing no harm."
  }, {
    word: "justice",
    translation: "justice",
    example: "Justice in healthcare involves fair distribution of benefits and burdens."
  }, {
    word: "confidentiality",
    translation: "confidentialité",
    example: "Medical confidentiality protects patients' private health information."
  }, {
    word: "end-of-life care",
    translation: "soins de fin de vie",
    example: "End-of-life care addresses physical, emotional, and spiritual needs of dying patients."
  }, {
    word: "advance directive",
    translation: "directive anticipée",
    example: "An advance directive specifies a person's wishes for medical care if they cannot communicate."
  }, {
    word: "research ethics",
    translation: "éthique de la recherche",
    example: "Research ethics protects the rights and welfare of study participants."
  }, {
    word: "ethics committee",
    translation: "comité d'éthique",
    example: "The ethics committee reviews research proposals involving human subjects."
  }, {
    word: "bioethics",
    translation: "bioéthique",
    example: "Bioethics addresses ethical issues arising from advances in medicine and biology."
  }, {
    word: "paternalism",
    translation: "paternalisme",
    example: "Medical paternalism involves making decisions for patients without their input."
  }, {
    word: "euthanasia",
    translation: "euthanasie",
    example: "Euthanasia remains controversial and legally prohibited in many countries."
  }, {
    word: "assisted suicide",
    translation: "suicide assisté",
    example: "Assisted suicide allows terminally ill patients to end their lives with medical assistance."
  }, {
    word: "genetic counseling",
    translation: "conseil génétique",
    example: "Genetic counseling helps individuals understand implications of hereditary conditions."
  }, {
    word: "clinical ethics",
    translation: "éthique clinique",
    example: "Clinical ethics consultations help resolve difficult cases in hospital settings."
  }, {
    word: "global health",
    translation: "santé mondiale",
    example: "Global health addresses health issues that transcend national boundaries."
  }, {
    word: "health inequality",
    translation: "inégalité de santé",
    example: "Health inequality exists both between and within countries."
  }, {
    word: "international health regulations",
    translation: "règlement sanitaire international",
    example: "International health regulations coordinate responses to global health threats."
  }, {
    word: "health development",
    translation: "développement sanitaire",
    example: "Health development strengthens healthcare systems in resource-limited countries."
  }, {
    word: "health diplomacy",
    translation: "diplomatie sanitaire",
    example: "Health diplomacy uses health interventions to advance foreign policy objectives."
  }, {
    word: "humanitarian assistance",
    translation: "assistance humanitaire",
    example: "Humanitarian assistance provides emergency healthcare in crisis situations."
  }, {
    word: "neglected tropical disease",
    translation: "maladie tropicale négligée",
    example: "Neglected tropical diseases affect billions but receive limited research funding."
  }, {
    word: "World Health Organization",
    translation: "Organisation mondiale de la Santé",
    example: "The World Health Organization coordinates international health work."
  }, {
    word: "health aid",
    translation: "aide sanitaire",
    example: "Health aid flows from wealthy countries to support healthcare in developing nations."
  }, {
    word: "disease burden",
    translation: "charge de morbidité",
    example: "The global disease burden is shifting from infectious to non-communicable diseases."
  }, {
    word: "health emergency",
    translation: "urgence sanitaire",
    example: "International cooperation is essential during health emergencies."
  }, {
    word: "disease eradication",
    translation: "éradication des maladies",
    example: "Smallpox eradication represents one of public health's greatest successes."
  }, {
    word: "health infrastructure",
    translation: "infrastructure sanitaire",
    example: "Many countries lack adequate health infrastructure for basic services."
  }, {
    word: "global health governance",
    translation: "gouvernance sanitaire mondiale",
    example: "Global health governance involves multiple international organizations."
  }, {
    word: "cross-border health threat",
    translation: "menace sanitaire transfrontalière",
    example: "Cross-border health threats require coordinated international responses."
  }, {
    word: "health equity",
    translation: "équité en santé",
    example: "Health equity aims to eliminate avoidable differences in health status."
  }, {
    word: "Sustainable Development Goals",
    translation: "Objectifs de développement durable",
    example: "Health targets feature prominently in the Sustainable Development Goals."
  }, {
    word: "global health initiative",
    translation: "initiative mondiale de santé",
    example: "The global health initiative focuses on reducing maternal mortality."
  }, {
    word: "medical innovation",
    translation: "innovation médicale",
    example: "Medical innovation drives improvements in diagnosis and treatment."
  }, {
    word: "telehealth",
    translation: "télésanté",
    example: "Telehealth allows remote consultation with healthcare providers."
  }, {
    word: "precision medicine",
    translation: "médecine de précision",
    example: "Precision medicine tailors treatment to individual genetic profiles."
  }, {
    word: "genetic testing",
    translation: "test génétique",
    example: "Genetic testing identifies disease risks based on DNA analysis."
  }, {
    word: "regenerative medicine",
    translation: "médecine régénérative",
    example: "Regenerative medicine aims to repair or replace damaged tissues and organs."
  }, {
    word: "robotic surgery",
    translation: "chirurgie robotique",
    example: "Robotic surgery enables minimally invasive procedures with greater precision."
  }, {
    word: "digital health",
    translation: "santé numérique",
    example: "Digital health encompasses mobile health, telehealth, and health information technology."
  }, {
    word: "personalized medicine",
    translation: "médecine personnalisée",
    example: "Personalized medicine tailors treatment to individual characteristics."
  }, {
    word: "gene therapy",
    translation: "thérapie génique",
    example: "Gene therapy treats disease by modifying genetic material within cells."
  }, {
    word: "nanomedicine",
    translation: "nanomédecine",
    example: "Nanomedicine uses microscopic particles for targeted drug delivery."
  }, {
    word: "health innovation",
    translation: "innovation en santé",
    example: "Health innovation includes new technologies, processes, and service models."
  }, {
    word: "translational research",
    translation: "recherche translationnelle",
    example: "Translational research bridges laboratory discoveries and clinical applications."
  }, {
    word: "health technology",
    translation: "technologie de la santé",
    example: "Health technology assessment evaluates new interventions for clinical and economic value."
  }, {
    word: "medical device",
    translation: "dispositif médical",
    example: "Medical device regulations ensure safety and effectiveness before market approval."
  }, {
    word: "community health",
    translation: "santé communautaire",
    example: "Community health programs address local health needs and priorities."
  }, {
    word: "public health intervention",
    translation: "intervention de santé publique",
    example: "Public health interventions aim to prevent disease and promote health at population level."
  }, {
    word: "health literacy",
    translation: "littératie en santé",
    example: "Health literacy is the ability to obtain, understand, and use health information."
  }, {
    word: "community diagnosis",
    translation: "diagnostic communautaire",
    example: "Community diagnosis identifies health issues affecting a specific population."
  }, {
    word: "community-based care",
    translation: "soins communautaires",
    example: "Community-based care delivers services close to where people live."
  }, {
    word: "primary healthcare",
    translation: "soins de santé primaires",
    example: "Primary healthcare addresses most health needs through integrated, accessible services."
  }, {
    word: "preventive services",
    translation: "services préventifs",
    example: "Preventive services include screenings, vaccinations, and counseling."
  }, {
    word: "outreach program",
    translation: "programme de sensibilisation",
    example: "The outreach program provides health services to homeless populations."
  }, {
    word: "community health worker",
    translation: "agent de santé communautaire",
    example: "Community health workers bridge formal healthcare systems and local communities."
  }, {
    word: "health screening",
    translation: "dépistage sanitaire",
    example: "Health screening identifies disease before symptoms appear."
  }, {
    word: "health behavior",
    translation: "comportement de santé",
    example: "Health behavior includes actions that promote or diminish well-being."
  }, {
    word: "community mobilization",
    translation: "mobilisation communautaire",
    example: "Community mobilization engages residents in addressing local health issues."
  }, {
    word: "community empowerment",
    translation: "autonomisation communautaire",
    example: "Community empowerment enables people to take control of factors affecting their health."
  }, {
    word: "peer education",
    translation: "éducation par les pairs",
    example: "Peer education trains community members to share health information with others."
  }, {
    word: "patient navigation",
    translation: "navigation du patient",
    example: "Patient navigation helps individuals access appropriate healthcare services."
  }, {
    word: "health advocacy",
    translation: "plaidoyer pour la santé",
    example: "Health advocacy promotes policies that improve public health."
  }, {
    word: "community resilience",
    translation: "résilience communautaire",
    example: "Community resilience helps populations withstand and recover from health crises."
  }, {
    word: "social determinants of health",
    translation: "déterminants sociaux de la santé",
    example: "Social determinants of health include conditions where people live, work, and age."
  }, {
    word: "health disparity",
    translation: "disparité de santé",
    example: "Health disparities are preventable differences in health outcomes between populations."
  }, {
    word: "income inequality",
    translation: "inégalité de revenus",
    example: "Income inequality correlates with population health differences."
  }, {
    word: "education level",
    translation: "niveau d'éducation",
    example: "Higher education levels generally predict better health outcomes."
  }, {
    word: "housing condition",
    translation: "condition de logement",
    example: "Poor housing conditions contribute to respiratory and other health problems."
  }, {
    word: "neighborhood environment",
    translation: "environnement du quartier",
    example: "The neighborhood environment influences physical activity and stress levels."
  }, {
    word: "environmental exposure",
    translation: "exposition environnementale",
    example: "Environmental exposure to pollutants increases disease risk."
  }, {
    word: "occupational hazard",
    translation: "risque professionnel",
    example: "Occupational hazards vary significantly across different industries."
  }, {
    word: "social isolation",
    translation: "isolement social",
    example: "Social isolation increases mortality risk comparable to smoking."
  }, {
    word: "transportation access",
    translation: "accès aux transports",
    example: "Limited transportation access creates barriers to healthcare utilization."
  }, {
    word: "health-in-all-policies",
    translation: "santé dans toutes les politiques",
    example: "Health-in-all-policies approach considers health impacts across sectors."
  }, {
    word: "structural inequality",
    translation: "inégalité structurelle",
    example: "Structural inequality systematically disadvantages certain population groups."
  }, {
    word: "social gradient",
    translation: "gradient social",
    example: "The social gradient in health shows outcomes worsen as socioeconomic position decreases."
  }, {
    word: "intersectionality",
    translation: "intersectionnalité",
    example: "Intersectionality examines how multiple social factors combine to affect health."
  }, {
    word: "life course perspective",
    translation: "perspective du parcours de vie",
    example: "The life course perspective considers how early experiences affect later health."
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,