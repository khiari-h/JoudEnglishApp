{"version":3,"names":["_getJestObj","mock","isEnabled","jest","fn","verifyPin","disableLock","enableLock","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_LockContext","_jsxRuntime","_require","Lock","Consumer","_useLock","useLock","isLocked","unlockWithPin","disable","enable","isLoading","jsxs","Fragment","children","jsx","testID","String","onPress","TestText","_ref","TestButton","_ref2","describe","beforeEach","clearAllMocks","mockResolvedValue","ok","it","default","ui","render","LockProvider","waitFor","expect","queryByTestId","toBeNull","getByTestId","props","toBe","act","fireEvent","press","mockResolvedValueOnce","reason","result","toEqual"],"sources":["LockContext.test.js"],"sourcesContent":["// La version corrigée\r\njest.mock('../../src/services/lockService', () => ({\r\n  isEnabled: jest.fn(),\r\n  verifyPin: jest.fn(),\r\n  disableLock: jest.fn(),\r\n  enableLock: jest.fn(),\r\n}));\r\n\r\nimport React from 'react';\r\nimport { render, act, fireEvent, waitFor } from '@testing-library/react-native';\r\nimport { LockProvider, useLock } from '../../src/contexts/LockContext';\r\n\r\n// On peut maintenant obtenir les mocks depuis le module lui-même\r\nconst Lock = require('../../src/services/lockService');\r\n\r\nconst Consumer = () => {\r\n  const { isEnabled, isLocked, unlockWithPin, disable, enable, isLoading } = useLock();\r\n  return (\r\n    <>\r\n      {isLoading && <text testID=\"loading\">Loading...</text>}\r\n      <text testID=\"enabled\">{String(isEnabled)}</text>\r\n      <text testID=\"locked\">{String(isLocked)}</text>\r\n      <button testID=\"unlock-correct-pin\" onPress={() => unlockWithPin('1234')} />\r\n      <button testID=\"unlock-wrong-pin\" onPress={() => unlockWithPin('0000')} />\r\n      <button testID=\"unlock-lockout\" onPress={() => unlockWithPin('0000')} />\r\n      <button testID=\"disable\" onPress={disable} />\r\n      <button testID=\"enable\" onPress={enable} />\r\n    </>\r\n  );\r\n};\r\n\r\n// Tiny shims\r\nconst TestText = ({ children, testID }) => (<text testID={testID}>{children}</text>);\r\nconst TestButton = ({ onPress, testID }) => (<button testID={testID} onPress={onPress} />);\r\n\r\ndescribe('LockContext', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    Lock.isEnabled.mockResolvedValue(true);\r\n    Lock.verifyPin.mockResolvedValue({ ok: true });\r\n    Lock.disableLock.mockResolvedValue(true);\r\n    Lock.enableLock.mockResolvedValue(true);\r\n  });\r\n\r\n  // Test 1: Comportement initial (cas de succès)\r\n  it('initializes locked when enabled, unlocks with correct PIN, and can disable', async () => {\r\n    const ui = render(<LockProvider><Consumer /></LockProvider>);\r\n    await waitFor(() => expect(ui.queryByTestId('loading')).toBeNull());\r\n    expect(ui.getByTestId('enabled').props.children).toBe('true');\r\n    expect(ui.getByTestId('locked').props.children).toBe('true');\r\n\r\n    await act(async () => {\r\n      fireEvent.press(ui.getByTestId('unlock-correct-pin'));\r\n    });\r\n    expect(ui.getByTestId('locked').props.children).toBe('false');\r\n\r\n    await act(async () => {\r\n      fireEvent.press(ui.getByTestId('disable'));\r\n    });\r\n    expect(ui.getByTestId('enabled').props.children).toBe('false');\r\n  });\r\n\r\n  // Test 2: Gérer l'état initial désactivé\r\n  it('initializes unlocked when not enabled', async () => {\r\n    Lock.isEnabled.mockResolvedValueOnce(false);\r\n    const ui = render(<LockProvider><Consumer /></LockProvider>);\r\n    await waitFor(() => expect(ui.queryByTestId('loading')).toBeNull());\r\n    expect(ui.getByTestId('enabled').props.children).toBe('false');\r\n    expect(ui.getByTestId('locked').props.children).toBe('false');\r\n  });\r\n\r\n  // Test 3: Gérer le PIN incorrect\r\n  it('should not unlock with an incorrect PIN', async () => {\r\n    Lock.verifyPin.mockResolvedValueOnce({ ok: false });\r\n    const ui = render(<LockProvider><Consumer /></LockProvider>);\r\n    await waitFor(() => expect(ui.queryByTestId('loading')).toBeNull());\r\n    expect(ui.getByTestId('locked').props.children).toBe('true');\r\n\r\n    await act(async () => {\r\n      fireEvent.press(ui.getByTestId('unlock-wrong-pin'));\r\n    });\r\n    expect(ui.getByTestId('locked').props.children).toBe('true');\r\n  });\r\n\r\n  // Test 4: Gérer la raison \"lockout\"\r\n  it('should return lockout reason when pin verification fails with lockout', async () => {\r\n    Lock.verifyPin.mockResolvedValueOnce({ ok: false, reason: 'lockout' });\r\n    const ui = render(<LockProvider><Consumer /></LockProvider>);\r\n    await waitFor(() => expect(ui.queryByTestId('loading')).toBeNull());\r\n\r\n    let result;\r\n    await act(async () => {\r\n      result = await ui.getByTestId('unlock-lockout').props.onPress();\r\n    });\r\n    expect(ui.getByTestId('locked').props.children).toBe('true');\r\n    expect(result).toEqual({ ok: false, reason: 'lockout' });\r\n  });\r\n\r\n  // Test 5: Activer le verrouillage\r\n  it('should enable the lock', async () => {\r\n    Lock.isEnabled.mockResolvedValueOnce(false);\r\n    const ui = render(<LockProvider><Consumer /></LockProvider>);\r\n    await waitFor(() => expect(ui.queryByTestId('loading')).toBeNull());\r\n    expect(ui.getByTestId('enabled').props.children).toBe('false');\r\n    expect(ui.getByTestId('locked').props.children).toBe('false');\r\n\r\n    await act(async () => {\r\n      fireEvent.press(ui.getByTestId('enable'));\r\n    });\r\n    expect(ui.getByTestId('enabled').props.children).toBe('true');\r\n    expect(ui.getByTestId('locked').props.children).toBe('true');\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}