e0cfece4fea891145455648fc2acfda1
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_1iixtnsu26() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\VocabularyRevision\\components\\ResultScreen.js";
  var hash = "ab62b94a51a9140c945f5989db544b82ce6a63bd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\VocabularyRevision\\components\\ResultScreen.js",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "1": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 60
        }
      },
      "2": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 9,
          column: 57
        }
      },
      "3": {
        start: {
          line: 10,
          column: 46
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "4": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 38,
          column: 26
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 27,
          column: 15
        }
      },
      "6": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "7": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "8": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 37,
          column: 6
        }
      },
      "9": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 48
        }
      },
      "10": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 43,
          column: 4
        }
      },
      "11": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 60,
          column: 4
        }
      },
      "12": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 86,
          column: 1
        }
      },
      "13": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "14": {
        start: {
          line: 88,
          column: 21
        },
        end: {
          line: 127,
          column: 1
        }
      },
      "15": {
        start: {
          line: 89,
          column: 21
        },
        end: {
          line: 89,
          column: 88
        }
      },
      "16": {
        start: {
          line: 92,
          column: 2
        },
        end: {
          line: 98,
          column: 3
        }
      },
      "17": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 126
        }
      },
      "18": {
        start: {
          line: 94,
          column: 9
        },
        end: {
          line: 98,
          column: 3
        }
      },
      "19": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 118
        }
      },
      "20": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 127
        }
      },
      "21": {
        start: {
          line: 100,
          column: 2
        },
        end: {
          line: 126,
          column: 4
        }
      },
      "22": {
        start: {
          line: 131,
          column: 0
        },
        end: {
          line: 143,
          column: 2
        }
      },
      "23": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 154,
          column: 2
        }
      },
      "24": {
        start: {
          line: 157,
          column: 0
        },
        end: {
          line: 165,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 7,
            column: 27
          }
        },
        loc: {
          start: {
            line: 7,
            column: 104
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 38,
            column: 3
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 50
          },
          end: {
            line: 30,
            column: 51
          }
        },
        loc: {
          start: {
            line: 30,
            column: 65
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 12
          }
        },
        loc: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 63,
            column: 22
          },
          end: {
            line: 63,
            column: 23
          }
        },
        loc: {
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 64
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 88,
            column: 21
          },
          end: {
            line: 88,
            column: 22
          }
        },
        loc: {
          start: {
            line: 88,
            column: 110
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 88
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 89,
            column: 21
          },
          end: {
            line: 89,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 42
          },
          end: {
            line: 89,
            column: 84
          }
        }, {
          start: {
            line: 89,
            column: 87
          },
          end: {
            line: 89,
            column: 88
          }
        }],
        line: 89
      },
      "1": {
        loc: {
          start: {
            line: 92,
            column: 2
          },
          end: {
            line: 98,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 2
          },
          end: {
            line: 98,
            column: 3
          }
        }, {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 98,
            column: 3
          }
        }],
        line: 92
      },
      "2": {
        loc: {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 98,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 98,
            column: 3
          }
        }, {
          start: {
            line: 96,
            column: 9
          },
          end: {
            line: 98,
            column: 3
          }
        }],
        line: 94
      },
      "3": {
        loc: {
          start: {
            line: 113,
            column: 7
          },
          end: {
            line: 117,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 7
          },
          end: {
            line: 113,
            column: 13
          }
        }, {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 15
          }
        }],
        line: 113
      },
      "4": {
        loc: {
          start: {
            line: 115,
            column: 11
          },
          end: {
            line: 115,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 40
          },
          end: {
            line: 115,
            column: 65
          }
        }, {
          start: {
            line: 115,
            column: 68
          },
          end: {
            line: 115,
            column: 90
          }
        }],
        line: 115
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ab62b94a51a9140c945f5989db544b82ce6a63bd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1iixtnsu26 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1iixtnsu26();
cov_1iixtnsu26().s[0]++;
var AnimatedScoreCard = function AnimatedScoreCard(_ref) {
  var score = _ref.score,
    totalQuestions = _ref.totalQuestions,
    percentage = _ref.percentage,
    resultConfig = _ref.resultConfig,
    colors = _ref.colors,
    localStyles = _ref.localStyles;
  cov_1iixtnsu26().f[0]++;
  var progressAnim = (cov_1iixtnsu26().s[1]++, (0, _react.useRef)(new _reactNative.Animated.Value(0)).current);
  var scoreAnim = (cov_1iixtnsu26().s[2]++, (0, _react.useRef)(new _reactNative.Animated.Value(0)).current);
  var _ref2 = (cov_1iixtnsu26().s[3]++, (0, _react.useState)(0)),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    displayedScore = _ref3[0],
    setDisplayedScore = _ref3[1];
  cov_1iixtnsu26().s[4]++;
  (0, _react.useEffect)(function () {
    cov_1iixtnsu26().f[1]++;
    cov_1iixtnsu26().s[5]++;
    _reactNative.Animated.parallel([_reactNative.Animated.timing(progressAnim, {
      toValue: percentage,
      duration: 800,
      delay: 300,
      useNativeDriver: false
    }), _reactNative.Animated.timing(scoreAnim, {
      toValue: score,
      duration: 800,
      delay: 300,
      useNativeDriver: true
    })]).start();
    var scoreListenerId = (cov_1iixtnsu26().s[6]++, scoreAnim.addListener(function (_ref4) {
      var value = _ref4.value;
      cov_1iixtnsu26().f[2]++;
      cov_1iixtnsu26().s[7]++;
      setDisplayedScore(Math.floor(value));
    }));
    cov_1iixtnsu26().s[8]++;
    return function () {
      cov_1iixtnsu26().f[3]++;
      cov_1iixtnsu26().s[9]++;
      scoreAnim.removeListener(scoreListenerId);
    };
  }, [score, percentage]);
  var progressWidth = (cov_1iixtnsu26().s[10]++, progressAnim.interpolate({
    inputRange: [0, 100],
    outputRange: ['0%', '100%']
  }));
  cov_1iixtnsu26().s[11]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: [localStyles.scoreCard, {
      backgroundColor: colors.surface
    }],
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: localStyles.scoreRow,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: [localStyles.scoreNumber, {
          color: resultConfig.color
        }],
        children: displayedScore
      }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
        style: [localStyles.scoreSlash, {
          color: colors.textSecondary
        }],
        children: ["/", totalQuestions]
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: [localStyles.progressBar, {
        backgroundColor: '#F3F4F6'
      }],
      children: (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {
        style: [localStyles.progressFill, {
          backgroundColor: resultConfig.color,
          width: progressWidth
        }]
      })
    }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
      style: [localStyles.percentageText, {
        color: resultConfig.color
      }],
      children: [" ", percentage, "% de r\xE9ussite "]
    })]
  });
};
cov_1iixtnsu26().s[12]++;
var ResultButtons = function ResultButtons(_ref5) {
  var colors = _ref5.colors,
    resultConfig = _ref5.resultConfig,
    handleRestartPress = _ref5.handleRestartPress,
    handleFinishPress = _ref5.handleFinishPress,
    localStyles = _ref5.localStyles;
  cov_1iixtnsu26().f[4]++;
  cov_1iixtnsu26().s[13]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: localStyles.buttonsContainer,
    children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      style: [localStyles.restartButton, {
        backgroundColor: colors.surface
      }],
      onPress: handleRestartPress,
      activeOpacity: 0.8,
      children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: localStyles.buttonContent,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: localStyles.restartIcon,
          children: "\uD83D\uDD04"
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: [localStyles.restartText, {
            color: colors.text
          }],
          children: "Rejouer"
        })]
      })
    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      style: [localStyles.finishButton, {
        backgroundColor: resultConfig.color
      }],
      onPress: handleFinishPress,
      activeOpacity: 0.8,
      children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: localStyles.buttonContent,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: localStyles.finishIcon,
          children: "\u2713"
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: localStyles.finishText,
          children: "Terminer"
        })]
      })
    })]
  });
};
cov_1iixtnsu26().s[14]++;
var ResultScreen = function ResultScreen(_ref6) {
  var score = _ref6.score,
    totalQuestions = _ref6.totalQuestions,
    source = _ref6.source,
    handleRestart = _ref6.handleRestart,
    handleFinish = _ref6.handleFinish,
    localStyles = _ref6.localStyles,
    colors = _ref6.colors;
  cov_1iixtnsu26().f[5]++;
  var percentage = (cov_1iixtnsu26().s[15]++, totalQuestions > 0 ? (cov_1iixtnsu26().b[0][0]++, Math.round(score / totalQuestions * 100)) : (cov_1iixtnsu26().b[0][1]++, 0));
  var resultConfig;
  cov_1iixtnsu26().s[16]++;
  if (percentage >= 80) {
    cov_1iixtnsu26().b[1][0]++;
    cov_1iixtnsu26().s[17]++;
    resultConfig = {
      emoji: "🎉",
      title: "Excellent !",
      message: "Vous maîtrisez parfaitement ces mots !",
      color: "#10B981"
    };
  } else {
    cov_1iixtnsu26().b[1][1]++;
    cov_1iixtnsu26().s[18]++;
    if (percentage >= 60) {
      cov_1iixtnsu26().b[2][0]++;
      cov_1iixtnsu26().s[19]++;
      resultConfig = {
        emoji: "👍",
        title: "Bien joué !",
        message: "Bonne progression, continuez !",
        color: "#3B82F6"
      };
    } else {
      cov_1iixtnsu26().b[2][1]++;
      cov_1iixtnsu26().s[20]++;
      resultConfig = {
        emoji: "📖",
        title: "À améliorer",
        message: "Révisez encore ces mots pour progresser",
        color: "#F59E0B"
      };
    }
  }
  cov_1iixtnsu26().s[21]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: localStyles.resultContainer,
    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: localStyles.resultEmoji,
      children: resultConfig.emoji
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [localStyles.resultTitle, {
        color: colors.text
      }],
      children: resultConfig.title
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [localStyles.resultMessage, {
        color: colors.textSecondary
      }],
      children: resultConfig.message
    }), (0, _jsxRuntime.jsx)(AnimatedScoreCard, {
      score: score,
      totalQuestions: totalQuestions,
      percentage: percentage,
      resultConfig: resultConfig,
      colors: colors,
      localStyles: localStyles
    }), (cov_1iixtnsu26().b[3][0]++, source) && (cov_1iixtnsu26().b[3][1]++, (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [localStyles.sourceText, {
        color: colors.textSecondary
      }],
      children: source === 'popup_trigger' ? (cov_1iixtnsu26().b[4][0]++, '🤖 Révision automatique') : (cov_1iixtnsu26().b[4][1]++, '👤 Révision manuelle')
    })), (0, _jsxRuntime.jsx)(ResultButtons, {
      colors: colors,
      resultConfig: resultConfig,
      handleRestartPress: handleRestart,
      handleFinishPress: handleFinish,
      localStyles: localStyles
    })]
  });
};
cov_1iixtnsu26().s[22]++;
AnimatedScoreCard.propTypes = {
  score: _propTypes.default.number.isRequired,
  totalQuestions: _propTypes.default.number.isRequired,
  percentage: _propTypes.default.number.isRequired,
  resultConfig: _propTypes.default.shape({
    emoji: _propTypes.default.string,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    color: _propTypes.default.string
  }).isRequired,
  colors: _propTypes.default.object.isRequired,
  localStyles: _propTypes.default.object.isRequired
};
cov_1iixtnsu26().s[23]++;
ResultButtons.propTypes = {
  colors: _propTypes.default.object.isRequired,
  resultConfig: _propTypes.default.shape({
    color: _propTypes.default.string.isRequired
  }).isRequired,
  handleRestartPress: _propTypes.default.func.isRequired,
  handleFinishPress: _propTypes.default.func.isRequired,
  localStyles: _propTypes.default.object.isRequired
};
cov_1iixtnsu26().s[24]++;
ResultScreen.propTypes = {
  score: _propTypes.default.number.isRequired,
  totalQuestions: _propTypes.default.number.isRequired,
  source: _propTypes.default.string,
  handleRestart: _propTypes.default.func.isRequired,
  handleFinish: _propTypes.default.func.isRequired,
  localStyles: _propTypes.default.object.isRequired,
  colors: _propTypes.default.object.isRequired
};
var _default = exports.default = ResultScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,