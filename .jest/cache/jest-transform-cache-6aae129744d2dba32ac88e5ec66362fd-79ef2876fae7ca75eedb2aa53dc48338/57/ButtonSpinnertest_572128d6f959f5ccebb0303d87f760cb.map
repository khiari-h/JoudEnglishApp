{"version":3,"names":["_getJestObj","mock","RN","jest","requireActual","Object","assign","ActivityIndicator","fn","_interopRequireDefault","require","_react","_reactNative","_ButtonSpinner","_reactNative2","_jsxRuntime","_require","describe","beforeEach","clearAllMocks","it","mockSize","mockColor","render","jsx","default","size","color","expect","toHaveBeenCalledWith","objectContaining","testID","_render","getByTestId","toBeTruthy"],"sources":["ButtonSpinner.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport ButtonSpinner from '../../../src/components/ui/Button/ButtonSpinner';\r\nimport { ActivityIndicator } from 'react-native';\r\n\r\n// Mock de l'ActivityIndicator pour vérifier les props\r\njest.mock('react-native', () => {\r\n  const RN = jest.requireActual('react-native');\r\n  return {\r\n    ...RN,\r\n    ActivityIndicator: jest.fn(() => null), // On le mocke pour ne pas avoir le vrai composant\r\n  };\r\n});\r\n\r\ndescribe('ButtonSpinner', () => {\r\n  beforeEach(() => {\r\n    // Réinitialise les mocks avant chaque test\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it('devrait rendre un ActivityIndicator avec les props size et color', () => {\r\n    const mockSize = 'large';\r\n    const mockColor = '#FF0000';\r\n    render(<ButtonSpinner size={mockSize} color={mockColor} />);\r\n    \r\n    // On vérifie que le composant ActivityIndicator a été appelé avec les bonnes props\r\n    expect(ActivityIndicator).toHaveBeenCalledWith(\r\n      expect.objectContaining({\r\n        size: mockSize,\r\n        color: mockColor,\r\n        testID: 'button-loader',\r\n      }),\r\n      {}\r\n    );\r\n  });\r\n\r\n  it('devrait avoir le testID \"button-loader\"', () => {\r\n    const { getByTestId } = render(<ButtonSpinner />);\r\n    expect(getByTestId('button-loader')).toBeTruthy();\r\n  });\r\n});"],"mappings":"AAMAA,WAAA,GAAKC,IAAI,CAAC,cAAc,EAAE,YAAM;EAC9B,IAAMC,EAAE,GAAGC,IAAI,CAACC,aAAa,CAAC,cAAc,CAAC;EAC7C,OAAAC,MAAA,CAAAC,MAAA,KACKJ,EAAE;IACLK,iBAAiB,EAAEJ,IAAI,CAACK,EAAE,CAAC;MAAA,OAAM,IAAI;IAAA;EAAC;AAE1C,CAAC,CAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AAZH,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,cAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,aAAA,GAAAJ,OAAA;AAAiD,IAAAK,WAAA,GAAAL,OAAA;AAAA,SAAAV,YAAA;EAAA,IAAAgB,QAAA,GAAAN,OAAA;IAAAP,IAAA,GAAAa,QAAA,CAAAb,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAWjDc,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,UAAU,CAAC,YAAM;IAEff,IAAI,CAACgB,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFC,EAAE,CAAC,kEAAkE,EAAE,YAAM;IAC3E,IAAMC,QAAQ,GAAG,OAAO;IACxB,IAAMC,SAAS,GAAG,SAAS;IAC3B,IAAAC,mBAAM,EAAC,IAAAR,WAAA,CAAAS,GAAA,EAACX,cAAA,CAAAY,OAAa;MAACC,IAAI,EAAEL,QAAS;MAACM,KAAK,EAAEL;IAAU,CAAE,CAAC,CAAC;IAG3DM,MAAM,CAACrB,+BAAiB,CAAC,CAACsB,oBAAoB,CAC5CD,MAAM,CAACE,gBAAgB,CAAC;MACtBJ,IAAI,EAAEL,QAAQ;MACdM,KAAK,EAAEL,SAAS;MAChBS,MAAM,EAAE;IACV,CAAC,CAAC,EACF,CAAC,CACH,CAAC;EACH,CAAC,CAAC;EAEFX,EAAE,CAAC,yCAAyC,EAAE,YAAM;IAClD,IAAAY,OAAA,GAAwB,IAAAT,mBAAM,EAAC,IAAAR,WAAA,CAAAS,GAAA,EAACX,cAAA,CAAAY,OAAa,IAAE,CAAC,CAAC;MAAzCQ,WAAW,GAAAD,OAAA,CAAXC,WAAW;IACnBL,MAAM,CAACK,WAAW,CAAC,eAAe,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;EACnD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}