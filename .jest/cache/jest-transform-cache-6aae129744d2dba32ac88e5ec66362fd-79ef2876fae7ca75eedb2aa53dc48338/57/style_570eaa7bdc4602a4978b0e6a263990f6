a8e00a0a22156764cb85846dd2b6de8d
function cov_b50nzusg9() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationTypingIndicator\\style.js";
  var hash = "e5423c6fa21073fca2a2b87d2d811cc6b5fd49ab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\conversations\\ConversationTypingIndicator\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 27,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e5423c6fa21073fca2a2b87d2d811cc6b5fd49ab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_b50nzusg9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b50nzusg9();
import { StyleSheet } from 'react-native';
var styles = (cov_b50nzusg9().s[0]++, StyleSheet.create({
  messageBubble: {
    maxWidth: '30%',
    padding: 12,
    borderRadius: 20,
    marginBottom: 12,
    paddingVertical: 12
  },
  botBubble: {
    alignSelf: 'flex-start',
    borderBottomLeftRadius: 4
  },
  typingContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    padding: 4
  },
  typingDot: {
    width: 8,
    height: 8,
    borderRadius: 4,
    backgroundColor: '#64748b'
  }
}));
export default styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHlsZVNoZWV0Iiwic3R5bGVzIiwiY292X2I1MG56dXNnOSIsInMiLCJjcmVhdGUiLCJtZXNzYWdlQnViYmxlIiwibWF4V2lkdGgiLCJwYWRkaW5nIiwiYm9yZGVyUmFkaXVzIiwibWFyZ2luQm90dG9tIiwicGFkZGluZ1ZlcnRpY2FsIiwiYm90QnViYmxlIiwiYWxpZ25TZWxmIiwiYm9yZGVyQm90dG9tTGVmdFJhZGl1cyIsInR5cGluZ0NvbnRhaW5lciIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJ0eXBpbmdEb3QiLCJ3aWR0aCIsImhlaWdodCIsImJhY2tncm91bmRDb2xvciJdLCJzb3VyY2VzIjpbInN0eWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIG1lc3NhZ2VCdWJibGU6IHtcbiAgICBtYXhXaWR0aDogJzMwJScsXG4gICAgcGFkZGluZzogMTIsXG4gICAgYm9yZGVyUmFkaXVzOiAyMCxcbiAgICBtYXJnaW5Cb3R0b206IDEyLFxuICAgIHBhZGRpbmdWZXJ0aWNhbDogMTIsXG4gIH0sXG4gIGJvdEJ1YmJsZToge1xuICAgIGFsaWduU2VsZjogJ2ZsZXgtc3RhcnQnLFxuICAgIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IDQsXG4gIH0sXG4gIHR5cGluZ0NvbnRhaW5lcjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBwYWRkaW5nOiA0LFxuICB9LFxuICB0eXBpbmdEb3Q6IHtcbiAgICB3aWR0aDogOCxcbiAgICBoZWlnaHQ6IDgsXG4gICAgYm9yZGVyUmFkaXVzOiA0LFxuICAgIGJhY2tncm91bmRDb2xvcjogJyM2NDc0OGInLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxlcztcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsU0FBU0EsVUFBVSxRQUFRLGNBQWM7QUFFekMsSUFBTUMsTUFBTSxJQUFBQyxhQUFBLEdBQUFDLENBQUEsT0FBR0gsVUFBVSxDQUFDSSxNQUFNLENBQUM7RUFDL0JDLGFBQWEsRUFBRTtJQUNiQyxRQUFRLEVBQUUsS0FBSztJQUNmQyxPQUFPLEVBQUUsRUFBRTtJQUNYQyxZQUFZLEVBQUUsRUFBRTtJQUNoQkMsWUFBWSxFQUFFLEVBQUU7SUFDaEJDLGVBQWUsRUFBRTtFQUNuQixDQUFDO0VBQ0RDLFNBQVMsRUFBRTtJQUNUQyxTQUFTLEVBQUUsWUFBWTtJQUN2QkMsc0JBQXNCLEVBQUU7RUFDMUIsQ0FBQztFQUNEQyxlQUFlLEVBQUU7SUFDZkMsYUFBYSxFQUFFLEtBQUs7SUFDcEJDLFVBQVUsRUFBRSxRQUFRO0lBQ3BCQyxjQUFjLEVBQUUsUUFBUTtJQUN4QlYsT0FBTyxFQUFFO0VBQ1gsQ0FBQztFQUNEVyxTQUFTLEVBQUU7SUFDVEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsTUFBTSxFQUFFLENBQUM7SUFDVFosWUFBWSxFQUFFLENBQUM7SUFDZmEsZUFBZSxFQUFFO0VBQ25CO0FBQ0YsQ0FBQyxDQUFDO0FBRUYsZUFBZXBCLE1BQU0iLCJpZ25vcmVMaXN0IjpbXX0=