ae00645ea6e3e8636aae07fad74530be
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _CategorySelector = _interopRequireDefault(require("../../../../components/exercise-common/CategorySelector"));
var _react = require("react");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1rvowhqdue() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyCategorySelector\\index.js";
  var hash = "908acf004ff3ea0b79c42aa09c40dd5ce4b804f9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\vocabulary\\VocabularyCategorySelector\\index.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 35
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "1": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "2": {
        start: {
          line: 17,
          column: 72
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "3": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "4": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "5": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 26
        }
      },
      "6": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 35
        }
      },
      "7": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 40,
          column: 4
        }
      },
      "8": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 53,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 35
          },
          end: {
            line: 10,
            column: 36
          }
        },
        loc: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 45
          },
          end: {
            line: 17,
            column: 46
          }
        },
        loc: {
          start: {
            line: 17,
            column: 72
          },
          end: {
            line: 20,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 43
          },
          end: {
            line: 24,
            column: 44
          }
        },
        loc: {
          start: {
            line: 24,
            column: 59
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 17
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 19
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 54
          },
          end: {
            line: 36,
            column: 55
          }
        }, {
          start: {
            line: 36,
            column: 58
          },
          end: {
            line: 36,
            column: 71
          }
        }],
        line: 36
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "908acf004ff3ea0b79c42aa09c40dd5ce4b804f9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1rvowhqdue = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rvowhqdue();
cov_1rvowhqdue().s[0]++;
var VocabularyCategorySelector = function VocabularyCategorySelector(_ref) {
  var _ref$categories = _ref.categories,
    categories = _ref$categories === void 0 ? (cov_1rvowhqdue().b[0][0]++, []) : _ref$categories,
    _ref$selectedIndex = _ref.selectedIndex,
    selectedIndex = _ref$selectedIndex === void 0 ? (cov_1rvowhqdue().b[1][0]++, 0) : _ref$selectedIndex,
    onSelectCategory = _ref.onSelectCategory,
    levelColor = _ref.levelColor;
  cov_1rvowhqdue().f[0]++;
  var formattedCategories = (cov_1rvowhqdue().s[1]++, categories.map(function (categoryTitle, index) {
    cov_1rvowhqdue().f[1]++;
    cov_1rvowhqdue().s[2]++;
    return {
      id: index,
      name: categoryTitle
    };
  }));
  var handleCategorySelect = (cov_1rvowhqdue().s[3]++, (0, _react.useCallback)(function (categoryId) {
    cov_1rvowhqdue().f[2]++;
    cov_1rvowhqdue().s[4]++;
    if (categoryId === null) {
      cov_1rvowhqdue().b[2][0]++;
      cov_1rvowhqdue().s[5]++;
      onSelectCategory(0);
    } else {
      cov_1rvowhqdue().b[2][1]++;
      cov_1rvowhqdue().s[6]++;
      onSelectCategory(categoryId);
    }
  }, [onSelectCategory]));
  cov_1rvowhqdue().s[7]++;
  return (0, _jsxRuntime.jsx)(_CategorySelector.default, {
    categories: formattedCategories,
    selectedCategory: selectedIndex === undefined ? (cov_1rvowhqdue().b[3][0]++, 0) : (cov_1rvowhqdue().b[3][1]++, selectedIndex),
    onSelectCategory: handleCategorySelect,
    primaryColor: levelColor
  });
};
cov_1rvowhqdue().s[8]++;
VocabularyCategorySelector.propTypes = {
  categories: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
  selectedIndex: _propTypes.default.number,
  onSelectCategory: _propTypes.default.func.isRequired,
  levelColor: _propTypes.default.string
};
var _default = exports.default = VocabularyCategorySelector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,