{"version":3,"names":["_timeConstants","require","cov_1x6v9xa9dw","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","isValidTimeInSeconds","exports","timeInSeconds","isNaN","isFinite","sanitizeTimeStats","stats","Object","assign","DEFAULT_STATS","sanitized","values","EXERCISE_TYPES","forEach","exerciseType","timeValue","Math","floor","getElapsedSeconds","startTime","elapsed","Date","now","max","secondsToMinutes","seconds","minutesToSeconds","minutes","formatTime","remainingSeconds","formatTimeCompact","toString","padStart","isValidStatsStructure","requiredTypes","hasAllTypes","every","prototype","hasOwnProperty","call","getTotalTimeFromStats","reduce","total","time","getSortedStatsByTime","entries","map","_ref","_ref2","_slicedToArray2","default","sort","a","hasMinimumTime","minimumMinutes","arguments","length","includes","minimumSeconds"],"sources":["timeUtils.js"],"sourcesContent":["// utils/timeUtils.js\r\n/**\r\n * Utilitaires pour la gestion et validation des temps\r\n */\r\n\r\nimport { DEFAULT_STATS, EXERCISE_TYPES } from './timeConstants.js';\r\n\r\n/**\r\n * Valide qu'une valeur de temps en secondes est correcte\r\n * @param {any} timeInSeconds - Valeur à valider\r\n * @returns {boolean} True si valide\r\n */\r\nexport const isValidTimeInSeconds = (timeInSeconds) => {\r\n  return (\r\n    typeof timeInSeconds === 'number' &&\r\n    !isNaN(timeInSeconds) &&\r\n    isFinite(timeInSeconds) &&\r\n    timeInSeconds >= 0 &&\r\n    timeInSeconds <= 86400 // Max 24h par session\r\n  );\r\n};\r\n\r\n/**\r\n * Sanitise les stats de temps pour éviter les valeurs invalides\r\n * @param {object} stats - Stats à sanitiser\r\n * @returns {object} Stats nettoyées\r\n */\r\nexport const sanitizeTimeStats = (stats) => {\r\n  if (!stats || typeof stats !== 'object') {\r\n    return { ...DEFAULT_STATS };\r\n  }\r\n\r\n  const sanitized = { ...DEFAULT_STATS };\r\n\r\n  // Valider chaque type d'exercice\r\n  Object.values(EXERCISE_TYPES).forEach(exerciseType => {\r\n    const timeValue = stats[exerciseType];\r\n    \r\n    if (isValidTimeInSeconds(timeValue)) {\r\n      sanitized[exerciseType] = Math.floor(timeValue); // Arrondir à l'entier\r\n    } else {\r\n      sanitized[exerciseType] = 0; // Valeur par défaut\r\n    }\r\n  });\r\n\r\n  return sanitized;\r\n};\r\n\r\n/**\r\n * Calcule le temps écoulé depuis un timestamp\r\n * @param {number} startTime - Timestamp de début\r\n * @returns {number} Temps écoulé en secondes\r\n */\r\nexport const getElapsedSeconds = (startTime) => {\r\n  if (!startTime || typeof startTime !== 'number') {\r\n    return 0;\r\n  }\r\n\r\n  const elapsed = Math.floor((Date.now() - startTime) / 1000);\r\n  return Math.max(0, elapsed);\r\n};\r\n\r\n/**\r\n * Convertit des secondes en minutes (arrondi)\r\n * @param {number} seconds - Secondes à convertir\r\n * @returns {number} Minutes arrondies\r\n */\r\nexport const secondsToMinutes = (seconds) => {\r\n  if (!isValidTimeInSeconds(seconds)) {\r\n    return 0;\r\n  }\r\n  \r\n  return Math.floor(seconds / 60);\r\n};\r\n\r\n/**\r\n * Convertit des minutes en secondes\r\n * @param {number} minutes - Minutes à convertir\r\n * @returns {number} Secondes\r\n */\r\nexport const minutesToSeconds = (minutes) => {\r\n  if (typeof minutes !== 'number' || isNaN(minutes) || minutes < 0) {\r\n    return 0;\r\n  }\r\n  \r\n  return minutes * 60;\r\n};\r\n\r\n/**\r\n * Formate un temps en secondes pour l'affichage\r\n * @param {number} seconds - Secondes à formater\r\n * @returns {string} Temps formaté (ex: \"5m 30s\")\r\n */\r\nexport const formatTime = (seconds) => {\r\n  if (!isValidTimeInSeconds(seconds)) {\r\n    return \"0s\";\r\n  }\r\n\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = seconds % 60;\r\n\r\n  if (minutes === 0) {\r\n    return `${remainingSeconds}s`;\r\n  }\r\n\r\n  if (remainingSeconds === 0) {\r\n    return `${minutes}m`;\r\n  }\r\n\r\n  return `${minutes}m ${remainingSeconds}s`;\r\n};\r\n\r\n/**\r\n * Formate un temps en secondes pour l'affichage compact\r\n * @param {number} seconds - Secondes à formater\r\n * @returns {string} Temps formaté compact (ex: \"5:30\")\r\n */\r\nexport const formatTimeCompact = (seconds) => {\r\n  if (!isValidTimeInSeconds(seconds)) {\r\n    return \"0:00\";\r\n  }\r\n\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = seconds % 60;\r\n\r\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n};\r\n\r\n/**\r\n * Valide qu'un objet de stats a la bonne structure\r\n * @param {any} stats - Stats à valider\r\n * @returns {boolean} True si structure valide\r\n */\r\nexport const isValidStatsStructure = (stats) => {\r\n  if (!stats || typeof stats !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  // Vérifier que tous les types d'exercices requis sont présents\r\n  const requiredTypes = Object.values(EXERCISE_TYPES);\r\n  const hasAllTypes = requiredTypes.every(type => \r\n    Object.prototype.hasOwnProperty.call(stats, type) && isValidTimeInSeconds(stats[type])\r\n  );\r\n\r\n  return hasAllTypes;\r\n};\r\n\r\n/**\r\n * Calcule le temps total de toutes les stats\r\n * @param {object} stats - Stats à additionner\r\n * @returns {number} Temps total en secondes\r\n */\r\nexport const getTotalTimeFromStats = (stats) => {\r\n  if (!isValidStatsStructure(stats)) {\r\n    return 0;\r\n  }\r\n\r\n  return Object.values(stats).reduce((total, time) => total + time, 0);\r\n};\r\n\r\n/**\r\n * Obtient les stats triées par temps décroissant\r\n * @param {object} stats - Stats à trier\r\n * @returns {Array} Tableau d'objets {exerciseType, time} triés\r\n */\r\nexport const getSortedStatsByTime = (stats) => {\r\n  if (!isValidStatsStructure(stats)) {\r\n    return [];\r\n  }\r\n\r\n  return Object.entries(stats)\r\n    .map(([exerciseType, time]) => ({ exerciseType, time }))\r\n    .sort((a, b) => b.time - a.time);\r\n};\r\n\r\n/**\r\n * Vérifie si l'utilisateur a du temps sur un exercice spécifique\r\n * @param {object} stats - Stats de l'utilisateur\r\n * @param {string} exerciseType - Type d'exercice à vérifier\r\n * @param {number} minimumMinutes - Minimum en minutes (défaut: 1)\r\n * @returns {boolean} True si l'utilisateur a assez de temps\r\n */\r\nexport const hasMinimumTime = (stats, exerciseType, minimumMinutes = 1) => {\r\n  if (!isValidStatsStructure(stats) || !Object.values(EXERCISE_TYPES).includes(exerciseType)) {\r\n    return false;\r\n  }\r\n\r\n  const timeInSeconds = stats[exerciseType] || 0;\r\n  const minimumSeconds = minutesToSeconds(minimumMinutes);\r\n  \r\n  return timeInSeconds >= minimumSeconds;\r\n};"],"mappings":";;;;;;AAKA,IAAAA,cAAA,GAAAC,OAAA;AAAmE,SAAAC,eeAAA;IAAArB,IAAA;EAAA;EAAA,IAAAsB,QAAA,GAAArB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAmB,QAAA,CAAAvB,IAAA,KAAAuB,QAAA,CAAAvB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAsB,QAAA,CAAAvB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAmB,cAAA,GAAAD,QAAA,CAAAvB,IAAA;EAAA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAyB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAzB,cAAA;AAAAA,cAAA,GAAAoB,CAAA;AAO5D,IAAMM,oBAAoB,GAAAC,OAAA,CAAAD,oBAAA,GAAG,SAAvBA,oBAAoBA,CAAIE,aAAa,EAAK;EAAA5B,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACrD,OACE,CAAApB,cAAA,GAAAsB,CAAA,iBAAOM,aAAa,KAAK,QAAQ,MAAA5B,cAAA,GAAAsB,CAAA,UACjC,CAACO,KAAK,CAACD,aAAa,CAAC,MAAA5B,cAAA,GAAAsB,CAAA,UACrBQ,QAAQ,CAACF,aAAa,CAAC,MAAA5B,cAAA,GAAAsB,CAAA,UACvBM,aAAa,IAAI,CAAC,MAAA5B,cAAA,GAAAsB,CAAA,UAClBM,aAAa,IAAI,KAAK;AAE1B,CAAC;AAAC5B,cAAA,GAAAoB,CAAA;AAOK,IAAMW,iBAAiB,GAAAJ,OAAA,CAAAI,iBAAA,GAAG,SAApBA,iBAAiBA,CAAIC,KAAK,EAAK;EAAAhC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAC1C,IAAI,CAAApB,cAAA,GAAAsB,CAAA,WAACU,KAAK,MAAAhC,cAAA,GAAAsB,CAAA,UAAI,OAAOU,KAAK,KAAK,QAAQ,GAAE;IAAAhC,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACvC,OAAAa,MAAA,CAAAC,MAAA,KAAYC,4BAAa;EAC3B,CAAC;IAAAnC,cAAA,GAAAsB,CAAA;EAAA;EAED,IAAMc,SAAS,IAAApC,cAAA,GAAAoB,CAAA,OAAAa,MAAA,CAAAC,MAAA,KAAQC,4BAAa,EAAE;EAACnC,cAAA,GAAAoB,CAAA;EAGvCa,MAAM,CAACI,MAAM,CAACC,6BAAc,CAAC,CAACC,OAAO,CAAC,UAAAC,YAAY,EAAI;IAAAxC,cAAA,GAAAqB,CAAA;IACpD,IAAMoB,SAAS,IAAAzC,cAAA,GAAAoB,CAAA,OAAGY,KAAK,CAACQ,YAAY,CAAC;IAACxC,cAAA,GAAAoB,CAAA;IAEtC,IAAIM,oBAAoB,CAACe,SAAS,CAAC,EAAE;MAAAzC,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACnCgB,SAAS,CAACI,YAAY,CAAC,GAAGE,IAAI,CAACC,KAAK,CAACF,SAAS,CAAC;IACjD,CAAC,MAAM;MAAAzC,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACLgB,SAAS,CAACI,YAAY,CAAC,GAAG,CAAC;IAC7B;EACF,CAAC,CAAC;EAACxC,cAAA,GAAAoB,CAAA;EAEH,OAAOgB,SAAS;AAClB,CAAC;AAACpC,cAAA,GAAAoB,CAAA;AAOK,IAAMwB,iBAAiB,GAAAjB,OAAA,CAAAiB,iBAAA,GAAG,SAApBA,iBAAiBA,CAAIC,SAAS,EAAK;EAAA7C,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAC9C,IAAI,CAAApB,cAAA,GAAAsB,CAAA,WAACuB,SAAS,MAAA7C,cAAA,GAAAsB,CAAA,UAAI,OAAOuB,SAAS,KAAK,QAAQ,GAAE;IAAA7C,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAC/C,OAAO,CAAC;EACV,CAAC;IAAApB,cAAA,GAAAsB,CAAA;EAAA;EAED,IAAMwB,OAAO,IAAA9C,cAAA,GAAAoB,CAAA,QAAGsB,IAAI,CAACC,KAAK,CAAC,CAACI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,SAAS,IAAI,IAAI,CAAC;EAAC7C,cAAA,GAAAoB,CAAA;EAC5D,OAAOsB,IAAI,CAACO,GAAG,CAAC,CAAC,EAAEH,OAAO,CAAC;AAC7B,CAAC;AAAC9C,cAAA,GAAAoB,CAAA;AAOK,IAAM8B,gBAAgB,GAAAvB,OAAA,CAAAuB,gBAAA,GAAG,SAAnBA,gBAAgBA,CAAIC,OAAO,EAAK;EAAAnD,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAC3C,IAAI,CAACM,oBAAoB,CAACyB,OAAO,CAAC,EAAE;IAAAnD,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAClC,OAAO,CAAC;EACV,CAAC;IAAApB,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EAED,OAAOsB,IAAI,CAACC,KAAK,CAACQ,OAAO,GAAG,EAAE,CAAC;AACjC,CAAC;AAACnD,cAAA,GAAAoB,CAAA;AAOK,IAAMgC,gBAAgB,GAAAzB,OAAA,CAAAyB,gBAAA,GAAG,SAAnBA,gBAAgBA,CAAIC,OAAO,EAAK;EAAArD,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAC3C,IAAI,CAAApB,cAAA,GAAAsB,CAAA,iBAAO+B,OAAO,KAAK,QAAQ,MAAArD,cAAA,GAAAsB,CAAA,UAAIO,KAAK,CAACwB,OAAO,CAAC,MAAArD,cAAA,GAAAsB,CAAA,UAAI+B,OAAO,GAAG,CAAC,GAAE;IAAArD,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAChE,OAAO,CAAC;EACV,CAAC;IAAApB,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EAED,OAAOiC,OAAO,GAAG,EAAE;AACrB,CAAC;AAACrD,cAAA,GAAAoB,CAAA;AAOK,IAAMkC,UAAU,GAAA3B,OAAA,CAAA2B,UAAA,GAAG,SAAbA,UAAUA,CAAIH,OAAO,EAAK;EAAAnD,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACrC,IAAI,CAACM,oBAAoB,CAACyB,OAAO,CAAC,EAAE;IAAAnD,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAClC,OAAO,IAAI;EACb,CAAC;IAAApB,cAAA,GAAAsB,CAAA;EAAA;EAED,IAAM+B,OAAO,IAAArD,cAAA,GAAAoB,CAAA,QAAGsB,IAAI,CAACC,KAAK,CAACQ,OAAO,GAAG,EAAE,CAAC;EACxC,IAAMI,gBAAgB,IAAAvD,cAAA,GAAAoB,CAAA,QAAG+B,OAAO,GAAG,EAAE;EAACnD,cAAA,GAAAoB,CAAA;EAEtC,IAAIiC,OAAO,KAAK,CAAC,EAAE;IAAArD,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACjB,OAAO,GAAGmC,gBAAgB,GAAG;EAC/B,CAAC;IAAAvD,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EAED,IAAImC,gBAAgB,KAAK,CAAC,EAAE;IAAAvD,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAC1B,OAAO,GAAGiC,OAAO,GAAG;EACtB,CAAC;IAAArD,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EAED,OAAO,GAAGiC,OAAO,KAAKE,gBAAgB,GAAG;AAC3C,CAAC;AAACvD,cAAA,GAAAoB,CAAA;AAOK,IAAMoC,iBAAiB,GAAA7B,OAAA,CAAA6B,iBAAA,GAAG,SAApBA,iBAAiBA,CAAIL,OAAO,EAAK;EAAAnD,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAC5C,IAAI,CAACM,oBAAoB,CAACyB,OAAO,CAAC,EAAE;IAAAnD,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAClC,OAAO,MAAM;EACf,CAAC;IAAApB,cAAA,GAAAsB,CAAA;EAAA;EAED,IAAM+B,OAAO,IAAArD,cAAA,GAAAoB,CAAA,QAAGsB,IAAI,CAACC,KAAK,CAACQ,OAAO,GAAG,EAAE,CAAC;EACxC,IAAMI,gBAAgB,IAAAvD,cAAA,GAAAoB,CAAA,QAAG+B,OAAO,GAAG,EAAE;EAACnD,cAAA,GAAAoB,CAAA;EAEtC,OAAO,GAAGiC,OAAO,IAAIE,gBAAgB,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;AACrE,CAAC;AAAC1D,cAAA,GAAAoB,CAAA;AAOK,IAAMuC,qBAAqB,GAAAhC,OAAA,CAAAgC,qBAAA,GAAG,SAAxBA,qBAAqBA,CAAI3B,KAAK,EAAK;EAAAhC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAC9C,IAAI,CAAApB,cAAA,GAAAsB,CAAA,YAACU,KAAK,MAAAhC,cAAA,GAAAsB,CAAA,WAAI,OAAOU,KAAK,KAAK,QAAQ,GAAE;IAAAhC,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACvC,OAAO,KAAK;EACd,CAAC;IAAApB,cAAA,GAAAsB,CAAA;EAAA;EAGD,IAAMsC,aAAa,IAAA5D,cAAA,GAAAoB,CAAA,QAAGa,MAAM,CAACI,MAAM,CAACC,6BAAc,CAAC;EACnD,IAAMuB,WAAW,IAAA7D,cAAA,GAAAoB,CAAA,QAAGwC,aAAa,CAACE,KAAK,CAAC,UAAA7C,IAAI,EAC1C;IAAAjB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAA,QAAApB,cAAA,GAAAsB,CAAA,WAAAW,MAAM,CAAC8B,SAAS,CAACC,cAAc,CAACC,IAAI,CAACjC,KAAK,EAAEf,IAAI,CAAC,MAAAjB,cAAA,GAAAsB,CAAA,WAAII,oBAAoB,CAACM,KAAK,CAACf,IAAI,CAAC,CAAC;EAAD,CACvF,CAAC;EAACjB,cAAA,GAAAoB,CAAA;EAEF,OAAOyC,WAAW;AACpB,CAAC;AAAC7D,cAAA,GAAAoB,CAAA;AAOK,IAAM8C,qBAAqB,GAAAvC,OAAA,CAAAuC,qBAAA,GAAG,SAAxBA,qBAAqBA,CAAIlC,KAAK,EAAK;EAAAhC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAC9C,IAAI,CAACuC,qBAAqB,CAAC3B,KAAK,CAAC,EAAE;IAAAhC,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACjC,OAAO,CAAC;EACV,CAAC;IAAApB,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EAED,OAAOa,MAAM,CAACI,MAAM,CAACL,KAAK,CAAC,CAACmC,MAAM,CAAC,UAACC,KAAK,EAAEC,IAAI,EAAK;IAAArE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAA,OAAAgD,KAAK,GAAGC,IAAI;EAAD,CAAC,EAAE,CAAC,CAAC;AACtE,CAAC;AAACrE,cAAA,GAAAoB,CAAA;AAOK,IAAMkD,oBAAoB,GAAA3C,OAAA,CAAA2C,oBAAA,GAAG,SAAvBA,oBAAoBA,CAAItC,KAAK,EAAK;EAAAhC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAC7C,IAAI,CAACuC,qBAAqB,CAAC3B,KAAK,CAAC,EAAE;IAAAhC,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACjC,OAAO,EAAE;EACX,CAAC;IAAApB,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EAED,OAAOa,MAAM,CAACsC,OAAO,CAACvC,KAAK,CAAC,CACzBwC,GAAG,CAAC,UAAAC,IAAA,EAA2B;IAAA,IAAAC,KAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAH,IAAA;MAAzBjC,YAAY,GAAAkC,KAAA;MAAEL,IAAI,GAAAK,KAAA;IAAA1E,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAO;MAAEoB,YAAY,EAAZA,YAAY;MAAE6B,IAAI,EAAJA;IAAK,CAAC;EAAD,CAAE,CAAC,CACvDQ,IAAI,CAAC,UAACC,CAAC,EAAExD,CAAC,EAAK;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAA,OAAAE,CAAC,CAAC+C,IAAI,GAAGS,CAAC,CAACT,IAAI;EAAD,CAAC,CAAC;AACpC,CAAC;AAACrE,cAAA,GAAAoB,CAAA;AASK,IAAM2D,cAAc,GAAApD,OAAA,CAAAoD,cAAA,GAAG,SAAjBA,cAAcA,CAAI/C,KAAK,EAAEQ,YAAY,EAAyB;EAAA,IAAvBwC,cAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA9D,SAAA,GAAA8D,SAAA,OAAAjF,cAAA,GAAAsB,CAAA,WAAG,CAAC;EAAAtB,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACpE,IAAI,CAAApB,cAAA,GAAAsB,CAAA,YAACqC,qBAAqB,CAAC3B,KAAK,CAAC,MAAAhC,cAAA,GAAAsB,CAAA,WAAI,CAACW,MAAM,CAACI,MAAM,CAACC,6BAAc,CAAC,CAAC6C,QAAQ,CAAC3C,YAAY,CAAC,GAAE;IAAAxC,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAC1F,OAAO,KAAK;EACd,CAAC;IAAApB,cAAA,GAAAsB,CAAA;EAAA;EAED,IAAMM,aAAa,IAAA5B,cAAA,GAAAoB,CAAA,QAAG,CAAApB,cAAA,GAAAsB,CAAA,WAAAU,KAAK,CAACQ,YAAY,CAAC,MAAAxC,cAAA,GAAAsB,CAAA,WAAI,CAAC;EAC9C,IAAM8D,cAAc,IAAApF,cAAA,GAAAoB,CAAA,QAAGgC,gBAAgB,CAAC4B,cAAc,CAAC;EAAChF,cAAA,GAAAoB,CAAA;EAExD,OAAOQ,aAAa,IAAIwD,cAAc;AACxC,CAAC","ignoreList":[]}