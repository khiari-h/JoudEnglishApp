{"version":3,"names":["_reactNative","require","_HeroCard","_interopRequireDefault","_ContentSection","_style","_react","_propTypes","_jsxRuntime","MultipleChoiceMode","_ref","exercise","selectedChoiceIndex","onSelectChoice","_ref$showFeedback","showFeedback","_ref$levelColor","levelColor","styles","createStyles","handleChoicePress","useCallback","index","choices","correctChoiceIndex","jsxs","View","style","container","children","jsx","default","content","text","fontSize","showUnderline","heroCard","title","backgroundColor","instructionSection","choicesContainer","map","choice","isSelected","isCorrect","isIncorrect","TouchableOpacity","choiceOption","borderColor","correctChoice","incorrectChoice","onPress","disabled","choiceContent","choiceIndicator","correctIndicator","incorrectIndicator","Text","choiceIndicatorText","color","String","fromCharCode","choiceText","fontWeight","correctChoiceText","incorrectChoiceText","explanation","feedbackSection","propTypes","PropTypes","shape","string","arrayOf","isRequired","number","func","bool","_default","exports"],"sources":["index.js"],"sourcesContent":["// MultipleChoiceMode/index.js - VERSION REFACTORIS√âE (HeroCard + ContentSection)\r\n\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport HeroCard from \"../../../../../components/ui/HeroCard\";\r\nimport ContentSection from \"../../../../../components/ui/ContentSection\";\r\nimport createStyles from \"./style\";\r\nimport { useCallback } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * ‚úÖ MultipleChoiceMode - Version Refactoris√©e avec composants g√©n√©riques\r\n * Remplace Card par HeroCard + ContentSection + choix simplifi√©s\r\n * * @param {Object} exercise - Exercice actuel\r\n * @param {number} selectedChoiceIndex - Index du choix s√©lectionn√©\r\n * @param {function} onSelectChoice - Callback pour s√©lectionner un choix\r\n * @param {boolean} showFeedback - Afficher le feedback\r\n * @param {string} levelColor - Couleur du niveau\r\n */\r\nconst MultipleChoiceMode = ({\r\n  exercise,\r\n  selectedChoiceIndex,\r\n  onSelectChoice,\r\n  showFeedback = false,\r\n  levelColor = \"#5E60CE\",\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n\r\n  // ‚úÖ CORRECTION : D√©placer le useCallback AVANT le return conditionnel\r\n  const handleChoicePress = useCallback((index) => () => {\r\n    if (!showFeedback) onSelectChoice(index);\r\n  }, [onSelectChoice, showFeedback]);\r\n\r\n  if (!exercise) return null;\r\n\r\n  const choices = exercise.choices || [];\r\n  const correctChoiceIndex = exercise.correctChoiceIndex;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* üéØ HERO SECTION - Texte original */}\r\n      <HeroCard \r\n        content={exercise.text}\r\n        fontSize={24}\r\n        levelColor={levelColor}\r\n        showUnderline={false}\r\n        style={styles.heroCard}\r\n      />\r\n      \r\n      {/* üìù SECTION INSTRUCTIONS */}\r\n      <ContentSection\r\n        title=\"Instructions\"\r\n        content=\"Choisissez la version correcte parmi les options ci-dessous.\"\r\n        levelColor={levelColor}\r\n        backgroundColor=\"#F8F9FA\"\r\n        style={styles.instructionSection}\r\n      />\r\n\r\n      {/* ‚úÖ CHOIX MULTIPLES */}\r\n      <View style={styles.choicesContainer}>\r\n        {choices.map((choice, index) => {\r\n          const isSelected = selectedChoiceIndex === index;\r\n          const isCorrect = showFeedback && index === correctChoiceIndex;\r\n          const isIncorrect = showFeedback && isSelected && index !== correctChoiceIndex;\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              key={`choice-${choice}-${index}`}\r\n              style={[\r\n                styles.choiceOption,\r\n                isSelected && !showFeedback && {\r\n                  borderColor: levelColor,\r\n                  backgroundColor: `${levelColor}10`,\r\n                },\r\n                isCorrect && styles.correctChoice,\r\n                isIncorrect && styles.incorrectChoice,\r\n              ]}\r\n              onPress={handleChoicePress(index)}\r\n              disabled={showFeedback}\r\n            >\r\n              <View style={styles.choiceContent}>\r\n                <View style={[\r\n                  styles.choiceIndicator,\r\n                  isSelected && !showFeedback && { backgroundColor: levelColor },\r\n                  isCorrect && styles.correctIndicator,\r\n                  isIncorrect && styles.incorrectIndicator,\r\n                ]}>\r\n                  <Text style={[\r\n                    styles.choiceIndicatorText,\r\n                    (isSelected && !showFeedback) || isCorrect || isIncorrect \r\n                      ? { color: 'white' } \r\n                      : { color: '#64748b' }\r\n                  ]}>\r\n                    {String.fromCharCode(65 + index)} {/* A, B, C, D */}\r\n                  </Text>\r\n                </View>\r\n                \r\n                <Text style={[\r\n                  styles.choiceText,\r\n                  isSelected && !showFeedback && { color: levelColor, fontWeight: '600' },\r\n                  isCorrect && styles.correctChoiceText,\r\n                  isIncorrect && styles.incorrectChoiceText,\r\n                ]}>\r\n                  {choice}\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n\r\n      {/* üí° FEEDBACK SI N√âCESSAIRE */}\r\n      {showFeedback && exercise.explanation && (\r\n        <ContentSection\r\n          title=\"Explication\"\r\n          content={exercise.explanation}\r\n          levelColor={selectedChoiceIndex === correctChoiceIndex ? \"#10b981\" : \"#ef4444\"}\r\n          backgroundColor={selectedChoiceIndex === correctChoiceIndex ? \"#f0fdf4\" : \"#fef2f2\"}\r\n          style={styles.feedbackSection}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\n// ‚úÖ D√©finition de PropTypes pour valider les props\r\nMultipleChoiceMode.propTypes = {\r\n  // 'exercise' est manquant dans la validation, ainsi que ses sous-propri√©t√©s\r\n  exercise: PropTypes.shape({\r\n    text: PropTypes.string,\r\n    choices: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    correctChoiceIndex: PropTypes.number.isRequired,\r\n    explanation: PropTypes.string,\r\n  }).isRequired,\r\n  // 'selectedChoiceIndex' est manquant\r\n  selectedChoiceIndex: PropTypes.number,\r\n  // 'onSelectChoice' est manquant\r\n  onSelectChoice: PropTypes.func.isRequired,\r\n  // 'showFeedback' est manquant\r\n  showFeedback: PropTypes.bool,\r\n  // 'levelColor' est manquant\r\n  levelColor: PropTypes.string,\r\n};\r\n\r\nexport default MultipleChoiceMode;"],"mappings":"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","ignoreList":[]}