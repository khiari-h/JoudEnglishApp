{"version":3,"names":["_timeUtils","require","describe","it","expect","isValidTimeInSeconds","toBe","NaN","Infinity","undefined","stats","vocabulary","grammar","reading","phrases","conversations","spelling","errorCorrection","wordGames","assessment","result","sanitizeTimeStats","toEqual","toBeDefined","beforeEach","jest","spyOn","Date","mockReturnValue","afterEach","restoreAllMocks","startTime","elapsed","getElapsedSeconds","futureTime","secondsToMinutes","minutesToSeconds","formatTime","formatTimeCompact","validStats","isValidStatsStructure","total","getTotalTimeFromStats","sorted","getSortedStatsByTime","exerciseType","time","length","hasMinimumTime","largeValue","bigStats","i","Math","floor","random","start","now","end","toBeLessThan"],"sources":["timeUtils.test.js"],"sourcesContent":["// __tests__/utils/timeUtils.test.js\nimport {\n  isValidTimeInSeconds,\n  sanitizeTimeStats,\n  getElapsedSeconds,\n  secondsToMinutes,\n  minutesToSeconds,\n  formatTime,\n  formatTimeCompact,\n  isValidStatsStructure,\n  getTotalTimeFromStats,\n  getSortedStatsByTime,\n  hasMinimumTime\n} from '../../src/utils/timeUtils';\n\ndescribe('timeUtils', () => {\n  describe('isValidTimeInSeconds', () => {\n    it('devrait valider les temps corrects', () => {\n      expect(isValidTimeInSeconds(0)).toBe(true);\n      expect(isValidTimeInSeconds(60)).toBe(true);\n      expect(isValidTimeInSeconds(3600)).toBe(true);\n      expect(isValidTimeInSeconds(86400)).toBe(true); // 24h max\n    });\n\n    it('devrait rejeter les temps invalides', () => {\n      expect(isValidTimeInSeconds(-1)).toBe(false);\n      expect(isValidTimeInSeconds(86401)).toBe(false); // > 24h\n      expect(isValidTimeInSeconds(NaN)).toBe(false);\n      expect(isValidTimeInSeconds(Infinity)).toBe(false);\n      expect(isValidTimeInSeconds('60')).toBe(false);\n      expect(isValidTimeInSeconds(null)).toBe(false);\n      expect(isValidTimeInSeconds(undefined)).toBe(false);\n    });\n  });\n\n  describe('sanitizeTimeStats', () => {\n    it('devrait sanitiser des stats valides', () => {\n      const stats = {\n        vocabulary: 120,\n        grammar: 180,\n        reading: 240,\n        phrases: 60,\n        conversations: 300,\n        spelling: 90,\n        errorCorrection: 150,\n        wordGames: 75,\n        assessment: 200\n      };\n\n      const result = sanitizeTimeStats(stats);\n\n      expect(result).toEqual(stats);\n    });\n\n    it('devrait corriger les valeurs invalides', () => {\n      const stats = {\n        vocabulary: -10,\n        grammar: 'invalid',\n        reading: NaN,\n        phrases: Infinity,\n        conversations: 150.7,\n        spelling: null,\n        errorCorrection: undefined,\n        wordGames: 86401, // > 24h\n        assessment: 100\n      };\n\n      const result = sanitizeTimeStats(stats);\n\n      expect(result.vocabulary).toBe(0);\n      expect(result.grammar).toBe(0);\n      expect(result.reading).toBe(0);\n      expect(result.phrases).toBe(0);\n      expect(result.conversations).toBe(150); // Arrondi\n      expect(result.spelling).toBe(0);\n      expect(result.errorCorrection).toBe(0);\n      expect(result.wordGames).toBe(0);\n      expect(result.assessment).toBe(100);\n    });\n\n    it('devrait retourner les valeurs par défaut pour des données nulles', () => {\n      expect(sanitizeTimeStats(null)).toBeDefined();\n      expect(sanitizeTimeStats(undefined)).toBeDefined();\n      expect(sanitizeTimeStats({})).toBeDefined();\n      expect(sanitizeTimeStats('invalid')).toBeDefined();\n    });\n  });\n\n  describe('getElapsedSeconds', () => {\n    beforeEach(() => {\n      jest.spyOn(Date, 'now').mockReturnValue(1640995200000); // 2022-01-01 00:00:00\n    });\n\n    afterEach(() => {\n      jest.restoreAllMocks();\n    });\n\n    it('devrait calculer le temps écoulé correctement', () => {\n      const startTime = 1640995200000 - 60000; // 1 minute avant\n      const elapsed = getElapsedSeconds(startTime);\n\n      expect(elapsed).toBe(60);\n    });\n\n    it('devrait retourner 0 pour des timestamps invalides', () => {\n      expect(getElapsedSeconds(null)).toBe(0);\n      expect(getElapsedSeconds(undefined)).toBe(0);\n      expect(getElapsedSeconds('invalid')).toBe(0);\n    });\n\n    it('devrait retourner 0 pour des temps futurs', () => {\n      const futureTime = 1640995200000 + 60000; // 1 minute dans le futur\n      const elapsed = getElapsedSeconds(futureTime);\n\n      expect(elapsed).toBe(0);\n    });\n  });\n\n  describe('secondsToMinutes', () => {\n    it('devrait convertir les secondes en minutes', () => {\n      expect(secondsToMinutes(60)).toBe(1);\n      expect(secondsToMinutes(120)).toBe(2);\n      expect(secondsToMinutes(90)).toBe(1); // Arrondi vers le bas\n      expect(secondsToMinutes(0)).toBe(0);\n    });\n\n    it('devrait gérer les valeurs invalides', () => {\n      expect(secondsToMinutes(-60)).toBe(0);\n      expect(secondsToMinutes(NaN)).toBe(0);\n      expect(secondsToMinutes('60')).toBe(0);\n      expect(secondsToMinutes(null)).toBe(0);\n    });\n  });\n\n  describe('minutesToSeconds', () => {\n    it('devrait convertir les minutes en secondes', () => {\n      expect(minutesToSeconds(1)).toBe(60);\n      expect(minutesToSeconds(2)).toBe(120);\n      expect(minutesToSeconds(0.5)).toBe(30);\n      expect(minutesToSeconds(0)).toBe(0);\n    });\n\n    it('devrait gérer les valeurs invalides', () => {\n      expect(minutesToSeconds(-1)).toBe(0);\n      expect(minutesToSeconds(NaN)).toBe(0);\n      expect(minutesToSeconds('1')).toBe(0);\n      expect(minutesToSeconds(null)).toBe(0);\n    });\n  });\n\n  describe('formatTime', () => {\n    it('devrait formater les temps courts', () => {\n      expect(formatTime(0)).toBe('0s');\n      expect(formatTime(30)).toBe('30s');\n      expect(formatTime(59)).toBe('59s');\n    });\n\n    it('devrait formater les temps en minutes', () => {\n      expect(formatTime(60)).toBe('1m');\n      expect(formatTime(120)).toBe('2m');\n      expect(formatTime(90)).toBe('1m 30s');\n      expect(formatTime(150)).toBe('2m 30s');\n    });\n\n    it('devrait gérer les valeurs invalides', () => {\n      expect(formatTime(-60)).toBe('0s');\n      expect(formatTime(NaN)).toBe('0s');\n      expect(formatTime('60')).toBe('0s');\n      expect(formatTime(null)).toBe('0s');\n    });\n  });\n\n  describe('formatTimeCompact', () => {\n    it('devrait formater en format compact', () => {\n      expect(formatTimeCompact(0)).toBe('0:00');\n      expect(formatTimeCompact(30)).toBe('0:30');\n      expect(formatTimeCompact(60)).toBe('1:00');\n      expect(formatTimeCompact(90)).toBe('1:30');\n      expect(formatTimeCompact(3661)).toBe('61:01'); // > 1h\n    });\n\n    it('devrait gérer les valeurs invalides', () => {\n      expect(formatTimeCompact(-60)).toBe('0:00');\n      expect(formatTimeCompact(NaN)).toBe('0:00');\n      expect(formatTimeCompact(null)).toBe('0:00');\n    });\n  });\n\n  describe('isValidStatsStructure', () => {\n    it('devrait valider une structure correcte', () => {\n      const validStats = {\n        vocabulary: 120,\n        grammar: 180,\n        reading: 240,\n        phrases: 60,\n        conversations: 300,\n        spelling: 90,\n        errorCorrection: 150,\n        wordGames: 75,\n        assessment: 200\n      };\n\n      expect(isValidStatsStructure(validStats)).toBe(true);\n    });\n\n    it('devrait rejeter les structures invalides', () => {\n      expect(isValidStatsStructure(null)).toBe(false);\n      expect(isValidStatsStructure(undefined)).toBe(false);\n      expect(isValidStatsStructure({})).toBe(false);\n      expect(isValidStatsStructure({ vocabulary: 'invalid' })).toBe(false);\n      expect(isValidStatsStructure({ vocabulary: 120 })).toBe(false); // Manque les autres\n    });\n  });\n\n  describe('getTotalTimeFromStats', () => {\n    it('devrait calculer le temps total', () => {\n      const stats = {\n        vocabulary: 120,\n        grammar: 180,\n        reading: 240,\n        phrases: 60,\n        conversations: 300,\n        spelling: 90,\n        errorCorrection: 150,\n        wordGames: 75,\n        assessment: 200\n      };\n\n      const total = getTotalTimeFromStats(stats);\n      expect(total).toBe(1415); // Somme de tous les temps\n    });\n\n    it('devrait retourner 0 pour des stats invalides', () => {\n      expect(getTotalTimeFromStats(null)).toBe(0);\n      expect(getTotalTimeFromStats({})).toBe(0);\n      expect(getTotalTimeFromStats({ vocabulary: 'invalid' })).toBe(0);\n    });\n  });\n\n  describe('getSortedStatsByTime', () => {\n    it('devrait trier les stats par temps décroissant', () => {\n      const stats = {\n        vocabulary: 120,\n        grammar: 300,\n        reading: 60,\n        phrases: 180,\n        conversations: 240,\n        spelling: 90,\n        errorCorrection: 150,\n        wordGames: 75,\n        assessment: 200\n      };\n\n      const sorted = getSortedStatsByTime(stats);\n\n      expect(sorted[0]).toEqual({ exerciseType: 'grammar', time: 300 });\n      expect(sorted[1]).toEqual({ exerciseType: 'conversations', time: 240 });\n      expect(sorted[2]).toEqual({ exerciseType: 'assessment', time: 200 });\n      expect(sorted[sorted.length - 1]).toEqual({ exerciseType: 'reading', time: 60 });\n    });\n\n    it('devrait retourner un tableau vide pour des stats invalides', () => {\n      expect(getSortedStatsByTime(null)).toEqual([]);\n      expect(getSortedStatsByTime({})).toEqual([]);\n    });\n  });\n\n  describe('hasMinimumTime', () => {\n    const validStats = {\n      vocabulary: 120, // 2 minutes\n      grammar: 180,    // 3 minutes\n      reading: 30,     // 0.5 minutes\n      phrases: 60,     // 1 minute\n      conversations: 300,\n      spelling: 90,\n      errorCorrection: 150,\n      wordGames: 75,\n      assessment: 200\n    };\n\n    it('devrait vérifier le temps minimum correctement', () => {\n      expect(hasMinimumTime(validStats, 'vocabulary', 1)).toBe(true);\n      expect(hasMinimumTime(validStats, 'vocabulary', 2)).toBe(true);\n      expect(hasMinimumTime(validStats, 'vocabulary', 3)).toBe(false);\n      \n      expect(hasMinimumTime(validStats, 'reading', 1)).toBe(false);\n      expect(hasMinimumTime(validStats, 'phrases', 1)).toBe(true);\n    });\n\n    it('devrait utiliser 1 minute par défaut', () => {\n      expect(hasMinimumTime(validStats, 'vocabulary')).toBe(true);\n      expect(hasMinimumTime(validStats, 'reading')).toBe(false);\n    });\n\n    it('devrait retourner false pour des données invalides', () => {\n      expect(hasMinimumTime(null, 'vocabulary')).toBe(false);\n      expect(hasMinimumTime(validStats, 'invalidType')).toBe(false);\n      expect(hasMinimumTime({}, 'vocabulary')).toBe(false);\n    });\n  });\n\n  describe('Edge cases et performance', () => {\n    it('devrait gérer les très grandes valeurs', () => {\n      const largeValue = 86400; // 24h en secondes\n      expect(isValidTimeInSeconds(largeValue)).toBe(true);\n      expect(formatTime(largeValue)).toBe('1440m');\n      expect(formatTimeCompact(largeValue)).toBe('1440:00');\n    });\n\n    it('devrait gérer les valeurs décimales', () => {\n      expect(isValidTimeInSeconds(60.5)).toBe(true);\n      expect(sanitizeTimeStats({ vocabulary: 60.7 }).vocabulary).toBe(60);\n    });\n\n    it('devrait être performant avec de gros objets', () => {\n      const bigStats = {};\n      for (let i = 0; i < 1000; i++) {\n        bigStats[`exercise${i}`] = Math.floor(Math.random() * 1000);\n      }\n\n      const start = Date.now();\n      getTotalTimeFromStats(bigStats);\n      const end = Date.now();\n\n      expect(end - start).toBeLessThan(100); // Moins de 100ms\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}