1ece7c65ef1804424d43624e69d85cbb
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var createStyles = function createStyles() {
  return _reactNative.StyleSheet.create({
    container: {
      backgroundColor: 'white',
      borderTopWidth: 1,
      borderTopColor: '#f1f5f9',
      paddingHorizontal: 20,
      paddingVertical: 16,
      paddingBottom: _reactNative.Platform.OS === 'ios' ? 34 : 16
    },
    checkButton: Object.assign({
      borderRadius: 12,
      paddingVertical: 16,
      alignItems: 'center',
      justifyContent: 'center'
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#000',
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowOpacity: 0.1,
        shadowRadius: 4
      },
      android: {
        elevation: 3
      }
    })),
    disabledButton: {
      opacity: 0.6
    },
    checkButtonText: {
      fontSize: 16,
      fontWeight: '700',
      color: 'white',
      letterSpacing: 0.3
    },
    feedbackActionsRow: {
      flexDirection: 'row',
      alignItems: 'center',
      gap: 12
    },
    tryAgainButton: Object.assign({
      backgroundColor: 'white',
      borderWidth: 2,
      borderRadius: 12,
      paddingVertical: 14,
      paddingHorizontal: 20,
      alignItems: 'center',
      justifyContent: 'center',
      minWidth: 100
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#000',
        shadowOffset: {
          width: 0,
          height: 1
        },
        shadowOpacity: 0.05,
        shadowRadius: 2
      },
      android: {
        elevation: 1
      }
    })),
    tryAgainButtonText: {
      fontSize: 15,
      fontWeight: '600',
      letterSpacing: 0.2
    },
    nextButtonContainer: {
      flex: 1
    }
  });
};
var _default = exports.default = createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY3JlYXRlU3R5bGVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImNvbnRhaW5lciIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclRvcFdpZHRoIiwiYm9yZGVyVG9wQ29sb3IiLCJwYWRkaW5nSG9yaXpvbnRhbCIsInBhZGRpbmdWZXJ0aWNhbCIsInBhZGRpbmdCb3R0b20iLCJQbGF0Zm9ybSIsIk9TIiwiY2hlY2tCdXR0b24iLCJPYmplY3QiLCJhc3NpZ24iLCJib3JkZXJSYWRpdXMiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJzZWxlY3QiLCJpb3MiLCJzaGFkb3dDb2xvciIsInNoYWRvd09mZnNldCIsIndpZHRoIiwiaGVpZ2h0Iiwic2hhZG93T3BhY2l0eSIsInNoYWRvd1JhZGl1cyIsImFuZHJvaWQiLCJlbGV2YXRpb24iLCJkaXNhYmxlZEJ1dHRvbiIsIm9wYWNpdHkiLCJjaGVja0J1dHRvblRleHQiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJjb2xvciIsImxldHRlclNwYWNpbmciLCJmZWVkYmFja0FjdGlvbnNSb3ciLCJmbGV4RGlyZWN0aW9uIiwiZ2FwIiwidHJ5QWdhaW5CdXR0b24iLCJib3JkZXJXaWR0aCIsIm1pbldpZHRoIiwidHJ5QWdhaW5CdXR0b25UZXh0IiwibmV4dEJ1dHRvbkNvbnRhaW5lciIsImZsZXgiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsic3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQXNzZXNzbWVudE5hdmlnYXRpb24vc3R5bGUuanNcclxuXHJcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFBsYXRmb3JtIH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xyXG5cclxuLyoqXHJcbiAqIPCfjq8gU3R5bGVzIHBvdXIgQXNzZXNzbWVudE5hdmlnYXRpb25cclxuICogTcOpbGFuZ2UgYm91dG9uIENoZWNrIEFuc3dlciBjdXN0b20gKyBOYXZpZ2F0aW9uQnV0dG9ucyBnw6luw6lyaXF1ZVxyXG4gKi9cclxuY29uc3QgY3JlYXRlU3R5bGVzID0gKCkgPT5cclxuICBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IENPTlRBSU5FUiA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBjb250YWluZXI6IHtcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxyXG4gICAgICBib3JkZXJUb3BXaWR0aDogMSxcclxuICAgICAgYm9yZGVyVG9wQ29sb3I6ICcjZjFmNWY5JyxcclxuICAgICAgcGFkZGluZ0hvcml6b250YWw6IDIwLFxyXG4gICAgICBwYWRkaW5nVmVydGljYWw6IDE2LFxyXG4gICAgICBwYWRkaW5nQm90dG9tOiBQbGF0Zm9ybS5PUyA9PT0gJ2lvcycgPyAzNCA6IDE2LCAvLyBTYWZlIGFyZWEgYm90dG9tXHJcbiAgICB9LFxyXG5cclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gQk9VVE9OIENIRUNLIEFOU1dFUiA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBjaGVja0J1dHRvbjoge1xyXG4gICAgICBib3JkZXJSYWRpdXM6IDEyLFxyXG4gICAgICBwYWRkaW5nVmVydGljYWw6IDE2LFxyXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgICAvLyBPbWJyZVxyXG4gICAgICAuLi5QbGF0Zm9ybS5zZWxlY3Qoe1xyXG4gICAgICAgIGlvczoge1xyXG4gICAgICAgICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgICAgICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiAyIH0sXHJcbiAgICAgICAgICBzaGFkb3dPcGFjaXR5OiAwLjEsXHJcbiAgICAgICAgICBzaGFkb3dSYWRpdXM6IDQsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBhbmRyb2lkOiB7XHJcbiAgICAgICAgICBlbGV2YXRpb246IDMsXHJcbiAgICAgICAgfSxcclxuICAgICAgfSksXHJcbiAgICB9LFxyXG5cclxuICAgIGRpc2FibGVkQnV0dG9uOiB7XHJcbiAgICAgIG9wYWNpdHk6IDAuNixcclxuICAgIH0sXHJcblxyXG4gICAgY2hlY2tCdXR0b25UZXh0OiB7XHJcbiAgICAgIGZvbnRTaXplOiAxNixcclxuICAgICAgZm9udFdlaWdodDogJzcwMCcsXHJcbiAgICAgIGNvbG9yOiAnd2hpdGUnLFxyXG4gICAgICBsZXR0ZXJTcGFjaW5nOiAwLjMsXHJcbiAgICB9LFxyXG5cclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gQUNUSU9OUyBGRUVEQkFDSyA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBmZWVkYmFja0FjdGlvbnNSb3c6IHtcclxuICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXHJcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICBnYXA6IDEyLFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IEJPVVRPTiBUUlkgQUdBSU4gPT09PT09PT09PT09PT09PT09PVxyXG4gICAgdHJ5QWdhaW5CdXR0b246IHtcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxyXG4gICAgICBib3JkZXJXaWR0aDogMixcclxuICAgICAgYm9yZGVyUmFkaXVzOiAxMixcclxuICAgICAgcGFkZGluZ1ZlcnRpY2FsOiAxNCxcclxuICAgICAgcGFkZGluZ0hvcml6b250YWw6IDIwLFxyXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgICBtaW5XaWR0aDogMTAwLFxyXG4gICAgICAvLyBPbWJyZSBzdWJ0aWxlXHJcbiAgICAgIC4uLlBsYXRmb3JtLnNlbGVjdCh7XHJcbiAgICAgICAgaW9zOiB7XHJcbiAgICAgICAgICBzaGFkb3dDb2xvcjogJyMwMDAnLFxyXG4gICAgICAgICAgc2hhZG93T2Zmc2V0OiB7IHdpZHRoOiAwLCBoZWlnaHQ6IDEgfSxcclxuICAgICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMDUsXHJcbiAgICAgICAgICBzaGFkb3dSYWRpdXM6IDIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBhbmRyb2lkOiB7XHJcbiAgICAgICAgICBlbGV2YXRpb246IDEsXHJcbiAgICAgICAgfSxcclxuICAgICAgfSksXHJcbiAgICB9LFxyXG5cclxuICAgIHRyeUFnYWluQnV0dG9uVGV4dDoge1xyXG4gICAgICBmb250U2l6ZTogMTUsXHJcbiAgICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxyXG4gICAgICBsZXR0ZXJTcGFjaW5nOiAwLjIsXHJcbiAgICB9LFxyXG5cclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gQ09OVEFJTkVSIE5FWFQgQlVUVE9OID09PT09PT09PT09PT09PT09PT1cclxuICAgIG5leHRCdXR0b25Db250YWluZXI6IHtcclxuICAgICAgZmxleDogMSxcclxuICAgIH0sXHJcbiAgfSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVTdHlsZXM7Il0sIm1hcHBpbmdzIjoiOzs7O0FBRUEsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBTUEsSUFBTUMsWUFBWSxHQUFHLFNBQWZBLFlBQVlBLENBQUE7RUFBQSxPQUNoQkMsdUJBQVUsQ0FBQ0MsTUFBTSxDQUFDO0lBRWhCQyxTQUFTLEVBQUU7TUFDVEMsZUFBZSxFQUFFLE9BQU87TUFDeEJDLGNBQWMsRUFBRSxDQUFDO01BQ2pCQyxjQUFjLEVBQUUsU0FBUztNQUN6QkMsaUJBQWlCLEVBQUUsRUFBRTtNQUNyQkMsZUFBZSxFQUFFLEVBQUU7TUFDbkJDLGFBQWEsRUFBRUMscUJBQVEsQ0FBQ0MsRUFBRSxLQUFLLEtBQUssR0FBRyxFQUFFLEdBQUc7SUFDOUMsQ0FBQztJQUdEQyxXQUFXLEVBQUFDLE1BQUEsQ0FBQUMsTUFBQTtNQUNUQyxZQUFZLEVBQUUsRUFBRTtNQUNoQlAsZUFBZSxFQUFFLEVBQUU7TUFDbkJRLFVBQVUsRUFBRSxRQUFRO01BQ3BCQyxjQUFjLEVBQUU7SUFBUSxHQUVyQlAscUJBQVEsQ0FBQ1EsTUFBTSxDQUFDO01BQ2pCQyxHQUFHLEVBQUU7UUFDSEMsV0FBVyxFQUFFLE1BQU07UUFDbkJDLFlBQVksRUFBRTtVQUFFQyxLQUFLLEVBQUUsQ0FBQztVQUFFQyxNQUFNLEVBQUU7UUFBRSxDQUFDO1FBQ3JDQyxhQUFhLEVBQUUsR0FBRztRQUNsQkMsWUFBWSxFQUFFO01BQ2hCLENBQUM7TUFDREMsT0FBTyxFQUFFO1FBQ1BDLFNBQVMsRUFBRTtNQUNiO0lBQ0YsQ0FBQyxDQUFDLENBQ0g7SUFFREMsY0FBYyxFQUFFO01BQ2RDLE9BQU8sRUFBRTtJQUNYLENBQUM7SUFFREMsZUFBZSxFQUFFO01BQ2ZDLFFBQVEsRUFBRSxFQUFFO01BQ1pDLFVBQVUsRUFBRSxLQUFLO01BQ2pCQyxLQUFLLEVBQUUsT0FBTztNQUNkQyxhQUFhLEVBQUU7SUFDakIsQ0FBQztJQUdEQyxrQkFBa0IsRUFBRTtNQUNsQkMsYUFBYSxFQUFFLEtBQUs7TUFDcEJwQixVQUFVLEVBQUUsUUFBUTtNQUNwQnFCLEdBQUcsRUFBRTtJQUNQLENBQUM7SUFHREMsY0FBYyxFQUFBekIsTUFBQSxDQUFBQyxNQUFBO01BQ1pWLGVBQWUsRUFBRSxPQUFPO01BQ3hCbUMsV0FBVyxFQUFFLENBQUM7TUFDZHhCLFlBQVksRUFBRSxFQUFFO01BQ2hCUCxlQUFlLEVBQUUsRUFBRTtNQUNuQkQsaUJBQWlCLEVBQUUsRUFBRTtNQUNyQlMsVUFBVSxFQUFFLFFBQVE7TUFDcEJDLGNBQWMsRUFBRSxRQUFRO01BQ3hCdUIsUUFBUSxFQUFFO0lBQUcsR0FFVjlCLHFCQUFRLENBQUNRLE1BQU0sQ0FBQztNQUNqQkMsR0FBRyxFQUFFO1FBQ0hDLFdBQVcsRUFBRSxNQUFNO1FBQ25CQyxZQUFZLEVBQUU7VUFBRUMsS0FBSyxFQUFFLENBQUM7VUFBRUMsTUFBTSxFQUFFO1FBQUUsQ0FBQztRQUNyQ0MsYUFBYSxFQUFFLElBQUk7UUFDbkJDLFlBQVksRUFBRTtNQUNoQixDQUFDO01BQ0RDLE9BQU8sRUFBRTtRQUNQQyxTQUFTLEVBQUU7TUFDYjtJQUNGLENBQUMsQ0FBQyxDQUNIO0lBRURjLGtCQUFrQixFQUFFO01BQ2xCVixRQUFRLEVBQUUsRUFBRTtNQUNaQyxVQUFVLEVBQUUsS0FBSztNQUNqQkUsYUFBYSxFQUFFO0lBQ2pCLENBQUM7SUFHRFEsbUJBQW1CLEVBQUU7TUFDbkJDLElBQUksRUFBRTtJQUNSO0VBQ0YsQ0FBQyxDQUFDO0FBQUE7QUFBQyxJQUFBQyxRQUFBLEdBQUFDLE9BQUEsQ0FBQUMsT0FBQSxHQUVVOUMsWUFBWSIsImlnbm9yZUxpc3QiOltdfQ==