ce3c91d09c24e65feab58f8d5c6182e5
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.verticalScale = exports.scale = exports.pixelRound = exports.moderateScale = exports.default = void 0;
var _reactNative = require("react-native");
var _Dimensions$get = _reactNative.Dimensions.get('window'),
  SCREEN_WIDTH = _Dimensions$get.width,
  SCREEN_HEIGHT = _Dimensions$get.height;
var BASE_WIDTH = 375;
var BASE_HEIGHT = 667;
var scale = exports.scale = function scale(size) {
  return SCREEN_WIDTH / BASE_WIDTH * size;
};
var verticalScale = exports.verticalScale = function verticalScale(size) {
  return SCREEN_HEIGHT / BASE_HEIGHT * size;
};
var moderateScale = exports.moderateScale = function moderateScale(size) {
  var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;
  var scaledSize = scale(size);
  return size + (scaledSize - size) * factor;
};
var pixelRound = exports.pixelRound = function pixelRound(size) {
  var scaleFactor = _reactNative.PixelRatio.get();
  return Math.round(size * scaleFactor) / scaleFactor;
};
var _default = exports.default = {
  scale: scale,
  verticalScale: verticalScale,
  moderateScale: moderateScale,
  pixelRound: pixelRound
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX0RpbWVuc2lvbnMkZ2V0IiwiRGltZW5zaW9ucyIsImdldCIsIlNDUkVFTl9XSURUSCIsIndpZHRoIiwiU0NSRUVOX0hFSUdIVCIsImhlaWdodCIsIkJBU0VfV0lEVEgiLCJCQVNFX0hFSUdIVCIsInNjYWxlIiwiZXhwb3J0cyIsInNpemUiLCJ2ZXJ0aWNhbFNjYWxlIiwibW9kZXJhdGVTY2FsZSIsImZhY3RvciIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInNjYWxlZFNpemUiLCJwaXhlbFJvdW5kIiwic2NhbGVGYWN0b3IiLCJQaXhlbFJhdGlvIiwiTWF0aCIsInJvdW5kIiwiX2RlZmF1bHQiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsic2NhbGluZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy91dGlscy9TY2FsaW5nLmpzXG5pbXBvcnQgeyBEaW1lbnNpb25zLCBQaXhlbFJhdGlvIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuY29uc3QgeyB3aWR0aDogU0NSRUVOX1dJRFRILCBoZWlnaHQ6IFNDUkVFTl9IRUlHSFQgfSA9IERpbWVuc2lvbnMuZ2V0KCd3aW5kb3cnKTtcblxuLy8gQmFzZSBkZXNpZ24gaVBob25lIDYvNy84XG5jb25zdCBCQVNFX1dJRFRIID0gMzc1O1xuY29uc3QgQkFTRV9IRUlHSFQgPSA2Njc7XG5cbi8qKlxuICogU2NhbGUgaG9yaXpvbnRhbFxuICogQHBhcmFtIHtudW1iZXJ9IHNpemUgXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3Qgc2NhbGUgPSAoc2l6ZSkgPT4gKFNDUkVFTl9XSURUSCAvIEJBU0VfV0lEVEgpICogc2l6ZTtcblxuLyoqXG4gKiBTY2FsZSB2ZXJ0aWNhbFxuICogQHBhcmFtIHtudW1iZXJ9IHNpemUgXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgdmVydGljYWxTY2FsZSA9IChzaXplKSA9PiAoU0NSRUVOX0hFSUdIVCAvIEJBU0VfSEVJR0hUKSAqIHNpemU7XG5cbi8qKlxuICogU2NhbGUgbW9kw6lyw6kgKGZhY3RldXIgMC41IHBhciBkw6lmYXV0KVxuICogQHBhcmFtIHtudW1iZXJ9IHNpemUgXG4gKiBAcGFyYW0ge251bWJlcn0gZmFjdG9yIFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZXhwb3J0IGNvbnN0IG1vZGVyYXRlU2NhbGUgPSAoc2l6ZSwgZmFjdG9yID0gMC41KSA9PiB7XG4gIGNvbnN0IHNjYWxlZFNpemUgPSBzY2FsZShzaXplKTtcbiAgcmV0dXJuIHNpemUgKyAoc2NhbGVkU2l6ZSAtIHNpemUpICogZmFjdG9yO1xufTtcblxuLyoqXG4gKiBBcnJvbmRpIGF1IHBpeGVsIHByb2NoZSAoYW50aS1mbG91KVxuICogQHBhcmFtIHtudW1iZXJ9IHNpemUgXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnQgY29uc3QgcGl4ZWxSb3VuZCA9IChzaXplKSA9PiB7XG4gIGNvbnN0IHNjYWxlRmFjdG9yID0gUGl4ZWxSYXRpby5nZXQoKTtcbiAgcmV0dXJuIE1hdGgucm91bmQoc2l6ZSAqIHNjYWxlRmFjdG9yKSAvIHNjYWxlRmFjdG9yO1xufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzY2FsZSxcbiAgdmVydGljYWxTY2FsZSxcbiAgbW9kZXJhdGVTY2FsZSxcbiAgcGl4ZWxSb3VuZCxcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFFQSxJQUFBQyxlQUFBLEdBQXVEQyx1QkFBVSxDQUFDQyxHQUFHLENBQUMsUUFBUSxDQUFDO0VBQWhFQyxZQUFZLEdBQUFILGVBQUEsQ0FBbkJJLEtBQUs7RUFBd0JDLGFBQWEsR0FBQUwsZUFBQSxDQUFyQk0sTUFBTTtBQUduQyxJQUFNQyxVQUFVLEdBQUcsR0FBRztBQUN0QixJQUFNQyxXQUFXLEdBQUcsR0FBRztBQU9oQixJQUFNQyxLQUFLLEdBQUFDLE9BQUEsQ0FBQUQsS0FBQSxHQUFHLFNBQVJBLEtBQUtBLENBQUlFLElBQUk7RUFBQSxPQUFNUixZQUFZLEdBQUdJLFVBQVUsR0FBSUksSUFBSTtBQUFBO0FBTzFELElBQU1DLGFBQWEsR0FBQUYsT0FBQSxDQUFBRSxhQUFBLEdBQUcsU0FBaEJBLGFBQWFBLENBQUlELElBQUk7RUFBQSxPQUFNTixhQUFhLEdBQUdHLFdBQVcsR0FBSUcsSUFBSTtBQUFBO0FBUXBFLElBQU1FLGFBQWEsR0FBQUgsT0FBQSxDQUFBRyxhQUFBLEdBQUcsU0FBaEJBLGFBQWFBLENBQUlGLElBQUksRUFBbUI7RUFBQSxJQUFqQkcsTUFBTSxHQUFBQyxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFBRyxHQUFHO0VBQzlDLElBQU1HLFVBQVUsR0FBR1QsS0FBSyxDQUFDRSxJQUFJLENBQUM7RUFDOUIsT0FBT0EsSUFBSSxHQUFHLENBQUNPLFVBQVUsR0FBR1AsSUFBSSxJQUFJRyxNQUFNO0FBQzVDLENBQUM7QUFPTSxJQUFNSyxVQUFVLEdBQUFULE9BQUEsQ0FBQVMsVUFBQSxHQUFHLFNBQWJBLFVBQVVBLENBQUlSLElBQUksRUFBSztFQUNsQyxJQUFNUyxXQUFXLEdBQUdDLHVCQUFVLENBQUNuQixHQUFHLENBQUMsQ0FBQztFQUNwQyxPQUFPb0IsSUFBSSxDQUFDQyxLQUFLLENBQUNaLElBQUksR0FBR1MsV0FBVyxDQUFDLEdBQUdBLFdBQVc7QUFDckQsQ0FBQztBQUFDLElBQUFJLFFBQUEsR0FBQWQsT0FBQSxDQUFBZSxPQUFBLEdBRWE7RUFDYmhCLEtBQUssRUFBTEEsS0FBSztFQUNMRyxhQUFhLEVBQWJBLGFBQWE7RUFDYkMsYUFBYSxFQUFiQSxhQUFhO0VBQ2JNLFVBQVUsRUFBVkE7QUFDRixDQUFDIiwiaWdub3JlTGlzdCI6W119