{"version":3,"names":["Object","defineProperty","exports","value","valueSetter","_worklet_8078790339103_init_data","code","location","sourceMap","version","_e","global","Error","mutable","forceUpdate","arguments","length","undefined","previousAnimation","_animation","cancelled","onFrame","animation","_value","current","isHigherOrder","callback","initializeAnimation","timestamp","onStart","currentTimestamp","__frameTimestamp","_getAnimationTimestamp","step","newTimestamp","finished","requestAnimationFrame","__closure","__workletHash","__initData","__stackDetails"],"sources":["valueSetter.ts"],"sourcesContent":["'use strict';\nimport type { AnimationObject, Mutable } from './commonTypes';\n\nexport function valueSetter<Value>(\n  mutable: Mutable<Value>,\n  value: Value,\n  forceUpdate = false\n): void {\n  'worklet';\n  const previousAnimation = mutable._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    mutable._animation = null;\n  }\n  if (\n    typeof value === 'function' ||\n    (value !== null &&\n      typeof value === 'object' &&\n      // TODO TYPESCRIPT fix this after fixing AnimationObject type\n      (value as unknown as AnimationObject).onFrame !== undefined)\n  ) {\n    const animation: AnimationObject<Value> =\n      typeof value === 'function'\n        ? // TODO TYPESCRIPT fix this after fixing AnimationObject type\n          (value as () => AnimationObject<Value>)()\n        : // TODO TYPESCRIPT fix this after fixing AnimationObject type\n          (value as unknown as AnimationObject<Value>);\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n    // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n    if (\n      mutable._value === animation.current &&\n      !animation.isHigherOrder &&\n      !forceUpdate\n    ) {\n      animation.callback && animation.callback(true);\n      return;\n    }\n    // animated set\n    const initializeAnimation = (timestamp: number) => {\n      animation.onStart(animation, mutable.value, timestamp, previousAnimation);\n    };\n    const currentTimestamp =\n      global.__frameTimestamp || global._getAnimationTimestamp();\n    initializeAnimation(currentTimestamp);\n\n    const step = (newTimestamp: number) => {\n      // Function `requestAnimationFrame` adds callback to an array, all the callbacks are flushed with function `__flushAnimationFrame`\n      // Usually we flush them inside function `nativeRequestAnimationFrame` and then the given timestamp is the timestamp of end of the current frame.\n      // However function `__flushAnimationFrame` may also be called inside `registerEventHandler` - then we get actual timestamp which is earlier than the end of the frame.\n\n      const timestamp =\n        newTimestamp < (animation.timestamp || 0)\n          ? animation.timestamp\n          : newTimestamp;\n\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false /* finished */);\n        return;\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.finished = true;\n      animation.timestamp = timestamp;\n      // TODO TYPESCRIPT\n      // For now I'll assume that `animation.current` is always defined\n      // but actually need to dive into animations to understand it\n      mutable._value = animation.current!;\n      if (finished) {\n        animation.callback && animation.callback(true /* finished */);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    mutable._animation = animation;\n\n    step(currentTimestamp);\n  } else {\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    if (mutable._value === value && !forceUpdate) {\n      return;\n    }\n    mutable._value = value;\n  }\n}\n"],"mappings":"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","ignoreList":[]}