f4c3e349e5f0a55437550e65d8653238
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDerivedValue = useDerivedValue;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _react = require("react");
var _animation = require("../animation");
var _core = require("../core");
var _PlatformChecker = require("../PlatformChecker");
var _worklet_7329842932899_init_data = {
  code: "function useDerivedValueTs1(){const{sharedValue,updater}=this.__closure;sharedValue.value=updater();}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\hook\\useDerivedValue.ts",
  sourceMap: "{\"version\":3,\"names\":[\"useDerivedValueTs1\",\"sharedValue\",\"updater\",\"__closure\",\"value\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/hook/useDerivedValue.ts\"],\"mappings\":\"AA+DgB,SAAAA,kBAAMA,CAAA,QAAAC,WAAA,CAAAC,OAAA,OAAAC,SAAA,CAEhBF,WAAW,CAACG,KAAK,CAAGF,OAAO,CAAC,CAAC,CAC/B\",\"ignoreList\":[]}",
  version: "3.16.7"
};
function useDerivedValue(updater, dependencies) {
  var _updater$__closure;
  var initRef = (0, _react.useRef)(null);
  var inputs = Object.values((_updater$__closure = updater.__closure) != null ? _updater$__closure : {});
  if ((0, _PlatformChecker.shouldBeUseWeb)()) {
    var _dependencies;
    if (!inputs.length && (_dependencies = dependencies) != null && _dependencies.length) {
      inputs = dependencies;
    }
  }
  if (dependencies === undefined) {
    dependencies = [].concat((0, _toConsumableArray2.default)(inputs), [updater.__workletHash]);
  } else {
    dependencies.push(updater.__workletHash);
  }
  if (initRef.current === null) {
    initRef.current = (0, _core.makeMutable)((0, _animation.initialUpdaterRun)(updater));
  }
  var sharedValue = initRef.current;
  (0, _react.useEffect)(function () {
    var fun = function () {
      var _e = [new global.Error(), -3, -27];
      var useDerivedValueTs1 = function useDerivedValueTs1() {
        sharedValue.value = updater();
      };
      useDerivedValueTs1.__closure = {
        sharedValue: sharedValue,
        updater: updater
      };
      useDerivedValueTs1.__workletHash = 7329842932899;
      useDerivedValueTs1.__initData = _worklet_7329842932899_init_data;
      useDerivedValueTs1.__stackDetails = _e;
      return useDerivedValueTs1;
    }();
    var mapperId = (0, _core.startMapper)(fun, inputs, [sharedValue]);
    return function () {
      (0, _core.stopMapper)(mapperId);
    };
  }, dependencies);
  return sharedValue;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidXNlRGVyaXZlZFZhbHVlIiwiX3RvQ29uc3VtYWJsZUFycmF5MiIsIl9yZWFjdCIsIl9hbmltYXRpb24iLCJfY29yZSIsIl9QbGF0Zm9ybUNoZWNrZXIiLCJfd29ya2xldF83MzI5ODQyOTMyODk5X2luaXRfZGF0YSIsImNvZGUiLCJsb2NhdGlvbiIsInNvdXJjZU1hcCIsInZlcnNpb24iLCJ1cGRhdGVyIiwiZGVwZW5kZW5jaWVzIiwiX3VwZGF0ZXIkX19jbG9zdXJlIiwiaW5pdFJlZiIsInVzZVJlZiIsImlucHV0cyIsInZhbHVlcyIsIl9fY2xvc3VyZSIsInNob3VsZEJlVXNlV2ViIiwiX2RlcGVuZGVuY2llcyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImNvbmNhdCIsImRlZmF1bHQiLCJfX3dvcmtsZXRIYXNoIiwicHVzaCIsImN1cnJlbnQiLCJtYWtlTXV0YWJsZSIsImluaXRpYWxVcGRhdGVyUnVuIiwic2hhcmVkVmFsdWUiLCJ1c2VFZmZlY3QiLCJmdW4iLCJfZSIsImdsb2JhbCIsIkVycm9yIiwidXNlRGVyaXZlZFZhbHVlVHMxIiwiX19pbml0RGF0YSIsIl9fc3RhY2tEZXRhaWxzIiwibWFwcGVySWQiLCJzdGFydE1hcHBlciIsInN0b3BNYXBwZXIiXSwic291cmNlcyI6WyJ1c2VEZXJpdmVkVmFsdWUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBpbml0aWFsVXBkYXRlclJ1biB9IGZyb20gJy4uL2FuaW1hdGlvbic7XG5pbXBvcnQgdHlwZSB7IFNoYXJlZFZhbHVlLCBXb3JrbGV0RnVuY3Rpb24gfSBmcm9tICcuLi9jb21tb25UeXBlcyc7XG5pbXBvcnQgeyBtYWtlTXV0YWJsZSwgc3RhcnRNYXBwZXIsIHN0b3BNYXBwZXIgfSBmcm9tICcuLi9jb3JlJztcbmltcG9ydCB0eXBlIHsgRGVwZW5kZW5jeUxpc3QgfSBmcm9tICcuL2NvbW1vblR5cGVzJztcbmltcG9ydCB7IHNob3VsZEJlVXNlV2ViIH0gZnJvbSAnLi4vUGxhdGZvcm1DaGVja2VyJztcblxuZXhwb3J0IGludGVyZmFjZSBEZXJpdmVkVmFsdWU8VmFsdWUgPSB1bmtub3duPlxuICBleHRlbmRzIFJlYWRvbmx5PE9taXQ8U2hhcmVkVmFsdWU8VmFsdWU+LCAnc2V0Jz4+IHtcbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIERlcml2ZWQgdmFsdWVzIGFyZSByZWFkb25seSwgZG9uJ3QgdXNlIHRoaXMgbWV0aG9kLiBJdCdzIGhlcmVcbiAgICogICBvbmx5IHRvIHByZXZlbnQgYnJlYWtpbmcgY2hhbmdlcyBpbiBUeXBlU2NyaXB0IHR5cGVzLiBJdCB3aWxsIGJlIHJlbW92ZWRcbiAgICogICBpbiB0aGUgZnV0dXJlLlxuICAgKi9cbiAgc2V0OiBTaGFyZWRWYWx1ZTxWYWx1ZT5bJ3NldCddO1xufVxuXG4vKipcbiAqIExldHMgeW91IGNyZWF0ZSBuZXcgc2hhcmVkIHZhbHVlcyBiYXNlZCBvbiBleGlzdGluZyBvbmVzIHdoaWxlIGtlZXBpbmcgdGhlbVxuICogcmVhY3RpdmUuXG4gKlxuICogQHBhcmFtIHVwZGF0ZXIgLSBBIGZ1bmN0aW9uIGNhbGxlZCB3aGVuZXZlciBhdCBsZWFzdCBvbmUgb2YgdGhlIHNoYXJlZCB2YWx1ZXNcbiAqICAgb3Igc3RhdGUgdXNlZCBpbiB0aGUgZnVuY3Rpb24gYm9keSBjaGFuZ2VzLlxuICogQHBhcmFtIGRlcGVuZGVuY2llcyAtIEFuIG9wdGlvbmFsIGFycmF5IG9mIGRlcGVuZGVuY2llcy4gT25seSByZWxldmFudCB3aGVuXG4gKiAgIHVzaW5nIFJlYW5pbWF0ZWQgd2l0aG91dCB0aGUgQmFiZWwgcGx1Z2luIG9uIHRoZSBXZWIuXG4gKiBAcmV0dXJucyBBIG5ldyByZWFkb25seSBzaGFyZWQgdmFsdWUgYmFzZWQgb24gYSB2YWx1ZSByZXR1cm5lZCBmcm9tIHRoZVxuICogICB1cGRhdGVyIGZ1bmN0aW9uXG4gKiBAc2VlIGh0dHBzOi8vZG9jcy5zd21hbnNpb24uY29tL3JlYWN0LW5hdGl2ZS1yZWFuaW1hdGVkL2RvY3MvY29yZS91c2VEZXJpdmVkVmFsdWVcbiAqL1xuLy8gQHRzLWV4cGVjdC1lcnJvciBUaGlzIG92ZXJsb2FkIGlzIHJlcXVpcmVkIGJ5IG91ciBBUEkuXG5leHBvcnQgZnVuY3Rpb24gdXNlRGVyaXZlZFZhbHVlPFZhbHVlPihcbiAgdXBkYXRlcjogKCkgPT4gVmFsdWUsXG4gIGRlcGVuZGVuY2llcz86IERlcGVuZGVuY3lMaXN0XG4pOiBEZXJpdmVkVmFsdWU8VmFsdWU+O1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlRGVyaXZlZFZhbHVlPFZhbHVlPihcbiAgdXBkYXRlcjogV29ya2xldEZ1bmN0aW9uPFtdLCBWYWx1ZT4sXG4gIGRlcGVuZGVuY2llcz86IERlcGVuZGVuY3lMaXN0XG4pOiBEZXJpdmVkVmFsdWU8VmFsdWU+IHtcbiAgY29uc3QgaW5pdFJlZiA9IHVzZVJlZjxTaGFyZWRWYWx1ZTxWYWx1ZT4gfCBudWxsPihudWxsKTtcbiAgbGV0IGlucHV0cyA9IE9iamVjdC52YWx1ZXModXBkYXRlci5fX2Nsb3N1cmUgPz8ge30pO1xuICBpZiAoc2hvdWxkQmVVc2VXZWIoKSkge1xuICAgIGlmICghaW5wdXRzLmxlbmd0aCAmJiBkZXBlbmRlbmNpZXM/Lmxlbmd0aCkge1xuICAgICAgLy8gbGV0IHdlYiB3b3JrIHdpdGhvdXQgYSBCYWJlbC9TV0MgcGx1Z2luXG4gICAgICBpbnB1dHMgPSBkZXBlbmRlbmNpZXM7XG4gICAgfVxuICB9XG5cbiAgLy8gYnVpbGQgZGVwZW5kZW5jaWVzXG4gIGlmIChkZXBlbmRlbmNpZXMgPT09IHVuZGVmaW5lZCkge1xuICAgIGRlcGVuZGVuY2llcyA9IFsuLi5pbnB1dHMsIHVwZGF0ZXIuX193b3JrbGV0SGFzaF07XG4gIH0gZWxzZSB7XG4gICAgZGVwZW5kZW5jaWVzLnB1c2godXBkYXRlci5fX3dvcmtsZXRIYXNoKTtcbiAgfVxuXG4gIGlmIChpbml0UmVmLmN1cnJlbnQgPT09IG51bGwpIHtcbiAgICBpbml0UmVmLmN1cnJlbnQgPSBtYWtlTXV0YWJsZShpbml0aWFsVXBkYXRlclJ1bih1cGRhdGVyKSk7XG4gIH1cblxuICBjb25zdCBzaGFyZWRWYWx1ZTogU2hhcmVkVmFsdWU8VmFsdWU+ID0gaW5pdFJlZi5jdXJyZW50O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZnVuID0gKCkgPT4ge1xuICAgICAgJ3dvcmtsZXQnO1xuICAgICAgc2hhcmVkVmFsdWUudmFsdWUgPSB1cGRhdGVyKCk7XG4gICAgfTtcbiAgICBjb25zdCBtYXBwZXJJZCA9IHN0YXJ0TWFwcGVyKGZ1biwgaW5wdXRzLCBbXG4gICAgICBzaGFyZWRWYWx1ZSBhcyBTaGFyZWRWYWx1ZTx1bmtub3duPixcbiAgICBdKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgc3RvcE1hcHBlcihtYXBwZXJJZCk7XG4gICAgfTtcbiAgfSwgZGVwZW5kZW5jaWVzKTtcblxuICByZXR1cm4gc2hhcmVkVmFsdWU7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQUMsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBQyxNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBQyxLQUFBO0FBQUE7QUFBQUQsT0FBQSxDQUFBRSxlQUFBLEdBQUFBLGVBQUE7QUFBQSxJQUFBQyxtQkFBQSxHQUFBUCxzQkFBQSxDQUFBQyxPQUFBO0FBQ2IsSUFBQU8sTUFBQSxHQUFBUCxPQUFBO0FBQ0EsSUFBQVEsVUFBQSxHQUFBUixPQUFBO0FBRUEsSUFBQVMsS0FBQSxHQUFBVCxPQUFBO0FBRUEsSUFBQVUsZ0JBQUEsR0FBQVYsT0FBQTtBQUFvRCxJQUFBVyxnQ0FBQTtFQUFBQyxJQUFBO0VBQUFDLFFBQUE7RUFBQUMsU0FBQTtFQUFBQyxPQUFBO0FBQUE7QUE4QjdDLFNBQVNWLGVBQWVBLENBQzdCVyxPQUFtQyxFQUNuQ0MsWUFBNkIsRUFDUjtFQUFBLElBQUFDLGtCQUFBO0VBQ3JCLElBQU1DLE9BQU8sR0FBRyxJQUFBQyxhQUFNLEVBQTRCLElBQUksQ0FBQztFQUN2RCxJQUFJQyxNQUFNLEdBQUdwQixNQUFNLENBQUNxQixNQUFNLEVBQUFKLGtCQUFBLEdBQUNGLE9BQU8sQ0FBQ08sU0FBUyxZQUFBTCxrQkFBQSxHQUFJLENBQUMsQ0FBQyxDQUFDO0VBQ25ELElBQUksSUFBQU0sK0JBQWMsRUFBQyxDQUFDLEVBQUU7SUFBQSxJQUFBQyxhQUFBO0lBQ3BCLElBQUksQ0FBQ0osTUFBTSxDQUFDSyxNQUFNLEtBQUFELGFBQUEsR0FBSVIsWUFBWSxhQUFaUSxhQUFBLENBQWNDLE1BQU0sRUFBRTtNQUUxQ0wsTUFBTSxHQUFHSixZQUFZO0lBQ3ZCO0VBQ0Y7RUFHQSxJQUFJQSxZQUFZLEtBQUtVLFNBQVMsRUFBRTtJQUM5QlYsWUFBWSxNQUFBVyxNQUFBLEtBQUF0QixtQkFBQSxDQUFBdUIsT0FBQSxFQUFPUixNQUFNLElBQUVMLE9BQU8sQ0FBQ2MsYUFBYSxFQUFDO0VBQ25ELENBQUMsTUFBTTtJQUNMYixZQUFZLENBQUNjLElBQUksQ0FBQ2YsT0FBTyxDQUFDYyxhQUFhLENBQUM7RUFDMUM7RUFFQSxJQUFJWCxPQUFPLENBQUNhLE9BQU8sS0FBSyxJQUFJLEVBQUU7SUFDNUJiLE9BQU8sQ0FBQ2EsT0FBTyxHQUFHLElBQUFDLGlCQUFXLEVBQUMsSUFBQUMsNEJBQWlCLEVBQUNsQixPQUFPLENBQUMsQ0FBQztFQUMzRDtFQUVBLElBQU1tQixXQUErQixHQUFHaEIsT0FBTyxDQUFDYSxPQUFPO0VBRXZELElBQUFJLGdCQUFTLEVBQUMsWUFBTTtJQUNkLElBQU1DLEdBQUcsR0FBRztNQUFBLElBQUFDLEVBQUEsUUFBQUMsTUFBQSxDQUFBQyxLQUFBO01BQUEsSUFBQUMsa0JBQUEsWUFBQUEsbUJBQUEsRUFBTTtRQUVoQk4sV0FBVyxDQUFDL0IsS0FBSyxHQUFHWSxPQUFPLENBQUMsQ0FBQztNQUMvQixDQUFDO01BQUF5QixrQkFBQSxDQUFBbEIsU0FBQTtRQUFBWSxXQUFBLEVBRENBLFdBQVc7UUFBQW5CLE9BQUEsRUFBU0E7TUFBTztNQUFBeUIsa0JBQUEsQ0FBQVgsYUFBQTtNQUFBVyxrQkFBQSxDQUFBQyxVQUFBLEdBQUEvQixnQ0FBQTtNQUFBOEIsa0JBQUEsQ0FBQUUsY0FBQSxHQUFBTCxFQUFBO01BQUEsT0FBQUcsa0JBQUE7SUFBQSxDQUZqQixFQUdYO0lBQ0QsSUFBTUcsUUFBUSxHQUFHLElBQUFDLGlCQUFXLEVBQUNSLEdBQUcsRUFBRWhCLE1BQU0sRUFBRSxDQUN4Q2MsV0FBVyxDQUNaLENBQUM7SUFDRixPQUFPLFlBQU07TUFDWCxJQUFBVyxnQkFBVSxFQUFDRixRQUFRLENBQUM7SUFDdEIsQ0FBQztFQUNILENBQUMsRUFBRTNCLFlBQVksQ0FBQztFQUVoQixPQUFPa0IsV0FBVztBQUNwQiIsImlnbm9yZUxpc3QiOltdfQ==