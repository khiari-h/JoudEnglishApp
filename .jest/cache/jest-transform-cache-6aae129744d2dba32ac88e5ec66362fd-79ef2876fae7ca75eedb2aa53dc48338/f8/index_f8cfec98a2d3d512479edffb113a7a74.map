{"version":3,"names":["_reactNative","require","_NavigationButtons","_interopRequireDefault","_style","_propTypes","_jsxRuntime","GrammarNavigation","_ref","showFeedback","isCorrect","canCheckAnswer","onCheckAnswer","onPreviousExercise","onNextExercise","onRetryExercise","onSkipExercise","isFirstExercise","isLastExercise","_ref$levelColor","levelColor","jsx","View","style","styles","container","children","default","onNext","disableNext","disablePrevious","showSkip","currentIndex","totalCount","primaryColor","buttonLabels","next","previous","skip","finish","variant","onPrevious","propTypes","PropTypes","bool","isRequired","func","string","_default","exports"],"sources":["index.js"],"sourcesContent":["// src/components/screens/exercises/grammar/GrammarNavigation/index.js\r\nimport { View } from \"react-native\";\r\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\r\nimport styles from \"./style\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * ðŸŽ¯ GrammarNavigation - Version Simple avec NavigationButtons\r\n * - RÃ©utilise le composant gÃ©nÃ©rique NavigationButtons\r\n * - Logique simplifiÃ©e et cohÃ©rente avec Vocabulaire\r\n * - Pas de code dupliquÃ©\r\n * - Design unifiÃ©\r\n */\r\nconst GrammarNavigation = ({\r\n  showFeedback,\r\n  isCorrect,\r\n  canCheckAnswer,\r\n  onCheckAnswer,\r\n  onPreviousExercise,\r\n  onNextExercise,\r\n  onRetryExercise,\r\n  onSkipExercise,\r\n  isFirstExercise,\r\n  isLastExercise,\r\n  levelColor = \"#3b82f6\",\r\n}) => {\r\n\r\n  // ðŸŽ¯ LOGIQUE SIMPLIFIÃ‰E - 3 modes clairs\r\n\r\n  // Mode 1: Pas encore vÃ©rifiÃ© â†’ Check Answer\r\n  if (!showFeedback) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <NavigationButtons\r\n          onNext={onCheckAnswer}\r\n          disableNext={!canCheckAnswer}\r\n          disablePrevious // Pas de Previous pendant check\r\n          showSkip={false}\r\n          currentIndex={0}\r\n          totalCount={1}\r\n          primaryColor={levelColor}\r\n          buttonLabels={{\r\n            next: \"Check Answer\",\r\n            previous: \"\",\r\n            skip: \"\",\r\n            finish: \"\",\r\n          }}\r\n          variant=\"centered\" // Juste le bouton Check centrÃ©\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Mode 2: RÃ©ponse correcte â†’ Navigation normale\r\n  if (isCorrect) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <NavigationButtons\r\n          onNext={onNextExercise}\r\n          onPrevious={onPreviousExercise}\r\n          disablePrevious={isFirstExercise}\r\n          disableNext={false}\r\n          showSkip={false}\r\n          currentIndex={isLastExercise ? 1 : 0}\r\n          totalCount={2}\r\n          primaryColor={levelColor}\r\n          buttonLabels={{\r\n            next: isLastExercise ? \"Finish\" : \"Next\",\r\n            previous: \"Previous\",\r\n            skip: \"\",\r\n            finish: \"Finish\",\r\n          }}\r\n          variant=\"standard\" // Navigation standard comme Vocabulaire\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Mode 3: RÃ©ponse incorrecte â†’ Try Again + Skip\r\n  return (\r\n    <View style={styles.container}>\r\n      <NavigationButtons\r\n        onNext={onSkipExercise}\r\n        onPrevious={onRetryExercise}\r\n        disablePrevious={false}\r\n        disableNext={false}\r\n        showSkip={false}\r\n        currentIndex={0}\r\n        totalCount={1}\r\n        primaryColor={levelColor}\r\n        buttonLabels={{\r\n          next: \"Skip\",\r\n          previous: \"Try Again\",\r\n          skip: \"\",\r\n          finish: \"\",\r\n        }}\r\n        variant=\"standard\" // Try Again Ã  gauche, Skip Ã  droite\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n// âœ… Ajout de la validation des props\r\nGrammarNavigation.propTypes = {\r\n  showFeedback: PropTypes.bool.isRequired,\r\n  isCorrect: PropTypes.bool.isRequired,\r\n  canCheckAnswer: PropTypes.bool.isRequired,\r\n  onCheckAnswer: PropTypes.func.isRequired,\r\n  onPreviousExercise: PropTypes.func.isRequired,\r\n  onNextExercise: PropTypes.func.isRequired,\r\n  onRetryExercise: PropTypes.func.isRequired,\r\n  onSkipExercise: PropTypes.func.isRequired,\r\n  isFirstExercise: PropTypes.bool.isRequired,\r\n  isLastExercise: PropTypes.bool.isRequired,\r\n  levelColor: PropTypes.string,\r\n};\r\n\r\nexport default GrammarNavigation;"],"mappings":"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","ignoreList":[]}