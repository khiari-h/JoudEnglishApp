{"version":3,"names":["_getJestObj","mock","useFocusEffect","jest","fn","callback","router","push","Stack","_ref","children","_jsxRuntime","jsx","Fragment","useLocalSearchParams","useNavigation","navigate","goBack","canGoBack","addListener","isFocused","lastActivity","isLoading","saveActivity","clearActivity","reload","currentStreak","wordsToday","timeToday","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_reactNative2","_ProgressContext","_ThemeContext","_CurrentLevelContext","_require","FakeMetricsDisplay","_progress$levels","_progress$levels2","_progress$levels3","_progress$levels4","_useProgress","useProgress","progress","updateExerciseProgress","simulateVocabularyProgress","simulateGrammarProgress","simulateReadingProgress","simulateMultipleUpdates","act","overallProgress","levels","A1","Object","values","reduce","sum","val","keys","length","jsxs","View","Text","testID","Math","round","vocabulary","grammar","reading","TouchableOpacity","onPress","FakeMetricsObserver","_progress$levels5","_progress$levels6","_progress$levels7","_useProgress2","describe","beforeEach","clearAllMocks","it","default","_render","render","ThemeProvider","ProgressProvider","getByTestId","expect","toHaveTextContent","fireEvent","press","waitFor","_render2","_render3","CurrentLevelProvider","toBeTruthy","_render4","_render5","_render6","i","_render7","_render8"],"sources":["real-time-metrics.test.js"],"sourcesContent":["// __tests__/integration/real-time-metrics.test.js\r\nimport React from 'react';\r\nimport { render, fireEvent, waitFor, act } from '@testing-library/react-native';\r\nimport { TouchableOpacity, Text, View } from 'react-native';\r\nimport { ProgressProvider, useProgress } from '../../src/contexts/ProgressContext';\r\nimport { ThemeProvider } from '../../src/contexts/ThemeContext';\r\nimport { CurrentLevelProvider } from '../../src/contexts/CurrentLevelContext';\r\n\r\n// Mock de expo-router\r\njest.mock('expo-router', () => ({\r\n  useFocusEffect: jest.fn(callback => callback()),\r\n  router: {\r\n    push: jest.fn(),\r\n  },\r\n  Stack: ({ children }) => <>{children}</>,\r\n  useLocalSearchParams: () => ({}),\r\n  useNavigation: () => ({\r\n    navigate: jest.fn(),\r\n    goBack: jest.fn(),\r\n    canGoBack: jest.fn(() => true),\r\n    addListener: jest.fn(),\r\n    isFocused: jest.fn(() => true),\r\n  }),\r\n}));\r\n\r\n// Mock des hooks\r\njest.mock('../../src/hooks/useLastActivity', () => () => ({\r\n  lastActivity: null,\r\n  isLoading: false,\r\n  saveActivity: jest.fn(),\r\n  clearActivity: jest.fn(),\r\n  reload: jest.fn(),\r\n}));\r\n\r\njest.mock('../../src/hooks/useActivityMetrics', () => () => ({\r\n  currentStreak: 5,\r\n  wordsToday: 0,\r\n  timeToday: 0,\r\n  isLoading: false,\r\n}));\r\n\r\n// Composant de test pour simuler les métriques en temps réel\r\nconst FakeMetricsDisplay = () => {\r\n  const { progress, updateExerciseProgress } = useProgress();\r\n\r\n  const simulateVocabularyProgress = () => {\r\n    updateExerciseProgress('vocabulary', 'A1', 80);\r\n  };\r\n\r\n  const simulateGrammarProgress = () => {\r\n    updateExerciseProgress('grammar', 'A1', 60);\r\n  };\r\n\r\n  const simulateReadingProgress = () => {\r\n    updateExerciseProgress('reading', 'A1', 40);\r\n  };\r\n\r\n  const simulateMultipleUpdates = () => {\r\n    act(() => {\r\n      updateExerciseProgress('vocabulary', 'A1', 90);\r\n      updateExerciseProgress('grammar', 'A1', 70);\r\n      updateExerciseProgress('reading', 'A1', 50);\r\n    });\r\n  };\r\n\r\n  // Calculer la progression globale\r\n  const overallProgress = progress.levels?.A1 \r\n    ? Object.values(progress.levels.A1).reduce((sum, val) => sum + (val || 0), 0) / Object.keys(progress.levels.A1).length\r\n    : 0;\r\n\r\n  return (\r\n    <View>\r\n      <Text testID=\"overall-progress\">\r\n        Progression globale: {Math.round(overallProgress)}%\r\n      </Text>\r\n      <Text testID=\"vocabulary-progress\">\r\n        Vocabulaire: {progress.levels?.A1?.vocabulary || 0}%\r\n      </Text>\r\n      <Text testID=\"grammar-progress\">\r\n        Grammaire: {progress.levels?.A1?.grammar || 0}%\r\n      </Text>\r\n      <Text testID=\"reading-progress\">\r\n        Lecture: {progress.levels?.A1?.reading || 0}%\r\n      </Text>\r\n      \r\n      <TouchableOpacity testID=\"vocabulary-button\" onPress={simulateVocabularyProgress}>\r\n        <Text>Progression Vocabulaire</Text>\r\n      </TouchableOpacity>\r\n      \r\n      <TouchableOpacity testID=\"grammar-button\" onPress={simulateGrammarProgress}>\r\n        <Text>Progression Grammaire</Text>\r\n      </TouchableOpacity>\r\n      \r\n      <TouchableOpacity testID=\"reading-button\" onPress={simulateReadingProgress}>\r\n        <Text>Progression Lecture</Text>\r\n      </TouchableOpacity>\r\n      \r\n      <TouchableOpacity testID=\"multiple-updates\" onPress={simulateMultipleUpdates}>\r\n        <Text>Mises à jour multiples</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\n// Composant de test pour vérifier la synchronisation\r\nconst FakeMetricsObserver = () => {\r\n  const { progress } = useProgress();\r\n\r\n  return (\r\n    <View>\r\n      <Text testID=\"observer-vocabulary\">\r\n        Obs: {progress.levels?.A1?.vocabulary || 0}%\r\n      </Text>\r\n      <Text testID=\"observer-grammar\">\r\n        Obs: {progress.levels?.A1?.grammar || 0}%\r\n      </Text>\r\n      <Text testID=\"observer-reading\">\r\n        Obs: {progress.levels?.A1?.reading || 0}%\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\ndescribe('Scénario 1: Métriques en temps réel - Mise à jour instantanée', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it(\"devrait mettre à jour les métriques instantanément après modification\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeMetricsDisplay />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Vérifier l'état initial\r\n    expect(getByTestId('vocabulary-progress')).toHaveTextContent('Vocabulaire: 0%');\r\n    expect(getByTestId('grammar-progress')).toHaveTextContent('Grammaire: 0%');\r\n    expect(getByTestId('reading-progress')).toHaveTextContent('Lecture: 0%');\r\n\r\n    // Simuler la progression en vocabulaire\r\n    fireEvent.press(getByTestId('vocabulary-button'));\r\n\r\n    await waitFor(() => {\r\n      expect(getByTestId('vocabulary-progress')).toHaveTextContent('Vocabulaire: 80%');\r\n    });\r\n\r\n    // Simuler la progression en grammaire\r\n    fireEvent.press(getByTestId('grammar-button'));\r\n\r\n    await waitFor(() => {\r\n      expect(getByTestId('grammar-progress')).toHaveTextContent('Grammaire: 60%');\r\n    });\r\n\r\n    // Simuler la progression en lecture\r\n    fireEvent.press(getByTestId('reading-button'));\r\n\r\n    await waitFor(() => {\r\n      expect(getByTestId('reading-progress')).toHaveTextContent('Lecture: 40%');\r\n    });\r\n  });\r\n\r\n  it(\"devrait calculer correctement la progression globale\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeMetricsDisplay />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Vérifier l'état initial\r\n    expect(getByTestId('overall-progress')).toHaveTextContent('Progression globale: 0%');\r\n\r\n    // Simuler des progressions\r\n    fireEvent.press(getByTestId('vocabulary-button')); // 80%\r\n    fireEvent.press(getByTestId('grammar-button'));    // 60%\r\n    fireEvent.press(getByTestId('reading-button'));    // 40%\r\n\r\n    await waitFor(() => {\r\n      // (80 + 60 + 40) / 3 = 60%\r\n      expect(getByTestId('overall-progress')).toHaveTextContent('Progression globale: 60%');\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('Scénario 2: Synchronisation entre composants', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it(\"devrait synchroniser les métriques entre plusieurs composants\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <CurrentLevelProvider>\r\n            <FakeMetricsDisplay />\r\n            <FakeMetricsObserver />\r\n          </CurrentLevelProvider>\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Vérifier que les deux composants sont rendus\r\n    expect(getByTestId('vocabulary-progress')).toBeTruthy();\r\n    expect(getByTestId('observer-vocabulary')).toBeTruthy();\r\n\r\n    // Vérifier l'état initial synchronisé\r\n    expect(getByTestId('vocabulary-progress')).toHaveTextContent('Vocabulaire: 0%');\r\n    expect(getByTestId('observer-vocabulary')).toHaveTextContent('Obs: 0%');\r\n\r\n    // Simuler une mise à jour\r\n    fireEvent.press(getByTestId('vocabulary-button'));\r\n\r\n    await waitFor(() => {\r\n      // Les deux composants devraient être synchronisés\r\n      expect(getByTestId('vocabulary-progress')).toHaveTextContent('Vocabulaire: 80%');\r\n      expect(getByTestId('observer-vocabulary')).toHaveTextContent('Obs: 80%');\r\n    });\r\n  });\r\n\r\n  it(\"devrait maintenir la cohérence lors de mises à jour multiples\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <CurrentLevelProvider>\r\n            <FakeMetricsDisplay />\r\n            <FakeMetricsObserver />\r\n          </CurrentLevelProvider>\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Simuler des mises à jour multiples\r\n    fireEvent.press(getByTestId('multiple-updates'));\r\n\r\n    await waitFor(() => {\r\n      // Vérifier que tous les composants sont synchronisés\r\n      expect(getByTestId('vocabulary-progress')).toHaveTextContent('Vocabulaire: 90%');\r\n      expect(getByTestId('observer-vocabulary')).toHaveTextContent('Obs: 90%');\r\n      \r\n      expect(getByTestId('grammar-progress')).toHaveTextContent('Grammaire: 70%');\r\n      expect(getByTestId('observer-grammar')).toHaveTextContent('Obs: 70%');\r\n      \r\n      expect(getByTestId('reading-progress')).toHaveTextContent('Lecture: 50%');\r\n      expect(getByTestId('observer-reading')).toHaveTextContent('Obs: 50%');\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('Scénario 3: Performance et réactivité', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it(\"devrait gérer les mises à jour rapides sans perte de données\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeMetricsDisplay />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Simuler des mises à jour très rapides\r\n    act(() => {\r\n      fireEvent.press(getByTestId('vocabulary-button'));\r\n      fireEvent.press(getByTestId('grammar-button'));\r\n      fireEvent.press(getByTestId('reading-button'));\r\n    });\r\n\r\n    await waitFor(() => {\r\n      // Toutes les mises à jour devraient être prises en compte\r\n      expect(getByTestId('vocabulary-progress')).toHaveTextContent('Vocabulaire: 80%');\r\n      expect(getByTestId('grammar-progress')).toHaveTextContent('Grammaire: 60%');\r\n      expect(getByTestId('reading-progress')).toHaveTextContent('Lecture: 40%');\r\n    });\r\n  });\r\n\r\n  it(\"devrait maintenir la cohérence des données lors de stress\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeMetricsDisplay />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Simuler un stress test avec beaucoup de mises à jour\r\n    for (let i = 0; i < 10; i++) {\r\n      act(() => {\r\n        fireEvent.press(getByTestId('vocabulary-button'));\r\n      });\r\n    }\r\n\r\n    await waitFor(() => {\r\n      // La dernière valeur devrait être correcte\r\n      expect(getByTestId('vocabulary-progress')).toHaveTextContent('Vocabulaire: 80%');\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('Scénario 4: Gestion des erreurs et cas limites', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it(\"devrait gérer les valeurs de progression invalides\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeMetricsDisplay />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Vérifier l'état initial\r\n    expect(getByTestId('overall-progress')).toHaveTextContent('Progression globale: 0%');\r\n\r\n    // Simuler des progressions avec des valeurs extrêmes\r\n    act(() => {\r\n      // Ces valeurs devraient être gérées correctement\r\n      fireEvent.press(getByTestId('vocabulary-button')); // 80%\r\n    });\r\n\r\n    await waitFor(() => {\r\n      expect(getByTestId('overall-progress')).toHaveTextContent('Progression globale: 80%');\r\n    });\r\n  });\r\n\r\n  it(\"devrait gérer l'absence de données de progression\", async () => {\r\n    const { getByTestId } = render(\r\n      <ThemeProvider>\r\n        <ProgressProvider>\r\n          <FakeMetricsDisplay />\r\n        </ProgressProvider>\r\n      </ThemeProvider>\r\n    );\r\n\r\n    // Vérifier que l'application fonctionne même sans données\r\n    expect(getByTestId('overall-progress')).toHaveTextContent('Progression globale: 0%');\r\n    expect(getByTestId('vocabulary-progress')).toHaveTextContent('Vocabulaire: 0%');\r\n    expect(getByTestId('grammar-progress')).toHaveTextContent('Grammaire: 0%');\r\n    expect(getByTestId('reading-progress')).toHaveTextContent('Lecture: 0%');\r\n  });\r\n});\r\n"],"mappings":"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","ignoreList":[]}