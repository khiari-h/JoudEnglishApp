{"version":3,"names":["_getJestObj","mock","_require","require","Text","Ionicons","props","_jsxRuntime","jsx","testID","name","children","_interopRequireDefault","_asyncToGenerator2","_react","_reactNative","_ExerciseFeedback","_require2","jest","describe","beforeAll","useFakeTimers","afterAll","useRealTimers","onDismissMock","fn","afterEach","mockClear","it","_render","render","default","message","getByText","expect","toBeTruthy","_render2","explanation","_render3","queryByText","toBeNull","_render4","type","getByTestId","_render5","_render6","_render7","onDismiss","fireEvent","press","toHaveBeenCalledTimes","_render8","showDismissButton","queryByTestId","autoHide","autoHideDuration","not","toHaveBeenCalled","act","runAllTimers","waitFor"],"sources":["ExerciseFeedback.test.js"],"sourcesContent":["// __tests__/components/exercise-common/ExerciseFeedback.test.js\nimport React from 'react';\nimport { render, fireEvent, act, waitFor } from '@testing-library/react-native';\nimport ExerciseFeedback from '../../../src/components/exercise-common/ExerciseFeedback';\n\n// Mock des icônes pour l'environnement de test\njest.mock('@expo/vector-icons', () => {\n  const { Text } = require('react-native');\n  return {\n    Ionicons: (props) => <Text testID={`icon-${props.name}`}>{props.name}</Text>,\n  };\n});\n\ndescribe('ExerciseFeedback', () => {\n  // Activer les fake timers pour tester les délais\n  beforeAll(() => {\n    jest.useFakeTimers();\n  });\n\n  // Restaurer les timers réels après les tests\n  afterAll(() => {\n    jest.useRealTimers();\n  });\n\n  const onDismissMock = jest.fn();\n\n  afterEach(() => {\n    onDismissMock.mockClear();\n  });\n\n  it('renders the message correctly', () => {\n    const { getByText } = render(<ExerciseFeedback message=\"Correct!\" />);\n    expect(getByText('Correct!')).toBeTruthy();\n  });\n\n  it('renders the explanation when provided', () => {\n    const { getByText } = render(\n      <ExerciseFeedback message=\"Incorrect\" explanation=\"The answer was X.\" />\n    );\n    expect(getByText('The answer was X.')).toBeTruthy();\n  });\n\n  it('does not render the explanation when not provided', () => {\n    const { queryByText } = render(<ExerciseFeedback message=\"Correct!\" />);\n    expect(queryByText('The answer was X.')).toBeNull();\n  });\n\n  it('shows a success icon for type \"success\"', () => {\n    const { getByTestId } = render(<ExerciseFeedback message=\"Success\" type=\"success\" />);\n    expect(getByTestId('icon-checkmark-circle')).toBeTruthy();\n  });\n\n  it('shows an error icon for type \"error\"', () => {\n    const { getByTestId } = render(<ExerciseFeedback message=\"Error\" type=\"error\" />);\n    expect(getByTestId('icon-close-circle')).toBeTruthy();\n  });\n\n  it('shows an info icon for type \"info\"', () => {\n    const { getByTestId } = render(<ExerciseFeedback message=\"Info\" type=\"info\" />);\n    expect(getByTestId('icon-information-circle')).toBeTruthy();\n  });\n\n  it('calls onDismiss when the dismiss button is pressed', () => {\n    const { getByTestId } = render(\n      <ExerciseFeedback message=\"Test\" onDismiss={onDismissMock} />\n    );\n    fireEvent.press(getByTestId('icon-close'));\n    expect(onDismissMock).toHaveBeenCalledTimes(1);\n  });\n\n  it('does not show the dismiss button if showDismissButton is false', () => {\n    const { queryByTestId } = render(\n      <ExerciseFeedback message=\"Test\" showDismissButton={false} />\n    );\n    expect(queryByTestId('icon-close')).toBeNull();\n  });\n\n  it('calls onDismiss automatically when autoHide is true', async () => {\n    render(\n      <ExerciseFeedback\n        message=\"Hiding soon...\"\n        onDismiss={onDismissMock}\n        autoHide={true}\n        autoHideDuration={5000}\n      />\n    );\n\n    expect(onDismissMock).not.toHaveBeenCalled();\n\n    act(() => {\n      jest.runAllTimers();\n    });\n\n    await waitFor(() => {\n      expect(onDismissMock).toHaveBeenCalledTimes(1);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}