327aa1a7219cf9ca4daa3b58cffd6824
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LogBoxNotificationDismissButton;
var _View = _interopRequireDefault(require("../../Components/View/View"));
var _Image = _interopRequireDefault(require("../../Image/Image"));
var _StyleSheet = _interopRequireDefault(require("../../StyleSheet/StyleSheet"));
var _LogBoxButton = _interopRequireDefault(require("./LogBoxButton"));
var LogBoxStyle = _interopRequireWildcard(require("./LogBoxStyle"));
var React = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function LogBoxNotificationDismissButton(props) {
  return (0, _jsxRuntime.jsx)(_View.default, {
    style: styles.container,
    children: (0, _jsxRuntime.jsx)(_LogBoxButton.default, {
      backgroundColor: {
        default: LogBoxStyle.getTextColor(0.3),
        pressed: LogBoxStyle.getTextColor(0.5)
      },
      hitSlop: {
        top: 12,
        right: 10,
        bottom: 12,
        left: 10
      },
      onPress: props.onPress,
      style: styles.press,
      children: (0, _jsxRuntime.jsx)(_Image.default, {
        source: require('./LogBoxImages/close.png'),
        style: styles.image
      })
    })
  });
}
var styles = _StyleSheet.default.create({
  container: {
    alignSelf: 'center',
    flexDirection: 'row',
    flexGrow: 0,
    flexShrink: 0,
    flexBasis: 'auto',
    marginLeft: 5
  },
  press: {
    height: 20,
    width: 20,
    borderRadius: 25,
    alignSelf: 'flex-end',
    alignItems: 'center',
    justifyContent: 'center'
  },
  image: {
    height: 8,
    width: 8,
    tintColor: LogBoxStyle.getBackgroundColor(1)
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfVmlldyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX0ltYWdlIiwiX1N0eWxlU2hlZXQiLCJfTG9nQm94QnV0dG9uIiwiTG9nQm94U3R5bGUiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIlJlYWN0IiwiX2pzeFJ1bnRpbWUiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIkxvZ0JveE5vdGlmaWNhdGlvbkRpc21pc3NCdXR0b24iLCJwcm9wcyIsImpzeCIsInN0eWxlIiwic3R5bGVzIiwiY29udGFpbmVyIiwiY2hpbGRyZW4iLCJiYWNrZ3JvdW5kQ29sb3IiLCJnZXRUZXh0Q29sb3IiLCJwcmVzc2VkIiwiaGl0U2xvcCIsInRvcCIsInJpZ2h0IiwiYm90dG9tIiwibGVmdCIsIm9uUHJlc3MiLCJwcmVzcyIsInNvdXJjZSIsImltYWdlIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImFsaWduU2VsZiIsImZsZXhEaXJlY3Rpb24iLCJmbGV4R3JvdyIsImZsZXhTaHJpbmsiLCJmbGV4QmFzaXMiLCJtYXJnaW5MZWZ0IiwiaGVpZ2h0Iiwid2lkdGgiLCJib3JkZXJSYWRpdXMiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJ0aW50Q29sb3IiLCJnZXRCYWNrZ3JvdW5kQ29sb3IiXSwic291cmNlcyI6WyJMb2dCb3hOb3RpZmljYXRpb25EaXNtaXNzQnV0dG9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgVmlldyBmcm9tICcuLi8uLi9Db21wb25lbnRzL1ZpZXcvVmlldyc7XG5pbXBvcnQgSW1hZ2UgZnJvbSAnLi4vLi4vSW1hZ2UvSW1hZ2UnO1xuaW1wb3J0IFN0eWxlU2hlZXQgZnJvbSAnLi4vLi4vU3R5bGVTaGVldC9TdHlsZVNoZWV0JztcbmltcG9ydCBMb2dCb3hCdXR0b24gZnJvbSAnLi9Mb2dCb3hCdXR0b24nO1xuaW1wb3J0ICogYXMgTG9nQm94U3R5bGUgZnJvbSAnLi9Mb2dCb3hTdHlsZSc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExvZ0JveE5vdGlmaWNhdGlvbkRpc21pc3NCdXR0b24ocHJvcHM6IHtcbiAgb25QcmVzczogKCkgPT4gdm9pZCxcbn0pOiBSZWFjdC5Ob2RlIHtcbiAgcmV0dXJuIChcbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XG4gICAgICA8TG9nQm94QnV0dG9uXG4gICAgICAgIGJhY2tncm91bmRDb2xvcj17e1xuICAgICAgICAgIGRlZmF1bHQ6IExvZ0JveFN0eWxlLmdldFRleHRDb2xvcigwLjMpLFxuICAgICAgICAgIHByZXNzZWQ6IExvZ0JveFN0eWxlLmdldFRleHRDb2xvcigwLjUpLFxuICAgICAgICB9fVxuICAgICAgICBoaXRTbG9wPXt7XG4gICAgICAgICAgdG9wOiAxMixcbiAgICAgICAgICByaWdodDogMTAsXG4gICAgICAgICAgYm90dG9tOiAxMixcbiAgICAgICAgICBsZWZ0OiAxMCxcbiAgICAgICAgfX1cbiAgICAgICAgb25QcmVzcz17cHJvcHMub25QcmVzc31cbiAgICAgICAgc3R5bGU9e3N0eWxlcy5wcmVzc30+XG4gICAgICAgIDxJbWFnZVxuICAgICAgICAgIHNvdXJjZT17cmVxdWlyZSgnLi9Mb2dCb3hJbWFnZXMvY2xvc2UucG5nJyl9XG4gICAgICAgICAgc3R5bGU9e3N0eWxlcy5pbWFnZX1cbiAgICAgICAgLz5cbiAgICAgIDwvTG9nQm94QnV0dG9uPlxuICAgIDwvVmlldz5cbiAgKTtcbn1cblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBhbGlnblNlbGY6ICdjZW50ZXInLFxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGZsZXhHcm93OiAwLFxuICAgIGZsZXhTaHJpbms6IDAsXG4gICAgZmxleEJhc2lzOiAnYXV0bycsXG4gICAgbWFyZ2luTGVmdDogNSxcbiAgfSxcbiAgcHJlc3M6IHtcbiAgICBoZWlnaHQ6IDIwLFxuICAgIHdpZHRoOiAyMCxcbiAgICBib3JkZXJSYWRpdXM6IDI1LFxuICAgIGFsaWduU2VsZjogJ2ZsZXgtZW5kJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gIH0sXG4gIGltYWdlOiB7XG4gICAgaGVpZ2h0OiA4LFxuICAgIHdpZHRoOiA4LFxuICAgIHRpbnRDb2xvcjogTG9nQm94U3R5bGUuZ2V0QmFja2dyb3VuZENvbG9yKDEpLFxuICB9LFxufSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBVUEsSUFBQUEsS0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsV0FBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsYUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUksV0FBQSxHQUFBQyx1QkFBQSxDQUFBTCxPQUFBO0FBQ0EsSUFBQU0sS0FBQSxHQUFBRCx1QkFBQSxDQUFBTCxPQUFBO0FBQStCLElBQUFPLFdBQUEsR0FBQVAsT0FBQTtBQUFBLFNBQUFLLHdCQUFBRyxDQUFBLEVBQUFDLENBQUEsNkJBQUFDLE9BQUEsTUFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBTCx1QkFBQSxZQUFBQSx3QkFBQUcsQ0FBQSxFQUFBQyxDQUFBLFNBQUFBLENBQUEsSUFBQUQsQ0FBQSxJQUFBQSxDQUFBLENBQUFLLFVBQUEsU0FBQUwsQ0FBQSxNQUFBTSxDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxLQUFBQyxTQUFBLFFBQUFDLE9BQUEsRUFBQVYsQ0FBQSxpQkFBQUEsQ0FBQSx1QkFBQUEsQ0FBQSx5QkFBQUEsQ0FBQSxTQUFBUSxDQUFBLE1BQUFGLENBQUEsR0FBQUwsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsUUFBQUcsQ0FBQSxDQUFBSyxHQUFBLENBQUFYLENBQUEsVUFBQU0sQ0FBQSxDQUFBTSxHQUFBLENBQUFaLENBQUEsR0FBQU0sQ0FBQSxDQUFBTyxHQUFBLENBQUFiLENBQUEsRUFBQVEsQ0FBQSxjQUFBTSxFQUFBLElBQUFkLENBQUEsZ0JBQUFjLEVBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLEVBQUEsT0FBQVAsQ0FBQSxJQUFBRCxDQUFBLEdBQUFXLE1BQUEsQ0FBQUMsY0FBQSxLQUFBRCxNQUFBLENBQUFFLHdCQUFBLENBQUFuQixDQUFBLEVBQUFjLEVBQUEsT0FBQVAsQ0FBQSxDQUFBSyxHQUFBLElBQUFMLENBQUEsQ0FBQU0sR0FBQSxJQUFBUCxDQUFBLENBQUFFLENBQUEsRUFBQU0sRUFBQSxFQUFBUCxDQUFBLElBQUFDLENBQUEsQ0FBQU0sRUFBQSxJQUFBZCxDQUFBLENBQUFjLEVBQUEsV0FBQU4sQ0FBQSxLQUFBUixDQUFBLEVBQUFDLENBQUE7QUFFaEIsU0FBU21CLCtCQUErQkEsQ0FBQ0MsS0FFdkQsRUFBYztFQUNiLE9BQ0UsSUFBQXRCLFdBQUEsQ0FBQXVCLEdBQUEsRUFBQ2hDLEtBQUEsQ0FBQW9CLE9BQUk7SUFBQ2EsS0FBSyxFQUFFQyxNQUFNLENBQUNDLFNBQVU7SUFBQUMsUUFBQSxFQUM1QixJQUFBM0IsV0FBQSxDQUFBdUIsR0FBQSxFQUFDM0IsYUFBQSxDQUFBZSxPQUFZO01BQ1hpQixlQUFlLEVBQUU7UUFDZmpCLE9BQU8sRUFBRWQsV0FBVyxDQUFDZ0MsWUFBWSxDQUFDLEdBQUcsQ0FBQztRQUN0Q0MsT0FBTyxFQUFFakMsV0FBVyxDQUFDZ0MsWUFBWSxDQUFDLEdBQUc7TUFDdkMsQ0FBRTtNQUNGRSxPQUFPLEVBQUU7UUFDUEMsR0FBRyxFQUFFLEVBQUU7UUFDUEMsS0FBSyxFQUFFLEVBQUU7UUFDVEMsTUFBTSxFQUFFLEVBQUU7UUFDVkMsSUFBSSxFQUFFO01BQ1IsQ0FBRTtNQUNGQyxPQUFPLEVBQUVkLEtBQUssQ0FBQ2MsT0FBUTtNQUN2QlosS0FBSyxFQUFFQyxNQUFNLENBQUNZLEtBQU07TUFBQVYsUUFBQSxFQUNwQixJQUFBM0IsV0FBQSxDQUFBdUIsR0FBQSxFQUFDN0IsTUFBQSxDQUFBaUIsT0FBSztRQUNKMkIsTUFBTSxFQUFFN0MsT0FBTyxDQUFDLDBCQUEwQixDQUFFO1FBQzVDK0IsS0FBSyxFQUFFQyxNQUFNLENBQUNjO01BQU0sQ0FDckI7SUFBQyxDQUNVO0VBQUMsQ0FDWCxDQUFDO0FBRVg7QUFFQSxJQUFNZCxNQUFNLEdBQUdlLG1CQUFVLENBQUNDLE1BQU0sQ0FBQztFQUMvQmYsU0FBUyxFQUFFO0lBQ1RnQixTQUFTLEVBQUUsUUFBUTtJQUNuQkMsYUFBYSxFQUFFLEtBQUs7SUFDcEJDLFFBQVEsRUFBRSxDQUFDO0lBQ1hDLFVBQVUsRUFBRSxDQUFDO0lBQ2JDLFNBQVMsRUFBRSxNQUFNO0lBQ2pCQyxVQUFVLEVBQUU7RUFDZCxDQUFDO0VBQ0RWLEtBQUssRUFBRTtJQUNMVyxNQUFNLEVBQUUsRUFBRTtJQUNWQyxLQUFLLEVBQUUsRUFBRTtJQUNUQyxZQUFZLEVBQUUsRUFBRTtJQUNoQlIsU0FBUyxFQUFFLFVBQVU7SUFDckJTLFVBQVUsRUFBRSxRQUFRO0lBQ3BCQyxjQUFjLEVBQUU7RUFDbEIsQ0FBQztFQUNEYixLQUFLLEVBQUU7SUFDTFMsTUFBTSxFQUFFLENBQUM7SUFDVEMsS0FBSyxFQUFFLENBQUM7SUFDUkksU0FBUyxFQUFFeEQsV0FBVyxDQUFDeUQsa0JBQWtCLENBQUMsQ0FBQztFQUM3QztBQUNGLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==