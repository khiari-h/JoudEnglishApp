{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","useActivityMetrics","_useState","useState","_useState2","_slicedToArray2","default","currentStreak","setCurrentStreak","_useState3","_useState4","todayMinutes","setTodayMinutes","_useState5","_useState6","sessionStart","setSessionStart","getTodayString","Date","toDateString","handleStorageError","error","operation","fallback","console","warn","useEffect","loadMetrics","_ref","_asyncToGenerator2","today","_yield$Promise$all","Promise","all","AsyncStorage","getItem","_yield$Promise$all2","streakData","timeData","lastDateData","parseInt","lastDate","setItem","storageError","apply","arguments","startSession","useCallback","exerciseType","now","endSession","sessionEnd","sessionMinutes","Math","round","newTodayTotal","toString","updateStreak","yesterday","setDate","getDate","isYesterday","newStreak","getStreakTrend","getFormattedTime","hours","floor","mins","minsPart","streakTrend","formattedTime","_default","exports"],"sources":["useActivityMetrics.js"],"sourcesContent":["// src/hooks/useActivityMetrics.js - TEMPS QUOTIDIEN\n\nimport { useState, useEffect, useCallback } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst useActivityMetrics = () => {\n  const [currentStreak, setCurrentStreak] = useState(0);\n  const [todayMinutes, setTodayMinutes] = useState(0); // ✅ CHANGÉ : quotidien\n  const [sessionStart, setSessionStart] = useState(null);\n\n  // =================== DATES HELPER ===================\n  const getTodayString = () => new Date().toDateString();\n\n  // =================== ERROR HANDLING HELPER ===================\n  const handleStorageError = (error, operation, fallback) => {\n    console.warn(`Storage error in ${operation}:`, error);\n    return fallback;\n  };\n\n  // =================== CHARGEMENT INITIAL ===================\n  useEffect(() => {\n    loadMetrics();\n  }, []);\n\n  const loadMetrics = async () => {\n    try {\n      const today = getTodayString();\n      \n      const [streakData, timeData, lastDateData] = await Promise.all([\n        AsyncStorage.getItem('current_streak'),\n        AsyncStorage.getItem('today_minutes'),\n        AsyncStorage.getItem('last_time_date')\n      ]);\n\n      setCurrentStreak(parseInt(streakData || '0'));\n      \n      // ✅ CORRECTION : Vérifier si c'est aujourd'hui\n      const lastDate = lastDateData;\n      if (lastDate === today) {\n        setTodayMinutes(parseInt(timeData || '0'));\n      } else {\n        // Nouveau jour = reset\n        setTodayMinutes(0);\n        try {\n          await AsyncStorage.setItem('today_minutes', '0');\n          await AsyncStorage.setItem('last_time_date', today);\n        } catch (storageError) {\n          handleStorageError(storageError, 'reset daily metrics', null);\n        }\n      }\n    } catch (error) {\n      handleStorageError(error, 'loadMetrics', null);\n      // Fallback: utiliser les valeurs par défaut\n      setCurrentStreak(0);\n      setTodayMinutes(0);\n    }\n  };\n\n  // =================== SESSION TIMER ===================\n  const startSession = useCallback((exerciseType) => {\n    setSessionStart(Date.now());\n  }, []);\n\n  const endSession = useCallback(async () => {\n    if (!sessionStart) return;\n\n    try {\n      const sessionEnd = Date.now();\n      const sessionMinutes = Math.round((sessionEnd - sessionStart) / 60000);\n\n      if (sessionMinutes > 0) {\n        const newTodayTotal = todayMinutes + sessionMinutes;\n        setTodayMinutes(newTodayTotal);\n        \n        const today = getTodayString();\n        try {\n          await Promise.all([\n            AsyncStorage.setItem('today_minutes', newTodayTotal.toString()),\n            AsyncStorage.setItem('last_time_date', today)\n          ]);\n        } catch (storageError) {\n          handleStorageError(storageError, 'save session data', null);\n          // Fallback: garder les données en mémoire même si la sauvegarde échoue\n        }\n      }\n\n      setSessionStart(null);\n    } catch (error) {\n      handleStorageError(error, 'endSession', null);\n      // Fallback: réinitialiser la session même en cas d'erreur\n      setSessionStart(null);\n    }\n  }, [sessionStart, todayMinutes]);\n\n  // =================== STREAK LOGIC ===================\n  const updateStreak = useCallback(async () => {\n    try {\n      const today = getTodayString();\n      const lastDate = await AsyncStorage.getItem('last_activity_date');\n      \n      if (lastDate !== today) {\n        const yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n        const isYesterday = lastDate === yesterday.toDateString();\n        \n        let newStreak;\n        if (isYesterday) {\n          newStreak = currentStreak + 1;\n        } else {\n          newStreak = 1;\n        }\n        \n        setCurrentStreak(newStreak);\n        try {\n          await Promise.all([\n            AsyncStorage.setItem('current_streak', newStreak.toString()),\n            AsyncStorage.setItem('last_activity_date', today)\n          ]);\n        } catch (storageError) {\n          handleStorageError(storageError, 'save streak data', null);\n          // Fallback: garder le streak en mémoire même si la sauvegarde échoue\n        }\n      }\n    } catch (error) {\n      handleStorageError(error, 'updateStreak', null);\n      // Fallback: ne pas mettre à jour le streak en cas d'erreur\n    }\n  }, [currentStreak]);\n\n  // =================== GETTERS ===================\n  const getStreakTrend = useCallback(() => {\n    if (currentStreak >= 7) return '🏆 Incroyable!';\n    if (currentStreak >= 3) return '💪 En forme!';\n    if (currentStreak >= 1) return '🔥 Continue!';\n    return null;\n  }, [currentStreak]);\n\n  const getFormattedTime = useCallback(() => {\n    if (todayMinutes < 60) {\n      return `${todayMinutes}min`;\n    } else {\n      const hours = Math.floor(todayMinutes / 60);\n      const mins = todayMinutes % 60;\n      \n      // Évite les template literals imbriqués en utilisant des variables intermédiaires\n      const minsPart = mins > 0 ? `${mins}min` : '';\n      return `${hours}h${minsPart}`;\n    }\n  }, [todayMinutes]);\n\n  return {\n    startSession,\n    endSession,\n    updateStreak,\n    \n    currentStreak: currentStreak || 0,\n    todayMinutes: todayMinutes || 0, // ✅ CHANGÉ : quotidien\n    \n    streakTrend: getStreakTrend(),\n    formattedTime: getFormattedTime() || '0min',\n  };\n};\n\nexport default useActivityMetrics;"],"mappings":";;;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAC/B,IAAAC,SAAA,GAA0C,IAAAC,eAAQ,EAAC,CAAC,CAAC;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAA9CK,aAAa,GAAAH,UAAA;IAAEI,gBAAgB,GAAAJ,UAAA;EACtC,IAAAK,UAAA,GAAwC,IAAAN,eAAQ,EAAC,CAAC,CAAC;IAAAO,UAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA;IAA5CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAwC,IAAAV,eAAQ,EAAC,IAAI,CAAC;IAAAW,UAAA,OAAAT,eAAA,CAAAC,OAAA,EAAAO,UAAA;IAA/CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EAGpC,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAA;IAAA,OAAS,IAAIC,IAAI,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;EAAA;EAGtD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAK;IACzDC,OAAO,CAACC,IAAI,CAAC,oBAAoBH,SAAS,GAAG,EAAED,KAAK,CAAC;IACrD,OAAOE,QAAQ;EACjB,CAAC;EAGD,IAAAG,gBAAS,EAAC,YAAM;IACdC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,WAAW;IAAA,IAAAC,IAAA,OAAAC,kBAAA,CAAAvB,OAAA,EAAG,aAAY;MAC9B,IAAI;QACF,IAAMwB,KAAK,GAAGb,cAAc,CAAC,CAAC;QAE9B,IAAAc,kBAAA,SAAmDC,OAAO,CAACC,GAAG,CAAC,CAC7DC,qBAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,EACtCD,qBAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EACrCD,qBAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CACvC,CAAC;UAAAC,mBAAA,OAAA/B,eAAA,CAAAC,OAAA,EAAAyB,kBAAA;UAJKM,UAAU,GAAAD,mBAAA;UAAEE,QAAQ,GAAAF,mBAAA;UAAEG,YAAY,GAAAH,mBAAA;QAMzC5B,gBAAgB,CAACgC,QAAQ,CAACH,UAAU,IAAI,GAAG,CAAC,CAAC;QAG7C,IAAMI,QAAQ,GAAGF,YAAY;QAC7B,IAAIE,QAAQ,KAAKX,KAAK,EAAE;UACtBlB,eAAe,CAAC4B,QAAQ,CAACF,QAAQ,IAAI,GAAG,CAAC,CAAC;QAC5C,CAAC,MAAM;UAEL1B,eAAe,CAAC,CAAC,CAAC;UAClB,IAAI;YACF,MAAMsB,qBAAY,CAACQ,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC;YAChD,MAAMR,qBAAY,CAACQ,OAAO,CAAC,gBAAgB,EAAEZ,KAAK,CAAC;UACrD,CAAC,CAAC,OAAOa,YAAY,EAAE;YACrBvB,kBAAkB,CAACuB,YAAY,EAAE,qBAAqB,EAAE,IAAI,CAAC;UAC/D;QACF;MACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;QACdD,kBAAkB,CAACC,KAAK,EAAE,aAAa,EAAE,IAAI,CAAC;QAE9Cb,gBAAgB,CAAC,CAAC,CAAC;QACnBI,eAAe,CAAC,CAAC,CAAC;MACpB;IACF,CAAC;IAAA,gBAhCKe,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAgB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAgChB;EAGD,IAAMC,YAAY,GAAG,IAAAC,kBAAW,EAAC,UAACC,YAAY,EAAK;IACjDhC,eAAe,CAACE,IAAI,CAAC+B,GAAG,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,UAAU,GAAG,IAAAH,kBAAW,MAAAlB,kBAAA,CAAAvB,OAAA,EAAC,aAAY;IACzC,IAAI,CAACS,YAAY,EAAE;IAEnB,IAAI;MACF,IAAMoC,UAAU,GAAGjC,IAAI,CAAC+B,GAAG,CAAC,CAAC;MAC7B,IAAMG,cAAc,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,UAAU,GAAGpC,YAAY,IAAI,KAAK,CAAC;MAEtE,IAAIqC,cAAc,GAAG,CAAC,EAAE;QACtB,IAAMG,aAAa,GAAG5C,YAAY,GAAGyC,cAAc;QACnDxC,eAAe,CAAC2C,aAAa,CAAC;QAE9B,IAAMzB,KAAK,GAAGb,cAAc,CAAC,CAAC;QAC9B,IAAI;UACF,MAAMe,OAAO,CAACC,GAAG,CAAC,CAChBC,qBAAY,CAACQ,OAAO,CAAC,eAAe,EAAEa,aAAa,CAACC,QAAQ,CAAC,CAAC,CAAC,EAC/DtB,qBAAY,CAACQ,OAAO,CAAC,gBAAgB,EAAEZ,KAAK,CAAC,CAC9C,CAAC;QACJ,CAAC,CAAC,OAAOa,YAAY,EAAE;UACrBvB,kBAAkB,CAACuB,YAAY,EAAE,mBAAmB,EAAE,IAAI,CAAC;QAE7D;MACF;MAEA3B,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdD,kBAAkB,CAACC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC;MAE7CL,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,GAAE,CAACD,YAAY,EAAEJ,YAAY,CAAC,CAAC;EAGhC,IAAM8C,YAAY,GAAG,IAAAV,kBAAW,MAAAlB,kBAAA,CAAAvB,OAAA,EAAC,aAAY;IAC3C,IAAI;MACF,IAAMwB,KAAK,GAAGb,cAAc,CAAC,CAAC;MAC9B,IAAMwB,QAAQ,SAASP,qBAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;MAEjE,IAAIM,QAAQ,KAAKX,KAAK,EAAE;QACtB,IAAM4B,SAAS,GAAG,IAAIxC,IAAI,CAAC,CAAC;QAC5BwC,SAAS,CAACC,OAAO,CAACD,SAAS,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAMC,WAAW,GAAGpB,QAAQ,KAAKiB,SAAS,CAACvC,YAAY,CAAC,CAAC;QAEzD,IAAI2C,SAAS;QACb,IAAID,WAAW,EAAE;UACfC,SAAS,GAAGvD,aAAa,GAAG,CAAC;QAC/B,CAAC,MAAM;UACLuD,SAAS,GAAG,CAAC;QACf;QAEAtD,gBAAgB,CAACsD,SAAS,CAAC;QAC3B,IAAI;UACF,MAAM9B,OAAO,CAACC,GAAG,CAAC,CAChBC,qBAAY,CAACQ,OAAO,CAAC,gBAAgB,EAAEoB,SAAS,CAACN,QAAQ,CAAC,CAAC,CAAC,EAC5DtB,qBAAY,CAACQ,OAAO,CAAC,oBAAoB,EAAEZ,KAAK,CAAC,CAClD,CAAC;QACJ,CAAC,CAAC,OAAOa,YAAY,EAAE;UACrBvB,kBAAkB,CAACuB,YAAY,EAAE,kBAAkB,EAAE,IAAI,CAAC;QAE5D;MACF;IACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdD,kBAAkB,CAACC,KAAK,EAAE,cAAc,EAAE,IAAI,CAAC;IAEjD;EACF,CAAC,GAAE,CAACd,aAAa,CAAC,CAAC;EAGnB,IAAMwD,cAAc,GAAG,IAAAhB,kBAAW,EAAC,YAAM;IACvC,IAAIxC,aAAa,IAAI,CAAC,EAAE,OAAO,gBAAgB;IAC/C,IAAIA,aAAa,IAAI,CAAC,EAAE,OAAO,cAAc;IAC7C,IAAIA,aAAa,IAAI,CAAC,EAAE,OAAO,cAAc;IAC7C,OAAO,IAAI;EACb,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,IAAMyD,gBAAgB,GAAG,IAAAjB,kBAAW,EAAC,YAAM;IACzC,IAAIpC,YAAY,GAAG,EAAE,EAAE;MACrB,OAAO,GAAGA,YAAY,KAAK;IAC7B,CAAC,MAAM;MACL,IAAMsD,KAAK,GAAGZ,IAAI,CAACa,KAAK,CAACvD,YAAY,GAAG,EAAE,CAAC;MAC3C,IAAMwD,IAAI,GAAGxD,YAAY,GAAG,EAAE;MAG9B,IAAMyD,QAAQ,GAAGD,IAAI,GAAG,CAAC,GAAG,GAAGA,IAAI,KAAK,GAAG,EAAE;MAC7C,OAAO,GAAGF,KAAK,IAAIG,QAAQ,EAAE;IAC/B;EACF,CAAC,EAAE,CAACzD,YAAY,CAAC,CAAC;EAElB,OAAO;IACLmC,YAAY,EAAZA,YAAY;IACZI,UAAU,EAAVA,UAAU;IACVO,YAAY,EAAZA,YAAY;IAEZlD,aAAa,EAAEA,aAAa,IAAI,CAAC;IACjCI,YAAY,EAAEA,YAAY,IAAI,CAAC;IAE/B0D,WAAW,EAAEN,cAAc,CAAC,CAAC;IAC7BO,aAAa,EAAEN,gBAAgB,CAAC,CAAC,IAAI;EACvC,CAAC;AACH,CAAC;AAAC,IAAAO,QAAA,GAAAC,OAAA,CAAAlE,OAAA,GAEaL,kBAAkB","ignoreList":[]}