{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ExerciseCard","_jsxRuntime","describe","baseProps","title","description","icon","progress","onPress","jest","fn","it","_render","render","jsx","default","Object","assign","getByText","expect","toBeTruthy","_render2","getByTestId","progressFill","props","style","toEqual","arrayContaining","objectContaining","width","_render3","isNew","_render4","queryByText","toBeNull","onPressMock","_render5","fireEvent","press","toHaveBeenCalled","_render6"],"sources":["ExerciseCard.test.js"],"sourcesContent":["// __tests__/components/exercise-common/ExerciseCard.test.js\r\nimport React from \"react\";\r\nimport { render, fireEvent } from \"@testing-library/react-native\";\r\nimport ExerciseCard from \"../../../src/components/exercise-common/ExerciseCard\";\r\n\r\ndescribe(\"ExerciseCard\", () => {\r\n  const baseProps = {\r\n    title: \"Titre de l'exercice\",\r\n    description: \"Description de l'exercice\",\r\n    icon: \"ðŸ“š\",\r\n    progress: 0,\r\n    onPress: jest.fn(),\r\n  };\r\n\r\n  it(\"renders title, description and icon correctly\", () => {\r\n    const { getByText } = render(<ExerciseCard {...baseProps} />);\r\n    expect(getByText(baseProps.title)).toBeTruthy();\r\n    expect(getByText(baseProps.description)).toBeTruthy();\r\n    expect(getByText(baseProps.icon)).toBeTruthy();\r\n  });\r\n\r\n  it(\"renders progress bar with correct width if progress > 0\", () => {\r\n    const progress = 45;\r\n    const { getByText, getByTestId } = render(\r\n      <ExerciseCard {...baseProps} progress={progress} />\r\n    );\r\n\r\n    // VÃ©rifie que le texte de progression est visible\r\n    expect(getByText(`${progress}%`)).toBeTruthy();\r\n\r\n    // On doit ajouter un testID dans ExerciseCard sur la View progressFill pour cette assertion\r\n    const progressFill = getByTestId(\"progress-fill\");\r\n    expect(progressFill.props.style).toEqual(\r\n      expect.arrayContaining([\r\n        expect.objectContaining({ width: `${progress}%` }),\r\n      ])\r\n    );\r\n  });\r\n\r\n  it(\"renders 'Nouveau' badge if isNew and progress is 0\", () => {\r\n    const { getByText } = render(\r\n      <ExerciseCard {...baseProps} progress={0} isNew={true} />\r\n    );\r\n    expect(getByText(\"Nouveau\")).toBeTruthy();\r\n  });\r\n\r\n  it(\"does not render progress or badge if progress = 0 and isNew = false\", () => {\r\n    const { queryByText } = render(\r\n      <ExerciseCard {...baseProps} progress={0} isNew={false} />\r\n    );\r\n    expect(queryByText(\"Nouveau\")).toBeNull();\r\n    expect(queryByText(\"%\")).toBeNull();\r\n  });\r\n\r\n  it(\"calls onPress when card is pressed\", () => {\r\n    const onPressMock = jest.fn();\r\n    const { getByText } = render(\r\n      <ExerciseCard {...baseProps} onPress={onPressMock} />\r\n    );\r\n    fireEvent.press(getByText(baseProps.title));\r\n    expect(onPressMock).toHaveBeenCalled();\r\n  });\r\n\r\n  it(\"calls onPress when 'Commencer' button is pressed\", () => {\r\n    const onPressMock = jest.fn();\r\n    const { getByText } = render(\r\n      <ExerciseCard {...baseProps} onPress={onPressMock} />\r\n    );\r\n    fireEvent.press(getByText(\"Commencer\"));\r\n    expect(onPressMock).toHaveBeenCalled();\r\n  });\r\n});\r\n"],"mappings":"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","ignoreList":[]}