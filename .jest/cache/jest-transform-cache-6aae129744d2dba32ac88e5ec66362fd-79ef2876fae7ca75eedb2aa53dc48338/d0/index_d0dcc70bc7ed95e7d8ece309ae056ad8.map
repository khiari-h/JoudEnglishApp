{"version":3,"names":["useMemo","ProgressCard","calculateTotalScenarios","calculateCompletedScenarios","calculateTotalSteps","calculateCompletedSteps","jsx","_jsx","cov_2phkqubtxo","s","ConversationProgress","_ref","_ref$levelColor","levelColor","b","_ref$conversationData","conversationData","_ref$completedScenari","completedScenarios","_ref$conversationHist","conversationHistory","_ref$expanded","expanded","onToggleExpand","onScenarioPress","f","statsData","totalScenarios","completedScenariosCount","totalStepsCount","completedStepsCount","completionProgress","Math","round","scenarioProgressData","map","scenario","index","_conversationHistory$","_scenario$steps","_scenario$steps2","_conversationHistory$2","title","completedSteps","id","length","totalSteps","steps","progress","formattedScenarioData","completed","total","subtitle","unit","expandable","categoryData","onCategoryPress"],"sources":["index.js"],"sourcesContent":["// ConversationProgress/index.js - VERSION CORRIGÃ‰E AVEC useMemo\r\n\r\nimport { useMemo } from \"react\";\r\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\r\nimport {\r\n  calculateTotalScenarios,\r\n  calculateCompletedScenarios,\r\n  calculateTotalSteps,\r\n  calculateCompletedSteps,\r\n} from \"../../../../utils/conversation/conversationStats\";\r\n\r\n/**\r\n * ðŸ“Š ConversationProgress - Version corrigÃ©e avec mÃ©morisation\r\n * âœ… Ã‰vite les boucles infinies avec useMemo\r\n * âœ… Performance optimisÃ©e\r\n * âœ… DÃ©tecte automatiquement la structure des donnÃ©es\r\n */\r\nconst ConversationProgress = ({\r\n  levelColor = \"#5E60CE\",\r\n  conversationData = [],\r\n  completedScenarios = {},\r\n  conversationHistory = {},\r\n  expanded = false,\r\n  onToggleExpand,\r\n  onScenarioPress,\r\n}) => {\r\n  \r\n  // âœ… MÃ‰MORISER les statistiques calculÃ©es\r\n  const statsData = useMemo(() => {\r\n    const totalScenarios = calculateTotalScenarios(conversationData);\r\n    const completedScenariosCount = calculateCompletedScenarios(completedScenarios);\r\n    const totalStepsCount = calculateTotalSteps(conversationData);\r\n    const completedStepsCount = calculateCompletedSteps(conversationHistory);\r\n    \r\n    return {\r\n      totalScenarios,\r\n      completedScenariosCount,\r\n      totalStepsCount,\r\n      completedStepsCount,\r\n      completionProgress: totalStepsCount > 0 ? Math.round((completedStepsCount / totalStepsCount) * 100) : 0,\r\n      scenarioProgressData: conversationData.map((scenario, index) => ({\r\n        title: scenario.title || `ScÃ©nario ${index + 1}`,\r\n        completedSteps: conversationHistory[scenario.id]?.length || 0,\r\n        totalSteps: scenario.steps?.length || 1,\r\n        progress: scenario.steps?.length > 0 \r\n          ? Math.round(((conversationHistory[scenario.id]?.length || 0) / scenario.steps.length) * 100)\r\n          : 0\r\n      }))\r\n    };\r\n  }, [conversationData, completedScenarios, conversationHistory]);\r\n\r\n  // âœ… MÃ‰MORISER la transformation des donnÃ©es\r\n  const formattedScenarioData = useMemo(() => {\r\n    return statsData.scenarioProgressData.map((scenario) => ({\r\n      title: scenario.title,\r\n      completed: scenario.completedSteps,\r\n      total: scenario.totalSteps,\r\n      progress: scenario.progress,\r\n    }));\r\n  }, [statsData.scenarioProgressData]);\r\n\r\n  return (\r\n    <ProgressCard\r\n      title=\"Progression\"\r\n      subtitle={`${statsData.completedScenariosCount}/${statsData.totalScenarios} scÃ©narios â€¢ ${statsData.completedStepsCount}/${statsData.totalStepsCount} Ã©tapes`}\r\n      progress={statsData.completionProgress}\r\n      completed={statsData.completedStepsCount}\r\n      total={statsData.totalStepsCount}\r\n      unit=\"Ã©tapes\"\r\n      levelColor={levelColor}\r\n      expandable\r\n      expanded={expanded}\r\n      onToggleExpand={onToggleExpand}\r\n      categoryData={formattedScenarioData}\r\n      onCategoryPress={onScenarioPress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ConversationProgress;"],"mappingswCAAwC;AACjE,SACEC,uBAAuB,EACvBC,2BAA2B,EAC3BC,mBAAmB,EACnBC,uBAAuB,QAClB,kDAAkD;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAAC,cAAA,GAAAC,CAAA;AAQ1D,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,IAAA,EAQpB;EAAA,IAAAC,eAAA,GAAAD,IAAA,CAPJE,UAAU;IAAVA,UAAU,GAAAD,eAAA,eAAAJ,cAAA,GAAAM,CAAA,UAAG,SAAS,IAAAF,eAAA;IAAAG,qBAAA,GAAAJ,IAAA,CACtBK,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,eAAAP,cAAA,GAAAM,CAAA,UAAG,EAAE,IAAAC,qBAAA;IAAAE,qBAAA,GAAAN,IAAA,CACrBO,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,eAAAT,cAAA,GAAAM,CAAA,UAAG,CAAC,CAAC,IAAAG,qBAAA;IAAAE,qBAAA,GAAAR,IAAA,CACvBS,mBAAmB;IAAnBA,mBAAmB,GAAAD,qBAAA,eAAAX,cAAA,GAAAM,CAAA,UAAG,CAAC,CAAC,IAAAK,qBAAA;IAAAE,aAAA,GAAAV,IAAA,CACxBW,QAAQ;IAARA,QAAQ,GAAAD,aAAA,eAAAb,cAAA,GAAAM,CAAA,UAAG,KAAK,IAAAO,aAAA;IAChBE,cAAc,GAAAZ,IAAA,CAAdY,cAAc;IACdC,eAAe,GAAAb,IAAA,CAAfa,eAAe;EAAAhB,cAAA,GAAAiB,CAAA;EAIf,IAAMC,SAAS,IAAAlB,cAAA,GAAAC,CAAA,OAAGT,OAAO,CAAC,YAAM;IAAAQ,cAAA,GAAAiB,CAAA;IAC9B,IAAME,cAAc,IAAAnB,cAAA,GAAAC,CAAA,OAAGP,uBAAuB,CAACc,gBAAgB,CAAC;IAChE,IAAMY,uBAAuB,IAAApB,cAAA,GAAAC,CAAA,OAAGN,2BAA2B,CAACe,kBAAkB,CAAC;IAC/E,IAAMW,eAAe,IAAArB,cAAA,GAAAC,CAAA,OAAGL,mBAAmB,CAACY,gBAAgB,CAAC;IAC7D,IAAMc,mBAAmB,IAAAtB,cAAA,GAAAC,CAAA,OAAGJ,uBAAuB,CAACe,mBAAmB,CAAC;IAACZ,cAAA,GAAAC,CAAA;IAEzE,OAAO;MACLkB,cAAc,EAAdA,cAAc;MACdC,uBAAuB,EAAvBA,uBAAuB;MACvBC,eAAe,EAAfA,eAAe;MACfC,mBAAmB,EAAnBA,mBAAmB;MACnBC,kBAAkB,EAAEF,eAAe,GAAG,CAAC,IAAArB,cAAA,GAAAM,CAAA,UAAGkB,IAAI,CAACC,KAAK,CAAEH,mBAAmB,GAAGD,eAAe,GAAI,GAAG,CAAC,KAAArB,cAAA,GAAAM,CAAA,UAAG,CAAC;MACvGoB,oBAAoB,EAAElB,gBAAgB,CAACmB,GAAG,CAAC,UAACC,QAAQ,EAAEC,KAAK,EAAM;QAAA,IAAAC,qBAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,sBAAA;QAAAjC,cAAA,GAAAiB,CAAA;QAAAjB,cAAA,GAAAC,CAAA;QAAA;UAC/DiC,KAAK,EAAE,CAAAlC,cAAA,GAAAM,CAAA,UAAAsB,QAAQ,CAACM,KAAK,MAAAlC,cAAA,GAAAM,CAAA,UAAI,YAAYuB,KAAK,GAAG,CAAC,EAAE;UAChDM,cAAc,EAAE,CAAAnC,cAAA,GAAAM,CAAA,WAAAwB,qBAAA,GAAAlB,mBAAmB,CAACgB,QAAQ,CAACQ,EAAE,CAAC,qBAAhCN,qBAAA,CAAkCO,MAAM,MAAArC,cAAA,GAAAM,CAAA,UAAI,CAAC;UAC7DgC,UAAU,EAAE,CAAAtC,cAAA,GAAAM,CAAA,WAAAyB,eAAA,GAAAH,QAAQ,CAACW,KAAK,qBAAdR,eAAA,CAAgBM,MAAM,MAAArC,cAAA,GAAAM,CAAA,UAAI,CAAC;UACvCkC,QAAQ,EAAE,EAAAR,gBAAA,GAAAJ,QAAQ,CAACW,KAAK,qBAAdP,gBAAA,CAAgBK,MAAM,IAAG,CAAC,IAAArC,cAAA,GAAAM,CAAA,UAChCkB,IAAI,CAACC,KAAK,CAAE,CAAC,CAAAzB,cAAA,GAAAM,CAAA,YAAA2B,sBAAA,GAAArB,mBAAmB,CAACgB,QAAQ,CAACQ,EAAE,CAAC,qBAAhCH,sBAAA,CAAkCI,MAAM,MAAArC,cAAA,GAAAM,CAAA,WAAI,CAAC,KAAIsB,QAAQ,CAACW,KAAK,CAACF,MAAM,GAAI,GAAG,CAAC,KAAArC,cAAA,GAAAM,CAAA,UAC3F,CAAC;QACP,CAAC;MAAD,CAAE;IACJ,CAAC;EACH,CAAC,EAAE,CAACE,gBAAgB,EAAEE,kBAAkB,EAAEE,mBAAmB,CAAC,CAAC;EAG/D,IAAM6B,qBAAqB,IAAAzC,cAAA,GAAAC,CAAA,OAAGT,OAAO,CAAC,YAAM;IAAAQ,cAAA,GAAAiB,CAAA;IAAAjB,cAAA,GAAAC,CAAA;IAC1C,OAAOiB,SAAS,CAACQ,oBAAoB,CAACC,GAAG,CAAC,UAACC,QAAQ,EAAM;MAAA5B,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAC,CAAA;MAAA;QACvDiC,KAAK,EAAEN,QAAQ,CAACM,KAAK;QACrBQ,SAAS,EAAEd,QAAQ,CAACO,cAAc;QAClCQ,KAAK,EAAEf,QAAQ,CAACU,UAAU;QAC1BE,QAAQ,EAAEZ,QAAQ,CAACY;MACrB,CAAC;IAAD,CAAE,CAAC;EACL,CAAC,EAAE,CAACtB,SAAS,CAACQ,oBAAoB,CAAC,CAAC;EAAC1B,cAAA,GAAAC,CAAA;EAErC,OACEF,IAAA,CAACN,YAAY;IACXyC,KAAK,EAAC,aAAa;IACnBU,QAAQ,EAAE,GAAG1B,SAAS,CAACE,uBAAuB,IAAIF,SAAS,CAACC,cAAc,gBAAgBD,SAAS,CAACI,mBAAmB,IAAIJ,SAAS,CAACG,eAAe,SAAU;IAC9JmB,QAAQ,EAAEtB,SAAS,CAACK,kBAAmB;IACvCmB,SAAS,EAAExB,SAAS,CAACI,mBAAoB;IACzCqB,KAAK,EAAEzB,SAAS,CAACG,eAAgB;IACjCwB,IAAI,EAAC,WAAQ;IACbxC,UAAU,EAAEA,UAAW;IACvByC,UAAU;IACVhC,QAAQ,EAAEA,QAAS;IACnBC,cAAc,EAAEA,cAAe;IAC/BgC,YAAY,EAAEN,qBAAsB;IACpCO,eAAe,EAAEhC;EAAgB,CAClC,CAAC;AAEN,CAAC;AAED,eAAed,oBAAoB","ignoreList":[]}