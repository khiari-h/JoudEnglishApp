{"version":3,"names":["_react","require","_reactNative","_native","_expoRouter","_propTypes","_interopRequireDefault","_Container","_interopRequireWildcard","_WordGamesHeader","_WordGamesProgress","_WordGamesCard","_WordGamesNavigation","_WordGamesResults","_useWordGames2","_useLastActivity2","_wordGamesDataHelper","_style","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","WordGamesExercise","_ref","route","navigation","useNavigation","_ref2","params","_ref2$level","level","styles","createStyles","_useState","useState","_useState2","_slicedToArray2","progressExpanded","setProgressExpanded","_useLastActivity","useLastActivity","saveActivity","levelColor","getLevelColor","wordGamesData","useMemo","getWordGamesData","_useWordGames","useWordGames","currentGameIndex","currentGame","selectedItems","matchedItems","showFeedback","isCorrect","showResults","score","showPairFeedback","pairFeedbackMessage","canShowCheckButton","loaded","games","totalGames","completedGames","gameResults","shuffledOptions","handleSelectItem","checkAnswer","handleNext","handlePrevious","resetGames","fadeAnim","bounceAnim","canGoToPrevious","isLastGame","stats","reduce","sum","result","totalMaxScore","maxScore","completedGamesCount","keys","length","percentage","Math","round","display","activityMetadata","word","totalWords","gameType","type","gameTitle","title","isGame","handleSaveActivity","useCallback","metadata","useEffect","console","log","gamesLength","handleBackPress","canGoBack","goBack","router","back","handleContinue","jsxs","safeArea","safeAreaEdges","CONTAINER_SAFE_EDGES","ALL","backgroundColor","statusBarStyle","children","jsx","onBackPress","View","style","emptyContainer","ActivityIndicator","testID","size","color","finalScore","onPlayAgain","onContinue","withPadding","expanded","onToggleExpand","onGameTypePress","index","onSelectItem","canGoPrevious","onCheckAnswer","onNext","onPrevious","_default","exports","propTypes","PropTypes","shape","string","isRequired"],"sources":["index.js"],"sourcesContent":["// src/screens/exercises/word-games/index.js - VERSION CORRIGÉE AVEC ProgressCard\r\n\r\nimport { useMemo, useEffect, useCallback, useState } from \"react\";\r\nimport { View, ActivityIndicator } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { router } from \"expo-router\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// Layout\r\nimport Container, { CONTAINER_SAFE_EDGES } from \"../../../components/layout/Container\";\r\n\r\n// Components\r\nimport WordGamesHeader from \"./WordGamesHeader\";\r\nimport WordGamesProgress from \"./WordGamesProgress\";\r\nimport WordGamesCard from \"./WordGamesCard\";\r\nimport WordGamesNavigation from \"./WordGamesNavigation\";\r\nimport WordGamesResults from \"./WordGamesResults\";\r\n\r\n// Hook & Utils\r\nimport useWordGames from \"./hooks/useWordGames\";\r\nimport useLastActivity from \"../../../hooks/useLastActivity\";\r\nimport { getWordGamesData, getLevelColor } from \"../../../utils/wordGames/wordGamesDataHelper\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * 🎯 WordGamesExercise - VERSION CORRIGÉE AVEC ProgressCard\r\n */\r\nconst WordGamesExercise = ({ route }) => {\r\n  const navigation = useNavigation();\r\n  const { level = \"A1\" } = route?.params || {};\r\n  const styles = createStyles();\r\n\r\n  // ✅ AJOUTÉ : État pour l'expansion de la barre de progression\r\n  const [progressExpanded, setProgressExpanded] = useState(false);\r\n\r\n  // Hook pour sauvegarder l'activité\r\n  const { saveActivity } = useLastActivity();\r\n\r\n  // Data\r\n  const levelColor = getLevelColor(level);\r\n  const wordGamesData = useMemo(() => getWordGamesData(level), [level]);\r\n\r\n  // Hook unifié\r\n  const {\r\n    // State\r\n    currentGameIndex,\r\n    currentGame,\r\n    selectedItems,\r\n    matchedItems,\r\n    showFeedback,\r\n    isCorrect,\r\n    showResults,\r\n    score,\r\n    showPairFeedback,\r\n    pairFeedbackMessage,\r\n    canShowCheckButton,\r\n    loaded,\r\n    \r\n    // Data\r\n    games,\r\n    totalGames,\r\n    completedGames,\r\n    gameResults,\r\n    shuffledOptions,\r\n    \r\n    // Actions\r\n    handleSelectItem,\r\n    checkAnswer,\r\n    handleNext,\r\n    handlePrevious,\r\n    resetGames,\r\n    \r\n    // Animations\r\n    fadeAnim,\r\n    bounceAnim,\r\n  } = useWordGames(wordGamesData, level);\r\n\r\n  // ✅ CORRIGÉ : Calculer les valeurs manquantes\r\n  const canGoToPrevious = currentGameIndex > 0;\r\n  const isLastGame = currentGameIndex === totalGames - 1;\r\n  \r\n  const stats = {\r\n    score: gameResults.reduce((sum, result) => sum + (result?.score || 0), 0),\r\n    totalMaxScore: gameResults.reduce((sum, result) => sum + (result?.maxScore || 0), 0),\r\n    completedGamesCount: Object.keys(completedGames).length,\r\n    percentage: totalGames > 0 ? Math.round((Object.keys(completedGames).length / totalGames) * 100) : 0,\r\n  };\r\n\r\n  const display = {\r\n    currentGameIndex: currentGameIndex + 1,\r\n    totalGames,\r\n  };\r\n\r\n  // ✅ CORRIGÉ : Mémoriser les métadonnées compatibles avec le dashboard\r\n  const activityMetadata = useMemo(() => ({\r\n    word: currentGameIndex,        // ✅ Position actuelle (0-based)\r\n    totalWords: totalGames,        // ✅ Total des jeux\r\n    gameType: currentGame?.type || \"matching\",\r\n    gameTitle: currentGame?.title || `Jeu ${currentGameIndex + 1}`,\r\n    score: stats?.score || 0,\r\n    // ✅ AJOUTÉ : Indicateur que c'est un jeu, pas un mot\r\n    isGame: true,\r\n    // ✅ AJOUTÉ : Nombre de jeux complétés\r\n    completedGames: Object.keys(completedGames).length\r\n  }), [currentGameIndex, totalGames, currentGame?.type, currentGame?.title, stats?.score, completedGames]);\r\n\r\n  // ✅ CORRIGÉ : Callback mémorisé pour saveActivity\r\n  const handleSaveActivity = useCallback(() => {\r\n    if (loaded && games.length > 0 && currentGame && !showResults) {\r\n      saveActivity({\r\n        title: `Jeux de mots - ${currentGame.type === 'matching' ? 'Association' : 'Catégorisation'}`, // ✅ CORRIGÉ : Titre plus descriptif\r\n        level,\r\n        type: \"wordGames\",\r\n        metadata: activityMetadata\r\n      });\r\n    }\r\n  }, [loaded, games.length, currentGame, showResults, level, saveActivity, activityMetadata]);\r\n\r\n  // ✅ CORRIGÉ : useEffect optimisé\r\n  useEffect(() => {\r\n    handleSaveActivity();\r\n  }, [handleSaveActivity]);\r\n\r\n  // ✅ AJOUTÉ : Debug pour voir pourquoi le composant affiche un écran blanc\r\n  console.log('🔍 DEBUG WordGamesExercise:', {\r\n    loaded,\r\n    currentGame: !!currentGame,\r\n    gamesLength: games.length,\r\n    currentGameIndex,\r\n    totalGames,\r\n    showResults,\r\n    wordGamesData: !!wordGamesData\r\n  });\r\n\r\n  // ✅ CORRIGÉ : Navigation de retour\r\n  const handleBackPress = useCallback(() => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      router.back();\r\n    }\r\n  }, [navigation]);\r\n\r\n  // ✅ CORRIGÉ : Gestion de la continuation\r\n  const handleContinue = useCallback(() => {\r\n    if (navigation.canGoBack()) {\r\n      navigation.goBack();\r\n    } else {\r\n      router.back();\r\n    }\r\n  }, [navigation]);\r\n\r\n  // Loading state\r\n  if (!loaded || !wordGamesData || games.length === 0) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <WordGamesHeader\r\n          level={level}\r\n          onBackPress={handleBackPress}\r\n        />\r\n        <View style={styles.emptyContainer}>\r\n          <ActivityIndicator testID=\"activity-indicator\" size=\"large\" color={levelColor} />\r\n        </View>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // Results state\r\n  if (showResults) {\r\n    return (\r\n      <Container\r\n        safeArea\r\n        safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n        backgroundColor=\"#f8fafc\"\r\n        statusBarStyle=\"dark-content\"\r\n      >\r\n        <WordGamesResults\r\n          games={games}\r\n          gameResults={gameResults}\r\n          finalScore={stats}\r\n          levelColor={levelColor}\r\n          onPlayAgain={resetGames}\r\n          onContinue={handleContinue}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      safeArea\r\n      safeAreaEdges={CONTAINER_SAFE_EDGES.ALL}\r\n      backgroundColor=\"#f8fafc\"\r\n      statusBarStyle=\"dark-content\"\r\n      withPadding={false}\r\n    >\r\n      {/* Header */}\r\n      <WordGamesHeader\r\n        level={level}\r\n        onBackPress={handleBackPress}\r\n      />\r\n\r\n      {/* Progress */}\r\n      <WordGamesProgress\r\n        currentGame={display.currentGameIndex}\r\n        totalGames={totalGames}\r\n        completedGames={completedGames}\r\n        levelColor={levelColor}\r\n        expanded={progressExpanded}\r\n        onToggleExpand={() => setProgressExpanded(!progressExpanded)}\r\n        onGameTypePress={(index) => {\r\n          // ✅ AJOUTÉ : Gestion du clic sur un type de jeu\r\n          console.log('Game type clicked:', index);\r\n        }}\r\n        // ✅ AJOUTÉ : Données des jeux pour calculer la progression par type\r\n        games={games}\r\n      />\r\n\r\n      {/* Game Card */}\r\n      <WordGamesCard\r\n        currentGame={currentGame}\r\n        selectedItems={selectedItems}\r\n        matchedItems={matchedItems}\r\n        shuffledOptions={shuffledOptions}\r\n        showFeedback={showFeedback}\r\n        isCorrect={isCorrect}\r\n        levelColor={levelColor}\r\n        fadeAnim={fadeAnim}\r\n        bounceAnim={bounceAnim}\r\n        onSelectItem={handleSelectItem}\r\n        showPairFeedback={showPairFeedback}\r\n        pairFeedbackMessage={pairFeedbackMessage}\r\n      />\r\n\r\n      {/* Navigation */}\r\n      <WordGamesNavigation\r\n        currentGame={currentGame}\r\n        showFeedback={showFeedback}\r\n        selectedItems={selectedItems}\r\n        isLastGame={isLastGame}\r\n        canGoPrevious={canGoToPrevious}\r\n        levelColor={levelColor}\r\n        onCheckAnswer={checkAnswer}\r\n        onNext={handleNext}\r\n        onPrevious={handlePrevious}\r\n        canShowCheckButton={canShowCheckButton}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WordGamesExercise;\r\n\r\n// ✅ Ajout de la validation des props\r\nWordGamesExercise.propTypes = {\r\n  route: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      level: PropTypes.string,\r\n    }),\r\n  }).isRequired,\r\n};"],"mappings":"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","ignoreList":[]}