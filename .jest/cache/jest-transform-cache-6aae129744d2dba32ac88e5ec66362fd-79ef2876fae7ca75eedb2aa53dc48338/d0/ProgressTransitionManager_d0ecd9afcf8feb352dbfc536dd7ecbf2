202a90caae7ac842c5371581861de6a8
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProgressTransitionManager = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _threads = require("../../threads");
var _core = require("../../core");
var _reactNative = require("react-native");
var _PlatformChecker = require("../../PlatformChecker");
var _errors = require("../../errors");
var IS_ANDROID = _reactNative.Platform.OS === 'android';
var _worklet_2879465585001_init_data = {
  code: "function ProgressTransitionManagerTs1(){const{viewTag,progressAnimation}=this.__closure;global.ProgressTransitionRegister.addProgressAnimation(viewTag,progressAnimation);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\sharedTransitions\\ProgressTransitionManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"ProgressTransitionManagerTs1\",\"viewTag\",\"progressAnimation\",\"__closure\",\"global\",\"ProgressTransitionRegister\",\"addProgressAnimation\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts\"],\"mappings\":\"AAmCuB,SAAAA,4BAAMA,CAAA,QAAAC,OAAA,CAAAC,iBAAA,OAAAC,SAAA,CAEvBC,MAAM,CAACC,0BAA0B,CAACC,oBAAoB,CACpDL,OAAO,CACPC,iBACF,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_12738720887629_init_data = {
  code: "function ProgressTransitionManagerTs2(){const{viewTag,isUnmounting}=this.__closure;global.ProgressTransitionRegister.removeProgressAnimation(viewTag,isUnmounting);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\sharedTransitions\\ProgressTransitionManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"ProgressTransitionManagerTs2\",\"viewTag\",\"isUnmounting\",\"__closure\",\"global\",\"ProgressTransitionRegister\",\"removeProgressAnimation\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts\"],\"mappings\":\"AAgDuB,SAAAA,4BAAMA,CAAA,QAAAC,OAAA,CAAAC,YAAA,OAAAC,SAAA,CAEvBC,MAAM,CAACC,0BAA0B,CAACC,uBAAuB,CACvDL,OAAO,CACPC,YACF,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_14194501671186_init_data = {
  code: "function ProgressTransitionManagerTs3(event){const{lastProgressValue}=this.__closure;const progress=event.progress;if(progress===lastProgressValue){return;}lastProgressValue=progress;global.ProgressTransitionRegister.frame(progress);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\sharedTransitions\\ProgressTransitionManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"ProgressTransitionManagerTs3\",\"event\",\"lastProgressValue\",\"__closure\",\"progress\",\"global\",\"ProgressTransitionRegister\",\"frame\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts\"],\"mappings\":\"AAiEQ,QAAC,CAAAA,4BAAmCA,CAAAC,KAAA,QAAAC,iBAAA,OAAAC,SAAA,CAElC,KAAM,CAAAC,QAAQ,CAAGH,KAAK,CAACG,QAAQ,CAC/B,GAAIA,QAAQ,GAAKF,iBAAiB,CAAE,CAIlC,OACF,CACAA,iBAAiB,CAAGE,QAAQ,CAC5BC,MAAM,CAACC,0BAA0B,CAACC,KAAK,CAACH,QAAQ,CAAC,CACnD\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_9903126827131_init_data = {
  code: "function ProgressTransitionManagerTs4(){global.ProgressTransitionRegister.onTransitionEnd();}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\sharedTransitions\\ProgressTransitionManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"ProgressTransitionManagerTs4\",\"global\",\"ProgressTransitionRegister\",\"onTransitionEnd\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts\"],\"mappings\":\"AA+EmD,SAAAA,4BAAMA,CAAA,EAEjDC,MAAM,CAACC,0BAA0B,CAACC,eAAe,CAAC,CAAC,CACrD\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_7715890060317_init_data = {
  code: "function ProgressTransitionManagerTs5(){global.ProgressTransitionRegister.onAndroidFinishTransitioning();}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\sharedTransitions\\ProgressTransitionManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"ProgressTransitionManagerTs5\",\"global\",\"ProgressTransitionRegister\",\"onAndroidFinishTransitioning\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts\"],\"mappings\":\"AAuFwD,SAAAA,4BAAMA,CAAA,EAEpDC,MAAM,CAACC,0BAA0B,CAACC,4BAA4B,CAAC,CAAC,CAClE\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_2426433133263_init_data = {
  code: "function ProgressTransitionManagerTs6(){global.ProgressTransitionRegister.onTransitionEnd(true);}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\sharedTransitions\\ProgressTransitionManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"ProgressTransitionManagerTs6\",\"global\",\"ProgressTransitionRegister\",\"onTransitionEnd\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts\"],\"mappings\":\"AA6FwD,SAAAA,4BAAMA,CAAA,EAEpDC,MAAM,CAACC,0BAA0B,CAACC,eAAe,CAAC,IAAI,CAAC,CACzD\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var _worklet_5819399722744_init_data = {
  code: "function ProgressTransitionManagerTs7(){global.ProgressTransitionRegister.onTransitionEnd();}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\sharedTransitions\\ProgressTransitionManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"ProgressTransitionManagerTs7\",\"global\",\"ProgressTransitionRegister\",\"onTransitionEnd\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts\"],\"mappings\":\"AAiG2D,SAAAA,4BAAMA,CAAA,EAEvDC,MAAM,CAACC,0BAA0B,CAACC,eAAe,CAAC,CAAC,CACrD\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var ProgressTransitionManager = exports.ProgressTransitionManager = function () {
  function ProgressTransitionManager() {
    (0, _classCallCheck2.default)(this, ProgressTransitionManager);
    this._sharedElementCount = 0;
    this._eventHandler = {
      isRegistered: false,
      onTransitionProgress: -1,
      onAppear: -1,
      onDisappear: -1,
      onSwipeDismiss: -1
    };
  }
  return (0, _createClass2.default)(ProgressTransitionManager, [{
    key: "addProgressAnimation",
    value: function addProgressAnimation(viewTag, progressAnimation) {
      (0, _threads.runOnUIImmediately)(function () {
        var _e = [new global.Error(), -3, -27];
        var ProgressTransitionManagerTs1 = function ProgressTransitionManagerTs1() {
          global.ProgressTransitionRegister.addProgressAnimation(viewTag, progressAnimation);
        };
        ProgressTransitionManagerTs1.__closure = {
          viewTag: viewTag,
          progressAnimation: progressAnimation
        };
        ProgressTransitionManagerTs1.__workletHash = 2879465585001;
        ProgressTransitionManagerTs1.__initData = _worklet_2879465585001_init_data;
        ProgressTransitionManagerTs1.__stackDetails = _e;
        return ProgressTransitionManagerTs1;
      }())();
      this.registerEventHandlers();
    }
  }, {
    key: "removeProgressAnimation",
    value: function removeProgressAnimation(viewTag) {
      var isUnmounting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unregisterEventHandlers();
      (0, _threads.runOnUIImmediately)(function () {
        var _e = [new global.Error(), -3, -27];
        var ProgressTransitionManagerTs2 = function ProgressTransitionManagerTs2() {
          global.ProgressTransitionRegister.removeProgressAnimation(viewTag, isUnmounting);
        };
        ProgressTransitionManagerTs2.__closure = {
          viewTag: viewTag,
          isUnmounting: isUnmounting
        };
        ProgressTransitionManagerTs2.__workletHash = 12738720887629;
        ProgressTransitionManagerTs2.__initData = _worklet_12738720887629_init_data;
        ProgressTransitionManagerTs2.__stackDetails = _e;
        return ProgressTransitionManagerTs2;
      }())();
    }
  }, {
    key: "registerEventHandlers",
    value: function registerEventHandlers() {
      this._sharedElementCount++;
      var eventHandler = this._eventHandler;
      if (!eventHandler.isRegistered) {
        eventHandler.isRegistered = true;
        var eventPrefix = IS_ANDROID ? 'on' : 'top';
        var lastProgressValue = -1;
        eventHandler.onTransitionProgress = (0, _core.registerEventHandler)(function () {
          var _e = [new global.Error(), -2, -27];
          var ProgressTransitionManagerTs3 = function ProgressTransitionManagerTs3(event) {
            var progress = event.progress;
            if (progress === lastProgressValue) {
              return;
            }
            lastProgressValue = progress;
            global.ProgressTransitionRegister.frame(progress);
          };
          ProgressTransitionManagerTs3.__closure = {
            lastProgressValue: lastProgressValue
          };
          ProgressTransitionManagerTs3.__workletHash = 14194501671186;
          ProgressTransitionManagerTs3.__initData = _worklet_14194501671186_init_data;
          ProgressTransitionManagerTs3.__stackDetails = _e;
          return ProgressTransitionManagerTs3;
        }(), eventPrefix + 'TransitionProgress');
        eventHandler.onAppear = (0, _core.registerEventHandler)(function () {
          var _e = [new global.Error(), 1, -27];
          var ProgressTransitionManagerTs4 = function ProgressTransitionManagerTs4() {
            global.ProgressTransitionRegister.onTransitionEnd();
          };
          ProgressTransitionManagerTs4.__closure = {};
          ProgressTransitionManagerTs4.__workletHash = 9903126827131;
          ProgressTransitionManagerTs4.__initData = _worklet_9903126827131_init_data;
          ProgressTransitionManagerTs4.__stackDetails = _e;
          return ProgressTransitionManagerTs4;
        }(), eventPrefix + 'Appear');
        if (IS_ANDROID) {
          eventHandler.onDisappear = (0, _core.registerEventHandler)(function () {
            var _e = [new global.Error(), 1, -27];
            var ProgressTransitionManagerTs5 = function ProgressTransitionManagerTs5() {
              global.ProgressTransitionRegister.onAndroidFinishTransitioning();
            };
            ProgressTransitionManagerTs5.__closure = {};
            ProgressTransitionManagerTs5.__workletHash = 7715890060317;
            ProgressTransitionManagerTs5.__initData = _worklet_7715890060317_init_data;
            ProgressTransitionManagerTs5.__stackDetails = _e;
            return ProgressTransitionManagerTs5;
          }(), 'onFinishTransitioning');
        } else if (_reactNative.Platform.OS === 'ios') {
          eventHandler.onDisappear = (0, _core.registerEventHandler)(function () {
            var _e = [new global.Error(), 1, -27];
            var ProgressTransitionManagerTs6 = function ProgressTransitionManagerTs6() {
              global.ProgressTransitionRegister.onTransitionEnd(true);
            };
            ProgressTransitionManagerTs6.__closure = {};
            ProgressTransitionManagerTs6.__workletHash = 2426433133263;
            ProgressTransitionManagerTs6.__initData = _worklet_2426433133263_init_data;
            ProgressTransitionManagerTs6.__stackDetails = _e;
            return ProgressTransitionManagerTs6;
          }(), 'topDisappear');
          eventHandler.onSwipeDismiss = (0, _core.registerEventHandler)(function () {
            var _e = [new global.Error(), 1, -27];
            var ProgressTransitionManagerTs7 = function ProgressTransitionManagerTs7() {
              global.ProgressTransitionRegister.onTransitionEnd();
            };
            ProgressTransitionManagerTs7.__closure = {};
            ProgressTransitionManagerTs7.__workletHash = 5819399722744;
            ProgressTransitionManagerTs7.__initData = _worklet_5819399722744_init_data;
            ProgressTransitionManagerTs7.__stackDetails = _e;
            return ProgressTransitionManagerTs7;
          }(), 'topGestureCancel');
        }
      }
    }
  }, {
    key: "unregisterEventHandlers",
    value: function unregisterEventHandlers() {
      this._sharedElementCount--;
      if (this._sharedElementCount === 0) {
        var eventHandler = this._eventHandler;
        eventHandler.isRegistered = false;
        if (eventHandler.onTransitionProgress !== -1) {
          (0, _core.unregisterEventHandler)(eventHandler.onTransitionProgress);
          eventHandler.onTransitionProgress = -1;
        }
        if (eventHandler.onAppear !== -1) {
          (0, _core.unregisterEventHandler)(eventHandler.onAppear);
          eventHandler.onAppear = -1;
        }
        if (eventHandler.onDisappear !== -1) {
          (0, _core.unregisterEventHandler)(eventHandler.onDisappear);
          eventHandler.onDisappear = -1;
        }
        if (eventHandler.onSwipeDismiss !== -1) {
          (0, _core.unregisterEventHandler)(eventHandler.onSwipeDismiss);
          eventHandler.onSwipeDismiss = -1;
        }
      }
    }
  }]);
}();
var _worklet_6765870736350_init_data = {
  code: "function createProgressTransitionRegister_ProgressTransitionManagerTs8(){const{IS_ANDROID}=this.__closure;const progressAnimations=new Map();const snapshots=new Map();const currentTransitions=new Set();const toRemove=new Set();let skipCleaning=false;let isTransitionRestart=false;const progressTransitionManager={addProgressAnimation:function(viewTag,progressAnimation){if(currentTransitions.size>0&&!progressAnimations.has(viewTag)){isTransitionRestart=!IS_ANDROID;}progressAnimations.set(viewTag,progressAnimation);},removeProgressAnimation:function(viewTag,isUnmounting){if(currentTransitions.size>0){isTransitionRestart=!IS_ANDROID;}if(isUnmounting){toRemove.add(viewTag);}else{progressAnimations.delete(viewTag);}},onTransitionStart:function(viewTag,snapshot){skipCleaning=isTransitionRestart;snapshots.set(viewTag,snapshot);currentTransitions.add(viewTag);progressTransitionManager.frame(0);},frame:function(progress){for(const viewTag of currentTransitions){const progressAnimation=progressAnimations.get(viewTag);if(!progressAnimation){continue;}const snapshot=snapshots.get(viewTag);progressAnimation(viewTag,snapshot,progress);}},onAndroidFinishTransitioning:function(){if(toRemove.size>0){progressTransitionManager.onTransitionEnd();}},onTransitionEnd:function(removeViews=false){if(currentTransitions.size===0){toRemove.clear();return;}if(skipCleaning){skipCleaning=false;isTransitionRestart=false;return;}for(const viewTag of currentTransitions){global._notifyAboutEnd(viewTag,removeViews);}currentTransitions.clear();if(isTransitionRestart){return;}snapshots.clear();if(toRemove.size>0){for(const viewTag of toRemove){progressAnimations.delete(viewTag);global._notifyAboutEnd(viewTag,removeViews);}toRemove.clear();}}};return progressTransitionManager;}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\sharedTransitions\\ProgressTransitionManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"createProgressTransitionRegister_ProgressTransitionManagerTs8\",\"IS_ANDROID\",\"__closure\",\"progressAnimations\",\"Map\",\"snapshots\",\"currentTransitions\",\"Set\",\"toRemove\",\"skipCleaning\",\"isTransitionRestart\",\"progressTransitionManager\",\"addProgressAnimation\",\"viewTag\",\"progressAnimation\",\"size\",\"has\",\"set\",\"removeProgressAnimation\",\"isUnmounting\",\"add\",\"delete\",\"onTransitionStart\",\"snapshot\",\"frame\",\"progress\",\"get\",\"onAndroidFinishTransitioning\",\"onTransitionEnd\",\"removeViews\",\"clear\",\"global\",\"_notifyAboutEnd\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts\"],\"mappings\":\"AAkIA,SAAAA,6DAA4CA,CAAA,QAAAC,UAAA,OAAAC,SAAA,CAE1C,KAAM,CAAAC,kBAAkB,CAAG,GAAI,CAAAC,GAAG,CAA4B,CAAC,CAC/D,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAD,GAAG,CAGvB,CAAC,CACH,KAAM,CAAAE,kBAAkB,CAAG,GAAI,CAAAC,GAAG,CAAS,CAAC,CAC5C,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAD,GAAG,CAAS,CAAC,CAElC,GAAI,CAAAE,YAAY,CAAG,KAAK,CACxB,GAAI,CAAAC,mBAAmB,CAAG,KAAK,CAE/B,KAAM,CAAAC,yBAAyB,CAAG,CAChCC,oBAAoB,CAAE,QAAAA,CACpBC,OAAe,CACfC,iBAAoC,CACjC,CACH,GAAIR,kBAAkB,CAACS,IAAI,CAAG,CAAC,EAAI,CAACZ,kBAAkB,CAACa,GAAG,CAACH,OAAO,CAAC,CAAE,CAEnEH,mBAAmB,CAAG,CAACT,UAAU,CACnC,CACAE,kBAAkB,CAACc,GAAG,CAACJ,OAAO,CAAEC,iBAAiB,CAAC,CACpD,CAAC,CACDI,uBAAuB,CAAE,QAAAA,CAACL,OAAe,CAAEM,YAAqB,CAAK,CACnE,GAAIb,kBAAkB,CAACS,IAAI,CAAG,CAAC,CAAE,CAE/BL,mBAAmB,CAAG,CAACT,UAAU,CACnC,CACA,GAAIkB,YAAY,CAAE,CAEhBX,QAAQ,CAACY,GAAG,CAACP,OAAO,CAAC,CACvB,CAAC,IAAM,CAELV,kBAAkB,CAACkB,MAAM,CAACR,OAAO,CAAC,CACpC,CACF,CAAC,CACDS,iBAAiB,CAAE,QAAAA,CACjBT,OAAe,CACfU,QAAmD,CAChD,CACHd,YAAY,CAAGC,mBAAmB,CAClCL,SAAS,CAACY,GAAG,CAACJ,OAAO,CAAEU,QAAQ,CAAC,CAChCjB,kBAAkB,CAACc,GAAG,CAACP,OAAO,CAAC,CAE/BF,yBAAyB,CAACa,KAAK,CAAC,CAAC,CAAC,CACpC,CAAC,CACDA,KAAK,CAAE,QAAAA,CAACC,QAAgB,CAAK,CAC3B,IAAK,KAAM,CAAAZ,OAAO,GAAI,CAAAP,kBAAkB,CAAE,CACxC,KAAM,CAAAQ,iBAAiB,CAAGX,kBAAkB,CAACuB,GAAG,CAACb,OAAO,CAAC,CACzD,GAAI,CAACC,iBAAiB,CAAE,CACtB,SACF,CACA,KAAM,CAAAS,QAAQ,CAAGlB,SAAS,CAACqB,GAAG,CAC5Bb,OACF,CAAsC,CACtCC,iBAAiB,CAACD,OAAO,CAAEU,QAAQ,CAAEE,QAAQ,CAAC,CAChD,CACF,CAAC,CACDE,4BAA4B,CAAE,QAAAA,CAAA,CAAM,CAClC,GAAInB,QAAQ,CAACO,IAAI,CAAG,CAAC,CAAE,CAErBJ,yBAAyB,CAACiB,eAAe,CAAC,CAAC,CAC7C,CACF,CAAC,CACDA,eAAe,CAAE,QAAAA,CAACC,WAAW,CAAG,KAAK,CAAK,CACxC,GAAIvB,kBAAkB,CAACS,IAAI,GAAK,CAAC,CAAE,CACjCP,QAAQ,CAACsB,KAAK,CAAC,CAAC,CAChB,OACF,CACA,GAAIrB,YAAY,CAAE,CAChBA,YAAY,CAAG,KAAK,CACpBC,mBAAmB,CAAG,KAAK,CAC3B,OACF,CACA,IAAK,KAAM,CAAAG,OAAO,GAAI,CAAAP,kBAAkB,CAAE,CACxCyB,MAAM,CAACC,eAAe,CAACnB,OAAO,CAAEgB,WAAW,CAAC,CAC9C,CACAvB,kBAAkB,CAACwB,KAAK,CAAC,CAAC,CAC1B,GAAIpB,mBAAmB,CAAE,CAGvB,OACF,CACAL,SAAS,CAACyB,KAAK,CAAC,CAAC,CACjB,GAAItB,QAAQ,CAACO,IAAI,CAAG,CAAC,CAAE,CACrB,IAAK,KAAM,CAAAF,OAAO,GAAI,CAAAL,QAAQ,CAAE,CAC9BL,kBAAkB,CAACkB,MAAM,CAACR,OAAO,CAAC,CAClCkB,MAAM,CAACC,eAAe,CAACnB,OAAO,CAAEgB,WAAW,CAAC,CAC9C,CACArB,QAAQ,CAACsB,KAAK,CAAC,CAAC,CAClB,CACF,CACF,CAAC,CACD,MAAO,CAAAnB,yBAAyB,CAClC\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var createProgressTransitionRegister = function () {
  var _e = [new global.Error(), -2, -27];
  var createProgressTransitionRegister = function createProgressTransitionRegister() {
    var progressAnimations = new Map();
    var snapshots = new Map();
    var currentTransitions = new Set();
    var toRemove = new Set();
    var skipCleaning = false;
    var isTransitionRestart = false;
    var progressTransitionManager = {
      addProgressAnimation: function addProgressAnimation(viewTag, progressAnimation) {
        if (currentTransitions.size > 0 && !progressAnimations.has(viewTag)) {
          isTransitionRestart = !IS_ANDROID;
        }
        progressAnimations.set(viewTag, progressAnimation);
      },
      removeProgressAnimation: function removeProgressAnimation(viewTag, isUnmounting) {
        if (currentTransitions.size > 0) {
          isTransitionRestart = !IS_ANDROID;
        }
        if (isUnmounting) {
          toRemove.add(viewTag);
        } else {
          progressAnimations.delete(viewTag);
        }
      },
      onTransitionStart: function onTransitionStart(viewTag, snapshot) {
        skipCleaning = isTransitionRestart;
        snapshots.set(viewTag, snapshot);
        currentTransitions.add(viewTag);
        progressTransitionManager.frame(0);
      },
      frame: function frame(progress) {
        for (var viewTag of currentTransitions) {
          var progressAnimation = progressAnimations.get(viewTag);
          if (!progressAnimation) {
            continue;
          }
          var snapshot = snapshots.get(viewTag);
          progressAnimation(viewTag, snapshot, progress);
        }
      },
      onAndroidFinishTransitioning: function onAndroidFinishTransitioning() {
        if (toRemove.size > 0) {
          progressTransitionManager.onTransitionEnd();
        }
      },
      onTransitionEnd: function onTransitionEnd() {
        var removeViews = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        if (currentTransitions.size === 0) {
          toRemove.clear();
          return;
        }
        if (skipCleaning) {
          skipCleaning = false;
          isTransitionRestart = false;
          return;
        }
        for (var viewTag of currentTransitions) {
          global._notifyAboutEnd(viewTag, removeViews);
        }
        currentTransitions.clear();
        if (isTransitionRestart) {
          return;
        }
        snapshots.clear();
        if (toRemove.size > 0) {
          for (var _viewTag of toRemove) {
            progressAnimations.delete(_viewTag);
            global._notifyAboutEnd(_viewTag, removeViews);
          }
          toRemove.clear();
        }
      }
    };
    return progressTransitionManager;
  };
  createProgressTransitionRegister.__closure = {
    IS_ANDROID: IS_ANDROID
  };
  createProgressTransitionRegister.__workletHash = 6765870736350;
  createProgressTransitionRegister.__initData = _worklet_6765870736350_init_data;
  createProgressTransitionRegister.__stackDetails = _e;
  return createProgressTransitionRegister;
}();
var _worklet_13941843983256_init_data = {
  code: "function ProgressTransitionManagerTs9(){const{createProgressTransitionRegister}=this.__closure;global.ProgressTransitionRegister=createProgressTransitionRegister();}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\sharedTransitions\\ProgressTransitionManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"ProgressTransitionManagerTs9\",\"createProgressTransitionRegister\",\"__closure\",\"global\",\"ProgressTransitionRegister\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts\"],\"mappings\":\"AAwPqB,SAAAA,4BAAMA,CAAA,QAAAC,gCAAA,OAAAC,SAAA,CAEvBC,MAAM,CAACC,0BAA0B,CAAGH,gCAAgC,CAAC,CAAC,CACxE\",\"ignoreList\":[]}",
  version: "3.16.7"
};
if ((0, _PlatformChecker.shouldBeUseWeb)()) {
  var maybeThrowError = function maybeThrowError() {
    if (!(0, _PlatformChecker.isJest)()) {
      throw new _errors.ReanimatedError('`ProgressTransitionRegister` is not available on non-native platform.');
    }
  };
  global.ProgressTransitionRegister = new Proxy({}, {
    get: maybeThrowError,
    set: function set() {
      maybeThrowError();
      return false;
    }
  });
} else {
  (0, _threads.runOnUIImmediately)(function () {
    var _e = [new global.Error(), -2, -27];
    var ProgressTransitionManagerTs9 = function ProgressTransitionManagerTs9() {
      global.ProgressTransitionRegister = createProgressTransitionRegister();
    };
    ProgressTransitionManagerTs9.__closure = {
      createProgressTransitionRegister: createProgressTransitionRegister
    };
    ProgressTransitionManagerTs9.__workletHash = 13941843983256;
    ProgressTransitionManagerTs9.__initData = _worklet_13941843983256_init_data;
    ProgressTransitionManagerTs9.__stackDetails = _e;
    return ProgressTransitionManagerTs9;
  }())();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,