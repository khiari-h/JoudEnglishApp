{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","ProgressTransitionManager","_classCallCheck2","_createClass2","_threads","_core","_reactNative","_PlatformChecker","_errors","IS_ANDROID","Platform","OS","_worklet_2879465585001_init_data","code","location","sourceMap","version","_worklet_12738720887629_init_data","_worklet_14194501671186_init_data","_worklet_9903126827131_init_data","_worklet_7715890060317_init_data","_worklet_2426433133263_init_data","_worklet_5819399722744_init_data","default","_sharedElementCount","_eventHandler","isRegistered","onTransitionProgress","onAppear","onDisappear","onSwipeDismiss","key","addProgressAnimation","viewTag","progressAnimation","runOnUIImmediately","_e","global","Error","ProgressTransitionManagerTs1","ProgressTransitionRegister","__closure","__workletHash","__initData","__stackDetails","registerEventHandlers","removeProgressAnimation","isUnmounting","arguments","length","undefined","unregisterEventHandlers","ProgressTransitionManagerTs2","eventHandler","eventPrefix","lastProgressValue","registerEventHandler","ProgressTransitionManagerTs3","event","progress","frame","ProgressTransitionManagerTs4","onTransitionEnd","ProgressTransitionManagerTs5","onAndroidFinishTransitioning","ProgressTransitionManagerTs6","ProgressTransitionManagerTs7","unregisterEventHandler","_worklet_6765870736350_init_data","createProgressTransitionRegister","progressAnimations","Map","snapshots","currentTransitions","Set","toRemove","skipCleaning","isTransitionRestart","progressTransitionManager","size","has","set","add","delete","onTransitionStart","snapshot","get","removeViews","clear","_notifyAboutEnd","_worklet_13941843983256_init_data","shouldBeUseWeb","maybeThrowError","isJest","ReanimatedError","Proxy","ProgressTransitionManagerTs9"],"sources":["ProgressTransitionManager.ts"],"sourcesContent":["'use strict';\nimport { runOnUIImmediately } from '../../threads';\nimport type {\n  ProgressAnimation,\n  SharedTransitionAnimationsValues,\n} from '../animationBuilder/commonTypes';\nimport { registerEventHandler, unregisterEventHandler } from '../../core';\nimport { Platform } from 'react-native';\nimport { isJest, shouldBeUseWeb } from '../../PlatformChecker';\nimport { ReanimatedError } from '../../errors';\n\ntype TransitionProgressEvent = {\n  closing: number;\n  goingForward: number;\n  eventName: string;\n  progress: number;\n  target: number;\n};\n\nconst IS_ANDROID = Platform.OS === 'android';\n\nexport class ProgressTransitionManager {\n  private _sharedElementCount = 0;\n  private _eventHandler = {\n    isRegistered: false,\n    onTransitionProgress: -1,\n    onAppear: -1,\n    onDisappear: -1,\n    onSwipeDismiss: -1,\n  };\n\n  public addProgressAnimation(\n    viewTag: number,\n    progressAnimation: ProgressAnimation\n  ) {\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.addProgressAnimation(\n        viewTag,\n        progressAnimation\n      );\n    })();\n\n    this.registerEventHandlers();\n  }\n\n  public removeProgressAnimation(viewTag: number, isUnmounting = true) {\n    this.unregisterEventHandlers();\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.removeProgressAnimation(\n        viewTag,\n        isUnmounting\n      );\n    })();\n  }\n\n  private registerEventHandlers() {\n    this._sharedElementCount++;\n    const eventHandler = this._eventHandler;\n    if (!eventHandler.isRegistered) {\n      eventHandler.isRegistered = true;\n      const eventPrefix = IS_ANDROID ? 'on' : 'top';\n      let lastProgressValue = -1;\n      eventHandler.onTransitionProgress = registerEventHandler(\n        (event: TransitionProgressEvent) => {\n          'worklet';\n          const progress = event.progress;\n          if (progress === lastProgressValue) {\n            // During screen transition, handler receives two events with the same progress\n            // value for both screens, but for modals, there is only one event. To optimize\n            // performance and avoid unnecessary worklet calls, let's skip the second event.\n            return;\n          }\n          lastProgressValue = progress;\n          global.ProgressTransitionRegister.frame(progress);\n        },\n        eventPrefix + 'TransitionProgress'\n      );\n      eventHandler.onAppear = registerEventHandler(() => {\n        'worklet';\n        global.ProgressTransitionRegister.onTransitionEnd();\n      }, eventPrefix + 'Appear');\n\n      if (IS_ANDROID) {\n        // onFinishTransitioning event is available only on Android and\n        // is used to handle closing modals\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onAndroidFinishTransitioning();\n        }, 'onFinishTransitioning');\n      } else if (Platform.OS === 'ios') {\n        // topDisappear event is required to handle closing modals on iOS\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd(true);\n        }, 'topDisappear');\n        eventHandler.onSwipeDismiss = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd();\n        }, 'topGestureCancel');\n      }\n    }\n  }\n\n  private unregisterEventHandlers(): void {\n    this._sharedElementCount--;\n    if (this._sharedElementCount === 0) {\n      const eventHandler = this._eventHandler;\n      eventHandler.isRegistered = false;\n      if (eventHandler.onTransitionProgress !== -1) {\n        unregisterEventHandler(eventHandler.onTransitionProgress);\n        eventHandler.onTransitionProgress = -1;\n      }\n      if (eventHandler.onAppear !== -1) {\n        unregisterEventHandler(eventHandler.onAppear);\n        eventHandler.onAppear = -1;\n      }\n      if (eventHandler.onDisappear !== -1) {\n        unregisterEventHandler(eventHandler.onDisappear);\n        eventHandler.onDisappear = -1;\n      }\n      if (eventHandler.onSwipeDismiss !== -1) {\n        unregisterEventHandler(eventHandler.onSwipeDismiss);\n        eventHandler.onSwipeDismiss = -1;\n      }\n    }\n  }\n}\n\nfunction createProgressTransitionRegister() {\n  'worklet';\n  const progressAnimations = new Map<number, ProgressAnimation>();\n  const snapshots = new Map<\n    number,\n    Partial<SharedTransitionAnimationsValues>\n  >();\n  const currentTransitions = new Set<number>();\n  const toRemove = new Set<number>();\n\n  let skipCleaning = false;\n  let isTransitionRestart = false;\n\n  const progressTransitionManager = {\n    addProgressAnimation: (\n      viewTag: number,\n      progressAnimation: ProgressAnimation\n    ) => {\n      if (currentTransitions.size > 0 && !progressAnimations.has(viewTag)) {\n        // there is no need to prevent cleaning on android\n        isTransitionRestart = !IS_ANDROID;\n      }\n      progressAnimations.set(viewTag, progressAnimation);\n    },\n    removeProgressAnimation: (viewTag: number, isUnmounting: boolean) => {\n      if (currentTransitions.size > 0) {\n        // there is no need to prevent cleaning on android\n        isTransitionRestart = !IS_ANDROID;\n      }\n      if (isUnmounting) {\n        // Remove the animation config after the transition is finished\n        toRemove.add(viewTag);\n      } else {\n        // if the animation is removed, without ever being started, it can be removed immediately\n        progressAnimations.delete(viewTag);\n      }\n    },\n    onTransitionStart: (\n      viewTag: number,\n      snapshot: Partial<SharedTransitionAnimationsValues>\n    ) => {\n      skipCleaning = isTransitionRestart;\n      snapshots.set(viewTag, snapshot);\n      currentTransitions.add(viewTag);\n      // set initial style for re-parented components\n      progressTransitionManager.frame(0);\n    },\n    frame: (progress: number) => {\n      for (const viewTag of currentTransitions) {\n        const progressAnimation = progressAnimations.get(viewTag);\n        if (!progressAnimation) {\n          continue;\n        }\n        const snapshot = snapshots.get(\n          viewTag\n        )! as SharedTransitionAnimationsValues;\n        progressAnimation(viewTag, snapshot, progress);\n      }\n    },\n    onAndroidFinishTransitioning: () => {\n      if (toRemove.size > 0) {\n        // it should be ran only on modal closing\n        progressTransitionManager.onTransitionEnd();\n      }\n    },\n    onTransitionEnd: (removeViews = false) => {\n      if (currentTransitions.size === 0) {\n        toRemove.clear();\n        return;\n      }\n      if (skipCleaning) {\n        skipCleaning = false;\n        isTransitionRestart = false;\n        return;\n      }\n      for (const viewTag of currentTransitions) {\n        global._notifyAboutEnd(viewTag, removeViews);\n      }\n      currentTransitions.clear();\n      if (isTransitionRestart) {\n        // on transition restart, progressAnimations should be saved\n        // because they potentially can be used in the next transition\n        return;\n      }\n      snapshots.clear();\n      if (toRemove.size > 0) {\n        for (const viewTag of toRemove) {\n          progressAnimations.delete(viewTag);\n          global._notifyAboutEnd(viewTag, removeViews);\n        }\n        toRemove.clear();\n      }\n    },\n  };\n  return progressTransitionManager;\n}\n\nif (shouldBeUseWeb()) {\n  const maybeThrowError = () => {\n    // Jest attempts to access a property of this object to check if it is a Jest mock\n    // so we can't throw an error in the getter.\n    if (!isJest()) {\n      throw new ReanimatedError(\n        '`ProgressTransitionRegister` is not available on non-native platform.'\n      );\n    }\n  };\n  global.ProgressTransitionRegister = new Proxy(\n    {} as ProgressTransitionRegister,\n    {\n      get: maybeThrowError,\n      set: () => {\n        maybeThrowError();\n        return false;\n      },\n    }\n  );\n} else {\n  runOnUIImmediately(() => {\n    'worklet';\n    global.ProgressTransitionRegister = createProgressTransitionRegister();\n  })();\n}\n\nexport type ProgressTransitionRegister = ReturnType<\n  typeof createProgressTransitionRegister\n>;\n"],"mappings":"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","ignoreList":[]}