259092d6c792ef3c213403c089fa9d02
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maybeBuild = maybeBuild;
var _logger = require("./logger");
var mockTargetValues = {
  targetOriginX: 0,
  targetOriginY: 0,
  targetWidth: 0,
  targetHeight: 0,
  targetGlobalOriginX: 0,
  targetGlobalOriginY: 0,
  targetBorderRadius: 0,
  windowWidth: 0,
  windowHeight: 0,
  currentOriginX: 0,
  currentOriginY: 0,
  currentWidth: 0,
  currentHeight: 0,
  currentGlobalOriginX: 0,
  currentGlobalOriginY: 0,
  currentBorderRadius: 0
};
function getCommonProperties(layoutStyle, componentStyle) {
  var componentStyleFlat = Array.isArray(componentStyle) ? componentStyle.flat() : [componentStyle];
  componentStyleFlat = componentStyleFlat.filter(Boolean);
  componentStyleFlat = componentStyleFlat.map(function (style) {
    return 'initial' in style ? style.initial.value : style;
  });
  var componentStylesKeys = componentStyleFlat.flatMap(function (style) {
    return Object.keys(style);
  });
  var commonKeys = Object.keys(layoutStyle).filter(function (key) {
    return componentStylesKeys.includes(key);
  });
  return commonKeys;
}
function maybeReportOverwrittenProperties(layoutAnimationStyle, style, displayName) {
  var commonProperties = getCommonProperties(layoutAnimationStyle, style);
  if (commonProperties.length > 0) {
    _logger.logger.warn(`${commonProperties.length === 1 ? 'Property' : 'Properties'} "${commonProperties.join(', ')}" of ${displayName} may be overwritten by a layout animation. Please wrap your component with an animated view and apply the layout animation on the wrapper.`);
  }
}
function maybeBuild(layoutAnimationOrBuilder, style, displayName) {
  var isAnimationBuilder = function isAnimationBuilder(value) {
    return 'build' in layoutAnimationOrBuilder && typeof layoutAnimationOrBuilder.build === 'function';
  };
  if (isAnimationBuilder(layoutAnimationOrBuilder)) {
    var animationFactory = layoutAnimationOrBuilder.build();
    if (__DEV__ && style) {
      var layoutAnimation = animationFactory(mockTargetValues);
      maybeReportOverwrittenProperties(layoutAnimation.animations, style, displayName);
    }
    return animationFactory;
  } else {
    return layoutAnimationOrBuilder;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1heWJlQnVpbGQiLCJfbG9nZ2VyIiwicmVxdWlyZSIsIm1vY2tUYXJnZXRWYWx1ZXMiLCJ0YXJnZXRPcmlnaW5YIiwidGFyZ2V0T3JpZ2luWSIsInRhcmdldFdpZHRoIiwidGFyZ2V0SGVpZ2h0IiwidGFyZ2V0R2xvYmFsT3JpZ2luWCIsInRhcmdldEdsb2JhbE9yaWdpblkiLCJ0YXJnZXRCb3JkZXJSYWRpdXMiLCJ3aW5kb3dXaWR0aCIsIndpbmRvd0hlaWdodCIsImN1cnJlbnRPcmlnaW5YIiwiY3VycmVudE9yaWdpblkiLCJjdXJyZW50V2lkdGgiLCJjdXJyZW50SGVpZ2h0IiwiY3VycmVudEdsb2JhbE9yaWdpblgiLCJjdXJyZW50R2xvYmFsT3JpZ2luWSIsImN1cnJlbnRCb3JkZXJSYWRpdXMiLCJnZXRDb21tb25Qcm9wZXJ0aWVzIiwibGF5b3V0U3R5bGUiLCJjb21wb25lbnRTdHlsZSIsImNvbXBvbmVudFN0eWxlRmxhdCIsIkFycmF5IiwiaXNBcnJheSIsImZsYXQiLCJmaWx0ZXIiLCJCb29sZWFuIiwibWFwIiwic3R5bGUiLCJpbml0aWFsIiwiY29tcG9uZW50U3R5bGVzS2V5cyIsImZsYXRNYXAiLCJrZXlzIiwiY29tbW9uS2V5cyIsImtleSIsImluY2x1ZGVzIiwibWF5YmVSZXBvcnRPdmVyd3JpdHRlblByb3BlcnRpZXMiLCJsYXlvdXRBbmltYXRpb25TdHlsZSIsImRpc3BsYXlOYW1lIiwiY29tbW9uUHJvcGVydGllcyIsImxlbmd0aCIsImxvZ2dlciIsIndhcm4iLCJqb2luIiwibGF5b3V0QW5pbWF0aW9uT3JCdWlsZGVyIiwiaXNBbmltYXRpb25CdWlsZGVyIiwiYnVpbGQiLCJhbmltYXRpb25GYWN0b3J5IiwiX19ERVZfXyIsImxheW91dEFuaW1hdGlvbiIsImFuaW1hdGlvbnMiXSwic291cmNlcyI6WyJhbmltYXRpb25CdWlsZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5pbXBvcnQgdHlwZSB7XG4gIElMYXlvdXRBbmltYXRpb25CdWlsZGVyLFxuICBMYXlvdXRBbmltYXRpb25GdW5jdGlvbixcbiAgTGF5b3V0QW5pbWF0aW9uc1ZhbHVlcyxcbn0gZnJvbSAnLi9sYXlvdXRSZWFuaW1hdGlvbic7XG5pbXBvcnQgdHlwZSB7IFN0eWxlUHJvcHMgfSBmcm9tICcuL2NvbW1vblR5cGVzJztcbmltcG9ydCB0eXBlIHsgTmVzdGVkQXJyYXkgfSBmcm9tICcuL2NyZWF0ZUFuaW1hdGVkQ29tcG9uZW50L2NvbW1vblR5cGVzJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJy4vbG9nZ2VyJztcblxuY29uc3QgbW9ja1RhcmdldFZhbHVlczogTGF5b3V0QW5pbWF0aW9uc1ZhbHVlcyA9IHtcbiAgdGFyZ2V0T3JpZ2luWDogMCxcbiAgdGFyZ2V0T3JpZ2luWTogMCxcbiAgdGFyZ2V0V2lkdGg6IDAsXG4gIHRhcmdldEhlaWdodDogMCxcbiAgdGFyZ2V0R2xvYmFsT3JpZ2luWDogMCxcbiAgdGFyZ2V0R2xvYmFsT3JpZ2luWTogMCxcbiAgdGFyZ2V0Qm9yZGVyUmFkaXVzOiAwLFxuICB3aW5kb3dXaWR0aDogMCxcbiAgd2luZG93SGVpZ2h0OiAwLFxuICBjdXJyZW50T3JpZ2luWDogMCxcbiAgY3VycmVudE9yaWdpblk6IDAsXG4gIGN1cnJlbnRXaWR0aDogMCxcbiAgY3VycmVudEhlaWdodDogMCxcbiAgY3VycmVudEdsb2JhbE9yaWdpblg6IDAsXG4gIGN1cnJlbnRHbG9iYWxPcmlnaW5ZOiAwLFxuICBjdXJyZW50Qm9yZGVyUmFkaXVzOiAwLFxufTtcblxuZnVuY3Rpb24gZ2V0Q29tbW9uUHJvcGVydGllcyhcbiAgbGF5b3V0U3R5bGU6IFN0eWxlUHJvcHMsXG4gIGNvbXBvbmVudFN0eWxlOiBOZXN0ZWRBcnJheTxTdHlsZVByb3BzPlxuKSB7XG4gIGxldCBjb21wb25lbnRTdHlsZUZsYXQgPSBBcnJheS5pc0FycmF5KGNvbXBvbmVudFN0eWxlKVxuICAgID8gY29tcG9uZW50U3R5bGUuZmxhdCgpXG4gICAgOiBbY29tcG9uZW50U3R5bGVdO1xuXG4gIGNvbXBvbmVudFN0eWxlRmxhdCA9IGNvbXBvbmVudFN0eWxlRmxhdC5maWx0ZXIoQm9vbGVhbik7XG5cbiAgY29tcG9uZW50U3R5bGVGbGF0ID0gY29tcG9uZW50U3R5bGVGbGF0Lm1hcCgoc3R5bGUpID0+XG4gICAgJ2luaXRpYWwnIGluIHN0eWxlXG4gICAgICA/IHN0eWxlLmluaXRpYWwudmFsdWUgLy8gSW5jbHVkZSBwcm9wZXJ0aWVzIG9mIGFuaW1hdGVkIHN0eWxlXG4gICAgICA6IHN0eWxlXG4gICk7XG5cbiAgY29uc3QgY29tcG9uZW50U3R5bGVzS2V5cyA9IGNvbXBvbmVudFN0eWxlRmxhdC5mbGF0TWFwKChzdHlsZSkgPT5cbiAgICBPYmplY3Qua2V5cyhzdHlsZSlcbiAgKTtcblxuICBjb25zdCBjb21tb25LZXlzID0gT2JqZWN0LmtleXMobGF5b3V0U3R5bGUpLmZpbHRlcigoa2V5KSA9PlxuICAgIGNvbXBvbmVudFN0eWxlc0tleXMuaW5jbHVkZXMoa2V5KVxuICApO1xuXG4gIHJldHVybiBjb21tb25LZXlzO1xufVxuXG5mdW5jdGlvbiBtYXliZVJlcG9ydE92ZXJ3cml0dGVuUHJvcGVydGllcyhcbiAgbGF5b3V0QW5pbWF0aW9uU3R5bGU6IFN0eWxlUHJvcHMsXG4gIHN0eWxlOiBOZXN0ZWRBcnJheTxTdHlsZVByb3BzPixcbiAgZGlzcGxheU5hbWU6IHN0cmluZ1xuKSB7XG4gIGNvbnN0IGNvbW1vblByb3BlcnRpZXMgPSBnZXRDb21tb25Qcm9wZXJ0aWVzKGxheW91dEFuaW1hdGlvblN0eWxlLCBzdHlsZSk7XG5cbiAgaWYgKGNvbW1vblByb3BlcnRpZXMubGVuZ3RoID4gMCkge1xuICAgIGxvZ2dlci53YXJuKFxuICAgICAgYCR7XG4gICAgICAgIGNvbW1vblByb3BlcnRpZXMubGVuZ3RoID09PSAxID8gJ1Byb3BlcnR5JyA6ICdQcm9wZXJ0aWVzJ1xuICAgICAgfSBcIiR7Y29tbW9uUHJvcGVydGllcy5qb2luKFxuICAgICAgICAnLCAnXG4gICAgICApfVwiIG9mICR7ZGlzcGxheU5hbWV9IG1heSBiZSBvdmVyd3JpdHRlbiBieSBhIGxheW91dCBhbmltYXRpb24uIFBsZWFzZSB3cmFwIHlvdXIgY29tcG9uZW50IHdpdGggYW4gYW5pbWF0ZWQgdmlldyBhbmQgYXBwbHkgdGhlIGxheW91dCBhbmltYXRpb24gb24gdGhlIHdyYXBwZXIuYFxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1heWJlQnVpbGQoXG4gIGxheW91dEFuaW1hdGlvbk9yQnVpbGRlcjpcbiAgICB8IElMYXlvdXRBbmltYXRpb25CdWlsZGVyXG4gICAgfCBMYXlvdXRBbmltYXRpb25GdW5jdGlvblxuICAgIHwgS2V5ZnJhbWUsXG4gIHN0eWxlOiBOZXN0ZWRBcnJheTxTdHlsZVByb3BzPiB8IHVuZGVmaW5lZCxcbiAgZGlzcGxheU5hbWU6IHN0cmluZ1xuKTogTGF5b3V0QW5pbWF0aW9uRnVuY3Rpb24gfCBLZXlmcmFtZSB7XG4gIGNvbnN0IGlzQW5pbWF0aW9uQnVpbGRlciA9IChcbiAgICB2YWx1ZTogSUxheW91dEFuaW1hdGlvbkJ1aWxkZXIgfCBMYXlvdXRBbmltYXRpb25GdW5jdGlvbiB8IEtleWZyYW1lXG4gICk6IHZhbHVlIGlzIElMYXlvdXRBbmltYXRpb25CdWlsZGVyID0+XG4gICAgJ2J1aWxkJyBpbiBsYXlvdXRBbmltYXRpb25PckJ1aWxkZXIgJiZcbiAgICB0eXBlb2YgbGF5b3V0QW5pbWF0aW9uT3JCdWlsZGVyLmJ1aWxkID09PSAnZnVuY3Rpb24nO1xuXG4gIGlmIChpc0FuaW1hdGlvbkJ1aWxkZXIobGF5b3V0QW5pbWF0aW9uT3JCdWlsZGVyKSkge1xuICAgIGNvbnN0IGFuaW1hdGlvbkZhY3RvcnkgPSBsYXlvdXRBbmltYXRpb25PckJ1aWxkZXIuYnVpbGQoKTtcblxuICAgIGlmIChfX0RFVl9fICYmIHN0eWxlKSB7XG4gICAgICBjb25zdCBsYXlvdXRBbmltYXRpb24gPSBhbmltYXRpb25GYWN0b3J5KG1vY2tUYXJnZXRWYWx1ZXMpO1xuICAgICAgbWF5YmVSZXBvcnRPdmVyd3JpdHRlblByb3BlcnRpZXMoXG4gICAgICAgIGxheW91dEFuaW1hdGlvbi5hbmltYXRpb25zLFxuICAgICAgICBzdHlsZSxcbiAgICAgICAgZGlzcGxheU5hbWVcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFuaW1hdGlvbkZhY3Rvcnk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGxheW91dEFuaW1hdGlvbk9yQnVpbGRlcjtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUFDQSxNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBQyxLQUFBO0FBQUE7QUFBQUQsT0FBQSxDQUFBRSxVQUFBLEdBQUFBLFVBQUE7QUFRYixJQUFBQyxPQUFBLEdBQUFDLE9BQUE7QUFFQSxJQUFNQyxnQkFBd0MsR0FBRztFQUMvQ0MsYUFBYSxFQUFFLENBQUM7RUFDaEJDLGFBQWEsRUFBRSxDQUFDO0VBQ2hCQyxXQUFXLEVBQUUsQ0FBQztFQUNkQyxZQUFZLEVBQUUsQ0FBQztFQUNmQyxtQkFBbUIsRUFBRSxDQUFDO0VBQ3RCQyxtQkFBbUIsRUFBRSxDQUFDO0VBQ3RCQyxrQkFBa0IsRUFBRSxDQUFDO0VBQ3JCQyxXQUFXLEVBQUUsQ0FBQztFQUNkQyxZQUFZLEVBQUUsQ0FBQztFQUNmQyxjQUFjLEVBQUUsQ0FBQztFQUNqQkMsY0FBYyxFQUFFLENBQUM7RUFDakJDLFlBQVksRUFBRSxDQUFDO0VBQ2ZDLGFBQWEsRUFBRSxDQUFDO0VBQ2hCQyxvQkFBb0IsRUFBRSxDQUFDO0VBQ3ZCQyxvQkFBb0IsRUFBRSxDQUFDO0VBQ3ZCQyxtQkFBbUIsRUFBRTtBQUN2QixDQUFDO0FBRUQsU0FBU0MsbUJBQW1CQSxDQUMxQkMsV0FBdUIsRUFDdkJDLGNBQXVDLEVBQ3ZDO0VBQ0EsSUFBSUMsa0JBQWtCLEdBQUdDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSCxjQUFjLENBQUMsR0FDbERBLGNBQWMsQ0FBQ0ksSUFBSSxDQUFDLENBQUMsR0FDckIsQ0FBQ0osY0FBYyxDQUFDO0VBRXBCQyxrQkFBa0IsR0FBR0Esa0JBQWtCLENBQUNJLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDO0VBRXZETCxrQkFBa0IsR0FBR0Esa0JBQWtCLENBQUNNLEdBQUcsQ0FBQyxVQUFDQyxLQUFLO0lBQUEsT0FDaEQsU0FBUyxJQUFJQSxLQUFLLEdBQ2RBLEtBQUssQ0FBQ0MsT0FBTyxDQUFDaEMsS0FBSyxHQUNuQitCLEtBQUs7RUFBQSxDQUNYLENBQUM7RUFFRCxJQUFNRSxtQkFBbUIsR0FBR1Qsa0JBQWtCLENBQUNVLE9BQU8sQ0FBQyxVQUFDSCxLQUFLO0lBQUEsT0FDM0RsQyxNQUFNLENBQUNzQyxJQUFJLENBQUNKLEtBQUssQ0FBQztFQUFBLENBQ3BCLENBQUM7RUFFRCxJQUFNSyxVQUFVLEdBQUd2QyxNQUFNLENBQUNzQyxJQUFJLENBQUNiLFdBQVcsQ0FBQyxDQUFDTSxNQUFNLENBQUMsVUFBQ1MsR0FBRztJQUFBLE9BQ3JESixtQkFBbUIsQ0FBQ0ssUUFBUSxDQUFDRCxHQUFHLENBQUM7RUFBQSxDQUNuQyxDQUFDO0VBRUQsT0FBT0QsVUFBVTtBQUNuQjtBQUVBLFNBQVNHLGdDQUFnQ0EsQ0FDdkNDLG9CQUFnQyxFQUNoQ1QsS0FBOEIsRUFDOUJVLFdBQW1CLEVBQ25CO0VBQ0EsSUFBTUMsZ0JBQWdCLEdBQUdyQixtQkFBbUIsQ0FBQ21CLG9CQUFvQixFQUFFVCxLQUFLLENBQUM7RUFFekUsSUFBSVcsZ0JBQWdCLENBQUNDLE1BQU0sR0FBRyxDQUFDLEVBQUU7SUFDL0JDLGNBQU0sQ0FBQ0MsSUFBSSxDQUNULEdBQ0VILGdCQUFnQixDQUFDQyxNQUFNLEtBQUssQ0FBQyxHQUFHLFVBQVUsR0FBRyxZQUFZLEtBQ3RERCxnQkFBZ0IsQ0FBQ0ksSUFBSSxDQUN4QixJQUNGLENBQUMsUUFBUUwsV0FBVyw0SUFDdEIsQ0FBQztFQUNIO0FBQ0Y7QUFFTyxTQUFTeEMsVUFBVUEsQ0FDeEI4Qyx3QkFHWSxFQUNaaEIsS0FBMEMsRUFDMUNVLFdBQW1CLEVBQ2lCO0VBQ3BDLElBQU1PLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBa0JBLENBQ3RCaEQsS0FBbUU7SUFBQSxPQUVuRSxPQUFPLElBQUkrQyx3QkFBd0IsSUFDbkMsT0FBT0Esd0JBQXdCLENBQUNFLEtBQUssS0FBSyxVQUFVO0VBQUE7RUFFdEQsSUFBSUQsa0JBQWtCLENBQUNELHdCQUF3QixDQUFDLEVBQUU7SUFDaEQsSUFBTUcsZ0JBQWdCLEdBQUdILHdCQUF3QixDQUFDRSxLQUFLLENBQUMsQ0FBQztJQUV6RCxJQUFJRSxPQUFPLElBQUlwQixLQUFLLEVBQUU7TUFDcEIsSUFBTXFCLGVBQWUsR0FBR0YsZ0JBQWdCLENBQUM5QyxnQkFBZ0IsQ0FBQztNQUMxRG1DLGdDQUFnQyxDQUM5QmEsZUFBZSxDQUFDQyxVQUFVLEVBQzFCdEIsS0FBSyxFQUNMVSxXQUNGLENBQUM7SUFDSDtJQUVBLE9BQU9TLGdCQUFnQjtFQUN6QixDQUFDLE1BQU07SUFDTCxPQUFPSCx3QkFBd0I7RUFDakM7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==