3d02e08a350056849ab70de8783599aa
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _HeroCard = _interopRequireDefault(require("../../../../components/ui/HeroCard"));
var _RevealButton = _interopRequireDefault(require("../../../../components/ui/RevealButton"));
var _ContentSection = _interopRequireDefault(require("../../../../components/ui/ContentSection"));
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var VocabularyWordCard = function VocabularyWordCard(_ref) {
  var word = _ref.word,
    translation = _ref.translation,
    definition = _ref.definition,
    example = _ref.example,
    showTranslation = _ref.showTranslation,
    onToggleTranslation = _ref.onToggleTranslation,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? "#5E60CE" : _ref$levelColor;
  var styles = (0, _style.default)(levelColor);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_HeroCard.default, {
      content: word,
      fontSize: 42,
      levelColor: levelColor,
      showUnderline: true
    }), (0, _jsxRuntime.jsx)(_RevealButton.default, {
      isRevealed: showTranslation,
      revealedContent: translation,
      revealText: "Reveal Translation",
      hideText: "Hide Translation",
      onToggle: onToggleTranslation,
      levelColor: levelColor
    }), example && (0, _jsxRuntime.jsx)(_ContentSection.default, {
      title: "Example",
      content: example,
      levelColor: levelColor,
      isItalic: true,
      backgroundColor: "#FAFBFC"
    }), definition && (0, _jsxRuntime.jsx)(_ContentSection.default, {
      title: "Definition",
      content: definition,
      levelColor: levelColor,
      backgroundColor: "#F8F9FA"
    })]
  });
};
VocabularyWordCard.propTypes = {
  word: _propTypes.default.string.isRequired,
  translation: _propTypes.default.string.isRequired,
  definition: _propTypes.default.string,
  example: _propTypes.default.string,
  showTranslation: _propTypes.default.bool.isRequired,
  onToggleTranslation: _propTypes.default.func.isRequired,
  levelColor: _propTypes.default.string
};
VocabularyWordCard.defaultProps = {
  definition: null,
  example: null,
  levelColor: "#5E60CE"
};
var _default = exports.default = VocabularyWordCard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3Byb3BUeXBlcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfSGVyb0NhcmQiLCJfUmV2ZWFsQnV0dG9uIiwiX0NvbnRlbnRTZWN0aW9uIiwiX3N0eWxlIiwiX2pzeFJ1bnRpbWUiLCJWb2NhYnVsYXJ5V29yZENhcmQiLCJfcmVmIiwid29yZCIsInRyYW5zbGF0aW9uIiwiZGVmaW5pdGlvbiIsImV4YW1wbGUiLCJzaG93VHJhbnNsYXRpb24iLCJvblRvZ2dsZVRyYW5zbGF0aW9uIiwiX3JlZiRsZXZlbENvbG9yIiwibGV2ZWxDb2xvciIsInN0eWxlcyIsImNyZWF0ZVN0eWxlcyIsImpzeHMiLCJWaWV3Iiwic3R5bGUiLCJjb250YWluZXIiLCJjaGlsZHJlbiIsImpzeCIsImRlZmF1bHQiLCJjb250ZW50IiwiZm9udFNpemUiLCJzaG93VW5kZXJsaW5lIiwiaXNSZXZlYWxlZCIsInJldmVhbGVkQ29udGVudCIsInJldmVhbFRleHQiLCJoaWRlVGV4dCIsIm9uVG9nZ2xlIiwidGl0bGUiLCJpc0l0YWxpYyIsImJhY2tncm91bmRDb2xvciIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJib29sIiwiZnVuYyIsImRlZmF1bHRQcm9wcyIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFZvY2FidWxhcnlXb3JkQ2FyZC9pbmRleC5qcyAtIFZFUlNJT04gUkVGQUNUT1JJU8OJRSBhdmVjIFByb3BUeXBlcyAoMjgwIOKGkiA1MCBsaWduZXMpXHJcblxyXG5pbXBvcnQgeyBWaWV3IH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgSGVyb0NhcmQgZnJvbSBcIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvdWkvSGVyb0NhcmRcIjtcclxuaW1wb3J0IFJldmVhbEJ1dHRvbiBmcm9tIFwiLi4vLi4vLi4vLi4vY29tcG9uZW50cy91aS9SZXZlYWxCdXR0b25cIjtcclxuaW1wb3J0IENvbnRlbnRTZWN0aW9uIGZyb20gXCIuLi8uLi8uLi8uLi9jb21wb25lbnRzL3VpL0NvbnRlbnRTZWN0aW9uXCI7XHJcbmltcG9ydCBjcmVhdGVTdHlsZXMgZnJvbSBcIi4vc3R5bGVcIjtcclxuXHJcbi8qKlxyXG4gKiDwn4+GIFZvY2FidWxhcnlXb3JkQ2FyZCAtIFZlcnNpb24gUmVmYWN0b3Jpc8OpZSBhdmVjIGNvbXBvc2FudHMgZ8OpbsOpcmlxdWVzXHJcbiAqIDI4MCBsaWduZXMg4oaSIDUwIGxpZ25lcyAoLTgyJSBkZSBjb2RlKVxyXG4gKiBNw6ptZSBxdWFsaXTDqSB2aXN1ZWxsZSwgYXJjaGl0ZWN0dXJlIG9wdGltaXPDqWVcclxuICogXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3JkIC0gTW90IHByaW5jaXBhbCDDoCBhZmZpY2hlclxyXG4gKiBAcGFyYW0ge3N0cmluZ30gdHJhbnNsYXRpb24gLSBUcmFkdWN0aW9uIGR1IG1vdFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gZGVmaW5pdGlvbiAtIETDqWZpbml0aW9uIChvcHRpb25uZWwpXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBleGFtcGxlIC0gRXhlbXBsZSBkJ3V0aWxpc2F0aW9uXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gc2hvd1RyYW5zbGF0aW9uIC0gw4l0YXQgZCdhZmZpY2hhZ2UgZGUgbGEgdHJhZHVjdGlvblxyXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBvblRvZ2dsZVRyYW5zbGF0aW9uIC0gRm9uY3Rpb24gcG91ciB0b2dnbGUgdHJhZHVjdGlvblxyXG4gKiBAcGFyYW0ge3N0cmluZ30gbGV2ZWxDb2xvciAtIENvdWxldXIgZHUgbml2ZWF1XHJcbiAqL1xyXG5jb25zdCBWb2NhYnVsYXJ5V29yZENhcmQgPSAoe1xyXG4gIHdvcmQsXHJcbiAgdHJhbnNsYXRpb24sXHJcbiAgZGVmaW5pdGlvbixcclxuICBleGFtcGxlLFxyXG4gIHNob3dUcmFuc2xhdGlvbixcclxuICBvblRvZ2dsZVRyYW5zbGF0aW9uLFxyXG4gIGxldmVsQ29sb3IgPSBcIiM1RTYwQ0VcIixcclxufSkgPT4ge1xyXG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZVN0eWxlcyhsZXZlbENvbG9yKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cclxuICAgICAgey8qIPCfjq8gSEVSTyBTRUNUSU9OIC0gTGUgbW90IHByaW5jaXBhbCAqL31cclxuICAgICAgPEhlcm9DYXJkIFxyXG4gICAgICAgIGNvbnRlbnQ9e3dvcmR9XHJcbiAgICAgICAgZm9udFNpemU9ezQyfSAgLy8gVGFpbGxlIHNwZWN0YWN1bGFpcmUgcG91ciBtb3RzXHJcbiAgICAgICAgbGV2ZWxDb2xvcj17bGV2ZWxDb2xvcn1cclxuICAgICAgICBzaG93VW5kZXJsaW5lXHJcbiAgICAgIC8+XHJcbiAgICAgIFxyXG4gICAgICB7Lyog8J+UmCBCT1VUT04gUkVWRUFML0hJREUgYXZlYyBnbGFzc21vcnBoaXNtICovfVxyXG4gICAgICA8UmV2ZWFsQnV0dG9uXHJcbiAgICAgICAgaXNSZXZlYWxlZD17c2hvd1RyYW5zbGF0aW9ufVxyXG4gICAgICAgIHJldmVhbGVkQ29udGVudD17dHJhbnNsYXRpb259XHJcbiAgICAgICAgcmV2ZWFsVGV4dD1cIlJldmVhbCBUcmFuc2xhdGlvblwiXHJcbiAgICAgICAgaGlkZVRleHQ9XCJIaWRlIFRyYW5zbGF0aW9uXCJcclxuICAgICAgICBvblRvZ2dsZT17b25Ub2dnbGVUcmFuc2xhdGlvbn1cclxuICAgICAgICBsZXZlbENvbG9yPXtsZXZlbENvbG9yfVxyXG4gICAgICAvPlxyXG4gICAgICBcclxuICAgICAgey8qIPCfk50gU0VDVElPTiBFWEVNUExFICovfVxyXG4gICAgICB7ZXhhbXBsZSAmJiAoXHJcbiAgICAgICAgPENvbnRlbnRTZWN0aW9uXHJcbiAgICAgICAgICB0aXRsZT1cIkV4YW1wbGVcIlxyXG4gICAgICAgICAgY29udGVudD17ZXhhbXBsZX1cclxuICAgICAgICAgIGxldmVsQ29sb3I9e2xldmVsQ29sb3J9XHJcbiAgICAgICAgICBpc0l0YWxpY1xyXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yPVwiI0ZBRkJGQ1wiXHJcbiAgICAgICAgLz5cclxuICAgICAgKX1cclxuXHJcbiAgICAgIHsvKiDwn5OdIFNFQ1RJT04gRMOJRklOSVRJT04gKHNpIGRpc3BvbmlibGUpICovfVxyXG4gICAgICB7ZGVmaW5pdGlvbiAmJiAoXHJcbiAgICAgICAgPENvbnRlbnRTZWN0aW9uXHJcbiAgICAgICAgICB0aXRsZT1cIkRlZmluaXRpb25cIlxyXG4gICAgICAgICAgY29udGVudD17ZGVmaW5pdGlvbn1cclxuICAgICAgICAgIGxldmVsQ29sb3I9e2xldmVsQ29sb3J9XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I9XCIjRjhGOUZBXCJcclxuICAgICAgICAvPlxyXG4gICAgICApfVxyXG4gICAgPC9WaWV3PlxyXG4gICk7XHJcbn07XHJcblxyXG4vLyDinIUgUHJvcFR5cGVzIC0gQ29ycmlnZSB0b3V0ZXMgbGVzIGVycmV1cnMgZGUgdmFsaWRhdGlvblxyXG5Wb2NhYnVsYXJ5V29yZENhcmQucHJvcFR5cGVzID0ge1xyXG4gIHdvcmQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICB0cmFuc2xhdGlvbjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxyXG4gIGRlZmluaXRpb246IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgZXhhbXBsZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICBzaG93VHJhbnNsYXRpb246IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXHJcbiAgb25Ub2dnbGVUcmFuc2xhdGlvbjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcclxuICBsZXZlbENvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG59O1xyXG5cclxuLy8g4pyFIFZhbGV1cnMgcGFyIGTDqWZhdXRcclxuVm9jYWJ1bGFyeVdvcmRDYXJkLmRlZmF1bHRQcm9wcyA9IHtcclxuICBkZWZpbml0aW9uOiBudWxsLFxyXG4gIGV4YW1wbGU6IG51bGwsXHJcbiAgbGV2ZWxDb2xvcjogXCIjNUU2MENFXCIsXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBWb2NhYnVsYXJ5V29yZENhcmQ7Il0sIm1hcHBpbmdzIjoiOzs7OztBQUVBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFVBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLFNBQUEsR0FBQUQsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFJLGFBQUEsR0FBQUYsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFLLGVBQUEsR0FBQUgsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFNLE1BQUEsR0FBQUosc0JBQUEsQ0FBQUYsT0FBQTtBQUFtQyxJQUFBTyxXQUFBLEdBQUFQLE9BQUE7QUFlbkMsSUFBTVEsa0JBQWtCLEdBQUcsU0FBckJBLGtCQUFrQkEsQ0FBQUMsSUFBQSxFQVFsQjtFQUFBLElBUEpDLElBQUksR0FBQUQsSUFBQSxDQUFKQyxJQUFJO0lBQ0pDLFdBQVcsR0FBQUYsSUFBQSxDQUFYRSxXQUFXO0lBQ1hDLFVBQVUsR0FBQUgsSUFBQSxDQUFWRyxVQUFVO0lBQ1ZDLE9BQU8sR0FBQUosSUFBQSxDQUFQSSxPQUFPO0lBQ1BDLGVBQWUsR0FBQUwsSUFBQSxDQUFmSyxlQUFlO0lBQ2ZDLG1CQUFtQixHQUFBTixJQUFBLENBQW5CTSxtQkFBbUI7SUFBQUMsZUFBQSxHQUFBUCxJQUFBLENBQ25CUSxVQUFVO0lBQVZBLFVBQVUsR0FBQUQsZUFBQSxjQUFHLFNBQVMsR0FBQUEsZUFBQTtFQUV0QixJQUFNRSxNQUFNLEdBQUcsSUFBQUMsY0FBWSxFQUFDRixVQUFVLENBQUM7RUFFdkMsT0FDRSxJQUFBVixXQUFBLENBQUFhLElBQUEsRUFBQ3JCLFlBQUEsQ0FBQXNCLElBQUk7SUFBQ0MsS0FBSyxFQUFFSixNQUFNLENBQUNLLFNBQVU7SUFBQUMsUUFBQSxHQUU1QixJQUFBakIsV0FBQSxDQUFBa0IsR0FBQSxFQUFDdEIsU0FBQSxDQUFBdUIsT0FBUTtNQUNQQyxPQUFPLEVBQUVqQixJQUFLO01BQ2RrQixRQUFRLEVBQUUsRUFBRztNQUNiWCxVQUFVLEVBQUVBLFVBQVc7TUFDdkJZLGFBQWE7SUFBQSxDQUNkLENBQUMsRUFHRixJQUFBdEIsV0FBQSxDQUFBa0IsR0FBQSxFQUFDckIsYUFBQSxDQUFBc0IsT0FBWTtNQUNYSSxVQUFVLEVBQUVoQixlQUFnQjtNQUM1QmlCLGVBQWUsRUFBRXBCLFdBQVk7TUFDN0JxQixVQUFVLEVBQUMsb0JBQW9CO01BQy9CQyxRQUFRLEVBQUMsa0JBQWtCO01BQzNCQyxRQUFRLEVBQUVuQixtQkFBb0I7TUFDOUJFLFVBQVUsRUFBRUE7SUFBVyxDQUN4QixDQUFDLEVBR0RKLE9BQU8sSUFDTixJQUFBTixXQUFBLENBQUFrQixHQUFBLEVBQUNwQixlQUFBLENBQUFxQixPQUFjO01BQ2JTLEtBQUssRUFBQyxTQUFTO01BQ2ZSLE9BQU8sRUFBRWQsT0FBUTtNQUNqQkksVUFBVSxFQUFFQSxVQUFXO01BQ3ZCbUIsUUFBUTtNQUNSQyxlQUFlLEVBQUM7SUFBUyxDQUMxQixDQUNGLEVBR0F6QixVQUFVLElBQ1QsSUFBQUwsV0FBQSxDQUFBa0IsR0FBQSxFQUFDcEIsZUFBQSxDQUFBcUIsT0FBYztNQUNiUyxLQUFLLEVBQUMsWUFBWTtNQUNsQlIsT0FBTyxFQUFFZixVQUFXO01BQ3BCSyxVQUFVLEVBQUVBLFVBQVc7TUFDdkJvQixlQUFlLEVBQUM7SUFBUyxDQUMxQixDQUNGO0VBQUEsQ0FDRyxDQUFDO0FBRVgsQ0FBQztBQUdEN0Isa0JBQWtCLENBQUM4QixTQUFTLEdBQUc7RUFDN0I1QixJQUFJLEVBQUU2QixrQkFBUyxDQUFDQyxNQUFNLENBQUNDLFVBQVU7RUFDakM5QixXQUFXLEVBQUU0QixrQkFBUyxDQUFDQyxNQUFNLENBQUNDLFVBQVU7RUFDeEM3QixVQUFVLEVBQUUyQixrQkFBUyxDQUFDQyxNQUFNO0VBQzVCM0IsT0FBTyxFQUFFMEIsa0JBQVMsQ0FBQ0MsTUFBTTtFQUN6QjFCLGVBQWUsRUFBRXlCLGtCQUFTLENBQUNHLElBQUksQ0FBQ0QsVUFBVTtFQUMxQzFCLG1CQUFtQixFQUFFd0Isa0JBQVMsQ0FBQ0ksSUFBSSxDQUFDRixVQUFVO0VBQzlDeEIsVUFBVSxFQUFFc0Isa0JBQVMsQ0FBQ0M7QUFDeEIsQ0FBQztBQUdEaEMsa0JBQWtCLENBQUNvQyxZQUFZLEdBQUc7RUFDaENoQyxVQUFVLEVBQUUsSUFBSTtFQUNoQkMsT0FBTyxFQUFFLElBQUk7RUFDYkksVUFBVSxFQUFFO0FBQ2QsQ0FBQztBQUFDLElBQUE0QixRQUFBLEdBQUFDLE9BQUEsQ0FBQXBCLE9BQUEsR0FFYWxCLGtCQUFrQiIsImlnbm9yZUxpc3QiOltdfQ==