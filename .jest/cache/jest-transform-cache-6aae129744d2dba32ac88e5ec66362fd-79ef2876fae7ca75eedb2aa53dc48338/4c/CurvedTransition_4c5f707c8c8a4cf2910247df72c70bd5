8a8403e54533fae59bbbab3ac2cd2078
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CurvedTransition = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _animationBuilder = require("../animationBuilder");
var _Easing = require("../../Easing");
var _animation = require("../../animation");
var _util = require("../../animation/util");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var _worklet_15117983940198_init_data = {
  code: "function CurvedTransitionTs1(values){const{delayFunction,delay,withTiming,duration,easing,callback}=this.__closure;return{initialValues:{originX:values.currentOriginX,originY:values.currentOriginY,width:values.currentWidth,height:values.currentHeight},animations:{originX:delayFunction(delay,withTiming(values.targetOriginX,{duration:duration,easing:easing.easingX})),originY:delayFunction(delay,withTiming(values.targetOriginY,{duration:duration,easing:easing.easingY})),width:delayFunction(delay,withTiming(values.targetWidth,{duration:duration,easing:easing.easingWidth})),height:delayFunction(delay,withTiming(values.targetHeight,{duration:duration,easing:easing.easingHeight}))},callback:callback};}",
  location: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\defaultTransitions\\CurvedTransition.ts",
  sourceMap: "{\"version\":3,\"names\":[\"CurvedTransitionTs1\",\"values\",\"delayFunction\",\"delay\",\"withTiming\",\"duration\",\"easing\",\"callback\",\"__closure\",\"initialValues\",\"originX\",\"currentOriginX\",\"originY\",\"currentOriginY\",\"width\",\"currentWidth\",\"height\",\"currentHeight\",\"animations\",\"targetOriginX\",\"easingX\",\"targetOriginY\",\"easingY\",\"targetWidth\",\"easingWidth\",\"targetHeight\",\"easingHeight\"],\"sources\":[\"C:/Users/khi_h/Desktop/Projets/JoudEnglishApp/node_modules/react-native-reanimated/src/layoutReanimation/defaultTransitions/CurvedTransition.ts\"],\"mappings\":\"AAqGY,SAAAA,mBAAWA,CAAAC,MAAA,QAAAC,aAAA,CAAAC,KAAA,CAAAC,UAAA,CAAAC,QAAA,CAAAC,MAAA,CAAAC,QAAA,OAAAC,SAAA,CAGjB,MAAO,CACLC,aAAa,CAAE,CACbC,OAAO,CAAET,MAAM,CAACU,cAAc,CAC9BC,OAAO,CAAEX,MAAM,CAACY,cAAc,CAC9BC,KAAK,CAAEb,MAAM,CAACc,YAAY,CAC1BC,MAAM,CAAEf,MAAM,CAACgB,aACjB,CAAC,CACDC,UAAU,CAAE,CACVR,OAAO,CAAER,aAAa,CACpBC,KAAK,CACLC,UAAU,CAACH,MAAM,CAACkB,aAAa,CAAE,CAC/Bd,QAAQ,CAARA,QAAQ,CACRC,MAAM,CAAEA,MAAM,CAACc,OACjB,CAAC,CACH,CAAC,CACDR,OAAO,CAAEV,aAAa,CACpBC,KAAK,CACLC,UAAU,CAACH,MAAM,CAACoB,aAAa,CAAE,CAC/BhB,QAAQ,CAARA,QAAQ,CACRC,MAAM,CAAEA,MAAM,CAACgB,OACjB,CAAC,CACH,CAAC,CACDR,KAAK,CAAEZ,aAAa,CAClBC,KAAK,CACLC,UAAU,CAACH,MAAM,CAACsB,WAAW,CAAE,CAC7BlB,QAAQ,CAARA,QAAQ,CACRC,MAAM,CAAEA,MAAM,CAACkB,WACjB,CAAC,CACH,CAAC,CACDR,MAAM,CAAEd,aAAa,CACnBC,KAAK,CACLC,UAAU,CAACH,MAAM,CAACwB,YAAY,CAAE,CAC9BpB,QAAQ,CAARA,QAAQ,CACRC,MAAM,CAAEA,MAAM,CAACoB,YACjB,CAAC,CACH,CACF,CAAC,CACDnB,QAAA,CAAAA,QACF,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.16.7"
};
var CurvedTransition = exports.CurvedTransition = function (_BaseAnimationBuilder) {
  function CurvedTransition() {
    var _this;
    (0, _classCallCheck2.default)(this, CurvedTransition);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, CurvedTransition, [].concat(args));
    _this.easingXV = _Easing.Easing.in(_Easing.Easing.ease);
    _this.easingYV = _Easing.Easing.out(_Easing.Easing.ease);
    _this.easingWidthV = _Easing.Easing.in(_Easing.Easing.exp);
    _this.easingHeightV = _Easing.Easing.out(_Easing.Easing.exp);
    _this.build = function () {
      var _this$durationV;
      var delayFunction = _this.getDelayFunction();
      var callback = _this.callbackV;
      var delay = _this.getDelay();
      var duration = (_this$durationV = _this.durationV) != null ? _this$durationV : 300;
      var easing = {
        easingX: _this.easingXV,
        easingY: _this.easingYV,
        easingWidth: _this.easingWidthV,
        easingHeight: _this.easingHeightV
      };
      return function () {
        var _e = [new global.Error(), -7, -27];
        var CurvedTransitionTs1 = function CurvedTransitionTs1(values) {
          return {
            initialValues: {
              originX: values.currentOriginX,
              originY: values.currentOriginY,
              width: values.currentWidth,
              height: values.currentHeight
            },
            animations: {
              originX: delayFunction(delay, (0, _animation.withTiming)(values.targetOriginX, {
                duration: duration,
                easing: easing.easingX
              })),
              originY: delayFunction(delay, (0, _animation.withTiming)(values.targetOriginY, {
                duration: duration,
                easing: easing.easingY
              })),
              width: delayFunction(delay, (0, _animation.withTiming)(values.targetWidth, {
                duration: duration,
                easing: easing.easingWidth
              })),
              height: delayFunction(delay, (0, _animation.withTiming)(values.targetHeight, {
                duration: duration,
                easing: easing.easingHeight
              }))
            },
            callback: callback
          };
        };
        CurvedTransitionTs1.__closure = {
          delayFunction: delayFunction,
          delay: delay,
          withTiming: _animation.withTiming,
          duration: duration,
          easing: easing,
          callback: callback
        };
        CurvedTransitionTs1.__workletHash = 15117983940198;
        CurvedTransitionTs1.__initData = _worklet_15117983940198_init_data;
        CurvedTransitionTs1.__stackDetails = _e;
        return CurvedTransitionTs1;
      }();
    };
    return _this;
  }
  (0, _inherits2.default)(CurvedTransition, _BaseAnimationBuilder);
  return (0, _createClass2.default)(CurvedTransition, [{
    key: "easingX",
    value: function easingX(easing) {
      if (__DEV__) {
        (0, _util.assertEasingIsWorklet)(easing);
      }
      this.easingXV = easing;
      return this;
    }
  }, {
    key: "easingY",
    value: function easingY(easing) {
      if (__DEV__) {
        (0, _util.assertEasingIsWorklet)(easing);
      }
      this.easingYV = easing;
      return this;
    }
  }, {
    key: "easingWidth",
    value: function easingWidth(easing) {
      if (__DEV__) {
        (0, _util.assertEasingIsWorklet)(easing);
      }
      this.easingWidthV = easing;
      return this;
    }
  }, {
    key: "easingHeight",
    value: function easingHeight(easing) {
      if (__DEV__) {
        (0, _util.assertEasingIsWorklet)(easing);
      }
      this.easingHeightV = easing;
      return this;
    }
  }], [{
    key: "createInstance",
    value: function createInstance() {
      return new CurvedTransition();
    }
  }, {
    key: "easingX",
    value: function easingX(easing) {
      var instance = this.createInstance();
      return instance.easingX(easing);
    }
  }, {
    key: "easingY",
    value: function easingY(easing) {
      var instance = this.createInstance();
      return instance.easingY(easing);
    }
  }, {
    key: "easingWidth",
    value: function easingWidth(easing) {
      var instance = this.createInstance();
      return instance.easingWidth(easing);
    }
  }, {
    key: "easingHeight",
    value: function easingHeight(easing) {
      var instance = this.createInstance();
      return instance.easingHeight(easing);
    }
  }]);
}(_animationBuilder.BaseAnimationBuilder);
CurvedTransition.presetName = 'CurvedTransition';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,