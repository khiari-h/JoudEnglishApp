fdf4e67b6c7584c7eb2bfc302d2df0d8
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBackgroundGradient = exports.default = void 0;
var _reactNative = require("react-native");
function cov_2dda163y11() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\ExerciseSelection\\style.js";
  var hash = "2cac0c4ac2b4818dc69550d206fc54c62687dfe1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\ExerciseSelection\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 37
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "1": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 12,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 37
          },
          end: {
            line: 5,
            column: 38
          }
        },
        loc: {
          start: {
            line: 5,
            column: 72
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2cac0c4ac2b4818dc69550d206fc54c62687dfe1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2dda163y11 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2dda163y11();
cov_2dda163y11().s[0]++;
var getBackgroundGradient = exports.getBackgroundGradient = function getBackgroundGradient(primaryColor, backgroundColor) {
  cov_2dda163y11().f[0]++;
  cov_2dda163y11().s[1]++;
  return {
    colors: [`${primaryColor}10`, backgroundColor],
    locations: [0, 0.3]
  };
};
var _default = exports.default = _reactNative.StyleSheet.create({
  headerContainer: {},
  headerGradient: {
    paddingBottom: 20
  },
  headerTitle: {},
  bonusText: {
    color: "rgba(255, 255, 255, 0.88)",
    fontSize: 12,
    textAlign: "center",
    fontWeight: "400"
  },
  scrollContent: {
    paddingTop: 20
  },
  introSection: {
    paddingHorizontal: 20,
    paddingVertical: 16
  },
  introText: {
    fontSize: 16,
    fontWeight: "500",
    textAlign: "center"
  },
  levelsContainer: {
    paddingHorizontal: 20
  },
  levelCard: Object.assign({
    backgroundColor: 'white',
    borderRadius: 16,
    marginBottom: 16
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: "#000",
      shadowOffset: {
        width: 0,
        height: 2
      },
      shadowOpacity: 0.1,
      shadowRadius: 4
    },
    android: {
      elevation: 2
    }
  })),
  cardContentStyle: {
    padding: 20
  },
  cardHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 12
  },
  levelTitleContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1
  },
  levelMainTitle: {
    fontSize: 18,
    fontWeight: '600',
    marginRight: 12
  },
  levelBadge: {
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 12
  },
  levelBadgeText: {
    color: 'white',
    fontSize: 12,
    fontWeight: '600'
  },
  fastBadge: {
    backgroundColor: "#FED7AA",
    marginLeft: 6
  },
  fastBadgeText: {
    color: "#F59E0B"
  },
  levelIcon: {
    fontSize: 24
  },
  progressContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 16,
    gap: 12
  },
  progressBar: {
    flex: 1,
    height: 6,
    backgroundColor: '#F3F4F6',
    borderRadius: 3,
    overflow: 'hidden'
  },
  progressFill: {
    height: 6,
    borderRadius: 3
  },
  progressText: {
    fontSize: 12,
    fontWeight: '500',
    minWidth: 30
  },
  startButton: {
    marginTop: 4
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,