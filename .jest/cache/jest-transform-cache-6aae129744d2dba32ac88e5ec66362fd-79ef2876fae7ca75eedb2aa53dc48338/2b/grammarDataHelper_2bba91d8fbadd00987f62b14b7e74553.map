{"version":3,"names":["_A","_interopRequireDefault","require","_A2","_B","_B2","_C","_C2","getGrammarData","exports","level","dataMap","A1","grammarA1","A2","grammarA2","B1","grammarB1","B2","grammarB2","C1","grammarC1","C2","grammarC2","getLevelColor","colors","getGrammarRulesCount","data","length","getTotalExercisesCount","reduce","total","rule","exercises","getLevelStats","rules","averageExercisesPerRule","totalRules","totalExercises"],"sources":["grammarDataHelper.js"],"sourcesContent":["// utils/grammar/grammarDataHelper.js\n\n// Import des données de grammaire par niveau\nimport grammarA1 from \"../../data/grammar/A1\";\nimport grammarA2 from \"../../data/grammar/A2\";\nimport grammarB1 from \"../../data/grammar/B1\";\nimport grammarB2 from \"../../data/grammar/B2\";\nimport grammarC1 from \"../../data/grammar/C1\";\nimport grammarC2 from \"../../data/grammar/C2\";\n\n/**\n * Récupère les données de grammaire en fonction du niveau\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {Object} Les données de grammaire pour le niveau spécifié\n */\nexport const getGrammarData = (level) => {\n  const dataMap = {\n    A1: grammarA1,\n    A2: grammarA2,\n    B1: grammarB1,\n    B2: grammarB2,\n    C1: grammarC1,\n    C2: grammarC2\n  };\n  // Retourne A1 par défaut si le niveau n'est pas reconnu\n  return dataMap[level] || grammarA1;\n};\n\n/**\n * Récupère la couleur associée à un niveau de langue\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {string} Code couleur hexadécimal pour le niveau\n */\nexport const getLevelColor = (level) => {\n  const colors = {\n    A1: \"#3b82f6\", // Bleu\n    A2: \"#8b5cf6\", // Violet\n    B1: \"#10b981\", // Vert\n    B2: \"#f59e0b\", // Orange\n    C1: \"#ef4444\", // Rouge\n    C2: \"#6366f1\", // Indigo\n  };\n  return colors[level] || \"#3b82f6\"; // Bleu par défaut\n};\n\n/**\n * Récupère le nombre total de règles de grammaire pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {number} Nombre total de règles\n */\nexport const getGrammarRulesCount = (level) => {\n  const data = getGrammarData(level);\n  return data ? data.length : 0;\n};\n\n/**\n * Récupère le nombre total d'exercices pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {number} Nombre total d'exercices\n */\nexport const getTotalExercisesCount = (level) => {\n  const data = getGrammarData(level);\n  if (!data) return 0;\n\n  return data.reduce((total, rule) => {\n    return total + (rule.exercises ? rule.exercises.length : 0);\n  }, 0);\n};\n\n/**\n * Récupère les statistiques complètes pour un niveau\n * @param {string} level - Le niveau de langue\n * @returns {Object} Statistiques du niveau\n */\nexport const getLevelStats = (level) => {\n  const data = getGrammarData(level);\n\n  if (!data) return {\n    rules: 0,\n    exercises: 0,\n    averageExercisesPerRule: 0\n  };\n\n  const totalRules = data.length;\n  const totalExercises = getTotalExercisesCount(level);\n\n  return {\n    rules: totalRules,\n    exercises: totalExercises,\n    averageExercisesPerRule: totalRules > 0 ? totalExercises / totalRules : 0\n  };\n};\n"],"mappings":";;;;;AAGA,IAAAA,EAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,GAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,EAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,GAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,EAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,GAAA,GAAAN,sBAAA,CAAAC,OAAA;AAOO,IAAMM,cAAc,GAAAC,OAAA,CAAAD,cAAA,GAAG,SAAjBA,cAAcA,CAAIE,KAAK,EAAK;EACvC,IAAMC,OAAO,GAAG;IACdC,EAAE,EAAEC,UAAS;IACbC,EAAE,EAAEC,WAAS;IACbC,EAAE,EAAEC,UAAS;IACbC,EAAE,EAAEC,WAAS;IACbC,EAAE,EAAEC,UAAS;IACbC,EAAE,EAAEC;EACN,CAAC;EAED,OAAOZ,OAAO,CAACD,KAAK,CAAC,IAAIG,UAAS;AACpC,CAAC;AAOM,IAAMW,aAAa,GAAAf,OAAA,CAAAe,aAAA,GAAG,SAAhBA,aAAaA,CAAId,KAAK,EAAK;EACtC,IAAMe,MAAM,GAAG;IACbb,EAAE,EAAE,SAAS;IACbE,EAAE,EAAE,SAAS;IACbE,EAAE,EAAE,SAAS;IACbE,EAAE,EAAE,SAAS;IACbE,EAAE,EAAE,SAAS;IACbE,EAAE,EAAE;EACN,CAAC;EACD,OAAOG,MAAM,CAACf,KAAK,CAAC,IAAI,SAAS;AACnC,CAAC;AAOM,IAAMgB,oBAAoB,GAAAjB,OAAA,CAAAiB,oBAAA,GAAG,SAAvBA,oBAAoBA,CAAIhB,KAAK,EAAK;EAC7C,IAAMiB,IAAI,GAAGnB,cAAc,CAACE,KAAK,CAAC;EAClC,OAAOiB,IAAI,GAAGA,IAAI,CAACC,MAAM,GAAG,CAAC;AAC/B,CAAC;AAOM,IAAMC,sBAAsB,GAAApB,OAAA,CAAAoB,sBAAA,GAAG,SAAzBA,sBAAsBA,CAAInB,KAAK,EAAK;EAC/C,IAAMiB,IAAI,GAAGnB,cAAc,CAACE,KAAK,CAAC;EAClC,IAAI,CAACiB,IAAI,EAAE,OAAO,CAAC;EAEnB,OAAOA,IAAI,CAACG,MAAM,CAAC,UAACC,KAAK,EAAEC,IAAI,EAAK;IAClC,OAAOD,KAAK,IAAIC,IAAI,CAACC,SAAS,GAAGD,IAAI,CAACC,SAAS,CAACL,MAAM,GAAG,CAAC,CAAC;EAC7D,CAAC,EAAE,CAAC,CAAC;AACP,CAAC;AAOM,IAAMM,aAAa,GAAAzB,OAAA,CAAAyB,aAAA,GAAG,SAAhBA,aAAaA,CAAIxB,KAAK,EAAK;EACtC,IAAMiB,IAAI,GAAGnB,cAAc,CAACE,KAAK,CAAC;EAElC,IAAI,CAACiB,IAAI,EAAE,OAAO;IAChBQ,KAAK,EAAE,CAAC;IACRF,SAAS,EAAE,CAAC;IACZG,uBAAuB,EAAE;EAC3B,CAAC;EAED,IAAMC,UAAU,GAAGV,IAAI,CAACC,MAAM;EAC9B,IAAMU,cAAc,GAAGT,sBAAsB,CAACnB,KAAK,CAAC;EAEpD,OAAO;IACLyB,KAAK,EAAEE,UAAU;IACjBJ,SAAS,EAAEK,cAAc;IACzBF,uBAAuB,EAAEC,UAAU,GAAG,CAAC,GAAGC,cAAc,GAAGD,UAAU,GAAG;EAC1E,CAAC;AACH,CAAC","ignoreList":[]}