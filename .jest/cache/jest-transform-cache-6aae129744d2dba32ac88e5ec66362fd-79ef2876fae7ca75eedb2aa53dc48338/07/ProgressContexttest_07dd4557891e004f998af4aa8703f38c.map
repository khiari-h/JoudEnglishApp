{"version":3,"names":["_getJestObj","mock","setItem","jest","fn","Promise","resolve","getItem","removeItem","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_reactNative2","_ProgressContext","_asyncStorage","_constants","_jsxRuntime","_require","TestComponent","_progress$exercises$v","_useProgress","useProgress","progress","isLoading","updateExerciseProgress","updateStats","calculateGlobalProgress","calculateLevelProgress","resetProgress","jsx","Text","testID","children","jsxs","Fragment","exercises","vocabulary","completed","stats","streak","Button","title","onPress","ComponentWithoutProvider","describe","beforeEach","useFakeTimers","AsyncStorage","mockClear","afterEach","runOnlyPendingTimers","useRealTimers","it","default","mockProgress","levels","total","mockResolvedValueOnce","JSON","stringify","render","ProgressProvider","expect","screen","getByTestId","toBeTruthy","act","runAllTimers","queryByTestId","toBeNull","level1ProgressText","props","join","toBe","streakDisplay","mockRejectedValueOnce","Error","consoleErrorSpy","spyOn","console","toHaveBeenCalledWith","any","globalProgressText","mockRestore","fireEvent","press","getByText","savedProgress","parse","calls","level1Text","newType","Object","assign","createInitialProgress","phrases","grammar","streakChildren","streakText","Array","isArray","toHaveBeenCalledTimes","STORAGE_KEYS","USER_PROGRESS","level1Children","originalError","error","toThrow"],"sources":["ProgressContext.test.js"],"sourcesContent":["import React from 'react';\nimport { render, screen, act, fireEvent } from '@testing-library/react-native';\nimport { Text, Button } from 'react-native';\nimport { ProgressProvider, useProgress, createInitialProgress } from '../../src/contexts/ProgressContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { STORAGE_KEYS } from '../../src/utils/constants';\n\n// Mock AsyncStorage\njest.mock('@react-native-async-storage/async-storage', () => ({\n  setItem: jest.fn(() => Promise.resolve()),\n  getItem: jest.fn(() => Promise.resolve(null)),\n  removeItem: jest.fn(() => Promise.resolve()),\n}));\n\n// Un composant de test pour consommer le contexte\nconst TestComponent = () => {\n  const {\n    progress,\n    isLoading,\n    updateExerciseProgress,\n    updateStats,\n    calculateGlobalProgress,\n    calculateLevelProgress,\n    resetProgress,\n  } = useProgress();\n\n  if (isLoading) {\n    return <Text testID=\"loading-status\">Loading...</Text>;\n  }\n\n  return (\n    <>\n      <Text testID=\"global-progress\">Global: {calculateGlobalProgress()}%</Text>\n      <Text testID=\"level1-progress\">Level 1: {calculateLevelProgress('1')}%</Text>\n      <Text testID=\"level-bonus-progress\">Level Bonus: {calculateLevelProgress('bonus')}%</Text>\n      <Text testID=\"vocab-level1-completed\">\n        Vocab Level 1 Completed: {progress.exercises.vocabulary['1']?.completed || 0}\n      </Text>\n      <Text testID=\"streak\">Streak: {progress.stats.streak}</Text>\n\n      <Button title=\"Update Vocab Level 1\" onPress={() => updateExerciseProgress('vocabulary', '1', 50)} />\n      <Button title=\"Update Streak\" onPress={() => updateStats({ streak: 5 })} />\n      <Button title=\"Reset Progress\" onPress={resetProgress} />\n      <Button title=\"Update Vocab Bonus\" onPress={() => updateExerciseProgress('vocabulary', 'bonus', 75)} />\n      <Button title=\"Update Grammar Bonus\" onPress={() => updateExerciseProgress('grammar', 'bonus', 50)} />\n      <Button title=\"Add New Exercise Type\" onPress={() => updateExerciseProgress('newType', '1', 25)} />\n    </>\n  );\n};\n\n// Un composant pour tester le hook en dehors du provider\nconst ComponentWithoutProvider = () => {\n  useProgress();\n  return null;\n};\n\ndescribe('ProgressContext', () => {\n  beforeEach(() => {\n    jest.useFakeTimers();\n    AsyncStorage.getItem.mockClear();\n    AsyncStorage.setItem.mockClear();\n    AsyncStorage.removeItem.mockClear();\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n  });\n\n  it('loads initial progress from AsyncStorage', async () => {\n    const mockProgress = {\n      levels: { '1': { completed: 25, total: 100 } },\n      exercises: { vocabulary: { '1': { completed: 25, total: 100 } } },\n      stats: { streak: 1 },\n    };\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify(mockProgress));\n\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    expect(screen.getByTestId('loading-status')).toBeTruthy();\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    expect(screen.queryByTestId('loading-status')).toBeNull();\n    const level1ProgressText = screen.getByTestId('level1-progress').props.children.join('');\n    expect(level1ProgressText).toBe('Level 1: 25%');\n    const streakDisplay = screen.getByTestId('streak').props.children.join('');\n    expect(streakDisplay).toBe('Streak: 1');\n  });\n\n  it('handles error during initial loading gracefully', async () => {\n    AsyncStorage.getItem.mockRejectedValueOnce(new Error('Mock AsyncStorage Error'));\n    const consoleErrorSpy = jest.spyOn(console, 'error');\n\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    expect(consoleErrorSpy).toHaveBeenCalledWith(\n      'Erreur chargement progression:',\n      expect.any(Error)\n    );\n    expect(screen.queryByTestId('loading-status')).toBeNull();\n    const globalProgressText = screen.getByTestId('global-progress').props.children.join('');\n    expect(globalProgressText).toBe('Global: 0%');\n    consoleErrorSpy.mockRestore();\n  });\n\n  it('updates exercise progress and recalculates level progress', async () => {\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    fireEvent.press(screen.getByText('Update Vocab Level 1'));\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    const savedProgress = JSON.parse(AsyncStorage.setItem.mock.calls[0][1]);\n    expect(savedProgress.exercises.vocabulary['1'].completed).toBe(50);\n    expect(savedProgress.levels['1'].completed).toBe(6);\n  });\n\n  it('updates progress for a new exercise type', async () => {\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n    \n    // Ajout d'une progression pour 'newType' au niveau 1\n    fireEvent.press(screen.getByText('Add New Exercise Type'));\n    \n    // Le calcul de la moyenne prend en compte tous les exercices existants (9) + le nouveau (1).\n    // Le calcul devrait Ãªtre: (0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 25) / 9 = 2.77..., soit 3%\n    const level1Text = screen.getByTestId('level1-progress').props.children.join('');\n    expect(level1Text).toBe('Level 1: 3%');\n    \n    await act(async () => {\n      jest.runAllTimers();\n    });\n    \n    const savedProgress = JSON.parse(AsyncStorage.setItem.mock.calls[0][1]);\n    expect(savedProgress.exercises.newType['1'].completed).toBe(25);\n  });\n\n  it('handles error during saving progress gracefully', async () => {\n    AsyncStorage.setItem.mockRejectedValueOnce(new Error('Mock AsyncStorage Save Error'));\n    const consoleErrorSpy = jest.spyOn(console, 'error');\n\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    fireEvent.press(screen.getByText('Update Streak'));\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    expect(consoleErrorSpy).toHaveBeenCalledWith(\n      'Erreur sauvegarde progression:',\n      expect.any(Error)\n    );\n    consoleErrorSpy.mockRestore();\n  });\n\n  it('calculates level progress correctly for empty exercises', async () => {\n    const mockProgress = {\n      ...createInitialProgress(),\n      exercises: { vocabulary: {}, phrases: {}, grammar: {} }\n    };\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify(mockProgress));\n  \n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n  \n    await act(async () => {\n      jest.runAllTimers();\n    });\n  \n    const level1Text = screen.getByTestId('level1-progress').props.children.join('');\n    expect(level1Text).toBe('Level 1: 0%');\n  });\n\n  it('updates stats and saves to AsyncStorage', async () => {\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    let streakChildren = screen.getByTestId('streak').props.children;\n    let streakText = Array.isArray(streakChildren) ? streakChildren.join('') : streakChildren;\n    expect(streakText).toBe('Streak: 0');\n\n    fireEvent.press(screen.getByText('Update Streak'));\n\n    streakChildren = screen.getByTestId('streak').props.children;\n    streakText = Array.isArray(streakChildren) ? streakChildren.join('') : streakChildren;\n    expect(streakText).toBe('Streak: 5');\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    expect(AsyncStorage.setItem).toHaveBeenCalledTimes(1);\n    const savedProgress = JSON.parse(AsyncStorage.setItem.mock.calls[0][1]);\n    expect(savedProgress.stats.streak).toBe(5);\n  });\n  \n  it('resets progress and removes from AsyncStorage', async () => {\n    render(\n      <ProgressProvider>\n        <TestComponent />\n      </ProgressProvider>\n    );\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    fireEvent.press(screen.getByText('Update Vocab Level 1'));\n    fireEvent.press(screen.getByText('Update Streak'));\n\n    await act(async () => {\n      jest.runAllTimers();\n    });\n\n    expect(AsyncStorage.setItem).toHaveBeenCalledTimes(1);\n\n    fireEvent.press(screen.getByText('Reset Progress'));\n\n    await act(async () => {\n      await Promise.resolve();\n    });\n\n    expect(AsyncStorage.removeItem).toHaveBeenCalledWith(STORAGE_KEYS.USER_PROGRESS);\n\n    const level1Children = screen.getByTestId('level1-progress').props.children;\n    const level1Text = Array.isArray(level1Children) ? level1Children.join('') : level1Children;\n    expect(level1Text).toBe('Level 1: 0%');\n\n    const streakChildren = screen.getByTestId('streak').props.children;\n    const streakText = Array.isArray(streakChildren) ? streakChildren.join('') : streakChildren;\n    expect(streakText).toBe('Streak: 0');\n  });\n\n  it('throws an error if useProgress is used outside of ProgressProvider', () => {\n    const originalError = console.error;\n    console.error = jest.fn();\n\n    expect(() => render(<ComponentWithoutProvider />)).toThrow(\n      'useProgress must be used within a ProgressProvider'\n    );\n\n    console.error = originalError;\n  });\n});"],"mappings":"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","ignoreList":[]}