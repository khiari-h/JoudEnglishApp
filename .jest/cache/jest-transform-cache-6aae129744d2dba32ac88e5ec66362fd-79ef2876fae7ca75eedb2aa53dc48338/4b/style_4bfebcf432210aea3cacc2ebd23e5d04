fa7c58d94f469e207d5d3e962c9f8e3f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var createStyles = function createStyles() {
  return _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      paddingBottom: 20
    },
    counterSection: {
      marginHorizontal: 16,
      marginBottom: 16,
      borderRadius: 20,
      overflow: 'hidden'
    },
    counterGradient: {
      paddingVertical: 16,
      paddingHorizontal: 24,
      alignItems: 'center',
      justifyContent: 'center'
    },
    counterBadge: Object.assign({
      backgroundColor: 'white',
      paddingHorizontal: 20,
      paddingVertical: 10,
      borderRadius: 16,
      borderWidth: 1
    }, _reactNative.Platform.select({
      ios: {
        shadowColor: '#000',
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowOpacity: 0.08,
        shadowRadius: 8
      },
      android: {
        elevation: 2
      }
    })),
    counterText: {
      fontSize: 18,
      fontWeight: '800',
      letterSpacing: 0.5
    }
  });
};
var _default = exports.default = createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY3JlYXRlU3R5bGVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImNvbnRhaW5lciIsImZsZXgiLCJwYWRkaW5nQm90dG9tIiwiY291bnRlclNlY3Rpb24iLCJtYXJnaW5Ib3Jpem9udGFsIiwibWFyZ2luQm90dG9tIiwiYm9yZGVyUmFkaXVzIiwib3ZlcmZsb3ciLCJjb3VudGVyR3JhZGllbnQiLCJwYWRkaW5nVmVydGljYWwiLCJwYWRkaW5nSG9yaXpvbnRhbCIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsImNvdW50ZXJCYWRnZSIsIk9iamVjdCIsImFzc2lnbiIsImJhY2tncm91bmRDb2xvciIsImJvcmRlcldpZHRoIiwiUGxhdGZvcm0iLCJzZWxlY3QiLCJpb3MiLCJzaGFkb3dDb2xvciIsInNoYWRvd09mZnNldCIsIndpZHRoIiwiaGVpZ2h0Iiwic2hhZG93T3BhY2l0eSIsInNoYWRvd1JhZGl1cyIsImFuZHJvaWQiLCJlbGV2YXRpb24iLCJjb3VudGVyVGV4dCIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImxldHRlclNwYWNpbmciLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsic3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVm9jYWJ1bGFyeVdvcmRTZWN0aW9uL3N0eWxlLmpzIC0gVkVSU0lPTiBBSlVTVMOJRSAoZ2FyZGUgc3R5bGVzIGNvbXB0ZXVyKVxyXG5cclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgUGxhdGZvcm0gfSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XHJcblxyXG4vKipcclxuICog4pqhIFN0eWxlcyBwb3VyIFZvY2FidWxhcnlXb3JkU2VjdGlvblxyXG4gKiBHYXJkZSBsZXMgc3R5bGVzIGR1IGNvbXB0ZXVyLCBsZSByZXN0ZSBlc3QgZGFucyBWb2NhYnVsYXJ5V29yZENhcmQgcmVmYWN0b3Jpc8OpXHJcbiAqL1xyXG5jb25zdCBjcmVhdGVTdHlsZXMgPSAoKSA9PlxyXG4gIFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gQ09OVEFJTkVSID09PT09PT09PT09PT09PT09PT1cclxuICAgIGNvbnRhaW5lcjoge1xyXG4gICAgICBmbGV4OiAxLFxyXG4gICAgICBwYWRkaW5nQm90dG9tOiAyMCxcclxuICAgIH0sXHJcbiAgICBcclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gQ09NUFRFVVIgU0VDVElPTiA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBjb3VudGVyU2VjdGlvbjoge1xyXG4gICAgICBtYXJnaW5Ib3Jpem9udGFsOiAxNixcclxuICAgICAgbWFyZ2luQm90dG9tOiAxNixcclxuICAgICAgYm9yZGVyUmFkaXVzOiAyMCxcclxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxyXG4gICAgfSxcclxuICAgIGNvdW50ZXJHcmFkaWVudDoge1xyXG4gICAgICBwYWRkaW5nVmVydGljYWw6IDE2LFxyXG4gICAgICBwYWRkaW5nSG9yaXpvbnRhbDogMjQsXHJcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXHJcbiAgICB9LFxyXG4gICAgXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IEJBREdFIENPTVBURVVSID09PT09PT09PT09PT09PT09PT1cclxuICAgIGNvdW50ZXJCYWRnZToge1xyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXHJcbiAgICAgIHBhZGRpbmdIb3Jpem9udGFsOiAyMCxcclxuICAgICAgcGFkZGluZ1ZlcnRpY2FsOiAxMCxcclxuICAgICAgYm9yZGVyUmFkaXVzOiAxNixcclxuICAgICAgYm9yZGVyV2lkdGg6IDEsXHJcbiAgICAgIC8vIE9tYnJlIHN1YnRpbGVcclxuICAgICAgLi4uUGxhdGZvcm0uc2VsZWN0KHtcclxuICAgICAgICBpb3M6IHtcclxuICAgICAgICAgIHNoYWRvd0NvbG9yOiAnIzAwMCcsXHJcbiAgICAgICAgICBzaGFkb3dPZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogMiB9LFxyXG4gICAgICAgICAgc2hhZG93T3BhY2l0eTogMC4wOCxcclxuICAgICAgICAgIHNoYWRvd1JhZGl1czogOCxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFuZHJvaWQ6IHtcclxuICAgICAgICAgIGVsZXZhdGlvbjogMixcclxuICAgICAgICB9LFxyXG4gICAgICB9KSxcclxuICAgIH0sXHJcbiAgICBjb3VudGVyVGV4dDoge1xyXG4gICAgICBmb250U2l6ZTogMTgsXHJcbiAgICAgIGZvbnRXZWlnaHQ6ICc4MDAnLFxyXG4gICAgICBsZXR0ZXJTcGFjaW5nOiAwLjUsXHJcbiAgICB9LFxyXG4gIH0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlU3R5bGVzOyJdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQU1BLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFZQSxDQUFBO0VBQUEsT0FDaEJDLHVCQUFVLENBQUNDLE1BQU0sQ0FBQztJQUVoQkMsU0FBUyxFQUFFO01BQ1RDLElBQUksRUFBRSxDQUFDO01BQ1BDLGFBQWEsRUFBRTtJQUNqQixDQUFDO0lBR0RDLGNBQWMsRUFBRTtNQUNkQyxnQkFBZ0IsRUFBRSxFQUFFO01BQ3BCQyxZQUFZLEVBQUUsRUFBRTtNQUNoQkMsWUFBWSxFQUFFLEVBQUU7TUFDaEJDLFFBQVEsRUFBRTtJQUNaLENBQUM7SUFDREMsZUFBZSxFQUFFO01BQ2ZDLGVBQWUsRUFBRSxFQUFFO01BQ25CQyxpQkFBaUIsRUFBRSxFQUFFO01BQ3JCQyxVQUFVLEVBQUUsUUFBUTtNQUNwQkMsY0FBYyxFQUFFO0lBQ2xCLENBQUM7SUFHREMsWUFBWSxFQUFBQyxNQUFBLENBQUFDLE1BQUE7TUFDVkMsZUFBZSxFQUFFLE9BQU87TUFDeEJOLGlCQUFpQixFQUFFLEVBQUU7TUFDckJELGVBQWUsRUFBRSxFQUFFO01BQ25CSCxZQUFZLEVBQUUsRUFBRTtNQUNoQlcsV0FBVyxFQUFFO0lBQUMsR0FFWEMscUJBQVEsQ0FBQ0MsTUFBTSxDQUFDO01BQ2pCQyxHQUFHLEVBQUU7UUFDSEMsV0FBVyxFQUFFLE1BQU07UUFDbkJDLFlBQVksRUFBRTtVQUFFQyxLQUFLLEVBQUUsQ0FBQztVQUFFQyxNQUFNLEVBQUU7UUFBRSxDQUFDO1FBQ3JDQyxhQUFhLEVBQUUsSUFBSTtRQUNuQkMsWUFBWSxFQUFFO01BQ2hCLENBQUM7TUFDREMsT0FBTyxFQUFFO1FBQ1BDLFNBQVMsRUFBRTtNQUNiO0lBQ0YsQ0FBQyxDQUFDLENBQ0g7SUFDREMsV0FBVyxFQUFFO01BQ1hDLFFBQVEsRUFBRSxFQUFFO01BQ1pDLFVBQVUsRUFBRSxLQUFLO01BQ2pCQyxhQUFhLEVBQUU7SUFDakI7RUFDRixDQUFDLENBQUM7QUFBQTtBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxDQUFBQyxPQUFBLEdBRVV0QyxZQUFZIiwiaWdub3JlTGlzdCI6W119