{"version":3,"names":["_reactNative","require","_HeroCard","_interopRequireDefault","_RevealButton","_SpellingInput","_HomophoneChoices","_SpellingFeedback","_style","_jsxRuntime","SpellingCard","_ref","exercise","userInput","showHint","showFeedback","isCorrect","isCompleted","onChangeText","onToggleHint","levelColor","jsx","View","style","styles","card","children","errorContainer","Text","errorText","renderExerciseContent","type","default","content","wordToCorrect","fontSize","showUnderline","rule","homophoneHeader","instruction","fallbackContainer","renderInputArea","sentence","choices","selectedChoice","onSelectChoice","disabled","value","ScrollView","scrollView","showsVerticalScrollIndicator","jsxs","completedCard","completedBadge","completedText","exerciseContent","inputSection","hint","hintSection","isRevealed","revealedContent","revealText","hideText","onToggle","feedbackSection","correctAnswer","explanation","_default","exports"],"sources":["index.js"],"sourcesContent":["// SpellingCard/index.js - VERSION PROPRE\r\n\r\nimport { View, Text, ScrollView } from \"react-native\";\r\n\r\nimport HeroCard from \"../../../../components/ui/HeroCard\";\r\nimport RevealButton from \"../../../../components/ui/RevealButton\";\r\nimport SpellingInput from \"../SpellingInput\";\r\nimport HomophoneChoices from \"../HomophoneChoices\";\r\nimport SpellingFeedback from \"../SpellingFeedback\";\r\n\r\nimport styles from \"./style\";\r\n\r\nconst SpellingCard = ({\r\n  exercise,\r\n  userInput,\r\n  showHint,\r\n  showFeedback,\r\n  isCorrect,\r\n  isCompleted,\r\n  onChangeText,\r\n  onToggleHint,\r\n  levelColor,\r\n}) => {\r\n  \r\n  if (!exercise) {\r\n    return (\r\n      <View style={styles.card}>\r\n        <View style={styles.errorContainer}>\r\n          <Text style={styles.errorText}>Exercice non trouvé</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const renderExerciseContent = () => {\r\n    switch (exercise.type) {\r\n      case \"correction\":\r\n        return (\r\n          <HeroCard \r\n            content={exercise.wordToCorrect}\r\n            fontSize={32}\r\n            levelColor={levelColor}\r\n            showUnderline\r\n          />\r\n        );\r\n        \r\n      case \"spelling_rule\":\r\n        return (\r\n          <HeroCard \r\n            content={exercise.rule}\r\n            fontSize={18}\r\n            levelColor={levelColor}\r\n            showUnderline={false}\r\n          />\r\n        );\r\n        \r\n      case \"homophones\":\r\n        return (\r\n          <View style={styles.homophoneHeader}>\r\n            <Text style={styles.instruction}>{exercise.instruction}</Text>\r\n          </View>\r\n        );\r\n        \r\n      default:\r\n        return (\r\n          <View style={styles.fallbackContainer}>\r\n            <Text style={styles.instruction}>\r\n              {exercise.instruction || \"Instructions non disponibles\"}\r\n            </Text>\r\n          </View>\r\n        );\r\n    }\r\n  };\r\n\r\n  const renderInputArea = () => {\r\n    if (exercise.type === \"homophones\") {\r\n      return (\r\n        <HomophoneChoices\r\n          sentence={exercise.sentence}\r\n          choices={exercise.choices || []}\r\n          selectedChoice={userInput}\r\n          onSelectChoice={onChangeText}\r\n          disabled={showFeedback}\r\n          levelColor={levelColor}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <SpellingInput\r\n          value={userInput}\r\n          onChangeText={onChangeText}\r\n          disabled={showFeedback}\r\n          levelColor={levelColor}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\r\n      <View style={[\r\n        styles.card,\r\n        isCompleted && styles.completedCard\r\n      ]}>\r\n        \r\n        {isCompleted && (\r\n          <View style={styles.completedBadge}>\r\n            <Text style={styles.completedText}>✓ Complété</Text>\r\n          </View>\r\n        )}\r\n\r\n        <View style={styles.exerciseContent}>\r\n          {renderExerciseContent()}\r\n        </View>\r\n\r\n        <View style={styles.inputSection}>\r\n          {renderInputArea()}\r\n        </View>\r\n\r\n        {exercise.hint && (\r\n          <View style={styles.hintSection}>\r\n            <RevealButton\r\n              isRevealed={showHint}\r\n              revealedContent={exercise.hint}\r\n              revealText=\"Afficher l'indice\"\r\n              hideText=\"Masquer l'indice\"\r\n              onToggle={onToggleHint}\r\n              levelColor={levelColor}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        {showFeedback && (\r\n          <View style={styles.feedbackSection}>\r\n            <SpellingFeedback\r\n              isCorrect={isCorrect}\r\n              correctAnswer={exercise.correctAnswer}\r\n              explanation={exercise.explanation}\r\n              levelColor={levelColor}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default SpellingCard;"],"mappings":"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","ignoreList":[]}