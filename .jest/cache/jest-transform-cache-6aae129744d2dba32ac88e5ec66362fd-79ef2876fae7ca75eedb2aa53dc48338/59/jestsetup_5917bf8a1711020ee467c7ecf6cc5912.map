{"version":3,"names":["_getJestObj","mock","require","useFonts","isLoaded","impactAsync","jest","fn","Reanimated","default","call","get","addEventListener","removeEventListener","RN","requireActual","Object","assign","Animated","Value","interpolate","config","outputRange","addListener","removeListener","removeAllListeners","stopAnimation","resetAnimation","setValue","timing","start","callback","finished","StatusBar","setBarStyle","setBackgroundColor","_reactNative","_require","NativeModules","SettingsManager","settings","AppleLocale","setImmediate","global","_len","arguments","length","args","Array","_key","setTimeout","apply","concat","clearImmediate","id","clearTimeout"],"sources":["jest.setup.js"],"sourcesContent":["// jest.setup.js\n\nimport { NativeModules } from 'react-native';\n\n// --- Mocks tiers ---\n\n// Mock AsyncStorage (souvent utilisé dans RN)\njest.mock('@react-native-async-storage/async-storage', () =>\n  require('@react-native-async-storage/async-storage/jest/async-storage-mock')\n);\n\n// Mock Expo Font (si utilisé)\njest.mock('expo-font', () => ({\n  useFonts: () => [true],\n  isLoaded: () => true,\n}));\n\n// Mock Expo Haptics (vibrations)\njest.mock('expo-haptics', () => ({\n  impactAsync: jest.fn(),\n}));\n\n// Mock react-native-reanimated (très fréquent)\njest.mock('react-native-reanimated', () => {\n  const Reanimated = require('react-native-reanimated/mock');\n\n  // Fix pour éviter certaines erreurs\n  Reanimated.default.call = () => {};\n\n  return Reanimated;\n});\n\n// --- Mocks internes React Native ---\n\n// Mock des Settings (évite TurboModuleRegistry warnings)\njest.mock('react-native/Libraries/Settings/Settings', () => ({\n  get: jest.fn(() => 'light'),\n  addEventListener: jest.fn(),\n  removeEventListener: jest.fn(),\n}));\n\n// Simule la locale pour iOS\nNativeModules.SettingsManager = NativeModules.SettingsManager || {\n  settings: { AppleLocale: 'en_US' },\n};\n\n// --- Polyfills global (parfois requis) ---\n\nif (typeof setImmediate === 'undefined') {\n  global.setImmediate = (fn, ...args) => setTimeout(fn, 0, ...args);\n}\nif (typeof clearImmediate === 'undefined') {\n  global.clearImmediate = (id) => clearTimeout(id);\n}\n\n// --- Mock global react-native (complet) ---\njest.mock('react-native', () => {\n  const RN = jest.requireActual('react-native');\n\n  return {\n    ...RN,\n\n    // ✅ Mock complet d'Animated\n    Animated: {\n      ...RN.Animated,\n      Value: jest.fn(() => ({\n        interpolate: jest.fn(config => config.outputRange[0]),\n        addListener: jest.fn(),\n        removeListener: jest.fn(),\n        removeAllListeners: jest.fn(),\n        stopAnimation: jest.fn(),\n        resetAnimation: jest.fn(),\n        setValue: jest.fn(),\n      })),\n      timing: jest.fn(() => ({\n        start: jest.fn(callback => {\n          if (callback) {\n            callback({ finished: true });\n          }\n        }),\n      })),\n    },\n\n    // ✅ Mock StatusBar (pour tests `toHaveBeenCalledWith`)\n    StatusBar: {\n      setBarStyle: jest.fn(),\n      setBackgroundColor: jest.fn(),\n    },\n  };\n});\n"],"mappings":"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","ignoreList":[]}