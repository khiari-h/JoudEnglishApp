45fba8e376eb2b3e9d81a33091c1297a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _react = require("react");
var _style = _interopRequireDefault(require("./style"));
var _jsxRuntime = require("react/jsx-runtime");
var SpellingInput = function SpellingInput(_ref) {
  var _ref$value = _ref.value,
    value = _ref$value === void 0 ? "" : _ref$value,
    onChangeText = _ref.onChangeText,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$levelColor = _ref.levelColor,
    levelColor = _ref$levelColor === void 0 ? "#3b82f6" : _ref$levelColor,
    _ref$placeholder = _ref.placeholder,
    placeholder = _ref$placeholder === void 0 ? "Tapez votre r√©ponse ici..." : _ref$placeholder,
    _ref$testID = _ref.testID,
    testID = _ref$testID === void 0 ? "spelling-input" : _ref$testID;
  var styles = (0, _style.default)(levelColor);
  if (!onChangeText) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.container,
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.errorText,
        children: "Erreur: fonction onChangeText manquante"
      })
    });
  }
  var handleChangeText = (0, _react.useCallback)(function (text) {
    onChangeText(text);
  }, [onChangeText]);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.label,
      children: "Votre r\xE9ponse :"
    }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
      testID: testID,
      style: [styles.input, disabled && styles.disabledInput, {
        borderColor: disabled ? "#e2e8f0" : levelColor
      }],
      value: value,
      onChangeText: handleChangeText,
      placeholder: placeholder,
      placeholderTextColor: "#94a3b8",
      autoCapitalize: "none",
      autoCorrect: false,
      editable: !disabled,
      selectTextOnFocus: !disabled,
      returnKeyType: "done",
      blurOnSubmit: true,
      accessible: true,
      accessibilityLabel: "Zone de saisie pour votre r\xE9ponse",
      accessibilityHint: "Tapez votre r\xE9ponse \xE0 l'exercice d'orthographe"
    })]
  });
};
var _default = exports.default = SpellingInput;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX3N0eWxlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9qc3hSdW50aW1lIiwiU3BlbGxpbmdJbnB1dCIsIl9yZWYiLCJfcmVmJHZhbHVlIiwidmFsdWUiLCJvbkNoYW5nZVRleHQiLCJfcmVmJGRpc2FibGVkIiwiZGlzYWJsZWQiLCJfcmVmJGxldmVsQ29sb3IiLCJsZXZlbENvbG9yIiwiX3JlZiRwbGFjZWhvbGRlciIsInBsYWNlaG9sZGVyIiwiX3JlZiR0ZXN0SUQiLCJ0ZXN0SUQiLCJzdHlsZXMiLCJjcmVhdGVTdHlsZXMiLCJqc3giLCJWaWV3Iiwic3R5bGUiLCJjb250YWluZXIiLCJjaGlsZHJlbiIsIlRleHQiLCJlcnJvclRleHQiLCJoYW5kbGVDaGFuZ2VUZXh0IiwidXNlQ2FsbGJhY2siLCJ0ZXh0IiwianN4cyIsImxhYmVsIiwiVGV4dElucHV0IiwiaW5wdXQiLCJkaXNhYmxlZElucHV0IiwiYm9yZGVyQ29sb3IiLCJwbGFjZWhvbGRlclRleHRDb2xvciIsImF1dG9DYXBpdGFsaXplIiwiYXV0b0NvcnJlY3QiLCJlZGl0YWJsZSIsInNlbGVjdFRleHRPbkZvY3VzIiwicmV0dXJuS2V5VHlwZSIsImJsdXJPblN1Ym1pdCIsImFjY2Vzc2libGUiLCJhY2Nlc3NpYmlsaXR5TGFiZWwiLCJhY2Nlc3NpYmlsaXR5SGludCIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTcGVsbGluZ0lucHV0L2luZGV4LmpzIC0gVkVSU0lPTiBTQU5TIERFQlVHXHJcblxyXG5pbXBvcnQgeyBWaWV3LCBUZXh0SW5wdXQsIFRleHQgfSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XHJcbmltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBjcmVhdGVTdHlsZXMgZnJvbSBcIi4vc3R5bGVcIjtcclxuXHJcbmNvbnN0IFNwZWxsaW5nSW5wdXQgPSAoeyBcclxuICB2YWx1ZSA9IFwiXCIsIFxyXG4gIG9uQ2hhbmdlVGV4dCwgXHJcbiAgZGlzYWJsZWQgPSBmYWxzZSwgXHJcbiAgbGV2ZWxDb2xvciA9IFwiIzNiODJmNlwiLFxyXG4gIHBsYWNlaG9sZGVyID0gXCJUYXBleiB2b3RyZSByw6lwb25zZSBpY2kuLi5cIixcclxuICB0ZXN0SUQgPSBcInNwZWxsaW5nLWlucHV0XCJcclxufSkgPT4ge1xyXG4gIGNvbnN0IHN0eWxlcyA9IGNyZWF0ZVN0eWxlcyhsZXZlbENvbG9yKTtcclxuXHJcbiAgaWYgKCFvbkNoYW5nZVRleHQpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cclxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmVycm9yVGV4dH0+XHJcbiAgICAgICAgICBFcnJldXI6IGZvbmN0aW9uIG9uQ2hhbmdlVGV4dCBtYW5xdWFudGVcclxuICAgICAgICA8L1RleHQ+XHJcbiAgICAgIDwvVmlldz5cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBjb25zdCBoYW5kbGVDaGFuZ2VUZXh0ID0gdXNlQ2FsbGJhY2soKHRleHQpID0+IHtcclxuICAgIG9uQ2hhbmdlVGV4dCh0ZXh0KTtcclxuICB9LCBbb25DaGFuZ2VUZXh0XSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XHJcbiAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMubGFiZWx9PlZvdHJlIHLDqXBvbnNlIDo8L1RleHQ+XHJcbiAgICAgIFxyXG4gICAgICA8VGV4dElucHV0XHJcbiAgICAgICAgdGVzdElEPXt0ZXN0SUR9XHJcbiAgICAgICAgc3R5bGU9e1tcclxuICAgICAgICAgIHN0eWxlcy5pbnB1dCxcclxuICAgICAgICAgIGRpc2FibGVkICYmIHN0eWxlcy5kaXNhYmxlZElucHV0LFxyXG4gICAgICAgICAgeyBib3JkZXJDb2xvcjogZGlzYWJsZWQgPyBcIiNlMmU4ZjBcIiA6IGxldmVsQ29sb3IgfVxyXG4gICAgICAgIF19XHJcbiAgICAgICAgdmFsdWU9e3ZhbHVlfVxyXG4gICAgICAgIG9uQ2hhbmdlVGV4dD17aGFuZGxlQ2hhbmdlVGV4dH1cclxuICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XHJcbiAgICAgICAgcGxhY2Vob2xkZXJUZXh0Q29sb3I9XCIjOTRhM2I4XCJcclxuICAgICAgICBhdXRvQ2FwaXRhbGl6ZT1cIm5vbmVcIlxyXG4gICAgICAgIGF1dG9Db3JyZWN0PXtmYWxzZX1cclxuICAgICAgICBlZGl0YWJsZT17IWRpc2FibGVkfVxyXG4gICAgICAgIHNlbGVjdFRleHRPbkZvY3VzPXshZGlzYWJsZWR9XHJcbiAgICAgICAgcmV0dXJuS2V5VHlwZT1cImRvbmVcIlxyXG4gICAgICAgIGJsdXJPblN1Ym1pdFxyXG4gICAgICAgIGFjY2Vzc2libGVcclxuICAgICAgICBhY2Nlc3NpYmlsaXR5TGFiZWw9XCJab25lIGRlIHNhaXNpZSBwb3VyIHZvdHJlIHLDqXBvbnNlXCJcclxuICAgICAgICBhY2Nlc3NpYmlsaXR5SGludD1cIlRhcGV6IHZvdHJlIHLDqXBvbnNlIMOgIGwnZXhlcmNpY2UgZCdvcnRob2dyYXBoZVwiXHJcbiAgICAgIC8+XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNwZWxsaW5nSW5wdXQ7Il0sIm1hcHBpbmdzIjoiOzs7OztBQUVBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUgsT0FBQTtBQUFtQyxJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFFbkMsSUFBTUssYUFBYSxHQUFHLFNBQWhCQSxhQUFhQSxDQUFBQyxJQUFBLEVBT2I7RUFBQSxJQUFBQyxVQUFBLEdBQUFELElBQUEsQ0FOSkUsS0FBSztJQUFM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