{"version":3,"names":["_ProgressCard","_interopRequireDefault","require","_readingStats","_propTypes","_jsxRuntime","cov_1yux1gw934","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","ReadingProgress","_ref","readingData","completedQuestions","levelColor","_ref$expanded","expanded","onToggleExpand","onExercisePress","getDataArray","Array","isArray","exercises","texts","passages","readings","items","dataArray","totalQuestionsCount","calculateTotalQuestions","completedQuestionsCount","calculateCompletedQuestionsCount","totalProgress","calculateTotalProgress","exerciseProgressData","calculateExerciseProgress","formattedExerciseData","map","exercise","title","completed","total","totalQuestions","progress","jsx","default","unit","expandable","categoryData","onCategoryPress","propTypes","PropTypes","oneOfType","array","shape","isRequired","object","string","bool","func","_default","exports"],"sources":["index.js"],"sourcesContent":["// ReadingProgress/index.js - VERSION CORRIGÃ‰E AVEC DÃ‰TECTION AUTO\r\n\r\nimport ProgressCard from \"../../../../components/ui/ProgressCard\";\r\nimport {\r\n  calculateTotalQuestions,\r\n  calculateCompletedQuestionsCount,\r\n  calculateTotalProgress,\r\n  calculateExerciseProgress,\r\n} from \"../../../../utils/reading/readingStats.js\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * ðŸ“Š ReadingProgress - Version CorrigÃ©e avec dÃ©tection automatique\r\n * âœ… DÃ©tecte automatiquement la structure des donnÃ©es\r\n * âœ… GÃ¨re exercises, texts, passages, etc.\r\n */\r\nconst ReadingProgress = ({\r\n  readingData,\r\n  completedQuestions,\r\n  levelColor,\r\n  expanded = false,\r\n  onToggleExpand,\r\n  onExercisePress,\r\n}) => {\r\n  \r\n  // âœ… DÃ‰TECTION AUTOMATIQUE de la structure\r\n  const getDataArray = () => {\r\n    if (!readingData) return [];\r\n    \r\n    // Si c'est dÃ©jÃ  un tableau directement\r\n    if (Array.isArray(readingData)) {\r\n      return readingData;\r\n    }\r\n    \r\n    // Si c'est un objet avec diffÃ©rentes propriÃ©tÃ©s possibles\r\n    if (typeof readingData === 'object') {\r\n      return readingData.exercises || \r\n             readingData.texts || \r\n             readingData.passages || \r\n             readingData.readings || \r\n             readingData.items || \r\n             [];\r\n    }\r\n    \r\n    return [];\r\n  };\r\n\r\n  const dataArray = getDataArray();\r\n  \r\n  // âœ… UTILISE la vraie structure dÃ©tectÃ©e\r\n  const totalQuestionsCount = calculateTotalQuestions(dataArray);\r\n  const completedQuestionsCount = calculateCompletedQuestionsCount(completedQuestions);\r\n  const totalProgress = calculateTotalProgress(dataArray, completedQuestions);\r\n  const exerciseProgressData = calculateExerciseProgress(dataArray, completedQuestions);\r\n\r\n  // Transformation pour le format ProgressCard\r\n  const formattedExerciseData = exerciseProgressData.map((exercise) => ({\r\n    title: exercise.title,\r\n    completed: exercise.completedQuestions,\r\n    total: exercise.totalQuestions,\r\n    progress: exercise.progress,\r\n  }));\r\n\r\n  return (\r\n    <ProgressCard\r\n      title=\"Progression\" // âœ… Titre uniforme\r\n      progress={totalProgress}\r\n      completed={completedQuestionsCount}\r\n      total={totalQuestionsCount}\r\n      unit=\"questions\"\r\n      levelColor={levelColor}\r\n      expandable\r\n      expanded={expanded}\r\n      onToggleExpand={onToggleExpand}\r\n      categoryData={formattedExerciseData}\r\n      onCategoryPress={onExercisePress}\r\n    />\r\n  );\r\n};\r\n\r\n// âœ… Ajout de la validation des props\r\nReadingProgress.propTypes = {\r\n  // 'readingData' est manquant dans la validation\r\n  readingData: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.shape({\r\n      exercises: PropTypes.array,\r\n      texts: PropTypes.array,\r\n      passages: PropTypes.array,\r\n      readings: PropTypes.array,\r\n      items: PropTypes.array,\r\n    })\r\n  ]).isRequired,\r\n  // 'completedQuestions' est manquant dans la validation\r\n  completedQuestions: PropTypes.object,\r\n  // 'levelColor' est manquant dans la validation\r\n  levelColor: PropTypes.string,\r\n  // 'expanded' est manquant dans la validation\r\n  expanded: PropTypes.bool,\r\n  // 'onToggleExpand' est manquant dans la validation\r\n  onToggleExpand: PropTypes.func,\r\n  // 'onExercisePress' est manquant dans la validation\r\n  onExercisePress: PropTypes.func,\r\n};\r\n\r\nexport default ReadingProgress;"],"mappings":";;;;;AAEA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AAMA,IAAAE,UAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAmC,IAAAG,WAAA,GAAAH,OAAA;AAAA,SAAAI,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,eAAA;IAAArB,IAAA;EAAA;EAAA,IAAAsB,QAAA,GAAArB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAmB,QAAA,CAAAvB,IAAA,KAAAuB,QAAA,CAAAvB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAsB,QAAA,CAAAvB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAmB,cAAA,GAAAD,QAAA,CAAAvB,IAAA;EAAA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAyB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAzB,cAAA;AAAAA,cAAA,GAAAoB,CAAA;AAOnC,IAAMM,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAOf;EAAA,IANJC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IACXC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;IAClBC,UAAU,GAAAH,IAAA,CAAVG,UAAU;IAAAC,aAAA,GAAAJ,IAAA,CACVK,QAAQ;IAARA,QAAQ,GAAAD,aAAA,eAAA/B,cAAA,GAAAsB,CAAA,UAAG,KAAK,IAAAS,aAAA;IAChBE,cAAc,GAAAN,IAAA,CAAdM,cAAc;IACdC,eAAe,GAAAP,IAAA,CAAfO,eAAe;EAAAlC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAIf,IAAMe,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAAAnC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACzB,IAAI,CAACQ,WAAW,EAAE;MAAA5B,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA,OAAO,EAAE;IAAA,CAAC;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAG5B,IAAIgB,KAAK,CAACC,OAAO,CAACT,WAAW,CAAC,EAAE;MAAA5B,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC9B,OAAOQ,WAAW;IACpB,CAAC;MAAA5B,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAGD,IAAI,OAAOQ,WAAW,KAAK,QAAQ,EAAE;MAAA5B,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACnC,OAAO,CAAApB,cAAA,GAAAsB,CAAA,UAAAM,WAAW,CAACU,SAAS,MAAAtC,cAAA,GAAAsB,CAAA,UACrBM,WAAW,CAACW,KAAK,MAAAvC,cAAA,GAAAsB,CAAA,UACjBM,WAAW,CAACY,QAAQ,MAAAxC,cAAA,GAAAsB,CAAA,UACpBM,WAAW,CAACa,QAAQ,MAAAzC,cAAA,GAAAsB,CAAA,UACpBM,WAAW,CAACc,KAAK,MAAA1C,cAAA,GAAAsB,CAAA,UACjB,EAAE;IACX,CAAC;MAAAtB,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,OAAO,EAAE;EACX,CAAC;EAED,IAAMuB,SAAS,IAAA3C,cAAA,GAAAoB,CAAA,OAAGe,YAAY,CAAC,CAAC;EAGhC,IAAMS,mBAAmB,IAAA5C,cAAA,GAAAoB,CAAA,QAAG,IAAAyB,qCAAuB,EAACF,SAAS,CAAC;EAC9D,IAAMG,uBAAuB,IAAA9C,cAAA,GAAAoB,CAAA,QAAG,IAAA2B,8CAAgC,EAAClB,kBAAkB,CAAC;EACpF,IAAMmB,aAAa,IAAAhD,cAAA,GAAAoB,CAAA,QAAG,IAAA6B,oCAAsB,EAACN,SAAS,EAAEd,kBAAkB,CAAC;EAC3E,IAAMqB,oBAAoB,IAAAlD,cAAA,GAAAoB,CAAA,QAAG,IAAA+B,uCAAyB,EAACR,SAAS,EAAEd,kBAAkB,CAAC;EAGrF,IAAMuB,qBAAqB,IAAApD,cAAA,GAAAoB,CAAA,QAAG8B,oBAAoB,CAACG,GAAG,CAAC,UAACC,QAAQ,EAAM;IAAAtD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAA;MACpEmC,KAAK,EAAED,QAAQ,CAACC,KAAK;MACrBC,SAAS,EAAEF,QAAQ,CAACzB,kBAAkB;MACtC4B,KAAK,EAAEH,QAAQ,CAACI,cAAc;MAC9BC,QAAQ,EAAEL,QAAQ,CAACK;IACrB,CAAC;EAAD,CAAE,CAAC;EAAC3D,cAAA,GAAAoB,CAAA;EAEJ,OACE,IAAArB,WAAA,CAAA6D,GAAA,EAAClE,aAAA,CAAAmE,OAAY;IACXN,KAAK,EAAC,aAAa;IACnBI,QAAQ,EAAEX,aAAc;IACxBQ,SAAS,EAAEV,uBAAwB;IACnCW,KAAK,EAAEb,mBAAoB;IAC3BkB,IAAI,EAAC,WAAW;IAChBhC,UAAU,EAAEA,UAAW;IACvBiC,UAAU;IACV/B,QAAQ,EAAEA,QAAS;IACnBC,cAAc,EAAEA,cAAe;IAC/B+B,YAAY,EAAEZ,qBAAsB;IACpCa,eAAe,EAAE/B;EAAgB,CAClC,CAAC;AAEN,CAAC;AAAClC,cAAA,GAAAoB,CAAA;AAGFM,eAAe,CAACwC,SAAS,GAAG;EAE1BtC,WAAW,EAAEuC,kBAAS,CAACC,SAAS,CAAC,CAC/BD,kBAAS,CAACE,KAAK,EACfF,kBAAS,CAACG,KAAK,CAAC;IACdhC,SAAS,EAAE6B,kBAAS,CAACE,KAAK;IAC1B9B,KAAK,EAAE4B,kBAAS,CAACE,KAAK;IACtB7B,QAAQ,EAAE2B,kBAAS,CAACE,KAAK;IACzB5B,QAAQ,EAAE0B,kBAAS,CAACE,KAAK;IACzB3B,KAAK,EAAEyB,kBAAS,CAACE;EACnB,CAAC,CAAC,CACH,CAAC,CAACE,UAAU;EAEb1C,kBAAkB,EAAEsC,kBAAS,CAACK,MAAM;EAEpC1C,UAAU,EAAEqC,kBAAS,CAACM,MAAM;EAE5BzC,QAAQ,EAAEmC,kBAAS,CAACO,IAAI;EAExBzC,cAAc,EAAEkC,kBAAS,CAACQ,IAAI;EAE9BzC,eAAe,EAAEiC,kBAAS,CAACQ;AAC7B,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAhB,OAAA,GAEanC,eAAe","ignoreList":[]}