{"version":3,"names":["_getJestObj","mock","getItem","jest","fn","setItem","_interopRequireDefault","require","_asyncToGenerator2","_reactHooks","_asyncStorage","_useActivityMetrics","_require","describe","beforeEach","clearAllMocks","spyOn","Date","mockReturnValue","prototype","afterEach","restoreAllMocks","it","default","AsyncStorage","mockResolvedValueOnce","_renderHook","renderHook","useActivityMetrics","result","waitForNextUpdate","expect","current","currentStreak","toBe","todayMinutes","formattedTime","_renderHook2","toHaveBeenCalledWith","mockResolvedValue","_renderHook3","_renderHook4","act","startSession","_renderHook5","endSession","_renderHook6","not","any","String","_renderHook7","updateStreak","_renderHook8","_renderHook9","initialStreak","_renderHook0","testCases","minutes","expected","testCase","toString","_renderHook1","testResult","waitForUpdate","streak","_renderHook10","streakTrend","mockRejectedValue","Error","_renderHook11","_renderHook12"],"sources":["useActivityMetrics.test.js"],"sourcesContent":["// __tests__/hooks/useActivityMetrics.test.js\nimport { renderHook, act } from '@testing-library/react-hooks';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useActivityMetrics from '../../src/hooks/useActivityMetrics';\n\n// Mock AsyncStorage\njest.mock('@react-native-async-storage/async-storage', () => ({\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n}));\n\ndescribe('useActivityMetrics', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    // Mock Date.now() pour des tests prévisibles\n    jest.spyOn(Date, 'now').mockReturnValue(1640995200000); // 2022-01-01 00:00:00\n    jest.spyOn(Date.prototype, 'toDateString').mockReturnValue('Sat Jan 01 2022');\n  });\n\n  afterEach(() => {\n    jest.restoreAllMocks();\n  });\n\n  describe('Chargement initial', () => {\n    it('devrait charger les métriques depuis AsyncStorage', async () => {\n      AsyncStorage.getItem\n        .mockResolvedValueOnce('5') // current_streak\n        .mockResolvedValueOnce('30') // today_minutes\n        .mockResolvedValueOnce('Sat Jan 01 2022'); // last_time_date\n\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n\n      await waitForNextUpdate();\n\n      expect(result.current.currentStreak).toBe(5);\n      expect(result.current.todayMinutes).toBe(30);\n      expect(result.current.formattedTime).toBe('30min');\n    });\n\n    it('devrait réinitialiser les minutes si c\\'est un nouveau jour', async () => {\n      AsyncStorage.getItem\n        .mockResolvedValueOnce('3') // current_streak\n        .mockResolvedValueOnce('45') // today_minutes\n        .mockResolvedValueOnce('Fri Dec 31 2021'); // last_time_date (hier)\n\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n\n      await waitForNextUpdate();\n\n      expect(result.current.currentStreak).toBe(3);\n      expect(result.current.todayMinutes).toBe(0);\n      expect(AsyncStorage.setItem).toHaveBeenCalledWith('today_minutes', '0');\n      expect(AsyncStorage.setItem).toHaveBeenCalledWith('last_time_date', 'Sat Jan 01 2022');\n    });\n\n    it('devrait utiliser des valeurs par défaut si aucune donnée n\\'est stockée', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n\n      await waitForNextUpdate();\n\n      expect(result.current.currentStreak).toBe(0);\n      expect(result.current.todayMinutes).toBe(0);\n      expect(result.current.formattedTime).toBe('0min');\n    });\n  });\n\n  describe('Gestion des sessions', () => {\n    it('devrait démarrer une session', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n      await waitForNextUpdate();\n\n      act(() => {\n        result.current.startSession('vocabulary');\n      });\n\n      // Vérifier que la session a démarré (pas d'état visible mais fonction appelée)\n      expect(typeof result.current.startSession).toBe('function');\n    });\n\n    it('devrait terminer une session et mettre à jour les minutes', async () => {\n      AsyncStorage.getItem.mockResolvedValue('0');\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n      await waitForNextUpdate();\n\n      // Démarrer une session\n      act(() => {\n        result.current.startSession('vocabulary');\n      });\n\n      // Simuler 2 minutes plus tard\n      jest.spyOn(Date, 'now').mockReturnValue(1640995200000 + 120000); // +2 minutes\n\n      await act(async () => {\n        await result.current.endSession();\n      });\n\n      expect(result.current.todayMinutes).toBe(2);\n      expect(AsyncStorage.setItem).toHaveBeenCalledWith('today_minutes', '2');\n    });\n\n    it('ne devrait pas mettre à jour si aucune session n\\'est active', async () => {\n      AsyncStorage.getItem.mockResolvedValue('0');\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n      await waitForNextUpdate();\n\n      await act(async () => {\n        await result.current.endSession();\n      });\n\n      expect(result.current.todayMinutes).toBe(0);\n      expect(AsyncStorage.setItem).not.toHaveBeenCalledWith('today_minutes', expect.any(String));\n    });\n  });\n\n  describe('Gestion des streaks', () => {\n    it('devrait incrémenter le streak si l\\'activité était hier', async () => {\n      AsyncStorage.getItem\n        .mockResolvedValueOnce('3') // current_streak\n        .mockResolvedValueOnce('0') // today_minutes\n        .mockResolvedValueOnce('Sat Jan 01 2022') // last_time_date\n        .mockResolvedValueOnce('Fri Dec 31 2021'); // last_activity_date (hier)\n\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n      await waitForNextUpdate();\n\n      await act(async () => {\n        await result.current.updateStreak();\n      });\n\n      expect(result.current.currentStreak).toBe(4);\n      expect(AsyncStorage.setItem).toHaveBeenCalledWith('current_streak', '4');\n    });\n\n    it('devrait réinitialiser le streak si l\\'activité n\\'était pas hier', async () => {\n      AsyncStorage.getItem\n        .mockResolvedValueOnce('5') // current_streak\n        .mockResolvedValueOnce('0') // today_minutes\n        .mockResolvedValueOnce('Sat Jan 01 2022') // last_time_date\n        .mockResolvedValueOnce('Wed Dec 29 2021'); // last_activity_date (il y a 3 jours)\n\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n      await waitForNextUpdate();\n\n      await act(async () => {\n        await result.current.updateStreak();\n      });\n\n      expect(result.current.currentStreak).toBe(1);\n      expect(AsyncStorage.setItem).toHaveBeenCalledWith('current_streak', '1');\n    });\n\n    it('ne devrait pas mettre à jour le streak si l\\'activité est déjà aujourd\\'hui', async () => {\n      AsyncStorage.getItem\n        .mockResolvedValueOnce('3') // current_streak\n        .mockResolvedValueOnce('0') // today_minutes\n        .mockResolvedValueOnce('Sat Jan 01 2022') // last_time_date\n        .mockResolvedValueOnce('Sat Jan 01 2022'); // last_activity_date (aujourd'hui)\n\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n      await waitForNextUpdate();\n\n      const initialStreak = result.current.currentStreak;\n\n      await act(async () => {\n        await result.current.updateStreak();\n      });\n\n      expect(result.current.currentStreak).toBe(initialStreak);\n    });\n  });\n\n  describe('Formatage du temps', () => {\n    it('devrait formater les minutes correctement', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n      await waitForNextUpdate();\n\n      // Test avec différentes valeurs\n      const testCases = [\n        { minutes: 0, expected: '0min' },\n        { minutes: 30, expected: '30min' },\n        { minutes: 60, expected: '1h' },\n        { minutes: 90, expected: '1h30min' },\n        { minutes: 120, expected: '2h' },\n        { minutes: 150, expected: '2h30min' }\n      ];\n\n      for (const testCase of testCases) {\n        // Simuler les minutes\n        AsyncStorage.getItem\n          .mockResolvedValueOnce('0') // current_streak\n          .mockResolvedValueOnce(testCase.minutes.toString()) // today_minutes\n          .mockResolvedValueOnce('Sat Jan 01 2022'); // last_time_date\n\n        const { result: testResult, waitForNextUpdate: waitForUpdate } = renderHook(() => useActivityMetrics());\n        await waitForUpdate();\n\n        expect(testResult.current.formattedTime).toBe(testCase.expected);\n      }\n    });\n  });\n\n  describe('Tendances de streak', () => {\n    it('devrait retourner les bonnes tendances selon le streak', async () => {\n      const testCases = [\n        { streak: 0, expected: null },\n        { streak: 1, expected: '🔥 Continue!' },\n        { streak: 3, expected: '💪 En forme!' },\n        { streak: 7, expected: '🏆 Incroyable!' },\n        { streak: 10, expected: '🏆 Incroyable!' }\n      ];\n\n      for (const testCase of testCases) {\n        AsyncStorage.getItem\n          .mockResolvedValueOnce(testCase.streak.toString()) // current_streak\n          .mockResolvedValueOnce('0') // today_minutes\n          .mockResolvedValueOnce('Sat Jan 01 2022'); // last_time_date\n\n        const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n        await waitForNextUpdate();\n\n        expect(result.current.streakTrend).toBe(testCase.expected);\n      }\n    });\n  });\n\n  describe('Gestion des erreurs', () => {\n    it('devrait gérer les erreurs de AsyncStorage silencieusement', async () => {\n      AsyncStorage.getItem.mockRejectedValue(new Error('Storage error'));\n\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n      await waitForNextUpdate();\n\n      // Devrait utiliser les valeurs par défaut\n      expect(result.current.currentStreak).toBe(0);\n      expect(result.current.todayMinutes).toBe(0);\n    });\n\n    it('devrait gérer les erreurs lors de la sauvegarde', async () => {\n      AsyncStorage.getItem.mockResolvedValue('0');\n      AsyncStorage.setItem.mockRejectedValue(new Error('Save error'));\n\n      const { result, waitForNextUpdate } = renderHook(() => useActivityMetrics());\n      await waitForNextUpdate();\n\n      // Ne devrait pas planter\n      await act(async () => {\n        result.current.startSession('test');\n        jest.spyOn(Date, 'now').mockReturnValue(1640995200000 + 60000);\n        await result.current.endSession();\n      });\n\n      expect(result.current.todayMinutes).toBe(1); // État local mis à jour\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}