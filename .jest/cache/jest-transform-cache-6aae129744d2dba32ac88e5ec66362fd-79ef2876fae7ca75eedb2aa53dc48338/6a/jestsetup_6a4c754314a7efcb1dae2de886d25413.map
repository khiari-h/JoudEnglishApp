{"version":3,"names":["_getJestObj","mock","require","useFonts","isLoaded","impactAsync","jest","fn","Reanimated","default","call","get","addEventListener","removeEventListener","RN","requireActual","Animated","Object","assign","Value","interpolate","config","outputRange","addListener","removeListener","removeAllListeners","stopAnimation","resetAnimation","setValue","timing","start","callback","finished","StatusBar","setBarStyle","setBackgroundColor","setHidden","setNetworkActivityIndicatorVisible","setTranslucent","_reactNative","_require","NativeModules","SettingsManager","settings","AppleLocale","setImmediate","global","_len","arguments","length","args","Array","_key","setTimeout","apply","concat","clearImmediate","id","clearTimeout"],"sources":["jest.setup.js"],"sourcesContent":["// jest.setup.js\n\nimport { NativeModules } from 'react-native';\n\n// Mock AsyncStorage (très utilisé dans RN)\njest.mock('@react-native-async-storage/async-storage', () =>\n  require('@react-native-async-storage/async-storage/jest/async-storage-mock')\n);\n\n// Mock Expo font (si tu utilises expo-font, sinon tu peux retirer)\njest.mock('expo-font', () => ({\n  useFonts: () => [true],\n  isLoaded: () => true,\n}));\n\n// Mock Expo haptics (vibration)\njest.mock('expo-haptics', () => ({\n  impactAsync: jest.fn(),\n}));\n\n// Mock react-native-reanimated pour éviter les erreurs dans les tests\njest.mock('react-native-reanimated', () => {\n  const Reanimated = require('react-native-reanimated/mock');\n\n  // Patch pour éviter des erreurs supplémentaires\n  Reanimated.default.call = () => {};\n\n  return Reanimated;\n});\n\n// Mock des Settings natives (pour éviter erreurs TurboModuleRegistry)\njest.mock('react-native/Libraries/Settings/Settings', () => ({\n  get: jest.fn(() => 'light'),\n  addEventListener: jest.fn(),\n  removeEventListener: jest.fn(),\n}));\n\n// Mock NativeModules.SettingsManager (simule locale)\nNativeModules.SettingsManager = NativeModules.SettingsManager || {\n  settings: { AppleLocale: 'en_US' },\n};\n\n// Polyfill global pour setImmediate / clearImmediate (parfois manquant)\nif (typeof setImmediate === 'undefined') {\n  global.setImmediate = (fn, ...args) => setTimeout(fn, 0, ...args);\n}\nif (typeof clearImmediate === 'undefined') {\n  global.clearImmediate = (id) => clearTimeout(id);\n}\n\n// Mock complet et robuste du module Animated\njest.mock('react-native', () => {\n  const RN = jest.requireActual('react-native');\n\n  // Mock Animated\n  RN.Animated = {\n    ...RN.Animated,\n    Value: jest.fn(() => ({\n      interpolate: jest.fn(config => config.outputRange[0]),\n      addListener: jest.fn(),\n      removeListener: jest.fn(),\n      removeAllListeners: jest.fn(),\n      stopAnimation: jest.fn(),\n      resetAnimation: jest.fn(),\n      setValue: jest.fn(),\n    })),\n    timing: jest.fn(() => ({\n      start: jest.fn(callback => {\n        if (callback) {\n          callback({ finished: true });\n        }\n      }),\n    })),\n  };\n\n  // ✅ CORRECTION : Mock StatusBar avec les méthodes attendues par les tests\n  // Remplacer complètement les méthodes par jest.fn()\n  RN.StatusBar = {\n    setBarStyle: jest.fn(),\n    setBackgroundColor: jest.fn(),\n    setHidden: jest.fn(),\n    setNetworkActivityIndicatorVisible: jest.fn(),\n    setTranslucent: jest.fn(),\n  };\n\n  return RN;\n});\n"],"mappings":"AAKAA,WAAA,GAAKC,IAAI,CAAC,2CAA2C,EAAE;EAAA,OACrDC,OAAO,CAAC,mEAAmE,CAAC;AAAA,CAC9E,CAAC;AAGDF,WAAA,GAAKC,IAAI,CAAC,WAAW,EAAE;EAAA,OAAO;IAC5BE,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAQ,CAAC,IAAI,CAAC;IAAA;IACtBC,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAQ,IAAI;IAAA;EACtB,CAAC;AAAA,CAAC,CAAC;AAGHJ,WAAA,GAAKC,IAAI,CAAC,cAAc,EAAE;EAAA,OAAO;IAC/BI,WAAW,EAAEC,IAAI,CAACC,EAAE,CAAC;EACvB,CAAC;AAAA,CAAC,CAAC;AAGHP,WAAA,GAAKC,IAAI,CAAC,yBAAyB,EAAE,YAAM;EACzC,IAAMO,UAAU,GAAGN,OAAO,CAAC,8BAA8B,CAAC;EAG1DM,UAAU,CAACC,OAAO,CAACC,IAAI,GAAG,YAAM,CAAC,CAAC;EAElC,OAAOF,UAAU;AACnB,CAAC,CAAC;AAGFR,WAAA,GAAKC,IAAI,CAAC,0CAA0C,EAAE;EAAA,OAAO;IAC3DU,GAAG,EAAEL,IAAI,CAACC,EAAE,CAAC;MAAA,OAAM,OAAO;IAAA,EAAC;IAC3BK,gBAAgB,EAAEN,IAAI,CAACC,EAAE,CAAC,CAAC;IAC3BM,mBAAmB,EAAEP,IAAI,CAACC,EAAE,CAAC;EAC/B,CAAC;AAAA,CAAC,CAAC;AAgBHP,WAAA,GAAKC,IAAI,CAAC,cAAc,EAAE,YAAM;EAC9B,IAAMa,EAAE,GAAGR,IAAI,CAACS,aAAa,CAAC,cAAc,CAAC;EAG7CD,EAAE,CAACE,QAAQ,GAAAC,MAAA,CAAAC,MAAA,KACNJ,EAAE,CAACE,QAAQ;IACdG,KAAK,EAAEb,IAAI,CAACC,EAAE,CAAC;MAAA,OAAO;QACpBa,WAAW,EAAEd,IAAI,CAACC,EAAE,CAAC,UAAAc,MAAM;UAAA,OAAIA,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;QAAA,EAAC;QACrDC,WAAW,EAAEjB,IAAI,CAACC,EAAE,CAAC,CAAC;QACtBiB,cAAc,EAAElB,IAAI,CAACC,EAAE,CAAC,CAAC;QACzBkB,kBAAkB,EAAEnB,IAAI,CAACC,EAAE,CAAC,CAAC;QAC7BmB,aAAa,EAAEpB,IAAI,CAACC,EAAE,CAAC,CAAC;QACxBoB,cAAc,EAAErB,IAAI,CAACC,EAAE,CAAC,CAAC;QACzBqB,QAAQ,EAAEtB,IAAI,CAACC,EAAE,CAAC;MACpB,CAAC;IAAA,CAAC,CAAC;IACHsB,MAAM,EAAEvB,IAAI,CAACC,EAAE,CAAC;MAAA,OAAO;QACrBuB,KAAK,EAAExB,IAAI,CAACC,EAAE,CAAC,UAAAwB,QAAQ,EAAI;UACzB,IAAIA,QAAQ,EAAE;YACZA,QAAQ,CAAC;cAAEC,QAAQ,EAAE;YAAK,CAAC,CAAC;UAC9B;QACF,CAAC;MACH,CAAC;IAAA,CAAC;EAAC,EACJ;EAIDlB,EAAE,CAACmB,SAAS,GAAG;IACbC,WAAW,EAAE5B,IAAI,CAACC,EAAE,CAAC,CAAC;IACtB4B,kBAAkB,EAAE7B,IAAI,CAACC,EAAE,CAAC,CAAC;IAC7B6B,SAAS,EAAE9B,IAAI,CAACC,EAAE,CAAC,CAAC;IACpB8B,kCAAkC,EAAE/B,IAAI,CAACC,EAAE,CAAC,CAAC;IAC7C+B,cAAc,EAAEhC,IAAI,CAACC,EAAE,CAAC;EAC1B,CAAC;EAED,OAAOO,EAAE;AACX,CAAC,CAAC;AApFF,IAAAyB,YAAA,GAAArC,OAAA;AAA6C,SAAAF,YAAA;EAAA,IAAAwC,QAAA,GAAAtC,OAAA;IAAAI,IAAA,GAAAkC,QAAA,CAAAlC,IAAA;EAAAN,WAAA,YAAAA,YAAA;IAAA,OAAAM,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAoC7CmC,0BAAa,CAACC,eAAe,GAAGD,0BAAa,CAACC,eAAe,IAAI;EAC/DC,QAAQ,EAAE;IAAEC,WAAW,EAAE;EAAQ;AACnC,CAAC;AAGD,IAAI,OAAOC,YAAY,KAAK,WAAW,EAAE;EACvCC,MAAM,CAACD,YAAY,GAAG,UAACtC,EAAE;IAAA,SAAAwC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAKC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAA,OAAKC,UAAU,CAAAC,KAAA,UAAC/C,EAAE,EAAE,CAAC,EAAAgD,MAAA,CAAKL,IAAI,EAAC;EAAA;AACnE;AACA,IAAI,OAAOM,cAAc,KAAK,WAAW,EAAE;EACzCV,MAAM,CAACU,cAAc,GAAG,UAACC,EAAE;IAAA,OAAKC,YAAY,CAACD,EAAE,CAAC;EAAA;AAClD","ignoreList":[]}