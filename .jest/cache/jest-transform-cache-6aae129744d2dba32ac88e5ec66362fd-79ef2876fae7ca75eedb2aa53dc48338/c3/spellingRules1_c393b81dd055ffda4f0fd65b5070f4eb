3de8068840e9725ed739a7970b6f9285
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = exports.default = {
  title: "A1 Spelling Rules & Patterns",
  description: "Learn basic spelling rules and word patterns for English at A1 level",
  exercises: [{
    type: "spelling_rule",
    rule: "Plurals: Add 's' to most nouns to form plurals",
    instruction: "Apply the rule: Add 's' to form the plural of 'cat'",
    correctAnswer: "cats",
    hasHint: true,
    hint: "Just add the letter 's' to the end of the word.",
    explanation: "Most nouns in English form their plural by adding 's' at the end: cat → cats, dog → dogs, house → houses."
  }, {
    type: "spelling_rule",
    rule: "Plurals: Add 'es' to nouns ending in s, ss, sh, ch, x, or z",
    instruction: "Apply the rule: Form the plural of 'box'",
    correctAnswer: "boxes",
    hasHint: true,
    hint: "For words ending in 'x', add 'es'.",
    explanation: "Nouns ending in s, ss, sh, ch, x, or z add 'es' to form the plural: box → boxes, bus → buses, watch → watches."
  }, {
    type: "spelling_rule",
    rule: "Plurals: Add 'es' to nouns ending in 'sh'",
    instruction: "Apply the rule: Form the plural of 'dish'",
    correctAnswer: "dishes",
    hasHint: true,
    hint: "Words ending in 'sh' need 'es' for the plural.",
    explanation: "Nouns ending in 'sh' add 'es': dish → dishes, fish → fishes, brush → brushes."
  }, {
    type: "spelling_rule",
    rule: "Plurals: Add 'es' to nouns ending in 'ch'",
    instruction: "Apply the rule: Form the plural of 'church'",
    correctAnswer: "churches",
    hasHint: true,
    hint: "Words ending in 'ch' need 'es' for the plural.",
    explanation: "Nouns ending in 'ch' add 'es': church → churches, beach → beaches, lunch → lunches."
  }, {
    type: "spelling_rule",
    rule: "Plurals: For nouns ending in 'y' after a consonant, change 'y' to 'i' and add 'es'",
    instruction: "Apply the rule: Form the plural of 'baby'",
    correctAnswer: "babies",
    hasHint: true,
    hint: "Change the 'y' to 'i' and add 'es'.",
    explanation: "When a noun ends in 'y' after a consonant, change the 'y' to 'i' and add 'es': baby → babies, city → cities."
  }, {
    type: "spelling_rule",
    rule: "Plurals: For nouns ending in 'y' after a vowel, just add 's'",
    instruction: "Apply the rule: Form the plural of 'boy'",
    correctAnswer: "boys",
    hasHint: true,
    hint: "The 'y' comes after a vowel (o), so just add 's'.",
    explanation: "When a noun ends in 'y' after a vowel, simply add 's': boy → boys, key → keys, day → days."
  }, {
    type: "spelling_rule",
    rule: "Plurals: Change 'y' to 'i' and add 'es' after consonants",
    instruction: "Apply the rule: Form the plural of 'city'",
    correctAnswer: "cities",
    hasHint: true,
    hint: "The 'y' comes after 't' (consonant), so change to 'ies'.",
    explanation: "City ends in 'y' after consonant 't': city → cities, party → parties, family → families."
  }, {
    type: "spelling_rule",
    rule: "Plurals: Just add 's' when 'y' follows a vowel",
    instruction: "Apply the rule: Form the plural of 'monkey'",
    correctAnswer: "monkeys",
    hasHint: true,
    hint: "The 'y' comes after 'e' (vowel), so just add 's'.",
    explanation: "Monkey ends in 'y' after vowel 'e': monkey → monkeys, valley → valleys, turkey → turkeys."
  }, {
    type: "spelling_rule",
    rule: "-ing form: For most verbs, just add 'ing'",
    instruction: "Apply the rule: Add 'ing' to the verb 'play'",
    correctAnswer: "playing",
    hasHint: true,
    hint: "Simply add 'ing' to the end of the verb.",
    explanation: "For most verbs, we just add 'ing' to form the present participle: play → playing, work → working, read → reading."
  }, {
    type: "spelling_rule",
    rule: "-ing form: For verbs ending in 'e', drop the 'e' and add 'ing'",
    instruction: "Apply the rule: Add 'ing' to the verb 'write'",
    correctAnswer: "writing",
    hasHint: true,
    hint: "Remove the final 'e' before adding 'ing'.",
    explanation: "For verbs ending in 'e', we drop the 'e' and add 'ing': write → writing, come → coming, take → taking."
  }, {
    type: "spelling_rule",
    rule: "-ing form: Drop silent 'e' before adding 'ing'",
    instruction: "Apply the rule: Add 'ing' to the verb 'make'",
    correctAnswer: "making",
    hasHint: true,
    hint: "Remove the silent 'e' at the end first.",
    explanation: "Verbs ending in silent 'e' drop the 'e': make → making, love → loving, use → using."
  }, {
    type: "spelling_rule",
    rule: "-ing form: For short verbs with CVC pattern, double the final consonant",
    instruction: "Apply the rule: Add 'ing' to the verb 'run'",
    correctAnswer: "running",
    hasHint: true,
    hint: "Double the final 'n' before adding 'ing'.",
    explanation: "For short verbs ending in consonant-vowel-consonant, double the final consonant: run → running, sit → sitting."
  }, {
    type: "spelling_rule",
    rule: "-ing form: Double final consonant in CVC pattern",
    instruction: "Apply the rule: Add 'ing' to the verb 'get'",
    correctAnswer: "getting",
    hasHint: true,
    hint: "Double the 't' because 'get' follows the CVC pattern.",
    explanation: "Get follows consonant-vowel-consonant pattern: get → getting, put → putting, cut → cutting."
  }, {
    type: "spelling_rule",
    rule: "-ing form: Double the consonant for CVC verbs",
    instruction: "Apply the rule: Add 'ing' to the verb 'swim'",
    correctAnswer: "swimming",
    hasHint: true,
    hint: "Double the 'm' because it's a CVC pattern verb.",
    explanation: "Swim follows consonant-vowel-consonant: swim → swimming, win → winning, begin → beginning."
  }, {
    type: "spelling_rule",
    rule: "-ing form: No doubling when verb ends in two consonants",
    instruction: "Apply the rule: Add 'ing' to the verb 'help'",
    correctAnswer: "helping",
    hasHint: true,
    hint: "Just add 'ing' - no doubling needed when there are already two consonants.",
    explanation: "When verbs end in two consonants, just add 'ing': help → helping, work → working, start → starting."
  }, {
    type: "spelling_rule",
    rule: "-ing form: No doubling for long vowel sounds",
    instruction: "Apply the rule: Add 'ing' to the verb 'sleep'",
    correctAnswer: "sleeping",
    hasHint: true,
    hint: "Just add 'ing' - the double 'e' makes a long vowel sound.",
    explanation: "Verbs with long vowel sounds don't double: sleep → sleeping, keep → keeping, meet → meeting."
  }, {
    type: "spelling_rule",
    rule: "-ed form: For most verbs, just add 'ed'",
    instruction: "Apply the rule: Add 'ed' to the verb 'walk'",
    correctAnswer: "walked",
    hasHint: true,
    hint: "Simply add 'ed' to the end of the verb.",
    explanation: "For most regular verbs, add 'ed' for past tense: walk → walked, talk → talked, play → played."
  }, {
    type: "spelling_rule",
    rule: "-ed form: For verbs ending in 'e', just add 'd'",
    instruction: "Apply the rule: Add 'ed' to the verb 'like'",
    correctAnswer: "liked",
    hasHint: true,
    hint: "Since it already ends in 'e', just add 'd'.",
    explanation: "For verbs ending in 'e', just add 'd': like → liked, love → loved, use → used."
  }, {
    type: "spelling_rule",
    rule: "-ed form: For verbs ending in 'y' after consonant, change 'y' to 'i' and add 'ed'",
    instruction: "Apply the rule: Add 'ed' to the verb 'study'",
    correctAnswer: "studied",
    hasHint: true,
    hint: "Change the 'y' to 'i' then add 'ed'.",
    explanation: "When 'y' follows a consonant, change to 'i': study → studied, try → tried, cry → cried."
  }, {
    type: "spelling_rule",
    rule: "-ed form: For CVC verbs, double the final consonant",
    instruction: "Apply the rule: Add 'ed' to the verb 'stop'",
    correctAnswer: "stopped",
    hasHint: true,
    hint: "Double the 'p' before adding 'ed'.",
    explanation: "For CVC pattern verbs, double the final consonant: stop → stopped, hop → hopped, plan → planned."
  }, {
    type: "spelling_rule",
    rule: "-ed form: Keep 'y' after vowels, just add 'ed'",
    instruction: "Apply the rule: Add 'ed' to the verb 'play'",
    correctAnswer: "played",
    hasHint: true,
    hint: "The 'y' comes after 'a' (vowel), so just add 'ed'.",
    explanation: "When 'y' follows a vowel, keep it: play → played, stay → stayed, enjoy → enjoyed."
  }, {
    type: "spelling_rule",
    rule: "-ed form: Double consonant in one-syllable CVC verbs",
    instruction: "Apply the rule: Add 'ed' to the verb 'drop'",
    correctAnswer: "dropped",
    hasHint: true,
    hint: "Double the 'p' because 'drop' is a CVC verb.",
    explanation: "One-syllable CVC verbs double the final consonant: drop → dropped, shop → shopped, skip → skipped."
  }, {
    type: "spelling_rule",
    rule: "Silent 'e': Many words end with silent 'e' that changes vowel sound",
    instruction: "Apply the rule: Add silent 'e' to change 'hat' to 'hate'",
    correctAnswer: "hate",
    hasHint: true,
    hint: "The silent 'e' makes the 'a' say its name (long sound).",
    explanation: "Silent 'e' changes short vowel to long vowel: hat → hate, bit → bite, cut → cute."
  }, {
    type: "spelling_rule",
    rule: "Silent 'e': Changes short 'i' to long 'i' sound",
    instruction: "Apply the rule: Add silent 'e' to change 'bit' to the word meaning 'to use teeth'",
    correctAnswer: "bite",
    hasHint: true,
    hint: "Silent 'e' makes the 'i' sound like 'eye'.",
    explanation: "Silent 'e' changes pronunciation: bit (short i) → bite (long i), sit → site, win → wine."
  }, {
    type: "spelling_rule",
    rule: "Silent 'e': Creates long vowel sounds in simple words",
    instruction: "Apply the rule: Add silent 'e' to 'hop' to make a new word",
    correctAnswer: "hope",
    hasHint: true,
    hint: "The silent 'e' makes the 'o' say 'oh'.",
    explanation: "Silent 'e' transforms words: hop → hope, not → note, rob → robe, mop → mope."
  }, {
    type: "spelling_rule",
    rule: "Silent 'e': Essential for correct pronunciation",
    instruction: "Apply the rule: Add silent 'e' to 'us' to make a word meaning 'to utilize'",
    correctAnswer: "use",
    hasHint: true,
    hint: "This creates the word meaning 'to utilize' or 'employ'.",
    explanation: "Some words need silent 'e' for proper meaning: us → use, hug → huge, tub → tube."
  }, {
    type: "spelling_rule",
    rule: "Silent 'e': Distinguishes between different words",
    instruction: "Apply the rule: Add silent 'e' to 'can' to make the walking stick",
    correctAnswer: "cane",
    hasHint: true,
    hint: "This makes the word for a walking stick.",
    explanation: "Silent 'e' creates different words: can → cane, pan → pane, plan → plane, man → mane."
  }, {
    type: "spelling_rule",
    rule: "Silent 'e': Common in everyday vocabulary",
    instruction: "Apply the rule: Complete this word for where you live: 'hom_'",
    correctAnswer: "home",
    hasHint: true,
    hint: "Add silent 'e' to complete this common word.",
    explanation: "Many common words end in silent 'e': home, time, life, love, come, some, more."
  }, {
    type: "spelling_rule",
    rule: "CVC Pattern: Consonant-Vowel-Consonant makes short vowel sounds",
    instruction: "Apply the pattern: Spell the CVC word that rhymes with 'log' and means a pet animal",
    correctAnswer: "dog",
    hasHint: true,
    hint: "Use the CVC pattern: consonant-vowel-consonant.",
    explanation: "CVC pattern creates short vowel sounds: dog, cat, big, run, hot. The vowel is 'trapped' between consonants."
  }, {
    type: "spelling_rule",
    rule: "CVC Pattern: Short vowel sounds in three-letter words",
    instruction: "Apply the pattern: Spell the CVC word for a small, round object that bounces",
    correctAnswer: "ball",
    hasHint: true,
    hint: "Think CVC pattern, but this word has double 'l'.",
    explanation: "CVC variations include double consonants: ball, bell, hill, tall, will. Still short vowel sounds."
  }, {
    type: "spelling_rule",
    rule: "CVCE Pattern: Consonant-Vowel-Consonant-Silent E makes long vowels",
    instruction: "Apply the pattern: Change the CVC word 'bit' to CVCE pattern",
    correctAnswer: "bite",
    hasHint: true,
    hint: "Add silent 'e' to make the long vowel sound.",
    explanation: "CVCE pattern: consonant-vowel-consonant-silent e. The 'e' makes the vowel 'say its name': bite, cute, home."
  }, {
    type: "spelling_rule",
    rule: "CVC vs CVCE: Understanding the difference in sound",
    instruction: "Apply the pattern: Write the CVCE word that means 'to travel on a bike'",
    correctAnswer: "ride",
    hasHint: true,
    hint: "This follows consonant-vowel-consonant-silent e pattern.",
    explanation: "CVC 'rid' vs CVCE 'ride': the silent 'e' changes everything. Hide, side, wide, ride all follow CVCE."
  }, {
    type: "spelling_rule",
    rule: "CVC Pattern: Common in basic vocabulary",
    instruction: "Apply the pattern: Spell the CVC word for the opposite of 'cold'",
    correctAnswer: "hot",
    hasHint: true,
    hint: "Use the three-letter CVC pattern.",
    explanation: "Basic CVC words are essential: hot, big, run, sit, red, bad, good. Foundation of English spelling."
  }, {
    type: "spelling_rule",
    rule: "CVCE Pattern: Magic 'e' changes everything",
    instruction: "Apply the pattern: Transform 'hat' into the word meaning 'to dislike strongly'",
    correctAnswer: "hate",
    hasHint: true,
    hint: "Add the magic 'e' to change the meaning completely.",
    explanation: "Magic 'e' transforms words completely: hat/hate, mat/mate, fat/fate, rat/rate. Same letters, different meaning."
  }, {
    type: "spelling_rule",
    rule: "Double consonants: Many common words have doubled letters",
    instruction: "Apply the rule: Spell the word for a warm greeting with double 'l'",
    correctAnswer: "hello",
    hasHint: true,
    hint: "This greeting word has double 'l' in the middle.",
    explanation: "Common double consonants: hello, letter, better, little, middle, happy, sorry."
  }, {
    type: "spelling_rule",
    rule: "Double consonants: 'ff' endings are common",
    instruction: "Apply the rule: Spell the word meaning 'rigid' or 'difficult' with double 'f'",
    correctAnswer: "stuff",
    hasHint: true,
    hint: "This word ends with double 'f'.",
    explanation: "Words ending in 'ff': stuff, off, cliff, staff, stiff. The double 'f' is pronounced as one sound."
  }, {
    type: "spelling_rule",
    rule: "Double consonants: 'ss' endings in basic words",
    instruction: "Apply the rule: Spell the word meaning 'category' or 'group' with double 's'",
    correctAnswer: "class",
    hasHint: true,
    hint: "This school-related word ends with double 's'.",
    explanation: "Words ending in 'ss': class, glass, grass, pass, less, mess. Double 's' makes one 's' sound."
  }, {
    type: "spelling_rule",
    rule: "Prefix 'un-': Means 'not' or 'opposite of'",
    instruction: "Apply the rule: Add 'un-' to 'happy' to make the opposite",
    correctAnswer: "unhappy",
    hasHint: true,
    hint: "Just add 'un-' to the beginning of the word.",
    explanation: "Prefix 'un-' creates opposites: happy → unhappy, kind → unkind, safe → unsafe, fair → unfair."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-ly': Changes adjectives to adverbs",
    instruction: "Apply the rule: Add '-ly' to 'quick' to show how something is done",
    correctAnswer: "quickly",
    hasHint: true,
    hint: "Just add '-ly' to the end of the adjective.",
    explanation: "Suffix '-ly' makes adverbs: quick → quickly, slow → slowly, nice → nicely, easy → easily."
  }, {
    type: "spelling_rule",
    rule: "Suffix '-er': Shows comparison or person who does something",
    instruction: "Apply the rule: Add '-er' to 'teach' to make the person who teaches",
    correctAnswer: "teacher",
    hasHint: true,
    hint: "Add '-er' to show the person who does this job.",
    explanation: "Suffix '-er' for people: teach → teacher, work → worker, play → player, drive → driver."
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,