829ff22e638411f6b92d3d51b0cd4bd1
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _ExerciseCard = _interopRequireDefault(require("../ExerciseCard"));
var _jsxRuntime = require("react/jsx-runtime");
describe("ExerciseCard", function () {
  var baseProps = {
    title: "Titre Exercice",
    description: "Description de l'exercice",
    icon: "ðŸ”¥",
    color: "#5E60CE",
    onPress: jest.fn()
  };
  afterEach(function () {
    jest.clearAllMocks();
  });
  it("affiche correctement le titre, la description et l'icÃ´ne", function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ExerciseCard.default, Object.assign({}, baseProps))),
      getByText = _render.getByText;
    expect(getByText(baseProps.title)).toBeTruthy();
    expect(getByText(baseProps.description)).toBeTruthy();
    expect(getByText(baseProps.icon)).toBeTruthy();
  });
  it("affiche la barre de progression quand progress > 0", function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ExerciseCard.default, Object.assign({}, baseProps, {
        progress: 45
      }))),
      getByText = _render2.getByText,
      getByTestId = _render2.getByTestId,
      queryByText = _render2.queryByText;
    expect(getByText("45%")).toBeTruthy();
    expect(getByTestId("progress-fill")).toHaveStyle({
      width: "45%"
    });
    expect(queryByText("Nouveau")).toBeNull();
  });
  it("affiche le badge 'Nouveau' quand progress = 0 et isNew = true", function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ExerciseCard.default, Object.assign({}, baseProps, {
        progress: 0,
        isNew: true
      }))),
      getByText = _render3.getByText,
      queryByTestId = _render3.queryByTestId;
    expect(getByText("Nouveau")).toBeTruthy();
    expect(queryByTestId("progress-fill")).toBeNull();
  });
  it("n'affiche ni la barre de progression ni le badge quand progress = 0 et isNew = false", function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ExerciseCard.default, Object.assign({}, baseProps, {
        progress: 0,
        isNew: false
      }))),
      queryByText = _render4.queryByText,
      queryByTestId = _render4.queryByTestId;
    expect(queryByText("Nouveau")).toBeNull();
    expect(queryByTestId("progress-fill")).toBeNull();
  });
  it("appelle onPress quand on clique sur la carte ou le bouton commencer", function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ExerciseCard.default, Object.assign({}, baseProps))),
      getByText = _render5.getByText;
    _reactNative.fireEvent.press(getByText(baseProps.title));
    _reactNative.fireEvent.press(getByText("Commencer"));
    expect(baseProps.onPress).toHaveBeenCalledTimes(2);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9FeGVyY2lzZUNhcmQiLCJfanN4UnVudGltZSIsImRlc2NyaWJlIiwiYmFzZVByb3BzIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImljb24iLCJjb2xvciIsIm9uUHJlc3MiLCJqZXN0IiwiZm4iLCJhZnRlckVhY2giLCJjbGVhckFsbE1vY2tzIiwiaXQiLCJfcmVuZGVyIiwicmVuZGVyIiwianN4IiwiZGVmYXVsdCIsIk9iamVjdCIsImFzc2lnbiIsImdldEJ5VGV4dCIsImV4cGVjdCIsInRvQmVUcnV0aHkiLCJfcmVuZGVyMiIsInByb2dyZXNzIiwiZ2V0QnlUZXN0SWQiLCJxdWVyeUJ5VGV4dCIsInRvSGF2ZVN0eWxlIiwid2lkdGgiLCJ0b0JlTnVsbCIsIl9yZW5kZXIzIiwiaXNOZXciLCJxdWVyeUJ5VGVzdElkIiwiX3JlbmRlcjQiLCJfcmVuZGVyNSIsImZpcmVFdmVudCIsInByZXNzIiwidG9IYXZlQmVlbkNhbGxlZFRpbWVzIl0sInNvdXJjZXMiOlsiRXhlcmNpc2VDYXJkLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyByZW5kZXIsIGZpcmVFdmVudCB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZVwiO1xyXG5pbXBvcnQgRXhlcmNpc2VDYXJkIGZyb20gXCIuLi9FeGVyY2lzZUNhcmRcIjtcclxuXHJcbmRlc2NyaWJlKFwiRXhlcmNpc2VDYXJkXCIsICgpID0+IHtcclxuICBjb25zdCBiYXNlUHJvcHMgPSB7XHJcbiAgICB0aXRsZTogXCJUaXRyZSBFeGVyY2ljZVwiLFxyXG4gICAgZGVzY3JpcHRpb246IFwiRGVzY3JpcHRpb24gZGUgbCdleGVyY2ljZVwiLFxyXG4gICAgaWNvbjogXCLwn5SlXCIsXHJcbiAgICBjb2xvcjogXCIjNUU2MENFXCIsXHJcbiAgICBvblByZXNzOiBqZXN0LmZuKCksXHJcbiAgfTtcclxuXHJcbiAgYWZ0ZXJFYWNoKCgpID0+IHtcclxuICAgIGplc3QuY2xlYXJBbGxNb2NrcygpO1xyXG4gIH0pO1xyXG5cclxuICBpdChcImFmZmljaGUgY29ycmVjdGVtZW50IGxlIHRpdHJlLCBsYSBkZXNjcmlwdGlvbiBldCBsJ2ljw7RuZVwiLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKDxFeGVyY2lzZUNhcmQgey4uLmJhc2VQcm9wc30gLz4pO1xyXG4gICAgZXhwZWN0KGdldEJ5VGV4dChiYXNlUHJvcHMudGl0bGUpKS50b0JlVHJ1dGh5KCk7XHJcbiAgICBleHBlY3QoZ2V0QnlUZXh0KGJhc2VQcm9wcy5kZXNjcmlwdGlvbikpLnRvQmVUcnV0aHkoKTtcclxuICAgIGV4cGVjdChnZXRCeVRleHQoYmFzZVByb3BzLmljb24pKS50b0JlVHJ1dGh5KCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KFwiYWZmaWNoZSBsYSBiYXJyZSBkZSBwcm9ncmVzc2lvbiBxdWFuZCBwcm9ncmVzcyA+IDBcIiwgKCkgPT4ge1xyXG4gICAgY29uc3QgeyBnZXRCeVRleHQsIGdldEJ5VGVzdElkLCBxdWVyeUJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8RXhlcmNpc2VDYXJkIHsuLi5iYXNlUHJvcHN9IHByb2dyZXNzPXs0NX0gLz5cclxuICAgICk7XHJcbiAgICBleHBlY3QoZ2V0QnlUZXh0KFwiNDUlXCIpKS50b0JlVHJ1dGh5KCk7XHJcbiAgICBleHBlY3QoZ2V0QnlUZXN0SWQoXCJwcm9ncmVzcy1maWxsXCIpKS50b0hhdmVTdHlsZSh7IHdpZHRoOiBcIjQ1JVwiIH0pO1xyXG4gICAgZXhwZWN0KHF1ZXJ5QnlUZXh0KFwiTm91dmVhdVwiKSkudG9CZU51bGwoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoXCJhZmZpY2hlIGxlIGJhZGdlICdOb3V2ZWF1JyBxdWFuZCBwcm9ncmVzcyA9IDAgZXQgaXNOZXcgPSB0cnVlXCIsICgpID0+IHtcclxuICAgIGNvbnN0IHsgZ2V0QnlUZXh0LCBxdWVyeUJ5VGVzdElkIH0gPSByZW5kZXIoXHJcbiAgICAgIDxFeGVyY2lzZUNhcmQgey4uLmJhc2VQcm9wc30gcHJvZ3Jlc3M9ezB9IGlzTmV3PXt0cnVlfSAvPlxyXG4gICAgKTtcclxuICAgIGV4cGVjdChnZXRCeVRleHQoXCJOb3V2ZWF1XCIpKS50b0JlVHJ1dGh5KCk7XHJcbiAgICBleHBlY3QocXVlcnlCeVRlc3RJZChcInByb2dyZXNzLWZpbGxcIikpLnRvQmVOdWxsKCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KFwibidhZmZpY2hlIG5pIGxhIGJhcnJlIGRlIHByb2dyZXNzaW9uIG5pIGxlIGJhZGdlIHF1YW5kIHByb2dyZXNzID0gMCBldCBpc05ldyA9IGZhbHNlXCIsICgpID0+IHtcclxuICAgIGNvbnN0IHsgcXVlcnlCeVRleHQsIHF1ZXJ5QnlUZXN0SWQgfSA9IHJlbmRlcihcclxuICAgICAgPEV4ZXJjaXNlQ2FyZCB7Li4uYmFzZVByb3BzfSBwcm9ncmVzcz17MH0gaXNOZXc9e2ZhbHNlfSAvPlxyXG4gICAgKTtcclxuICAgIGV4cGVjdChxdWVyeUJ5VGV4dChcIk5vdXZlYXVcIikpLnRvQmVOdWxsKCk7XHJcbiAgICBleHBlY3QocXVlcnlCeVRlc3RJZChcInByb2dyZXNzLWZpbGxcIikpLnRvQmVOdWxsKCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KFwiYXBwZWxsZSBvblByZXNzIHF1YW5kIG9uIGNsaXF1ZSBzdXIgbGEgY2FydGUgb3UgbGUgYm91dG9uIGNvbW1lbmNlclwiLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKDxFeGVyY2lzZUNhcmQgey4uLmJhc2VQcm9wc30gLz4pO1xyXG4gICAgZmlyZUV2ZW50LnByZXNzKGdldEJ5VGV4dChiYXNlUHJvcHMudGl0bGUpKTsgLy8gdG91Y2hlciBsZSB0aXRyZSAoZGFucyBsYSBjYXJ0ZSlcclxuICAgIGZpcmVFdmVudC5wcmVzcyhnZXRCeVRleHQoXCJDb21tZW5jZXJcIikpOyAvLyBib3V0b24gY29tbWVuY2VyXHJcbiAgICBleHBlY3QoYmFzZVByb3BzLm9uUHJlc3MpLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygyKTtcclxuICB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLGFBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUEyQyxJQUFBRyxXQUFBLEdBQUFILE9BQUE7QUFFM0NJLFFBQVEsQ0FBQyxjQUFjLEVBQUUsWUFBTTtFQUM3QixJQUFNQyxTQUFTLEdBQUc7SUFDaEJDLEtBQUssRUFBRSxnQkFBZ0I7SUFDdkJDLFdBQVcsRUFBRSwyQkFBMkI7SUFDeENDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLEtBQUssRUFBRSxTQUFTO0lBQ2hCQyxPQUFPLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxDQUFDO0VBQ25CLENBQUM7RUFFREMsU0FBUyxDQUFDLFlBQU07SUFDZEYsSUFBSSxDQUFDRyxhQUFhLENBQUMsQ0FBQztFQUN0QixDQUFDLENBQUM7RUFFRkMsRUFBRSxDQUFDLDBEQUEwRCxFQUFFLFlBQU07SUFDbkUsSUFBQUMsT0FBQSxHQUFzQixJQUFBQyxtQkFBTSxFQUFDLElBQUFkLFdBQUEsQ0FBQWUsR0FBQSxFQUFDaEIsYUFBQSxDQUFBaUIsT0FBWSxFQUFBQyxNQUFBLENBQUFDLE1BQUEsS0FBS2hCLFNBQVMsQ0FBRyxDQUFDLENBQUM7TUFBckRpQixTQUFTLEdBQUFOLE9BQUEsQ0FBVE0sU0FBUztJQUNqQkMsTUFBTSxDQUFDRCxTQUFTLENBQUNqQixTQUFTLENBQUNDLEtBQUssQ0FBQyxDQUFDLENBQUNrQixVQUFVLENBQUMsQ0FBQztJQUMvQ0QsTUFBTSxDQUFDRCxTQUFTLENBQUNqQixTQUFTLENBQUNFLFdBQVcsQ0FBQyxDQUFDLENBQUNpQixVQUFVLENBQUMsQ0FB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