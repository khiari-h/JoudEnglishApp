612b8e26e66fb219105a9076ab5f0cef
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactNative = require("react-native");
var _LockContext = require("../../contexts/LockContext");
var _jsxRuntime = require("react/jsx-runtime");
var LockScreen = function LockScreen() {
  var _useLock = (0, _LockContext.useLock)(),
    unlockWithPin = _useLock.unlockWithPin;
  var _useState = (0, _react.useState)(''),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    pin = _useState2[0],
    setPin = _useState2[1];
  var _useState3 = (0, _react.useState)(''),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    error = _useState4[0],
    setError = _useState4[1];
  var onSubmit = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {
    var res = yield unlockWithPin(pin);
    if (!res.ok) {
      setError(res.reason === 'lockout' ? 'Trop de tentatives. RÃ©essaie plus tard.' : 'PIN incorrect');
    }
  }), [pin, unlockWithPin]);
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      padding: 24
    },
    testID: "lock-screen",
    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: {
        fontSize: 22,
        fontWeight: '700',
        marginBottom: 12
      },
      children: "D\xE9verrouiller"
    }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
      value: pin,
      onChangeText: setPin,
      placeholder: "Code PIN",
      secureTextEntry: true,
      keyboardType: "number-pad",
      style: {
        width: '80%',
        borderWidth: 1,
        borderColor: '#E5E7EB',
        borderRadius: 8,
        padding: 12,
        marginBottom: 8
      },
      testID: "pin-input"
    }), !!error && (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: {
        color: '#DC2626',
        marginBottom: 8
      },
      children: error
    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      onPress: onSubmit,
      style: {
        backgroundColor: '#3B82F6',
        paddingVertical: 12,
        paddingHorizontal: 18,
        borderRadius: 10
      },
      testID: "pin-submit",
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: {
          color: 'white',
          fontWeight: '700'
        },
        children: "D\xE9verrouiller"
      })
    })]
  });
};
var _default = exports.default = LockScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0TmF0aXZlIiwiX0xvY2tDb250ZXh0IiwiX2pzeFJ1bnRpbWUiLCJMb2NrU2NyZWVuIiwiX3VzZUxvY2siLCJ1c2VMb2NrIiwidW5sb2NrV2l0aFBpbiIsIl91c2VTdGF0ZSIsInVzZVN0YXRlIiwiX3VzZVN0YXRlMiIsIl9zbGljZWRUb0FycmF5MiIsImRlZmF1bHQiLCJwaW4iLCJzZXRQaW4iLCJfdXNlU3RhdGUzIiwiX3VzZVN0YXRlNCIsImVycm9yIiwic2V0RXJyb3IiLCJvblN1Ym1pdCIsInVzZUNhbGxiYWNrIiwiX2FzeW5jVG9HZW5lcmF0b3IyIiwicmVzIiwib2siLCJyZWFzb24iLCJqc3hzIiwiVmlldyIsInN0eWxlIiwiZmxleCIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsInBhZGRpbmciLCJ0ZXN0SUQiLCJjaGlsZHJlbiIsImpzeCIsIlRleHQiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJtYXJnaW5Cb3R0b20iLCJUZXh0SW5wdXQiLCJ2YWx1ZSIsIm9uQ2hhbmdlVGV4dCIsInBsYWNlaG9sZGVyIiwic2VjdXJlVGV4dEVudHJ5Iiwia2V5Ym9hcmRUeXBlIiwid2lkdGgiLCJib3JkZXJXaWR0aCIsImJvcmRlckNvbG9yIiwiYm9yZGVyUmFkaXVzIiwiY29sb3IiLCJUb3VjaGFibGVPcGFjaXR5Iiwib25QcmVzcyIsImJhY2tncm91bmRDb2xvciIsInBhZGRpbmdWZXJ0aWNhbCIsInBhZGRpbmdIb3Jpem9udGFsIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiTG9ja1NjcmVlbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc2NyZWVucy9Mb2NrL0xvY2tTY3JlZW4uanNcclxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBWaWV3LCBUZXh0LCBUZXh0SW5wdXQsIFRvdWNoYWJsZU9wYWNpdHkgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgeyB1c2VMb2NrIH0gZnJvbSAnLi4vLi4vY29udGV4dHMvTG9ja0NvbnRleHQnO1xyXG5cclxuY29uc3QgTG9ja1NjcmVlbiA9ICgpID0+IHtcclxuICBjb25zdCB7IHVubG9ja1dpdGhQaW4gfSA9IHVzZUxvY2soKTtcclxuICBjb25zdCBbcGluLCBzZXRQaW5dID0gdXNlU3RhdGUoJycpO1xyXG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGUoJycpO1xyXG5cclxuICBjb25zdCBvblN1Ym1pdCA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHVubG9ja1dpdGhQaW4ocGluKTtcclxuICAgIGlmICghcmVzLm9rKSB7XHJcbiAgICAgIHNldEVycm9yKHJlcy5yZWFzb24gPT09ICdsb2Nrb3V0JyA/ICdUcm9wIGRlIHRlbnRhdGl2ZXMuIFLDqWVzc2FpZSBwbHVzIHRhcmQuJyA6ICdQSU4gaW5jb3JyZWN0Jyk7XHJcbiAgICB9XHJcbiAgfSwgW3BpbiwgdW5sb2NrV2l0aFBpbl0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXcgc3R5bGU9e3sgZmxleDogMSwgYWxpZ25JdGVtczogJ2NlbnRlcicsIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJywgcGFkZGluZzogMjQgfX0gdGVzdElEPVwibG9jay1zY3JlZW5cIj5cclxuICAgICAgPFRleHQgc3R5bGU9e3sgZm9udFNpemU6IDIyLCBmb250V2VpZ2h0OiAnNzAwJywgbWFyZ2luQm90dG9tOiAxMiB9fT5Ew6l2ZXJyb3VpbGxlcjwvVGV4dD5cclxuICAgICAgPFRleHRJbnB1dFxyXG4gICAgICAgIHZhbHVlPXtwaW59XHJcbiAgICAgICAgb25DaGFuZ2VUZXh0PXtzZXRQaW59XHJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJDb2RlIFBJTlwiXHJcbiAgICAgICAgc2VjdXJlVGV4dEVudHJ5XHJcbiAgICAgICAga2V5Ym9hcmRUeXBlPVwibnVtYmVyLXBhZFwiXHJcbiAgICAgICAgc3R5bGU9e3sgd2lkdGg6ICc4MCUnLCBib3JkZXJXaWR0aDogMSwgYm9yZGVyQ29sb3I6ICcjRTVFN0VCJywgYm9yZGVyUmFkaXVzOiA4LCBwYWRkaW5nOiAxMiwgbWFyZ2luQm90dG9tOiA4IH19XHJcbiAgICAgICAgdGVzdElEPVwicGluLWlucHV0XCJcclxuICAgICAgLz5cclxuICAgICAgeyEhZXJyb3IgJiYgPFRleHQgc3R5bGU9e3sgY29sb3I6ICcjREMyNjI2JywgbWFyZ2luQm90dG9tOiA4IH19PntlcnJvcn08L1RleHQ+fVxyXG4gICAgICA8VG91Y2hhYmxlT3BhY2l0eSBvblByZXNzPXtvblN1Ym1pdH0gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAnIzNCODJGNicsIHBhZGRpbmdWZXJ0aWNhbDogMTIsIHBhZGRpbmdIb3Jpem9udGFsOiAxOCwgYm9yZGVyUmFkaXVzOiAxMCB9fSB0ZXN0SUQ9XCJwaW4tc3VibWl0XCI+XHJcbiAgICAgICAgPFRleHQgc3R5bGU9e3sgY29sb3I6ICd3aGl0ZScsIGZvbnRXZWlnaHQ6ICc3MDAnIH19PkTDqXZlcnJvdWlsbGVyPC9UZXh0PlxyXG4gICAgICA8L1RvdWNoYWJsZU9wYWNpdHk+XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IExvY2tTY3JlZW47XHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0EsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsWUFBQSxHQUFBRixPQUFBO0FBQXFELElBQUFHLFdBQUEsR0FBQUgsT0FBQTtBQUVyRCxJQUFNSSxVQUFVLEdBQUcsU0FBYkEsVUFBVUEsQ0FBQSxFQUFTO0VBQ3ZCLElBQUFDLFFBQUEsR0FBMEIsSUFBQUMsb0JBQU8sRUFBQyxDQUFDO0lBQTNCQyxhQUFhLEdBQUFGLFFBQUEsQ0FBYkUsYUFBYTtFQUNyQixJQUFBQyxT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