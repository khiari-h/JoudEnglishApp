92a65ae56eaa2e4147a9e607f3d69cab
_getJestObj().mock('react-native', function () {
  return Object.assign({}, jest.requireActual('react-native'), {
    ActivityIndicator: jest.fn(function () {
      return null;
    })
  });
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _reactNative = require("@testing-library/react-native");
var _ButtonSpinner = _interopRequireDefault(require("../../../../src/components/ui/Button/ButtonSpinner"));
var _reactNative2 = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('ButtonSpinner', function () {
  beforeEach(function () {
    _reactNative2.ActivityIndicator.mockClear();
  });
  it('devrait rendre un ActivityIndicator avec les props size et color', function () {
    var mockSize = 'large';
    var mockColor = '#FF0000';
    (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ButtonSpinner.default, {
      size: mockSize,
      color: mockColor
    }));
    expect(_reactNative2.ActivityIndicator).toHaveBeenCalledWith(expect.objectContaining({
      size: mockSize,
      color: mockColor,
      testID: 'button-loader'
    }), {});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJPYmplY3QiLCJhc3NpZ24iLCJqZXN0IiwicmVxdWlyZUFjdHVhbCIsIkFjdGl2aXR5SW5kaWNhdG9yIiwiZm4iLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9CdXR0b25TcGlubmVyIiwiX3JlYWN0TmF0aXZlMiIsIl9qc3hSdW50aW1lIiwiX3JlcXVpcmUiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJtb2NrQ2xlYXIiLCJpdCIsIm1vY2tTaXplIiwibW9ja0NvbG9yIiwicmVuZGVyIiwianN4IiwiZGVmYXVsdCIsInNpemUiLCJjb2xvciIsImV4cGVjdCIsInRvSGF2ZUJlZW5DYWxsZWRXaXRoIiwib2JqZWN0Q29udGFpbmluZyIsInRlc3RJRCJdLCJzb3VyY2VzIjpbIkJ1dHRvblNwaW5uZXIudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCBCdXR0b25TcGlubmVyIGZyb20gJy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3VpL0J1dHRvbi9CdXR0b25TcGlubmVyJztcclxuaW1wb3J0IHsgQWN0aXZpdHlJbmRpY2F0b3IgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5cclxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUnLCAoKSA9PiAoe1xyXG4gIC4uLmplc3QucmVxdWlyZUFjdHVhbCgncmVhY3QtbmF0aXZlJyksXHJcbiAgQWN0aXZpdHlJbmRpY2F0b3I6IGplc3QuZm4oKCkgPT4gbnVsbCksXHJcbn0pKTtcclxuXHJcbmRlc2NyaWJlKCdCdXR0b25TcGlubmVyJywgKCkgPT4ge1xyXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gICAgLy8gUsOpaW5pdGlhbGlzZSBsZSBtb2NrIGF2YW50IGNoYXF1ZSB0ZXN0XHJcbiAgICBBY3Rpdml0eUluZGljYXRvci5tb2NrQ2xlYXIoKTsgXHJcbiAgfSk7XHJcblxyXG4gIGl0KCdkZXZyYWl0IHJlbmRyZSB1biBBY3Rpdml0eUluZGljYXRvciBhdmVjIGxlcyBwcm9wcyBzaXplIGV0IGNvbG9yJywgKCkgPT4ge1xyXG4gICAgY29uc3QgbW9ja1NpemUgPSAnbGFyZ2UnO1xyXG4gICAgY29uc3QgbW9ja0NvbG9yID0gJyNGRjAwMDAnO1xyXG4gICAgcmVuZGVyKDxCdXR0b25TcGlubmVyIHNpemU9e21vY2tTaXplfSBjb2xvcj17bW9ja0NvbG9yfSAvPik7XHJcbiAgICBcclxuICAgIGV4cGVjdChBY3Rpdml0eUluZGljYXRvcikudG9IYXZlQmVlbkNhbGxlZFdpdGgoXHJcbiAgICAgIGV4cGVjdC5vYmplY3RDb250YWluaW5nKHtcclxuICAgICAgICBzaXplOiBtb2NrU2l6ZSxcclxuICAgICAgICBjb2xvcjogbW9ja0NvbG9yLFxyXG4gICAgICAgIHRlc3RJRDogJ2J1dHRvbi1sb2FkZXInLFxyXG4gICAgICB9KSxcclxuICAgICAge31cclxuICAgICk7XHJcbiAgfSk7XHJcbn0pOyJdLCJtYXBwaW5ncyI6IkFBSUFBLFdBQUEsR0FBS0MsSUFBSSxDQUFDLGNBQWMsRUFBRTtFQUFBLE9BQUFDLE1BQUEsQ0FBQUMsTUFBQSxLQUNyQkMsSUFBSSxDQUFDQyxhQUFhLENBQUMsY0FBYyxDQUFDO0lBQ3JDQyxpQkFBaUIsRUFBRUYsSUFBSSxDQUFDRyxFQUFFLENBQUM7TUFBQSxPQUFNLElBQUk7SUFBQTtFQUFDO0FBQUEsQ0FDdEMsQ0FBQztBQUFDLElBQUFDLHNCQUFBLEdBQUFDLE9BQUE7QUFQSixJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxjQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRyxhQUFBLEdBQUFILE9BQUE7QUFBaUQsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBQUEsU0FBQVQsWUFBQTtFQUFBLElBQUFjLFFBQUEsR0FBQUwsT0FBQTtJQUFBTCxJQUFBLEdBQUFVLFFBQUEsQ0FBQVYsSUFBQTtFQUFBSixXQUFBLFlBQUFBLFlBQUE7SUFBQSxPQUFBSSxJQUFBO0VBQUE7RUFBQSxPQUFBQSxJQUFBO0FBQUE7QUFPakRXLFFBQVEsQ0FBQyxlQUFlLEVBQUUsWUFBTTtFQUM5QkMsVUFBVSxDQUFDLFlBQU07SUFFZlYsK0JBQWlCLENBQUNXLFNBQVMsQ0FBQyxDQUFDO0VBQy9CLENBQUMsQ0FBQztFQUVGQyxFQUFFLENBQUMsa0VBQWtFLEVBQUUsWUFBTTtJQUMzRSxJQUFNQyxRQUFRLEdBQUcsT0FBTztJQUN4QixJQUFNQyxTQUFTLEdBQUcsU0FBUztJQUMzQixJQUFBQyxtQkFBTSxFQUFDLElBQUFSLFdBQUEsQ0FBQVMsR0FBQSxFQUFDWCxjQUFBLENBQUFZLE9BQWE7TUFBQ0MsSUFBSSxFQUFFTCxRQUFTO01BQUNNLEtBQUssRUFBRUw7SUFBVSxDQUFFLENBQUMsQ0FBQztJQUUzRE0sTUFBTSxDQUFDcEIsK0JBQWlCLENBQUMsQ0FBQ3FCLG9CQUFvQixDQUM1Q0QsTUFBTSxDQUFDRSxnQkFBZ0IsQ0FBQztNQUN0QkosSUFBSSxFQUFFTCxRQUFRO01BQ2RNLEtBQUssRUFBRUwsU0FBUztNQUNoQlMsTUFBTSxFQUFFO0lBQ1YsQ0FBQyxDQUFDLEVBQ0YsQ0FBQyxDQUNILENBQUM7RUFDSCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=