{"version":3,"names":["View","Text","TouchableOpacity","useCallback","HeroCard","createStyles","jsx","_jsx","jsxs","_jsxs","cov_1h1n10po0c","s","HomophoneChoices","_ref","sentence","_ref$choices","choices","b","selectedChoice","onSelectChoice","_ref$disabled","disabled","_ref$levelColor","levelColor","f","styles","handleSelectChoice","choice","style","container","children","content","fontSize","showUnderline","heroCard","choicesLabel","choicesGrid","map","index","isSelected","choiceButton","borderColor","backgroundColor","disabledChoice","onPress","choiceContent","choiceIndicator","choiceIndicatorText","color","String","fromCharCode","choiceText","fontWeight"],"sources":["index.js"],"sourcesContent":["// HomophoneChoices/index.js - VERSION NETTOYÃ‰E (logique simplifiÃ©e)\r\n\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { useCallback } from \"react\";\r\nimport HeroCard from \"../../../../components/ui/HeroCard\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * ðŸ‘‚ HomophoneChoices - Version NettoyÃ©e\r\n * Logique simplifiÃ©e + design cohÃ©rent\r\n * \r\n * @param {string} sentence - La phrase avec le blanc Ã  complÃ©ter\r\n * @param {Array} choices - Les choix possibles\r\n * @param {string} selectedChoice - Le choix actuellement sÃ©lectionnÃ©\r\n * @param {function} onSelectChoice - Fonction appelÃ©e lors de la sÃ©lection\r\n * @param {boolean} disabled - Si les choix sont dÃ©sactivÃ©s\r\n * @param {string} levelColor - Couleur du niveau\r\n */\r\nconst HomophoneChoices = ({\r\n  sentence,\r\n  choices = [],\r\n  selectedChoice,\r\n  onSelectChoice,\r\n  disabled = false,\r\n  levelColor = \"#3b82f6\",\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n\r\n  // Handler stable pour la sÃ©lection d'un choix\r\n  const handleSelectChoice = useCallback(\r\n    (choice) => () => {\r\n      if (!disabled) {\r\n        onSelectChoice(choice);\r\n      }\r\n    },\r\n    [onSelectChoice, disabled]\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* ðŸŽ¯ HERO SECTION - Phrase avec blanc */}\r\n      <HeroCard \r\n        content={sentence}\r\n        fontSize={20}\r\n        levelColor={levelColor}\r\n        showUnderline={false}\r\n        style={styles.heroCard}\r\n      />\r\n\r\n      {/* âœ… CHOIX MULTIPLES */}\r\n      <Text style={styles.choicesLabel}>Choisissez le mot correct :</Text>\r\n\r\n      <View style={styles.choicesGrid}>\r\n        {choices.map((choice, index) => {\r\n          const isSelected = selectedChoice === choice;\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              key={choice}\r\n              style={[\r\n                styles.choiceButton,\r\n                isSelected && {\r\n                  borderColor: levelColor,\r\n                  backgroundColor: `${levelColor}15`,\r\n                },\r\n                disabled && styles.disabledChoice\r\n              ]}\r\n              onPress={handleSelectChoice(choice)}\r\n              disabled={disabled}\r\n            >\r\n              <View style={styles.choiceContent}>\r\n                <View style={[\r\n                  styles.choiceIndicator,\r\n                  isSelected && { backgroundColor: levelColor }\r\n                ]}>\r\n                  <Text style={[\r\n                    styles.choiceIndicatorText,\r\n                    isSelected && { color: 'white' }\r\n                  ]}>\r\n                    {String.fromCharCode(65 + index)} {/* A, B, C, D */}\r\n                  </Text>\r\n                </View>\r\n                \r\n                <Text style={[\r\n                  styles.choiceText,\r\n                  isSelected && { \r\n                    color: levelColor, \r\n                    fontWeight: '700' \r\n                  }\r\n                ]}>\r\n                  {choice}\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HomophoneChoices;"],"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","ignoreList":[]}