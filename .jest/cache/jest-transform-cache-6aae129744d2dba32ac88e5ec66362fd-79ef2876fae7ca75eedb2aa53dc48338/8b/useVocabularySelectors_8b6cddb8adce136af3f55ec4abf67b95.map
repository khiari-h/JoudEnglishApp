{"version":3,"names":["_react","require","useVocabularySelectors","_ref","exercises","completedWords","categoryIndex","wordIndex","totalWordsInCategory","currentWord","currentCategory","getStats","useCallback","_completedWords$categ","totalWords","reduce","sum","cat","_cat$words","words","length","completedWordsCount","Object","values","completed","categoryCount","totalProgress","Math","round","completedInCurrentCategory","totalInCurrentCategory","getDisplayData","wordCounter","categories","map","title","canGoToPrevious","previousCategory","isLastWordInExercise"],"sources":["useVocabularySelectors.js"],"sourcesContent":["// src/screens/exercises/vocabulary/hooks/internal/useVocabularySelectors.js\r\nimport { useCallback } from 'react';\r\n\r\nexport default function useVocabularySelectors({\r\n  exercises,\r\n  completedWords,\r\n  categoryIndex,\r\n  wordIndex,\r\n  totalWordsInCategory,\r\n  currentWord,\r\n  currentCategory,\r\n}) {\r\n  const getStats = useCallback(() => {\r\n    const totalWords = exercises.reduce((sum, cat) => sum + (cat.words?.length || 0), 0);\r\n    const completedWordsCount = Object.values(completedWords).reduce((sum, completed) => {\r\n      const categoryCount = (completed || []).length;\r\n      return sum + categoryCount;\r\n    }, 0);\r\n    const totalProgress = totalWords > 0 ? Math.round((completedWordsCount / totalWords) * 100) : 0;\r\n    return {\r\n      totalWords,\r\n      completedWordsCount,\r\n      totalProgress,\r\n      completedInCurrentCategory: completedWords[categoryIndex]?.length || 0,\r\n      totalInCurrentCategory: totalWordsInCategory,\r\n    };\r\n  }, [exercises, completedWords, categoryIndex, totalWordsInCategory]);\r\n\r\n  const getDisplayData = useCallback(() => {\r\n    const wordCounter = `${wordIndex + 1} / ${totalWordsInCategory}`;\r\n    const categories = exercises.map((cat) => cat.title);\r\n    return { wordCounter, categories, currentWord, currentCategory };\r\n  }, [wordIndex, totalWordsInCategory, exercises, currentWord, currentCategory]);\r\n\r\n  const canGoToPrevious = useCallback(() => {\r\n    if (wordIndex > 0) return true;\r\n    if (categoryIndex > 0) {\r\n      const previousCategory = exercises[categoryIndex - 1];\r\n      return previousCategory?.words && previousCategory.words.length > 0;\r\n    }\r\n    return false;\r\n  }, [wordIndex, categoryIndex, exercises]);\r\n\r\n  const isLastWordInExercise = useCallback(() => {\r\n    return wordIndex === totalWordsInCategory - 1;\r\n  }, [wordIndex, totalWordsInCategory]);\r\n\r\n  return {\r\n    getStats,\r\n    getDisplayData,\r\n    canGoToPrevious,\r\n    isLastWordInExercise,\r\n  };\r\n}\r\n\r\n\r\n"],"mappings":";;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AAEe,SAASC,sBAAsBA,CAAAC,IAAA,EAQ3C;EAAA,IAPDC,SAAS,GAAAD,IAAA,CAATC,SAAS;IACTC,cAAc,GAAAF,IAAA,CAAdE,cAAc;IACdC,aAAa,GAAAH,IAAA,CAAbG,aAAa;IACbC,SAAS,GAAAJ,IAAA,CAATI,SAAS;IACTC,oBAAoB,GAAAL,IAAA,CAApBK,oBAAoB;IACpBC,WAAW,GAAAN,IAAA,CAAXM,WAAW;IACXC,eAAe,GAAAP,IAAA,CAAfO,eAAe;EAEf,IAAMC,QAAQ,GAAG,IAAAC,kBAAW,EAAC,YAAM;IAAA,IAAAC,qBAAA;IACjC,IAAMC,UAAU,GAAGV,SAAS,CAACW,MAAM,CAAC,UAACC,GAAG,EAAEC,GAAG;MAAA,IAAAC,UAAA;MAAA,OAAKF,GAAG,IAAI,EAAAE,UAAA,GAAAD,GAAG,CAACE,KAAK,qBAATD,UAAA,CAAWE,MAAM,KAAI,CAAC,CAAC;IAAA,GAAE,CAAC,CAAC;IACpF,IAAMC,mBAAmB,GAAGC,MAAM,CAACC,MAAM,CAAClB,cAAc,CAAC,CAACU,MAAM,CAAC,UAACC,GAAG,EAAEQ,SAAS,EAAK;MACnF,IAAMC,aAAa,GAAG,CAACD,SAAS,IAAI,EAAE,EAAEJ,MAAM;MAC9C,OAAOJ,GAAG,GAAGS,aAAa;IAC5B,CAAC,EAAE,CAAC,CAAC;IACL,IAAMC,aAAa,GAAGZ,UAAU,GAAG,CAAC,GAAGa,IAAI,CAACC,KAAK,CAAEP,mBAAmB,GAAGP,UAAU,GAAI,GAAG,CAAC,GAAG,CAAC;IAC/F,OAAO;MACLA,UAAU,EAAVA,UAAU;MACVO,mBAAmB,EAAnBA,mBAAmB;MACnBK,aAAa,EAAbA,aAAa;MACbG,0BAA0B,EAAE,EAAAhB,qBAAA,GAAAR,cAAc,CAACC,aAAa,CAAC,qBAA7BO,qBAAA,CAA+BO,MAAM,KAAI,CAAC;MACtEU,sBAAsB,EAAEtB;IAC1B,CAAC;EACH,CAAC,EAAE,CAACJ,SAAS,EAAEC,cAAc,EAAEC,aAAa,EAAEE,oBAAoB,CAAC,CAAC;EAEpE,IAAMuB,cAAc,GAAG,IAAAnB,kBAAW,EAAC,YAAM;IACvC,IAAMoB,WAAW,GAAG,GAAGzB,SAAS,GAAG,CAAC,MAAMC,oBAAoB,EAAE;IAChE,IAAMyB,UAAU,GAAG7B,SAAS,CAAC8B,GAAG,CAAC,UAACjB,GAAG;MAAA,OAAKA,GAAG,CAACkB,KAAK;IAAA,EAAC;IACpD,OAAO;MAAEH,WAAW,EAAXA,WAAW;MAAEC,UAAU,EAAVA,UAAU;MAAExB,WAAW,EAAXA,WAAW;MAAEC,eAAe,EAAfA;IAAgB,CAAC;EAClE,CAAC,EAAE,CAACH,SAAS,EAAEC,oBAAoB,EAAEJ,SAAS,EAAEK,WAAW,EAAEC,eAAe,CAAC,CAAC;EAE9E,IAAM0B,eAAe,GAAG,IAAAxB,kBAAW,EAAC,YAAM;IACxC,IAAIL,SAAS,GAAG,CAAC,EAAE,OAAO,IAAI;IAC9B,IAAID,aAAa,GAAG,CAAC,EAAE;MACrB,IAAM+B,gBAAgB,GAAGjC,SAAS,CAACE,aAAa,GAAG,CAAC,CAAC;MACrD,OAAO,CAAA+B,gBAAgB,oBAAhBA,gBAAgB,CAAElB,KAAK,KAAIkB,gBAAgB,CAAClB,KAAK,CAACC,MAAM,GAAG,CAAC;IACrE;IACA,OAAO,KAAK;EACd,CAAC,EAAE,CAACb,SAAS,EAAED,aAAa,EAAEF,SAAS,CAAC,CAAC;EAEzC,IAAMkC,oBAAoB,GAAG,IAAA1B,kBAAW,EAAC,YAAM;IAC7C,OAAOL,SAAS,KAAKC,oBAAoB,GAAG,CAAC;EAC/C,CAAC,EAAE,CAACD,SAAS,EAAEC,oBAAoB,CAAC,CAAC;EAErC,OAAO;IACLG,QAAQ,EAARA,QAAQ;IACRoB,cAAc,EAAdA,cAAc;IACdK,eAAe,EAAfA,eAAe;IACfE,oBAAoB,EAApBA;EACF,CAAC;AACH","ignoreList":[]}