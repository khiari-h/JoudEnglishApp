80fa09512ce07034dce1bc8717f89821
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useVocabularySelectors;
var _react = require("react");
function useVocabularySelectors(_ref) {
  var exercises = _ref.exercises,
    completedWords = _ref.completedWords,
    categoryIndex = _ref.categoryIndex,
    wordIndex = _ref.wordIndex,
    totalWordsInCategory = _ref.totalWordsInCategory,
    currentWord = _ref.currentWord,
    currentCategory = _ref.currentCategory;
  var getStats = (0, _react.useCallback)(function () {
    var _completedWords$categ;
    var totalWords = exercises.reduce(function (sum, cat) {
      var _cat$words;
      return sum + (((_cat$words = cat.words) == null ? void 0 : _cat$words.length) || 0);
    }, 0);
    var completedWordsCount = Object.values(completedWords).reduce(function (sum, completed) {
      var categoryCount = (completed || []).length;
      return sum + categoryCount;
    }, 0);
    var totalProgress = totalWords > 0 ? Math.round(completedWordsCount / totalWords * 100) : 0;
    return {
      totalWords: totalWords,
      completedWordsCount: completedWordsCount,
      totalProgress: totalProgress,
      completedInCurrentCategory: ((_completedWords$categ = completedWords[categoryIndex]) == null ? void 0 : _completedWords$categ.length) || 0,
      totalInCurrentCategory: totalWordsInCategory
    };
  }, [exercises, completedWords, categoryIndex, totalWordsInCategory]);
  var getDisplayData = (0, _react.useCallback)(function () {
    var wordCounter = `${wordIndex + 1} / ${totalWordsInCategory}`;
    var categories = exercises.map(function (cat) {
      return cat.title;
    });
    return {
      wordCounter: wordCounter,
      categories: categories,
      currentWord: currentWord,
      currentCategory: currentCategory
    };
  }, [wordIndex, totalWordsInCategory, exercises, currentWord, currentCategory]);
  var canGoToPrevious = (0, _react.useCallback)(function () {
    if (wordIndex > 0) return true;
    if (categoryIndex > 0) {
      var previousCategory = exercises[categoryIndex - 1];
      return (previousCategory == null ? void 0 : previousCategory.words) && previousCategory.words.length > 0;
    }
    return false;
  }, [wordIndex, categoryIndex, exercises]);
  var isLastWordInExercise = (0, _react.useCallback)(function () {
    return wordIndex === totalWordsInCategory - 1;
  }, [wordIndex, totalWordsInCategory]);
  return {
    getStats: getStats,
    getDisplayData: getDisplayData,
    canGoToPrevious: canGoToPrevious,
    isLastWordInExercise: isLastWordInExercise
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwidXNlVm9jYWJ1bGFyeVNlbGVjdG9ycyIsIl9yZWYiLCJleGVyY2lzZXMiLCJjb21wbGV0ZWRXb3JkcyIsImNhdGVnb3J5SW5kZXgiLCJ3b3JkSW5kZXgiLCJ0b3RhbFdvcmRzSW5DYXRlZ29yeSIsImN1cnJlbnRXb3JkIiwiY3VycmVudENhdGVnb3J5IiwiZ2V0U3RhdHMiLCJ1c2VDYWxsYmFjayIsIl9jb21wbGV0ZWRXb3JkcyRjYXRlZyIsInRvdGFsV29yZHMiLCJyZWR1Y2UiLCJzdW0iLCJjYXQiLCJfY2F0JHdvcmRzIiwid29yZHMiLCJsZW5ndGgiLCJjb21wbGV0ZWRXb3Jkc0NvdW50IiwiT2JqZWN0IiwidmFsdWVzIiwiY29tcGxldGVkIiwiY2F0ZWdvcnlDb3VudCIsInRvdGFsUHJvZ3Jlc3MiLCJNYXRoIiwicm91bmQiLCJjb21wbGV0ZWRJbkN1cnJlbnRDYXRlZ29yeSIsInRvdGFsSW5DdXJyZW50Q2F0ZWdvcnkiLCJnZXREaXNwbGF5RGF0YSIsIndvcmRDb3VudGVyIiwiY2F0ZWdvcmllcyIsIm1hcCIsInRpdGxlIiwiY2FuR29Ub1ByZXZpb3VzIiwicHJldmlvdXNDYXRlZ29yeSIsImlzTGFzdFdvcmRJbkV4ZXJjaXNlIl0sInNvdXJjZXMiOlsidXNlVm9jYWJ1bGFyeVNlbGVjdG9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc2NyZWVucy9leGVyY2lzZXMvdm9jYWJ1bGFyeS9ob29rcy9pbnRlcm5hbC91c2VWb2NhYnVsYXJ5U2VsZWN0b3JzLmpzXHJcbmltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlVm9jYWJ1bGFyeVNlbGVjdG9ycyh7XHJcbiAgZXhlcmNpc2VzLFxyXG4gIGNvbXBsZXRlZFdvcmRzLFxyXG4gIGNhdGVnb3J5SW5kZXgsXHJcbiAgd29yZEluZGV4LFxyXG4gIHRvdGFsV29yZHNJbkNhdGVnb3J5LFxyXG4gIGN1cnJlbnRXb3JkLFxyXG4gIGN1cnJlbnRDYXRlZ29yeSxcclxufSkge1xyXG4gIGNvbnN0IGdldFN0YXRzID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgY29uc3QgdG90YWxXb3JkcyA9IGV4ZXJjaXNlcy5yZWR1Y2UoKHN1bSwgY2F0KSA9PiBzdW0gKyAoY2F0LndvcmRzPy5sZW5ndGggfHwgMCksIDApO1xyXG4gICAgY29uc3QgY29tcGxldGVkV29yZHNDb3VudCA9IE9iamVjdC52YWx1ZXMoY29tcGxldGVkV29yZHMpLnJlZHVjZSgoc3VtLCBjb21wbGV0ZWQpID0+IHtcclxuICAgICAgY29uc3QgY2F0ZWdvcnlDb3VudCA9IChjb21wbGV0ZWQgfHwgW10pLmxlbmd0aDtcclxuICAgICAgcmV0dXJuIHN1bSArIGNhdGVnb3J5Q291bnQ7XHJcbiAgICB9LCAwKTtcclxuICAgIGNvbnN0IHRvdGFsUHJvZ3Jlc3MgPSB0b3RhbFdvcmRzID4gMCA/IE1hdGgucm91bmQoKGNvbXBsZXRlZFdvcmRzQ291bnQgLyB0b3RhbFdvcmRzKSAqIDEwMCkgOiAwO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgdG90YWxXb3JkcyxcclxuICAgICAgY29tcGxldGVkV29yZHNDb3VudCxcclxuICAgICAgdG90YWxQcm9ncmVzcyxcclxuICAgICAgY29tcGxldGVkSW5DdXJyZW50Q2F0ZWdvcnk6IGNvbXBsZXRlZFdvcmRzW2NhdGVnb3J5SW5kZXhdPy5sZW5ndGggfHwgMCxcclxuICAgICAgdG90YWxJbkN1cnJlbnRDYXRlZ29yeTogdG90YWxXb3Jkc0luQ2F0ZWdvcnksXHJcbiAgICB9O1xyXG4gIH0sIFtleGVyY2lzZXMsIGNvbXBsZXRlZFdvcmRzLCBjYXRlZ29yeUluZGV4LCB0b3RhbFdvcmRzSW5DYXRlZ29yeV0pO1xyXG5cclxuICBjb25zdCBnZXREaXNwbGF5RGF0YSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIGNvbnN0IHdvcmRDb3VudGVyID0gYCR7d29yZEluZGV4ICsgMX0gLyAke3RvdGFsV29yZHNJbkNhdGVnb3J5fWA7XHJcbiAgICBjb25zdCBjYXRlZ29yaWVzID0gZXhlcmNpc2VzLm1hcCgoY2F0KSA9PiBjYXQudGl0bGUpO1xyXG4gICAgcmV0dXJuIHsgd29yZENvdW50ZXIsIGNhdGVnb3JpZXMsIGN1cnJlbnRXb3JkLCBjdXJyZW50Q2F0ZWdvcnkgfTtcclxuICB9LCBbd29yZEluZGV4LCB0b3RhbFdvcmRzSW5DYXRlZ29yeSwgZXhlcmNpc2VzLCBjdXJyZW50V29yZCwgY3VycmVudENhdGVnb3J5XSk7XHJcblxyXG4gIGNvbnN0IGNhbkdvVG9QcmV2aW91cyA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIGlmICh3b3JkSW5kZXggPiAwKSByZXR1cm4gdHJ1ZTtcclxuICAgIGlmIChjYXRlZ29yeUluZGV4ID4gMCkge1xyXG4gICAgICBjb25zdCBwcmV2aW91c0NhdGVnb3J5ID0gZXhlcmNpc2VzW2NhdGVnb3J5SW5kZXggLSAxXTtcclxuICAgICAgcmV0dXJuIHByZXZpb3VzQ2F0ZWdvcnk/LndvcmRzICYmIHByZXZpb3VzQ2F0ZWdvcnkud29yZHMubGVuZ3RoID4gMDtcclxuICAgIH1cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9LCBbd29yZEluZGV4LCBjYXRlZ29yeUluZGV4LCBleGVyY2lzZXNdKTtcclxuXHJcbiAgY29uc3QgaXNMYXN0V29yZEluRXhlcmNpc2UgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICByZXR1cm4gd29yZEluZGV4ID09PSB0b3RhbFdvcmRzSW5DYXRlZ29yeSAtIDE7XHJcbiAgfSwgW3dvcmRJbmRleCwgdG90YWxXb3Jkc0luQ2F0ZWdvcnldKTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGdldFN0YXRzLFxyXG4gICAgZ2V0RGlzcGxheURhdGEsXHJcbiAgICBjYW5Hb1RvUHJldmlvdXMsXHJcbiAgICBpc0xhc3RXb3JkSW5FeGVyY2lzZSxcclxuICB9O1xyXG59XHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7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