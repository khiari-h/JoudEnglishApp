740db1671964f4455c2fa3dc45aaba63
function cov_295k3lt65t() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\modes\\MultipleChoiceMode\\style.js";
  var hash = "4c7ce804d87bdf564480683d9c61261f80e185d1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\screens\\exercises\\errorCorrection\\modes\\MultipleChoiceMode\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 108,
          column: 4
        }
      },
      "1": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 108,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 22
          }
        },
        loc: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 108,
            column: 4
          }
        },
        line: 10
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4c7ce804d87bdf564480683d9c61261f80e185d1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_295k3lt65t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_295k3lt65t();
import { StyleSheet, Platform } from 'react-native';
cov_295k3lt65t().s[0]++;
var createStyles = function createStyles() {
  cov_295k3lt65t().f[0]++;
  cov_295k3lt65t().s[1]++;
  return StyleSheet.create({
    container: {
      marginHorizontal: 16,
      marginVertical: 8
    },
    heroCard: {
      marginBottom: 16
    },
    instructionSection: {
      marginBottom: 16
    },
    feedbackSection: {
      marginTop: 16
    },
    choicesContainer: {
      marginVertical: 8
    },
    choiceOption: Object.assign({
      backgroundColor: "white",
      borderWidth: 1,
      borderColor: "#e2e8f0",
      borderRadius: 12,
      marginBottom: 12
    }, Platform.select({
      ios: {
        shadowColor: '#64748b',
        shadowOffset: {
          width: 0,
          height: 1
        },
        shadowOpacity: 0.1,
        shadowRadius: 2
      },
      android: {
        elevation: 2
      }
    })),
    choiceContent: {
      flexDirection: 'row',
      alignItems: 'center',
      padding: 16
    },
    choiceIndicator: {
      width: 32,
      height: 32,
      borderRadius: 16,
      backgroundColor: '#f1f5f9',
      justifyContent: 'center',
      alignItems: 'center',
      marginRight: 16
    },
    choiceIndicatorText: {
      fontSize: 16,
      fontWeight: '700'
    },
    choiceText: {
      flex: 1,
      fontSize: 16,
      color: "#334155",
      lineHeight: 24
    },
    correctChoice: {
      backgroundColor: "#f0fdf4",
      borderWidth: 2,
      borderColor: "#10b981"
    },
    correctChoiceText: {
      color: "#10b981",
      fontWeight: "600"
    },
    correctIndicator: {
      backgroundColor: "#10b981"
    },
    incorrectChoice: {
      backgroundColor: "#fef2f2",
      borderWidth: 2,
      borderColor: "#ef4444"
    },
    incorrectChoiceText: {
      color: "#ef4444",
      fontWeight: "600"
    },
    incorrectIndicator: {
      backgroundColor: "#ef4444"
    }
  });
};
export default createStyles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHlsZVNoZWV0IiwiUGxhdGZvcm0iLCJjb3ZfMjk1azNsdDY1dCIsInMiLCJjcmVhdGVTdHlsZXMiLCJmIiwiY3JlYXRlIiwiY29udGFpbmVyIiwibWFyZ2luSG9yaXpvbnRhbCIsIm1hcmdpblZlcnRpY2FsIiwiaGVyb0NhcmQiLCJtYXJnaW5Cb3R0b20iLCJpbnN0cnVjdGlvblNlY3Rpb24iLCJmZWVkYmFja1NlY3Rpb24iLCJtYXJnaW5Ub3AiLCJjaG9pY2VzQ29udGFpbmVyIiwiY2hvaWNlT3B0aW9uIiwiT2JqZWN0IiwiYXNzaWduIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImJvcmRlclJhZGl1cyIsInNlbGVjdCIsImlvcyIsInNoYWRvd0NvbG9yIiwic2hhZG93T2Zmc2V0Iiwid2lkdGgiLCJoZWlnaHQiLCJzaGFkb3dPcGFjaXR5Iiwic2hhZG93UmFkaXVzIiwiYW5kcm9pZCIsImVsZXZhdGlvbiIsImNob2ljZUNvbnRlbnQiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsInBhZGRpbmciLCJjaG9pY2VJbmRpY2F0b3IiLCJqdXN0aWZ5Q29udGVudCIsIm1hcmdpblJpZ2h0IiwiY2hvaWNlSW5kaWNhdG9yVGV4dCIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImNob2ljZVRleHQiLCJmbGV4IiwiY29sb3IiLCJsaW5lSGVpZ2h0IiwiY29ycmVjdENob2ljZSIsImNvcnJlY3RDaG9pY2VUZXh0IiwiY29ycmVjdEluZGljYXRvciIsImluY29ycmVjdENob2ljZSIsImluY29ycmVjdENob2ljZVRleHQiLCJpbmNvcnJlY3RJbmRpY2F0b3IiXSwic291cmNlcyI6WyJzdHlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNdWx0aXBsZUNob2ljZU1vZGUvc3R5bGUuanMgLSBWRVJTSU9OIFJFRkFDVE9SSVPDiUUgKHN0eWxlcyBtaW5pbWF1eClcclxuXHJcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFBsYXRmb3JtIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuXHJcbi8qKlxyXG4gKiDwn46vIFN0eWxlcyB1bHRyYS1zaW1wbGlmacOpcyBwb3VyIE11bHRpcGxlQ2hvaWNlTW9kZVxyXG4gKiBGb2N1cyBzdXIgbGVzIGNob2l4IG11bHRpcGxlcyBhdmVjIGluZGljYXRldXJzXHJcbiAqL1xyXG5jb25zdCBjcmVhdGVTdHlsZXMgPSAoKSA9PlxyXG4gIFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gQ09OVEFJTkVSID09PT09PT09PT09PT09PT09PT1cclxuICAgIGNvbnRhaW5lcjoge1xyXG4gICAgICBtYXJnaW5Ib3Jpem9udGFsOiAxNixcclxuICAgICAgbWFyZ2luVmVydGljYWw6IDgsXHJcbiAgICB9LFxyXG5cclxuICAgIC8vID09PT09PT09PT09PT09PT09PT0gU0VDVElPTlMgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgaGVyb0NhcmQ6IHtcclxuICAgICAgbWFyZ2luQm90dG9tOiAxNixcclxuICAgIH0sXHJcbiAgICBpbnN0cnVjdGlvblNlY3Rpb246IHtcclxuICAgICAgbWFyZ2luQm90dG9tOiAxNixcclxuICAgIH0sXHJcbiAgICBmZWVkYmFja1NlY3Rpb246IHtcclxuICAgICAgbWFyZ2luVG9wOiAxNixcclxuICAgIH0sXHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBDSE9JWCBDT05UQUlORVIgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgY2hvaWNlc0NvbnRhaW5lcjoge1xyXG4gICAgICBtYXJnaW5WZXJ0aWNhbDogOCxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBDSE9JWCBJTkRJVklEVUVMUyA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBjaG9pY2VPcHRpb246IHtcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiBcIndoaXRlXCIsXHJcbiAgICAgIGJvcmRlcldpZHRoOiAxLFxyXG4gICAgICBib3JkZXJDb2xvcjogXCIjZTJlOGYwXCIsXHJcbiAgICAgIGJvcmRlclJhZGl1czogMTIsXHJcbiAgICAgIG1hcmdpbkJvdHRvbTogMTIsXHJcbiAgICAgIC4uLlBsYXRmb3JtLnNlbGVjdCh7XHJcbiAgICAgICAgaW9zOiB7XHJcbiAgICAgICAgICBzaGFkb3dDb2xvcjogJyM2NDc0OGInLFxyXG4gICAgICAgICAgc2hhZG93T2Zmc2V0OiB7IHdpZHRoOiAwLCBoZWlnaHQ6IDEgfSxcclxuICAgICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMSxcclxuICAgICAgICAgIHNoYWRvd1JhZGl1czogMixcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFuZHJvaWQ6IHtcclxuICAgICAgICAgIGVsZXZhdGlvbjogMixcclxuICAgICAgICB9LFxyXG4gICAgICB9KSxcclxuICAgIH0sXHJcblxyXG4gICAgY2hvaWNlQ29udGVudDoge1xyXG4gICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcclxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICAgIHBhZGRpbmc6IDE2LFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09IElORElDQVRFVVJTIChBLCBCLCBDLCBEKSA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBjaG9pY2VJbmRpY2F0b3I6IHtcclxuICAgICAgd2lkdGg6IDMyLFxyXG4gICAgICBoZWlnaHQ6IDMyLFxyXG4gICAgICBib3JkZXJSYWRpdXM6IDE2LFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZjFmNWY5JyxcclxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgICAgbWFyZ2luUmlnaHQ6IDE2LFxyXG4gICAgfSxcclxuICAgIGNob2ljZUluZGljYXRvclRleHQ6IHtcclxuICAgICAgZm9udFNpemU6IDE2LFxyXG4gICAgICBmb250V2VpZ2h0OiAnNzAwJyxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSBURVhURSBDSE9JWCA9PT09PT09PT09PT09PT09PT09XHJcbiAgICBjaG9pY2VUZXh0OiB7XHJcbiAgICAgIGZsZXg6IDEsXHJcbiAgICAgIGZvbnRTaXplOiAxNixcclxuICAgICAgY29sb3I6IFwiIzMzNDE1NVwiLFxyXG4gICAgICBsaW5lSGVpZ2h0OiAyNCxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PSDDiVRBVFMgRkVFREJBQ0sgPT09PT09PT09PT09PT09PT09PVxyXG4gICAgY29ycmVjdENob2ljZToge1xyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI2YwZmRmNFwiLFxyXG4gICAgICBib3JkZXJXaWR0aDogMixcclxuICAgICAgYm9yZGVyQ29sb3I6IFwiIzEwYjk4MVwiLFxyXG4gICAgfSxcclxuICAgIGNvcnJlY3RDaG9pY2VUZXh0OiB7XHJcbiAgICAgIGNvbG9yOiBcIiMxMGI5ODFcIixcclxuICAgICAgZm9udFdlaWdodDogXCI2MDBcIixcclxuICAgIH0sXHJcbiAgICBjb3JyZWN0SW5kaWNhdG9yOiB7XHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjMTBiOTgxXCIsXHJcbiAgICB9LFxyXG5cclxuICAgIGluY29ycmVjdENob2ljZToge1xyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI2ZlZjJmMlwiLFxyXG4gICAgICBib3JkZXJXaWR0aDogMixcclxuICAgICAgYm9yZGVyQ29sb3I6IFwiI2VmNDQ0NFwiLFxyXG4gICAgfSxcclxuICAgIGluY29ycmVjdENob2ljZVRleHQ6IHtcclxuICAgICAgY29sb3I6IFwiI2VmNDQ0NFwiLFxyXG4gICAgICBmb250V2VpZ2h0OiBcIjYwMFwiLFxyXG4gICAgfSxcclxuICAgIGluY29ycmVjdEluZGljYXRvcjoge1xyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI2VmNDQ0NFwiLFxyXG4gICAgfSxc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