39fa50ae080b18e784213f86386b513a
_getJestObj().mock('expo-router', function () {
  return {
    router: {
      push: jest.fn()
    },
    useFocusEffect: jest.fn(function () {})
  };
});
_getJestObj().mock('../../src/utils/vocabulary/vocabularyDataHelper', function () {
  return {
    isBonusLevel: jest.fn(function () {
      return false;
    }),
    getLevelColor: jest.fn(function () {
      return '#007AFF';
    }),
    getVocabularyData: jest.fn(function () {
      return {
        exercises: [{
          title: 'Cat',
          words: [{
            word: 'hello'
          }]
        }]
      };
    }),
    loadVocabularyData: jest.fn((0, _asyncToGenerator2.default)(function* () {
      return {
        exercises: [{
          title: 'Cat',
          words: [{
            word: 'hello'
          }]
        }]
      };
    }))
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _vocabulary = _interopRequireDefault(require("../../src/screens/exercises/vocabulary"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('VocabularyExercise accessibility', function () {
  it('should render navigation buttons accessible', (0, _asyncToGenerator2.default)(function* () {
    var params = {
      level: '1',
      mode: 'classic'
    };
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_vocabulary.default, {
        route: {
          params: params
        }
      })),
      getAllByRole = _render.getAllByRole;
    yield (0, _reactNative.waitFor)(function () {
      var buttons = getAllByRole('button');
      expect(buttons.length).toBeGreaterThan(0);
    });
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJyb3V0ZXIiLCJwdXNoIiwiamVzdCIsImZuIiwidXNlRm9jdXNFZmZlY3QiLCJpc0JvbnVzTGV2ZWwiLCJnZXRMZXZlbENvbG9yIiwiZ2V0Vm9jYWJ1bGFyeURhdGEiLCJleGVyY2lzZXMiLCJ0aXRsZSIsIndvcmRzIiwid29yZCIsImxvYWRWb2NhYnVsYXJ5RGF0YSIsIl9hc3luY1RvR2VuZXJhdG9yMiIsImRlZmF1bHQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl9yZWFjdE5hdGl2ZSIsIl92b2NhYnVsYXJ5IiwiX2pzeFJ1bnRpbWUiLCJfcmVxdWlyZSIsImRlc2NyaWJlIiwiaXQiLCJwYXJhbXMiLCJsZXZlbCIsIm1vZGUiLCJfcmVuZGVyIiwicmVuZGVyIiwianN4Iiwicm91dGUiLCJnZXRBbGxCeVJvbGUiLCJ3YWl0Rm9yIiwiYnV0dG9ucyIsImV4cGVjdCIsImxlbmd0aCIsInRvQmVHcmVhdGVyVGhhbiJdLCJzb3VyY2VzIjpbIlZvY2FidWxhcnlFeGVyY2lzZS5hMTF5LnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgcmVuZGVyLCB3YWl0Rm9yIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgVm9jYWJ1bGFyeUV4ZXJjaXNlIGZyb20gJy4uLy4uL3NyYy9zY3JlZW5zL2V4ZXJjaXNlcy92b2NhYnVsYXJ5JztcclxuXHJcbmplc3QubW9jaygnZXhwby1yb3V0ZXInLCAoKSA9PiAoeyByb3V0ZXI6IHsgcHVzaDogamVzdC5mbigpIH0sIHVzZUZvY3VzRWZmZWN0OiBqZXN0LmZuKCgpID0+IHt9KSB9KSk7XHJcblxyXG5qZXN0Lm1vY2soJy4uLy4uL3NyYy91dGlscy92b2NhYnVsYXJ5L3ZvY2FidWxhcnlEYXRhSGVscGVyJywgKCkgPT4gKHtcclxuICBpc0JvbnVzTGV2ZWw6IGplc3QuZm4oKCkgPT4gZmFsc2UpLFxyXG4gIGdldExldmVsQ29sb3I6IGplc3QuZm4oKCkgPT4gJyMwMDdBRkYnKSxcclxuICBnZXRWb2NhYnVsYXJ5RGF0YTogamVzdC5mbigoKSA9PiAoeyBleGVyY2lzZXM6IFt7IHRpdGxlOiAnQ2F0Jywgd29yZHM6IFt7IHdvcmQ6ICdoZWxsbycgfV0gfV0gfSkpLFxyXG4gIGxvYWRWb2NhYnVsYXJ5RGF0YTogamVzdC5mbihhc3luYyAoKSA9PiAoeyBleGVyY2lzZXM6IFt7IHRpdGxlOiAnQ2F0Jywgd29yZHM6IFt7IHdvcmQ6ICdoZWxsbycgfV0gfV0gfSkpLFxyXG59KSk7XHJcblxyXG5kZXNjcmliZSgnVm9jYWJ1bGFyeUV4ZXJjaXNlIGFjY2Vzc2liaWxpdHknLCAoKSA9PiB7XHJcbiAgaXQoJ3Nob3VsZCByZW5kZXIgbmF2aWdhdGlvbiBidXR0b25zIGFjY2Vzc2libGUnLCBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zdCBwYXJhbXMgPSB7IGxldmVsOiAnMScsIG1vZGU6ICdjbGFzc2ljJyB9O1xyXG4gICAgY29uc3QgeyBnZXRBbGxCeVJvbGUgfSA9IHJlbmRlcig8Vm9jYWJ1bGFyeUV4ZXJjaXNlIHJvdXRlPXt7IHBhcmFtcyB9fSAvPik7XHJcbiAgICBhd2FpdCB3YWl0Rm9yKCgpID0+IHtcclxuICAgICAgY29uc3QgYnV0dG9ucyA9IGdldEFsbEJ5Um9sZSgnYnV0dG9uJyk7XHJcbiAgICAgIGV4cGVjdChidXR0b25zLmxlbmd0aCkudG9CZUdyZWF0ZXJUaGFuKDApO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBSUFBLFdBQUEsR0FBS0MsSUFBSSxDQUFDLGFBQWEsRUFBRTtFQUFBLE9BQU87SUFBRUMsTUFBTSxFQUFFO01BQUVDLElBQUksRUFBRUMsSUFBSSxDQUFDQyxFQUFFLENBQUM7SUFBRSxDQUFDO0lBQUVDLGNBQWMsRUFBRUYsSUFBSSxDQUFDQyxFQUFFLENBQUMs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