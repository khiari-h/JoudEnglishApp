b8fc22f4ae7d1ab10d94bb165d7d03ee
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function cov_2joallbxqd() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\A1\\categories\\errorCorrectionA1Full.js";
  var hash = "b9317219ec65a401ca017a6404d259caabf0a39e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\data\\errorCorrection\\A1\\categories\\errorCorrectionA1Full.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 76,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b9317219ec65a401ca017a6404d259caabf0a39e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2joallbxqd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2joallbxqd();
var errorCorrectionA1Full = (cov_2joallbxqd().s[0]++, [{
  categoryId: 1,
  type: "full",
  text: "I am student in Paris.",
  correctedText: "I am a student in Paris.",
  hint: "Remember to use 'a' before singular countable nouns",
  explanation: "When describing your profession or status, use 'a' before the noun.",
  errorPositions: [3]
}, {
  categoryId: 1,
  type: "full",
  text: "She works as teacher in school.",
  correctedText: "She works as a teacher in a school.",
  hint: "Both 'teacher' and 'school' need articles",
  explanation: "Use 'a' before both 'teacher' (profession) and 'school' (singular countable noun).",
  errorPositions: [4, 7]
}, {
  categoryId: 2,
  type: "full",
  text: "They be happy today.",
  correctedText: "They are happy today.",
  hint: "Remember the correct form of 'to be' for different subjects",
  explanation: "Use 'are' for 'they' in the verb 'to be'",
  errorPositions: [1, 2]
}, {
  categoryId: 2,
  type: "full",
  text: "My friends is very nice people.",
  correctedText: "My friends are very nice people.",
  hint: "Check subject-verb agreement with plural subjects",
  explanation: "Use 'are' with plural subjects like 'friends', not 'is'",
  errorPositions: [2]
}, {
  categoryId: 3,
  type: "full",
  text: "He play football every weekend.",
  correctedText: "He plays football every weekend.",
  hint: "Remember the third-person singular 's' in simple present",
  explanation: "Add 's' to the verb for third-person singular subjects",
  errorPositions: [2]
}, {
  categoryId: 4,
  type: "full",
  text: "Me is happy to meet you.",
  correctedText: "I am happy to meet you.",
  hint: "Use the correct subject pronoun",
  explanation: "Use 'I' as the subject pronoun, not 'me'",
  errorPositions: [0, 1]
}, {
  categoryId: 5,
  type: "full",
  text: "Happy I am today.",
  correctedText: "I am happy today.",
  hint: "Follow the standard English sentence structure",
  explanation: "In English, the subject typically comes before the verb",
  errorPositions: [0, 1, 2]
}]);
var _default = exports.default = errorCorrectionA1Full;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJlcnJvckNvcnJlY3Rpb25BMUZ1bGwiLCJjb3ZfMmpvYWxsYnhxZCIsInMiLCJjYXRlZ29yeUlkIiwidHlwZSIsInRleHQiLCJjb3JyZWN0ZWRUZXh0IiwiaGludCIsImV4cGxhbmF0aW9uIiwiZXJyb3JQb3NpdGlvbnMiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiZXJyb3JDb3JyZWN0aW9uQTFGdWxsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9kYXRhL2V4ZXJjaXNlcy9lcnJvckNvcnJlY3Rpb24vQTEvZXJyb3JDb3JyZWN0aW9uQTFGdWxsLmpzXG5cbmNvbnN0IGVycm9yQ29ycmVjdGlvbkExRnVsbCA9IFtcbiAgLy8gPT09IEFSVElDTEVTICgyIGV4ZXJjaWNlcykgPT09XG4gIHtcbiAgICBjYXRlZ29yeUlkOiAxLFxuICAgIHR5cGU6IFwiZnVsbFwiLFxuICAgIHRleHQ6IFwiSSBhbSBzdHVkZW50IGluIFBhcmlzLlwiLFxuICAgIGNvcnJlY3RlZFRleHQ6IFwiSSBhbSBhIHN0dWRlbnQgaW4gUGFyaXMuXCIsXG4gICAgaGludDogXCJSZW1lbWJlciB0byB1c2UgJ2EnIGJlZm9yZSBzaW5ndWxhciBjb3VudGFibGUgbm91bnNcIixcbiAgICBleHBsYW5hdGlvbjogXCJXaGVuIGRlc2NyaWJpbmcgeW91ciBwcm9mZXNzaW9uIG9yIHN0YXR1cywgdXNlICdhJyBiZWZvcmUgdGhlIG5vdW4uXCIsXG4gICAgZXJyb3JQb3NpdGlvbnM6IFszXSxcbiAgfSxcbiAge1xuICAgIGNhdGVnb3J5SWQ6IDEsXG4gICAgdHlwZTogXCJmdWxsXCIsXG4gICAgdGV4dDogXCJTaGUgd29ya3MgYXMgdGVhY2hlciBpbiBzY2hvb2wuXCIsXG4gICAgY29ycmVjdGVkVGV4dDogXCJTaGUgd29ya3MgYXMgYSB0ZWFjaGVyIGluIGEgc2Nob29sLlwiLFxuICAgIGhpbnQ6IFwiQm90aCAndGVhY2hlcicgYW5kICdzY2hvb2wnIG5lZWQgYXJ0aWNsZXNcIixcbiAgICBleHBsYW5hdGlvbjogXCJVc2UgJ2EnIGJlZm9yZSBib3RoICd0ZWFjaGVyJyAocHJvZmVzc2lvbikgYW5kICdzY2hvb2wnIChzaW5ndWxhciBjb3VudGFibGUgbm91bikuXCIsXG4gICAgZXJyb3JQb3NpdGlvbnM6IFs0LCA3XSxcbiAgfSxcblxuICAvLyA9PT0gVkVSQiBUTyBCRSAoMiBleGVyY2ljZXMpID09PVxuICB7XG4gICAgY2F0ZWdvcnlJZDogMixcbiAgICB0eXBlOiBcImZ1bGxcIixcbiAgICB0ZXh0OiBcIlRoZXkgYmUgaGFwcHkgdG9kYXkuXCIsXG4gICAgY29ycmVjdGVkVGV4dDogXCJUaGV5IGFyZSBoYXBweSB0b2RheS5cIixcbiAgICBoaW50OiBcIlJlbWVtYmVyIHRoZSBjb3JyZWN0IGZvcm0gb2YgJ3RvIGJlJyBmb3IgZGlmZmVyZW50IHN1YmplY3RzXCIsXG4gICAgZXhwbGFuYXRpb246IFwiVXNlICdhcmUnIGZvciAndGhleScgaW4gdGhlIHZlcmIgJ3RvIGJlJ1wiLFxuICAgIGVycm9yUG9zaXRpb25zOiBbMSwgMl0sXG4gIH0sXG4gIHtcbiAgICBjYXRlZ29yeUlkOiAyLFxuICAgIHR5cGU6IFwiZnVsbFwiLFxuICAgIHRleHQ6IFwiTXkgZnJpZW5kcyBpcyB2ZXJ5IG5pY2UgcGVvcGxlLlwiLFxuICAgIGNvcnJlY3RlZFRleHQ6IFwiTXkgZnJpZW5kcyBhcmUgdmVyeSBuaWNlIHBlb3BsZS5cIixcbiAgICBoaW50OiBcIkNoZWNrIHN1YmplY3QtdmVyYiBhZ3JlZW1lbnQgd2l0aCBwbHVyYWwgc3ViamVjdHNcIixcbiAgICBleHBsYW5hdGlvbjogXCJVc2UgJ2FyZScgd2l0aCBwbHVyYWwgc3ViamVjdHMgbGlrZSAnZnJpZW5kcycsIG5vdCAnaXMnXCIsXG4gICAgZXJyb3JQb3NpdGlvbnM6IFsyXSxcbiAgfSxcblxuICAvLyA9PT0gU0lNUExFIFBSRVNFTlQgKDEgZXhlcmNpY2UpID09PVxuICB7XG4gICAgY2F0ZWdvcnlJZDogMyxcbiAgICB0eXBlOiBcImZ1bGxcIixcbiAgICB0ZXh0OiBcIkhlIHBsYXkgZm9vdGJhbGwgZXZlcnkgd2Vla2VuZC5cIixcbiAgICBjb3JyZWN0ZWRUZXh0OiBcIkhlIHBsYXlzIGZvb3RiYWxsIGV2ZXJ5IHdlZWtlbmQuXCIsXG4gICAgaGludDogXCJSZW1lbWJlciB0aGUgdGhpcmQtcGVyc29uIHNpbmd1bGFyICdzJyBpbiBzaW1wbGUgcHJlc2VudFwiLFxuICAgIGV4cGxhbmF0aW9uOiBcIkFkZCAncycgdG8gdGhlIHZlcmIgZm9yIHRoaXJkLXBlcnNvbiBzaW5ndWxhciBzdWJqZWN0c1wiLFxuICAgIGVycm9yUG9zaXRpb25zOiBbMl0sXG4gIH0sXG5cbiAgLy8gPT09IFBST05PVU5TICgxIGV4ZXJjaWNlKSA9PT1cbiAge1xuICAgIGNhdGVnb3J5SWQ6IDQsXG4gICAgdHlwZTogXCJmdWxsXCIsXG4gICAgdGV4dDogXCJNZSBpcyBoYXBweSB0byBtZWV0IHlvdS5cIixcbiAgICBjb3JyZWN0ZWRUZXh0OiBcIkkgYW0gaGFwcHkgdG8gbWVldCB5b3UuXCIsXG4gICAgaGludDogXCJVc2UgdGhlIGNvcnJlY3Qgc3ViamVjdCBwcm9ub3VuXCIsXG4gICAgZXhwbGFuYXRpb246IFwiVXNlICdJJyBhcyB0aGUgc3ViamVjdCBwcm9ub3VuLCBub3QgJ21lJ1wiLFxuICAgIGVycm9yUG9zaXRpb25zOiBbMCwgMV0sXG4gIH0sXG5cbiAgLy8gPT09IFNFTlRFTkNFIFNUUlVDVFVSRSAoMSBleGVyY2ljZSkgPT09XG4gIHtcbiAgICBjYXRlZ29yeUlkOiA1LFxuICAgIHR5cGU6IFwiZnVsbFwiLFxuICAgIHRleHQ6IFwiSGFwcHkgSSBhbSB0b2RheS5cIixcbiAgICBjb3JyZWN0ZWRUZXh0OiBcIkkgYW0gaGFwcHkgdG9kYXkuXCIsXG4gICAgaGludDogXCJGb2xsb3cgdGhlIHN0YW5kYXJkIEVuZ2xpc2ggc2VudGVuY2Ugc3RydWN0dXJlXCIsXG4gICAgZXhwbGFuYXRpb246IFwiSW4gRW5nbGlzaCwgdGhlIHN1YmplY3QgdHlwaWNhbGx5IGNvbWVzIGJlZm9yZSB0aGUgdmVyYlwiLFxuICAgIGVycm9yUG9zaXRpb25zOiBbMCwgMSwgMl0sXG4gIH1cbl07XG5cbmV4cG9ydCBkZWZhdWx0IGVycm9yQ29ycmVjdGlvbkExRnVsbDtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLHFCQUFxQixJQUFBQyxjQUFBLEdBQUFDLENBQUEsT0FBRyxDQUU1QjtFQUNFQyxVQUFVLEVBQUUsQ0FBQztFQUNiQyxJQUFJLEVBQUUsTUFBTTtFQUNaQyxJQUFJLEVBQUUsd0JBQXdCO0VBQzlCQyxhQUFhLEVBQUUsMEJBQTBCO0VBQ3pDQyxJQUFJLEVBQUUscURBQXFEO0VBQzNEQyxXQUFXLEVBQUUscUVBQXFFO0VBQ2xGQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO0FBQ3BCLENBQUMsRUFDRDtFQUNFTixVQUFVLEVBQUUsQ0FBQztFQUNiQyxJQUFJLEVBQUUsTUFBTTtFQUNaQyxJQUFJLEVBQUUsaUNBQWlDO0VBQ3ZDQyxhQUFhLEVBQUUscUNBQXFDO0VBQ3BEQyxJQUFJLEVBQUUsMkNBQTJDO0VBQ2pEQyxXQUFXLEVBQUUsb0ZBQW9GO0VBQ2pHQyxjQUFjLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUN2QixDQUFDLEVBR0Q7RUFDRU4sVUFBVSxFQUFFLENBQUM7RUFDYkMsSUFBSSxFQUFFLE1BQU07RUFDWkMsSUFBSSxFQUFFLHNCQUFzQjtFQUM1QkMsYUFBYSxFQUFFLHVCQUF1QjtFQUN0Q0MsSUFBSSxFQUFFLDZEQUE2RDtFQUNuRUMsV0FBVyxFQUFFLDBDQUEwQztFQUN2REMsY0FBYyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDdkIsQ0FBQyxFQUNEO0VBQ0VOLFVBQVUsRUFBRSxDQUFDO0VBQ2JDLElBQUksRUFBRSxNQUFNO0VBQ1pDLElBQUksRUFBRSxpQ0FBaUM7RUFDdkNDLGFBQWEsRUFBRSxrQ0FBa0M7RUFDakRDLElBQUksRUFBRSxtREFBbUQ7RUFDekRDLFdBQVcsRUFBRSx5REFBeUQ7RUFDdEVDLGNBQWMsRUFBRSxDQUFDLENBQUM7QUFDcEIsQ0FBQyxFQUdEO0VBQ0VOLFVBQVUsRUFBRSxDQUFDO0VBQ2JDLElBQUksRUFBRSxNQUFNO0VBQ1pDLElBQUksRUFBRSxpQ0FBaUM7RUFDdkNDLGFBQWEsRUFBRSxrQ0FBa0M7RUFDakRDLElBQUksRUFBRSwwREFBMEQ7RUFDaEVDLFdBQVcsRUFBRSx3REFBd0Q7RUFDckVDLGNBQWMsRUFBRSxDQUFDLENBQUM7QUFDcEIsQ0FBQyxFQUdEO0VBQ0VOLFVBQVUsRUFBRSxDQUFDO0VBQ2JDLElBQUksRUFBRSxNQUFNO0VBQ1pDLElBQUksRUFBRSwwQkFBMEI7RUFDaENDLGFBQWEsRUFBRSx5QkFBeUI7RUFDeENDLElBQUksRUFBRSxpQ0FBaUM7RUFDdkNDLFdBQVcsRUFBRSwwQ0FBMEM7RUFDdkRDLGNBQWMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQ3ZCLENBQUMsRUFHRDtFQUNFTixVQUFVLEVBQUUsQ0FBQztFQUNiQyxJQUFJLEVBQUUsTUFBTTtFQUNaQyxJQUFJLEVBQUUsbUJBQW1CO0VBQ3pCQyxhQUFhLEVBQUUsbUJBQW1CO0VBQ2xDQyxJQUFJLEVBQUUsZ0RBQWdEO0VBQ3REQyxXQUFXLEVBQUUseURBQXlEO0VBQ3RFQyxjQUFjLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7QUFDMUIsQ0FBQyxDQUNGO0FBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FFYVoscUJBQXFCIiwiaWdub3JlTGlzdCI6W119