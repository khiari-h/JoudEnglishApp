{"version":3,"names":["_reactNative","require","_useDashboardState","describe","mockLoadLastActivities","jest","fn","beforeEach","clearAllMocks","mockResolvedValue","it","_renderHook","renderHook","useDashboardState","result","expect","current","showLevelProgress","toBe","refreshing","activeTab","_renderHook2","act","openLevelProgressModal","closeLevelProgressModal","_renderHook3","setShowLevelProgress","_renderHook4","setActiveTab","_asyncToGenerator2","default","_renderHook5","refreshPromise","onRefresh","toHaveBeenCalledTimes","mockRejectedValue","Error","_renderHook6","_renderHook7","_ref5","loadFn","initialProps","rerender","initialOnRefresh","newMockFn","not","_renderHook8","initialOpenModal","initialCloseModal","resolveFirst","resolveSecond","firstCall","Promise","resolve","secondCall","mockReturnValueOnce","_renderHook9","firstRefresh","secondRefresh","_renderHook0"],"sources":["useDashboardState.test.js"],"sourcesContent":["// __tests__/screens/Dashboard/hooks/useDashboardState.test.js\nimport { renderHook, act, waitFor } from '@testing-library/react-native';\nimport { useDashboardState } from '../../../../src/screens/Dashboard/hooks/useDashboardState';\n\ndescribe('useDashboardState', () => {\n  const mockLoadLastActivities = jest.fn();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockLoadLastActivities.mockResolvedValue();\n  });\n\n  it('devrait initialiser avec les valeurs par défaut', () => {\n    const { result } = renderHook(() => \n      useDashboardState(mockLoadLastActivities)\n    );\n\n    expect(result.current.showLevelProgress).toBe(false);\n    expect(result.current.refreshing).toBe(false);\n    expect(result.current.activeTab).toBe('home');\n  });\n\n  it('devrait ouvrir et fermer la modal de progression', () => {\n    const { result } = renderHook(() => \n      useDashboardState(mockLoadLastActivities)\n    );\n\n    // Ouvrir la modal\n    act(() => {\n      result.current.openLevelProgressModal();\n    });\n\n    expect(result.current.showLevelProgress).toBe(true);\n\n    // Fermer la modal\n    act(() => {\n      result.current.closeLevelProgressModal();\n    });\n\n    expect(result.current.showLevelProgress).toBe(false);\n  });\n\n  it('devrait changer l\\'état de la modal directement', () => {\n    const { result } = renderHook(() => \n      useDashboardState(mockLoadLastActivities)\n    );\n\n    act(() => {\n      result.current.setShowLevelProgress(true);\n    });\n\n    expect(result.current.showLevelProgress).toBe(true);\n\n    act(() => {\n      result.current.setShowLevelProgress(false);\n    });\n\n    expect(result.current.showLevelProgress).toBe(false);\n  });\n\n  it('devrait changer l\\'onglet actif', () => {\n    const { result } = renderHook(() => \n      useDashboardState(mockLoadLastActivities)\n    );\n\n    act(() => {\n      result.current.setActiveTab('progress');\n    });\n\n    expect(result.current.activeTab).toBe('progress');\n\n    act(() => {\n      result.current.setActiveTab('settings');\n    });\n\n    expect(result.current.activeTab).toBe('settings');\n  });\n\n  it('devrait gérer le pull-to-refresh avec succès', async () => {\n    const { result } = renderHook(() => \n      useDashboardState(mockLoadLastActivities)\n    );\n\n    expect(result.current.refreshing).toBe(false);\n\n    const refreshPromise = act(async () => {\n      await result.current.onRefresh();\n    });\n\n    // Pendant le refresh\n    expect(result.current.refreshing).toBe(true);\n\n    await refreshPromise;\n\n    // Après le refresh\n    expect(result.current.refreshing).toBe(false);\n    expect(mockLoadLastActivities).toHaveBeenCalledTimes(1);\n  });\n\n  it('devrait gérer les erreurs de refresh gracieusement', async () => {\n    mockLoadLastActivities.mockRejectedValue(new Error('Network error'));\n\n    const { result } = renderHook(() => \n      useDashboardState(mockLoadLastActivities)\n    );\n\n    await act(async () => {\n      await result.current.onRefresh();\n    });\n\n    // Le refreshing devrait être remis à false même en cas d'erreur\n    expect(result.current.refreshing).toBe(false);\n    expect(mockLoadLastActivities).toHaveBeenCalledTimes(1);\n  });\n\n  it('devrait mémoriser la fonction onRefresh', () => {\n    const { result, rerender } = renderHook(\n      ({ loadFn }) => useDashboardState(loadFn),\n      { initialProps: { loadFn: mockLoadLastActivities } }\n    );\n\n    const initialOnRefresh = result.current.onRefresh;\n\n    // Rerender avec la même fonction\n    rerender({ loadFn: mockLoadLastActivities });\n    expect(result.current.onRefresh).toBe(initialOnRefresh);\n\n    // Rerender avec une fonction différente\n    const newMockFn = jest.fn();\n    rerender({ loadFn: newMockFn });\n    expect(result.current.onRefresh).not.toBe(initialOnRefresh);\n  });\n\n  it('devrait mémoriser les fonctions de modal', () => {\n    const { result, rerender } = renderHook(() => \n      useDashboardState(mockLoadLastActivities)\n    );\n\n    const initialOpenModal = result.current.openLevelProgressModal;\n    const initialCloseModal = result.current.closeLevelProgressModal;\n\n    // Rerender - les fonctions devraient rester les mêmes\n    rerender();\n    expect(result.current.openLevelProgressModal).toBe(initialOpenModal);\n    expect(result.current.closeLevelProgressModal).toBe(initialCloseModal);\n  });\n\n  it('devrait permettre plusieurs refresh simultanés sans conflit', async () => {\n    let resolveFirst, resolveSecond;\n    const firstCall = new Promise(resolve => { resolveFirst = resolve; });\n    const secondCall = new Promise(resolve => { resolveSecond = resolve; });\n\n    mockLoadLastActivities\n      .mockReturnValueOnce(firstCall)\n      .mockReturnValueOnce(secondCall);\n\n    const { result } = renderHook(() => \n      useDashboardState(mockLoadLastActivities)\n    );\n\n    // Démarrer deux refresh en parallèle\n    const firstRefresh = act(async () => {\n      await result.current.onRefresh();\n    });\n\n    const secondRefresh = act(async () => {\n      await result.current.onRefresh();\n    });\n\n    // Les deux devraient être en cours\n    expect(result.current.refreshing).toBe(true);\n\n    // Résoudre le premier\n    resolveFirst();\n    await firstRefresh;\n\n    // Résoudre le second\n    resolveSecond();\n    await secondRefresh;\n\n    expect(result.current.refreshing).toBe(false);\n    expect(mockLoadLastActivities).toHaveBeenCalledTimes(2);\n  });\n\n  it('devrait exposer toutes les fonctions et états nécessaires', () => {\n    const { result } = renderHook(() => \n      useDashboardState(mockLoadLastActivities)\n    );\n\n    // États\n    expect(typeof result.current.showLevelProgress).toBe('boolean');\n    expect(typeof result.current.refreshing).toBe('boolean');\n    expect(typeof result.current.activeTab).toBe('string');\n\n    // Fonctions\n    expect(typeof result.current.setShowLevelProgress).toBe('function');\n    expect(typeof result.current.openLevelProgressModal).toBe('function');\n    expect(typeof result.current.closeLevelProgressModal).toBe('function');\n    expect(typeof result.current.setActiveTab).toBe('function');\n    expect(typeof result.current.onRefresh).toBe('function');\n  });\n});"],"mappings":"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","ignoreList":[]}