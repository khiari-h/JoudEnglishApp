{"version":3,"names":["_reactNative","require","_reactNative2","_useModalAnimation","_interopRequireDefault","mockAnimatedValue","interpolate","jest","fn","mockReturnValue","addListener","removeAllListeners","setValue","_value","mockStart","mockTiming","start","stop","spyOn","Animated","mockImplementation","describe","beforeEach","clearAllMocks","it","_renderHook","renderHook","_ref","visible","animationType","customAnimation","useModalAnimation","initialProps","rerender","act","expect","toHaveBeenCalledTimes","_renderHook2","_ref2","position","toHaveBeenLastCalledWith","objectContaining","toValue","duration","useNativeDriver","_renderHook3","result","current","toBeDefined","toHaveBeenCalledWith","inputRange","outputRange","toHaveProperty","Array","isArray","transform","toBe","toEqual","translateY"],"sources":["useModalAnimation.test.js"],"sourcesContent":["import { renderHook, act } from '@testing-library/react-native';\r\nimport { Animated } from 'react-native';\r\nimport useModalAnimation from '../../../../src/components/ui/Modal/useModalAnimation';\r\n\r\n// Créer des mocks réalistes\r\nconst mockAnimatedValue = {\r\n  interpolate: jest.fn().mockReturnValue('mockedInterpolatedValue'),\r\n  addListener: jest.fn(),\r\n  removeAllListeners: jest.fn(),\r\n  setValue: jest.fn(),\r\n  _value: 0,\r\n};\r\n\r\nconst mockStart = jest.fn();\r\nconst mockTiming = jest.fn().mockReturnValue({\r\n  start: mockStart,\r\n  stop: jest.fn(),\r\n});\r\n\r\n// Mock Animated\r\njest.spyOn(Animated, 'Value').mockImplementation(() => mockAnimatedValue);\r\njest.spyOn(Animated, 'timing').mockImplementation(mockTiming);\r\n\r\ndescribe('useModalAnimation', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    mockAnimatedValue.interpolate.mockReturnValue('mockedInterpolatedValue');\r\n  });\r\n\r\n  it('devrait démarrer l\\'animation si visible devient vrai', () => {\r\n    const { rerender } = renderHook(\r\n      ({ visible, animationType, customAnimation }) => \r\n        useModalAnimation({ visible, animationType, customAnimation }), \r\n      {\r\n        initialProps: { \r\n          visible: false, \r\n          animationType: 'custom', \r\n          customAnimation: true \r\n        },\r\n      }\r\n    );\r\n\r\n    act(() => {\r\n      rerender({ \r\n        visible: true, \r\n        animationType: 'custom', \r\n        customAnimation: true \r\n      });\r\n    });\r\n\r\n    // L'animation est appelée 2 fois : une fois pour le rendu initial (visible: false -> toValue: 0)\r\n    // et une fois pour le changement (visible: true -> toValue: 1)\r\n    expect(mockTiming).toHaveBeenCalledTimes(2);\r\n    expect(mockStart).toHaveBeenCalledTimes(2);\r\n  });\r\n\r\n  it('devrait appeler Animated.timing avec les bonnes valeurs pour la position \"top\"', () => {\r\n    const { rerender } = renderHook(\r\n      ({ visible, animationType, customAnimation, position }) => \r\n        useModalAnimation({ visible, animationType, customAnimation, position }), \r\n      {\r\n        initialProps: { \r\n          visible: false, \r\n          animationType: 'custom', \r\n          customAnimation: true,\r\n          position: 'top' \r\n        },\r\n      }\r\n    );\r\n\r\n    act(() => {\r\n      rerender({ \r\n        visible: true, \r\n        animationType: 'custom', \r\n        customAnimation: true,\r\n        position: 'top' \r\n      });\r\n    });\r\n\r\n    // Vérifier le dernier appel (visible: true)\r\n    expect(mockTiming).toHaveBeenLastCalledWith(\r\n      mockAnimatedValue,\r\n      expect.objectContaining({\r\n        toValue: 1,\r\n        duration: 300,\r\n        useNativeDriver: true,\r\n      })\r\n    );\r\n  });\r\n\r\n  it('devrait retourner les styles de transformation corrects pour la position \"top\"', () => {\r\n    const { result } = renderHook(() => \r\n      useModalAnimation({ \r\n        visible: true, \r\n        animationType: 'custom', \r\n        customAnimation: true,\r\n        position: 'top' \r\n      })\r\n    );\r\n    \r\n    // Vérifier que le hook retourne bien un style\r\n    expect(result.current).toBeDefined();\r\n    \r\n    // Vérifier que interpolate a été appelé pour créer les transformations\r\n    expect(mockAnimatedValue.interpolate).toHaveBeenCalledWith({\r\n      inputRange: [0, 1],\r\n      outputRange: [-300, 0]\r\n    });\r\n    \r\n    // Vérifier la structure du style retourné\r\n    expect(result.current).toHaveProperty('transform');\r\n    expect(Array.isArray(result.current.transform)).toBe(true);\r\n    expect(result.current.transform).toEqual([\r\n      { translateY: 'mockedInterpolatedValue' }\r\n    ]);\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}