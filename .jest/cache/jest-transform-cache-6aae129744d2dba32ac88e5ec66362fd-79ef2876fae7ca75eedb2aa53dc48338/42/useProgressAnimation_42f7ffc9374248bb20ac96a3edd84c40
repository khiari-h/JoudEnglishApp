811d94330e29fd35ab726586716ace73
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useProgressAnimation;
var _react = require("react");
var _reactNative = require("react-native");
function useAnimatedProgressValue(progress, duration) {
  var animatedValue = (0, _react.useRef)(new _reactNative.Animated.Value(0)).current;
  (0, _react.useEffect)(function () {
    _reactNative.Animated.timing(animatedValue, {
      toValue: progress,
      duration: duration,
      useNativeDriver: false
    }).start();
  }, [progress, duration, animatedValue]);
  return animatedValue;
}
function useStaticProgressValue(progress) {
  var staticValue = (0, _react.useRef)(progress).current;
  return staticValue;
}
function useProgressAnimation(_ref) {
  var _ref$progress = _ref.progress,
    progress = _ref$progress === void 0 ? 0 : _ref$progress,
    _ref$animated = _ref.animated,
    animated = _ref$animated === void 0 ? true : _ref$animated,
    _ref$duration = _ref.duration,
    duration = _ref$duration === void 0 ? 600 : _ref$duration;
  var clamped = Math.min(Math.max(progress, 0), 100);
  var animatedValue = useAnimatedProgressValue(clamped, duration);
  var staticValue = useStaticProgressValue(clamped);
  var width = animated ? animatedValue.interpolate({
    inputRange: [0, 100],
    outputRange: ["0%", "100%"]
  }) : `${staticValue}%`;
  return {
    width: width
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0TmF0aXZlIiwidXNlQW5pbWF0ZWRQcm9ncmVzc1ZhbHVlIiwicHJvZ3Jlc3MiLCJkdXJhdGlvbiIsImFuaW1hdGVkVmFsdWUiLCJ1c2VSZWYiLCJBbmltYXRlZCIsIlZhbHVlIiwiY3VycmVudCIsInVzZUVmZmVjdCIsInRpbWluZyIsInRvVmFsdWUiLCJ1c2VOYXRpdmVEcml2ZXIiLCJzdGFydCIsInVzZVN0YXRpY1Byb2dyZXNzVmFsdWUiLCJzdGF0aWNWYWx1ZSIsInVzZVByb2dyZXNzQW5pbWF0aW9uIiwiX3JlZiIsIl9yZWYkcHJvZ3Jlc3MiLCJfcmVmJGFuaW1hdGVkIiwiYW5pbWF0ZWQiLCJfcmVmJGR1cmF0aW9uIiwiY2xhbXBlZCIsIk1hdGgiLCJtaW4iLCJtYXgiLCJ3aWR0aCIsImludGVycG9sYXRlIiwiaW5wdXRSYW5nZSIsIm91dHB1dFJhbmdlIl0sInNvdXJjZXMiOlsidXNlUHJvZ3Jlc3NBbmltYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NvbXBvbmVudHMvdWkvUHJvZ3Jlc3NCYXIvdXNlUHJvZ3Jlc3NBbmltYXRpb24uanNcclxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgQW5pbWF0ZWQgfSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XHJcblxyXG4vLyBIb29rIHBvdXIgbCdhbmltYXRpb24gLSB0b3Vqb3VycyBhcHBlbMOpXHJcbmZ1bmN0aW9uIHVzZUFuaW1hdGVkUHJvZ3Jlc3NWYWx1ZShwcm9ncmVzcywgZHVyYXRpb24pIHtcclxuICBjb25zdCBhbmltYXRlZFZhbHVlID0gdXNlUmVmKG5ldyBBbmltYXRlZC5WYWx1ZSgwKSkuY3VycmVudDtcclxuICBcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgQW5pbWF0ZWQudGltaW5nKGFuaW1hdGVkVmFsdWUsIHtcclxuICAgICAgdG9WYWx1ZTogcHJvZ3Jlc3MsXHJcbiAgICAgIGR1cmF0aW9uLFxyXG4gICAgICB1c2VOYXRpdmVEcml2ZXI6IGZhbHNlLFxyXG4gICAgfSkuc3RhcnQoKTtcclxuICB9LCBbcHJvZ3Jlc3MsIGR1cmF0aW9uLCBhbmltYXRlZFZhbHVlXSk7XHJcbiAgXHJcbiAgcmV0dXJuIGFuaW1hdGVkVmFsdWU7XHJcbn1cclxuXHJcbi8vIEhvb2sgcG91ciBsYSBwcm9ncmVzc2lvbiBzdGF0aXF1ZSAtIHRvdWpvdXJzIGFwcGVsw6lcclxuZnVuY3Rpb24gdXNlU3RhdGljUHJvZ3Jlc3NWYWx1ZShwcm9ncmVzcykge1xyXG4gIGNvbnN0IHN0YXRpY1ZhbHVlID0gdXNlUmVmKHByb2dyZXNzKS5jdXJyZW50O1xyXG4gIHJldHVybiBzdGF0aWNWYWx1ZTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlUHJvZ3Jlc3NBbmltYXRpb24oe1xyXG4gIHByb2dyZXNzID0gMCxcclxuICBhbmltYXRlZCA9IHRydWUsXHJcbiAgZHVyYXRpb24gPSA2MDAsXHJcbn0pIHtcclxuICBjb25zdCBjbGFtcGVkID0gTWF0aC5taW4oTWF0aC5tYXgocHJvZ3Jlc3MsIDApLCAxMDApO1xyXG4gIFxyXG4gIC8vIExlcyBkZXV4IGhvb2tzIHNvbnQgdG91am91cnMgYXBwZWzDqXMsIG1haXMgc2V1bCBsZSByw6lzdWx0YXQgYXBwcm9wcmnDqSBlc3QgdXRpbGlzw6lcclxuICBjb25zdCBhbmltYXRlZFZhbHVlID0gdXNlQW5pbWF0ZWRQcm9ncmVzc1ZhbHVlKGNsYW1wZWQsIGR1cmF0aW9uKTtcclxuICBjb25zdCBzdGF0aWNWYWx1ZSA9IHVzZVN0YXRpY1Byb2dyZXNzVmFsdWUoY2xhbXBlZCk7XHJcblxyXG4gIC8vIENhbGN1bCBkZSBsYSBsYXJnZXVyIGJhc8OpIHN1ciBsZXMgdmFsZXVycyBkZXMgaG9va3NcclxuICBjb25zdCB3aWR0aCA9IGFuaW1hdGVkIFxyXG4gICAgPyBhbmltYXRlZFZhbHVlLmludGVycG9sYXRlKHtcclxuICAgICAgICBpbnB1dFJhbmdlOiBbMCwgMTAwXSxcclxuICAgICAgICBvdXRwdXRSYW5nZTogW1wiMCVcIiwgXCIxMDAlXCJdLFxyXG4gICAgICB9KVxyXG4gICAgOiBgJHtzdGF0aWNWYWx1ZX0lYDtcclxuXHJcbiAgcmV0dXJuIHsgd2lkdGggfTtcclxufVxyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUdBLFNBQVNFLHdCQUF3QkEsQ0FBQ0MsUUFBUSxFQUFFQyxRQUFRLEVBQUU7RUFDcEQsSUFBTUMsYUFBYSxHQUFHLElBQUFDLGFBQU0sRUFBQyxJQUFJQyxxQkFBUSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsT0FBTztFQUUzRCxJQUFBQyxnQkFBUyxFQUFDLFlBQU07SUFDZEgscUJBQVEsQ0FBQ0ksTUFBTSxDQUFDTixhQUFhLEVBQUU7TUFDN0JPLE9BQU8sRUFBRVQsUUFBUTtNQUNqQkMsUUFBUSxFQUFSQSxRQUFRO01BQ1JTLGVBQWUsRUFBRTtJQUNuQixDQUFDLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7RUFDWixDQUFDLEVBQUUsQ0FBQ1gsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLGFBQWEsQ0FBQyxDQUFDO0VBRXZDLE9BQU9BLGFBQWE7QUFDdEI7QUFHQSxTQUFTVSxzQkFBc0JBLENBQUNaLFFBQVEsRUFBRTtFQUN4QyxJQUFNYSxXQUFXLEdBQUcsSUFBQVYsYUFBTSxFQUFDSCxRQUFRLENBQUMsQ0FBQ00sT0FBTztFQUM1QyxPQUFPTyxXQUFXO0FBQ3BCO0FBRWUsU0FBU0Msb0JBQW9CQSxDQUFBQyxJQUFBLEVBSXpDO0VBQUEsSUFBQUMsYUFBQSxHQUFBRCxJQUFBLENBSERmLFFBQVE7SUFBUkEsUUFBUSxHQUFBZ0IsYUFBQSxjQUFHLENBQUMsR0FBQUEsYUFBQTtJQUFBQyxhQUFBLEdBQUFGLElBQUEsQ0FDWkcsUUFBUTtJQUFSQSxRQUFRLEdBQUFELGFBQUEsY0FBRyxJQUFJLEdBQUFBLGFBQUE7SUFBQUUsYUFBQSxHQUFBSixJQUFBLENBQ2ZkLFFBQVE7SUFBUkEsUUFBUSxHQUFBa0IsYUFBQSxjQUFHLEdBQUcsR0FBQUEsYUFBQTtFQUVkLElBQU1DLE9BQU8sR0FBR0MsSUFBSSxDQUFDQyxHQUFHLENBQUNELElBQUksQ0FBQ0UsR0FBRyxDQUFDdkIsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztFQUdwRCxJQUFNRSxhQUFhLEdBQUdILHdCQUF3QixDQUFDcUIsT0FBTyxFQUFFbkIsUUFBUSxDQUFDO0VBQ2pFLElBQU1ZLFdBQVcsR0FBR0Qsc0JBQXNCLENBQUNRLE9BQU8sQ0FBQztFQUduRCxJQUFNSSxLQUFLLEdBQUdOLFFBQVEsR0FDbEJoQixhQUFhLENBQUN1QixXQUFXLENBQUM7SUFDeEJDLFVBQVUsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUM7SUFDcEJDLFdBQVcsRUFBRSxDQUFDLElBQUksRUFBRSxNQUFNO0VBQzVCLENBQUMsQ0FBQyxHQUNGLEdBQUdkLFdBQVcsR0FBRztFQUVyQixPQUFPO0lBQUVXLEtBQUssRUFBTEE7RUFBTSxDQUFDO0FBQ2xCIiwiaWdub3JlTGlzdCI6W119