{"version":3,"names":["_getJestObj","mock","setItem","jest","fn","Promise","resolve","getItem","removeItem","_interopRequireDefault","require","_asyncToGenerator2","_reactHooks","_asyncStorage","_useDailyWords","_require","describe","MOCK_DATE_TODAY","Date","MOCK_DATE_YESTERDAY","beforeEach","useFakeTimers","setSystemTime","AsyncStorage","mockClear","afterEach","runOnlyPendingTimers","useRealTimers","it","default","_renderHook","renderHook","useDailyWords","result","waitForNextUpdate","expect","current","wordsToday","toBe","isLoading","toHaveBeenCalledTimes","mockVocabData","dateString","JSON","stringify","completedWords","word","timestamp","mockResolvedValueOnce","toDateString","mockResolvedValue","_renderHook2","_renderHook3","i","act","refresh","_renderHook4","advanceTimersByTime","mockRejectedValueOnce","Error","_renderHook5"],"sources":["useDailyWords.test.js"],"sourcesContent":["import { renderHook, act } from '@testing-library/react-hooks';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useDailyWords from '../../../src/hooks/useDailyWords';\n\n// Mock AsyncStorage\njest.mock('@react-native-async-storage/async-storage', () => ({\n  setItem: jest.fn(() => Promise.resolve()),\n  getItem: jest.fn(() => Promise.resolve(null)),\n  removeItem: jest.fn(() => Promise.resolve()),\n}));\n\ndescribe('useDailyWords', () => {\n  const MOCK_DATE_TODAY = new Date('2025-01-01T10:00:00.000Z');\n  const MOCK_DATE_YESTERDAY = new Date('2024-12-31T10:00:00.000Z');\n\n  beforeEach(() => {\n    jest.useFakeTimers();\n    jest.setSystemTime(MOCK_DATE_TODAY);\n    AsyncStorage.getItem.mockClear();\n    AsyncStorage.setItem.mockClear();\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n  });\n\n  it('initializes with 0 wordsToday and isLoading true, then false', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useDailyWords());\n\n    expect(result.current.wordsToday).toBe(0);\n    expect(result.current.isLoading).toBe(true);\n\n    await waitForNextUpdate();\n\n    expect(result.current.isLoading).toBe(false);\n    expect(AsyncStorage.getItem).toHaveBeenCalledTimes(6); // One per level 1-6\n  });\n\n  it('calculates wordsToday based on today\\'s completed words', async () => {\n    const mockVocabData = (dateString) => JSON.stringify({\n      completedWords: {\n        '0': [\n          { word: 'hello', timestamp: dateString },\n          { word: 'world', timestamp: dateString },\n        ],\n        '1': [\n          { word: 'test', timestamp: dateString },\n        ],\n      },\n    });\n\n    AsyncStorage.getItem\n      .mockResolvedValueOnce(mockVocabData(MOCK_DATE_TODAY.toDateString())) // Level 1\n      .mockResolvedValueOnce(null) // Level 2\n      .mockResolvedValueOnce(mockVocabData(MOCK_DATE_YESTERDAY.toDateString())) // Level 3 with yesterday date\n      .mockResolvedValue(null); // Others\n\n    const { result, waitForNextUpdate } = renderHook(() => useDailyWords());\n    await waitForNextUpdate();\n\n    expect(result.current.wordsToday).toBe(3); // Only words with today's date are counted\n  });\n\n  it('refreshes wordsToday on refresh call', async () => {\n    const { result, waitForNextUpdate } = renderHook(() => useDailyWords());\n    await waitForNextUpdate();\n\n    AsyncStorage.getItem.mockClear();\n\n    AsyncStorage.getItem.mockResolvedValueOnce(JSON.stringify({\n      completedWords: { '0': [{ word: 'new', timestamp: MOCK_DATE_TODAY.toDateString() }] },\n    }));\n    \n    for (let i = 1; i < 6; i++) {\n      AsyncStorage.getItem.mockResolvedValueOnce(null);\n    }\n\n    act(() => {\n      result.current.refresh();\n    });\n    await waitForNextUpdate();\n\n    expect(result.current.wordsToday).toBe(1);\n    expect(AsyncStorage.getItem).toHaveBeenCalledTimes(6);\n  });\n\n  it('resets wordsToday at midnight and reloads', async () => {\n    const mockVocabData = JSON.stringify({\n      completedWords: { '0': [{ word: 'today', timestamp: MOCK_DATE_TODAY.toDateString() }] },\n    });\n\n    AsyncStorage.getItem.mockResolvedValue(mockVocabData);\n\n    const { result, waitForNextUpdate } = renderHook(() => useDailyWords());\n    await waitForNextUpdate();\n\n    expect(result.current.wordsToday).toBe(6); // 1 per level (6 levels)\n\n    jest.setSystemTime(new Date('2025-01-01T23:59:59.000Z'));\n    jest.advanceTimersByTime(2000); // pass midnight\n\n    // mock AsyncStorage calls also for midnight refresh\n    AsyncStorage.getItem.mockResolvedValueOnce(mockVocabData);\n    AsyncStorage.getItem.mockResolvedValue(null);\n    AsyncStorage.getItem.mockResolvedValue(null);\n    AsyncStorage.getItem.mockResolvedValue(null);\n    AsyncStorage.getItem.mockResolvedValue(null);\n    AsyncStorage.getItem.mockResolvedValue(null);\n\n    await waitForNextUpdate();\n\n    expect(result.current.wordsToday).toBe(6); // Because mock returns same date again; in real case, likely 0\n    expect(AsyncStorage.getItem).toHaveBeenCalledTimes(12);\n  });\n\n  it('handles AsyncStorage errors gracefully', async () => {\n    AsyncStorage.getItem.mockRejectedValueOnce(new Error('AsyncStorage error'));\n\n    const { result, waitForNextUpdate } = renderHook(() => useDailyWords());\n    await waitForNextUpdate();\n\n    expect(result.current.isLoading).toBe(false);\n    expect(result.current.wordsToday).toBe(0);\n  });\n});"],"mappings":"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","ignoreList":[]}