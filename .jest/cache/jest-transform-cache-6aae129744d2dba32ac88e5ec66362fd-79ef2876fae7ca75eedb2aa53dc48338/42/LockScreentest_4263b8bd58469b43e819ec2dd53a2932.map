{"version":3,"names":["_getJestObj","mock","isEnabled","jest","fn","mockResolvedValue","verifyPin","_ref","_asyncToGenerator2","default","pin","ok","_x","apply","arguments","disableLock","enableLock","_interopRequireDefault","require","_react","_reactNative","_LockContext","_LockScreen","_jsxRuntime","_require","describe","it","_render","render","jsx","LockProvider","children","getByTestId","queryByTestId","input","waitFor","fireEvent","changeText","press"],"sources":["LockScreen.test.js"],"sourcesContent":["import React from 'react';\r\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\r\nimport { LockProvider } from '../../src/contexts/LockContext';\r\nimport LockScreen from '../../src/screens/Lock/LockScreen';\r\n\r\njest.mock('../../src/services/lockService', () => ({\r\n  isEnabled: jest.fn().mockResolvedValue(true),\r\n  verifyPin: jest.fn(async (pin) => ({ ok: pin === '1234' })),\r\n  disableLock: jest.fn().mockResolvedValue(true),\r\n  enableLock: jest.fn().mockResolvedValue(true),\r\n}));\r\n\r\ndescribe('LockScreen', () => {\r\n  it('unlocks with valid PIN', async () => {\r\n    const { getByTestId, queryByTestId } = render(\r\n      <LockProvider>\r\n        <LockScreen />\r\n      </LockProvider>\r\n    );\r\n    const input = await waitFor(() => getByTestId('pin-input'));\r\n    fireEvent.changeText(input, '1234');\r\n    fireEvent.press(getByTestId('pin-submit'));\r\n    // here we can't assert navigation, but no error should be visible\r\n  });\r\n});\r\n\r\n\r\n"],"mappings":"AAKAA,WAAA,GAAKC,IAAI,CAAC,gCAAgC,EAAE;EAAA,OAAO;IACjDC,SAAS,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,IAAI,CAAC;IAC5CC,SAAS,EAAEH,IAAI,CAACC,EAAE;MAAA,IAAAG,IAAA,OAAAC,kBAAA,CAAAC,OAAA,EAAC,WAAOC,GAAG;QAAA,OAAM;UAAEC,EAAE,EAAED,GAAG,KAAK;QAAO,CAAC;MAAA,CAAC;MAAA,iBAAAE,EAAA;QAAA,OAAAL,IAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;IAC3DC,WAAW,EAAEZ,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,IAAI,CAAC;IAC9CW,UAAU,EAAEb,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,IAAI;EAC9C,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAY,sBAAA,GAAAC,OAAA;AAAA,IAAAV,kBAAA,GAAAS,sBAAA,CAAAC,OAAA;AAVJ,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,WAAA,GAAAL,sBAAA,CAAAC,OAAA;AAA2D,IAAAK,WAAA,GAAAL,OAAA;AAAA,SAAAlB,YAAA;EAAA,IAAAwB,QAAA,GAAAN,OAAA;IAAAf,IAAA,GAAAqB,QAAA,CAAArB,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAS3DsB,QAAQ,CAAC,YAAY,EAAE,YAAM;EAC3BC,EAAE,CAAC,wBAAwB,MAAAlB,kBAAA,CAAAC,OAAA,EAAE,aAAY;IACvC,IAAAkB,OAAA,GAAuC,IAAAC,mBAAM,EAC3C,IAAAL,WAAA,CAAAM,GAAA,EAACR,YAAA,CAAAS,YAAY;QAAAC,QAAA,EACX,IAAAR,WAAA,CAAAM,GAAA,EAACP,WAAA,CAAAb,OAAU,IAAE;MAAC,CACF,CAChB,CAAC;MAJOuB,WAAW,GAAAL,OAAA,CAAXK,WAAW;MAAEC,aAAa,GAAAN,OAAA,CAAbM,aAAa;IAKlC,IAAMC,KAAK,SAAS,IAAAC,oBAAO,EAAC;MAAA,OAAMH,WAAW,CAAC,WAAW,CAAC;IAAA,EAAC;IAC3DI,sBAAS,CAACC,UAAU,CAACH,KAAK,EAAE,MAAM,CAAC;IACnCE,sBAAS,CAACE,KAAK,CAACN,WAAW,CAAC,YAAY,CAAC,CAAC;EAE5C,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}