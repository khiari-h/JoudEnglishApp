81d3d4516b969474039947b46eb809aa
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
function cov_nvk459a2d() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\InstructionBox\\style.js";
  var hash = "8aadb03eec8eb879cc378f2c0f12a7760d94269a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\components\\exercise-common\\InstructionBox\\style.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 103,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8aadb03eec8eb879cc378f2c0f12a7760d94269a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_nvk459a2d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nvk459a2d();
var styles = (cov_nvk459a2d().s[0]++, _reactNative.StyleSheet.create({
  container: Object.assign({
    borderRadius: 12,
    overflow: 'hidden',
    margin: 16
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000',
      shadowOffset: {
        width: 0,
        height: 1
      },
      shadowOpacity: 0.1,
      shadowRadius: 2
    },
    android: {
      elevation: 2
    }
  })),
  standardContainer: {
    backgroundColor: 'white',
    borderWidth: 1,
    borderColor: '#E5E7EB'
  },
  compactContainer: {
    backgroundColor: '#F9FAFB',
    borderWidth: 1,
    borderColor: '#E5E7EB'
  },
  highlightedContainer: {
    backgroundColor: '#F9FAFB',
    borderWidth: 2
  },
  headerContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 16,
    backgroundColor: 'white'
  },
  titleContainer: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  titleIcon: {
    marginRight: 8
  },
  title: {
    fontSize: 16,
    fontWeight: 'bold'
  },
  contentContainer: {
    padding: 16,
    paddingTop: 0,
    backgroundColor: 'white'
  },
  instructions: {
    fontSize: 14,
    color: '#4B5563',
    lineHeight: 22,
    marginBottom: 16
  },
  examplesContainer: {
    marginBottom: 16
  },
  sectionTitle: {
    fontSize: 14,
    fontWeight: '600',
    color: '#1F2937',
    marginBottom: 8
  },
  exampleItem: {
    padding: 12,
    backgroundColor: '#F9FAFB',
    borderRadius: 8,
    marginBottom: 8
  },
  exampleText: {
    fontSize: 14,
    color: '#1F2937',
    fontStyle: 'italic',
    lineHeight: 20
  },
  tipsContainer: {
    marginBottom: 8
  },
  tipItem: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    marginBottom: 8
  },
  tipIcon: {
    marginRight: 8,
    marginTop: 2
  },
  tipText: {
    flex: 1,
    fontSize: 14,
    color: '#4B5563',
    lineHeight: 20
  }
}));
var _default = exports.default = styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiY292X252azQ1OWEyZCIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJzdHlsZXMiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiY29udGFpbmVyIiwiT2JqZWN0IiwiYXNzaWduIiwiYm9yZGVyUmFkaXVzIiwib3ZlcmZsb3ciLCJtYXJnaW4iLCJQbGF0Zm9ybSIsInNlbGVjdCIsImlvcyIsInNoYWRvd0NvbG9yIiwic2hhZG93T2Zmc2V0Iiwid2lkdGgiLCJoZWlnaHQiLCJzaGFkb3dPcGFjaXR5Iiwic2hhZG93UmFkaXVzIiwiYW5kcm9pZCIsImVsZXZhdGlvbiIsInN0YW5kYXJkQ29udGFpbmVyIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImNvbXBhY3RDb250YWluZXIiLCJoaWdobGlnaHRlZENvbnRhaW5lciIsImhlYWRlckNvbnRhaW5lciIsImZsZXhEaXJlY3Rpb24iLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJwYWRkaW5nIiwidGl0bGVDb250YWluZXIiLCJ0aXRsZUljb24iLCJtYXJnaW5SaWdodCIsInRpdGxlIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiY29udGVudENvbnRhaW5lciIsInBhZGRpbmdUb3AiLCJpbnN0cnVjdGlvbnMiLCJjb2xvciIsImxpbmVIZWlnaHQiLCJtYXJnaW5Cb3R0b20iLCJleGFtcGxlc0NvbnRhaW5lciIsInNlY3Rpb25UaXRsZSIsImV4YW1wbGVJdGVtIiwiZXhhbXBsZVRleHQiLCJmb250U3R5bGUiLCJ0aXBzQ29udGFpbmVyIiwidGlwSXRlbSIsInRpcEljb24iLCJtYXJnaW5Ub3AiLCJ0aXBUZXh0IiwiZmxleCIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJzdHlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy9leGVyY2lzZS1jb21tb24vSW5zdHJ1Y3Rpb25Cb3gvc3R5bGVzLmpzXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBQbGF0Zm9ybSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgYm9yZGVyUmFkaXVzOiAxMixcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgbWFyZ2luOiAxNixcbiAgICAuLi5QbGF0Zm9ybS5zZWxlY3Qoe1xuICAgICAgaW9zOiB7XG4gICAgICAgIHNoYWRvd0NvbG9yOiAnIzAwMCcsXG4gICAgICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiAxIH0sXG4gICAgICAgIHNoYWRvd09wYWNpdHk6IDAuMSxcbiAgICAgICAgc2hhZG93UmFkaXVzOiAyLFxuICAgICAgfSxcbiAgICAgIGFuZHJvaWQ6IHtcbiAgICAgICAgZWxldmF0aW9uOiAyLFxuICAgICAgfSxcbiAgICB9KSxcbiAgfSxcbiAgc3RhbmRhcmRDb250YWluZXI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgYm9yZGVyV2lkdGg6IDEsXG4gICAgYm9yZGVyQ29sb3I6ICcjRTVFN0VCJyxcbiAgfSxcbiAgY29tcGFjdENvbnRhaW5lcjoge1xuICAgIGJhY2tncm91bmRDb2xvcjogJyNGOUZBRkInLFxuICAgIGJvcmRlcldpZHRoOiAxLFxuICAgIGJvcmRlckNvbG9yOiAnI0U1RTdFQicsXG4gIH0sXG4gIGhpZ2hsaWdodGVkQ29udGFpbmVyOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiAnI0Y5RkFGQicsXG4gICAgYm9yZGVyV2lkdGg6IDIsXG4gIH0sXG4gIGhlYWRlckNvbnRhaW5lcjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgcGFkZGluZzogMTYsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxuICB9LFxuICB0aXRsZUNvbnRhaW5lcjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICB9LFxuICB0aXRsZUljb246IHtcbiAgICBtYXJnaW5SaWdodDogOCxcbiAgfSxcbiAgdGl0bGU6IHtcbiAgICBmb250U2l6ZTogMTYsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICB9LFxuICBjb250ZW50Q29udGFpbmVyOiB7XG4gICAgcGFkZGluZzogMTYsXG4gICAgcGFkZGluZ1RvcDogMCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gIH0sXG4gIGluc3RydWN0aW9uczoge1xuICAgIGZvbnRTaXplOiAxNCxcbiAgICBjb2xvcjogJyM0QjU1NjMnLFxuICAgIGxpbmVIZWlnaHQ6IDIyLFxuICAgIG1hcmdpbkJvdHRvbTogMTYsXG4gIH0sXG4gIGV4YW1wbGVzQ29udGFpbmVyOiB7XG4gICAgbWFyZ2luQm90dG9tOiAxNixcbiAgfSxcbiAgc2VjdGlvblRpdGxlOiB7XG4gICAgZm9udFNpemU6IDE0LFxuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICAgIGNvbG9yOiAnIzFGMjkzNycsXG4gICAgbWFyZ2luQm90dG9tOiA4LFxuICB9LFxuICBleGFtcGxlSXRlbToge1xuICAgIHBhZGRpbmc6IDEyLFxuICAgIGJhY2tncm91bmRDb2xvcjogJyNGOUZBRkInLFxuICAgIGJvcmRlclJhZGl1czogOCxcbiAgICBtYXJnaW5Cb3R0b206IDgsXG4gIH0sXG4gIGV4YW1wbGVUZXh0OiB7XG4gICAgZm9udFNpemU6IDE0LFxuICAgIGNvbG9yOiAnIzFGMjkzNycsXG4gICAgZm9udFN0eWxlOiAnaXRhbGljJyxcbiAgICBsaW5lSGVpZ2h0OiAyMCxcbiAgfSxcbiAgdGlwc0NvbnRhaW5lcjoge1xuICAgIG1hcmdpbkJvdHRvbTogOCxcbiAgfSxcbiAgdGlwSXRlbToge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdmbGV4LXN0YXJ0JyxcbiAgICBtYXJnaW5Cb3R0b206IDgsXG4gIH0sXG4gIHRpcEljb246IHtcbiAgICBtYXJnaW5SaWdodDogOCxcbiAgICBtYXJnaW5Ub3A6IDIsXG4gIH0sXG4gIHRpcFRleHQ6IHtcbiAgICBmbGV4OiAxLFxuICAgIGZvbnRTaXplOiAxNCxcbiAgICBjb2xvcjogJyM0QjU1NjMnLFxuICAgIGxpbmVIZWlnaHQ6IDIwLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxlcztcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUFvRCxTQUFBQyxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7SUFBQUMsU0FBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLENBQUE7SUFBQUMsZUFBQTtJQUFBZixJQUFBO0VBQUE7RUFBQSxJQUFBZ0IsUUFBQSxHQUFBZixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWEsUUFBQSxDQUFBakIsSUFBQSxLQUFBaUIsUUFBQSxDQUFBakIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQWdCLFFBQUEsQ0FBQWpCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQWEsY0FBQSxHQUFBRCxRQUFBLENBQUFqQixJQUFBO0VBQUE7SUFBQUQsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQW1CLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFuQixhQUFBO0FBRXBELElBQU1vQixNQUFNLElBQUFwQixhQUFBLEdBQUFjLENBQUEsT0FBR08sdUJBQVUsQ0FBQ0MsTUFBTSxDQUFDO0VBQy9CQyxTQUFTLEVBQUFDLE1BQUEsQ0FBQUMsTUFBQTtJQUNQQyxZQUFZLEVBQUUsRUFBRTtJQUNoQkMsUUFBUSxFQUFFLFFBQVE7SUFDbEJDLE1BQU0sRUFBRTtFQUFFLEdBQ1BDLHFCQUFRLENBQUNDLE1BQU0sQ0FBQztJQUNqQkMsR0FBRyxFQUFFO01BQ0hDLFdBQVcsRUFBRSxNQUFNO01BQ25CQyxZQUFZLEVBQUU7UUFBRUMsS0FBSyxFQUFFLENBQUM7UUFBRUMsTUFBTSxFQUFFO01BQUUsQ0FBQztNQUNyQ0MsYUFBYSxFQUFFLEdBQUc7TUFDbEJDLFlBQVksRUFBRTtJQUNoQixDQUFDO0lBQ0RDLE9BQU8sRUFBRTtNQUNQQyxTQUFTLEVBQUU7SUFDYjtFQUNGLENBQUMsQ0FBQyxDQUNIO0VBQ0RDLGlCQUFpQixFQUFFO0lBQ2pCQyxlQUFlLEVBQUUsT0FBTztJQUN4QkMsV0FBVyxFQUFFLENBQUM7SUFDZEMsV0FBVyxFQUFFO0VBQ2YsQ0FBQztFQUNEQyxnQkFBZ0IsRUFBRTtJQUNoQkgsZUFBZSxFQUFFLFNBQVM7SUFDMUJDLFdBQVcsRUFBRSxDQUFDO0lBQ2RDLFdBQVcsRUFBRTtFQUNmLENBQUM7RUFDREUsb0JBQW9CLEVBQUU7SUFDcEJKLGVBQWUsRUFBRSxTQUFTO0lBQzFCQyxXQUFXLEVBQUU7RUFDZixDQUFDO0VBQ0RJLGVBQWUsRUFBRTtJQUNmQyxhQUFhLEVBQUUsS0FBSztJQUNwQkMsY0FBYyxFQUFFLGVBQWU7SUFDL0JDLFVBQVUsRUFBRSxRQUFRO0lBQ3BCQyxPQUFPLEVBQUUsRUFBRTtJQUNYVCxlQUFlLEVBQUU7RUFDbkIsQ0FBQztFQUNEVSxjQUFjLEVBQUU7SUFDZEosYUFBYSxFQUFFLEtBQUs7SUFDcEJFLFVBQVUsRUFBRTtFQUNkLENBQUM7RUFDREcsU0FBUyxFQUFFO0lBQ1RDLFdBQVcsRUFBRTtFQUNmLENBQUM7RUFDREMsS0FBSyxFQUFFO0lBQ0xDLFFBQVEsRUFBRSxFQUFFO0lBQ1pDLFVBQVUsRUFBRTtFQUNkLENBQUM7RUFDREMsZ0JBQWdCLEVBQUU7SUFDaEJQLE9BQU8sRUFBRSxFQUFFO0lBQ1hRLFVBQVUsRUFBRSxDQUFDO0lBQ2JqQixlQUFlLEVBQUU7RUFDbkIsQ0FBQztFQUNEa0IsWUFBWSxFQUFFO0lBQ1pKLFFBQVEsRUFBRSxFQUFFO0lBQ1pLLEtBQUssRUFBRSxTQUFTO0lBQ2hCQyxVQUFVLEVBQUUsRUFBRTtJQUNkQyxZQUFZLEVBQUU7RUFDaEIsQ0FBQztFQUNEQyxpQkFBaUIsRUFBRTtJQUNqQkQsWUFBWSxFQUFFO0VBQ2hCLENBQUM7RUFDREUsWUFBWSxFQUFFO0lBQ1pULFFBQVEsRUFBRSxFQUFFO0lBQ1pDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCSSxLQUFLLEVBQUUsU0FBUztJQUNoQkUsWUFBWSxFQUFFO0VBQ2hCLENBQUM7RUFDREcsV0FBVyxFQUFFO0lBQ1hmLE9BQU8sRUFBRSxFQUFFO0lBQ1hULGVBQWUsRUFBRSxTQUFTO0lBQzFCZixZQUFZLEVBQUUsQ0FBQztJQUNmb0MsWUFBWSxFQUFFO0VBQ2hCLENBQUM7RUFDREksV0FBVyxFQUFFO0lBQ1hYLFFBQVEsRUFBRSxFQUFFO0lBQ1pLLEtBQUssRUFBRSxTQUFTO0lBQ2hCTyxTQUFTLEVBQUUsUUFBUTtJQUNuQk4sVUFBVSxFQUFFO0VBQ2QsQ0FBQztFQUNETyxhQUFhLEVBQUU7SUFDYk4sWUFBWSxFQUFFO0VBQ2hCLENBQUM7RUFDRE8sT0FBTyxFQUFFO0lBQ1B0QixhQUFhLEVBQUUsS0FBSztJQUNwQkUsVUFBVSxFQUFFLFlBQVk7SUFDeEJhLFlBQVksRUFBRTtFQUNoQixDQUFDO0VBQ0RRLE9BQU8sRUFBRTtJQUNQakIsV0FBVyxFQUFFLENBQUM7SUFDZGtCLFNBQVMsRUFBRTtFQUNiLENBQUM7RUFDREMsT0FBTyxFQUFFO0lBQ1BDLElBQUksRUFBRSxDQUFDO0lBQ1BsQixRQUFRLEVBQUUsRUFBRTtJQUNaSyxLQUFLLEVBQUUsU0FBUztJQUNoQkMsVUFBVSxFQUFFO0VBQ2Q7QUFDRixDQUFDLENBQUM7QUFBQyxJQUFBYSxRQUFBLEdBQUFDLE9BQUEsQ0FBQUMsT0FBQSxHQUVZeEQsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==