{"version":3,"names":["Object","defineProperty","exports","value","makeViewDescriptorsSet","_core","require","_worklet_14497120062416_init_data","code","location","sourceMap","version","_worklet_2862367908725_init_data","shareableViewDescriptors","makeMutable","data","add","item","modify","_e","global","Error","ViewDescriptorsSetTs1","descriptors","index","findIndex","descriptor","tag","push","__closure","__workletHash","__initData","__stackDetails","remove","viewTag","ViewDescriptorsSetTs2","splice"],"sources":["ViewDescriptorsSet.ts"],"sourcesContent":["'use strict';\nimport { makeMutable } from './core';\nimport type { SharedValue } from './commonTypes';\nimport type { Descriptor } from './hook/commonTypes';\n\nexport interface ViewDescriptorsSet {\n  shareableViewDescriptors: SharedValue<Descriptor[]>;\n  add: (item: Descriptor) => void;\n  remove: (viewTag: number) => void;\n}\n\nexport function makeViewDescriptorsSet(): ViewDescriptorsSet {\n  const shareableViewDescriptors = makeMutable<Descriptor[]>([]);\n  const data: ViewDescriptorsSet = {\n    shareableViewDescriptors,\n    add: (item: Descriptor) => {\n      shareableViewDescriptors.modify((descriptors) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === item.tag\n        );\n        if (index !== -1) {\n          descriptors[index] = item;\n        } else {\n          descriptors.push(item);\n        }\n        return descriptors;\n      }, false);\n    },\n\n    remove: (viewTag: number) => {\n      shareableViewDescriptors.modify((descriptors) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === viewTag\n        );\n        if (index !== -1) {\n          descriptors.splice(index, 1);\n        }\n        return descriptors;\n      }, false);\n    },\n  };\n  return data;\n}\n"],"mappings":"AAAA,YAAY;;AAACA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,sBAAA,GAAAA,sBAAA;AACb,IAAAC,KAAA,GAAAC,OAAA;AAAqC,IAAAC,iCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,IAAAC,gCAAA;EAAAJ,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAU9B,SAASP,sBAAsBA,CAAA,EAAuB;EAC3D,IAAMS,wBAAwB,GAAG,IAAAC,iBAAW,EAAe,EAAE,CAAC;EAC9D,IAAMC,IAAwB,GAAG;IAC/BF,wBAAwB,EAAxBA,wBAAwB;IACxBG,GAAG,EAAE,SAALA,GAAGA,CAAGC,IAAgB,EAAK;MACzBJ,wBAAwB,CAACK,MAAM,CAAC;QAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;QAAA,IAAAC,qBAAA,YAAAA,sBAACC,WAAW,EAAK;UAE/C,IAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CACjC,UAACC,UAAU;YAAA,OAAKA,UAAU,CAACC,GAAG,KAAKV,IAAI,CAACU,GAAG;UAAA,CAC7C,CAAC;UACD,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;YAChBD,WAAW,CAACC,KAAK,CAAC,GAAGP,IAAI;UAC3B,CAAC,MAAM;YACLM,WAAW,CAACK,IAAI,CAACX,IAAI,CAAC;UACxB;UACA,OAAOM,WAAW;QACpB,CAAC;QAAAD,qBAAA,CAAAO,SAAA;UAAAZ,IAAA,EARsCA;QAAI;QAAAK,qBAAA,CAAAQ,aAAA;QAAAR,qBAAA,CAAAS,UAAA,GAAAxB,iCAAA;QAAAe,qBAAA,CAAAU,cAAA,GAAAb,EAAA;QAAA,OAAAG,qBAAA;MAAA,CAHX,IAW7B,KAAK,CAAC;IACX,CAAC;IAEDW,MAAM,EAAE,SAARA,MAAMA,CAAGC,OAAe,EAAK;MAC3BrB,wBAAwB,CAACK,MAAM,CAAC;QAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;QAAA,IAAAc,qBAAA,YAAAA,sBAACZ,WAAW,EAAK;UAE/C,IAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CACjC,UAACC,UAAU;YAAA,OAAKA,UAAU,CAACC,GAAG,KAAKO,OAAO;UAAA,CAC5C,CAAC;UACD,IAAIV,KAAK,KAAK,CAAC,CAAC,EAAE;YAChBD,WAAW,CAACa,MAAM,CAACZ,KAAK,EAAE,CAAC,CAAC;UAC9B;UACA,OAAOD,WAAW;QACpB,CAAC;QAAAY,qBAAA,CAAAN,SAAA;UAAAK,OAAA,EANsCA;QAAO;QAAAC,qBAAA,CAAAL,aAAA;QAAAK,qBAAA,CAAAJ,UAAA,GAAAnB,gCAAA;QAAAuB,qBAAA,CAAAH,cAAA,GAAAb,EAAA;QAAA,OAAAgB,qBAAA;MAAA,CAHd,IAS7B,KAAK,CAAC;IACX;EACF,CAAC;EACD,OAAOpB,IAAI;AACb","ignoreList":[]}