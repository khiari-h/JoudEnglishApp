{"version":3,"names":["_getJestObj","mock","getItem","jest","fn","setItem","_interopRequireDefault","require","_asyncToGenerator2","_reactNative","_asyncStorage","_useActivityMetrics","_require","describe","beforeEach","clearAllMocks","spyOn","Date","mockReturnValue","prototype","afterEach","restoreAllMocks","it","default","AsyncStorage","mockResolvedValueOnce","_renderHook","renderHook","useActivityMetrics","result","waitFor","expect","current","currentStreak","toBe","todayMinutes","formattedTime","mockResolvedValue","_renderHook2","_renderHook3","act","startSession","endSession","testCases","minutes","expected","forEach","_ref5","toString","_renderHook4","streak","_ref6","_renderHook5","streakTrend"],"sources":["useActivityMetrics.test.js"],"sourcesContent":["// __tests__/hooks/useActivityMetrics.test.js\nimport { renderHook, act, waitFor } from '@testing-library/react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useActivityMetrics from '../../src/hooks/useActivityMetrics';\n\n// Mock AsyncStorage\njest.mock('@react-native-async-storage/async-storage', () => ({\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n}));\n\ndescribe('useActivityMetrics', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    jest.spyOn(Date, 'now').mockReturnValue(1640995200000);\n    jest.spyOn(Date.prototype, 'toDateString').mockReturnValue('Sat Jan 01 2022');\n  });\n\n  afterEach(() => {\n    jest.restoreAllMocks();\n  });\n\n  describe('Chargement initial', () => {\n    it('devrait charger les métriques depuis AsyncStorage', async () => {\n      AsyncStorage.getItem\n        .mockResolvedValueOnce('5')\n        .mockResolvedValueOnce('30')\n        .mockResolvedValueOnce('Sat Jan 01 2022');\n\n      const { result } = renderHook(() => useActivityMetrics());\n\n      await waitFor(() => {\n        expect(result.current.currentStreak).toBe(5);\n        expect(result.current.todayMinutes).toBe(30);\n        expect(result.current.formattedTime).toBe('30min');\n      });\n    });\n\n    it('devrait utiliser des valeurs par défaut si aucune donnée', async () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n\n      const { result } = renderHook(() => useActivityMetrics());\n\n      await waitFor(() => {\n        expect(result.current.currentStreak).toBe(0);\n        expect(result.current.todayMinutes).toBe(0);\n        expect(result.current.formattedTime).toBe('0min');\n      });\n    });\n  });\n\n  describe('Gestion des sessions', () => {\n    it('devrait démarrer et terminer une session', async () => {\n      AsyncStorage.getItem.mockResolvedValue('0');\n      const { result } = renderHook(() => useActivityMetrics());\n\n      await waitFor(() => {\n        expect(result.current.todayMinutes).toBe(0);\n      });\n\n      act(() => {\n        result.current.startSession('vocabulary');\n      });\n\n      jest.spyOn(Date, 'now').mockReturnValue(1640995200000 + 120000);\n\n      await act(async () => {\n        await result.current.endSession();\n      });\n\n      expect(result.current.todayMinutes).toBe(2);\n    });\n  });\n\n  describe('Formatage du temps', () => {\n    it('devrait formater correctement les minutes', () => {\n      AsyncStorage.getItem.mockResolvedValue(null);\n      \n      const testCases = [\n        { minutes: 0, expected: '0min' },\n        { minutes: 30, expected: '30min' },\n        { minutes: 60, expected: '1h' },\n        { minutes: 90, expected: '1h30min' }\n      ];\n\n      testCases.forEach(({ minutes, expected }) => {\n        AsyncStorage.getItem\n          .mockResolvedValueOnce('0')\n          .mockResolvedValueOnce(minutes.toString())\n          .mockResolvedValueOnce('Sat Jan 01 2022');\n\n        const { result } = renderHook(() => useActivityMetrics());\n        \n        waitFor(() => {\n          expect(result.current.formattedTime).toBe(expected);\n        });\n      });\n    });\n  });\n\n  describe('Tendances de streak', () => {\n    it('devrait retourner les bonnes tendances', () => {\n      const testCases = [\n        { streak: 0, expected: null },\n        { streak: 1, expected: '🔥 Continue!' },\n        { streak: 3, expected: '💪 En forme!' },\n        { streak: 7, expected: '🏆 Incroyable!' }\n      ];\n\n      testCases.forEach(({ streak, expected }) => {\n        AsyncStorage.getItem\n          .mockResolvedValueOnce(streak.toString())\n          .mockResolvedValueOnce('0')\n          .mockResolvedValueOnce('Sat Jan 01 2022');\n\n        const { result } = renderHook(() => useActivityMetrics());\n        \n        waitFor(() => {\n          expect(result.current.streakTrend).toBe(expected);\n        });\n      });\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}