51b16143ca7e5f08d27bf2941fac077b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _react = require("react");
var _style = _interopRequireDefault(require("./style"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
var QuestionIndicators = function QuestionIndicators(_ref) {
  var totalQuestions = _ref.totalQuestions,
    currentQuestionIndex = _ref.currentQuestionIndex,
    _ref$completedQuestio = _ref.completedQuestions,
    completedQuestions = _ref$completedQuestio === void 0 ? [] : _ref$completedQuestio,
    onSelectQuestion = _ref.onSelectQuestion,
    levelColor = _ref.levelColor;
  var handleSelectQuestion = (0, _react.useCallback)(function (index) {
    return function () {
      onSelectQuestion(index);
    };
  }, [onSelectQuestion]);
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: _style.default.container,
    children: Array.from({
      length: totalQuestions
    }).map(function (_, index) {
      return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        onPress: handleSelectQuestion(index),
        children: (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: [_style.default.indicator, {
            backgroundColor: currentQuestionIndex === index ? levelColor : completedQuestions.includes(index) ? `${levelColor}50` : "#e5e7eb",
            width: currentQuestionIndex === index ? 12 : 8,
            height: currentQuestionIndex === index ? 12 : 8
          }]
        })
      }, `indicator-${index}`);
    })
  });
};
QuestionIndicators.propTypes = {
  totalQuestions: _propTypes.default.number.isRequired,
  currentQuestionIndex: _propTypes.default.number.isRequired,
  completedQuestions: _propTypes.default.arrayOf(_propTypes.default.number),
  onSelectQuestion: _propTypes.default.func.isRequired,
  levelColor: _propTypes.default.string
};
var _default = exports.default = QuestionIndicators;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX3N0eWxlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9wcm9wVHlwZXMiLCJfanN4UnVudGltZSIsIlF1ZXN0aW9uSW5kaWNhdG9ycyIsIl9yZWYiLCJ0b3RhbFF1ZXN0aW9ucyIsImN1cnJlbnRRdWVzdGlvbkluZGV4IiwiX3JlZiRjb21wbGV0ZWRRdWVzdGlvIiwiY29tcGxldGVkUXVlc3Rpb25zIiwib25TZWxlY3RRdWVzdGlvbiIsImxldmVsQ29sb3IiLCJoYW5kbGVTZWxlY3RRdWVzdGlvbiIsInVzZUNhbGxiYWNrIiwiaW5kZXgiLCJqc3giLCJWaWV3Iiwic3R5bGUiLCJzdHlsZXMiLCJjb250YWluZXIiLCJjaGlsZHJlbiIsIkFycmF5IiwiZnJvbSIsImxlbmd0aCIsIm1hcCIsIl8iLCJUb3VjaGFibGVPcGFjaXR5Iiwib25QcmVzcyIsImluZGljYXRvciIsImJhY2tncm91bmRDb2xvciIsImluY2x1ZGVzIiwid2lkdGgiLCJoZWlnaHQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJudW1iZXIiLCJpc1JlcXVpcmVkIiwiYXJyYXlPZiIsImZ1bmMiLCJzdHJpbmciLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NvbXBvbmVudHMvc2NyZWVucy9leGVyY2lzZXMvcmVhZGluZy9RdWVzdGlvbkluZGljYXRvcnMvaW5kZXguanNcclxuaW1wb3J0IHsgVmlldywgVG91Y2hhYmxlT3BhY2l0eSB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcclxuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi9zdHlsZVwiO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5cclxuLyoqXHJcbiAqIEluZGljYXRldXJzIHZpc3VlbHMgcG91ciBuYXZpZ3VlciBlbnRyZSBsZXMgcXVlc3Rpb25zXHJcbiAqL1xyXG5jb25zdCBRdWVzdGlvbkluZGljYXRvcnMgPSAoe1xyXG4gIHRvdGFsUXVlc3Rpb25zLFxyXG4gIGN1cnJlbnRRdWVzdGlvbkluZGV4LFxyXG4gIGNvbXBsZXRlZFF1ZXN0aW9ucyA9IFtdLFxyXG4gIG9uU2VsZWN0UXVlc3Rpb24sXHJcbiAgbGV2ZWxDb2xvcixcclxufSkgPT4ge1xyXG4gIC8vIEhhbmRsZXIgc3RhYmxlIHBvdXIgbGEgc8OpbGVjdGlvbiBkJ3VuZSBxdWVzdGlvblxyXG4gIGNvbnN0IGhhbmRsZVNlbGVjdFF1ZXN0aW9uID0gdXNlQ2FsbGJhY2soXHJcbiAgICAoaW5kZXgpID0+ICgpID0+IHtcclxuICAgICAgb25TZWxlY3RRdWVzdGlvbihpbmRleCk7XHJcbiAgICB9LFxyXG4gICAgW29uU2VsZWN0UXVlc3Rpb25dXHJcbiAgKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cclxuICAgICAge0FycmF5LmZyb20oeyBsZW5ndGg6IHRvdGFsUXVlc3Rpb25zIH0pLm1hcCgoXywgaW5kZXgpID0+IChcclxuICAgICAgICA8VG91Y2hhYmxlT3BhY2l0eVxyXG4gICAgICAgICAga2V5PXtgaW5kaWNhdG9yLSR7aW5kZXh9YH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxyXG4gICAgICAgICAgb25QcmVzcz17aGFuZGxlU2VsZWN0UXVlc3Rpb24oaW5kZXgpfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxWaWV3XHJcbiAgICAgICAgICAgIHN0eWxlPXtbXHJcbiAgICAgICAgICAgICAgc3R5bGVzLmluZGljYXRvcixcclxuICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6XHJcbiAgICAgICAgICAgICAgICAgIGN1cnJlbnRRdWVzdGlvbkluZGV4ID09PSBpbmRleFxyXG4gICAgICAgICAgICAgICAgICAgID8gbGV2ZWxDb2xvclxyXG4gICAgICAgICAgICAgICAgICAgIDogY29tcGxldGVkUXVlc3Rpb25zLmluY2x1ZGVzKGluZGV4KVxyXG4gICAgICAgICAgICAgICAgICAgID8gYCR7bGV2ZWxDb2xvcn01MGBcclxuICAgICAgICAgICAgICAgICAgICA6IFwiI2U1ZTdlYlwiLFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IGN1cnJlbnRRdWVzdGlvbkluZGV4ID09PSBpbmRleCA/IDEyIDogOCxcclxuICAgICAgICAgICAgICAgIGhlaWdodDogY3VycmVudFF1ZXN0aW9uSW5kZXggPT09IGluZGV4ID8gMTIgOiA4LFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIF19XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgIDwvVG91Y2hhYmxlT3BhY2l0eT5cclxuICAgICAgKSl9XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbi8vIOKchSBEw6lmaW5pdGlvbiBkZSBQcm9wVHlwZXMgcG91ciBsYSB2YWxpZGF0aW9uIGRlcyBwcm9wc1xyXG5RdWVzdGlvbkluZGljYXRvcnMucHJvcFR5cGVzID0ge1xyXG4gIC8vICd0b3RhbFF1ZXN0aW9ucycgZXN0IG1hbnF1YW50IGRhbnMgbGEgdmFsaWRhdGlvblxyXG4gIHRvdGFsUXVlc3Rpb25zOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXHJcbiAgLy8gJ2N1cnJlbnRRdWVzdGlvbkluZGV4JyBlc3QgbWFucXVhbnQgZGFucyBsYSB2YWxpZGF0aW9uXHJcbiAgY3VycmVudFF1ZXN0aW9uSW5kZXg6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcclxuICAvLyAnY29tcGxldGVkUXVlc3Rpb25zJyBlc3QgbWFucXVhbnQgZGFucyBsYSB2YWxpZGF0aW9uXHJcbiAgY29tcGxldGVkUXVlc3Rpb25zOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMubnVtYmVyKSxcclxuICAvLyAnb25TZWxlY3RRdWVzdGlvbicgZXN0IG1hbnF1YW50IGRhbnMgbGEgdmFsaWRhdGlvblxyXG4gIG9uU2VsZWN0UXVlc3Rpb246IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXHJcbiAgLy8gJ2xldmVsQ29sb3InIGVzdCBtYW5xdWFudCBkYW5zIGxhIHZhbGlkYXRpb25cclxuICBsZXZlbENvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgUXVlc3Rpb25JbmRpY2F0b3JzOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxNQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxNQUFBLEdBQUFDLHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBSSxVQUFBLEdBQUFELHNCQUFBLENBQUFILE9BQUE7QUFBbUMsSUFBQUssV0FBQSxHQUFBTCxPQUFBO0FBS25DLElBQU1NLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBa0JBLENBQUFDLElBQUEsRUFNbEI7RUFBQSxJQUxKQyxjQUFjLEdBQUFELElBQUEsQ0FBZEMsY0FBYztJQUNkQyxvQkFBb0IsR0FBQUYsSUFBQSxDQUFwQkUsb0JBQW9CO0lBQUFDLHFCQUFBLEdBQUFILElBQUEsQ0FDcEJJLGtCQUFrQjtJQUFsQkEsa0JBQWtCLEdBQUFELHFCQUFBLGNBQUcsRUFBRSxHQUFBQSxxQkFBQTtJQUN2QkUsZ0JBQWdCLEdBQUFMLElBQUEsQ0FBaEJLLGdCQUFnQjtJQUNoQkMsVUFBVSxHQUFBTixJQUFBLENBQVZNLFVBQVU7RUFHVixJQUFNQyxvQkFBb0IsR0FBRyxJQUFBQyxrQkFBVyxFQUN0QyxVQUFDQyxLQUFLO0lBQUEsT0FBSyxZQUFNO01BQ2ZKLGdCQUFnQixDQUFDSSxLQUFLLENBQUM7SUFDekIsQ0FBQztFQUFBLEdBQ0QsQ0FBQ0osZ0JBQWdCLENBQ25CLENBQUM7RUFFRCxPQUNFLElBQUFQLFdBQUEsQ0FBQVksR0FBQSxFQUFDbEIsWUFBQSxDQUFBbUIsSUFBSTtJQUFDQyxLQUFLLEVBQUVDLGNBQU0sQ0FBQ0MsU0FBVTtJQUFBQyxRQUFBLEVBQzNCQyxLQUFLLENBQUNDLElBQUksQ0FBQztNQUFFQyxNQUFNLEVBQUVqQjtJQUFlLENBQUMsQ0FBQyxDQUFDa0IsR0FBRyxDQUFDLFVBQUNDLENBQUMsRUFBRVgsS0FBSztNQUFBLE9BQ25ELElBQUFYLFdBQUEsQ0FBQVksR0FBQSxFQUFDbEIsWUFBQSxDQUFBNkIsZ0JBQWdCO1FBRWZDLE9BQU8sRUFBRWYsb0JBQW9CLENBQUNFLEtBQUssQ0FBRTtRQUFBTSxRQUFBLEVBRXJDLElBQUFqQixXQUFBLENBQUFZLEdBQUEsRUFBQ2xCLFlBQUEsQ0FBQW1CLElBQUk7VUFDSEMsS0FBSyxFQUFFLENBQ0xDLGNBQU0sQ0FBQ1UsU0FBUyxFQUNoQjtZQUNFQyxlQUFlLEVBQ2J0QixvQkFBb0IsS0FBS08sS0FBSyxHQUMxQkgsVUFBVSxHQUNWRixrQkFBa0IsQ0FBQ3FCLFFBQVEsQ0FBQ2hCLEtBQUssQ0FBQyxHQUNsQyxHQUFHSCxVQUFVLElBQUksR0FDakIsU0FBUztZQUNmb0IsS0FBSyxFQUFFeEIsb0JBQW9CLEtBQUtPLEtBQUssR0FBRyxFQUFFLEdBQUcsQ0FBQztZQUM5Q2tCLE1BQU0sRUFBRXpCLG9CQUFvQixLQUFLTyxLQUFLLEdBQUcsRUFBRSxHQUFHO1VBQ2hELENBQUM7UUFDRCxDQUNIO01BQUMsR0FqQkcsYUFBYUEsS0FBSyxFQWtCUCxDQUFDO0lBQUEsQ0FDcEI7RUFBQyxDQUNFLENBQUM7QUFFWCxDQUFDO0FBR0RWLGtCQUFrQixDQUFDNkIsU0FBUyxHQUFHO0VBRTdCM0IsY0FBYyxFQUFFNEIsa0JBQVMsQ0FBQ0MsTUFBTSxDQUFDQyxVQUFVO0VBRTNDN0Isb0JBQW9CLEVBQUUyQixrQkFBUyxDQUFDQyxNQUFNLENBQUNDLFVBQVU7RUFFakQzQixrQkFBa0IsRUFBRXlCLGtCQUFTLENBQUNHLE9BQU8sQ0FBQ0gsa0JBQVMsQ0FBQ0MsTUFBTSxDQUFDO0VBRXZEekIsZ0JBQWdCLEVBQUV3QixrQkFBUyxDQUFDSSxJQUFJLENBQUNGLFVBQVU7RUFFM0N6QixVQUFVLEVBQUV1QixrQkFBUyxDQUFDSztBQUN4QixDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FFYXRDLGtCQUFrQiIsImlnbm9yZUxpc3QiOltdfQ==