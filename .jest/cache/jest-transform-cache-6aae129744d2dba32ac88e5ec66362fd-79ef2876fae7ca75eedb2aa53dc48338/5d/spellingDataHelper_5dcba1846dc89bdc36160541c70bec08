b92e5bb74f9b318c6a4c1267b7eb30da
function cov_2f602wh8bh() {
  var path = "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\spelling\\spellingDataHelper.js";
  var hash = "308f7727235a71f0082a8087d402d1b961bada2c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\khi_h\\Desktop\\Projets\\JoudEnglishApp\\src\\utils\\spelling\\spellingDataHelper.js",
    statementMap: {
      "0": {
        start: {
          line: 31,
          column: 31
        },
        end: {
          line: 77,
          column: 1
        }
      },
      "1": {
        start: {
          line: 32,
          column: 18
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "2": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 67,
          column: 3
        }
      },
      "3": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 32
        }
      },
      "4": {
        start: {
          line: 70,
          column: 22
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "5": {
        start: {
          line: 76,
          column: 2
        },
        end: {
          line: 76,
          column: 50
        }
      },
      "6": {
        start: {
          line: 82,
          column: 29
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "7": {
        start: {
          line: 83,
          column: 17
        },
        end: {
          line: 90,
          column: 3
        }
      },
      "8": {
        start: {
          line: 92,
          column: 2
        },
        end: {
          line: 92,
          column: 36
        }
      },
      "9": {
        start: {
          line: 98,
          column: 41
        },
        end: {
          line: 122,
          column: 1
        }
      },
      "10": {
        start: {
          line: 99,
          column: 2
        },
        end: {
          line: 121,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 32
          }
        },
        loc: {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 31
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 82,
            column: 29
          },
          end: {
            line: 82,
            column: 30
          }
        },
        loc: {
          start: {
            line: 82,
            column: 40
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 82
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 98,
            column: 41
          },
          end: {
            line: 98,
            column: 42
          }
        },
        loc: {
          start: {
            line: 98,
            column: 47
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 98
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "1": {
        loc: {
          start: {
            line: 76,
            column: 9
          },
          end: {
            line: 76,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 9
          },
          end: {
            line: 76,
            column: 26
          }
        }, {
          start: {
            line: 76,
            column: 30
          },
          end: {
            line: 76,
            column: 49
          }
        }],
        line: 76
      },
      "2": {
        loc: {
          start: {
            line: 92,
            column: 9
          },
          end: {
            line: 92,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 9
          },
          end: {
            line: 92,
            column: 22
          }
        }, {
          start: {
            line: 92,
            column: 26
          },
          end: {
            line: 92,
            column: 35
          }
        }],
        line: 92
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "308f7727235a71f0082a8087d402d1b961bada2c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2f602wh8bh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2f602wh8bh();
import spellingCorrection1 from "../../data/spelling/1/spellingCorrection1";
import spellingRules1 from "../../data/spelling/1/spellingRules1";
import spellingHomophones1 from "../../data/spelling/1/spellingHomophones1";
import spellingCorrection2 from "../../data/spelling/2/spellingCorrection2";
import spellingRules2 from "../../data/spelling/2/spellingRules2";
import spellingHomophones2 from "../../data/spelling/2/spellingHomophones2";
import spellingCorrection3 from "../../data/spelling/3/spellingCorrection3";
import spellingRules3 from "../../data/spelling/3/spellingRules3";
import spellingHomophones3 from "../../data/spelling/3/spellingHomophones3";
import spellingCorrection4 from "../../data/spelling/4/spellingCorrection4";
import spellingRules4 from "../../data/spelling/4/spellingRules4";
import spellingHomophones4 from "../../data/spelling/4/spellingHomophones4";
import spellingCorrection5 from "../../data/spelling/5/spellingCorrection5";
import spellingRules5 from "../../data/spelling/5/spellingRules5";
import spellingHomophones5 from "../../data/spelling/5/spellingHomophones5";
import spellingCorrection6 from "../../data/spelling/6/spellingCorrection6";
import spellingRules6 from "../../data/spelling/6/spellingRules6";
import spellingHomophones6 from "../../data/spelling/6/spellingHomophones6";
cov_2f602wh8bh().s[0]++;
export var getSpellingData = function getSpellingData(level, type) {
  var _dataMap$level;
  cov_2f602wh8bh().f[0]++;
  var dataMap = (cov_2f602wh8bh().s[1]++, {
    "1": {
      correction: spellingCorrection1,
      rules: spellingRules1,
      homophones: spellingHomophones1
    },
    "2": {
      correction: spellingCorrection2,
      rules: spellingRules2,
      homophones: spellingHomophones2
    },
    "3": {
      correction: spellingCorrection3,
      rules: spellingRules3,
      homophones: spellingHomophones3
    },
    "4": {
      correction: spellingCorrection4,
      rules: spellingRules4,
      homophones: spellingHomophones4
    },
    "5": {
      correction: spellingCorrection5,
      rules: spellingRules5,
      homophones: spellingHomophones5
    },
    "6": {
      correction: spellingCorrection6,
      rules: spellingRules6,
      homophones: spellingHomophones6
    }
  });
  cov_2f602wh8bh().s[2]++;
  if ((_dataMap$level = dataMap[level]) != null && _dataMap$level[type]) {
    cov_2f602wh8bh().b[0][0]++;
    cov_2f602wh8bh().s[3]++;
    return dataMap[level][type];
  } else {
    cov_2f602wh8bh().b[0][1]++;
  }
  var fallbackMap = (cov_2f602wh8bh().s[4]++, {
    correction: spellingCorrection1,
    rules: spellingRules1,
    homophones: spellingHomophones1
  });
  cov_2f602wh8bh().s[5]++;
  return (cov_2f602wh8bh().b[1][0]++, fallbackMap[type]) || (cov_2f602wh8bh().b[1][1]++, spellingCorrection1);
};
cov_2f602wh8bh().s[6]++;
export var getLevelColor = function getLevelColor(level) {
  cov_2f602wh8bh().f[1]++;
  var colors = (cov_2f602wh8bh().s[7]++, {
    "1": "#3b82f6",
    "2": "#8b5cf6",
    "3": "#10b981",
    "4": "#f59e0b",
    "5": "#ef4444",
    "6": "#6366f1"
  });
  cov_2f602wh8bh().s[8]++;
  return (cov_2f602wh8bh().b[2][0]++, colors[level]) || (cov_2f602wh8bh().b[2][1]++, "#4361EE");
};
cov_2f602wh8bh().s[9]++;
export var getAvailableExerciseTypes = function getAvailableExerciseTypes() {
  cov_2f602wh8bh().f[2]++;
  cov_2f602wh8bh().s[10]++;
  return [{
    type: "correction",
    title: "Spelling Correction",
    description: "Correct common spelling mistakes",
    icon: "‚úèÔ∏è",
    color: "#ef4444"
  }, {
    type: "rules",
    title: "Spelling Rules",
    description: "Learn and apply spelling rules & patterns",
    icon: "üìö",
    color: "#10b981"
  }, {
    type: "homophones",
    title: "Homophones",
    description: "Distinguish words that sound the same",
    icon: "üëÇ",
    color: "#8b5cf6"
  }];
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,