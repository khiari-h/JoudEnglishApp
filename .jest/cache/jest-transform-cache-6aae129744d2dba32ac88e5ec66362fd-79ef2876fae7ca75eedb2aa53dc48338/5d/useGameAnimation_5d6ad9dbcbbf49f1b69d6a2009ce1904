001d7d4e13817a4c67ea66393864ee1d
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _reactNative = require("react-native");
var useGameAnimation = function useGameAnimation() {
  var fadeAnim = (0, _react.useRef)(new _reactNative.Animated.Value(1)).current;
  var bounceAnim = (0, _react.useRef)(new _reactNative.Animated.Value(1)).current;
  var animateFeedback = function animateFeedback() {
    var success = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    var toValue = success ? 0.5 : 0.3;
    var duration = success ? 200 : 150;
    _reactNative.Animated.sequence([_reactNative.Animated.timing(fadeAnim, {
      toValue: toValue,
      duration: duration,
      useNativeDriver: true
    }), _reactNative.Animated.timing(fadeAnim, {
      toValue: 1,
      duration: duration,
      useNativeDriver: true
    })]).start();
  };
  var animateBounce = function animateBounce() {
    _reactNative.Animated.sequence([_reactNative.Animated.timing(bounceAnim, {
      toValue: 1.1,
      duration: 100,
      useNativeDriver: true
    }), _reactNative.Animated.timing(bounceAnim, {
      toValue: 1,
      duration: 100,
      useNativeDriver: true
    })]).start();
  };
  return {
    fadeAnim: fadeAnim,
    bounceAnim: bounceAnim,
    animateFeedback: animateFeedback,
    animateBounce: animateBounce
  };
};
var _default = exports.default = useGameAnimation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0TmF0aXZlIiwidXNlR2FtZUFuaW1hdGlvbiIsImZhZGVBbmltIiwidXNlUmVmIiwiQW5pbWF0ZWQiLCJWYWx1ZSIsImN1cnJlbnQiLCJib3VuY2VBbmltIiwiYW5pbWF0ZUZlZWRiYWNrIiwic3VjY2VzcyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInRvVmFsdWUiLCJkdXJhdGlvbiIsInNlcXVlbmNlIiwidGltaW5nIiwidXNlTmF0aXZlRHJpdmVyIiwic3RhcnQiLCJhbmltYXRlQm91bmNlIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbInVzZUdhbWVBbmltYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3NjcmVlbnMvZXhlcmNpc2VzL3dvcmRHYW1lcy9ob29rcy91c2VHYW1lQW5pbWF0aW9uLmpzXG5pbXBvcnQgeyB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBBbmltYXRlZCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbi8qKlxuICog8J+OriBIb29rIHBlcnNvbm5hbGlzw6kgcG91ciBnw6lyZXIgbGVzIGFuaW1hdGlvbnMgZGVzIFdvcmQgR2FtZXNcbiAqIEFuaW1hdGlvbnMgc3DDqWNpYWxpc8OpZXMgcG91ciBsZSBnYW1lcGxheSAoZmVlZGJhY2ssIHJlYm9uZCwgZXRjLilcbiAqIEhvb2sgc8OpcGFyw6kgY2FyIGxvZ2lxdWUgZCdhbmltYXRpb24gc3DDqWNpZmlxdWUgYXV4IGpldXhcbiAqL1xuY29uc3QgdXNlR2FtZUFuaW1hdGlvbiA9ICgpID0+IHtcbiAgLy8gUsOpZsOpcmVuY2VzIHBvdXIgbGVzIGFuaW1hdGlvbnNcbiAgY29uc3QgZmFkZUFuaW0gPSB1c2VSZWYobmV3IEFuaW1hdGVkLlZhbHVlKDEpKS5jdXJyZW50O1xuICBjb25zdCBib3VuY2VBbmltID0gdXNlUmVmKG5ldyBBbmltYXRlZC5WYWx1ZSgxKSkuY3VycmVudDtcblxuICAvLyBBbmltYXRpb24gZGUgZmVlZGJhY2sgKGZvbmR1KVxuICBjb25zdCBhbmltYXRlRmVlZGJhY2sgPSAoc3VjY2VzcyA9IHRydWUpID0+IHtcbiAgICBjb25zdCB0b1ZhbHVlID0gc3VjY2VzcyA/IDAuNSA6IDAuMztcbiAgICBjb25zdCBkdXJhdGlvbiA9IHN1Y2Nlc3MgPyAyMDAgOiAxNTA7XG5cbiAgICBBbmltYXRlZC5zZXF1ZW5jZShbXG4gICAgICBBbmltYXRlZC50aW1pbmcoZmFkZUFuaW0sIHtcbiAgICAgICAgdG9WYWx1ZSxcbiAgICAgICAgZHVyYXRpb24sXG4gICAgICAgIHVzZU5hdGl2ZURyaXZlcjogdHJ1ZSxcbiAgICAgIH0pLFxuICAgICAgQW5pbWF0ZWQudGltaW5nKGZhZGVBbmltLCB7XG4gICAgICAgIHRvVmFsdWU6IDEsXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgICB1c2VOYXRpdmVEcml2ZXI6IHRydWUsXG4gICAgICB9KSxcbiAgICBdKS5zdGFydCgpO1xuICB9O1xuXG4gIC8vIEFuaW1hdGlvbiBkZSByZWJvbmRcbiAgY29uc3QgYW5pbWF0ZUJvdW5jZSA9ICgpID0+IHtcbiAgICBBbmltYXRlZC5zZXF1ZW5jZShbXG4gICAgICBBbmltYXRlZC50aW1pbmcoYm91bmNlQW5pbSwge1xuICAgICAgICB0b1ZhbHVlOiAxLjEsXG4gICAgICAgIGR1cmF0aW9uOiAxMDAsXG4gICAgICAgIHVzZU5hdGl2ZURyaXZlcjogdHJ1ZSxcbiAgICAgIH0pLFxuICAgICAgQW5pbWF0ZWQudGltaW5nKGJvdW5jZUFuaW0sIHtcbiAgICAgICAgdG9WYWx1ZTogMSxcbiAgICAgICAgZHVyYXRpb246IDEwMCxcbiAgICAgICAgdXNlTmF0aXZlRHJpdmVyOiB0cnVlLFxuICAgICAgfSksXG4gICAgXSkuc3RhcnQoKTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGZhZGVBbmltLFxuICAgIGJvdW5jZUFuaW0sXG4gICAgYW5pbWF0ZUZlZWRiYWNrLFxuICAgIGFuaW1hdGVCb3VuY2VcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUdhbWVBbmltYXRpb247Il0sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBT0EsSUFBTUUsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFnQkEsQ0FBQSxFQUFTO0VBRTdCLElBQU1DLFFBQVEsR0FBRyxJQUFBQyxhQUFNLEVBQUMsSUFBSUMscUJBQVEsQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUNDLE9BQU87RUFDdEQsSUFBTUMsVUFBVSxHQUFHLElBQUFKLGFBQU0sRUFBQyxJQUFJQyxxQkFBUSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsT0FBTztFQUd4RCxJQUFNRSxlQUFlLEdBQUcsU0FBbEJBLGVBQWVBLENBQUEsRUFBdUI7SUFBQSxJQUFuQkMsT0FBTyxHQUFBQyxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFBRyxJQUFJO0lBQ3JDLElBQU1HLE9BQU8sR0FBR0osT0FBTyxHQUFHLEdBQUcsR0FBRyxHQUFHO0lBQ25DLElBQU1LLFFBQVEsR0FBR0wsT0FBTyxHQUFHLEdBQUcsR0FBRyxHQUFHO0lBRXBDTCxxQkFBUSxDQUFDVyxRQUFRLENBQUMsQ0FDaEJYLHFCQUFRLENBQUNZLE1BQU0sQ0FBQ2QsUUFBUSxFQUFFO01BQ3hCVyxPQUFPLEVBQVBBLE9BQU87TUFDUEMsUUFBUSxFQUFSQSxRQUFRO01BQ1JHLGVBQWUsRUFBRTtJQUNuQixDQUFDLENBQUMsRUFDRmIscUJBQVEsQ0FBQ1ksTUFBTSxDQUFDZCxRQUFRLEVBQUU7TUFDeEJXLE9BQU8sRUFBRSxDQUFDO01BQ1ZDLFFBQVEsRUFBUkEsUUFBUTtNQUNSRyxlQUFlLEVBQUU7SUFDbkIsQ0FBQyxDQUFDLENBQ0gsQ0FBQyxDQUFDQyxLQUFLLENBQUMsQ0FBQztFQUNaLENBQUM7RUFHRCxJQUFNQyxhQUFhLEdBQUcsU0FBaEJBLGFBQWFBLENBQUEsRUFBUztJQUMxQmYscUJBQVEsQ0FBQ1csUUFBUSxDQUFDLENBQ2hCWCxxQkFBUSxDQUFDWSxNQUFNLENBQUNULFVBQVUsRUFBRTtNQUMxQk0sT0FBTyxFQUFFLEdBQUc7TUFDWkMsUUFBUSxFQUFFLEdBQUc7TUFDYkcsZUFBZSxFQUFFO0lBQ25CLENBQUMsQ0FBQyxFQUNGYixxQkFBUSxDQUFDWSxNQUFNLENBQUNULFVBQVUsRUFBRTtNQUMxQk0sT0FBTyxFQUFFLENBQUM7TUFDVkMsUUFBUSxFQUFFLEdBQUc7TUFDYkcsZUFBZSxFQUFFO0lBQ25CLENBQUMsQ0FBQyxDQUNILENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7RUFDWixDQUFDO0VBRUQsT0FBTztJQUNMaEIsUUFBUSxFQUFSQSxRQUFRO0lBQ1JLLFVBQVUsRUFBVkEsVUFBVTtJQUNWQyxlQUFlLEVBQWZBLGVBQWU7SUFDZlcsYUFBYSxFQUFiQTtFQUNGLENBQUM7QUFDSCxDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FFYXJCLGdCQUFnQiIsImlnbm9yZUxpc3QiOltdfQ==