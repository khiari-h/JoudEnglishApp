4df127139e04ef91ea703ea880b5ba21
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isLastQuestionInSection = exports.getLevelColor = exports.getAssessmentSections = exports.getAssessmentData = void 0;
var _assessmentsA = _interopRequireDefault(require("../../data/assessment/assessmentsA1"));
var getAssessmentData = exports.getAssessmentData = function getAssessmentData(level) {
  var dataMap = {
    A1: _assessmentsA.default
  };
  return dataMap[level] || _assessmentsA.default;
};
var getLevelColor = exports.getLevelColor = function getLevelColor(level) {
  var colors = {
    A1: "#3b82f6",
    A2: "#8b5cf6",
    B1: "#10b981",
    B2: "#f59e0b",
    C1: "#ef4444",
    C2: "#6366f1"
  };
  return colors[level] || "#4361EE";
};
var getAssessmentSections = exports.getAssessmentSections = function getAssessmentSections() {
  return ["vocabulary", "grammar", "phrases_expressions", "numbers_time", "can_cant", "prepositions", "demonstratives", "error_correction", "spelling", "spelling_rules", "reading_comprehension"];
};
var isLastQuestionInSection = exports.isLastQuestionInSection = function isLastQuestionInSection(questionIndex, section, assessmentData) {
  if (!assessmentData || !assessmentData[section]) return false;
  return questionIndex === assessmentData[section].questions.length - 1;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYXNzZXNzbWVudHNBIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJnZXRBc3Nlc3NtZW50RGF0YSIsImV4cG9ydHMiLCJsZXZlbCIsImRhdGFNYXAiLCJBMSIsImxldmVsQTFBc3Nlc3NtZW50RGF0YSIsImdldExldmVsQ29sb3IiLCJjb2xvcnMiLCJBMiIsIkIxIiwiQjIiLCJDMSIsIkMyIiwiZ2V0QXNzZXNzbWVudFNlY3Rpb25zIiwiaXNMYXN0UXVlc3Rpb25JblNlY3Rpb24iLCJxdWVzdGlvbkluZGV4Iiwic2VjdGlvbiIsImFzc2Vzc21lbnREYXRhIiwicXVlc3Rpb25zIiwibGVuZ3RoIl0sInNvdXJjZXMiOlsiYXNzZXNzbWVudERhdGFIZWxwZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2Fzc2Vzc21lbnQvYXNzZXNzbWVudERhdGFIZWxwZXIuanNcblxuLy8gSW1wb3J0IGRlcyBkb25uw6llcyBkJ8OpdmFsdWF0aW9uIHBhciBuaXZlYXVcbmltcG9ydCBsZXZlbEExQXNzZXNzbWVudERhdGEgZnJvbSBcIi4uLy4uL2RhdGEvYXNzZXNzbWVudC9hc3Nlc3NtZW50c0ExXCI7XG5cbi8qKlxuICogUsOpY3Vww6hyZSBsZXMgZG9ubsOpZXMgZCfDqXZhbHVhdGlvbiBlbiBmb25jdGlvbiBkdSBuaXZlYXVcbiAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbCAtIExlIG5pdmVhdSBkZSBsYW5ndWUgKEExLCBBMiwgQjEsIEIyLCBDMSwgQzIpXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBMZXMgZG9ubsOpZXMgZCfDqXZhbHVhdGlvbiBwb3VyIGxlIG5pdmVhdSBzcMOpY2lmacOpXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRBc3Nlc3NtZW50RGF0YSA9IChsZXZlbCkgPT4ge1xuICBjb25zdCBkYXRhTWFwID0ge1xuICAgIEExOiBsZXZlbEExQXNzZXNzbWVudERhdGEsXG4gIH07XG4gIHJldHVybiBkYXRhTWFwW2xldmVsXSB8fCBsZXZlbEExQXNzZXNzbWVudERhdGE7XG59O1xuXG4vKipcbiAqIFLDqWN1cMOocmUgbGEgY291bGV1ciBhc3NvY2nDqWUgw6AgdW4gbml2ZWF1IGRlIGxhbmd1ZVxuICogQHBhcmFtIHtzdHJpbmd9IGxldmVsIC0gTGUgbml2ZWF1IGRlIGxhbmd1ZSAoQTEsIEEyLCBCMSwgQjIsIEMxLCBDMilcbiAqIEByZXR1cm5zIHtzdHJpbmd9IENvZGUgY291bGV1ciBoZXhhZMOpY2ltYWwgcG91ciBsZSBuaXZlYXVcbiAqL1xuZXhwb3J0IGNvbnN0IGdldExldmVsQ29sb3IgPSAobGV2ZWwpID0+IHtcbiAgY29uc3QgY29sb3JzID0ge1xuICAgIEExOiBcIiMzYjgyZjZcIiwgLy8gQmxldVxuICAgIEEyOiBcIiM4YjVjZjZcIiwgLy8gVmlvbGV0XG4gICAgQjE6IFwiIzEwYjk4MVwiLCAvLyBWZXJ0XG4gICAgQjI6IFwiI2Y1OWUwYlwiLCAvLyBPcmFuZ2VcbiAgICBDMTogXCIjZWY0NDQ0XCIsIC8vIFJvdWdlXG4gICAgQzI6IFwiIzYzNjZmMVwiLCAvLyBJbmRpZ29cbiAgfTtcbiAgcmV0dXJuIGNvbG9yc1tsZXZlbF0gfHwgXCIjNDM2MUVFXCI7IC8vIENvdWxldXIgcGFyIGTDqWZhdXRcbn07XG5cbi8qKlxuICogT2J0aWVudCBsZXMgc2VjdGlvbnMgZGUgbCfDqXZhbHVhdGlvblxuICogQHJldHVybnMge0FycmF5fSBMaXN0ZSBkZXMgc2VjdGlvbnMgZGlzcG9uaWJsZXMgKDExIHNlY3Rpb25zIMOXIDUgcXVlc3Rpb25zID0gNTUgcXVlc3Rpb25zKVxuICovXG5leHBvcnQgY29uc3QgZ2V0QXNzZXNzbWVudFNlY3Rpb25zID0gKCkgPT4gW1xuICBcInZvY2FidWxhcnlcIixcbiAgXCJncmFtbWFyXCIsXG4gIFwicGhyYXNlc19leHByZXNzaW9uc1wiLFxuICBcIm51bWJlcnNfdGltZVwiLCAgICAgICAgLy8g4oaQIEFKT1VUw4lcbiAgXCJjYW5fY2FudFwiLCAgICAgICAgICAgLy8g4oaQIEFKT1VUw4lcbiAgXCJwcmVwb3NpdGlvbnNcIiwgICAgICAgLy8g4oaQIEFKT1VUw4lcbiAgXCJkZW1vbnN0cmF0aXZlc1wiLCAgICAgLy8g4oaQIEFKT1VUw4lcbiAgXCJlcnJvcl9jb3JyZWN0aW9uXCIsXG4gIFwic3BlbGxpbmdcIixcbiAgXCJzcGVsbGluZ19ydWxlc1wiLFxuICBcInJlYWRpbmdfY29tcHJlaGVuc2lvblwiLFxuXTtcblxuLyoqXG4gKiBWw6lyaWZpZSBzaSBjJ2VzdCBsYSBkZXJuacOocmUgcXVlc3Rpb24gZGFucyB1bmUgc2VjdGlvblxuICogQHBhcmFtIHtudW1iZXJ9IHF1ZXN0aW9uSW5kZXggLSBJbmRleCBkZSBsYSBxdWVzdGlvbiBhY3R1ZWxsZVxuICogQHBhcmFtIHtzdHJpbmd9IHNlY3Rpb24gLSBTZWN0aW9uIGFjdHVlbGxlXG4gKiBAcGFyYW0ge09iamVjdH0gYXNzZXNzbWVudERhdGEgLSBEb25uw6llcyBkJ8OpdmFsdWF0aW9uXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVnJhaSBzaSBjJ2VzdCBsYSBkZXJuacOocmUgcXVlc3Rpb24gZGUgbGEgc2VjdGlvblxuICovXG5leHBvcnQgY29uc3QgaXNMYXN0UXVlc3Rpb25JblNlY3Rpb24gPSAoXG4gIHF1ZXN0aW9uSW5kZXgsXG4gIHNlY3Rpb24sXG4gIGFzc2Vzc21lbnREYXRhXG4pID0+IHtcbiAgaWYgKCFhc3Nlc3NtZW50RGF0YSB8fCAhYXNzZXNzbWVudERhdGFbc2VjdGlvbl0pIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHF1ZXN0aW9uSW5kZXggPT09IGFzc2Vzc21lbnREYXRhW3NlY3Rpb25dLnF1ZXN0aW9ucy5sZW5ndGggLSAxO1xufTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFHQSxJQUFBQSxhQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFPTyxJQUFNQyxpQkFBaUIsR0FBQUMsT0FBQSxDQUFBRCxpQkFBQSxHQUFHLFNBQXBCQSxpQkFBaUJBLENBQUlFLEtBQUssRUFBSztFQUMxQyxJQUFNQyxPQUFPLEdBQUc7SUFDZEMsRUFBRSxFQUFFQztFQUNOLENBQUM7RUFDRCxPQUFPRixPQUFPLENBQUNELEtBQUssQ0FBQyxJQUFJRyxxQkFBcUI7QUFDaEQsQ0FBQztBQU9NLElBQU1DLGFBQWEsR0FBQUwsT0FBQSxDQUFBSyxhQUFBLEdBQUcsU0FBaEJBLGFBQWFBLENBQUlKLEtBQUssRUFBSztFQUN0QyxJQUFNSyxNQUFNLEdBQUc7SUFDYkgsRUFBRSxFQUFFLFNBQVM7SUFDYkksRUFBRSxFQUFFLFNBQVM7SUFDYkMsRUFBRSxFQUFFLFNBQVM7SUFDYkMsRUFBRSxFQUFFLFNBQVM7SUFDYkMsRUFBRSxFQUFFLFNBQVM7SUFDYkMsRUFBRSxFQUFFO0VBQ04sQ0FBQztFQUNELE9BQU9MLE1BQU0sQ0FBQ0wsS0FBSyxDQUFDLElBQUksU0FBUztBQUNuQyxDQUFDO0FBTU0sSUFBTVcscUJBQXFCLEdBQUFaLE9BQUEsQ0FBQVkscUJBQUEsR0FBRyxTQUF4QkEscUJBQXFCQSxDQUFBO0VBQUEsT0FBUyxDQUN6QyxZQUFZLEVBQ1osU0FBUyxFQUNULHFCQUFxQixFQUNyQixjQUFjLEVBQ2QsVUFBVSxFQUNWLGNBQWMsRUFDZCxnQkFBZ0IsRUFDaEIsa0JBQWtCLEVBQ2xCLFVBQVUsRUFDVixnQkFBZ0IsRUFDaEIsdUJBQXVCLENBQ3hCO0FBQUE7QUFTTSxJQUFNQyx1QkFBdUIsR0FBQWIsT0FBQSxDQUFBYSx1QkFBQSxHQUFHLFNBQTFCQSx1QkFBdUJBLENBQ2xDQyxhQUFhLEVBQ2JDLE9BQU8sRUFDUEMsY0FBYyxFQUNYO0VBQ0gsSUFBSSxDQUFDQSxjQUFjLElBQUksQ0FBQ0EsY0FBYyxDQUFDRCxPQUFPLENBQUMsRUFBRSxPQUFPLEtBQUs7RUFDN0QsT0FBT0QsYUFBYSxLQUFLRSxjQUFjLENBQUNELE9BQU8sQ0FBQyxDQUFDRSxTQUFTLENBQUNDLE1BQU0sR0FBRyxDQUFDO0FBQ3ZFLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=