{"version":3,"names":["_assessmentsA","_interopRequireDefault","require","getAssessmentData","exports","level","dataMap","A1","levelA1AssessmentData","getLevelColor","colors","A2","B1","B2","C1","C2","getAssessmentSections","isLastQuestionInSection","questionIndex","section","assessmentData","questions","length"],"sources":["assessmentDataHelper.js"],"sourcesContent":["// src/utils/assessment/assessmentDataHelper.js\n\n// Import des données d'évaluation par niveau\nimport levelA1AssessmentData from \"../../data/assessment/assessmentsA1\";\n\n/**\n * Récupère les données d'évaluation en fonction du niveau\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {Object} Les données d'évaluation pour le niveau spécifié\n */\nexport const getAssessmentData = (level) => {\n  const dataMap = {\n    A1: levelA1AssessmentData,\n  };\n  return dataMap[level] || levelA1AssessmentData;\n};\n\n/**\n * Récupère la couleur associée à un niveau de langue\n * @param {string} level - Le niveau de langue (A1, A2, B1, B2, C1, C2)\n * @returns {string} Code couleur hexadécimal pour le niveau\n */\nexport const getLevelColor = (level) => {\n  const colors = {\n    A1: \"#3b82f6\", // Bleu\n    A2: \"#8b5cf6\", // Violet\n    B1: \"#10b981\", // Vert\n    B2: \"#f59e0b\", // Orange\n    C1: \"#ef4444\", // Rouge\n    C2: \"#6366f1\", // Indigo\n  };\n  return colors[level] || \"#4361EE\"; // Couleur par défaut\n};\n\n/**\n * Obtient les sections de l'évaluation\n * @returns {Array} Liste des sections disponibles (11 sections × 5 questions = 55 questions)\n */\nexport const getAssessmentSections = () => [\n  \"vocabulary\",\n  \"grammar\",\n  \"phrases_expressions\",\n  \"numbers_time\",        // ← AJOUTÉ\n  \"can_cant\",           // ← AJOUTÉ\n  \"prepositions\",       // ← AJOUTÉ\n  \"demonstratives\",     // ← AJOUTÉ\n  \"error_correction\",\n  \"spelling\",\n  \"spelling_rules\",\n  \"reading_comprehension\",\n];\n\n/**\n * Vérifie si c'est la dernière question dans une section\n * @param {number} questionIndex - Index de la question actuelle\n * @param {string} section - Section actuelle\n * @param {Object} assessmentData - Données d'évaluation\n * @returns {boolean} Vrai si c'est la dernière question de la section\n */\nexport const isLastQuestionInSection = (\n  questionIndex,\n  section,\n  assessmentData\n) => {\n  if (!assessmentData || !assessmentData[section]) return false;\n  return questionIndex === assessmentData[section].questions.length - 1;\n};\n"],"mappings":";;;;;AAGA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AAOO,IAAMC,iBAAiB,GAAAC,OAAA,CAAAD,iBAAA,GAAG,SAApBA,iBAAiBA,CAAIE,KAAK,EAAK;EAC1C,IAAMC,OAAO,GAAG;IACdC,EAAE,EAAEC;EACN,CAAC;EACD,OAAOF,OAAO,CAACD,KAAK,CAAC,IAAIG,qBAAqB;AAChD,CAAC;AAOM,IAAMC,aAAa,GAAAL,OAAA,CAAAK,aAAA,GAAG,SAAhBA,aAAaA,CAAIJ,KAAK,EAAK;EACtC,IAAMK,MAAM,GAAG;IACbH,EAAE,EAAE,SAAS;IACbI,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE;EACN,CAAC;EACD,OAAOL,MAAM,CAACL,KAAK,CAAC,IAAI,SAAS;AACnC,CAAC;AAMM,IAAMW,qBAAqB,GAAAZ,OAAA,CAAAY,qBAAA,GAAG,SAAxBA,qBAAqBA,CAAA;EAAA,OAAS,CACzC,YAAY,EACZ,SAAS,EACT,qBAAqB,EACrB,cAAc,EACd,UAAU,EACV,cAAc,EACd,gBAAgB,EAChB,kBAAkB,EAClB,UAAU,EACV,gBAAgB,EAChB,uBAAuB,CACxB;AAAA;AASM,IAAMC,uBAAuB,GAAAb,OAAA,CAAAa,uBAAA,GAAG,SAA1BA,uBAAuBA,CAClCC,aAAa,EACbC,OAAO,EACPC,cAAc,EACX;EACH,IAAI,CAACA,cAAc,IAAI,CAACA,cAAc,CAACD,OAAO,CAAC,EAAE,OAAO,KAAK;EAC7D,OAAOD,aAAa,KAAKE,cAAc,CAACD,OAAO,CAAC,CAACE,SAAS,CAACC,MAAM,GAAG,CAAC;AACvE,CAAC","ignoreList":[]}