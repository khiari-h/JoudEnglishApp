{"version":3,"names":["_reactNative","require","_NavigationButtons","_interopRequireDefault","_style","_jsxRuntime","WordGamesNavigation","_ref","currentGame","showFeedback","_ref$selectedItems","selectedItems","isLastGame","canGoPrevious","_ref$levelColor","levelColor","onCheckAnswer","onNext","onPrevious","styles","createStyles","isMatchingOrAutoComplete","type","hasSelection","length","canCheckAnswer","jsx","View","style","container","children","TouchableOpacity","checkButton","disabledButton","backgroundColor","onPress","disabled","activeOpacity","Text","checkButtonText","instructionContainer","instructionText","default","undefined","disablePrevious","disableNext","primaryColor","isLast","buttonLabels","next","previous","finish","layout","_default","exports"],"sources":["index.js"],"sourcesContent":["// WordGamesNavigation/index.js - VERSION REFACTORIS√âE avec NavigationButtons\r\n\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport NavigationButtons from \"../../../../components/exercise-common/NavigationButtons\";\r\nimport createStyles from \"./style\";\r\n\r\n/**\r\n * üéØ WordGamesNavigation - Version Refactoris√©e\r\n * Utilise NavigationButtons pour la navigation + bouton Check Answer custom\r\n * \r\n * @param {object} currentGame - Jeu actuel\r\n * @param {boolean} showFeedback - Afficher le feedback ou non\r\n * @param {array} selectedItems - Items s√©lectionn√©s\r\n * @param {boolean} isLastGame - Dernier jeu\r\n * @param {boolean} canGoPrevious - Peut aller en arri√®re\r\n * @param {string} levelColor - Couleur du niveau\r\n * @param {function} onCheckAnswer - V√©rifier la r√©ponse\r\n * @param {function} onNext - Jeu suivant\r\n * @param {function} onPrevious - Jeu pr√©c√©dent\r\n */\r\nconst WordGamesNavigation = ({\r\n  currentGame,\r\n  showFeedback,\r\n  selectedItems = [],\r\n  isLastGame,\r\n  canGoPrevious,\r\n  levelColor = \"#3b82f6\",\r\n  onCheckAnswer,\r\n  onNext,\r\n  onPrevious,\r\n}) => {\r\n  const styles = createStyles(levelColor);\r\n\r\n  // D√©terminer si le bouton Check Answer doit √™tre disponible\r\n  const isMatchingOrAutoComplete = currentGame?.type === \"matching\";\r\n  const hasSelection = selectedItems.length > 0;\r\n  const canCheckAnswer = !isMatchingOrAutoComplete && hasSelection;\r\n\r\n  // Phase 1: Check Answer (pour categorization seulement)\r\n  if (!showFeedback && currentGame?.type === \"categorization\") {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.checkButton,\r\n            !canCheckAnswer && styles.disabledButton,\r\n            { backgroundColor: canCheckAnswer ? levelColor : \"#cbd5e1\" },\r\n          ]}\r\n          onPress={onCheckAnswer}\r\n          disabled={!canCheckAnswer}\r\n          activeOpacity={0.8}\r\n        >\r\n          <Text style={styles.checkButtonText}>\r\n            {hasSelection ? \"Check Answer\" : \"Select items to check\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Phase 2: Matching games (auto-complete, pas de bouton Check)\r\n  if (!showFeedback && currentGame?.type === \"matching\") {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.instructionContainer}>\r\n          <Text style={styles.instructionText}>Find all matching pairs</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Phase 3: Navigation apr√®s feedback (tous types de jeux)\r\n  return (\r\n    <View style={styles.container}>\r\n      <NavigationButtons\r\n        onNext={onNext}\r\n        onPrevious={canGoPrevious ? onPrevious : undefined}\r\n        disablePrevious={!canGoPrevious}\r\n        disableNext={false}\r\n        primaryColor={levelColor}\r\n        isLast={isLastGame}\r\n        buttonLabels={{\r\n          next: isLastGame ? \"See Results\" : \"Next Game\",\r\n          previous: \"Previous Game\",\r\n          finish: \"See Results\"\r\n        }}\r\n        layout=\"full\" // Utilise toute la largeur\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default WordGamesNavigation;"],"mappings":"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","ignoreList":[]}