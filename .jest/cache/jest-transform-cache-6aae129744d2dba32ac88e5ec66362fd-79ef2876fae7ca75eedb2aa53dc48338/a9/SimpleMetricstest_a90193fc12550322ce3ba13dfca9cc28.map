{"version":3,"names":["_getJestObj","mock","__esModule","default","jest","fn","_interopRequireDefault","require","_react","_reactNative","_SimpleMetrics","_ThemeContext","_jsxRuntime","_require","describe","mockTheme","colors","surface","text","textSecondary","useActivityMetrics","useDailyWords","renderComponent","props","arguments","length","undefined","render","jsx","ThemeContext","Provider","value","children","Object","assign","beforeEach","clearAllMocks","it","mockReturnValue","currentStreak","streakTrend","formattedTime","wordsToday","isLoading","_renderComponent","getByText","expect","toBeTruthy","_renderComponent2","_renderComponent3","_renderComponent4","_renderComponent5","_renderComponent6","getAllByText","zeroElements","toBeGreaterThan","_renderComponent7","accentColor","_render","_renderComponent8","_renderComponent9"],"sources":["SimpleMetrics.test.js"],"sourcesContent":["// __tests__/screens/Dashboard/components/SimpleMetrics.test.js\nimport React from 'react';\nimport { render } from '@testing-library/react-native';\nimport SimpleMetrics from '../../../../src/screens/Dashboard/components/SimpleMetrics';\nimport { ThemeContext } from '../../../../src/contexts/ThemeContext';\n\n// Mock des hooks\njest.mock('../../../../src/hooks/useActivityMetrics', () => ({\n  __esModule: true,\n  default: jest.fn()\n}));\n\njest.mock('../../../../src/hooks/useDailyWords', () => ({\n  __esModule: true,\n  default: jest.fn()\n}));\n\ndescribe('SimpleMetrics', () => {\n  const mockTheme = {\n    colors: {\n      surface: '#FFFFFF',\n      text: '#1F2937',\n      textSecondary: '#6B7280'\n    }\n  };\n\n  const useActivityMetrics = require('../../../../src/hooks/useActivityMetrics').default;\n  const useDailyWords = require('../../../../src/hooks/useDailyWords').default;\n\n  const renderComponent = (props = {}) => {\n    return render(\n      <ThemeContext.Provider value={mockTheme}>\n        <SimpleMetrics {...props} />\n      </ThemeContext.Provider>\n    );\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('√âtat de chargement', () => {\n    it('devrait afficher l\\'indicateur de chargement', () => {\n      useActivityMetrics.mockReturnValue({\n        currentStreak: 0,\n        streakTrend: null,\n        formattedTime: '0min'\n      });\n\n      useDailyWords.mockReturnValue({\n        wordsToday: 0,\n        isLoading: true\n      });\n\n      const { getByText } = renderComponent();\n      expect(getByText('Chargement des m√©triques...')).toBeTruthy();\n    });\n  });\n\n  describe('√âtat vide', () => {\n    it('devrait afficher l\\'√©tat vide quand aucune activit√©', () => {\n      useActivityMetrics.mockReturnValue({\n        currentStreak: 0,\n        streakTrend: null,\n        formattedTime: '0min'\n      });\n\n      useDailyWords.mockReturnValue({\n        wordsToday: 0,\n        isLoading: false\n      });\n\n      const { getByText } = renderComponent();\n      \n      expect(getByText('üéØ')).toBeTruthy();\n      expect(getByText('Commencez votre premi√®re session !')).toBeTruthy();\n      expect(getByText('Vos statistiques appara√Ætront ici')).toBeTruthy();\n    });\n  });\n\n  describe('Affichage des m√©triques', () => {\n    it('devrait afficher toutes les m√©triques avec activit√©', () => {\n      useActivityMetrics.mockReturnValue({\n        currentStreak: 5,\n        streakTrend: '+1 üî•',\n        formattedTime: '15min'\n      });\n\n      useDailyWords.mockReturnValue({\n        wordsToday: 12,\n        isLoading: false\n      });\n\n      const { getByText } = renderComponent();\n      \n      expect(getByText('üìä Aujourd\\'hui')).toBeTruthy();\n      expect(getByText('üî•')).toBeTruthy();\n      expect(getByText('üìö')).toBeTruthy();\n      expect(getByText('‚è±Ô∏è')).toBeTruthy();\n      expect(getByText('5')).toBeTruthy();\n      expect(getByText('12')).toBeTruthy();\n      expect(getByText('15min')).toBeTruthy();\n      expect(getByText('Jours de suite')).toBeTruthy();\n      expect(getByText('Mots aujourd\\'hui')).toBeTruthy();\n      expect(getByText('Temps aujourd\\'hui')).toBeTruthy();\n    });\n\n    it('devrait afficher le trend pour le streak', () => {\n      useActivityMetrics.mockReturnValue({\n        currentStreak: 3,\n        streakTrend: '+2 üí™',\n        formattedTime: '10min'\n      });\n\n      useDailyWords.mockReturnValue({\n        wordsToday: 8,\n        isLoading: false\n      });\n\n      const { getByText } = renderComponent();\n      expect(getByText('+2 üí™')).toBeTruthy();\n    });\n  });\n\n  describe('Gestion des valeurs nulles', () => {\n    it('devrait g√©rer les valeurs nulles gracieusement', () => {\n      useActivityMetrics.mockReturnValue({\n        currentStreak: null,\n        streakTrend: null,\n        formattedTime: null\n      });\n\n      useDailyWords.mockReturnValue({\n        wordsToday: null,\n        isLoading: false\n      });\n\n      const { getByText } = renderComponent();\n      expect(getByText('Commencez votre premi√®re session !')).toBeTruthy();\n    });\n\n    it('devrait afficher 0 pour les valeurs undefined', () => {\n      useActivityMetrics.mockReturnValue({\n        currentStreak: undefined,\n        streakTrend: null,\n        formattedTime: '5min'\n      });\n\n      useDailyWords.mockReturnValue({\n        wordsToday: undefined,\n        isLoading: false\n      });\n\n      const { getByText, getAllByText } = renderComponent();\n      const zeroElements = getAllByText('0');\n      expect(zeroElements.length).toBeGreaterThan(0); // Au moins un √©l√©ment avec \"0\"\n      expect(getByText('5min')).toBeTruthy();\n    });\n  });\n\n  describe('Couleurs et th√®me', () => {\n    it('devrait utiliser la couleur d\\'accent personnalis√©e', () => {\n      useActivityMetrics.mockReturnValue({\n        currentStreak: 0,\n        streakTrend: null,\n        formattedTime: '0min'\n      });\n\n      useDailyWords.mockReturnValue({\n        wordsToday: 0,\n        isLoading: true\n      });\n\n      const { getByText } = renderComponent({ accentColor: '#FF5722' });\n      expect(getByText('Chargement des m√©triques...')).toBeTruthy();\n    });\n\n    it('devrait fonctionner sans contexte de th√®me', () => {\n      useActivityMetrics.mockReturnValue({\n        currentStreak: 1,\n        streakTrend: null,\n        formattedTime: '5min'\n      });\n\n      useDailyWords.mockReturnValue({\n        wordsToday: 3,\n        isLoading: false\n      });\n\n      const { getByText } = render(<SimpleMetrics />);\n      expect(getByText('üìä Aujourd\\'hui')).toBeTruthy();\n    });\n  });\n\n  describe('Cas limites', () => {\n    it('devrait afficher les m√©triques avec une seule valeur non-nulle', () => {\n      useActivityMetrics.mockReturnValue({\n        currentStreak: 0,\n        streakTrend: null,\n        formattedTime: '0min'\n      });\n\n      useDailyWords.mockReturnValue({\n        wordsToday: 1,\n        isLoading: false\n      });\n\n      const { getByText } = renderComponent();\n      expect(getByText('üìä Aujourd\\'hui')).toBeTruthy();\n      expect(getByText('1')).toBeTruthy();\n    });\n\n    it('devrait g√©rer les grandes valeurs', () => {\n      useActivityMetrics.mockReturnValue({\n        currentStreak: 365,\n        streakTrend: '+1 üèÜ',\n        formattedTime: '2h 45min'\n      });\n\n      useDailyWords.mockReturnValue({\n        wordsToday: 100,\n        isLoading: false\n      });\n\n      const { getByText } = renderComponent();\n      expect(getByText('365')).toBeTruthy();\n      expect(getByText('100')).toBeTruthy();\n      expect(getByText('2h 45min')).toBeTruthy();\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}