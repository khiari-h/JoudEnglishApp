{"version":3,"names":["_getJestObj","mock","useSegments","jest","fn","usePathname","__esModule","default","startSession","endSession","updateStreak","_interopRequireDefault","require","_reactNative","_useRouteActivityTracker","_require","describe","mockStartSession","mockEndSession","mockUpdateStreak","mockUseSegments","mockUsePathname","mockUseActivityMetrics","beforeEach","clearAllMocks","mockReturnValue","it","expect","renderHook","useRouteActivityTracker","not","toThrow","toHaveBeenCalled","toHaveBeenCalledWith","toHaveBeenCalledTimes","_renderHook","rerender","_renderHook2","act","_renderHook3","mockStartSessionWithError","mockImplementation","Error","consoleWarnSpy","spyOn","console","mockRestore","mockEndSessionWithError","_renderHook4","_renderHook5","unmount","_renderHook6","_renderHook7","_renderHook8","_renderHook9","i"],"sources":["useRouteActivityTracker.test.js"],"sourcesContent":["// __tests__/hooks/useRouteActivityTracker.test.js\nimport { renderHook, act } from '@testing-library/react-native';\nimport useRouteActivityTracker from '../../src/hooks/useRouteActivityTracker';\n\n// Mocks avec des implémentations plus réalistes\njest.mock('expo-router', () => ({\n  useSegments: jest.fn(() => []),\n  usePathname: jest.fn(() => '/'),\n}));\n\njest.mock('../../src/hooks/useActivityMetrics', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    startSession: jest.fn(),\n    endSession: jest.fn(),\n    updateStreak: jest.fn(),\n  })),\n}));\n\ndescribe('useRouteActivityTracker', () => {\n  let mockStartSession;\n  let mockEndSession;\n  let mockUpdateStreak;\n  let mockUseSegments;\n  let mockUsePathname;\n  let mockUseActivityMetrics;\n\n  beforeEach(() => {\n    // Réinitialiser tous les mocks avant chaque test\n    jest.clearAllMocks();\n    \n    // Créer des mocks frais pour chaque test\n    mockStartSession = jest.fn();\n    mockEndSession = jest.fn();\n    mockUpdateStreak = jest.fn();\n    \n    mockUseSegments = require('expo-router').useSegments;\n    mockUsePathname = require('expo-router').usePathname;\n    mockUseActivityMetrics = require('../../src/hooks/useActivityMetrics').default;\n    \n    // Configuration par défaut des mocks\n    mockUseActivityMetrics.mockReturnValue({\n      startSession: mockStartSession,\n      endSession: mockEndSession,\n      updateStreak: mockUpdateStreak,\n    });\n    \n    mockUseSegments.mockReturnValue([]);\n    mockUsePathname.mockReturnValue('/');\n  });\n\n  describe('Initialisation du hook', () => {\n    it('devrait s\\'initialiser sans erreur avec des segments vides', () => {\n      mockUseSegments.mockReturnValue([]);\n      mockUsePathname.mockReturnValue('/');\n\n      expect(() => {\n        renderHook(() => useRouteActivityTracker());\n      }).not.toThrow();\n\n      expect(mockStartSession).not.toHaveBeenCalled();\n      expect(mockEndSession).not.toHaveBeenCalled();\n    });\n\n    it('devrait s\\'initialiser sans erreur avec une route normale', () => {\n      mockUseSegments.mockReturnValue(['home', 'dashboard']);\n      mockUsePathname.mockReturnValue('/home/dashboard');\n\n      expect(() => {\n        renderHook(() => useRouteActivityTracker());\n      }).not.toThrow();\n\n      expect(mockStartSession).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Détection des exercices', () => {\n    it('devrait détecter un exercice de vocabulaire', () => {\n      mockUseSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/VocabularyExercise');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n    });\n\n    it('devrait détecter un exercice de grammaire', () => {\n      mockUseSegments.mockReturnValue(['level', 'GrammarExercise']);\n      mockUsePathname.mockReturnValue('/level/GrammarExercise');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('GrammarExercise');\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n    });\n\n    it('devrait détecter un assessment', () => {\n      mockUseSegments.mockReturnValue(['level', 'Assessment']);\n      mockUsePathname.mockReturnValue('/level/Assessment');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('Assessment');\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n    });\n\n    it('devrait détecter les exercices avec une casse différente', () => {\n      mockUseSegments.mockReturnValue(['level', 'vocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/vocabularyExercise');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('vocabularyExercise');\n    });\n\n    it('ne devrait pas détecter une route normale comme exercice', () => {\n      mockUseSegments.mockReturnValue(['home', 'profile']);\n      mockUsePathname.mockReturnValue('/home/profile');\n\n      renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Gestion des sessions', () => {\n    it('devrait éviter les re-déclenchements avec le même pathname', () => {\n      mockUseSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      // Re-render avec les mêmes valeurs\n      rerender();\n\n      // Ne devrait pas déclencher un nouveau startSession\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n    });\n\n    it('devrait gérer la transition entre exercices différents', () => {\n      // Premier rendu avec VocabularyExercise\n      mockUseSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      // Changer vers GrammarExercise\n      mockUseSegments.mockReturnValue(['level', 'GrammarExercise']);\n      mockUsePathname.mockReturnValue('/level/GrammarExercise');\n\n      act(() => {\n        rerender();\n      });\n\n      // Devrait terminer l'ancienne session et en démarrer une nouvelle\n      expect(mockEndSession).toHaveBeenCalledTimes(1);\n      expect(mockUpdateStreak).toHaveBeenCalledTimes(1);\n      expect(mockStartSession).toHaveBeenCalledWith('GrammarExercise');\n      expect(mockStartSession).toHaveBeenCalledTimes(2);\n    });\n\n    it('devrait terminer la session lors du passage à une route normale', () => {\n      // Démarrer avec un exercice\n      mockUseSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      // Passer à une route normale\n      mockUseSegments.mockReturnValue(['home', 'dashboard']);\n      mockUsePathname.mockReturnValue('/home/dashboard');\n\n      act(() => {\n        rerender();\n      });\n\n      expect(mockEndSession).toHaveBeenCalledTimes(1);\n      expect(mockUpdateStreak).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('Gestion des erreurs', () => {\n    it('devrait gérer les erreurs de startSession gracieusement', () => {\n      const mockStartSessionWithError = jest.fn().mockImplementation(() => {\n        throw new Error('Erreur de démarrage de session');\n      });\n      \n      mockUseActivityMetrics.mockReturnValue({\n        startSession: mockStartSessionWithError,\n        endSession: mockEndSession,\n        updateStreak: mockUpdateStreak,\n      });\n\n      mockUseSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/VocabularyExercise');\n\n      // Mock console.warn pour éviter les logs d'erreur dans les tests\n      const consoleWarnSpy = jest.spyOn(console, 'warn').mockImplementation(() => {});\n\n      expect(() => {\n        renderHook(() => useRouteActivityTracker());\n      }).not.toThrow();\n\n      expect(mockStartSessionWithError).toHaveBeenCalledWith('VocabularyExercise');\n      expect(consoleWarnSpy).toHaveBeenCalled();\n\n      consoleWarnSpy.mockRestore();\n    });\n\n    it('devrait gérer les erreurs de endSession gracieusement', () => {\n      const mockEndSessionWithError = jest.fn().mockImplementation(() => {\n        throw new Error('Erreur de fin de session');\n      });\n      \n      mockUseActivityMetrics.mockReturnValue({\n        startSession: mockStartSession,\n        endSession: mockEndSessionWithError,\n        updateStreak: mockUpdateStreak,\n      });\n\n      // Démarrer avec un exercice\n      mockUseSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      // Passer à une route normale pour déclencher endSession\n      mockUseSegments.mockReturnValue(['home', 'dashboard']);\n      mockUsePathname.mockReturnValue('/home/dashboard');\n\n      const consoleWarnSpy = jest.spyOn(console, 'warn').mockImplementation(() => {});\n\n      expect(() => {\n        act(() => {\n          rerender();\n        });\n      }).not.toThrow();\n\n      expect(mockEndSessionWithError).toHaveBeenCalled();\n      expect(consoleWarnSpy).toHaveBeenCalled();\n\n      consoleWarnSpy.mockRestore();\n    });\n  });\n\n  describe('Nettoyage lors du démontage', () => {\n    it('devrait nettoyer correctement une session active lors du démontage', () => {\n      mockUseSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { unmount } = renderHook(() => useRouteActivityTracker());\n\n      // Vérifier qu'une session a été démarrée\n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      // Vérifier qu'aucune session n'a été terminée avant le démontage\n      expect(mockEndSession).not.toHaveBeenCalled();\n\n      // Démonter le hook\n      act(() => {\n        unmount();\n      });\n\n      // Vérifier que endSession a été appelé lors du démontage\n      expect(mockEndSession).toHaveBeenCalledTimes(1);\n    });\n\n    it('ne devrait pas appeler endSession si aucune session n\\'est active', () => {\n      mockUseSegments.mockReturnValue(['home', 'dashboard']);\n      mockUsePathname.mockReturnValue('/home/dashboard');\n\n      const { unmount } = renderHook(() => useRouteActivityTracker());\n\n      // Vérifier qu'aucune session n'a été démarrée\n      expect(mockStartSession).not.toHaveBeenCalled();\n\n      // Démonter le hook\n      act(() => {\n        unmount();\n      });\n\n      // endSession ne devrait pas être appelé car aucune session n'était active\n      expect(mockEndSession).not.toHaveBeenCalled();\n    });\n\n    it('devrait gérer les erreurs lors du nettoyage', () => {\n      const mockEndSessionWithError = jest.fn().mockImplementation(() => {\n        throw new Error('Erreur lors du cleanup');\n      });\n      \n      mockUseActivityMetrics.mockReturnValue({\n        startSession: mockStartSession,\n        endSession: mockEndSessionWithError,\n        updateStreak: mockUpdateStreak,\n      });\n\n      mockUseSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { unmount } = renderHook(() => useRouteActivityTracker());\n\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n\n      const consoleWarnSpy = jest.spyOn(console, 'warn').mockImplementation(() => {});\n\n      // Le démontage ne devrait pas planter malgré l'erreur\n      expect(() => {\n        act(() => {\n          unmount();\n        });\n      }).not.toThrow();\n\n      expect(mockEndSessionWithError).toHaveBeenCalled();\n      expect(consoleWarnSpy).toHaveBeenCalled();\n\n      consoleWarnSpy.mockRestore();\n    });\n  });\n\n  describe('Cas de figure avancés', () => {\n    it('devrait gérer plusieurs changements rapides de routes', () => {\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      // Route 1: Exercice\n      mockUseSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/VocabularyExercise');\n      \n      act(() => {\n        rerender();\n      });\n\n      expect(mockStartSession).toHaveBeenCalledWith('VocabularyExercise');\n\n      // Route 2: Autre exercice\n      mockUseSegments.mockReturnValue(['level', 'GrammarExercise']);\n      mockUsePathname.mockReturnValue('/level/GrammarExercise');\n      \n      act(() => {\n        rerender();\n      });\n\n      // Route 3: Page normale\n      mockUseSegments.mockReturnValue(['home', 'profile']);\n      mockUsePathname.mockReturnValue('/home/profile');\n      \n      act(() => {\n        rerender();\n      });\n\n      // Vérifications finales\n      expect(mockStartSession).toHaveBeenCalledTimes(2);\n      expect(mockEndSession).toHaveBeenCalledTimes(2);\n      expect(mockUpdateStreak).toHaveBeenCalledTimes(2);\n    });\n\n    it('devrait maintenir l\\'état correct lors de re-renders multiples', () => {\n      mockUseSegments.mockReturnValue(['level', 'VocabularyExercise']);\n      mockUsePathname.mockReturnValue('/level/VocabularyExercise');\n\n      const { rerender } = renderHook(() => useRouteActivityTracker());\n\n      // Plusieurs re-renders avec les mêmes données\n      for (let i = 0; i < 5; i++) {\n        rerender();\n      }\n\n      // startSession ne devrait être appelé qu'une seule fois\n      expect(mockStartSession).toHaveBeenCalledTimes(1);\n      expect(mockEndSession).not.toHaveBeenCalled();\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}